{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTc4MTQx", "number": 856, "title": "Support topic message fragmentation with chunking of messages", "bodyText": "Detailed description:\nHAPI is adding chunk support to ConsensusSubmitMessage as part of the 0.6 release.\nTo support this the mirror node will be updated as follows\n\nChunkingInfo fields (chunk_num, chunk_total, payer_accoud_id and valid_start_ns) are added to the topic_message table and associated domain objects in importer and grpc modules\nSupport for default values of chunk info during ingestion. When not present values will be null to optimize on table space\nUpdated ConsensusService proto with ConsensusMessageChunkInfo\nConsensusTopicResponse is updated with ConsensusMessageChunkInfo.\n\nWhich issue(s) this PR fixes:\nFixes #838\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-07-07T18:23:12Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856", "merged": true, "mergeCommit": {"oid": "80952349b8253070dd2c79c4357a4b27e68a986f"}, "closed": true, "closedAt": "2020-07-09T22:37:29Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczF76RgH2gAyNDQ1NTc4MTQxOjcwZWE3YmNjODdkMTE2ODFkNjZjMWFjN2NhNTRlYmNiMWE2OTc1NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczW4z3gFqTQ0NjAxMzk2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "70ea7bcc87d11681d66c1ac7ca54ebcb1a697575", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/70ea7bcc87d11681d66c1ac7ca54ebcb1a697575", "committedDate": "2020-07-09T02:51:11Z", "message": "Support topic message fragmentaton with chunking of messages in importer and grpc\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92787414a29857f3b9251d1ebc9ce91792d9411b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/92787414a29857f3b9251d1ebc9ce91792d9411b", "committedDate": "2020-07-09T02:51:11Z", "message": "Address nullable chunk info in tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70d730f5389c080a0de5f047dd711fea25e10f2b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/70d730f5389c080a0de5f047dd711fea25e10f2b", "committedDate": "2020-07-09T02:51:11Z", "message": "Fix broken grpc tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1689f35328cf3d38842ab4e395dbe2477dcf7ae7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1689f35328cf3d38842ab4e395dbe2477dcf7ae7", "committedDate": "2020-07-09T02:51:11Z", "message": "Added additional tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/87da46c57166db44fe48404c6baf3899eb763663", "committedDate": "2020-07-09T02:51:11Z", "message": "Removed extra out of order message in test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af93c8edc50795ab3cc70b1e493387d669bb5aea", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/af93c8edc50795ab3cc70b1e493387d669bb5aea", "committedDate": "2020-07-08T18:17:10Z", "message": "Removed extra out of order message in test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/87da46c57166db44fe48404c6baf3899eb763663", "committedDate": "2020-07-09T02:51:11Z", "message": "Removed extra out of order message in test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTYzMzE5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#pullrequestreview-444163319", "createdAt": "2020-07-07T18:53:12Z", "commit": {"oid": "607bf4cb8455ec0085870a4bef8eb09d692b83e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo1MzoxMlrOGuLbig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoxNDoyNFrOGvac-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NDk1NA==", "bodyText": "Did you check the previous releases to see if it impacts us and we need to add any response codes, etc besides the chunk specific ones? e.g. 0.4.3+ and 0.5.x if applicable", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r451074954", "createdAt": "2020-07-07T18:53:12Z", "author": {"login": "steven-sheehy"}, "path": "pom.xml", "diffHunk": "@@ -60,7 +60,7 @@\n         <docker.skip.deployer>true</docker.skip.deployer>\n         <docker.tag.version>${project.version}</docker.tag.version>\n         <grpc.version>1.29.0</grpc.version>\n-        <hedera-protobuf.version>0.4.2</hedera-protobuf.version>\n+        <hedera-protobuf.version>0.6.0-alpha1</hedera-protobuf.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607bf4cb8455ec0085870a4bef8eb09d692b83e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NTMwMA==", "bodyText": "nit: I don't think this line should be wrapped. Doesn't look that long.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r451075300", "createdAt": "2020-07-07T18:53:54Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-protobuf/src/main/proto/com/hedera/mirror/api/proto/ConsensusService.proto", "diffHunk": "@@ -53,12 +54,15 @@ message ConsensusTopicResponse {\n     uint64 sequenceNumber = 4; // Starts at 1 for first submitted message. Incremented on each submitted message.\n \n     uint64 runningHashVersion = 5; // Version of the SHA-384 digest used to update the running hash.\n+\n+    .proto.ConsensusMessageChunkInfo chunkInfo = 6; // Optional information of the current chunk in a fragmented message.\n }\n \n //\n // The Mirror Service provides the ability to query a stream of Hedera Consensus Service (HCS) messages for an\n // HCS Topic via a specific (possibly open-ended) time range.\n //\n service ConsensusService {\n-    rpc subscribeTopic (ConsensusTopicQuery) returns (stream ConsensusTopicResponse);\n+    rpc subscribeTopic (ConsensusTopicQuery) returns (stream", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607bf4cb8455ec0085870a4bef8eb09d692b83e5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExNjEyMg==", "bodyText": "I think we have to use regular int to match the proto. With timestamps or sequence numbers we can save space because the main nodes generate them and we can be reasonably sure they'll be low in our lifetime. For chunk num and total they are user input so mirror node will break if a user types in a very high chunk number/total.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r451116122", "createdAt": "2020-07-07T20:13:01Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.26.0__topic_message_fragmentation.sql", "diffHunk": "@@ -0,0 +1,14 @@\n+-------------------\n+-- Support topic message fragmentation by adding columns for ConsensusMessageChunkInfo\n+-------------------\n+\n+-- add payer account and valid start time columns for transaction id. Add chunk count and total columns.\n+alter table if exists topic_message\n+    add column if not exists chunk_num smallint null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607bf4cb8455ec0085870a4bef8eb09d692b83e5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExNzg5OA==", "bodyText": "Would prefer valid_start_timestamp as we should standardize on _timestamp like we do for consensus_timestamp instead of _ns that we do in transaction table. Also the proto object is of type Timestamp and it matches that.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r451117898", "createdAt": "2020-07-07T20:16:47Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.26.0__topic_message_fragmentation.sql", "diffHunk": "@@ -0,0 +1,14 @@\n+-------------------\n+-- Support topic message fragmentation by adding columns for ConsensusMessageChunkInfo\n+-------------------\n+\n+-- add payer account and valid start time columns for transaction id. Add chunk count and total columns.\n+alter table if exists topic_message\n+    add column if not exists chunk_num smallint null,\n+    add column if not exists chunk_total smallint null,\n+    add column if not exists payer_account_id entity_id null,\n+    add column if not exists valid_start_ns nanos_timestamp null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607bf4cb8455ec0085870a4bef8eb09d692b83e5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzNTI5Mw==", "bodyText": "We don't need to explicitly set null values as they are the default. Though we should consider populating real data here to test all fields.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r452335293", "createdAt": "2020-07-09T16:16:51Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/domain/DomainBuilder.java", "diffHunk": "@@ -93,7 +93,11 @@ void setup() {\n                 .runningHash(new byte[] {3, 4, 5})\n                 .sequenceNumber(++sequenceNumber)\n                 .topicNum(0)\n-                .runningHashVersion(2);\n+                .runningHashVersion(2)\n+                .payerAccountId(null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0MzM4OQ==", "bodyText": "I'm not a fan of all these overloaded methods to create a topic message. The whole point of constructing the DomainBuilder was to avoid this by using a single method to construct and passing a consumer to customize extra fields.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r452343389", "createdAt": "2020-07-09T16:29:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/service/TopicMessageServiceTest.java", "diffHunk": "@@ -684,19 +777,45 @@ private void missingMessagesFromListenerTest(TopicMessageFilter filter, Flux<Top\n                 .thenReturn(missingMessages);\n     }\n \n+    private List<TopicMessage> fragmentedTopicMessages(long sequenceNumberStart, int fragmentCount) {\n+        List<TopicMessage> topicMessages = new ArrayList<>();\n+        for (int i = 0; i < fragmentCount; i++) {\n+            long sequenceNumber = sequenceNumberStart + i;\n+            topicMessages.add(topicMessage(sequenceNumber, i + 1, fragmentCount,\n+                    Instant.EPOCH.plus(sequenceNumber, ChronoUnit.NANOS), 3L));\n+        }\n+\n+        return topicMessages;\n+    }\n+\n     private TopicMessage topicMessage(long sequenceNumber) {\n-        return TopicMessage.builder()\n-                .consensusTimestamp(Instant.EPOCH.plus(sequenceNumber, ChronoUnit.NANOS))\n-                .realmNum(0)\n-                .sequenceNumber(sequenceNumber)\n-                .build();\n+        return topicMessage(sequenceNumber, Instant.EPOCH.plus(sequenceNumber, ChronoUnit.NANOS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MzY1MA==", "bodyText": "Would prefer payerAccountEntity.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r452363650", "createdAt": "2020-07-09T17:03:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/domain/TopicMessage.java", "diffHunk": "@@ -72,23 +76,61 @@\n \n     private int topicNum;\n \n+    private Integer chunkNum;\n+\n+    private Integer chunkTotal;\n+\n+    @ToString.Exclude\n+    private Long payerAccountId;\n+\n+    @Getter(lazy = true)\n+    @Transient\n+    private com.hedera.mirror.grpc.domain.Entity payerDecodedAccountId = EncodedIdToEntityIdConverter.INSTANCE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MzkxNQ==", "bodyText": "EncodedIdToEntityConverter since there's no EntityId class in grpc.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r452363915", "createdAt": "2020-07-09T17:04:27Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/converter/EncodedIdToEntityIdConverter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.hedera.mirror.grpc.converter;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import javax.inject.Named;\n+import org.springframework.core.convert.converter.Converter;\n+import org.springframework.data.convert.WritingConverter;\n+\n+import com.hedera.mirror.grpc.domain.Entity;\n+import com.hedera.mirror.grpc.domain.EntityType;\n+\n+@Named\n+@WritingConverter\n+public class EncodedIdToEntityIdConverter implements Converter<Long, Entity> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2OTY1OQ==", "bodyText": "Think the non-mock test is sufficient to verify fragmented messages. I would recommend this type of payload check be moved instead to ConsensusControllerTest as we're not currently testing that mapping.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#discussion_r452369659", "createdAt": "2020-07-09T17:14:24Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/service/TopicMessageServiceTest.java", "diffHunk": "@@ -643,6 +645,97 @@ void missingMessagesFromRetrieverAndListener() {\n                 .verify(Duration.ofMillis(700));\n     }\n \n+    @Test\n+    void fragmentedMessages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87da46c57166db44fe48404c6baf3899eb763663"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b652222744dd4c55b464d02a792a8f60cf59c2f", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3b652222744dd4c55b464d02a792a8f60cf59c2f", "committedDate": "2020-07-09T21:15:03Z", "message": "Addressed feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f854b4816ebe7fee6e9fd1c2df09c2c5e56fa682", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f854b4816ebe7fee6e9fd1c2df09c2c5e56fa682", "committedDate": "2020-07-09T22:10:55Z", "message": "Change validStartNs to validStartTimestamp in grpc\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDA5NjA0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#pullrequestreview-446009604", "createdAt": "2020-07-09T22:25:43Z", "commit": {"oid": "f854b4816ebe7fee6e9fd1c2df09c2c5e56fa682"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d57229c049a69318916a949654f52382c5bb4c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/46d57229c049a69318916a949654f52382c5bb4c", "committedDate": "2020-07-09T22:26:32Z", "message": "Update test fragmentedMessagesGroupAcrossHistoricAndIncoming timestamps\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDEzOTYw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/856#pullrequestreview-446013960", "createdAt": "2020-07-09T22:36:12Z", "commit": {"oid": "46d57229c049a69318916a949654f52382c5bb4c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4062, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}