{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDQ4Mjcw", "number": 1226, "title": "Cache current address book", "bodyText": "Signed-off-by: Ian Jungmann ian.jungmann@hedera.com\nCache the current address book to improve downloader performance\n\nCache the address book when retrieving, keyed by the entity id.\nEvict the cache entry when an update occurs.\n\nWhich issue(s) this PR fixes:\nFixes #996\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-11-03T23:34:57Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226", "merged": true, "mergeCommit": {"oid": "57c0be2c0f0b68954923ccdc43a59168d1b0b5fd"}, "closed": true, "closedAt": "2020-11-05T00:50:38Z", "author": {"login": "ijungmann"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZByQAAH2gAyNTE1MDQ4MjcwOjQyZTVkNzQ0YjA1MjNkMTU3N2ExZGZkOWU1YWMwOTI4MzdiZGRhNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZXeIOAFqTUyMzgzODY4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42e5d744b0523d1577a1dfd9e5ac092837bdda6c", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/42e5d744b0523d1577a1dfd9e5ac092837bdda6c", "committedDate": "2020-11-03T23:30:08Z", "message": "Cache current address book\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0d06b2622b2fa56d770c81f8b69023f58440de", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4f0d06b2622b2fa56d770c81f8b69023f58440de", "committedDate": "2020-11-03T23:38:44Z", "message": "Refactor to not pull in static string\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17", "committedDate": "2020-11-03T23:46:49Z", "message": "Add test for repository layer\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTE5MTI1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523519125", "createdAt": "2020-11-04T16:17:56Z", "commit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoxNzo1NlrOHtfeuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo1OTowNlrOHthQVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2MzczOQ==", "bodyText": "Will this break if someone renames the parameter?\nIf so use p1\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"#encodedFileId\", unless = \"#result == null\")\n          \n          \n            \n                        \"{#p1}\", unless = \"#result == null\")", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517463739", "createdAt": "2020-11-04T16:17:56Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AddressBookRepository.java", "diffHunk": "@@ -20,13 +20,20 @@\n  * \u200d\n  */\n \n+import static com.hedera.mirror.importer.config.CacheConfiguration.NEVER_EXPIRE_LARGE;\n+\n import java.util.Optional;\n+import org.springframework.cache.annotation.Cacheable;\n import org.springframework.data.jpa.repository.Query;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AddressBook;\n \n public interface AddressBookRepository extends CrudRepository<AddressBook, Long> {\n+    public static final String ADDRESS_BOOK_CACHE_NAME = \"address_book\";\n+\n+    @Cacheable(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =\n+            \"#encodedFileId\", unless = \"#result == null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3Njc5OA==", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CacheManager cacheManager;\n          \n          \n            \n                private final CacheManager cacheManager;", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517476798", "createdAt": "2020-11-04T16:36:02Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -57,6 +61,10 @@\n     private final AddressBookRepository addressBookRepository;\n     private final FileDataRepository fileDataRepository;\n \n+    @Qualifier(CacheConfiguration.NEVER_EXPIRE_LARGE)\n+    @Resource\n+    CacheManager cacheManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3NzM2NQ==", "bodyText": "Add a test for the cache eviction scenario if possible", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517477365", "createdAt": "2020-11-04T16:36:52Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImplTest.java", "diffHunk": "@@ -138,6 +145,29 @@ void updateCompleteFile() {\n         assertEquals(10, addressBookEntryRepository.count());\n     }\n \n+    @Test\n+    void cacheAddressBook() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4MTQyMw==", "bodyText": "Unless there's a reason otherwise", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517481423", "createdAt": "2020-11-04T16:42:36Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -57,6 +61,10 @@\n     private final AddressBookRepository addressBookRepository;\n     private final FileDataRepository fileDataRepository;\n \n+    @Qualifier(CacheConfiguration.NEVER_EXPIRE_LARGE)\n+    @Resource\n+    CacheManager cacheManager;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3Njc5OA=="}, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5Mjc5OA==", "bodyText": "What happens if an error occurs before addressBookRepository.save() is called?\nWould the last valid address book be evicted from the cache?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517492798", "createdAt": "2020-11-04T16:59:02Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -78,6 +86,10 @@ public void update(FileData fileData) {\n             parse(fileData);\n         } catch (Exception e) {\n             log.error(\"Unable to parse address book\", e);\n+        } finally {\n+            //Evict the cache regardless of errors\n+            cacheManager.getCache(AddressBookRepository.ADDRESS_BOOK_CACHE_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5MjgyMw==", "bodyText": "Also what about when addressBookRepository.save() is called in parse() then an error occurs after?\nShould we be evicting the new valid address book?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517492823", "createdAt": "2020-11-04T16:59:06Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -78,6 +86,10 @@ public void update(FileData fileData) {\n             parse(fileData);\n         } catch (Exception e) {\n             log.error(\"Unable to parse address book\", e);\n+        } finally {\n+            //Evict the cache regardless of errors\n+            cacheManager.getCache(AddressBookRepository.ADDRESS_BOOK_CACHE_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5Mjc5OA=="}, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTUyNzU2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-522952756", "createdAt": "2020-11-03T23:43:24Z", "commit": {"oid": "4f0d06b2622b2fa56d770c81f8b69023f58440de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzo0MzoyNFrOHtEYAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzowOTo0OVrOHthr-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAxOTY1MQ==", "bodyText": "Should be able to just put @CacheEvict(...) on AddressBookService.update() instead of this manual invocation.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517019651", "createdAt": "2020-11-03T23:43:24Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -78,6 +86,10 @@ public void update(FileData fileData) {\n             parse(fileData);\n         } catch (Exception e) {\n             log.error(\"Unable to parse address book\", e);\n+        } finally {\n+            //Evict the cache regardless of errors\n+            cacheManager.getCache(AddressBookRepository.ADDRESS_BOOK_CACHE_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f0d06b2622b2fa56d770c81f8b69023f58440de"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5OTUzNA==", "bodyText": "I think we're caching at the wrong layer here. We should not cache the repository but the service layer as caching here can cause problems with AddressBookServiceImpl.updatePreviousAddressBook().", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517499534", "createdAt": "2020-11-04T17:09:15Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AddressBookRepository.java", "diffHunk": "@@ -20,13 +20,20 @@\n  * \u200d\n  */\n \n+import static com.hedera.mirror.importer.config.CacheConfiguration.NEVER_EXPIRE_LARGE;\n+\n import java.util.Optional;\n+import org.springframework.cache.annotation.Cacheable;\n import org.springframework.data.jpa.repository.Query;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AddressBook;\n \n public interface AddressBookRepository extends CrudRepository<AddressBook, Long> {\n+    public static final String ADDRESS_BOOK_CACHE_NAME = \"address_book\";\n+\n+    @Cacheable(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5OTg5Nw==", "bodyText": "@Cacheable should be here.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517499897", "createdAt": "2020-11-04T17:09:49Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -90,7 +102,6 @@ public void update(FileData fileData) {\n     public AddressBook getCurrent() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTg5Mjk3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523589297", "createdAt": "2020-11-04T17:37:16Z", "commit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNzoxNlrOHtiu4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNzoxNlrOHtiu4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNzAyNQ==", "bodyText": "I believe it was a mistake for us to have this catch here.\nThe result is an error parsing a valid address book would be caught and we wouldn't retry the whole file.\nCan you remove this catch all together.\nThere shouldn't be any fallout in this minor refactor but let me know if you hit a snag as you address comments that makes it a bigger ask", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517517025", "createdAt": "2020-11-04T17:37:16Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -78,6 +86,10 @@ public void update(FileData fileData) {\n             parse(fileData);\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a526281d1d0f3a35e9c5d7426dd2a6dbd3e77c17"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7176f5aa04da26ed23db883a101f511e6afad95b", "committedDate": "2020-11-04T18:57:29Z", "message": "Address PR comments to move caching fully to service layer\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjg1ODgw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523685880", "createdAt": "2020-11-04T19:50:44Z", "commit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxOTo1MDo0NVrOHtnWPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDowOTowOFrOHtn7ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5MjYzNg==", "bodyText": "I'm hesitant to use a never expiring cache for such an important object. If we have a bug it will never self correct. We use the never expire cache only for entity IDs as they're insert only and not updateable like an address book. Even 30m might be too long and we can get away with much shorter without impacting performance. I think the cacheManager5m might be more appropriate.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517592636", "createdAt": "2020-11-04T19:50:45Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -87,10 +89,11 @@ public void update(FileData fileData) {\n      * @return returns AddressBook containing network node details\n      */\n     @Override\n+    @Cacheable(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5OTAzMg==", "bodyText": "Since we're effectively evicting all entries in the cache (one 102 file), we can just do the following and avoid the reflection penalty of using Spel expressions:\n@CacheEvict(allEntries = true)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517599032", "createdAt": "2020-11-04T20:02:56Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -63,6 +68,8 @@\n      * @param fileData file data entry containing address book bytes\n      */\n     @Override\n+    @CacheEvict(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =\n+            \"#root.target.ADDRESS_BOOK_102_ENTITY_ID.getId()\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5OTY3NQ==", "bodyText": "Use @CacheConfig(cacheNames = \"current_102_address_book\", cacheManager = \"cacheManager5m\") at the class level to stay DRY.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517599675", "createdAt": "2020-11-04T20:04:16Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -63,6 +68,8 @@\n      * @param fileData file data entry containing address book bytes\n      */\n     @Override\n+    @CacheEvict(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMDQ0Mg==", "bodyText": "Since there's current and historical and 101 and 102 address books, we should name this to indicate it's only storing the current 102 address book. e.g.  something likecurrent_102_address_book", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517600442", "createdAt": "2020-11-04T20:05:41Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -53,6 +57,7 @@\n \n     public static final EntityId ADDRESS_BOOK_101_ENTITY_ID = EntityId.of(0, 0, 101, EntityTypeEnum.FILE);\n     public static final EntityId ADDRESS_BOOK_102_ENTITY_ID = EntityId.of(0, 0, 102, EntityTypeEnum.FILE);\n+    public static final String ADDRESS_BOOK_CACHE_NAME = \"address_book\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMjIwNg==", "bodyText": "Can drop the cacheNames, cacheManager and key with my above recommendations.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517602206", "createdAt": "2020-11-04T20:09:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -87,10 +89,11 @@ public void update(FileData fileData) {\n      * @return returns AddressBook containing network node details\n      */\n     @Override\n+    @Cacheable(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjk5MDk5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523699099", "createdAt": "2020-11-04T20:10:32Z", "commit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDoxMDozMlrOHtn-7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDoxMDozMlrOHtn-7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMzA1Mg==", "bodyText": "Undo", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517603052", "createdAt": "2020-11-04T20:10:32Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/repository/AddressBookRepositoryTest.java", "diffHunk": "@@ -23,6 +26,10 @@\n     private final EntityId addressBookEntityId101 = EntityId.of(\"0.0.101\", EntityTypeEnum.FILE);\n     private final EntityId addressBookEntityId102 = EntityId.of(\"0.0.102\", EntityTypeEnum.FILE);\n \n+    @Qualifier(CacheConfiguration.NEVER_EXPIRE_LARGE)\n+    @Resource\n+    CacheManager cacheManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjk5MTYz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523699163", "createdAt": "2020-11-04T20:10:39Z", "commit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDoxMDozOVrOHtn_GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDoxMDozOVrOHtn_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMzA5Ng==", "bodyText": "Undo", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517603096", "createdAt": "2020-11-04T20:10:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AddressBookRepository.java", "diffHunk": "@@ -27,6 +27,7 @@\n import com.hedera.mirror.importer.domain.AddressBook;\n \n public interface AddressBookRepository extends CrudRepository<AddressBook, Long> {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7176f5aa04da26ed23db883a101f511e6afad95b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8318c389afc2fe94da288a7aebf4200c4b2be813", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8318c389afc2fe94da288a7aebf4200c4b2be813", "committedDate": "2020-11-04T20:25:04Z", "message": "Revert Address Book Repository changes due to new caching logic\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzE0MzYy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523714362", "createdAt": "2020-11-04T20:33:59Z", "commit": {"oid": "8318c389afc2fe94da288a7aebf4200c4b2be813"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDozMzo1OVrOHtoubQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDozMzo1OVrOHtoubQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTIxMw==", "bodyText": "the cached address book is built from file 102, here update() may be passed either file 101 or 102, so an update from file 101 will unnecessarily evict the cache", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#discussion_r517615213", "createdAt": "2020-11-04T20:33:59Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -63,6 +68,8 @@\n      * @param fileData file data entry containing address book bytes\n      */\n     @Override\n+    @CacheEvict(cacheNames = ADDRESS_BOOK_CACHE_NAME, cacheManager = NEVER_EXPIRE_LARGE, key =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8318c389afc2fe94da288a7aebf4200c4b2be813"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98fde83cde3877eb945bf6ab4e6c9247d1a337ff", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/98fde83cde3877eb945bf6ab4e6c9247d1a337ff", "committedDate": "2020-11-04T20:40:16Z", "message": "Refactor caching annotations\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa3274fff876aa2ac92e26752fe8e62bf4ff4e02", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aa3274fff876aa2ac92e26752fe8e62bf4ff4e02", "committedDate": "2020-11-04T21:02:25Z", "message": "Rename caching test\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODAzNzcz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523803773", "createdAt": "2020-11-04T23:12:38Z", "commit": {"oid": "aa3274fff876aa2ac92e26752fe8e62bf4ff4e02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODEwMTc3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523810177", "createdAt": "2020-11-04T23:27:52Z", "commit": {"oid": "aa3274fff876aa2ac92e26752fe8e62bf4ff4e02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODM4Njg1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1226#pullrequestreview-523838685", "createdAt": "2020-11-05T00:46:04Z", "commit": {"oid": "aa3274fff876aa2ac92e26752fe8e62bf4ff4e02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3481, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}