{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzY2NDc4", "number": 1320, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowOTo1MlrOFA-t3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowOTo1MlrOFA-t3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTcxODY5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/transactions.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowOTo1MlrOH_iGtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMzo0Njo0OFrOH_mOhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4MTEwOA==", "bodyText": "q: Does this end up contributing to the #1295  bug where transactions for account that don't pay crypto transfer fees.\ni.e. will transactions now be filtered out as a result of this?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1320#discussion_r536381108", "createdAt": "2020-12-04T21:09:52Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -183,16 +195,21 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  let whereClause = [accountQuery, tsQuery, resultTypeQuery, creditDebitQuery, transactionTypeQuery]\n-    .filter((q) => q !== '')\n-    .join(' AND ');\n-  whereClause = whereClause === '' ? '' : `WHERE ${whereClause}`;\n+  const whereClause = buildWhereClause(resultTypeQuery, transactionTypeQuery);\n+  const ctlWhereClause = buildWhereClause(accountQuery, tsQuery, creditDebitQuery);\n+\n   return `\n-    SELECT DISTINCT ctl.consensus_timestamp\n-    FROM crypto_transfer ctl\n-      JOIN transaction t ON t.consensus_ns = ctl.consensus_timestamp\n+    SELECT t.consensus_ns AS consensus_timestamp\n+    FROM transaction t\n+    JOIN (\n+            SELECT DISTINCT consensus_timestamp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39132909095bceadd0956006882eb50e661ae21e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5MjU4OA==", "bodyText": "No. The new query should produce the same list of timestamps , which means for some system accounts transactions without crypto transfer list, they still won\u2019t show up in the transactions result.\nI\u2019ll fix that bug in a separate PR", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1320#discussion_r536392588", "createdAt": "2020-12-04T21:34:11Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -183,16 +195,21 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  let whereClause = [accountQuery, tsQuery, resultTypeQuery, creditDebitQuery, transactionTypeQuery]\n-    .filter((q) => q !== '')\n-    .join(' AND ');\n-  whereClause = whereClause === '' ? '' : `WHERE ${whereClause}`;\n+  const whereClause = buildWhereClause(resultTypeQuery, transactionTypeQuery);\n+  const ctlWhereClause = buildWhereClause(accountQuery, tsQuery, creditDebitQuery);\n+\n   return `\n-    SELECT DISTINCT ctl.consensus_timestamp\n-    FROM crypto_transfer ctl\n-      JOIN transaction t ON t.consensus_ns = ctl.consensus_timestamp\n+    SELECT t.consensus_ns AS consensus_timestamp\n+    FROM transaction t\n+    JOIN (\n+            SELECT DISTINCT consensus_timestamp", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4MTEwOA=="}, "originalCommit": {"oid": "39132909095bceadd0956006882eb50e661ae21e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0ODY0Ng==", "bodyText": "Sounds good", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1320#discussion_r536448646", "createdAt": "2020-12-04T23:46:48Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -183,16 +195,21 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  let whereClause = [accountQuery, tsQuery, resultTypeQuery, creditDebitQuery, transactionTypeQuery]\n-    .filter((q) => q !== '')\n-    .join(' AND ');\n-  whereClause = whereClause === '' ? '' : `WHERE ${whereClause}`;\n+  const whereClause = buildWhereClause(resultTypeQuery, transactionTypeQuery);\n+  const ctlWhereClause = buildWhereClause(accountQuery, tsQuery, creditDebitQuery);\n+\n   return `\n-    SELECT DISTINCT ctl.consensus_timestamp\n-    FROM crypto_transfer ctl\n-      JOIN transaction t ON t.consensus_ns = ctl.consensus_timestamp\n+    SELECT t.consensus_ns AS consensus_timestamp\n+    FROM transaction t\n+    JOIN (\n+            SELECT DISTINCT consensus_timestamp", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4MTEwOA=="}, "originalCommit": {"oid": "39132909095bceadd0956006882eb50e661ae21e"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1306, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}