{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzM0MTk5", "number": 646, "title": "Add tests for TransactionHandler.getEntityId()", "bodyText": "Detailed description:\nSigned-off-by: Apekshit Sharma apekshit.sharma@hedera.com\nWhich issue(s) this PR fixes:\nPart of #571 . Needed to do #560 in right way, hence P1.\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-04-03T18:56:46Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646", "merged": true, "mergeCommit": {"oid": "9a8e927a4a5ba2222fe4fb1cf5530ddc21cc3850"}, "closed": true, "closedAt": "2020-04-10T19:36:49Z", "author": {"login": "apeksharma"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUGyxJgFqTM4NzU1MzcwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWTanYgFqTM5MTUyNDI1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTUzNzAw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#pullrequestreview-387553700", "createdAt": "2020-04-03T20:18:00Z", "commit": {"oid": "ad1a2f29843f65daf983e955c8d2976667390044"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxODowMFrOGAnj9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxOTowOVrOGAnnRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMwMTM2NA==", "bodyText": "the string should be a constant.\nAlternatively you can have \"record.receipt\" as the const and a method that take in the additional part and the method adds \"topicID\"", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#discussion_r403301364", "createdAt": "2020-04-03T20:18:00Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/transactionhandler/ConsensusCreateTopicTransactionHandlerTest.java", "diffHunk": "@@ -20,6 +20,18 @@\n  * \u200d\n  */\n \n+import java.util.Map;\n+\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+\n class ConsensusCreateTopicTransactionHandlerTest extends AbstractTransactionHandlerTest {\n+    @Override\n+    protected TransactionHandler getTransactionHandler() {\n+        return new ConsensusCreateTopicTransactionHandler();\n+    }\n \n+    @Override\n+    protected Map<String, Integer> getEntityIdFields() {\n+        return Map.of(\"record.receipt.topicID\", EntityTypeEnum.TOPIC.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1a2f29843f65daf983e955c8d2976667390044"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMwMjIxMw==", "bodyText": "Same thing with body.x.y. Would make the tests cleaner and easy to modify with a single method that returns the key for use here", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#discussion_r403302213", "createdAt": "2020-04-03T20:19:09Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/transactionhandler/ConsensusDeleteTopicTransactionHandlerTest.java", "diffHunk": "@@ -20,6 +20,18 @@\n  * \u200d\n  */\n \n+import java.util.Map;\n+\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+\n class ConsensusDeleteTopicTransactionHandlerTest extends AbstractTransactionHandlerTest {\n+    @Override\n+    protected TransactionHandler getTransactionHandler() {\n+        return new ConsensusDeleteTopicTransactionHandler();\n+    }\n \n+    @Override\n+    protected Map<String, Integer> getEntityIdFields() {\n+        return Map.of(\"body.consensusDeleteTopic.topicID\", EntityTypeEnum.TOPIC.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1a2f29843f65daf983e955c8d2976667390044"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad1a2f29843f65daf983e955c8d2976667390044", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ad1a2f29843f65daf983e955c8d2976667390044", "committedDate": "2020-04-03T18:54:54Z", "message": "Add tests for TransactionHandler.getEntityId()\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "f92c76e7537c37af354fe3273bfc500970bc88eb", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f92c76e7537c37af354fe3273bfc500970bc88eb", "committedDate": "2020-04-03T20:52:03Z", "message": "Add tests for TransactionHandler.getEntityId()\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDMwOTc4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#pullrequestreview-388430978", "createdAt": "2020-04-06T16:43:42Z", "commit": {"oid": "f92c76e7537c37af354fe3273bfc500970bc88eb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjQ0MzY4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#pullrequestreview-388644368", "createdAt": "2020-04-06T21:52:16Z", "commit": {"oid": "f92c76e7537c37af354fe3273bfc500970bc88eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo1MjoxNlrOGBrRvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo1MjoxNlrOGBrRvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQxMDgxNQ==", "bodyText": "This is a bit complex and adds yet another way to create these proto objects to our code. If there's a bug in this approach it would be hard to catch. Why not just add a default way to create a transactionBody and record for each sub-class?\n    protected abstract TransactionBody.Builder getTransactionBody();\n    protected abstract TransactionRecord.Builder getTransactionRecord();\nThen parent class can set any common defaults on those objects and wrap them in a RecordItem and call the generic tests in parent. For children classes, then can call getTransactionBody() and clear and set any additional fields per test case, then construct a recorditem:\ngetTransactionBody().getConsensusCreateTopicBuilder().clearMemo().setMemo(\"foo\").clearAdminKey();", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#discussion_r404410815", "createdAt": "2020-04-06T21:52:16Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/transactionhandler/AbstractTransactionHandlerTest.java", "diffHunk": "@@ -20,6 +20,114 @@\n  * \u200d\n  */\n \n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Fail.fail;\n+\n+import com.google.protobuf.Descriptors;\n+import com.google.protobuf.Message;\n+\n+import com.hederahashgraph.api.proto.java.AccountID;\n+import com.hederahashgraph.api.proto.java.ContractID;\n+import com.hederahashgraph.api.proto.java.FileID;\n+import com.hederahashgraph.api.proto.java.TopicID;\n+import com.hederahashgraph.api.proto.java.Transaction;\n+import com.hederahashgraph.api.proto.java.TransactionBody;\n+import com.hederahashgraph.api.proto.java.TransactionRecord;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInfo;\n+import org.testcontainers.shaded.org.bouncycastle.util.Strings;\n+\n+import com.hedera.mirror.importer.domain.EntityId;\n+import com.hedera.mirror.importer.parser.domain.RecordItem;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n public abstract class AbstractTransactionHandlerTest {\n+    private static final Long DEFAULT_ENTITY_NUM = 100L;\n+\n+    private TransactionHandler transactionHandler;\n+\n+    protected abstract TransactionHandler getTransactionHandler();\n+    // Map from field name to entity type\n+    protected abstract Map<String, Integer> getEntityIdFields();\n+\n+    @BeforeEach\n+    void beforeEach(TestInfo testInfo) {\n+        System.out.println(\"Before test: \" + testInfo.getTestMethod().get().getName());\n+        transactionHandler = getTransactionHandler();\n+    }\n+\n+    @Test\n+    void testNullEntityId() {\n+        assertExpectedEntityId(TransactionBody.newBuilder(), TransactionRecord.newBuilder(), null);\n+    }\n+\n+    // Tests that TransactionHandler.getEntityId() returns expected entity id.\n+    // Entity id is set using protocol buffer reflection.\n+    @Test\n+    void testGetEntityId() {\n+        // given\n+        Message.Builder transactionBodyBuilder = TransactionBody.newBuilder();\n+        Message.Builder transactionRecordBuilder = TransactionRecord.newBuilder();\n+        Map<String, Integer> entityIdFields = getEntityIdFields();\n+        for (var entityIdField : entityIdFields.entrySet()) {\n+            Iterator<String> fields = Arrays.stream(Strings.split(entityIdField.getKey(), '.')).iterator();\n+            String fieldName = fields.next();\n+            if (fieldName.equals(\"body\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92c76e7537c37af354fe3273bfc500970bc88eb"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f92c76e7537c37af354fe3273bfc500970bc88eb", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f92c76e7537c37af354fe3273bfc500970bc88eb", "committedDate": "2020-04-03T20:52:03Z", "message": "Add tests for TransactionHandler.getEntityId()\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "36ac0bb871099bb84518e7331446e7cadf1a79c8", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/36ac0bb871099bb84518e7331446e7cadf1a79c8", "committedDate": "2020-04-09T23:51:22Z", "message": "address review comment\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98a1d77b6b983c0c1038470be944ccbdd7a2816d", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/98a1d77b6b983c0c1038470be944ccbdd7a2816d", "committedDate": "2020-04-10T04:55:21Z", "message": "Add tests for TransactionHandler.getEntityId()\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31fa919cc4533cdd9e32e9edeb0975a78c3b06a8", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/31fa919cc4533cdd9e32e9edeb0975a78c3b06a8", "committedDate": "2020-04-10T04:55:22Z", "message": "address review comment\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36ac0bb871099bb84518e7331446e7cadf1a79c8", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/36ac0bb871099bb84518e7331446e7cadf1a79c8", "committedDate": "2020-04-09T23:51:22Z", "message": "address review comment\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "e82747e7ba41193e9273e9b2554524db4ffb7049", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e82747e7ba41193e9273e9b2554524db4ffb7049", "committedDate": "2020-04-10T05:35:15Z", "message": "rebase\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07709cca90863badcc177aa1e3a3bd04b5d804fe", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/07709cca90863badcc177aa1e3a3bd04b5d804fe", "committedDate": "2020-04-10T05:38:27Z", "message": "rebase\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e82747e7ba41193e9273e9b2554524db4ffb7049", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e82747e7ba41193e9273e9b2554524db4ffb7049", "committedDate": "2020-04-10T05:35:15Z", "message": "rebase\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "07709cca90863badcc177aa1e3a3bd04b5d804fe", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/07709cca90863badcc177aa1e3a3bd04b5d804fe", "committedDate": "2020-04-10T05:38:27Z", "message": "rebase\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTI0MjUy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/646#pullrequestreview-391524252", "createdAt": "2020-04-10T16:09:41Z", "commit": {"oid": "36ac0bb871099bb84518e7331446e7cadf1a79c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3375, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}