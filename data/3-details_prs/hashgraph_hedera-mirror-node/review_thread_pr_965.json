{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODU0MzMw", "number": 965, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTo1Njo1NVrOEZM6tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyNToyNlrOEZlOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODYxNDk0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/AbstractTopicListenerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTo1Njo1NVrOHB4z4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTo1Njo1NVrOHB4z4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0MTQxMA==", "bodyText": "10s gives me issue in my env with shared polling topic listener slowSubscriberOverflowException test case, so aggressively make it further in the future", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r471741410", "createdAt": "2020-08-17T19:56:55Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/AbstractTopicListenerTest.java", "diffHunk": "@@ -39,7 +39,7 @@\n \n public abstract class AbstractTopicListenerTest extends GrpcIntegrationTest {\n \n-    protected final Instant future = Instant.now().plusSeconds(10L);\n+    protected final Instant future = Instant.now().plusSeconds(30L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "691c549541b1b9cf757e55148bb6e54397ffc065"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjUzMzIzOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowODo1NlrOHCeBtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTozOToxMVrOHCsUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MTE1Ng==", "bodyText": "I was thinking RESOURCE_EXHAUSTED applied more towards server side resources. What do you think about using DEADLINE_EXCEEDED?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472351156", "createdAt": "2020-08-18T17:08:56Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -70,6 +72,7 @@\n                 .onErrorMap(TimeoutException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n                 .onErrorMap(TopicNotFoundException.class, e -> error(e, Status.NOT_FOUND))\n                 .onErrorMap(TransientDataAccessException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n+                .onErrorMap(Exceptions::isOverflow, e -> error(e, Status.RESOURCE_EXHAUSTED, OVERFLOW_ERROR))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4NTMzNw==", "bodyText": "DEADLINE_EXCEEDED makes more sense, I'll update as suggested.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472585337", "createdAt": "2020-08-19T01:39:11Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -70,6 +72,7 @@\n                 .onErrorMap(TimeoutException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n                 .onErrorMap(TopicNotFoundException.class, e -> error(e, Status.NOT_FOUND))\n                 .onErrorMap(TransientDataAccessException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n+                .onErrorMap(Exceptions::isOverflow, e -> error(e, Status.RESOURCE_EXHAUSTED, OVERFLOW_ERROR))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MTE1Ng=="}, "originalCommit": {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjU5NzA2OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyNToyNlrOHCeptg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoxNzo1OVrOHCxiuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA==", "bodyText": "Why was this changed? 0 is default for number primitives so it's better to test a non-zero value like 1001", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472361398", "createdAt": "2020-08-18T17:25:26Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java", "diffHunk": "@@ -87,7 +87,7 @@ void json() {\n                 .runningHash(new byte[] {4, 5, 6})\n                 .runningHashVersion(2)\n                 .sequenceNumber(1L)\n-                .topicNum(1001)\n+                .topicNum(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4NzIyMQ==", "bodyText": "topic number in both the json string and TopicMessage object is changed to match the filter.\nThis test case and jsonError both didn't assert anything because there was no terminal operation followed by .verify(). Once terminal operation and .verify() is added, the test case will fail because the filter is for topic 0.0.0.\nAll other test cases use filter and topic messages for topic 0.0.0, so for consistency, I changed accordingly. So if we want to change it, should we change all other test cases as well?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472587221", "createdAt": "2020-08-19T01:46:00Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java", "diffHunk": "@@ -87,7 +87,7 @@ void json() {\n                 .runningHash(new byte[] {4, 5, 6})\n                 .runningHashVersion(2)\n                 .sequenceNumber(1L)\n-                .topicNum(1001)\n+                .topicNum(0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA=="}, "originalCommit": {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3MDkwNA==", "bodyText": "I see, good catch. I think we can just change json and jsonError as they are explicitly testing serialization/deserialization and we want to test non-default values.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472670904", "createdAt": "2020-08-19T04:17:59Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java", "diffHunk": "@@ -87,7 +87,7 @@ void json() {\n                 .runningHash(new byte[] {4, 5, 6})\n                 .runningHashVersion(2)\n                 .sequenceNumber(1L)\n-                .topicNum(1001)\n+                .topicNum(0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA=="}, "originalCommit": {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 945, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}