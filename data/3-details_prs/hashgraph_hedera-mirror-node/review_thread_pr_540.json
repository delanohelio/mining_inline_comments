{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjI1NTkx", "number": 540, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMDowOTozNFrODgDNCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODozMjo0NlrODgzoeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTMzNTE1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMDowOTozNFrOFqG3IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoxMzowM1rOFrNEQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5NjkyOQ==", "bodyText": "Since this variable is static and there are multiple threads setting it, this needs to be protected by a synchronized block", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r379696929", "createdAt": "2020-02-15T00:09:34Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -66,11 +70,23 @@ public void setupTest(JavaSamplerContext context) {\n             builder.setLimit(limit);\n         }\n \n-        hcsTopicSampler = new HCSTopicSampler(host, port, builder.build());\n+        setSampler(sharedChannel, host, port, builder.build());\n \n         super.setupTest(context);\n     }\n \n+    private void setSampler(boolean sharedChannel, String host, int port, ConsensusTopicQuery consensusTopicQuery) {\n+        if (sharedChannel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0NzE3MA==", "bodyText": "Updated", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380847170", "createdAt": "2020-02-18T18:13:03Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -66,11 +70,23 @@ public void setupTest(JavaSamplerContext context) {\n             builder.setLimit(limit);\n         }\n \n-        hcsTopicSampler = new HCSTopicSampler(host, port, builder.build());\n+        setSampler(sharedChannel, host, port, builder.build());\n \n         super.setupTest(context);\n     }\n \n+    private void setSampler(boolean sharedChannel, String host, int port, ConsensusTopicQuery consensusTopicQuery) {\n+        if (sharedChannel) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5NjkyOQ=="}, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTM0NTc5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMDoyMDowOVrOFqG9fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoxMzowOVrOFrNEeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5ODU1OA==", "bodyText": "I think 5 would be better. Min should be 1.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r379698558", "createdAt": "2020-02-15T00:20:09Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.hedera.mirror.grpc.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import javax.validation.constraints.Min;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.grpc.netty\")\n+public class NettyProperties {\n+    @Min(5)\n+    private int maxConcurrentCallsPerConnection = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0NzIyNQ==", "bodyText": "Changed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380847225", "createdAt": "2020-02-18T18:13:09Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.hedera.mirror.grpc.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import javax.validation.constraints.Min;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.grpc.netty\")\n+public class NettyProperties {\n+    @Min(5)\n+    private int maxConcurrentCallsPerConnection = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5ODU1OA=="}, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTM0NzA0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/GrpcConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMDoyMTowOFrOFqG-OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDo0MDoxMlrOFrRo3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5ODc0NA==", "bodyText": "I think we should take this time to see if the other settings that HAPI use that can be utilized here.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r379698744", "createdAt": "2020-02-15T00:21:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/GrpcConfiguration.java", "diffHunk": "@@ -46,4 +50,10 @@ CompositeHealthContributor grpcServices(GrpcServiceDiscoverer grpcServiceDiscove\n \n         return CompositeHealthContributor.fromMap(healthIndicators);\n     }\n+\n+    @Bean\n+    public GrpcServerConfigurer grpcServerConfigurer(NettyProperties nettyProperties) {\n+        return serverBuilder -> ((NettyServerBuilder) serverBuilder)\n+                .maxConcurrentCallsPerConnection(nettyProperties.getMaxConcurrentCallsPerConnection());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzY5Ng==", "bodyText": "Agreed. Looking at some of the other properties. Per your overall feedback I'll break further properties out into a separate PR.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380823696", "createdAt": "2020-02-18T17:29:00Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/GrpcConfiguration.java", "diffHunk": "@@ -46,4 +50,10 @@ CompositeHealthContributor grpcServices(GrpcServiceDiscoverer grpcServiceDiscove\n \n         return CompositeHealthContributor.fromMap(healthIndicators);\n     }\n+\n+    @Bean\n+    public GrpcServerConfigurer grpcServerConfigurer(NettyProperties nettyProperties) {\n+        return serverBuilder -> ((NettyServerBuilder) serverBuilder)\n+                .maxConcurrentCallsPerConnection(nettyProperties.getMaxConcurrentCallsPerConnection());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5ODc0NA=="}, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyMjA3Nw==", "bodyText": "Agreed to defer to follow up PR", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380922077", "createdAt": "2020-02-18T20:40:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/GrpcConfiguration.java", "diffHunk": "@@ -46,4 +50,10 @@ CompositeHealthContributor grpcServices(GrpcServiceDiscoverer grpcServiceDiscove\n \n         return CompositeHealthContributor.fromMap(healthIndicators);\n     }\n+\n+    @Bean\n+    public GrpcServerConfigurer grpcServerConfigurer(NettyProperties nettyProperties) {\n+        return serverBuilder -> ((NettyServerBuilder) serverBuilder)\n+                .maxConcurrentCallsPerConnection(nettyProperties.getMaxConcurrentCallsPerConnection());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5ODc0NA=="}, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTM3MzY2OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMDo0Nzo0OVrOFqHNeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoxMjoxN1rOFrNCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwMjY0OA==", "bodyText": "it would be good if all  hedera.mirror.grpc.*  properties can reference back to single place GrpcProperties.\nAdding private NettyProperties netty = new NettyProperties() to  GrpcProperties would be sufficient. @ConfigurationProperties can be removed then.\nhttps://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding#nested-property", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r379702648", "createdAt": "2020-02-15T00:47:49Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.hedera.mirror.grpc.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import javax.validation.constraints.Min;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.grpc.netty\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0Njc2OA==", "bodyText": "Good idea. Will move it there so references will follow the GrpcProperties.Netty. format", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380846768", "createdAt": "2020-02-18T18:12:17Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/config/NettyProperties.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.hedera.mirror.grpc.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import javax.validation.constraints.Min;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.grpc.netty\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwMjY0OA=="}, "originalCommit": {"oid": "f0b23f10cd58c0468fa7deb59eb87aab1c6f6198"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzI2OTY5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODozMjo0NlrOFrNrVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODozMzozN1rOFrNtIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NzE3Mg==", "bodyText": "probably should be if (channel == null) { channel = ...; } inside synchronized.\nI'm guessing this is the standard case of initializing variable shared by multiple threads. I haven't seen rest of the code, so the suggestion maybe wrong.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380857172", "createdAt": "2020-02-18T18:32:46Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -78,7 +78,9 @@ public void setupTest(JavaSamplerContext context) {\n     private void setSampler(boolean sharedChannel, String host, int port, ConsensusTopicQuery consensusTopicQuery) {\n         if (sharedChannel) {\n             if (channel == null) {\n-                channel = ManagedChannelBuilder.forAddress(host, port).usePlaintext(true).build();\n+                synchronized (this) {\n+                    channel = ManagedChannelBuilder.forAddress(host, port).usePlaintext(true).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7d8ba80772d5a86ec1be584fd2440ffc39ee8c4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NzYzMg==", "bodyText": "Yep actually moving this out into a separate method and doing exactly this", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/540#discussion_r380857632", "createdAt": "2020-02-18T18:33:37Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -78,7 +78,9 @@ public void setupTest(JavaSamplerContext context) {\n     private void setSampler(boolean sharedChannel, String host, int port, ConsensusTopicQuery consensusTopicQuery) {\n         if (sharedChannel) {\n             if (channel == null) {\n-                channel = ManagedChannelBuilder.forAddress(host, port).usePlaintext(true).build();\n+                synchronized (this) {\n+                    channel = ManagedChannelBuilder.forAddress(host, port).usePlaintext(true).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NzE3Mg=="}, "originalCommit": {"oid": "a7d8ba80772d5a86ec1be584fd2440ffc39ee8c4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1150, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}