{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDE1MTk1", "number": 1236, "title": "Fix address book update always updating 102 file", "bodyText": "Detailed description:\n\nFix address book service always updating 0.0.102 end timestamp regardless of file ID\nAdd a migration that recalculates all end timestamps to fix both the 102 rows with incorrect timestamps and 101 rows missing correct timestamps\nFix signature file not buffering the input stream\n\nWhich issue(s) this PR fixes:\nFixes #1229\nSpecial notes for your reviewer:\nWorking on database migration\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-11-06T22:47:08Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236", "merged": true, "mergeCommit": {"oid": "9fedddf9ae666cc102101a12e26a7c0d1102d7ba"}, "closed": true, "closedAt": "2020-11-10T20:42:43Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ-8V9AH2gAyNTE3MDE1MTk1OmZhNTFjNTVkMGI1ZjIwMTdmY2RhYWNhZWI1NTZiYmJmOGIzNDkxYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbPj28AFqTUyNzU4OTgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fa51c55d0b5f2017fcdaacaeb556bbbf8b3491c8", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fa51c55d0b5f2017fcdaacaeb556bbbf8b3491c8", "committedDate": "2020-11-06T22:45:22Z", "message": "Fix address book update always updating 102 file\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f99940ac470f82d7efeca7a9037146af4a9920", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/14f99940ac470f82d7efeca7a9037146af4a9920", "committedDate": "2020-11-09T20:51:39Z", "message": "Add address book migration\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzU2NjUw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236#pullrequestreview-526756650", "createdAt": "2020-11-10T00:16:36Z", "commit": {"oid": "14f99940ac470f82d7efeca7a9037146af4a9920"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoxNjozNlrOHwGtzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoyMTo0OFrOHwG0lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMzcyNw==", "bodyText": "For complete coverage we could add a test case where both a 101 and 102 are updated, or where only one of them is updated. In either case it would verify the other addressBook entry isn't modified.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236#discussion_r520203727", "createdAt": "2020-11-10T00:16:36Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImplTest.java", "diffHunk": "@@ -366,6 +367,32 @@ void verifyAddressBookEndPointsAreSet() {\n         assertThat(prevAddressBook.getEndConsensusTimestamp()).isNotNull();\n     }\n \n+    @Test\n+    void verify101AddressBookEndPointsAreSet() {\n+        byte[] addressBookBytes = UPDATED.toByteArray();\n+        update(addressBookBytes, 0L, false);\n+\n+        // assert current addressBook is updated\n+        AddressBook addressBook = addressBookRepository.findLatestAddressBook(1L, 101L).get();\n+        assertThat(addressBook.getEntries()).hasSize(UPDATED.getNodeAddressCount());\n+        assertThat(addressBook.getStartConsensusTimestamp()).isNotNull();\n+        assertThat(addressBook.getEndConsensusTimestamp()).isNull();\n+\n+        byte[] newAddressBookBytes = FINAL.toByteArray();\n+        update(newAddressBookBytes, 10L, false);\n+        AddressBook newAddressBook = addressBookRepository.findLatestAddressBook(11L, 101L).get();\n+        assertAddressBook(newAddressBook, FINAL);\n+        assertAddressBookData(newAddressBookBytes, 10);\n+\n+        assertEquals(2, addressBookRepository.count());\n+        assertEquals(UPDATED.getNodeAddressCount() + FINAL.getNodeAddressCount(), addressBookEntryRepository.count());\n+\n+        // verify end consensus timestamp was set for previous address book\n+        AddressBook prevAddressBook = addressBookRepository.findById(1L).get();\n+        assertThat(prevAddressBook.getStartConsensusTimestamp()).isNotNull();\n+        assertThat(prevAddressBook.getEndConsensusTimestamp()).isNotNull();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f99940ac470f82d7efeca7a9037146af4a9920"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNTQ2Mg==", "bodyText": "Is there an easy way to incorporate the migration into an integration test like we do for the java migrations?\nThen you could have some test coverage for a mixture of scenarios\n\nOnly one 101 unclosed address book and one 102 incorrectly closed file\nA few 101 unclosed address books  with and a few 102 addressbooks files of which a few were incorrectly closed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236#discussion_r520205462", "createdAt": "2020-11-10T00:21:48Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.31.0__fix_address_book_102.sql", "diffHunk": "@@ -0,0 +1,7 @@\n+-- Recalculate all end timestamps since we accidentally set the 0.0.102 end timestamp instead of the 0.0.101's in GH1229\n+update address_book as ab", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f99940ac470f82d7efeca7a9037146af4a9920"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9476ffaba33b906c37f995604d38707829359f3d", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9476ffaba33b906c37f995604d38707829359f3d", "committedDate": "2020-11-10T17:05:10Z", "message": "Address review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTIxNzg4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236#pullrequestreview-527521788", "createdAt": "2020-11-10T19:05:53Z", "commit": {"oid": "9476ffaba33b906c37f995604d38707829359f3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTg5ODI5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1236#pullrequestreview-527589829", "createdAt": "2020-11-10T20:40:56Z", "commit": {"oid": "9476ffaba33b906c37f995604d38707829359f3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3495, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}