{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzA3OTA3", "number": 1305, "title": "Add retry configuration support to HTS acceptance tests", "bodyText": "Detailed description:\n\nAdd retry configuration support to HTS REST calls\nSimplify acceptance and performance publish time write and reads for latency calculations\nAdd a new properties class for REST API related configs\n\nWhich issue(s) this PR fixes:\nFixes #1294\nSpecial notes for your reviewer:\nUsage of new configs would look like. Example contains the\nhedera:\n  mirror:\n    test:\n      acceptance:\n        rest:\n          # REST endpoint\n          baseUrl: http://testnet.mirrornode.hedera.com/api/v1\n          delay: 1s\n          maxAttempts: 60\nDefaults are as above and don't need to be specified unless changed.\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-12-02T03:02:16Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305", "merged": true, "mergeCommit": {"oid": "5f87fb4b1660f7c6d55e69281109dcf109c429df"}, "closed": true, "closedAt": "2020-12-03T16:20:11Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiFcypAH2gAyNTMwNzA3OTA3OmU5OTM2NzljZTQ1ZWM5NGZkMDFlNjhiODBmOWE2NDA5YjM5YjZkNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdilZungFqTU0NDExOTYxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e993679ce45ec94fd01e68b80f9a6409b39b6d68", "committedDate": "2020-12-02T02:51:38Z", "message": "Added backoff and retry configurations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTQ2MTgz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-543146183", "createdAt": "2020-12-02T18:59:00Z", "commit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo1OTowMFrOH9ptHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo1OTowMFrOH9ptHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODQ3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();\n          \n          \n            \n                        byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + (i + 1)).getBytes();\n          \n      \n    \n    \n  \n\nI think this is what you want.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534408476", "createdAt": "2020-12-02T18:59:00Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -117,8 +117,9 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            byte[] byteArray = Longs.toByteArray(Instant.now().toEpochMilli());\n-            String message = Base64.encodeBase64String(byteArray) + \"_\" + baseMessage + \"_\" + i + 1;\n+            byte[] publishTimestampByteArray = Longs.toByteArray(System.currentTimeMillis());\n+            byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28464c0d4dde0b987eb1b06113d977f673e304b1", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/28464c0d4dde0b987eb1b06113d977f673e304b1", "committedDate": "2020-12-02T20:04:45Z", "message": "Minor tweaks\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDg5OTU0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-542489954", "createdAt": "2020-12-02T04:27:07Z", "commit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDoyNzowN1rOH9J-mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyMzozOVrOH9l6hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4ODY2Nw==", "bodyText": "If you're not caching this value so it's only created once, move the SecureRandom creation to a static variable as it can be a heavy weight operation to construct.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r533888667", "createdAt": "2020-12-02T04:27:07Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/props/TopicMessagePublishRequest.java", "diffHunk": "@@ -48,18 +47,15 @@\n     @ToString.Exclude\n     private Ed25519PrivateKey operatorPrivateKey;\n \n-    private String randomAlphanumeric;\n+    private byte[] randomAlphanumeric;\n \n-    public String getMessage() {\n-        int timeStampBytes = 8;\n+    public byte[] getMessage() {\n         if (randomAlphanumeric == null) {\n-            int additionalBytes = messageByteSize <= timeStampBytes ? 0 : messageByteSize - 8;\n-            randomAlphanumeric = RandomStringUtils.randomAlphanumeric(additionalBytes);\n+            randomAlphanumeric = new byte[messageByteSize > 8 ? messageByteSize - Long.BYTES : 0];\n+            new SecureRandom().nextBytes(randomAlphanumeric);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzMjM0Mw==", "bodyText": "Use Long.BYTES for 8", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534332343", "createdAt": "2020-12-02T17:03:50Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/props/TopicMessagePublishRequest.java", "diffHunk": "@@ -48,18 +47,15 @@\n     @ToString.Exclude\n     private Ed25519PrivateKey operatorPrivateKey;\n \n-    private String randomAlphanumeric;\n+    private byte[] randomAlphanumeric;\n \n-    public String getMessage() {\n-        int timeStampBytes = 8;\n+    public byte[] getMessage() {\n         if (randomAlphanumeric == null) {\n-            int additionalBytes = messageByteSize <= timeStampBytes ? 0 : messageByteSize - 8;\n-            randomAlphanumeric = RandomStringUtils.randomAlphanumeric(additionalBytes);\n+            randomAlphanumeric = new byte[messageByteSize > 8 ? messageByteSize - Long.BYTES : 0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNTg4NQ==", "bodyText": "I think the message can be null or less than 8 so we should probably handle that explicitly as these topics are usually wide open and anyone can submit.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534335885", "createdAt": "2020-12-02T17:08:47Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -183,7 +175,7 @@ public Instant getMessagePublishInstant(T currentResponse) {\n     }\n \n     private Instant retrieveInstantFromArray(byte[] message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNzEwNw==", "bodyText": "You should pass UTF-8 charset whenever using String.getBytes()", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534337107", "createdAt": "2020-12-02T17:10:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -117,8 +117,9 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            byte[] byteArray = Longs.toByteArray(Instant.now().toEpochMilli());\n-            String message = Base64.encodeBase64String(byteArray) + \"_\" + baseMessage + \"_\" + i + 1;\n+            byte[] publishTimestampByteArray = Longs.toByteArray(System.currentTimeMillis());\n+            byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzOTI3MQ==", "bodyText": "Printing the byte array is probably not that helpful. Should print the ex.getMessage() and maybe the message as a string (pass charset).", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534339271", "createdAt": "2020-12-02T17:13:41Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -163,16 +161,10 @@ public Instant getMessagePublishInstant(T currentResponse) {\n \n         byte[] message = getMessageByteArray(currentResponse);\n         try {\n-            byte[] decodedMessage = Base64.decodeBase64(message);\n-            publishInstant = retrieveInstantFromArray(decodedMessage);\n+            publishInstant = retrieveInstantFromArray(message);\n             if (isInstantOutOfRange(publishInstant)) {\n-                publishInstant = retrieveInstantFromArray(message);\n-\n-                // support non encoded version\n-                if (isInstantOutOfRange(publishInstant)) {\n-                    log.debug(\"publishInstant is out of range: {}\", publishInstant);\n-                    publishInstant = null;\n-                }\n+                log.debug(\"publishInstant is out of range: {}\", publishInstant);\n+                publishInstant = null;\n             }\n         } catch (Exception ex) {\n             log.debug(\"response message contains invalid publish millisecond value: {}\", message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDM5MA==", "bodyText": "You should always pass a charset when converting from bytes to String and vice versa.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534340390", "createdAt": "2020-12-02T17:15:14Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -144,13 +145,13 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n             recordPublishInstants.put(0L, transactionRecord.consensusTimestamp);\n         }\n \n-        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", message, topicId,\n+        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", new String(message), topicId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDg2Ng==", "bodyText": "Should wrap in log level check since new String param slower to create.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534340866", "createdAt": "2020-12-02T17:15:55Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -144,13 +145,13 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n             recordPublishInstants.put(0L, transactionRecord.consensusTimestamp);\n         }\n \n-        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", message, topicId,\n+        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", new String(message), topicId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MjIzMg==", "bodyText": "Charset", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534342232", "createdAt": "2020-12-02T17:17:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -364,7 +364,7 @@ public SubscriptionResponse subscribeWithBackgroundMessageEmission() throws Thro\n             scheduler = Executors.newSingleThreadScheduledExecutor();\n             scheduler.scheduleAtFixedRate(() -> {\n                 try {\n-                    topicClient.publishMessageToTopic(consensusTopicId, \"backgroundMessage\", submitKey);\n+                    topicClient.publishMessageToTopic(consensusTopicId, \"backgroundMessage\".getBytes(), submitKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NTMwNw==", "bodyText": "I believe this syntax should work: #{${hedera.mirror.test.acceptance.restPollRetries}}", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534345307", "createdAt": "2020-12-02T17:22:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TokenFeature.java", "diffHunk": "@@ -275,13 +271,17 @@ public void deleteToken() throws HederaStatusException {\n     }\n \n     @Then(\"the mirror node REST API should return status {int}\")\n-    @Retryable(value = {AssertionError.class, AssertionFailedError.class}, backoff = @Backoff(delay = 5000))\n+    @Retryable(value = {AssertionError.class, AssertionFailedError.class},\n+            backoff = @Backoff(delayExpression = \"#{@acceptanceTestProperties.restRetryBackoffPeriod.toMillis()}\"),\n+            maxAttemptsExpression = \"#{@acceptanceTestProperties.restPollRetries}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NjM3Mg==", "bodyText": "We should group like things in nested properties. Also would be clearer to name this maxAttempts and the other delay as that's what @Retryable calls them. Suggest hedera.mirror.test.acceptance.rest.maxAttempts", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534346372", "createdAt": "2020-12-02T17:23:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/AcceptanceTestProperties.java", "diffHunk": "@@ -58,4 +59,11 @@\n \n     @NotNull\n     private Duration subscribeRetryBackoffPeriod = Duration.ofMillis(5000);\n+\n+    @Min(1)\n+    @Max(60)\n+    private int restPollRetries = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7708823e5341f7621605fac42d157023262e25", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ab7708823e5341f7621605fac42d157023262e25", "committedDate": "2020-12-02T22:20:12Z", "message": "Addressed feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzA5NjEw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-543309610", "createdAt": "2020-12-02T23:02:19Z", "commit": {"oid": "ab7708823e5341f7621605fac42d157023262e25"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzowMjoyMFrOH9xx6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzowMjoyMFrOH9xx6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0MDc3Nw==", "bodyText": "Suggest using DurationMin/Max to narrow the allowed values.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534540777", "createdAt": "2020-12-02T23:02:20Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/RestPollingProperties.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.hedera.mirror.test.e2e.acceptance.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Duration;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Component\n+@ConfigurationProperties(prefix = \"hedera.mirror.test.acceptance.rest\")\n+@Data\n+@Validated\n+public class RestPollingProperties {\n+\n+    @NotBlank\n+    private String baseUrl;\n+\n+    @NotNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7708823e5341f7621605fac42d157023262e25"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzE4NzQ5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-543318749", "createdAt": "2020-12-02T23:18:05Z", "commit": {"oid": "ab7708823e5341f7621605fac42d157023262e25"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzIyOTA0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-543322904", "createdAt": "2020-12-02T23:26:55Z", "commit": {"oid": "ab7708823e5341f7621605fac42d157023262e25"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d0074ca8e9920e0e82cc6fe9912db301d0f595b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7d0074ca8e9920e0e82cc6fe9912db301d0f595b", "committedDate": "2020-12-03T16:02:54Z", "message": "Added duration min max\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MTE5NjE1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#pullrequestreview-544119615", "createdAt": "2020-12-03T16:05:15Z", "commit": {"oid": "7d0074ca8e9920e0e82cc6fe9912db301d0f595b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3384, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}