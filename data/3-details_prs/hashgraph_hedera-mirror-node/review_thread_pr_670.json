{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMDIxMzY4", "number": 670, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowODo1MlrODwIJ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxOToxNVrODwIX0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzkxODMwOnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowODo1MlrOGC9Gkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo1NDo1N1rOGDAnVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1MTQ0Mg==", "bodyText": "The filter isn't even needed. Looks like legacy of old code. Should be removed (if everyone's okay).", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405751442", "createdAt": "2020-04-08T19:08:52Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -299,7 +296,7 @@ public void parse() {\n \n                 // add directory prefix to get full path\n                 List<String> fullPaths = Arrays.asList(files).stream()\n-                        .filter(f -> Utility.isRecordFile(f))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a82abecf68fce13dd7c08ba855d1f0bb50437a0b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5MDkwMQ==", "bodyText": "I guess it's just an extra check in case someone puts some unknown file in /valid? I'm okay either way keeping or removing.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405790901", "createdAt": "2020-04-08T20:22:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -299,7 +296,7 @@ public void parse() {\n \n                 // add directory prefix to get full path\n                 List<String> fullPaths = Arrays.asList(files).stream()\n-                        .filter(f -> Utility.isRecordFile(f))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1MTQ0Mg=="}, "originalCommit": {"oid": "a82abecf68fce13dd7c08ba855d1f0bb50437a0b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwODk4Mg==", "bodyText": "Removed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405808982", "createdAt": "2020-04-08T20:54:57Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -299,7 +296,7 @@ public void parse() {\n \n                 // add directory prefix to get full path\n                 List<String> fullPaths = Arrays.asList(files).stream()\n-                        .filter(f -> Utility.isRecordFile(f))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1MTQ0Mg=="}, "originalCommit": {"oid": "a82abecf68fce13dd7c08ba855d1f0bb50437a0b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzkyODA3OnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/FileDelimiter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxMTo0N1rOGC9Mog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxMTo0N1rOGC9Mog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1Mjk5NA==", "bodyText": "better to encapsulate each stream's file helpers separately in future", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405752994", "createdAt": "2020-04-08T19:11:47Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/FileDelimiter.java", "diffHunk": "@@ -22,13 +22,6 @@\n \n public class FileDelimiter {\n     public static final String HASH_ALGORITHM = \"SHA-384\";\n-    public static final byte EVENT_TYPE_PREV_HASH = 1;       // next 48 bytes are hash384 or previous files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a82abecf68fce13dd7c08ba855d1f0bb50437a0b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzkzODIyOnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNDozMlrOGC9Stg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNDozMlrOGC9Stg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NDU1MA==", "bodyText": "removing if-else and pattern matching on files in favor of directly calling appropriate utility functions from fns overridden by downloader implementations.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405754550", "createdAt": "2020-04-08T19:14:32Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "diffHunk": "@@ -119,110 +103,18 @@ public static boolean hashMatch(byte[] hash, File rcdFile) {\n     }\n \n     /**\n-     * Calculate SHA384 hash of a binary file\n+     * Calculate SHA384 hash of a balance file\n      *\n      * @param fileName file name\n      * @return byte array of hash value of null if calculating has failed\n      */\n-    public static byte[] getFileHash(String fileName) {\n-        MessageDigest md;\n-        if (getFileExtension(fileName).contentEquals(\"rcd\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb89379e6128d94128a6d62209c7dd4522275b9"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk0NDUzOnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNjoxNVrOGC9WfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNjoxNVrOGC9WfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NTUxNg==", "bodyText": "removed this for now since a lot of code here and in EventStreamFileParser (removed) seems sharable when done correctly", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405755516", "createdAt": "2020-04-08T19:16:15Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "diffHunk": "@@ -119,110 +103,18 @@ public static boolean hashMatch(byte[] hash, File rcdFile) {\n     }\n \n     /**\n-     * Calculate SHA384 hash of a binary file\n+     * Calculate SHA384 hash of a balance file\n      *\n      * @param fileName file name\n      * @return byte array of hash value of null if calculating has failed\n      */\n-    public static byte[] getFileHash(String fileName) {\n-        MessageDigest md;\n-        if (getFileExtension(fileName).contentEquals(\"rcd\")) {\n-            return getRecordFileHash(fileName);\n-        } else if (getFileExtension(fileName).contentEquals(\"evt\")) {\n-            return getEventFileHash(fileName);\n-        } else {\n-            try {\n-                md = MessageDigest.getInstance(FileDelimiter.HASH_ALGORITHM);\n-\n-                byte[] array = Files.readAllBytes(Paths.get(fileName));\n-                return md.digest(array);\n-            } catch (NoSuchAlgorithmException | IOException e) {\n-                log.error(\"Exception {}\", e);\n-                return null;\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Calculate SHA384 hash of an event file\n-     *\n-     * @param filename file name\n-     * @return byte array of hash value of null if calculating has failed\n-     */\n-    private static byte[] getEventFileHash(String filename) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb89379e6128d94128a6d62209c7dd4522275b9"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk0ODMwOnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNzozNFrOGC9Y-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNzozNFrOGC9Y-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NjE1NQ==", "bodyText": "next 3 functions are dead code.\ngetAccountIDStringFromFilePath isn't needed due to changes in Downloader at top of this PR.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405756155", "createdAt": "2020-04-08T19:17:34Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "diffHunk": "@@ -396,98 +282,6 @@ public static String bytesToHex(byte[] bytes) {\n         return Hex.encodeHexString(bytes);\n     }\n \n-    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb89379e6128d94128a6d62209c7dd4522275b9"}, "originalPosition": 197}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk1NDExOnYy", "diffSide": "LEFT", "path": "hedera-mirror-rest/server.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxOToxNVrOGC9cgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxOToxNVrOGC9cgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NzA1OQ==", "bodyText": "i undid them once, the IDE did it again. PITA :D\nlet's leave them for now until we do .editorconfig following which there can be one big auto formatting PR.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/670#discussion_r405757059", "createdAt": "2020-04-08T19:19:15Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -58,15 +56,15 @@ if (port === undefined || isNaN(Number(port))) {\n log4js.configure({\n   appenders: {\n     everything: {\n-      type: 'stdout',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb89379e6128d94128a6d62209c7dd4522275b9"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 963, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}