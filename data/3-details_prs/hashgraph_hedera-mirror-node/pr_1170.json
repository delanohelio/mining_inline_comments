{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MzUxNTE1", "number": 1170, "title": "Add custom alerts and dashboards", "bodyText": "Detailed description:\n\nAdd custom PrometheusRule alerts for gRPC, Importer and REST\nAdd gRPC API dashboard\nAdd REST API dashboard\nAdd balances and events to the Importer dashboard\nAdd namespace filter to Mirror Node dashboards\nAdd hedera.mirror.parse.duration metric for balances\nAdd hedera.mirror.parse.latency metric for balances\nAdd record/balance file age single stat and graph to importer dashboard\nChange dashboards to use the new dynamic $__rate_interval variable instead of our manually specified interval approach\nChange tests to use Redis 5.0.9 to match our VM environments\nDisable kubelet monitoring in GKE since it isn't possible and generates false alerts\nFix docker-compose not working due to lack of Redis\nRemove non-working Swagger dashboard\nRemove Go as code scanning language as it fails without Go code in master\n\nWhich issue(s) this PR fixes:\nFixes #660\nSpecial notes for your reviewer:\nVast majority of the +9K/-3K changes are dashboard related changes and can be ignored.\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-10-22T14:51:15Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170", "merged": true, "mergeCommit": {"oid": "e94cc8f19539cca0658d7d2d5a0bbef0fee238f7"}, "closed": true, "closedAt": "2020-10-23T23:05:38Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVDEpRAH2gAyNTA4MzUxNTE1OjM3NzM1YmU3ODdjNGJmZmNiMjIzODk2N2U0OTJjZTBkMjk0OWJkYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVewuWgFqTUxNjA1MTc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37735be787c4bffcb2238967e492ce0d2949bdc6", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/37735be787c4bffcb2238967e492ce0d2949bdc6", "committedDate": "2020-10-22T14:44:26Z", "message": "Add custom alerts and dashboards\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "041a277bfe4379c1f2de801da92696f31c3c5a5c", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/041a277bfe4379c1f2de801da92696f31c3c5a5c", "committedDate": "2020-10-22T15:07:46Z", "message": "Fix docker-compose by adding Redis\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "105dcc55d1d6d4d1b80bd060a6f201839e1c4373", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/105dcc55d1d6d4d1b80bd060a6f201839e1c4373", "committedDate": "2020-10-22T15:31:30Z", "message": "Add namespace label to alerts\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8b1aeb8e6b48443047293fc80293345ab022e3", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ee8b1aeb8e6b48443047293fc80293345ab022e3", "committedDate": "2020-10-22T15:34:45Z", "message": "Fix helm lint\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "012926b3257b581aa4648fd04d93d08d1e6638d3", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/012926b3257b581aa4648fd04d93d08d1e6638d3", "committedDate": "2020-10-22T15:54:19Z", "message": "Disable prometheusRules by default to fix CI\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTEwODU1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170#pullrequestreview-515110855", "createdAt": "2020-10-22T20:54:26Z", "commit": {"oid": "012926b3257b581aa4648fd04d93d08d1e6638d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDo1NDoyNlrOHmzcWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDo1NDoyNlrOHmzcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MDc3Ng==", "bodyText": "Would something like this work\n  ImporterRecordAge:\n     annotations:\n       description: Averaging {{ $value }}s trying to parse {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\n       summary: Record stream backlogged, stream file older than 30s\n     enabled: true\n     expr: sum(rate(hedera_mirror_parse_latency_seconds_sum{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_parse_latency_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) > 30\n     for: 1m\n     labels:\n       severity: critical\n\nWould need to disable or switch to warning when importer is running in historical catch up mode", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170#discussion_r510450776", "createdAt": "2020-10-22T20:54:26Z", "author": {"login": "Nana-EC"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -95,6 +95,148 @@ resources:\n \n revisionHistoryLimit: 3\n \n+prometheusRules:\n+  enabled: false\n+  ImporterNoTransactions:\n+    annotations:\n+      description: \"Record stream TPS has dropped to {{ $value }} for {{ $labels.namespace }}/{{ $labels.pod }}. This may be because importer is down, can't connect to cloud storage, main nodes are not uploading, error parsing the streams, no traffic, etc.\"\n+      summary: \"No transactions seen for 2m\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_transaction_latency_seconds_count{application=\"hedera-mirror-importer\"}[5m])) by (namespace, pod) <= 0\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterCloudStorageErrors:\n+    annotations:\n+      description: '{{ $value | humanizePercentage }}% Error rate trying to {{ if ne $labels.action \"list\" }} retrieve{{ end }} {{ $labels.action }} {{ $labels.type }} files from cloud storage for {{ $labels.namespace }}/{{ $labels.pod }}'\n+      summary: \"Cloud storage error rate exceeds 5%\"\n+    enabled: true\n+    expr: (sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\", status!~\"^2.*\"}[2m])) by (namespace, pod, type, action) / sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\"}[2m])) by (namespace, pod, type, action)) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterCloudStorageLatency:\n+    annotations:\n+      description: Cloud storage latency exceeded {{ $value }}s trying to {{ if ne $labels.action \"list\" }} retrieve{{ end }} {{ $labels.action }} {{ $labels.type }} files from cloud storage for {{ $labels.namespace }}/{{ $labels.pod }}\n+      summary: Cloud storage latency exceeds 1s\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_request_seconds_sum{application=\"hedera-mirror-importer\", status=~\"^2.*\"}[2m])) by (namespace, pod, type, action) / sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\", status=~\"^2.*\"}[2m])) by (namespace, pod, type, action) > 1\n+    for: 1m\n+    labels:\n+      severity: critical\n+\n+  ImporterNoConsensus:\n+    annotations:\n+      description: \"{{ $labels.namespace }}/{{ $labels.pod }} only able to achieve {{ $value | humanizePercentage }}% consensus during {{ $labels.type }} stream signature verification\"\n+      summary: Unable to verify {{ $labels.type }} stream signatures\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_signature_verification_total{application=\"hedera-mirror-importer\", status=\"CONSENSUS_REACHED\"}[2m])) by (namespace, pod, type) / sum(rate(hedera_mirror_download_signature_verification_total{application=\"hedera-mirror-importer\"}[2m])) by (namespace, pod, type) < 0.33\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterFileVerificationErrors:\n+    annotations:\n+      description: \"Error rate of {{ $value | humanizePercentage }}% trying to download and verify {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\"\n+      summary: \"{{ $labels.type }} file verification error rate exceeds 5%\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_stream_verification_seconds_count{application=\"hedera-mirror-importer\", success=\"false\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_download_stream_verification_seconds_count{application=\"hedera-mirror-importer\"[3m])) by (namespace, pod, type) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterStreamCloseInterval:\n+    annotations:\n+      description: \"{{ $labels.namespace }}/{{ $labels.pod }} file stream should close every 2s but is actually {{ $value }}s. This could just be due to the lack of traffic in the environment, but it could potentially be something more serious to look into.\"\n+      summary: Record stream close interval exceeds 10s\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_stream_close_latency_seconds_sum{application=\"hedera-mirror-importer\", type=\"RECORD\"}[5m])) by (namespace, pod) / sum(rate(hedera_mirror_stream_close_latency_seconds_count{application=\"hedera-mirror-importer\", type=\"RECORD\"}[5m])) by (namespace, pod) > 10\n+    for: 1m\n+    labels:\n+      severity: warning\n+\n+  ImporterParseErrors:\n+    annotations:\n+      description: \"Encountered {{ $value | humanizePercentage }}% errors trying to parse {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\"\n+      summary: \"Error rate parsing {{ $labels.type }} exceeds 5%\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\", success=\"false\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterParseLatency:\n+    annotations:\n+      description: Averaging {{ $value }}s trying to parse {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\n+      summary: Took longer than 2s to parse {{ $labels.type }} stream files\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_parse_duration_seconds_sum{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) > 2\n+    for: 1m\n+    labels:\n+      severity: critical\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012926b3257b581aa4648fd04d93d08d1e6638d3"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f2e500ce21b8c33ff9b7e43e0bb0bfb4813265", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e9f2e500ce21b8c33ff9b7e43e0bb0bfb4813265", "committedDate": "2020-10-22T23:05:49Z", "message": "Add record and balance file age graphs and alerts\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89d73ce181341423c40c008971c98b542664b5ee", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/89d73ce181341423c40c008971c98b542664b5ee", "committedDate": "2020-10-22T23:13:57Z", "message": "Fix linting\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MjA2Nzg2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170#pullrequestreview-515206786", "createdAt": "2020-10-23T00:31:20Z", "commit": {"oid": "89d73ce181341423c40c008971c98b542664b5ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDozMToyMVrOHm4cCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDozMToyMVrOHm4cCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzMjYxNg==", "bodyText": "For this , wouldn't it be more appropriate to say\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  summary: Mirror Importer hasn't processed a record file in more than 15s\n          \n          \n            \n                  summary: Mirror Importer backlogged, record stream file older than 15s\n          \n      \n    \n    \n  \n\nGranted we do want an alert if the mirror node hasn't processed any files in an extended period of time.\nSeems like 2 related but different metrics I'm highlighting\n\nAn alert for when the age of the files being processed is over a threshold, to highlight the mirror node has fallen behind, likely due to load.\nAn alert for when the mirror node hasn't processed a file stream item within a certain threshold range of time.\n\n1 can only happen when steam files are received, 2 would happen when none are received.\nGranted in a rare situation of delayed and pulsated stream emits both alert could be triggered.\nWith the hedera_mirror_parse_latency latency I imagine 1 is what's possible here and 2 is a stretch that could be attempted in a future ticket.\nWhat do you think?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170#discussion_r510532616", "createdAt": "2020-10-23T00:31:21Z", "author": {"login": "Nana-EC"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -95,6 +95,168 @@ resources:\n \n revisionHistoryLimit: 3\n \n+prometheusRules:\n+  enabled: false\n+  ImporterNoTransactions:\n+    annotations:\n+      description: \"Record stream TPS has dropped to {{ $value }} for {{ $labels.namespace }}/{{ $labels.pod }}. This may be because importer is down, can't connect to cloud storage, main nodes are not uploading, error parsing the streams, no traffic, etc.\"\n+      summary: \"No transactions seen for 2m\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_transaction_latency_seconds_count{application=\"hedera-mirror-importer\"}[5m])) by (namespace, pod) <= 0\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterCloudStorageErrors:\n+    annotations:\n+      description: '{{ $value | humanizePercentage }}% Error rate trying to {{ if ne $labels.action \"list\" }} retrieve{{ end }} {{ $labels.action }} {{ $labels.type }} files from cloud storage for {{ $labels.namespace }}/{{ $labels.pod }}'\n+      summary: \"Cloud storage error rate exceeds 5%\"\n+    enabled: true\n+    expr: (sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\", status!~\"^2.*\"}[2m])) by (namespace, pod, type, action) / sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\"}[2m])) by (namespace, pod, type, action)) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterCloudStorageLatency:\n+    annotations:\n+      description: Cloud storage latency exceeded {{ $value | humanizeDuration }} trying to {{ if ne $labels.action \"list\" }} retrieve{{ end }} {{ $labels.action }} {{ $labels.type }} files from cloud storage for {{ $labels.namespace }}/{{ $labels.pod }}\n+      summary: Cloud storage latency exceeds 1s\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_request_seconds_sum{application=\"hedera-mirror-importer\", status=~\"^2.*\"}[2m])) by (namespace, pod, type, action) / sum(rate(hedera_mirror_download_request_seconds_count{application=\"hedera-mirror-importer\", status=~\"^2.*\"}[2m])) by (namespace, pod, type, action) > 1\n+    for: 1m\n+    labels:\n+      severity: critical\n+\n+  ImporterNoConsensus:\n+    annotations:\n+      description: \"{{ $labels.namespace }}/{{ $labels.pod }} only able to achieve {{ $value | humanizePercentage }}% consensus during {{ $labels.type }} stream signature verification\"\n+      summary: Unable to verify {{ $labels.type }} stream signatures\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_signature_verification_total{application=\"hedera-mirror-importer\", status=\"CONSENSUS_REACHED\"}[2m])) by (namespace, pod, type) / sum(rate(hedera_mirror_download_signature_verification_total{application=\"hedera-mirror-importer\"}[2m])) by (namespace, pod, type) < 0.33\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterFileVerificationErrors:\n+    annotations:\n+      description: \"Error rate of {{ $value | humanizePercentage }}% trying to download and verify {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\"\n+      summary: \"{{ $labels.type }} file verification error rate exceeds 5%\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_download_stream_verification_seconds_count{application=\"hedera-mirror-importer\", success=\"false\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_download_stream_verification_seconds_count{application=\"hedera-mirror-importer\"[3m])) by (namespace, pod, type) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterStreamCloseInterval:\n+    annotations:\n+      description: \"{{ $labels.namespace }}/{{ $labels.pod }} file stream should close every 2s but is actually {{ $value | humanizeDuration }}. This could just be due to the lack of traffic in the environment, but it could potentially be something more serious to look into.\"\n+      summary: Record stream close interval exceeds 10s\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_stream_close_latency_seconds_sum{application=\"hedera-mirror-importer\", type=\"RECORD\"}[5m])) by (namespace, pod) / sum(rate(hedera_mirror_stream_close_latency_seconds_count{application=\"hedera-mirror-importer\", type=\"RECORD\"}[5m])) by (namespace, pod) > 10\n+    for: 1m\n+    labels:\n+      severity: warning\n+\n+  ImporterParseErrors:\n+    annotations:\n+      description: \"Encountered {{ $value | humanizePercentage }}% errors trying to parse {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\"\n+      summary: \"Error rate parsing {{ $labels.type }} exceeds 5%\"\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\", success=\"false\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) > 0.05\n+    for: 2m\n+    labels:\n+      severity: critical\n+\n+  ImporterParseLatency:\n+    annotations:\n+      description: Averaging {{ $value | humanizeDuration }} trying to parse {{ $labels.type }} stream files for {{ $labels.namespace }}/{{ $labels.pod }}\n+      summary: Took longer than 2s to parse {{ $labels.type }} stream files\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_parse_duration_seconds_sum{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) / sum(rate(hedera_mirror_parse_duration_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type) > 2\n+    for: 1m\n+    labels:\n+      severity: critical\n+\n+  ImporterPublishLatency:\n+    annotations:\n+      description: Took {{ $value | humanizeDuration }} to publish {{ $labels.entity }}s to {{ $labels.type }} for {{ $labels.namespace }}/{{ $labels.pod }}\n+      summary: Slow {{ $labels.type }} publishing\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_importer_publish_duration_seconds_sum{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type, entity) / sum(rate(hedera_mirror_importer_publish_duration_seconds_count{application=\"hedera-mirror-importer\"}[3m])) by (namespace, pod, type, entity) > 1\n+    for: 1m\n+    labels:\n+      severity: critical\n+\n+  ImporterBalanceAge:\n+    annotations:\n+      description: Last processed balance file for {{ $labels.namespace }}/{{ $labels.pod }} was {{ $value | humanizeDuration }} ago\n+      summary: Mirror Importer hasn't processed a balance file in more than 16m\n+    enabled: true\n+    expr: sum(rate(hedera_mirror_parse_latency_seconds_sum{application=\"hedera-mirror-importer\",type=\"BALANCE\"}[3m])) by (namespace, pod) / sum(rate(hedera_mirror_parse_latency_seconds_count{application=\"hedera-mirror-importer\",type=\"BALANCE\"}[3m])) by (namespace, pod) > 960\n+    for: 1m\n+    labels:\n+      severity: critical\n+\n+  ImporterRecordAge:\n+    annotations:\n+      description: Last processed record file for {{ $labels.namespace }}/{{ $labels.pod }} was {{ $value | humanizeDuration }} ago\n+      summary: Mirror Importer hasn't processed a record file in more than 15s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89d73ce181341423c40c008971c98b542664b5ee"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ba26ae02be68bf5a9a783ed2dc927b2668c921", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/95ba26ae02be68bf5a9a783ed2dc927b2668c921", "committedDate": "2020-10-23T21:21:26Z", "message": "Refine fallen behind alert description\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDUxNzc0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1170#pullrequestreview-516051774", "createdAt": "2020-10-23T23:00:01Z", "commit": {"oid": "95ba26ae02be68bf5a9a783ed2dc927b2668c921"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3639, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}