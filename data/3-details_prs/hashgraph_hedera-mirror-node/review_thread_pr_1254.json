{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NjA3MjIx", "number": 1254, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNTo0NDo0NFrOE4AZUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToyODo1M1rOE5ikmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTYyMTk1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.32.0__delete_token_transfers_transaction_type.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNTo0NDo0NFrOHxrZAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMTo1NTo0OFrOHyP3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1MzE4Nw==", "bodyText": "We implemented a convention a few sprints back of using a new minor version on new sprints.\nSo this should be V1.31.1 - just like my PR :)\nWe'll see whoever gets in first.\nThe other person just has to update their version, due to flyway checksum since we can't skip versions.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r521853187", "createdAt": "2020-11-12T05:44:44Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.32.0__delete_token_transfers_transaction_type.sql", "diffHunk": "@@ -0,0 +1,6 @@\n+-------------------\n+-- delete token transfers transaction type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1MDc0Mw==", "bodyText": "Renamed to V1.31.3 after you and Xin got yours in.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r522450743", "createdAt": "2020-11-12T21:55:48Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.32.0__delete_token_transfers_transaction_type.sql", "diffHunk": "@@ -0,0 +1,6 @@\n+-------------------\n+-- delete token transfers transaction type", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1MzE4Nw=="}, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTY2MTExOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjowNDo1MVrOHxrv5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0NzowNFrOHyU3vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1OTA0NA==", "bodyText": "Shouldn't we move the addTokenTransferTransaction() logic into addCryptoTransaction()?\naddCryptoTransaction() does a check for 'transfers' so the equivalent would be a check for tokenTransfers.\nThe result would be the json setup would no longer use the tokenTransfers[] and both crypto and token transfers would be under cryptoTransfers[].\nUnless I'm missing something as is a single crypto transfer with both crypto and token transfer would end up getting represented as 2 transactions instead of 1.\nconst addCryptoTransaction = async (cryptoTransfer) => {\n  if (!('senderAccountId' in cryptoTransfer)) {\n    cryptoTransfer.senderAccountId = cryptoTransfer.payerAccountId;\n  }\n\n  if (!('transfers' in cryptoTransfer)) {\n    cryptoTransfer.transfers = [\n      {account: cryptoTransfer.senderAccountId, amount: -NETWORK_FEE - cryptoTransfer.amount},\n      {account: cryptoTransfer.recipientAccountId, amount: cryptoTransfer.amount},\n      {account: cryptoTransfer.treasuryAccountId, amount: NETWORK_FEE},\n    ];\n  }\n  if (!('tokenTransfers' in cryptoTransfer)) {\n    cryptoTransfer.tokenTransfer = [\n    {account: tokenTransfer.payerAccountId, amount: -NETWORK_FEE - NODE_FEE},\n    {account: tokenTransfer.treasuryAccountId, amount: NETWORK_FEE},\n    {account: tokenTransfer.nodeAccountId, amount: NODE_FEE},\n    ];\n  }\n  await addTransaction(cryptoTransfer);\n};\n\nYou'd also have to updated addTransaction()\nWhat do you think?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r521859044", "createdAt": "2020-11-12T06:04:51Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -295,7 +295,6 @@ const addTokenTransferTransaction = async (tokenTransfer) => {\n     {account: tokenTransfer.treasuryAccountId, amount: NETWORK_FEE},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzODcxNQ==", "bodyText": "Yeah, I agree, my first go was basically to minimally affect the tests, but to be fully accurate with the new logic they should be together.  I'll do some refactoring to make that happen.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r522338715", "createdAt": "2020-11-12T18:52:26Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -295,7 +295,6 @@ const addTokenTransferTransaction = async (tokenTransfer) => {\n     {account: tokenTransfer.treasuryAccountId, amount: NETWORK_FEE},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1OTA0NA=="}, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUzMjc5Nw==", "bodyText": "I've reworked the setup a fair amount, effectively the addCryptoTransaction already allowed one to add token information, so I ripped out all of the tokenTransfers logic, changed the tests around to make the tokenTransfers merge into the cryptoTransfers, and then reworked the addCryptoTransfer logic to default a couple things that weren't being specified in the tokenTransfers (alternatively, I could just force the tests to have recipientIds and amounts specified).", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r522532797", "createdAt": "2020-11-13T00:47:04Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -295,7 +295,6 @@ const addTokenTransferTransaction = async (tokenTransfer) => {\n     {account: tokenTransfer.treasuryAccountId, amount: NETWORK_FEE},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1OTA0NA=="}, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTAyOTE2OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDowNDowOFrOHyMAsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMTozMjoyNlrOHyPKSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4NzYzMg==", "bodyText": "Should this be 0.9.0-rc.2?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r522387632", "createdAt": "2020-11-12T20:04:08Z", "author": {"login": "steven-sheehy"}, "path": "pom.xml", "diffHunk": "@@ -62,7 +62,7 @@\n         <embedded.testcontainers.version>1.85</embedded.testcontainers.version>\n         <grpc-spring-boot.version>2.10.1.RELEASE</grpc-spring-boot.version>\n         <grpc.version>1.33.1</grpc.version>\n-        <hedera-protobuf.version>0.9.0-alpha5</hedera-protobuf.version>\n+        <hedera-protobuf.version>0.9.0-alpha.6</hedera-protobuf.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQzOTI0MA==", "bodyText": "Yep, just updated it.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r522439240", "createdAt": "2020-11-12T21:32:26Z", "author": {"login": "ijungmann"}, "path": "pom.xml", "diffHunk": "@@ -62,7 +62,7 @@\n         <embedded.testcontainers.version>1.85</embedded.testcontainers.version>\n         <grpc-spring-boot.version>2.10.1.RELEASE</grpc-spring-boot.version>\n         <grpc.version>1.33.1</grpc.version>\n-        <hedera-protobuf.version>0.9.0-alpha5</hedera-protobuf.version>\n+        <hedera-protobuf.version>0.9.0-alpha.6</hedera-protobuf.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4NzYzMg=="}, "originalCommit": {"oid": "ffed69d37d94c5d108bacb4b8245167b2d105619"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTY1Mjc0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/transactions.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo1NjowOFrOHy5IPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDozNjoyMlrOHy-KIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNjg0NA==", "bodyText": "remove left over console  log", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r523126844", "createdAt": "2020-11-13T17:56:08Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -96,6 +96,7 @@ const createTransferLists = (rows) => {\n   const transactions = {};\n \n   for (const row of rows) {\n+    console.log(row);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40e3c0f9948660c1374911f86d8bdbbffd278782"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwOTI0OQ==", "bodyText": "Removed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r523209249", "createdAt": "2020-11-13T20:36:22Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -96,6 +96,7 @@ const createTransferLists = (rows) => {\n   const transactions = {};\n \n   for (const row of rows) {\n+    console.log(row);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNjg0NA=="}, "originalCommit": {"oid": "40e3c0f9948660c1374911f86d8bdbbffd278782"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTY1OTM1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/transactions.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo1ODoxMFrOHy5MaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDozODowMlrOHy-O_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNzkxMg==", "bodyText": "nit. We should have done this previously but could you make this a constant\nconst cryptoTransferTransactionType =14 and use here and below\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     ON t.type = 14\n          \n          \n            \n                     ON t.type = ${cryptoTransferTransactionType}", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r523127912", "createdAt": "2020-11-13T17:58:10Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -152,7 +153,7 @@ const getTransactionsOuterQuery = function (innerQuery, order) {\n        LEFT OUTER JOIN t_transaction_types ttt ON ttt.proto_id = t.type\n        JOIN crypto_transfer ctl ON tlist.consensus_timestamp = ctl.consensus_timestamp\n        LEFT OUTER JOIN token_transfer ttl\n-         ON t.type = 30\n+         ON t.type = 14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40e3c0f9948660c1374911f86d8bdbbffd278782"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIxMDQ5NQ==", "bodyText": "Took it one step further and used the const transactionTypes in constants.js since it was already being pulled in.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r523210495", "createdAt": "2020-11-13T20:38:02Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -152,7 +153,7 @@ const getTransactionsOuterQuery = function (innerQuery, order) {\n        LEFT OUTER JOIN t_transaction_types ttt ON ttt.proto_id = t.type\n        JOIN crypto_transfer ctl ON tlist.consensus_timestamp = ctl.consensus_timestamp\n        LEFT OUTER JOIN token_transfer ttl\n-         ON t.type = 30\n+         ON t.type = 14", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNzkxMg=="}, "originalCommit": {"oid": "40e3c0f9948660c1374911f86d8bdbbffd278782"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzY1NzY0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenUpdateTransactionsHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToxODoyOFrOH0DeIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowMjowMlrOH0Flqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM0NDg2NQ==", "bodyText": "Wrong time unit. Use Utility.timestampInNanosMax()", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524344865", "createdAt": "2020-11-16T15:18:28Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenUpdateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenUpdateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenUpdateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod());\n+        if (tokenUpdateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenUpdateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry());\n+        if (tokenUpdateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3NDc2NA==", "bodyText": "Fixed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524374764", "createdAt": "2020-11-16T15:55:56Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenUpdateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenUpdateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenUpdateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod());\n+        if (tokenUpdateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenUpdateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry());\n+        if (tokenUpdateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM0NDg2NQ=="}, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3OTU2Mg==", "bodyText": "Whoops, yep, timestampInNanosMax now, fixed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524379562", "createdAt": "2020-11-16T16:02:02Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenUpdateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenUpdateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenUpdateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod());\n+        if (tokenUpdateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenUpdateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenUpdateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry());\n+        if (tokenUpdateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenUpdateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM0NDg2NQ=="}, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzcwNzEyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenCreateTransactionsHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToyODo1M1rOH0D9Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowMTozM1rOH0FkRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5OQ==", "bodyText": "Wrong time unit. Use Utility.timestampInNanosMax()", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524352799", "createdAt": "2020-11-16T15:28:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenCreateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenCreateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenCreateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod());\n+        if (tokenCreateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenCreateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry());\n+        if (tokenCreateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3NDgyNQ==", "bodyText": "Fixed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524374825", "createdAt": "2020-11-16T15:56:01Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenCreateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenCreateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenCreateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod());\n+        if (tokenCreateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenCreateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry());\n+        if (tokenCreateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5OQ=="}, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3ODA4Ng==", "bodyText": "Wrong method", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524378086", "createdAt": "2020-11-16T16:00:10Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenCreateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenCreateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenCreateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod());\n+        if (tokenCreateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenCreateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry());\n+        if (tokenCreateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5OQ=="}, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3OTIwNQ==", "bodyText": "Whoops, yep, timestampInNanosMax now, fixed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1254#discussion_r524379205", "createdAt": "2020-11-16T16:01:33Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/transactionhandler/TokenCreateTransactionsHandler.java", "diffHunk": "@@ -48,12 +48,12 @@ public void updateEntity(Entities entity, RecordItem recordItem) {\n             entity.setKey(tokenCreateTransactionBody.getAdminKey().toByteArray());\n         }\n \n-        if (tokenCreateTransactionBody.getAutoRenewPeriod() != 0) {\n-            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod());\n+        if (tokenCreateTransactionBody.hasAutoRenewPeriod()) {\n+            entity.setAutoRenewPeriod(tokenCreateTransactionBody.getAutoRenewPeriod().getSeconds());\n         }\n \n-        if (tokenCreateTransactionBody.getExpiry() != 0) {\n-            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry());\n+        if (tokenCreateTransactionBody.hasExpiry()) {\n+            entity.setExpiryTimeNs(tokenCreateTransactionBody.getExpiry().getSeconds());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5OQ=="}, "originalCommit": {"oid": "00f8f47f8ac63d43e9350ad305e4c3788d0148f6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1423, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}