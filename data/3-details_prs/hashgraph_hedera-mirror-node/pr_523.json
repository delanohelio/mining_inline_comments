{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDQ4OTI5", "number": 523, "title": "Handle start and end time arithmetic overflow cases on topic subscribe", "bodyText": "Detailed description:\nWhen a client subscribes to a topic they provide a startTime and an optional endTime instant. These are converted to long to be used in the db query to compare against the consensus time stamp to determine which messages are filtered in or out.\nCurrently instants out of range i.e. less than EPOCH or results in long values created than max will result in an Arithmetic long overflow exception.\nTo resolve this issue we need to account for these edge ranges. As such I've\n\nAdded a convertOrDefault() method to the InstantToLongConverter that will scope instants in to the manageable range\nUpdated TopicMessageRepositoryCustomImpl to call this for startTime\nUpdated TopicMessageRepositoryCustomImpl to check for a > than 0 long value to specify endTime\nUpdated appropriate tests to verify scenario\n\nWhich issue(s) this PR fixes:\nFixes #521\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-02-04T21:02:26Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523", "merged": true, "mergeCommit": {"oid": "dc0f892ef8265ca63f0a97e9eb18fffdd8dbede7"}, "closed": true, "closedAt": "2020-02-13T19:35:14Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBH6NFgH2gAyMzcxMDQ4OTI5OjY5MjllNWU3MGI5Y2NiZjVlMjE5MWUyM2Y2YjhhNzBjNDQyZGMwNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEAMJlgFqTM1ODQ5NTA1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e", "committedDate": "2020-02-04T20:52:55Z", "message": "Handle start and end time arithmetic overflow cases on topic subscribe\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDA2NTYz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-353406563", "createdAt": "2020-02-05T00:58:05Z", "commit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDo1ODowNVrOFlorKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMToyNTozM1rOFlpHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwODA0MA==", "bodyText": "Why was this deleted? It tests rows before start time are not returned.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r375008040", "createdAt": "2020-02-05T00:58:05Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryTest.java", "diffHunk": "@@ -106,7 +106,6 @@ void findByFilterWithTopicNum() {\n \n     @Test\n     void findByFilterWithStartTime() {\n-        TopicMessage topicMessage1 = domainBuilder.topicMessage().block();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwODc2MQ==", "bodyText": "Why have one test for just start time overflow and another test that has both start and end time overflow? I would say the latter is sufficient.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r375008761", "createdAt": "2020-02-05T01:00:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryTest.java", "diffHunk": "@@ -121,6 +120,22 @@ void findByFilterWithStartTime() {\n                 .verifyComplete();\n     }\n \n+    @Test\n+    void findByFilterWithStartTimeOverflow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxMTIwOQ==", "bodyText": "My concern here is this approach has to be done for every query instead of just once inside ConsensusController to validate input. Exception generation and catching are orders of magnitude slower then normal java functions. And queries are now split into pages and run every 2s times Y subscribers, so might have more impact.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r375011209", "createdAt": "2020-02-05T01:09:55Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryCustomImpl.java", "diffHunk": "@@ -47,11 +47,12 @@\n                 .and(\"topic_num\")\n                 .is(filter.getTopicNum())\n                 .and(\"consensus_timestamp\")\n-                .greaterThanOrEquals(instantToLongConverter.convert(filter.getStartTime()));\n+                .greaterThanOrEquals(instantToLongConverter.convertOrDefault(filter.getStartTime()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNDQ0Nw==", "bodyText": "This approach does not address all instances of InstantToLongConverter since the shared poller uses it as well. Would be better to centralize in controller.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r375014447", "createdAt": "2020-02-05T01:22:07Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryCustomImpl.java", "diffHunk": "@@ -47,11 +47,12 @@\n                 .and(\"topic_num\")\n                 .is(filter.getTopicNum())\n                 .and(\"consensus_timestamp\")\n-                .greaterThanOrEquals(instantToLongConverter.convert(filter.getStartTime()));\n+                .greaterThanOrEquals(instantToLongConverter.convertOrDefault(filter.getStartTime()));\n \n-        if (filter.getEndTime() != null) {\n+        Long endTime = instantToLongConverter.convertOrDefault(filter.getEndTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNTMzNw==", "bodyText": "Not a fan of the extra method. The class implements Spring's Converter interface so it can be registered with Spring and used automatically within the framework. This extra method bypasses that. Though to be fair we are actually just calling it manually since Spring R2DBC doesn't currently support this, but in the future it could and we wouldn't need to call this manually in the repository.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r375015337", "createdAt": "2020-02-05T01:25:33Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/converter/InstantToLongConverter.java", "diffHunk": "@@ -39,4 +39,12 @@ public Long convert(Instant instant) {\n         }\n         return Math.addExact(Math.multiplyExact(instant.getEpochSecond(), NANOS_PER_SECOND), instant.getNano());\n     }\n+\n+    public Long convertOrDefault(Instant instant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6929e5e70b9ccbf5e2191e23f6b8a70c442dc06e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a3e9baa481a8cc3703f5c541a75d6052d69f983", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6a3e9baa481a8cc3703f5c541a75d6052d69f983", "committedDate": "2020-02-06T04:44:19Z", "message": "Corrected approach by utilizing simple comparisons instead of exception handling\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "474c46df6d132d129e7b584117671e55e6e05c38", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/474c46df6d132d129e7b584117671e55e6e05c38", "committedDate": "2020-02-06T05:07:11Z", "message": "Applied static final naming convention\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd67a20894ed543a628b21b1ebd1bd9fb9b4ba5", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6dd67a20894ed543a628b21b1ebd1bd9fb9b4ba5", "committedDate": "2020-02-06T13:43:57Z", "message": "Scope start and endtime for query filter early on in  controller\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f86f4675506774c3a30fad74a6041401efbb14c7", "committedDate": "2020-02-06T13:44:16Z", "message": "Merge branch 'master' into handlehcstimequeryoverflow\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDcwNzM3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-355470737", "createdAt": "2020-02-07T22:18:39Z", "commit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoxODo0MFrOFnL6qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjo0Mjo0OVrOFnMYqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzNDAyNQ==", "bodyText": "nit: Long.MAX_VALUE / NANOS_PER_SECOND * NANOS_PER_SECOND might be clearer", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r376634025", "createdAt": "2020-02-07T22:18:40Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -49,6 +51,8 @@\n @RequiredArgsConstructor\n public class ConsensusController extends ReactorConsensusServiceGrpc.ConsensusServiceImplBase {\n \n+    private static final long LONG_MAX_SECONDS = 9_223_372_036_000_000_000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODQwOA==", "bodyText": "This is wrong.  Having  seconds=0 and nanos=999999999 will cause end time to not be set.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r376638408", "createdAt": "2020-02-07T22:31:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -72,11 +76,23 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n                 .topicNum((int) query.getTopicID().getTopicNum());\n \n         if (query.hasConsensusStartTime()) {\n-            builder.startTime(ProtoUtil.fromTimestamp(query.getConsensusStartTime()));\n+            Timestamp startTimeStamp = query.getConsensusStartTime();\n+\n+            // scope pre epoch timestamps to epoch instant\n+            if (startTimeStamp.getSeconds() < 0 || startTimeStamp.getNanos() < 0) {\n+                builder.startTime(Instant.EPOCH);\n+            } else {\n+                builder.startTime(ProtoUtil.fromTimestamp(startTimeStamp));\n+            }\n         }\n \n         if (query.hasConsensusEndTime()) {\n-            builder.endTime(ProtoUtil.fromTimestamp(query.getConsensusEndTime()));\n+            Timestamp endTimeStamp = query.getConsensusEndTime();\n+\n+            // only set endTime if it's smaller than the seconds and nanoseconds in the Long.MAX value\n+            if (endTimeStamp.getSeconds() <= LONG_MAX_SECONDS && endTimeStamp.getNanos() <= LONG_MAX_NANOSECONDS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODk1NA==", "bodyText": "Please add a test to ConsensusControllerTest for these scenarios.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r376638954", "createdAt": "2020-02-07T22:33:05Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -72,11 +76,23 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n                 .topicNum((int) query.getTopicID().getTopicNum());\n \n         if (query.hasConsensusStartTime()) {\n-            builder.startTime(ProtoUtil.fromTimestamp(query.getConsensusStartTime()));\n+            Timestamp startTimeStamp = query.getConsensusStartTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MTcwNQ==", "bodyText": "nit: Long.MAX_VALUE % NANOS_PER_SECOND might be clearer", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r376641705", "createdAt": "2020-02-07T22:42:49Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -49,6 +51,8 @@\n @RequiredArgsConstructor\n public class ConsensusController extends ReactorConsensusServiceGrpc.ConsensusServiceImplBase {\n \n+    private static final long LONG_MAX_SECONDS = 9_223_372_036_000_000_000L;\n+    private static final int LONG_MAX_NANOSECONDS = 854_775_807;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86f4675506774c3a30fad74a6041401efbb14c7"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f813a3e79387836572c0afa844d2921d5de9fe", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d7f813a3e79387836572c0afa844d2921d5de9fe", "committedDate": "2020-02-10T21:29:00Z", "message": "Moved query time check into method and did boundary checks. Added tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzU1MTMz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-356355133", "createdAt": "2020-02-11T00:12:45Z", "commit": {"oid": "d7f813a3e79387836572c0afa844d2921d5de9fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDoxMjo0NVrOFn6KLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDoxMjo0NVrOFn6KLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5MTY2MQ==", "bodyText": "This should fail if endTimestamp is negative instead of assuming they want to never end", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r377391661", "createdAt": "2020-02-11T00:12:45Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -104,4 +121,13 @@ private Throwable unknownError(Throwable t) {\n         log.error(\"Unknown error subscribing to topic\", t);\n         return Status.INTERNAL.augmentDescription(t.getMessage()).asRuntimeException();\n     }\n+\n+    private boolean validEndTimeStamp(Timestamp endTimeStamp) {\n+        if (endTimeStamp == null) {\n+            return false;\n+        }\n+\n+        return (endTimeStamp.getSeconds() >= 0 && endTimeStamp.getSeconds() <= LONG_MAX_SECONDS) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f813a3e79387836572c0afa844d2921d5de9fe"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8473ebd4ed6bcdad2cbf0871e8fcaada74930a4f", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8473ebd4ed6bcdad2cbf0871e8fcaada74930a4f", "committedDate": "2020-02-11T01:49:54Z", "message": "Catch negative end times and throw error\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78a5c290797db77d09757cfbb9331ce90d614ec2", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/78a5c290797db77d09757cfbb9331ce90d614ec2", "committedDate": "2020-02-11T04:06:28Z", "message": "Added timestamputil and accompanying tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "632472cce196428e645c256de25e9c9d1834f1a7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/632472cce196428e645c256de25e9c9d1834f1a7", "committedDate": "2020-02-11T04:55:44Z", "message": "Performed validtimestamp check for starttime updated tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzYzNDg5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-356763489", "createdAt": "2020-02-11T15:42:19Z", "commit": {"oid": "632472cce196428e645c256de25e9c9d1834f1a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTo0MjoyMFrOFoOCVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTo1MTo1N1rOFoObvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcxNzMzMw==", "bodyText": "This looks like it will throw an IAE if startTimeStamp is negative, but we said negative timestamps should just default to epoch.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r377717333", "createdAt": "2020-02-11T15:42:20Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -72,11 +74,23 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n                 .topicNum((int) query.getTopicID().getTopicNum());\n \n         if (query.hasConsensusStartTime()) {\n-            builder.startTime(ProtoUtil.fromTimestamp(query.getConsensusStartTime()));\n+            Timestamp startTimeStamp = query.getConsensusStartTime();\n+\n+            // scope pre epoch timestamps to epoch instant\n+            if (TimestampUtil.isValidTimeStamp(startTimeStamp)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632472cce196428e645c256de25e9c9d1834f1a7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcyMzM1NQ==", "bodyText": "Not sure naming makes sense. A timestamp can be valid if greater than LONG_MAX_SECONDS, it's just not valid when we convert it to our internal representation of it as a long. It may make more sense to just move this logic to ProtoUtils.fromTimestamp(). A parameter can be added to control whether to take timestamp as is or do bounds checking.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r377723355", "createdAt": "2020-02-11T15:51:11Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/util/TimestampUtil.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.hedera.mirror.grpc.util;\n+\n+import com.hederahashgraph.api.proto.java.Timestamp;\n+import io.grpc.Status;\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.log4j.Log4j2;\n+\n+@Log4j2\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class TimestampUtil {\n+    private static final long NANOS_PER_SECOND = 1_000_000_000L;\n+    public static final long LONG_MAX_SECONDS = Long.MAX_VALUE / NANOS_PER_SECOND * NANOS_PER_SECOND;\n+    public static final int LONG_MAX_NANOSECONDS = (int) (Long.MAX_VALUE % NANOS_PER_SECOND);\n+\n+    public static boolean isValidTimeStamp(Timestamp endTimeStamp) {\n+        if (endTimeStamp == null) {\n+            return false;\n+        }\n+\n+        if (endTimeStamp.getSeconds() < 0 || endTimeStamp.getNanos() < 0) {\n+            log.warn(\"Negative endTimeStamp supplied\");\n+            throw Status.INVALID_ARGUMENT.augmentDescription(\"Negative endTimeStamp supplied\").asRuntimeException();\n+        }\n+\n+        // valid if seconds is less than max or if seconds is at max and nanoseconds are at or below max\n+        // 0 <= valid_time < LONG_MAX_SECONDS (9_223_372_036_000_000_000L) + LONG_MAX_NANOSECONDS (854_775_807)\n+        return (endTimeStamp.getSeconds() < LONG_MAX_SECONDS) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632472cce196428e645c256de25e9c9d1834f1a7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcyMzgzNg==", "bodyText": "Shouldn't be named endTimeStamp", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r377723836", "createdAt": "2020-02-11T15:51:57Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/util/TimestampUtil.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.hedera.mirror.grpc.util;\n+\n+import com.hederahashgraph.api.proto.java.Timestamp;\n+import io.grpc.Status;\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.log4j.Log4j2;\n+\n+@Log4j2\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class TimestampUtil {\n+    private static final long NANOS_PER_SECOND = 1_000_000_000L;\n+    public static final long LONG_MAX_SECONDS = Long.MAX_VALUE / NANOS_PER_SECOND * NANOS_PER_SECOND;\n+    public static final int LONG_MAX_NANOSECONDS = (int) (Long.MAX_VALUE % NANOS_PER_SECOND);\n+\n+    public static boolean isValidTimeStamp(Timestamp endTimeStamp) {\n+        if (endTimeStamp == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632472cce196428e645c256de25e9c9d1834f1a7"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e37b4b9324b22adeac16a599f05ef503ba42c60", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5e37b4b9324b22adeac16a599f05ef503ba42c60", "committedDate": "2020-02-11T17:52:53Z", "message": "Addreesed feedback. Moved isLongSupportedTimeStamp logic into ProtoUtil\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "442bd4c98a6903c9823fc5f01723e1ceb6705987", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/442bd4c98a6903c9823fc5f01723e1ceb6705987", "committedDate": "2020-02-11T17:54:39Z", "message": "Merge branch 'master' into handlehcstimequeryoverflow\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5c6aeb4a562d7315247e42e999aad97131270e", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/eb5c6aeb4a562d7315247e42e999aad97131270e", "committedDate": "2020-02-11T21:28:03Z", "message": "Captured all cases of timestamp ranges, updated controller and tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b78ebfbfb47a4820ee52fe6a3a679199baa633", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/60b78ebfbfb47a4820ee52fe6a3a679199baa633", "committedDate": "2020-02-11T21:51:58Z", "message": "Updated ConsensusControllerTest with below and above boundary cases for start and end times\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac603fcbc54bbafe96b40e06bc15790b9ec8071", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fac603fcbc54bbafe96b40e06bc15790b9ec8071", "committedDate": "2020-02-12T05:57:22Z", "message": "Simplified overflow chek by deferring to validator scenarios\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjEwMzYz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-357610363", "createdAt": "2020-02-12T16:41:52Z", "commit": {"oid": "fac603fcbc54bbafe96b40e06bc15790b9ec8071"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo0MTo1M1rOFo2GPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo0MTo1M1rOFo2GPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM3MzY5NA==", "bodyText": "Don't need to re-parse timestamp. Also can reduce if else to ternary:\nbuilder.startTime(startInstant.isBefore(Instant.EPOCH) ? Instant.EPOCH : startInstant);", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#discussion_r378373694", "createdAt": "2020-02-12T16:41:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -72,11 +74,25 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n                 .topicNum((int) query.getTopicID().getTopicNum());\n \n         if (query.hasConsensusStartTime()) {\n-            builder.startTime(ProtoUtil.fromTimestamp(query.getConsensusStartTime()));\n+            Timestamp startTimeStamp = query.getConsensusStartTime();\n+            Instant startInstant = ProtoUtil.fromTimestamp(startTimeStamp);\n+\n+            if (startInstant.isBefore(Instant.EPOCH)) {\n+                builder.startTime(Instant.EPOCH);\n+            } else {\n+                builder.startTime(ProtoUtil.fromTimestamp(startTimeStamp));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac603fcbc54bbafe96b40e06bc15790b9ec8071"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60cb5bf1cfecd12b08f9d11b54964355419b745e", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/60cb5bf1cfecd12b08f9d11b54964355419b745e", "committedDate": "2020-02-12T18:35:14Z", "message": "Simplified check and fixed never ending test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4cff7ec7e16116cbd2d2ff14ca23efe355fe8d1", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d4cff7ec7e16116cbd2d2ff14ca23efe355fe8d1", "committedDate": "2020-02-12T19:20:40Z", "message": "Centralized LONG_MAX_INSTANT, added more InstantToLongConverter tests and removed offending long running test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b14c14e2213124a4f2a88f15bc0fb8e8b68e656", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8b14c14e2213124a4f2a88f15bc0fb8e8b68e656", "committedDate": "2020-02-12T22:20:46Z", "message": "Fixed offending tests causing long run\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDk1MDUz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/523#pullrequestreview-358495053", "createdAt": "2020-02-13T19:35:03Z", "commit": {"oid": "8b14c14e2213124a4f2a88f15bc0fb8e8b68e656"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3230, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}