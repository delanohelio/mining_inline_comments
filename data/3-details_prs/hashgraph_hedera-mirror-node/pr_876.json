{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNjY4ODU4", "number": 876, "title": "Populate consensus_(start|end) for historical entries in t_record_files and fix name column", "bodyText": "Detailed description:\n\nBased on data in table t_record_files and transaction, populate consensus_start and consensus_end for historical entries in table t_record_files.\nFix name field of t_record_files to store file name instead of full file path, also update the historical rows\nFix name attribute of EventFile to store file name instead of full file path\n\nWhich issue(s) this PR fixes:\nFixes #864\nFixes #102\nSpecial notes for your reviewer:\nSample t_record_files table before and after running the db script. Note only the columns id, name, consensus_start and consensus_end are shown.\n\nBefore\n\n\n\n\nid\nname\nconsensus_start\nconsensus_end\n\n\n\n\n1\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_32_41.443132Z.rcd\n0\n0\n\n\n2\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_33_22.783669054Z.rcd\n0\n0\n\n\n3\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_33_25.526889Z.rcd\n0\n0\n\n\n4\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_39.807083001Z.rcd\n0\n0\n\n\n5\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_41.319780001Z.rcd\n0\n0\n\n\n6\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_45.120768Z.rcd\n0\n0\n\n\n7\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_41.948906Z.rcd\n0\n0\n\n\n8\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_46.183029Z.rcd\n0\n0\n\n\n9\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_50.108392Z.rcd\n0\n0\n\n\n10\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_51_46.238879002Z.rcd\n0\n0\n\n\n\n\nAfter\n\n\n\n\nid\nname\nconsensus_start\nconsensus_end\n\n\n\n\n1\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_32_41.443132Z.rcd\n1570800761443132000\n1570800761443132000\n\n\n2\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_33_22.783669054Z.rcd\n1570800802783669054\n1570800804212804002\n\n\n3\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_33_25.526889Z.rcd\n1570800805526889000\n1570800809699397001\n\n\n4\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_39.807083001Z.rcd\n1570800939807083001\n1570800939807083001\n\n\n5\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_41.319780001Z.rcd\n1570800941319780001\n1570800944994754001\n\n\n6\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_35_45.120768Z.rcd\n1570800945120768000\n1570800947816471000\n\n\n7\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_41.948906Z.rcd\n1570801001948906000\n1570801004855550000\n\n\n8\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_46.183029Z.rcd\n1570801006183029000\n1570801009875025001\n\n\n9\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_36_50.108392Z.rcd\n1570801010108392000\n1570801010552116001\n\n\n10\n/var/lib/hedera-mirror-importer/recordstreams/valid/2019-10-11T13_51_46.238879002Z.rcd\n1570801906238879002\n1570801908102556000\n\n\n\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-07-17T01:46:10Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876", "merged": true, "mergeCommit": {"oid": "c5295c0b80527d373839a90233478ec6dc413145"}, "closed": true, "closedAt": "2020-07-21T15:56:05Z", "author": {"login": "xin-hedera"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1ptWxgH2gAyNDUwNjY4ODU4OjZiOGFjOTA0NzI1OTE1NjgxNzM3ZTgwNDE4ZmY4YTk3ZjcxMDMzMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3IUJnAFqTQ1MjU5OTEwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b8ac904725915681737e80418ff8a97f710331d", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6b8ac904725915681737e80418ff8a97f710331d", "committedDate": "2020-07-17T01:39:43Z", "message": "add flyway db migration script to populate consensus_start and consensus_end for historic rows in t_record_files\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31366b4086f7f69ba477698e19712a9f15ea750e", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/31366b4086f7f69ba477698e19712a9f15ea750e", "committedDate": "2020-07-17T13:44:44Z", "message": "add comment for clarity\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNzcwNDc1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#pullrequestreview-450770475", "createdAt": "2020-07-17T15:51:06Z", "commit": {"oid": "31366b4086f7f69ba477698e19712a9f15ea750e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1MTowNlrOGzYPEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMDowNlrOGzbAfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzYzNA==", "bodyText": "There aren't any rows where consensus_start = 0 and consensus_end != 0 or vice versa. As a result, we can optimize this to combine the two update statements into one. If the runtime difference is negligible than we can keep separate.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#discussion_r456527634", "createdAt": "2020-07-17T15:51:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.28.0__populate_consensus_start_end_for_record_files.sql", "diffHunk": "@@ -0,0 +1,85 @@\n+------------\n+-- functions\n+------------\n+drop function if exists extractNsFromFilePath(varchar);\n+create function extractNsFromFilePath(filePath varchar) returns bigint as\n+$$\n+declare\n+\tbasename varchar;\n+\tsecsStr  varchar;\n+\tsecs     bigint;\n+\tnsecsStr varchar;\n+\tnsecs    bigint;\n+begin\n+    -- get the basename from the file path, note the file extension is stripped\n+    -- it's a variant of the default Java Instant string, e.g., '2019-08-30T18_10_00.419072Z'\n+\tbasename := regexp_replace(filePath, '^.*/([^/]*?)(\\.[^/.]+)?$', '\\1');\n+\n+\tsecsStr := split_part(basename, '.', 1);\n+\tsecsStr := translate(secsStr, 'T_', ' :');\n+\tsecs := extract(epoch from to_timestamp(secsStr, 'YYYY-MM-DD HH24:MI:SS'));\n+\n+\tnsecsStr := regexp_replace(basename, '.*\\.([0-9]*)Z', '\\1');\n+\tnsecsStr := rpad(nsecsStr, 9, '0');\n+\tnsecs := to_number(nsecsStr, '999999999');\n+\n+\treturn secs * 1000000000 + nsecs;\n+end;\n+$$ language plpgsql;\n+\n+drop function if exists getLastConsensusNsInRange(bigint, bigint);\n+-- get the last consensus_ns from table transaction where consensus_ns is in the range [startNs, endNs)\n+-- will throw exception if no such last consensus_ns found\n+create function getLastConsensusNsInRange(startNs bigint, endNs bigint) returns bigint as\n+$$\n+declare\n+\tlastConsensusNs bigint;\n+begin\n+\tselect consensus_ns\n+\tinto strict lastConsensusNs\n+\tfrom transaction\n+\twhere consensus_ns >= startNs\n+\t  and consensus_ns < endNs\n+\torder by consensus_ns desc\n+\tlimit 1;\n+\treturn lastConsensusNs;\n+end;\n+$$ language plpgsql;\n+\n+drop function if exists getNextRecordFileConsensusStartAfterNs(bigint);\n+-- given a timestamp ns, find the immediate next record file after ns and return its consensus_start\n+create function getNextRecordFileConsensusStartAfterNs(ns bigint) returns bigint as\n+$$\n+declare\n+\tnextConsensusStart bigint;\n+begin\n+\tselect consensus_start\n+\tinto strict nextConsensusStart\n+\tfrom t_record_files\n+\twhere consensus_start > ns\n+\torder by consensus_start\n+\tlimit 1;\n+\treturn nextConsensusStart;\n+exception\n+\twhen NO_DATA_FOUND then\n+\t\t-- no record file with consensus_start after ns found, use bigint max\n+\t\treturn 9223372036854775807;\n+end;\n+$$ language plpgsql;\n+\n+\n+-- set consensus_start to the ns extracted from file name if it's 0\n+update t_record_files\n+set consensus_start = extractNsFromFilePath(name)\n+where consensus_start = 0;\n+\n+-- set consensus_end to the consensus timestamp of the last transaction in the record file\n+update t_record_files\n+set consensus_end = getLastConsensusNsInRange(consensus_start, getNextRecordFileConsensusStartAfterNs(consensus_start))\n+where consensus_end = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31366b4086f7f69ba477698e19712a9f15ea750e"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3MzA1NQ==", "bodyText": "Doing a select on transaction for each row in t_record_files will probably not be very efficient considering the size difference between the two. Has this been tested in development database using a copied t_record_files so as to not impact the application? How long does this migration take to run?\nIf it's slow, consider inverting the logic to loop over transaction in a cursor and finding the rows that correspond to the record file table.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#discussion_r456573055", "createdAt": "2020-07-17T17:20:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.28.0__populate_consensus_start_end_for_record_files.sql", "diffHunk": "@@ -0,0 +1,85 @@\n+------------\n+-- functions\n+------------\n+drop function if exists extractNsFromFilePath(varchar);\n+create function extractNsFromFilePath(filePath varchar) returns bigint as\n+$$\n+declare\n+\tbasename varchar;\n+\tsecsStr  varchar;\n+\tsecs     bigint;\n+\tnsecsStr varchar;\n+\tnsecs    bigint;\n+begin\n+    -- get the basename from the file path, note the file extension is stripped\n+    -- it's a variant of the default Java Instant string, e.g., '2019-08-30T18_10_00.419072Z'\n+\tbasename := regexp_replace(filePath, '^.*/([^/]*?)(\\.[^/.]+)?$', '\\1');\n+\n+\tsecsStr := split_part(basename, '.', 1);\n+\tsecsStr := translate(secsStr, 'T_', ' :');\n+\tsecs := extract(epoch from to_timestamp(secsStr, 'YYYY-MM-DD HH24:MI:SS'));\n+\n+\tnsecsStr := regexp_replace(basename, '.*\\.([0-9]*)Z', '\\1');\n+\tnsecsStr := rpad(nsecsStr, 9, '0');\n+\tnsecs := to_number(nsecsStr, '999999999');\n+\n+\treturn secs * 1000000000 + nsecs;\n+end;\n+$$ language plpgsql;\n+\n+drop function if exists getLastConsensusNsInRange(bigint, bigint);\n+-- get the last consensus_ns from table transaction where consensus_ns is in the range [startNs, endNs)\n+-- will throw exception if no such last consensus_ns found\n+create function getLastConsensusNsInRange(startNs bigint, endNs bigint) returns bigint as\n+$$\n+declare\n+\tlastConsensusNs bigint;\n+begin\n+\tselect consensus_ns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31366b4086f7f69ba477698e19712a9f15ea750e"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTc2NzIz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#pullrequestreview-450976723", "createdAt": "2020-07-17T21:56:45Z", "commit": {"oid": "31366b4086f7f69ba477698e19712a9f15ea750e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838bb7a76170b3ac57505b0e53c4fc5ae1f4b03e", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/838bb7a76170b3ac57505b0e53c4fc5ae1f4b03e", "committedDate": "2020-07-18T02:36:07Z", "message": "db migration script optimization\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzUxMzA1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#pullrequestreview-451351305", "createdAt": "2020-07-20T07:17:14Z", "commit": {"oid": "838bb7a76170b3ac57505b0e53c4fc5ae1f4b03e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNzoxNFrOGz8iow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNzoxNFrOGz8iow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMjQ2Nw==", "bodyText": "There's an item to modify the t_record_files to remove /var/lib/hedera-mirror-importer/recordstreams/valid/ #102 .\nIf it's not to much overhead since you've pulled out the basename I'd consider doing it here since you are updating the table.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#discussion_r457122467", "createdAt": "2020-07-20T07:17:14Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.27.1__populate_consensus_start_end_for_record_files.sql", "diffHunk": "@@ -0,0 +1,106 @@\n+------------\n+-- functions\n+------------\n+drop function if exists extractNsFromFilePath(varchar);\n+create function extractNsFromFilePath(filePath varchar) returns bigint as\n+$$\n+declare\n+\tbasename varchar;\n+\tsecsStr  varchar;\n+\tsecs     bigint;\n+\tnsecsStr varchar;\n+\tnsecs    bigint;\n+begin\n+\t-- get the basename from the file path, note the file extension is stripped\n+\t-- it's a variant of the default Java Instant string, e.g., '2019-08-30T18_10_00.419072Z'\n+\tbasename := regexp_replace(filePath, '^.*/([^/]*?)(\\.[^/.]+)?$', '\\1');\n+\n+\tsecsStr := split_part(basename, '.', 1);\n+\tsecsStr := translate(secsStr, 'T_', ' :');\n+\tsecs := extract(epoch from to_timestamp(secsStr, 'YYYY-MM-DD HH24:MI:SS'));\n+\n+\tnsecsStr := regexp_replace(basename, '.*\\.([0-9]*)Z', '\\1');\n+\tnsecsStr := rpad(nsecsStr, 9, '0');\n+\tnsecs := to_number(nsecsStr, '999999999');\n+\n+\treturn secs * 1000000000 + nsecs;\n+end;\n+$$ language plpgsql;\n+\n+drop function if exists getNextRecordFileConsensusStart(bigint);\n+-- given the record file id, find the immediate next record file and return its consensus_start\n+-- if no record file found, return bigint max\n+create function getNextRecordFileConsensusStart(currentId bigint) returns bigint as\n+$$\n+declare\n+\tnextConsensusStart bigint;\n+begin\n+\tselect consensus_start\n+\tinto strict nextConsensusStart\n+\tfrom t_record_files\n+\twhere id > currentId\n+\torder by id\n+\tlimit 1;\n+\treturn nextConsensusStart;\n+exception\n+\twhen NO_DATA_FOUND then\n+\t\t-- no record file found, use bigint max\n+\t\treturn 9223372036854775807;\n+end;\n+$$ language plpgsql;\n+\n+drop function if exists updateConsensusEndForRecordFiles();\n+create function updateConsensusEndForRecordFiles() returns void as\n+$$\n+declare\n+\ttxnCursor          refcursor;\n+\trecordFile         record;\n+\tconsensusEnd       bigint;\n+\tcurrentNs          bigint;\n+\tnextConsensusStart bigint;\n+begin\n+\topen txnCursor no scroll for select consensus_ns from transaction order by consensus_ns;\n+\tcurrentNs := 0;\n+\n+\tfor recordFile in\n+\t\tselect id\n+\t\tfrom t_record_files\n+\t\twhere consensus_end = 0\n+\t\torder by id\n+\t\tloop\n+\t\t\tif currentNs is NULL then\n+\t\t\t\traise exception 'No transactions left in cursor, but there are still record files to process, current at id %', recordFile.id;\n+\t\t\tend if;\n+\n+\t\t\tnextConsensusStart := getNextRecordFileConsensusStart(recordFile.id);\n+\t\t\twhile true\n+\t\t\t\tloop\n+\t\t\t\t\tconsensusEnd := currentNs;\n+\t\t\t\t\tfetch txnCursor into currentNs;\n+\t\t\t\t\tif currentNs is NULL or currentNs >= nextConsensusStart then\n+\t\t\t\t\t\texit; -- exit the while loop\n+\t\t\t\t\tend if;\n+\t\t\t\tend loop;\n+\n+\t\t\tif consensusEnd = 0 then\n+\t\t\t\traise exception 'Fatal! no valid consensus_end found for record file id %', recordFile.id;\n+\t\t\tend if;\n+\n+\t\t\tupdate t_record_files\n+\t\t\tset consensus_end = consensusEnd\n+\t\t\twhere id = recordFile.id;\n+\t\tend loop;\n+end\n+$$ language plpgsql;\n+\n+-- set consensus_start to the ns extracted from file name if it's 0\n+update t_record_files\n+set consensus_start = extractNsFromFilePath(name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "838bb7a76170b3ac57505b0e53c4fc5ae1f4b03e"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "874890c5462985c75377d402599a5c09b4b24d02", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/874890c5462985c75377d402599a5c09b4b24d02", "committedDate": "2020-07-20T15:36:27Z", "message": "store file name not the full file path in EventFile.name\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "226de784b082393ef1408b35b4df24e9c9696f19", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/226de784b082393ef1408b35b4df24e9c9696f19", "committedDate": "2020-07-20T20:36:47Z", "message": "use file name instead of full file path for name field of RecordFile and EventFile\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b6a5e3558abd5077acb60563efbe73cec5beb95", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1b6a5e3558abd5077acb60563efbe73cec5beb95", "committedDate": "2020-07-20T20:29:50Z", "message": "placeholder\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}, "afterCommit": {"oid": "226de784b082393ef1408b35b4df24e9c9696f19", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/226de784b082393ef1408b35b4df24e9c9696f19", "committedDate": "2020-07-20T20:36:47Z", "message": "use file name instead of full file path for name field of RecordFile and EventFile\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTYxODE2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#pullrequestreview-451961816", "createdAt": "2020-07-20T21:10:21Z", "commit": {"oid": "226de784b082393ef1408b35b4df24e9c9696f19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxMDoyMVrOG0fZrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxMDoyMVrOG0fZrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5MzYxNA==", "bodyText": "Can we change parseRecordFile to take in a File instead of using this logic?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#discussion_r457693614", "createdAt": "2020-07-20T21:10:21Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "diffHunk": "@@ -137,8 +138,8 @@\n     public static RecordFile parseRecordFile(String filePath, String expectedPrevFileHash, Instant verifyHashAfter,\n                                              Consumer<RecordItem> recordItemConsumer) {\n         RecordFile recordFile = new RecordFile();\n-        recordFile.setName(filePath);\n-        String fileName = Utility.getFileName(filePath);\n+        String fileName = FilenameUtils.getName(filePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226de784b082393ef1408b35b4df24e9c9696f19"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbecc7c8251c60a85335a9f8dd8699d882b5c50a", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fbecc7c8251c60a85335a9f8dd8699d882b5c50a", "committedDate": "2020-07-21T14:51:26Z", "message": "use file name instead of file path to query t_record_files to check duplicate\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e378e527bdab4173582d0984fe646196169f60a", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0e378e527bdab4173582d0984fe646196169f60a", "committedDate": "2020-07-20T23:25:49Z", "message": "pass file object to Utility.parseRecordFile\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}, "afterCommit": {"oid": "fbecc7c8251c60a85335a9f8dd8699d882b5c50a", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fbecc7c8251c60a85335a9f8dd8699d882b5c50a", "committedDate": "2020-07-21T14:51:26Z", "message": "use file name instead of file path to query t_record_files to check duplicate\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTk5MTA5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/876#pullrequestreview-452599109", "createdAt": "2020-07-21T15:53:10Z", "commit": {"oid": "fbecc7c8251c60a85335a9f8dd8699d882b5c50a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}