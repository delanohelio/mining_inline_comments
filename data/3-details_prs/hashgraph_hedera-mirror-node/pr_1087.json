{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDA0ODQ2", "number": 1087, "title": "HTS: Add new fields to accounts, balances and transactions REST API", "bodyText": "Detailed description:\n\nAdd tokens array to the account object in accounts response json for clients to retrieve token balance snapshot\nAdd tokens array to the account object in balances response json for clients to retrieve token balance snapshot\nAdd token_transfers array to the transaction object in transactions response json for token transfer transactions\nAdd integration tests for accounts, balances and transactions REST API endpoints\n\nWhich issue(s) this PR fixes:\nFixes #1047 #1088\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-09-28T21:12:04Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087", "merged": true, "mergeCommit": {"oid": "efe83c25e49dd8eaf29006b342d51244f02e6260"}, "closed": true, "closedAt": "2020-10-02T17:05:50Z", "author": {"login": "xin-hedera"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMcT8RgH2gAyNDk0NDA0ODQ2OjBkM2IzZjNkZjBjMGVmZTY4ZjZiMTEwNmQ4NWFkNDlhMWRjYzNmMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOoBusAFqTUwMTI1MjE1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0d3b3f3df0c0efe68f6b1106d85ad49a1dcc3f21", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0d3b3f3df0c0efe68f6b1106d85ad49a1dcc3f21", "committedDate": "2020-09-25T21:03:27Z", "message": "support token balances in balances endpoint\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceb685ec0c733bd7805cd86a9da809a099f8d731", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ceb685ec0c733bd7805cd86a9da809a099f8d731", "committedDate": "2020-09-28T20:48:36Z", "message": "add token transfer list for /transactions\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "429c0b0cb61bf01b300c36d50850701530b6de5a", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/429c0b0cb61bf01b300c36d50850701530b6de5a", "committedDate": "2020-09-28T21:00:24Z", "message": "Merge branch 'master' into token-new-fields-balances-transactions-rest-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f73fc86028a9417e549c38be5ae53d1d000e0033", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f73fc86028a9417e549c38be5ae53d1d000e0033", "committedDate": "2020-09-28T21:11:26Z", "message": "move 'pg-format' to dev dependencies\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3c975755061d6e22f04b72281e55b382a30a522b", "committedDate": "2020-09-28T21:16:46Z", "message": "cleanup\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTgzODUw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-498983850", "createdAt": "2020-09-29T23:02:27Z", "commit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzgyMjU0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-499782254", "createdAt": "2020-09-30T20:22:44Z", "commit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoyMjo0NFrOHat8Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoyOToyOVrOHauJ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3NzcyMg==", "bodyText": "file name is misspelled transactions-16-specefic-id-tokentransfer.spec.json. Should be transactions-16-specific-id-tokentransfer.spec.json", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497777722", "createdAt": "2020-09-30T20:22:44Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/specs/transactions-16-specefic-id-tokentransfer.spec.json", "diffHunk": "@@ -0,0 +1,97 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4MDU1NA==", "bodyText": "nit: You should add a comment highlighting you're formatting the response as an aggregate of comma separated tokenid balance paris e.g. \"0.0.2=1000,0.0.5=-333..\" so that you can easily split it out later", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497780554", "createdAt": "2020-09-30T20:28:12Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -51,54 +53,56 @@ const getBalances = async (req, res) => {\n     }\n   }\n \n-  let [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n-\n-  let [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n-\n-  let [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n-  let joinEntities = '' !== pubKeyQuery; // Only need to join t_entites if we're selecting on publickey.\n-\n+  const [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n+  const [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n+  const [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n   const {query, params, order, limit} = utils.parseLimitAndOrderParams(req, 'desc');\n \n   // Use the inner query to find the latest snapshot timestamp from the balance history table\n-  let innerQuery =\n-    'select consensus_timestamp from account_balance ab\\n' +\n-    ' where\\n' +\n-    (tsQuery === '' ? '1=1' : tsQuery) +\n-    '\\n' +\n-    'order by consensus_timestamp desc limit 1';\n-\n-  let sqlQuery = 'select ab.consensus_timestamp,\\n' + 'ab.account_id, ab.balance\\n' + ' from account_balance ab\\n';\n-  if (joinEntities) {\n-    sqlQuery +=\n-      ' join t_entities e\\n' +\n-      ' on e.id = ab.account_id\\n' +\n-      ' and e.entity_shard = ' +\n-      config.shard +\n-      '\\n' +\n-      ' and e.fk_entity_type_id < ' +\n-      utils.ENTITY_TYPE_FILE +\n-      '\\n';\n-  }\n-  sqlQuery +=\n-    ' where ' +\n-    ' consensus_timestamp = (' +\n-    innerQuery +\n-    ')\\n' +\n-    ' and\\n' +\n-    [accountQuery, pubKeyQuery, balanceQuery].map((q) => (q === '' ? '1=1' : q)).join(' and ') +\n-    ' order by consensus_timestamp desc, ' +\n-    'account_id ' +\n-    order +\n-    ' ' +\n-    query;\n-\n-  let sqlParams = tsParams.concat(accountParams).concat(pubKeyParams).concat(balanceParams).concat(params);\n-\n+  const innerQuery = `\n+      SELECT\n+        ab.consensus_timestamp\n+      FROM account_balance ab\n+      WHERE ${tsQuery === '' ? '1=1' : tsQuery}\n+      ORDER BY ab.consensus_timestamp DESC\n+      LIMIT 1`;\n+\n+  const whereClause = `\n+      WHERE ${[`ab.consensus_timestamp = (${innerQuery})`, accountQuery, pubKeyQuery, balanceQuery]\n+        .filter((q) => q !== '')\n+        .join(' AND ')}`;\n+\n+  // Only need to join t_entites if we're selecting on publickey.\n+  const joinEntityClause =\n+    pubKeyQuery !== ''\n+      ? `\n+      JOIN t_entities e\n+        ON e.id = ab.account_id\n+          AND e.entity_shard = ${config.shard}\n+          AND e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}`\n+      : '';\n+\n+  const sqlQuery = `\n+      SELECT\n+        ab.consensus_timestamp,\n+        ab.account_id,\n+        ab.balance,\n+        string_agg(tb.token_id || '=' || tb.balance, ',' ORDER BY tb.token_id) AS token_balances", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4MTIwNQ==", "bodyText": "nit: same thing here, add a comment with an example to highlight aggregation logic", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497781205", "createdAt": "2020-09-30T20:29:29Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -34,12 +35,40 @@ const selectClause = `SELECT\n        coalesce(ttr.result, 'UNKNOWN') AS result,\n        coalesce(ttt.name, 'UNKNOWN') AS name,\n        t.node_account_id,\n-       ctl.entity_id as ctl_entity_id,\n-       ctl.amount,\n+       ctl.entity_id AS ctl_entity_id,\n+       ctl.amount AS amount,\n+       string_agg(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e20fdacdf869448a06a7daf2b36d665f1796e0dc", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e20fdacdf869448a06a7daf2b36d665f1796e0dc", "committedDate": "2020-10-01T01:57:16Z", "message": "add token balances to /accounts and /accounts/:accountId responses\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da154ca975a8fe69c1be4218249799ecedbee169", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/da154ca975a8fe69c1be4218249799ecedbee169", "committedDate": "2020-10-01T14:07:58Z", "message": "adjust token_balance primary key\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a99344691976e16988a887aed15018228f562bc8", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a99344691976e16988a887aed15018228f562bc8", "committedDate": "2020-10-01T14:17:28Z", "message": "Merge branch 'master' into token-new-fields-balances-transactions-rest-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDAzOTA0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-500403904", "createdAt": "2020-10-01T14:25:01Z", "commit": {"oid": "a99344691976e16988a887aed15018228f562bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoyNTowMVrOHbM9Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoyNTowMVrOHbM9Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI4NTg0Ng==", "bodyText": "token balance query is by (consensus_timestamp, account_id), adjust the order of the column in the primary key so the query can utilize the index", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498285846", "createdAt": "2020-10-01T14:25:01Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.30.1__hts_support.sql", "diffHunk": "@@ -106,7 +106,7 @@ create table if not exists token_balance\n );\n \n alter table if exists token_balance\n-    add constraint token_balance__pk primary key (consensus_timestamp, token_id, account_id);\n+    add constraint token_balance__pk primary key (consensus_timestamp, account_id, token_id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99344691976e16988a887aed15018228f562bc8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e96418ca0abe964fd9c3f6e752c13d658efbec8b", "committedDate": "2020-10-01T14:25:14Z", "message": "fix token transfer transaction name\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODYyOTkw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-499862990", "createdAt": "2020-09-30T22:45:20Z", "commit": {"oid": "3c975755061d6e22f04b72281e55b382a30a522b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNToxNTo0NFrOHbPTHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjowNDoxNVrOHbRXmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg==", "bodyText": "Having a token transfers array inside a token transfers array is confusing. Would prefer a flat structure like cryptotransfers. I don't think the payerAccountId, nodeAccountId and treasureAccountId are necessary as the recipient account is already created by entities array and linked via the token_transfers.account.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498324252", "createdAt": "2020-10-01T15:15:44Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/transactions-01-no-args.spec.json", "diffHunk": "@@ -45,12 +45,71 @@\n         \"nodeAccountId\": \"0.0.3\",\n         \"treasuryAccountId\": \"0.0.98\"\n       }\n+    ],\n+    \"tokentransfers\": [\n+      {\n+        \"consensus_timestamp\": \"1234567890000000004\",\n+        \"payerAccountId\": \"0.0.10\",\n+        \"nodeAccountId\": \"0.0.3\",\n+        \"treasuryAccountId\": \"0.0.98\",\n+        \"token_transfers\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0NzMxMQ==", "bodyText": "LEFT OUTER JOIN to be consistent with the others. Functionally they're both the same.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498347311", "createdAt": "2020-10-01T15:47:43Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -102,24 +133,28 @@ const createTransferLists = function (rows) {\n  * @return {String} outerQuery Fully formed SQL query\n  */\n const getTransactionsOuterQuery = function (innerQuery, order) {\n-  return (\n-    selectClause +\n-    `FROM ( ${innerQuery} ) AS tlist\n+  return `\n+    ${selectClause}\n+    FROM ( ${innerQuery} ) AS tlist\n        JOIN transaction t ON tlist.consensus_timestamp = t.consensus_ns\n        LEFT OUTER JOIN t_transaction_results ttr ON ttr.proto_id = t.result\n        LEFT OUTER JOIN t_transaction_types ttt ON ttt.proto_id = t.type\n        JOIN crypto_transfer ctl ON tlist.consensus_timestamp = ctl.consensus_timestamp\n-     ORDER BY t.consensus_ns ${order} , ctl_entity_id ASC, amount ASC`\n-  );\n+       LEFT JOIN token_transfer ttl", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0OTQzNw==", "bodyText": "The sort order differs from transfers and may not be deterministic. We should probably sort account_id asc, token_id asc.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498349437", "createdAt": "2020-10-01T15:50:51Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/transactions-16-specific-id-tokentransfer.spec.json", "diffHunk": "@@ -0,0 +1,97 @@\n+{\n+  \"description\": \"Transaction api calls for a specific transaction using transaction id\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 3\n+      },\n+      {\n+        \"entity_num\": 9\n+      },\n+      {\n+        \"entity_num\": 10\n+      },\n+      {\n+        \"entity_num\": 98\n+      }\n+    ],\n+    \"balances\": [],\n+    \"transactions\": [],\n+    \"cryptotransfers\": [],\n+    \"tokentransfers\": [\n+      {\n+        \"consensus_timestamp\": \"1565779555711927001\",\n+        \"payerAccountId\": \"0.0.300\",\n+        \"nodeAccountId\": \"0.0.3\",\n+        \"treasuryAccountId\": \"0.0.98\",\n+        \"token_transfers\": [\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.300\",\n+            \"amount\": -1200\n+          },\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.200\",\n+            \"amount\": 200\n+          },\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.400\",\n+            \"amount\": 1000\n+          }\n+        ]\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/transactions/0.0.300-1565779555-711927000\",\n+  \"responseStatus\": 200,\n+  \"responseJson\": {\n+    \"transactions\": [\n+      {\n+        \"consensus_timestamp\": \"1565779555.711927001\",\n+        \"valid_start_timestamp\": \"1565779555.711927000\",\n+        \"charged_tx_fee\": 7,\n+        \"memo_base64\": null,\n+        \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",\n+        \"name\": \"TOKENTRANSFERS\",\n+        \"node\": \"0.0.3\",\n+        \"transaction_id\": \"0.0.300-1565779555-711927000\",\n+        \"valid_duration_seconds\": \"11\",\n+        \"max_fee\": \"33\",\n+        \"transfers\": [\n+          {\n+            \"account\": \"0.0.3\",\n+            \"amount\": 2\n+          },\n+          {\n+            \"account\": \"0.0.98\",\n+            \"amount\": 1\n+          },\n+          {\n+            \"account\": \"0.0.300\",\n+            \"amount\": -3\n+          }\n+        ],\n+        \"token_transfers\": [\n+          {\n+            \"account\": \"0.0.400\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM1ODE3MQ==", "bodyText": "Using json might be a better, more future-proof approach for nested data.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498358171", "createdAt": "2020-10-01T16:04:15Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -51,54 +53,57 @@ const getBalances = async (req, res) => {\n     }\n   }\n \n-  let [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n-\n-  let [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n-\n-  let [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n-  let joinEntities = '' !== pubKeyQuery; // Only need to join t_entites if we're selecting on publickey.\n-\n+  const [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n+  const [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n+  const [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n   const {query, params, order, limit} = utils.parseLimitAndOrderParams(req, 'desc');\n \n   // Use the inner query to find the latest snapshot timestamp from the balance history table\n-  let innerQuery =\n-    'select consensus_timestamp from account_balance ab\\n' +\n-    ' where\\n' +\n-    (tsQuery === '' ? '1=1' : tsQuery) +\n-    '\\n' +\n-    'order by consensus_timestamp desc limit 1';\n-\n-  let sqlQuery = 'select ab.consensus_timestamp,\\n' + 'ab.account_id, ab.balance\\n' + ' from account_balance ab\\n';\n-  if (joinEntities) {\n-    sqlQuery +=\n-      ' join t_entities e\\n' +\n-      ' on e.id = ab.account_id\\n' +\n-      ' and e.entity_shard = ' +\n-      config.shard +\n-      '\\n' +\n-      ' and e.fk_entity_type_id < ' +\n-      utils.ENTITY_TYPE_FILE +\n-      '\\n';\n-  }\n-  sqlQuery +=\n-    ' where ' +\n-    ' consensus_timestamp = (' +\n-    innerQuery +\n-    ')\\n' +\n-    ' and\\n' +\n-    [accountQuery, pubKeyQuery, balanceQuery].map((q) => (q === '' ? '1=1' : q)).join(' and ') +\n-    ' order by consensus_timestamp desc, ' +\n-    'account_id ' +\n-    order +\n-    ' ' +\n-    query;\n-\n-  let sqlParams = tsParams.concat(accountParams).concat(pubKeyParams).concat(balanceParams).concat(params);\n-\n+  const innerQuery = `\n+      SELECT\n+        ab.consensus_timestamp\n+      FROM account_balance ab\n+      WHERE ${tsQuery === '' ? '1=1' : tsQuery}\n+      ORDER BY ab.consensus_timestamp DESC\n+      LIMIT 1`;\n+\n+  const whereClause = `\n+      WHERE ${[`ab.consensus_timestamp = (${innerQuery})`, accountQuery, pubKeyQuery, balanceQuery]\n+        .filter((q) => q !== '')\n+        .join(' AND ')}`;\n+\n+  // Only need to join t_entites if we're selecting on publickey.\n+  const joinEntityClause =\n+    pubKeyQuery !== ''\n+      ? `\n+      JOIN t_entities e\n+        ON e.id = ab.account_id\n+          AND e.entity_shard = ${config.shard}\n+          AND e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}`\n+      : '';\n+\n+  // token balances pairs are aggregated as a string, e.g., \"100=600,101=700\"\n+  const sqlQuery = `\n+      SELECT\n+        ab.consensus_timestamp,\n+        ab.account_id,\n+        ab.balance,\n+        string_agg(tb.token_id || '=' || tb.balance, ',' ORDER BY tb.token_id) AS token_balances", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0a1b13eed68e5ca5e19a21f9f4383e76b09b47", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6e0a1b13eed68e5ca5e19a21f9f4383e76b09b47", "committedDate": "2020-10-01T20:20:01Z", "message": "switch json_agg with json_build_object, order token balance / token transfer the same as the primary order\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2906e57fd4f25cef1f233b51c3b66bff70a3c568", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2906e57fd4f25cef1f233b51c3b66bff70a3c568", "committedDate": "2020-10-01T20:25:26Z", "message": "rename 'token_transfers' in setup of integration test specs to 'token_transfer_list'\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODM1NTUx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-500835551", "createdAt": "2020-10-02T02:57:46Z", "commit": {"oid": "2906e57fd4f25cef1f233b51c3b66bff70a3c568"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80838cf574390fd71d9a4619c4aca4b8dee7f116", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/80838cf574390fd71d9a4619c4aca4b8dee7f116", "committedDate": "2020-10-02T15:46:06Z", "message": "Merge remote-tracking branch 'origin/master' into token-new-fields-balances-transactions-rest-api\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>\n\n# Conflicts:\n#\thedera-mirror-rest/package.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjUyMTUw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#pullrequestreview-501252150", "createdAt": "2020-10-02T15:50:16Z", "commit": {"oid": "2906e57fd4f25cef1f233b51c3b66bff70a3c568"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3563, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}