{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTY3MzU2", "number": 1307, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyOTo0MlrOE_utZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNjozMVrOE_zzqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjYxMDMwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyOTo0MlrOH9mK2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzozMjowMlrOH9mRJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1MDU1NA==", "bodyText": "nit: perhaps if it's token transfer, the memo should say so?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534350554", "createdAt": "2020-12-02T17:29:42Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,12 +55,15 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n                 .setMaxTransactionFee(maxTransactionFee)\n                 .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f74dc9bebbdb56327d88288779339ad2d4a3c1af"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1MjE2Nw==", "bodyText": "Good idea, moved that line into the if/else to reflect the two different types.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534352167", "createdAt": "2020-12-02T17:32:02Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,12 +55,15 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n                 .setMaxTransactionFee(maxTransactionFee)\n                 .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1MDU1NA=="}, "originalCommit": {"oid": "f74dc9bebbdb56327d88288779339ad2d4a3c1af"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzI1OTkyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxNDoyMlrOH9sY_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTo1NlrOH9uIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjQ3OQ==", "bodyText": "Why else vs the ability to do both if so configured?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534452479", "createdAt": "2020-12-02T20:14:22Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,16 +55,20 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n-                .setMaxTransactionFee(maxTransactionFee)\n-                .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+                .setMaxTransactionFee(maxTransactionFee);\n \n-        if (StringUtils.isNotBlank(tokenId)) {\n+        //Only add an Hbar transfer or a token transfer, never both\n+        if (StringUtils.isBlank(tokenId)) {\n+            transferTransaction\n+                    .addHbarTransfer(recipientId, amount)\n+                    .addHbarTransfer(senderId, Math.negateExact(amount))\n+                    .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58f69bb0d2dc6f9bc031d9c9c393c0582dd13a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MzcxOA==", "bodyText": "I was about to comment that as well. We should probably add this scenario.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534453718", "createdAt": "2020-12-02T20:16:36Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,16 +55,20 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n-                .setMaxTransactionFee(maxTransactionFee)\n-                .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+                .setMaxTransactionFee(maxTransactionFee);\n \n-        if (StringUtils.isNotBlank(tokenId)) {\n+        //Only add an Hbar transfer or a token transfer, never both\n+        if (StringUtils.isBlank(tokenId)) {\n+            transferTransaction\n+                    .addHbarTransfer(recipientId, amount)\n+                    .addHbarTransfer(senderId, Math.negateExact(amount))\n+                    .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+        } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjQ3OQ=="}, "originalCommit": {"oid": "f58f69bb0d2dc6f9bc031d9c9c393c0582dd13a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NTM4Mw==", "bodyText": "I wasn't sure there was a valid use case for needing to do both, whereas there is an obvious need for the other two, and I wasn't sure just how much config we wanted to add here.  I can add an enum for the 3 cases and have it default to CRYPTO.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534455383", "createdAt": "2020-12-02T20:19:40Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,16 +55,20 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n-                .setMaxTransactionFee(maxTransactionFee)\n-                .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+                .setMaxTransactionFee(maxTransactionFee);\n \n-        if (StringUtils.isNotBlank(tokenId)) {\n+        //Only add an Hbar transfer or a token transfer, never both\n+        if (StringUtils.isBlank(tokenId)) {\n+            transferTransaction\n+                    .addHbarTransfer(recipientId, amount)\n+                    .addHbarTransfer(senderId, Math.negateExact(amount))\n+                    .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+        } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjQ3OQ=="}, "originalCommit": {"oid": "f58f69bb0d2dc6f9bc031d9c9c393c0582dd13a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MTAyMA==", "bodyText": "Added an enum so all 3 scenarios are supported, and moved some code around to reduce duplication.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534481020", "createdAt": "2020-12-02T21:05:56Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -55,16 +55,20 @@ public TransferTransaction get() {\n         AccountId senderId = AccountId.fromString(senderAccountId);\n \n         TransferTransaction transferTransaction = new TransferTransaction()\n-                .addHbarTransfer(recipientId, amount)\n-                .addHbarTransfer(senderId, Math.negateExact(amount))\n-                .setMaxTransactionFee(maxTransactionFee)\n-                .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+                .setMaxTransactionFee(maxTransactionFee);\n \n-        if (StringUtils.isNotBlank(tokenId)) {\n+        //Only add an Hbar transfer or a token transfer, never both\n+        if (StringUtils.isBlank(tokenId)) {\n+            transferTransaction\n+                    .addHbarTransfer(recipientId, amount)\n+                    .addHbarTransfer(senderId, Math.negateExact(amount))\n+                    .setTransactionMemo(Utility.getMemo(\"Mirror node created test crypto transfer\"));\n+        } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjQ3OQ=="}, "originalCommit": {"oid": "f58f69bb0d2dc6f9bc031d9c9c393c0582dd13a8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzQ0NTUyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNjozMVrOH9uJmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowODowM1rOH9uM_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MTMwNw==", "bodyText": "@NotNull", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534481307", "createdAt": "2020-12-02T21:06:31Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -48,24 +47,52 @@\n \n     private String tokenId;\n \n+    private TransferType transferType = TransferType.CRYPTO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bffc85e6c7a201b9131b7a67dc372bfe34a22a2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MjE3NA==", "bodyText": "Oops, fixed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1307#discussion_r534482174", "createdAt": "2020-12-02T21:08:03Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -48,24 +47,52 @@\n \n     private String tokenId;\n \n+    private TransferType transferType = TransferType.CRYPTO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MTMwNw=="}, "originalCommit": {"oid": "1bffc85e6c7a201b9131b7a67dc372bfe34a22a2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1295, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}