{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDQ4Mjgx", "number": 549, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNTowMTozNFrODhxAkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNTowNTowN1rODhxDAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzMyNTYxOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNTowMTozNFrOFsrwFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1Njo0OFrOFtC4nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5ODQ4Ng==", "bodyText": "You don't need to insert all fields, just the required ones (entity_num, entity_realm, entity_shared, fk_entity_type_id). Id is auto generated. This keeps it from being too coupled.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/549#discussion_r382398486", "createdAt": "2020-02-21T05:01:34Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -66,9 +64,54 @@ private PostgresqlConnectionFactory getConnectionFactory() {\n         return connectionFactory;\n     }\n \n-    private PostgresqlConnection getConnection() {\n-        log.debug(\"Obtain PostgresqlConnection\");\n-        return getConnectionFactory().create().block(Duration.ofMillis(500));\n+    private DatabaseClient getClient() {\n+        return DatabaseClient.create(getConnectionFactory());\n+    }\n+\n+    public long createTopic() {\n+        long topicNum = getNextAvailableTopicID();\n+\n+        String entityInsertSql = \"insert into t_entities\"\n+                + \" (id, entity_num, entity_realm, entity_shard, fk_entity_type_id, key, ed25519_public_key_hex)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6749714f3ee4cc632eb32e1bc50c5305e466f0be"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzUwMA==", "bodyText": "Good point. I left out a few but I can drop more.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/549#discussion_r382777500", "createdAt": "2020-02-21T19:56:48Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -66,9 +64,54 @@ private PostgresqlConnectionFactory getConnectionFactory() {\n         return connectionFactory;\n     }\n \n-    private PostgresqlConnection getConnection() {\n-        log.debug(\"Obtain PostgresqlConnection\");\n-        return getConnectionFactory().create().block(Duration.ofMillis(500));\n+    private DatabaseClient getClient() {\n+        return DatabaseClient.create(getConnectionFactory());\n+    }\n+\n+    public long createTopic() {\n+        long topicNum = getNextAvailableTopicID();\n+\n+        String entityInsertSql = \"insert into t_entities\"\n+                + \" (id, entity_num, entity_realm, entity_shard, fk_entity_type_id, key, ed25519_public_key_hex)\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5ODQ4Ng=="}, "originalCommit": {"oid": "6749714f3ee4cc632eb32e1bc50c5305e466f0be"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzMzMTg3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNTowNTowN1rOFsrzRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToyMDoxOVrOFtE7fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5OTMwMA==", "bodyText": "These two can be combined with an INSERT ... ON CONFLICT DO NOTHING", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/549#discussion_r382399300", "createdAt": "2020-02-21T05:05:07Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -77,6 +120,10 @@ public void insertTopicMessage(int newTopicsMessageCount, long topicNum, Instant\n             return;\n         }\n \n+        if (!topicExists(topicNum)) {\n+            topicNum = createTopic();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6749714f3ee4cc632eb32e1bc50c5305e466f0be"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxMTAwNA==", "bodyText": "Will do. Will also add a createNewTopic to utilize other logic", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/549#discussion_r382811004", "createdAt": "2020-02-21T21:20:19Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -77,6 +120,10 @@ public void insertTopicMessage(int newTopicsMessageCount, long topicNum, Instant\n             return;\n         }\n \n+        if (!topicExists(topicNum)) {\n+            topicNum = createTopic();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5OTMwMA=="}, "originalCommit": {"oid": "6749714f3ee4cc632eb32e1bc50c5305e466f0be"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1163, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}