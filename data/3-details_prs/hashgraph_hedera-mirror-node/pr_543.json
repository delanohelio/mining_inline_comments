{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODYwODQ2", "number": 543, "title": "Fix subscribe topic with end time not completing", "bodyText": "Detailed description:\n\nAdds a new property hedera.mirror.grpc.endTimeInterval that controls how often a subscription should be checked to see if it should be completed\nChecks whether the end time is after the current time and we haven't seen any new messages in between now and our last check.\n\nWhich issue(s) this PR fixes:\nFixes #535\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-02-18T22:08:35Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543", "merged": true, "mergeCommit": {"oid": "92cce5b5aad42b8d5d607d392b9436cfba410db8"}, "closed": true, "closedAt": "2020-02-28T17:38:03Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFpU2TgH2gAyMzc2ODYwODQ2OmZmNDY5OTNmZGU0NmI4MDBkM2QwNDMwMzg4YTQ1OTA2NjJiNTFjOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIy8y2AFqTM2NjU0NjE1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ff46993fde46b800d3d0430388a4590662b51c95", "committedDate": "2020-02-18T22:04:35Z", "message": "Fix subscribe topic with end time not completing\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzY3Mzk2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-360767396", "createdAt": "2020-02-19T00:22:57Z", "commit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMDoyMjo1N1rOFrXLmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMDoyMjo1N1rOFrXLmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxMjg5MA==", "bodyText": "This kills historical queries that are still running (polling every 2 sec). lastTopicMessage is the last one processed, not last one in the system.\nIf you send a subscription request with endTime=now() with very old startTime on a big topic, it dies 30 seconds in regardless of if there is more data.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#discussion_r381012890", "createdAt": "2020-02-19T00:22:57Z", "author": {"login": "mike-burrage-hedera"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -148,15 +155,23 @@ void onNext(TopicMessage topicMessage) {\n             log.trace(\"[{}] Topic {} received message #{}: {}\", filter.getSubscriberId(), topicId, count, topicMessage);\n         }\n \n-        boolean shouldListen() {\n-            return filter.getEndTime() == null || filter.getEndTime().isAfter(startTime);\n-        }\n-\n         boolean isNext(TopicMessage topicMessage) {\n             return lastTopicMessage == null || topicMessage.getSequenceNumber() == lastTopicMessage\n                     .getSequenceNumber() + 1;\n         }\n \n+        /**\n+         * Checks whether the end time is after the current time and we haven't seen any new messages in more than the\n+         * interval check.\n+         *\n+         * @return if the end time is after the current time\n+         */\n+        boolean isPastEndTime() {\n+            Instant now = Instant.now();\n+            return filter.getEndTime().isAfter(now) && (lastTopicMessage == null ||\n+                    lastTopicMessage.getConsensusTimestamp().plus(grpcProperties.getEndTimeInterval()).isBefore(now));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzczMzQz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-360773343", "createdAt": "2020-02-19T00:41:18Z", "commit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODAzNjY2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-360803666", "createdAt": "2020-02-19T02:20:06Z", "commit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjoyMDowNlrOFrZFQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjoyMDowNlrOFrZFQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NDAzNA==", "bodyText": "Deciding based on now and endTimeInterval is susceptible to\n\nrelative time skews between grpc server and nodes\ndelay in ingestion\n\nOne of the way to do this accurately would be - using latest consensus timestamp from t_timestamp table.\nIf latest consensus ts > filter's end time, then we know for sure that no new messages are arriving.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#discussion_r381044034", "createdAt": "2020-02-19T02:20:06Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -148,15 +155,23 @@ void onNext(TopicMessage topicMessage) {\n             log.trace(\"[{}] Topic {} received message #{}: {}\", filter.getSubscriberId(), topicId, count, topicMessage);\n         }\n \n-        boolean shouldListen() {\n-            return filter.getEndTime() == null || filter.getEndTime().isAfter(startTime);\n-        }\n-\n         boolean isNext(TopicMessage topicMessage) {\n             return lastTopicMessage == null || topicMessage.getSequenceNumber() == lastTopicMessage\n                     .getSequenceNumber() + 1;\n         }\n \n+        /**\n+         * Checks whether the end time is after the current time and we haven't seen any new messages in more than the\n+         * interval check.\n+         *\n+         * @return if the end time is after the current time\n+         */\n+        boolean isPastEndTime() {\n+            Instant now = Instant.now();\n+            return filter.getEndTime().isAfter(now) && (lastTopicMessage == null ||\n+                    lastTopicMessage.getConsensusTimestamp().plus(grpcProperties.getEndTimeInterval()).isBefore(now));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff46993fde46b800d3d0430388a4590662b51c95"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1ca7272903c444b19b18815ecd3c9267ad0dc1f", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e1ca7272903c444b19b18815ecd3c9267ad0dc1f", "committedDate": "2020-02-25T22:35:03Z", "message": "Merge remote-tracking branch 'origin/master' into complete-end-time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e77a7d75c7722b5e7e163e7ff2bce665e72efa06", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e77a7d75c7722b5e7e163e7ff2bce665e72efa06", "committedDate": "2020-02-27T20:58:33Z", "message": "Address review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/43cd07d5e884f66f3a07768359af4c584f86ddcd", "committedDate": "2020-02-27T22:37:56Z", "message": "Revert to 30s\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDYxNTIy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-366061522", "createdAt": "2020-02-27T23:03:03Z", "commit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowMzowM1rOFvkQkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowMzowM1rOFvkQkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMTQ1Ng==", "bodyText": "q: why the preference for  replay and auto connect after 1 subscriber instead of just cache()", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#discussion_r385421456", "createdAt": "2020-02-27T23:03:03Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/SharedPollingTopicListener.java", "diffHunk": "@@ -84,9 +84,10 @@ public void init() {\n                 .doOnComplete(() -> log.info(\"Completed polling\"))\n                 .doOnNext(context::onNext)\n                 .doOnSubscribe(context::onStart)\n-                .cache(listenerProperties.getBufferSize());\n+                .replay(listenerProperties.getBufferSize())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTI1NzY4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-366125768", "createdAt": "2020-02-28T02:22:07Z", "commit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjoyMjowN1rOFvnqPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjoyMjowN1rOFvnqPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3NzE4MQ==", "bodyText": "in listen,  we should be just replaying the messages with timestamp after last seen timestamp of that particular subscriber.\nReturning possible duplicates from one layer and filtering them in another layer doesn't seem right.\nWe should be building a system with stronger invariants than that.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#discussion_r385477181", "createdAt": "2020-02-28T02:22:07Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/SharedPollingTopicListener.java", "diffHunk": "@@ -84,9 +84,10 @@ public void init() {\n                 .doOnComplete(() -> log.info(\"Completed polling\"))\n                 .doOnNext(context::onNext)\n                 .doOnSubscribe(context::onStart)\n-                .cache(listenerProperties.getBufferSize());\n+                .replay(listenerProperties.getBufferSize())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTQ2MTUw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/543#pullrequestreview-366546150", "createdAt": "2020-02-28T16:59:08Z", "commit": {"oid": "43cd07d5e884f66f3a07768359af4c584f86ddcd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3253, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}