{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NjE1NTQ4", "number": 1135, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo0NDoyNFrOEw4HuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxMzo0N1rOEw7WEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5Njg2NTg1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo0NDoyNFrOHmtBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo1NDowNlrOHneKbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NTYyMQ==", "bodyText": "Leftover log?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r510345621", "createdAt": "2020-10-22T17:44:24Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "diffHunk": "@@ -151,6 +170,34 @@ const makeQuerySet = async (test) => {\n   };\n };\n \n+const makeIdsQuerySet = async (test) => {\n+  let idValues;\n+  if (test.idAxis === 'TOKENID') {\n+    idValues = await populateIdValues(test, sampleTokenIds, (sample) => {\n+      return '' + sample;\n+    });\n+  }\n+  console.log('Here there be ' + idValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDcwMg==", "bodyText": "Yep, removed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r511150702", "createdAt": "2020-10-23T20:54:06Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "diffHunk": "@@ -151,6 +170,34 @@ const makeQuerySet = async (test) => {\n   };\n };\n \n+const makeIdsQuerySet = async (test) => {\n+  let idValues;\n+  if (test.idAxis === 'TOKENID') {\n+    idValues = await populateIdValues(test, sampleTokenIds, (sample) => {\n+      return '' + sample;\n+    });\n+  }\n+  console.log('Here there be ' + idValues);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NTYyMQ=="}, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzM4MTc4OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxMDoxM1rOHmyBMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo1NDoxNlrOHneKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyNzQ0Mw==", "bodyText": "I believe this should also cover the ACCOUNTID also right?\nYou could add that case", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r510427443", "createdAt": "2020-10-22T20:10:13Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "diffHunk": "@@ -151,6 +170,34 @@ const makeQuerySet = async (test) => {\n   };\n };\n \n+const makeIdsQuerySet = async (test) => {\n+  let idValues;\n+  if (test.idAxis === 'TOKENID') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDc3Mw==", "bodyText": "Correct, I have added that", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r511150773", "createdAt": "2020-10-23T20:54:16Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__performancetests__/generateQuerySets.js", "diffHunk": "@@ -151,6 +170,34 @@ const makeQuerySet = async (test) => {\n   };\n };\n \n+const makeIdsQuerySet = async (test) => {\n+  let idValues;\n+  if (test.idAxis === 'TOKENID') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyNzQ0Mw=="}, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzM4NTI5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__performancetests__/tests.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxMTowNFrOHmyDOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo1Mzo1OFrOHneKPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyNzk2Mw==", "bodyText": "With the added logic you can also support e.g.\n- name: 'account transactions - accountid point lookup'\n     query: '/accounts/%d'\n\t idAxis: ACCOUNTID\n     count: 100", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r510427963", "createdAt": "2020-10-22T20:11:04Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__performancetests__/tests.yml", "diffHunk": "@@ -72,3 +72,23 @@ tests:\n     filterAxis: BALANCE\n     count: 100\n     rangeTinyHbars: 1000_00_000_000 # 1000\u210f\n+    # Tests for /tokens\n+  - name: 'tokens - tokenid point lookup'\n+    query: '/tokens'\n+    filterAxis: TOKENID\n+    count: 100\n+  - name: 'tokens - token ids range (100)'\n+    query: '/tokens'\n+    filterAxis: TOKENID\n+    count: 5\n+    rangeNumTokens: 100\n+    # Tests for /tokens/{id}\n+  - name: 'token info - tokenid point lookup'\n+    query: '/tokens/%d'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDY1NQ==", "bodyText": "Good call, added", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r511150655", "createdAt": "2020-10-23T20:53:58Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__performancetests__/tests.yml", "diffHunk": "@@ -72,3 +72,23 @@ tests:\n     filterAxis: BALANCE\n     count: 100\n     rangeTinyHbars: 1000_00_000_000 # 1000\u210f\n+    # Tests for /tokens\n+  - name: 'tokens - tokenid point lookup'\n+    query: '/tokens'\n+    filterAxis: TOKENID\n+    count: 100\n+  - name: 'tokens - token ids range (100)'\n+    query: '/tokens'\n+    filterAxis: TOKENID\n+    count: 5\n+    rangeNumTokens: 100\n+    # Tests for /tokens/{id}\n+  - name: 'token info - tokenid point lookup'\n+    query: '/tokens/%d'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyNzk2Mw=="}, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzM5NDEwOnYy", "diffSide": "RIGHT", "path": "docs/testing.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxMzo0N1rOHmyJLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxMzo0N1rOHmyJLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyOTQ4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            -   `idAxis` is the primary axis to filter results based on ids (e.g. `/tokens/{id}`).  It can only have one value.\n          \n          \n            \n            -   `idAxis` is the primary axis to filter results based on ids in the query path (e.g. `/tokens/{id}`).  It can only have one value.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1135#discussion_r510429485", "createdAt": "2020-10-22T20:13:47Z", "author": {"login": "Nana-EC"}, "path": "docs/testing.md", "diffHunk": "@@ -47,16 +48,20 @@ Where\n -   `name` is user defined name for the test\n -   `query` is any arbitrary REST query. \\\n     It should NOT include `http://host:port/api/v1` as prefix. It should also NOT include param set by `filterAxis`.\n--   `filterAxis` is primary axis to filter results. It can have one of the three values:\n+-   `filterAxis` is primary axis to filter results based on query params. It can have one of the four values.  Either it or `idAxis` are required:\n     -   `ACCOUNTID`: Sets `account.id` param. Values for this param are sampled from `entity_num` column in `t_entities`.\n     -   `CONSENSUS_TIMESTAMP`: Sets `timestamp` param. Values for this param are sampled from `consensus_ns` column in\n         `transaction`.\n     -   `BALANCE`: Sets `account.balance` param. Values for this param are sampled from `balance` column in\n         `account_balance`.\n+    -   `TOKENID`: Sets `token.id` param. Values for this param are sampled from `token_id` column in `token`.\n+-   `idAxis` is the primary axis to filter results based on ids (e.g. `/tokens/{id}`).  It can only have one value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25aaddfbd3e54ba72c222cccbf880507243dcad3"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1557, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}