{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDUyNTUy", "number": 1110, "title": "HTS: REST Token Discovery API", "bodyText": "Detailed description:\nWith the addition of HTS customers will need a REST API to  query the available tokens on the network\nImplement a Token Discovery REST API per the design.\n\nAdd /api/v1/tokens endpoint to server.js\nAdd tokens.js file to hold token retrieval data from database for tables token and eventually token_account\nAdd spec files to validate token query variations\n\nWhich issue(s) this PR fixes:\nFixes #1103\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-10-08T16:41:07Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110", "merged": true, "mergeCommit": {"oid": "f327b4c4d730b831f02124c8d398a9d9f8d025c5"}, "closed": true, "closedAt": "2020-10-09T20:21:22Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQkOFBgH2gAyNTAwMDUyNTUyOjBjNjNkMzRmYzRkMmE0MjI1NzlhYTIyYTNkNjI0MzQwMTI0ZTBhNmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ73GCAFqTUwNTk1NzU4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0c63d34fc4d2a422579aa22a3d624340124e0a6a", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0c63d34fc4d2a422579aa22a3d624340124e0a6a", "committedDate": "2020-10-08T16:31:59Z", "message": "HTS: REST Token Discovery\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebaadc81b92af54b44c34db960bcb61b39c79f04", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ebaadc81b92af54b44c34db960bcb61b39c79f04", "committedDate": "2020-10-08T18:43:30Z", "message": "Fixed up tests and main functions\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "committedDate": "2020-10-08T19:00:04Z", "message": "Added comments and util test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MDcyNTIw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505072520", "createdAt": "2020-10-08T18:51:31Z", "commit": {"oid": "ebaadc81b92af54b44c34db960bcb61b39c79f04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODo1MTozMVrOHesE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODo1MTozMVrOHesE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0MTQ4OA==", "bodyText": "Add a UT for this", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r501941488", "createdAt": "2020-10-08T18:51:31Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -730,6 +746,11 @@ const parseTokenBalances = (tokenBalances) => {\n     : [];\n };\n \n+const parsePublicKey = (publicKey) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebaadc81b92af54b44c34db960bcb61b39c79f04"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2c998bc4021e08bc2a1ad2581978644f11a5ce63", "committedDate": "2020-10-09T00:33:11Z", "message": "Update to allow tokenid in query be num or full entityid\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTg5MzMz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505189333", "createdAt": "2020-10-08T21:46:59Z", "commit": {"oid": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTo0NzowMFrOHexjZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1MToxMFrOHfPlAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTIwNQ==", "bodyText": "should the token also go into the t_entities table?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502031205", "createdAt": "2020-10-08T21:47:00Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -284,6 +306,89 @@ const addTopicMessage = async function (message) {\n   );\n };\n \n+const addToken = async function (token) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMjE4NQ==", "bodyText": "for consistency and readability, suggest a token's id is defined by both entity_realm and entity_num like the accounts.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502032185", "createdAt": "2020-10-08T21:49:26Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-01-no-args.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1\n+      },\n+      {\n+        \"entity_num\": 1135\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678\n+      }\n+    ],\n+    \"tokens\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxMzkyOA==", "bodyText": "description does not match the scenario", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502513928", "createdAt": "2020-10-09T15:35:47Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNTA2Ng==", "bodyText": "wrong description", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502515066", "createdAt": "2020-10-09T15:37:37Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-07-invalid-query-params.spec.json", "diffHunk": "@@ -0,0 +1,71 @@\n+{\n+  \"description\": \"Token api call for all tokens utilizing all available query params\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNjczNQ==", "bodyText": "this test case shouldn't pass, account 0.0.2 does not exist", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502516735", "createdAt": "2020-10-09T15:40:25Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-06-all-params.spec.json", "diffHunk": "@@ -0,0 +1,82 @@\n+{\n+  \"description\": \"Token api call for all tokens utilizing all available query params\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,\n+        \"public_key\": \"7a3c7a3c5477bdf4a63742647d7cfc4544acc1899d07141caf4cd9fea2f75b28a5cc\",\n+        \"key\": [1, 1, 1]\n+      },\n+      {\n+        \"entity_num\": 1135,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [2, 2, 2]\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [3, 3, 3]\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [4, 4, 4]\n+      }\n+    ],\n+    \"tokens\": [\n+      {\n+        \"token_id\": 1,\n+        \"symbol\": \"FIRSTMOVERLPDJH\"\n+      },\n+      {\n+        \"token_id\": 1135,\n+        \"symbol\": \"ORIGINALRDKSE\"\n+      },\n+      {\n+        \"token_id\": 30064796373,\n+        \"symbol\": \"MIRRORTOKEN\"\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"symbol\": \"HEDERACOIN\"\n+      }\n+    ],\n+    \"tokenaccounts\": [\n+      {\n+        \"token_id\": 30064796373,\n+        \"account_id\": 2\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"account_id\": 2\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/tokens?account.id=2&token.id=gte:0.0.18&token.id=lt:0.30000.0&limit=2&entity.publickey=2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864&order=desc\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzEzNg==", "bodyText": "Q: should we use account.publickey instead of entity.publickey? The balances REST API uses account.publickey btw.\nAlso, the design doc has an optional filter by token admin publickey, initially I thought entity.publickey is the admin key filter.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502523136", "createdAt": "2020-10-09T15:51:10Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/tokens.js", "diffHunk": "@@ -0,0 +1,196 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ *\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const config = require('./config');\n+const constants = require('./constants');\n+const EntityId = require('./entityId');\n+const utils = require('./utils');\n+const {DbError} = require('./errors/dbError');\n+\n+// select columns\n+const sqlQueryColumns = {\n+  KEY: 'e.key',\n+  SYMBOL: 't.symbol',\n+  TOKEN_ID: 't.token_id',\n+  PUBLIC_KEY: 'e.ed25519_public_key_hex',\n+};\n+\n+// query to column maps\n+const filterColumnMap = {\n+  'entity.publickey': sqlQueryColumns.PUBLIC_KEY,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzcwOTgx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505770981", "createdAt": "2020-10-09T15:18:53Z", "commit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNToxODo1NFrOHfOWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjowMTowMlrOHfP7zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzA1NQ==", "bodyText": "Should this also use parsePublicKey?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502503055", "createdAt": "2020-10-09T15:18:54Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -692,13 +700,21 @@ const formatComparator = (comparator) => {\n         // Accepted forms: shard.realm.num or num\n         comparator.value = parseEntityId(comparator.value);\n         break;\n-      case constants.filterKeys.TIMESTAMP:\n-        comparator.value = parseTimestampParam(comparator.value);\n-        break;\n       case constants.filterKeys.ACCOUNT_PUBLICKEY:\n         // Acceptable forms: exactly 64 characters or +12 bytes (DER encoded)\n         comparator.value = ed25519.derToEd25519(comparator.value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzQyOQ==", "bodyText": "Comment not moved", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502503429", "createdAt": "2020-10-09T15:19:29Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -172,9 +173,16 @@ const filterValidityChecks = function (param, op, val) {\n       // Acceptable range: 0 < x <= Number.MAX_SAFE_INTEGER\n       ret = isValidNum(val);\n       break;\n-    case constants.filterKeys.ENCODING:\n+    case constants.filterKeys.TIMESTAMP:\n+      ret = isValidTimestampParam(val);\n+      break;\n+    case constants.filterKeys.TOKEN_ID:\n       // Acceptable words: binary or text", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzAzNA==", "bodyText": "Should we add types to these so it's clear they're tokens and not accounts? In the future, we should rename \"accounts\" array to \"entities\".", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502523034", "createdAt": "2020-10-09T15:51:01Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-01-no-args.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNjkwNg==", "bodyText": "I'm not a fan of entity.publickey. It's generic while this public key is specifically associated with the token entity. Why not just publickey like in the design? Since we're in the tokens context it should be sufficient.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502526906", "createdAt": "2020-10-09T15:57:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,\n+        \"public_key\": \"3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",\n+        \"key\": [1, 1, 1]\n+      },\n+      {\n+        \"entity_num\": 1135,\n+        \"public_key\": \"519a008fabde4d28d68293c71fcdcdcca38d8fae6102a832b31e802f257fd1d9\",\n+        \"key\": [2, 2, 2]\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301,\n+        \"public_key\": \"3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",\n+        \"key\": [3, 3, 3]\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678,\n+        \"public_key\": \"c7e81a0c1444c6e5b5c1bfb1a02ae5faae44c11e621f286d21242cc584280692\",\n+        \"key\": [4, 4, 4]\n+      }\n+    ],\n+    \"tokens\": [\n+      {\n+        \"token_id\": 1,\n+        \"symbol\": \"FIRSTMOVERLPDJH\"\n+      },\n+      {\n+        \"token_id\": 1135,\n+        \"symbol\": \"ORIGINALRDKSE\"\n+      },\n+      {\n+        \"token_id\": 30064796373,\n+        \"symbol\": \"MIRRORTOKEN\"\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"symbol\": \"HEDERACOIN\"\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/tokens?entity.publickey=3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyODk3Mw==", "bodyText": "Can just set a default when declaring limit.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502528973", "createdAt": "2020-10-09T16:01:02Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/tokens.js", "diffHunk": "@@ -0,0 +1,196 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ *\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const config = require('./config');\n+const constants = require('./constants');\n+const EntityId = require('./entityId');\n+const utils = require('./utils');\n+const {DbError} = require('./errors/dbError');\n+\n+// select columns\n+const sqlQueryColumns = {\n+  KEY: 'e.key',\n+  SYMBOL: 't.symbol',\n+  TOKEN_ID: 't.token_id',\n+  PUBLIC_KEY: 'e.ed25519_public_key_hex',\n+};\n+\n+// query to column maps\n+const filterColumnMap = {\n+  'entity.publickey': sqlQueryColumns.PUBLIC_KEY,\n+  symbol: sqlQueryColumns.SYMBOL,\n+  'token.id': sqlQueryColumns.TOKEN_ID,\n+};\n+\n+// sql queries\n+const tokensSelectQuery = `select t.token_id, symbol, e.key from token t`;\n+const accountIdJoinQuery = ` join token_account ta on ta.account_id = $1 and t.token_id = ta.token_id`;\n+const entityIdJoinQuery = ` join t_entities e on e.id = t.token_id`;\n+\n+/**\n+ * Given top level select columns and filters from request query, extract filters and create final sql query with appropriate where clauses.\n+ */\n+const extractSqlFromTokenRequest = (pgSqlQuery, pgSqlParams, nextParamCount, filters) => {\n+  // add filters\n+  let limit;\n+  let order = 'asc';\n+  let applicableFilters = 0;\n+  for (const filter of filters) {\n+    if (filter.key === constants.filterKeys.LIMIT) {\n+      limit = filter.value;\n+      continue;\n+    }\n+\n+    // handle keys that do not require formatting first\n+    if (filter.key === constants.filterKeys.ORDER) {\n+      order = filter.value;\n+      continue;\n+    }\n+\n+    const columnKey = filterColumnMap[filter.key];\n+    if (columnKey === undefined) {\n+      continue;\n+    }\n+\n+    pgSqlQuery += applicableFilters === 0 ? ` where ` : ` and `;\n+    applicableFilters++;\n+    pgSqlQuery += `${filterColumnMap[filter.key]}${filter.operator}$${nextParamCount++}`;\n+    pgSqlParams.push(filter.value);\n+  }\n+\n+  // add order\n+  pgSqlQuery += ` order by ${sqlQueryColumns.TOKEN_ID} ${order}`;\n+\n+  // add limit\n+  pgSqlQuery += ` limit $${nextParamCount++}`;\n+  limit = limit === undefined ? config.maxLimit : limit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "330c404465a647ab6a109bff1fa6ffc153ecaa7a", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/330c404465a647ab6a109bff1fa6ffc153ecaa7a", "committedDate": "2020-10-09T17:50:45Z", "message": "Addressed comments on integration spec tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5e408c0de923753ad3e16d882f205eda61dbb6c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a5e408c0de923753ad3e16d882f205eda61dbb6c", "committedDate": "2020-10-09T18:08:17Z", "message": "Addressed publickey feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODgzMzY0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505883364", "createdAt": "2020-10-09T17:57:24Z", "commit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzo1NzoyNFrOHfTmiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzo1NzoyNFrOHfTmiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4OTA2Nw==", "bodyText": "accounts shouldn't be reused for the purpose of adding tokens into t_entities table. in addition, entries in the accounts array are inserted with fk_entity_type_id = 1, while for tokens, it should be 5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502589067", "createdAt": "2020-10-09T17:57:24Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1OTUyMTQx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505952141", "createdAt": "2020-10-09T19:54:39Z", "commit": {"oid": "a5e408c0de923753ad3e16d882f205eda61dbb6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1OTU3NTg4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#pullrequestreview-505957588", "createdAt": "2020-10-09T20:04:36Z", "commit": {"oid": "a5e408c0de923753ad3e16d882f205eda61dbb6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3581, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}