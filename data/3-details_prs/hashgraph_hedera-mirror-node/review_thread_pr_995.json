{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NTU0NzYw", "number": 995, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo0Nzo0OFrOEd2o_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzozOTowNFrOEd6jqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzM5Mzg5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo0Nzo0OFrOHJRA3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo0Nzo0OFrOHJRA3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3Nzk4MQ==", "bodyText": "Payer account already added to transfer list in buildTransactionRecord().", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/995#discussion_r479477981", "createdAt": "2020-08-28T18:47:48Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java", "diffHunk": "@@ -59,8 +59,8 @@\n     private static final long INITIAL_BALANCE = 1000L;\n     private static final AccountID accountId = AccountID.newBuilder().setShardNum(0).setRealmNum(0).setAccountNum(1001)\n             .build();\n-    private static final long[] additionalTransfers = {5000, 6000, PAYER.getAccountNum()};\n-    private static final long[] additionalTransferAmounts = {1000, 1000, -2000};\n+    private static final long[] additionalTransfers = {5000, 6000};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381dd8e399b40d35af4878c82c6f1dbf51c12403"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODAzNTYwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzozOTowNFrOHJW8ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo1NTozM1rOHLGArw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NTIwMw==", "bodyText": "You should add a comment here. Initially I thought this was a mistake and it should be !addressBoo. However, I get that you removed the fileData persistence from AddressBookService back to here\nAlso does this check need the addressBook boolean check, since 'entityId.getEntityNum() < 1000' will be true?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/995#discussion_r479575203", "createdAt": "2020-08-28T23:39:04Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -266,15 +267,15 @@ private void insertFileUpdate(long consensusTimestamp, FileUpdateTransactionBody\n     private void insertFileData(long consensusTimestamp, byte[] contents, FileID fileID, int transactionTypeEnum) {\n         EntityId entityId = EntityId.of(fileID);\n         FileData fileData = new FileData(consensusTimestamp, contents, entityId, transactionTypeEnum);\n+        boolean addressBook = addressBookService.isAddressBook(entityId);\n \n-        if (addressBookService.isAddressBook(entityId)) {\n-            // if address book allow immediate persistence instead of waiting for batch\n+        if (addressBook || entityProperties.getPersist().isFiles() ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381dd8e399b40d35af4878c82c6f1dbf51c12403"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MDY1Mg==", "bodyText": "I can add a comment. We need the check still since less than 1000 is behind a persist flag and we always want to persist address books.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/995#discussion_r479580652", "createdAt": "2020-08-29T00:09:23Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -266,15 +267,15 @@ private void insertFileUpdate(long consensusTimestamp, FileUpdateTransactionBody\n     private void insertFileData(long consensusTimestamp, byte[] contents, FileID fileID, int transactionTypeEnum) {\n         EntityId entityId = EntityId.of(fileID);\n         FileData fileData = new FileData(consensusTimestamp, contents, entityId, transactionTypeEnum);\n+        boolean addressBook = addressBookService.isAddressBook(entityId);\n \n-        if (addressBookService.isAddressBook(entityId)) {\n-            // if address book allow immediate persistence instead of waiting for batch\n+        if (addressBook || entityProperties.getPersist().isFiles() ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NTIwMw=="}, "originalCommit": {"oid": "381dd8e399b40d35af4878c82c6f1dbf51c12403"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NDg2Mw==", "bodyText": "Added comment", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/995#discussion_r481394863", "createdAt": "2020-09-01T19:55:33Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -266,15 +267,15 @@ private void insertFileUpdate(long consensusTimestamp, FileUpdateTransactionBody\n     private void insertFileData(long consensusTimestamp, byte[] contents, FileID fileID, int transactionTypeEnum) {\n         EntityId entityId = EntityId.of(fileID);\n         FileData fileData = new FileData(consensusTimestamp, contents, entityId, transactionTypeEnum);\n+        boolean addressBook = addressBookService.isAddressBook(entityId);\n \n-        if (addressBookService.isAddressBook(entityId)) {\n-            // if address book allow immediate persistence instead of waiting for batch\n+        if (addressBook || entityProperties.getPersist().isFiles() ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NTIwMw=="}, "originalCommit": {"oid": "381dd8e399b40d35af4878c82c6f1dbf51c12403"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1607, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}