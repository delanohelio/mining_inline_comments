{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzcwNDg2", "number": 1031, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMDo1Mjo0NFrOEiV17g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMDo1Mjo0NFrOEiV17g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDQ0OTEwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/notify/NotifyingEntityListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMDo1Mjo0NFrOHQKf9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNDoyNDo1M1rOHQhCkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxMTI4NQ==", "bodyText": "nit: have you considered adding try... finally.. and move topicMessage.clear to the finally block? that way, we don't need the onCleanup listener", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1031#discussion_r486711285", "createdAt": "2020-09-11T00:52:44Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/notify/NotifyingEntityListener.java", "diffHunk": "@@ -66,9 +83,17 @@ public void onTopicMessage(TopicMessage topicMessage) throws ImporterException {\n     }\n \n     @EventListener\n-    public void onBatch(EntityBatchEvent event) {\n-        jdbcTemplate.execute(SQL, callback(topicMessages));\n-        log.info(\"Finished notifying {} messages\", topicMessages.size());\n+    public void onSave(EntityBatchSaveEvent event) {\n+        if (isEnabled()) {\n+            Stopwatch stopwatch = Stopwatch.createStarted();\n+            timer.record(() -> jdbcTemplate.execute(SQL, callback(topicMessages)));\n+            log.info(\"Finished notifying {} messages in {}\", topicMessages.size(), stopwatch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde1f0e321cdc6975cd39bae55b924c0f60437d9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxMzEwMw==", "bodyText": "We still need onCleanup for rollback of sqlentitylistener scenario. onSave is only called after pgcopy batch is successful but if it's not then we need to clear the buffer.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1031#discussion_r486713103", "createdAt": "2020-09-11T00:59:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/notify/NotifyingEntityListener.java", "diffHunk": "@@ -66,9 +83,17 @@ public void onTopicMessage(TopicMessage topicMessage) throws ImporterException {\n     }\n \n     @EventListener\n-    public void onBatch(EntityBatchEvent event) {\n-        jdbcTemplate.execute(SQL, callback(topicMessages));\n-        log.info(\"Finished notifying {} messages\", topicMessages.size());\n+    public void onSave(EntityBatchSaveEvent event) {\n+        if (isEnabled()) {\n+            Stopwatch stopwatch = Stopwatch.createStarted();\n+            timer.record(() -> jdbcTemplate.execute(SQL, callback(topicMessages)));\n+            log.info(\"Finished notifying {} messages in {}\", topicMessages.size(), stopwatch);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxMTI4NQ=="}, "originalCommit": {"oid": "bde1f0e321cdc6975cd39bae55b924c0f60437d9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MDU5Mw==", "bodyText": "I see, missed the case that rollback is needed when exception happens before onSave is called", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1031#discussion_r487080593", "createdAt": "2020-09-11T14:24:53Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/notify/NotifyingEntityListener.java", "diffHunk": "@@ -66,9 +83,17 @@ public void onTopicMessage(TopicMessage topicMessage) throws ImporterException {\n     }\n \n     @EventListener\n-    public void onBatch(EntityBatchEvent event) {\n-        jdbcTemplate.execute(SQL, callback(topicMessages));\n-        log.info(\"Finished notifying {} messages\", topicMessages.size());\n+    public void onSave(EntityBatchSaveEvent event) {\n+        if (isEnabled()) {\n+            Stopwatch stopwatch = Stopwatch.createStarted();\n+            timer.record(() -> jdbcTemplate.execute(SQL, callback(topicMessages)));\n+            log.info(\"Finished notifying {} messages in {}\", topicMessages.size(), stopwatch);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxMTI4NQ=="}, "originalCommit": {"oid": "bde1f0e321cdc6975cd39bae55b924c0f60437d9"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1627, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}