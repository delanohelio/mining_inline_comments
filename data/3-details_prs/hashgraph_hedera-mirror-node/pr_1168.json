{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3OTYzNzI3", "number": 1168, "title": "Add support for case insensitive query params to REST API", "bodyText": "Detailed description:\nREST API should support query params regardless of case\n\nAdd a middleware function using Proxy object to support lookup of values regardless of case\nConvert filter query name to lower case on creation\nUpdate a few test specs with camel case variations of query keys\nSet filter keys to lowercase for easy comparison\n\nWhich issue(s) this PR fixes:\nFixes #1159\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-10-22T02:07:10Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168", "merged": true, "mergeCommit": {"oid": "f041a2c60f35dc16e6ddfb415693bbcb31a8f9ca"}, "closed": true, "closedAt": "2020-10-28T18:29:09Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdViOY4AH2gAyNTA3OTYzNzI3OjJmYzc2NTg5MDkwYzBmODMxNmY0MTlkYmNhMzMyNWI3MzJkMGRiMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXBMjzgFqTUxODkyNzYzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2fc76589090c0f8316f419dbca3325b732d0db05", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2fc76589090c0f8316f419dbca3325b732d0db05", "committedDate": "2020-10-24T03:02:08Z", "message": "Add support for case insensitive query params to REST API\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72f399e3d0235237939758d0b71cb588bf6d2af4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/72f399e3d0235237939758d0b71cb588bf6d2af4", "committedDate": "2020-10-22T02:01:13Z", "message": "Add support for case insensitive query params to REST API\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "2fc76589090c0f8316f419dbca3325b732d0db05", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2fc76589090c0f8316f419dbca3325b732d0db05", "committedDate": "2020-10-24T03:02:08Z", "message": "Add support for case insensitive query params to REST API\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2ODYyMDUz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-516862053", "createdAt": "2020-10-26T14:54:53Z", "commit": {"oid": "2fc76589090c0f8316f419dbca3325b732d0db05"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo1NDo1M1rOHoTcmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo1NDo1M1rOHoTcmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAyMzcwNg==", "bodyText": "Should TOKENID also be swapped to lowercase?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r512023706", "createdAt": "2020-10-26T14:54:53Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -35,7 +35,7 @@ const filterKeys = {\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n   CREDIT_TYPE: 'type',\n-  TRANSACTION_TYPE: 'transactionType',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc76589090c0f8316f419dbca3325b732d0db05"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d95bfb7ec277976ec89d35004f82176c8e1e9b30", "committedDate": "2020-10-26T16:15:58Z", "message": "Update tokenId case\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTcyMjQ0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-516972244", "createdAt": "2020-10-26T16:44:20Z", "commit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo0NDoyMVrOHoYjfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo0NDoyMVrOHoYjfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwNzM5MQ==", "bodyText": "Might make sense to add a comment here so that it's not lumped in as \"logging middleware\".", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r512107391", "createdAt": "2020-10-26T16:44:21Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -102,6 +102,7 @@ app.use(cors());\n \n // logging middleware\n app.use(requestLogger);\n+app.use(requestQueryKeyFormatter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTcyNTU0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-516972554", "createdAt": "2020-10-26T16:44:40Z", "commit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3Mjk2NTY3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-517296567", "createdAt": "2020-10-27T02:03:34Z", "commit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjowMzozNFrOHoouCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjowMzozNFrOHoouCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MjIzMg==", "bodyText": "there is performance issue. in utils.js,\nconst buildFilterObject = (filters) => {\n  let filterObject = [];\n  if (filters === null) {\n    return null;\n  }\n\n  for (const [key, values] of Object.entries(filters)) {\nthe time complexity is O(n^2). this can be exploited by sending queries with a large number of query params.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r512372232", "createdAt": "2020-10-27T02:03:34Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/middleware/requestHandler.js", "diffHunk": "@@ -25,6 +25,22 @@ const requestLogger = function (req, res, next) {\n   return next();\n };\n \n+/**\n+ * Support case insensitive retrieval from request parameters\n+ * @param req\n+ * @param res\n+ * @param next\n+ * @returns Query param value\n+ */\n+const requestQueryKeyFormatter = function (req, res, next) {\n+  req.query = new Proxy(req.query, {\n+    get: (target, name) => target[Object.keys(target).find((key) => key.toLowerCase() === name.toLowerCase())],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODMxMjQ5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-517831249", "createdAt": "2020-10-27T15:24:30Z", "commit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNToyNDozMFrOHpCFgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo0MzowOVrOHpDGxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc4Nzg0MQ==", "bodyText": "Not a fan of returning all lowercase to the user when the docs will show the camel case. See my other comment for a possible solution with classes.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r512787841", "createdAt": "2020-10-27T15:24:30Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/token-info-02-invalid-id.spec.json", "diffHunk": "@@ -50,7 +50,7 @@\n     \"_status\": {\n       \"messages\": [\n         {\n-          \"message\": \"Invalid parameter: tokenId\"\n+          \"message\": \"Invalid parameter: tokenid\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwNDU1MQ==", "bodyText": "Creating a proxy seems like a much heavier weight approach than just calling lowercase when validating the parameter. Besides probably being slower as Xin points out, the use of a reflective wrapper object probably has some performance penalty.\nI would suggest moving away from the switch statement and use a more OO approach. We already have filter constants and logic spread around too many classes. It might be time to consolidate them into a class. Pseudo code:\n// filters.js\nvar filters = {};\n\nclass Filter {\n  constructor(name, validator, comparator) {\n    this.name = name;\n    this.validator = validator;\n    this.comparator = comparator;\n  }\n}\n\nfunc addFilter(tokenId) {\n  filters[tokenId.name.toLowerCase()] = tokenId;\n}\n\nfunc validate(key, value) {\n  const filter = filters[param.toLowerCase()];\n  if (filter) {\n    filter.validator(value);\n  }\n}\n\naddFilter(new Filter('tokenId', (value) => ...));\n...", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r512804551", "createdAt": "2020-10-27T15:43:09Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/requestHandler.js", "diffHunk": "@@ -25,6 +25,22 @@ const requestLogger = function (req, res, next) {\n   return next();\n };\n \n+/**\n+ * Support case insensitive retrieval from request parameters\n+ * @param req\n+ * @param res\n+ * @param next\n+ * @returns Query param value\n+ */\n+const requestQueryKeyFormatter = function (req, res, next) {\n+  req.query = new Proxy(req.query, {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95bfb7ec277976ec89d35004f82176c8e1e9b30"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8", "committedDate": "2020-10-27T21:14:56Z", "message": "Utilize custome express request parser\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODExNDc5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-518811479", "createdAt": "2020-10-28T15:47:17Z", "commit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo0NzoxN1rOHpw1nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo0NzoxN1rOHpw1nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU1MzgyMQ==", "bodyText": "nit: Think this is a typo.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // handle repeated values. Add to array if applicable of convert to array\n          \n          \n            \n                  // handle repeated values. Add to array if applicable or convert to array", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r513553821", "createdAt": "2020-10-28T15:47:17Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/middleware/requestHandler.js", "diffHunk": "@@ -0,0 +1,63 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const qs = require('qs');\n+\n+const requestLogger = function (req, res, next) {\n+  logger.debug(`Client: [ ${req.ip} ] URL: ${req.originalUrl}`);\n+  return next();\n+};\n+\n+/**\n+ * Manage request query params to support case insensitive keys\n+ * Express default query parer uses qs, other option is querystring, both are case sensitive\n+ * Parse using default qs logic and use to populate a new map in which all keys are lowercased\n+ * @param queryString\n+ * @returns Query string map object\n+ */\n+const requestQueryParser = (queryString) => {\n+  // parse first to benefit from qs query handling\n+  const parsedQueryString = qs.parse(queryString);\n+\n+  const caseInsensitiveQueryString = {};\n+  for (const key of Object.keys(parsedQueryString)) {\n+    const lowerKey = key.toLowerCase();\n+    const currentValue = caseInsensitiveQueryString[lowerKey];\n+    if (currentValue) {\n+      // handle repeated values. Add to array if applicable of convert to array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODIwMzUy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-518820352", "createdAt": "2020-10-28T15:55:29Z", "commit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODU5OTM2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-518859936", "createdAt": "2020-10-28T16:32:45Z", "commit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozMjo0NVrOHpzDiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozMjo0NVrOHpzDiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5MDE1Mw==", "bodyText": "this does not handle the case:\ntransactiontype=bar&transactionType=xyz&transactionType=ppp\n\nexpected: {transactiontype: ['bar', 'xyz', 'ppp']}\nactual: {transactiontype: ['bar', ['xyz', 'ppp']]}", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#discussion_r513590153", "createdAt": "2020-10-28T16:32:45Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/middleware/requestHandler.js", "diffHunk": "@@ -0,0 +1,63 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const qs = require('qs');\n+\n+const requestLogger = function (req, res, next) {\n+  logger.debug(`Client: [ ${req.ip} ] URL: ${req.originalUrl}`);\n+  return next();\n+};\n+\n+/**\n+ * Manage request query params to support case insensitive keys\n+ * Express default query parer uses qs, other option is querystring, both are case sensitive\n+ * Parse using default qs logic and use to populate a new map in which all keys are lowercased\n+ * @param queryString\n+ * @returns Query string map object\n+ */\n+const requestQueryParser = (queryString) => {\n+  // parse first to benefit from qs query handling\n+  const parsedQueryString = qs.parse(queryString);\n+\n+  const caseInsensitiveQueryString = {};\n+  for (const key of Object.keys(parsedQueryString)) {\n+    const lowerKey = key.toLowerCase();\n+    const currentValue = caseInsensitiveQueryString[lowerKey];\n+    if (currentValue) {\n+      // handle repeated values. Add to array if applicable of convert to array\n+      if (Array.isArray(currentValue)) {\n+        caseInsensitiveQueryString[lowerKey].push(parsedQueryString[key]);\n+      } else {\n+        caseInsensitiveQueryString[lowerKey] = [currentValue, parsedQueryString[key]];\n+      }\n+    } else {\n+      caseInsensitiveQueryString[lowerKey] = parsedQueryString[key];\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d55a50b4d0cb53e758a3f98dbccfa10d46aa6e8"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa9e609c544620d9f44dc0c874e7121b1a50a92", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4aa9e609c544620d9f44dc0c874e7121b1a50a92", "committedDate": "2020-10-28T17:18:53Z", "message": "Handled repeated but matching cases\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTEwOTMz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-518910933", "createdAt": "2020-10-28T17:22:37Z", "commit": {"oid": "4aa9e609c544620d9f44dc0c874e7121b1a50a92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTI3NjM1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1168#pullrequestreview-518927635", "createdAt": "2020-10-28T17:41:07Z", "commit": {"oid": "4aa9e609c544620d9f44dc0c874e7121b1a50a92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3633, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}