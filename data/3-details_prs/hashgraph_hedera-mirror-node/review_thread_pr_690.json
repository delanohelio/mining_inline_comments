{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTMzNjAw", "number": 690, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTo0MFrODyPDUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0OTowM1rODzEwrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDAyMDAyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/middleware/metricsHandler.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTo0MFrOGGKr_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo1OTo1M1rOGG4r7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTc0Mw==", "bodyText": "which port does it use? Can we make swagger use different port then rest of the apis?\nWe shouldn't expose internal stats and metrics on a public port.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409119743", "createdAt": "2020-04-15T20:39:40Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg1MDM0Mg==", "bodyText": "I think it's fine. I've already discussed with Brad and he will ensure only /api gets exposed publically by the proxy. This is also the case with Kubernetes. Plus it has authentication enabled. Let's not complicate the setup.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409850342", "createdAt": "2020-04-16T21:10:15Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTc0Mw=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3MzM5MA==", "bodyText": "sg.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409873390", "createdAt": "2020-04-16T21:59:53Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTc0Mw=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDU1NzExOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/middleware/metricsHandler.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDo0Mzo0OFrOGG2cxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMzoyN1rOGHChtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNjc0MQ==", "bodyText": "We should not mix metrics user and database user. Let's create a separate username and password in config.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409836741", "createdAt": "2020-04-16T20:43:48Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDYxMw==", "bodyText": "Fixed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410034613", "createdAt": "2020-04-17T07:13:27Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNjc0MQ=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDU1ODA3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/middleware/metricsHandler.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDo0NDowNlrOGG2dXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMzozNlrOGHCiAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNjg5Mg==", "bodyText": "Commented config in this file can be removed until needed. YAGNI", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409836892", "createdAt": "2020-04-16T20:44:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDY5MA==", "bodyText": "Fixed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410034690", "createdAt": "2020-04-17T07:13:36Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNjg5Mg=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDU4NTg1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/middleware/metricsHandler.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDo1Mjo0NVrOGG2ufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMzo0N1rOGHCiUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MTI3OA==", "bodyText": "q: Does catching this error here swallow it instead of failing authentication?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409841278", "createdAt": "2020-04-16T20:52:45Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMTYwNg==", "bodyText": "No it fails. It needs a valid resolve of true to let you on. I'll check about rethrowing though", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r409911606", "createdAt": "2020-04-16T23:45:37Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MTI3OA=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzMzIyMQ==", "bodyText": "Verified regrowing does now swallow the error and auhtenmicationonly passes with a valid match and a resolve on the promise.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410033221", "createdAt": "2020-04-17T07:10:27Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MTI3OA=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDc3MA==", "bodyText": "Added the throw anyway", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410034770", "createdAt": "2020-04-17T07:13:47Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+    // swaggerSpec: apiSpec,\n+    // metricsPrefix: 'mirror-rest-'\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.db.apiUsername && password === config.db.apiPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MTI3OA=="}, "originalCommit": {"oid": "7a8186b68fe54b43648949a407bd8d56fb140c35"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzUwMzM1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/middleware/metricsHandler.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTozNzoyN1rOGHS-iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzo1Nzo0MFrOGHXv2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNDEzNg==", "bodyText": "I don't think this needs to be exported.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410304136", "createdAt": "2020-04-17T15:37:27Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,51 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.swagger.swaggerUsername && password === config.swagger.swaggerPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);\n+    throw err;\n+  });\n+};\n+\n+module.exports = {\n+  metricsHandler,\n+  onMetricsAuthenticate,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4MjI5Ng==", "bodyText": "Had removed this, was yet to push", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410382296", "createdAt": "2020-04-17T17:57:40Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/middleware/metricsHandler.js", "diffHunk": "@@ -0,0 +1,51 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const config = require('../config');\n+const swStats = require('swagger-stats');\n+\n+// Load your swagger specification\n+// const apiSpec = require('./swagger.json');\n+\n+const metricsHandler = () => {\n+  return swStats.getMiddleware({\n+    name: process.env.npm_package_name,\n+    version: process.env.npm_package_version,\n+    authentication: true,\n+    onAuthenticate: onMetricsAuthenticate,\n+    uriPath: '/swagger',\n+  });\n+};\n+\n+const onMetricsAuthenticate = async (req, username, password) => {\n+  return new Promise(function (resolve, reject) {\n+    const match = username === config.swagger.swaggerUsername && password === config.swagger.swaggerPassword;\n+    resolve(match);\n+  }).catch((err) => {\n+    logger.debug(`Auth error: ${err}`);\n+    throw err;\n+  });\n+};\n+\n+module.exports = {\n+  metricsHandler,\n+  onMetricsAuthenticate,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNDEzNg=="}, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzUwNDUyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/config/application.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTozNzo1MlrOGHS_Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzo1Nzo1M1rOGHXwWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNDMzNQ==", "bodyText": "Would prefer hedera.mirror.api.metrics.username/password", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410304335", "createdAt": "2020-04-17T15:37:52Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/config/application.yml", "diffHunk": "@@ -14,3 +14,6 @@ hedera:\n       name: mirror_node\n       port: 5432\n     shard: 0\n+    swagger:\n+      swaggerPassword: swagger_metrics_pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4MjQyNA==", "bodyText": "Done", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410382424", "createdAt": "2020-04-17T17:57:53Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/config/application.yml", "diffHunk": "@@ -14,3 +14,6 @@ hedera:\n       name: mirror_node\n       port: 5432\n     shard: 0\n+    swagger:\n+      swaggerPassword: swagger_metrics_pass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNDMzNQ=="}, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzUxODUyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/server.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0MTo1OVrOGHTIlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzo1ODozMlrOGHXxqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNjcxMQ==", "bodyText": "Conditionally enabling based upon hedera.mirror.api.metrics.enabled would be nice", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410306711", "createdAt": "2020-04-17T15:41:59Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -90,6 +91,9 @@ app.use(bodyParser.json());\n app.use(compression());\n app.use(cors());\n \n+// metrics middleware\n+app.use(metricsHandler());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4Mjc2MA==", "bodyText": "Done", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410382760", "createdAt": "2020-04-17T17:58:32Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -90,6 +91,9 @@ app.use(bodyParser.json());\n app.use(compression());\n app.use(cors());\n \n+// metrics middleware\n+app.use(metricsHandler());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNjcxMQ=="}, "originalCommit": {"oid": "02bee3a64678b8959093904acff7fd855fc57f52"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODA4OTUxOnYy", "diffSide": "RIGHT", "path": "docs/configuration.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODozMzoyNFrOGHY4Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozOToxMlrOGHfEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMDc5MQ==", "bodyText": "default values here, in operations.md, and in application.yml do not match.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410400791", "createdAt": "2020-04-17T18:33:24Z", "author": {"login": "apeksharma"}, "path": "docs/configuration.md", "diffHunk": "@@ -43,6 +43,11 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.api.log.level`                               | debug                   | The logging level. Can be trace, debug, info, warn, error or fatal.                            |\n | `hedera.mirror.api.port`                                    | 5551                    | The REST API port                                                                              |\n | `hedera.mirror.api.includeHostInLink`                       | false                   | Whether to include the host:port in the next links returned by the REST API                    |\n+| `hedera.mirror.api.metrics.enabled`                         | true                    | Whether metrics are enabled for the REST API                                                   |\n+| `hedera.mirror.api.metrics.config.authentication`           | true                    | Whether access to metrics for the REST API is authenticated                                    |\n+| `hedera.mirror.api.metrics.config.username`                 | mirror_api_metrics      | The REST API metrics username to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.password`                 | mirror_api_metrics_pass | The REST API metrics password to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.uriPath`                  | './swagger'             | The REST API metrics uri path                                                                  |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e2a328748149cad0ff558b2576d8f7f6e8c7374"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5NTY0NA==", "bodyText": "Only issue I see is on uriPath where './' are not in the docs. Can update that in a future PR.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410495644", "createdAt": "2020-04-17T22:15:48Z", "author": {"login": "Nana-EC"}, "path": "docs/configuration.md", "diffHunk": "@@ -43,6 +43,11 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.api.log.level`                               | debug                   | The logging level. Can be trace, debug, info, warn, error or fatal.                            |\n | `hedera.mirror.api.port`                                    | 5551                    | The REST API port                                                                              |\n | `hedera.mirror.api.includeHostInLink`                       | false                   | Whether to include the host:port in the next links returned by the REST API                    |\n+| `hedera.mirror.api.metrics.enabled`                         | true                    | Whether metrics are enabled for the REST API                                                   |\n+| `hedera.mirror.api.metrics.config.authentication`           | true                    | Whether access to metrics for the REST API is authenticated                                    |\n+| `hedera.mirror.api.metrics.config.username`                 | mirror_api_metrics      | The REST API metrics username to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.password`                 | mirror_api_metrics_pass | The REST API metrics password to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.uriPath`                  | './swagger'             | The REST API metrics uri path                                                                  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMDc5MQ=="}, "originalCommit": {"oid": "7e2a328748149cad0ff558b2576d8f7f6e8c7374"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMjE3NQ==", "bodyText": "Just fixed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410502175", "createdAt": "2020-04-17T22:39:12Z", "author": {"login": "Nana-EC"}, "path": "docs/configuration.md", "diffHunk": "@@ -43,6 +43,11 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.api.log.level`                               | debug                   | The logging level. Can be trace, debug, info, warn, error or fatal.                            |\n | `hedera.mirror.api.port`                                    | 5551                    | The REST API port                                                                              |\n | `hedera.mirror.api.includeHostInLink`                       | false                   | Whether to include the host:port in the next links returned by the REST API                    |\n+| `hedera.mirror.api.metrics.enabled`                         | true                    | Whether metrics are enabled for the REST API                                                   |\n+| `hedera.mirror.api.metrics.config.authentication`           | true                    | Whether access to metrics for the REST API is authenticated                                    |\n+| `hedera.mirror.api.metrics.config.username`                 | mirror_api_metrics      | The REST API metrics username to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.password`                 | mirror_api_metrics_pass | The REST API metrics password to access the dashboard                                          |\n+| `hedera.mirror.api.metrics.config.uriPath`                  | './swagger'             | The REST API metrics uri path                                                                  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQwMDc5MQ=="}, "originalCommit": {"oid": "7e2a328748149cad0ff558b2576d8f7f6e8c7374"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODgxOTY2OnYy", "diffSide": "RIGHT", "path": "docs/operations.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0OTowM1rOGHgA6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0OTowM1rOGHgA6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzczOQ==", "bodyText": "nit: if it was fixed in configuration.md, might as well have fixed it here.\nNo biggy.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/690#discussion_r410517739", "createdAt": "2020-04-17T23:49:03Z", "author": {"login": "apeksharma"}, "path": "docs/operations.md", "diffHunk": "@@ -182,3 +182,11 @@ for port in {6551..6560}; do curl -s \"http://127.0.0.1:${port}/api/v1/transactio\n ```\n \n To setup live monitoring, see [monitoring](../hedera-mirror-rest/monitoring/README.md) documentation.\n+\n+### Metrics\n+The REST API has metrics as provided by [Swagger Stats](https://swaggerstats.io).\n+Using this 3 endpoints are made available\n+- `http://<ip>:<port>/<metricsPath>` - Metrics dashboard\n+- `http://<ip>:<port>/<metricsPath>/stats` - Aggregated statistics\n+- `http://<ip>:<port>/<metricsPath>/metrics` - Prometheus formatted metrics\n+Where `<metricsPath>` is defined by hedera.mirror.api.metrics.config.uriPath, current default is 'swagger'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d14fd87f78b8ab1d8d6ee3a7e1e36a8ba82b52a"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 978, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}