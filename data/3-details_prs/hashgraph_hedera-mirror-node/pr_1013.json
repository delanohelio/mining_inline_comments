{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjI4MDc1", "number": 1013, "title": "Ignore NodeAddress fields not set in protobuf", "bodyText": "Signed-off-by: Xin Li xin.li@swirlds.com\n\nDetailed description:\n\nChange port and nodeId in AddressBookEntry to boxed types to allow null values\nRemove default value of port\nSet port to null in AddressBookEntry if in protobuf it's 0\nSet nodeId to null in AddressBookEntry if in protobuf all nodes have the same nodeId\n\nWhich issue(s) this PR fixes:\nFixes #968\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-09-02T22:52:19Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013", "merged": true, "mergeCommit": {"oid": "d6e48c6762708d6be13d958c5cac3a0da332da32"}, "closed": true, "closedAt": "2020-09-04T17:08:53Z", "author": {"login": "xin-hedera"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFEBOggH2gAyNDc4MjI4MDc1OjY3ZjA0NmFlYzNiZDM2MGUwYmVlZjQ5NmI2M2RlMTE4YzgxYzdmY2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFn5K8AFqTQ4MjgwMzc5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "67f046aec3bd360e0beef496b63de118c81c7fcf", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/67f046aec3bd360e0beef496b63de118c81c7fcf", "committedDate": "2020-09-02T22:47:49Z", "message": "ignore NodeAddress fields not set in protobuf\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d969f28a851ee463399b402e39bea7068c85f1", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c8d969f28a851ee463399b402e39bea7068c85f1", "committedDate": "2020-09-03T14:39:59Z", "message": "use different nodeCertHash ande RSAPubKey for different nodes in test\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxOTc0MzI0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#pullrequestreview-481974324", "createdAt": "2020-09-03T15:47:59Z", "commit": {"oid": "c8d969f28a851ee463399b402e39bea7068c85f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0Nzo1OVrOHMs3tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0Nzo1OVrOHMs3tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA4MDExNg==", "bodyText": "Is this a valid scenario? When would we ever pass in a null NodeAddressBook? Should this rather throw?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#discussion_r483080116", "createdAt": "2020-09-03T15:47:59Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -220,26 +225,52 @@ private AddressBook buildAddressBook(byte[] addressBookBytes, long consensusTime\n      */\n     private Collection<AddressBookEntry> retrieveNodeAddressesFromAddressBook(NodeAddressBook nodeAddressBook,\n                                                                               long consensusTimestamp) {\n-        ImmutableList.Builder<AddressBookEntry> builder = ImmutableList.builder();\n-\n-        if (nodeAddressBook != null) {\n-            for (com.hederahashgraph.api.proto.java.NodeAddress nodeAddressProto : nodeAddressBook\n-                    .getNodeAddressList()) {\n-                AddressBookEntry addressBookEntry = AddressBookEntry.builder()\n-                        .consensusTimestamp(consensusTimestamp)\n-                        .memo(nodeAddressProto.getMemo().toStringUtf8())\n-                        .ip(nodeAddressProto.getIpAddress().toStringUtf8())\n-                        .port(nodeAddressProto.getPortno())\n-                        .publicKey(nodeAddressProto.getRSAPubKey())\n-                        .nodeCertHash(nodeAddressProto.getNodeCertHash().toByteArray())\n-                        .nodeId(nodeAddressProto.getNodeId())\n-                        .nodeAccountId(EntityId.of(nodeAddressProto.getNodeAccountId()))\n-                        .build();\n-                builder.add(addressBookEntry);\n-            }\n+        if (nodeAddressBook == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d969f28a851ee463399b402e39bea7068c85f1"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b47fb9ed2cb967a83408b38b013bd2e4563dd9c", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5b47fb9ed2cb967a83408b38b013bd2e4563dd9c", "committedDate": "2020-09-03T17:24:37Z", "message": "remove redundant null check\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMDY5MzM4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#pullrequestreview-482069338", "createdAt": "2020-09-03T17:48:18Z", "commit": {"oid": "5b47fb9ed2cb967a83408b38b013bd2e4563dd9c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0ODoxOFrOHMxTTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo1MDo1OFrOHMxZHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1MjcxNw==", "bodyText": "I don't think the implementation of this is correct. It's also unnecessarily complex and uses reflection. Both nodeId and port are primitives, so the hasField() implementation returns true if they don't equal the default value (which is zero for both). However, zero is still a valid value for these fields so we still want to set it if it's zero (e.g. testnet's node 0-3).\nI think we can revert to previous logic and use some smarter conditional logic to control them being set. For port, I think it's safe to assume that the main nodes aren't going to use port zero so we can just not set it if it's zero. For nodeId, we can first collect all nodeIds into a set and only set nodeId if the size of that set is greater than one.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#discussion_r483152717", "createdAt": "2020-09-03T17:48:18Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImpl.java", "diffHunk": "@@ -220,26 +225,48 @@ private AddressBook buildAddressBook(byte[] addressBookBytes, long consensusTime\n      */\n     private Collection<AddressBookEntry> retrieveNodeAddressesFromAddressBook(NodeAddressBook nodeAddressBook,\n                                                                               long consensusTimestamp) {\n-        ImmutableList.Builder<AddressBookEntry> builder = ImmutableList.builder();\n-\n-        if (nodeAddressBook != null) {\n-            for (com.hederahashgraph.api.proto.java.NodeAddress nodeAddressProto : nodeAddressBook\n-                    .getNodeAddressList()) {\n-                AddressBookEntry addressBookEntry = AddressBookEntry.builder()\n-                        .consensusTimestamp(consensusTimestamp)\n-                        .memo(nodeAddressProto.getMemo().toStringUtf8())\n-                        .ip(nodeAddressProto.getIpAddress().toStringUtf8())\n-                        .port(nodeAddressProto.getPortno())\n-                        .publicKey(nodeAddressProto.getRSAPubKey())\n-                        .nodeCertHash(nodeAddressProto.getNodeCertHash().toByteArray())\n-                        .nodeId(nodeAddressProto.getNodeId())\n-                        .nodeAccountId(EntityId.of(nodeAddressProto.getNodeAccountId()))\n-                        .build();\n-                builder.add(addressBookEntry);\n-            }\n+        ImmutableList.Builder<AddressBookEntry> listBuilder = ImmutableList.builder();\n+\n+        for (NodeAddress nodeAddressProto : nodeAddressBook.getNodeAddressList()) {\n+            AddressBookEntry.AddressBookEntryBuilder builder = AddressBookEntry.builder()\n+                    .consensusTimestamp(consensusTimestamp);\n+\n+            nodeAddressFieldDescriptors.stream()\n+                    .filter(nodeAddressProto::hasField)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b47fb9ed2cb967a83408b38b013bd2e4563dd9c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NDIwNA==", "bodyText": "This test and addressBookWithEmptyAddressBookEntryFields() are very hard to understand and not maintainable. It'd be much simpler to just NodeAddressBook.newBuilder().ip()...build() all fields manually except nodeId and port then assert the current address book has null for those fields.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#discussion_r483154204", "createdAt": "2020-09-03T17:50:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/addressbook/AddressBookServiceImplTest.java", "diffHunk": "@@ -335,9 +344,103 @@ void verifyAddressBookEndPointsAreSet() {\n         assertThat(prevAddressBook.getEndConsensusTimestamp()).isNotNull();\n     }\n \n+    @Test\n+    void verifyAddressBookWithEmptyAddressBookEntryFields() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b47fb9ed2cb967a83408b38b013bd2e4563dd9c"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d312b9aa619e825426319782df3a58209eec4954", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d312b9aa619e825426319782df3a58209eec4954", "committedDate": "2020-09-04T01:57:51Z", "message": "Revert \"ignore NodeAddress fields not set in protobuf\"\n\nThis reverts commit 67f046aec3bd360e0beef496b63de118c81c7fcf.\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9258f326f104c4442806cd590137e680a15e97b2", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9258f326f104c4442806cd590137e680a15e97b2", "committedDate": "2020-09-04T04:34:43Z", "message": "set port number to null if in protobuf it's 0; set all nodeID to null if they are the same\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e061ff67c36d0e563d2c9da5c9396cfa18057c5", "author": {"user": {"login": "xin-hedera", "name": "Xin Li"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9e061ff67c36d0e563d2c9da5c9396cfa18057c5", "committedDate": "2020-09-04T13:50:50Z", "message": "verify address book entries\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzMxNTg3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#pullrequestreview-482731587", "createdAt": "2020-09-04T15:08:35Z", "commit": {"oid": "9e061ff67c36d0e563d2c9da5c9396cfa18057c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyODAzNzkx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1013#pullrequestreview-482803791", "createdAt": "2020-09-04T16:35:36Z", "commit": {"oid": "9e061ff67c36d0e563d2c9da5c9396cfa18057c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3660, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}