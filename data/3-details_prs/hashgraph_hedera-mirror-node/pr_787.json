{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTg3NTUw", "number": 787, "title": "Add retry to PubSub send", "bodyText": "Detailed description:\nLast PagerDuty alert was due to send timeout when publishing message to PubSub.\nTimeout is 10sec. Messages usually take few ms to get published, so increasing\ntimeout won't do much good.\nAdding retry to build some resiliency in face of retryable errors.\nSigned-off-by: Apekshit Sharma apekshit.sharma@hedera.com\nWhich issue(s) this PR fixes:\nFixes #786\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-05-23T01:08:14Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787", "merged": true, "mergeCommit": {"oid": "c2296deb30fd0de2217f98fe0d0b32f03632df2d"}, "closed": true, "closedAt": "2020-05-26T19:53:44Z", "author": {"login": "apeksharma"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcj8GycgH2gAyNDIyMTg3NTUwOjU0Njg1ZWUzYjAyODY5YjRjOWExMmE5MjA3OThmNTNhYTc0YzEwZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck--lrAFqTQxODAxMjYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54685ee3b02869b4c9a12a920798f53aa74c10db", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/54685ee3b02869b4c9a12a920798f53aa74c10db", "committedDate": "2020-05-23T00:55:09Z", "message": "Add retry to PubSub send\n\nLast PagerDuty alert was due to send timeout when publishing message to PubSub.\nTimeout is 10sec. Messages usually take few ms to get published, so increasing\ntimeout won't do much good.\nAdding retry to build some resiliency against retrying errors.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjM3NTgy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#pullrequestreview-417237582", "createdAt": "2020-05-23T01:11:52Z", "commit": {"oid": "54685ee3b02869b4c9a12a920798f53aa74c10db"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMToxMTo1MlrOGZmpIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMToxMTo1MlrOGZmpIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMDcwNg==", "bodyText": "nit: Saying the attempt number is good for troubleshooting e.g. \"Attempt 1 timed out....\"", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#discussion_r429500706", "createdAt": "2020-05-23T01:11:52Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListener.java", "diffHunk": "@@ -79,6 +78,22 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         }\n     }\n \n+    // Publishes the PubSubMessage while retrying if a retryable error is encountered.\n+    private void sendPubSubMessage(PubSubMessage pubSubMessage) {\n+        for (int numRetries = 0; numRetries < pubSubProperties.getNumSendTries(); numRetries++) {\n+            try {\n+                pubsubOutputChannel.send(MessageBuilder\n+                        .withPayload(pubSubMessage)\n+                        .setHeader(\"consensusTimestamp\", pubSubMessage.getConsensusTimestamp())\n+                        .build());\n+            } catch (MessageTimeoutException e) {\n+                log.warn(\"Timed out sending message to PubSub\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54685ee3b02869b4c9a12a920798f53aa74c10db"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9a6ae3431e6ae41f08117d9b76fa4e561913184", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c9a6ae3431e6ae41f08117d9b76fa4e561913184", "committedDate": "2020-05-23T01:16:32Z", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjQ0ODMy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#pullrequestreview-417244832", "createdAt": "2020-05-23T02:58:57Z", "commit": {"oid": "c9a6ae3431e6ae41f08117d9b76fa4e561913184"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMjo1ODo1OFrOGZnFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMzoxNzoxNFrOGZnJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwODA0NA==", "bodyText": "Naming is a bit weird. Would suggest following spring-retry's example and naming it maxAttempts or maxRetries.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#discussion_r429508044", "createdAt": "2020-05-23T02:58:58Z", "author": {"login": "steven-sheehy"}, "path": "docs/configuration.md", "diffHunk": "@@ -73,6 +73,7 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.importer.parser.record.entity.persist.transactionBytes`      | false                   | Persist raw transaction bytes to the database                                                  |\n | `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 2000                    | When inserting transactions into db, executeBatches() is called every these many transactions  |\n | `hedera.mirror.importer.parser.record.pubsub.topicName`                     |                         | Pubsub topic to publish transactions to                                                        |\n+| `hedera.mirror.importer.parser.record.pubsub.numSendTries`                  | 5                       | Number of attempts when sending messages to PubSub (only for retryable errors)                 |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a6ae3431e6ae41f08117d9b76fa4e561913184"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwOTExNw==", "bodyText": "Would prefer we not to mix non-business logic in with business logic. Since you're using Spring Integration you should take advantage of the Enterprise Integration Patterns it provides and decouple the two. Besides always being better to delegate such common patterns to a well tested library, it also allows advanced features like customizing backoff policies. Can suggest at least two other ways:\n\nUse an interface annotated with @MessagingGateway as I originally suggested and just put @Retryable(include = MessageTimeoutException.class, maxAttemptsExpression = \"${hedera....maxAttempts}\"} on it\nUse Spring Integration DSL in PubSubAutoConfiguration with retry advice.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#discussion_r429509117", "createdAt": "2020-05-23T03:17:14Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListener.java", "diffHunk": "@@ -79,6 +78,22 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         }\n     }\n \n+    // Publishes the PubSubMessage while retrying if a retryable error is encountered.\n+    private void sendPubSubMessage(PubSubMessage pubSubMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a6ae3431e6ae41f08117d9b76fa4e561913184"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b54f1d4d366bbc779fbad2fdbd074fe9b8cb150a", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b54f1d4d366bbc779fbad2fdbd074fe9b8cb150a", "committedDate": "2020-05-23T03:27:32Z", "message": "address comments\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzAzOTA3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#pullrequestreview-417303907", "createdAt": "2020-05-23T19:45:22Z", "commit": {"oid": "b54f1d4d366bbc779fbad2fdbd074fe9b8cb150a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MDEyNjI2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/787#pullrequestreview-418012626", "createdAt": "2020-05-26T06:49:50Z", "commit": {"oid": "b54f1d4d366bbc779fbad2fdbd074fe9b8cb150a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3163, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}