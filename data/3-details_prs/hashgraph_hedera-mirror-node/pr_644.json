{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTg1MDc1", "number": 644, "title": "Implement Topic Messages collection REST API endpoint", "bodyText": "Detailed description:\nThere are impending customer requests to be able to move from a transaction to a set of HCS messages.\nAlso reasonable to expect customers would want to retrieve all messages under a topic by paging through REST API instead of just the gRPC API.\nMore detailed description to come ...\nWhich issue(s) this PR fixes:\nFixes #618\nSpecial notes for your reviewer:\nThis change also tries to streamline some logic by sharing better in util and keeping endpoint specific logic in the endpoint file e.g. topicmessage.js\nMore unit tests to come and spec descriptions to be updated\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-04-01T19:21:18Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644", "merged": true, "mergeCommit": {"oid": "4999088c83673aa951e552793a6e71e861406924"}, "closed": true, "closedAt": "2020-04-07T16:30:51Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTOH3FAH2gAyMzk3MTg1MDc1OmUwZWVhZWUzMjkwYTc2ZWZhZjU4NWRlZDlkMWFhMjc1MDExN2Y0N2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVV222gFqTM4OTI4Njc0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0eeaee3290a76efaf585ded9d1aa2750117f47f", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e0eeaee3290a76efaf585ded9d1aa2750117f47f", "committedDate": "2020-04-01T02:17:54Z", "message": "Initial E2E implementation w no filters or paging\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "347d2d5762aba28339d68e5e80e4e951d5dd59e4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/347d2d5762aba28339d68e5e80e4e951d5dd59e4", "committedDate": "2020-04-01T05:21:21Z", "message": "Added coverage for seqnum, timestamp and limit params\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0948026ad7c0f020ea0d42773e01e23d92481d10", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0948026ad7c0f020ea0d42773e01e23d92481d10", "committedDate": "2020-04-01T19:02:52Z", "message": "Added constants file and order support\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d90db2f3ef06715e4ff8ad5c91b436f41f04d0b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2d90db2f3ef06715e4ff8ad5c91b436f41f04d0b", "committedDate": "2020-04-01T19:30:01Z", "message": "Merge master to get VerifySubscriber fix\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3beba166e8b466d8b6da7c940cc6392ce9fa20dc", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3beba166e8b466d8b6da7c940cc6392ce9fa20dc", "committedDate": "2020-04-02T02:44:38Z", "message": "Added next link logic and a little refactoring\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0948942e2c578e872db55f814ffa690c0d1c75ad", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0948942e2c578e872db55f814ffa690c0d1c75ad", "committedDate": "2020-04-02T18:08:12Z", "message": "Merge branch 'master' into rest-topic-messages\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b5f22ff920c58169497e5d524992f65f83fb23", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/71b5f22ff920c58169497e5d524992f65f83fb23", "committedDate": "2020-04-02T18:34:09Z", "message": "Initial E2E implementation w no filters or paging\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2b3e139d26bf171533b0a08892def8bf3f4986", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2f2b3e139d26bf171533b0a08892def8bf3f4986", "committedDate": "2020-04-02T18:34:10Z", "message": "Added coverage for seqnum, timestamp and limit params\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fd3051bbc1bdf6a56a9bd5e1e611f1017a1fa89", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0fd3051bbc1bdf6a56a9bd5e1e611f1017a1fa89", "committedDate": "2020-04-02T18:34:10Z", "message": "Added constants file and order support\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dd135c82150a87824562f6c8a30751db4f0bd60", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8dd135c82150a87824562f6c8a30751db4f0bd60", "committedDate": "2020-04-02T18:34:11Z", "message": "Added next link logic and a little refactoring\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ae40739aae94805f04ac3ccdb2fd0fc851fb83d", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1ae40739aae94805f04ac3ccdb2fd0fc851fb83d", "committedDate": "2020-04-02T18:34:11Z", "message": "Updated spec descriptions\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb3850cee268dab3d30cfeb1959773909623c6e6", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/cb3850cee268dab3d30cfeb1959773909623c6e6", "committedDate": "2020-04-02T18:40:09Z", "message": "Rebased w master\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/00c80bf428011e6edbb56a26d137960ec8d95609", "committedDate": "2020-04-02T23:39:47Z", "message": "Added test coverage for new topicmessages and util methods\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/05a3c2d276226cbb71b2bb8a18c98e32a16de98b", "committedDate": "2020-04-06T20:15:25Z", "message": "Merge master w Kubernetes addition\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTc2Njky", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#pullrequestreview-387576692", "createdAt": "2020-04-03T20:59:13Z", "commit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDo1OToxM1rOGApdtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDo1NDo1M1rOGBpg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMjUzMg==", "bodyText": "Description is inaccurate", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r403332532", "createdAt": "2020-04-03T20:59:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/topicmessages-01-no-args.spec.json", "diffHunk": "@@ -0,0 +1,56 @@\n+{\n+  \"description\": \"Get single message by valid consensus timestamp\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NzAzOA==", "bodyText": "Why would seqnum=2 translate to lt:2?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404277038", "createdAt": "2020-04-06T17:48:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/utils.test.js", "diffHunk": "@@ -193,3 +194,241 @@ describe('Utils isValidEntityNum tests', () => {\n     expect(utils.isValidEntityNum('0.2.3')).toBe(true);\n   });\n });\n+\n+describe('utils buildComparatorFilter tests', () => {\n+  test('Verify buildComparatorFilter for seqnum=lt:2', () => {\n+    verifyBuildComparatorFilter(constants.filterKeys.SEQUENCE_NUMBER, 'lt:2', {\n+      key: constants.filterKeys.SEQUENCE_NUMBER,\n+      operator: 'lt',\n+      value: '2'\n+    });\n+  });\n+\n+  test('Verify buildComparatorFilter for seqnum=lte:3', () => {\n+    verifyBuildComparatorFilter(constants.filterKeys.SEQUENCE_NUMBER, 'lte:3', {\n+      key: constants.filterKeys.SEQUENCE_NUMBER,\n+      operator: 'lte',\n+      value: '3'\n+    });\n+  });\n+\n+  test('Verify buildComparatorFilter for seqnum=4', () => {\n+    verifyBuildComparatorFilter(constants.filterKeys.SEQUENCE_NUMBER, '4', {\n+      key: constants.filterKeys.SEQUENCE_NUMBER,\n+      operator: 'eq',\n+      value: '4'\n+    });\n+  });\n+\n+  test('Verify buildComparatorFilter for timestamp=gte:1234567890.000000004', () => {\n+    verifyBuildComparatorFilter(constants.filterKeys.TIMESTAMP, 'gte:1234567890.000000005', {\n+      key: constants.filterKeys.TIMESTAMP,\n+      operator: 'gte',\n+      value: '1234567890.000000005'\n+    });\n+  });\n+\n+  test('Verify buildComparatorFilter for timestamp=gt:6', () => {\n+    verifyBuildComparatorFilter(constants.filterKeys.TIMESTAMP, 'gt:1234567890.000000006', {\n+      key: constants.filterKeys.TIMESTAMP,\n+      operator: 'gt',\n+      value: '1234567890.000000006'\n+    });\n+  });\n+});\n+\n+const verifyBuildComparatorFilter = (key, val, expectedFilter) => {\n+  let filter = utils.buildComparatorFilter(key, val);\n+\n+  verifyFilter(filter, expectedFilter.key, expectedFilter.operator, expectedFilter.value);\n+};\n+\n+const verifyFilter = (filter, key, op, val) => {\n+  expect(filter.key).toStrictEqual(key);\n+  expect(filter.operator).toStrictEqual(op);\n+  expect(filter.value).toStrictEqual(val);\n+};\n+\n+describe('utils buildFilterObject tests', () => {\n+  test('Verify buildComparatorFilter for /api/v1/topic/7?seqnum=2', () => {\n+    const filters = {\n+      seqnum: '2'\n+    };\n+\n+    let formattedFilters = utils.buildFilterObject(filters);\n+\n+    expect(formattedFilters.length).toBe(1);\n+    verifyFilter(formattedFilters[0], constants.filterKeys.SEQUENCE_NUMBER, 'eq', '2');\n+  });\n+\n+  test('Verify buildComparatorFilter for /api/v1/topic/7?timestamp=1234567890.000000004', () => {\n+    const filters = {\n+      timestamp: '1234567890.000000004'\n+    };\n+\n+    let formattedFilters = utils.buildFilterObject(filters);\n+\n+    expect(formattedFilters.length).toBe(1);\n+    verifyFilter(formattedFilters[0], constants.filterKeys.TIMESTAMP, 'eq', '1234567890.000000004');\n+  });\n+\n+  test('Verify buildComparatorFilter for /api/v1/topic/7?seqnum=2&seqnum=gte:3&timestamp=1234567890.000000004&order=desc&limit=5', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNTg1MQ==", "bodyText": "I would prefer this spelled out and not abbreviated. We don't seem to have another multi-word (except maybe account.publickey?) param so not sure whether it should be:\nsequencenumber\nsequenceNumber\nsequence_number\nI think first would work best.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404335851", "createdAt": "2020-04-06T19:29:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -0,0 +1,44 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const filterKeys = {\n+  ACCOUNT_ID: 'account.id',\n+  ACCOUNT_BALANCE: 'account.balance',\n+  ACCOUNT_PUBLICKEY: 'account.publickey',\n+  LIMIT: 'limit',\n+  ORDER: 'order',\n+  RESULT: 'result',\n+  SEQUENCE_NUMBER: 'seqnum',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NzQ5Nw==", "bodyText": "This allows limit up to 9999, is that correct? That seems a bit high. We may want to have the regex and some max value like 1000 or 2000. Also should check non-zero", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404347497", "createdAt": "2020-04-06T19:51:31Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -84,44 +110,58 @@ const paramValidityChecks = function(param, opAndVal) {\n     return ret;\n   }\n \n+  return filterValidityChecks(param, op, val);\n+};\n+\n+const filterValidityChecks = function(param, op, val) {\n+  let ret = false;\n+\n+  if (op === undefined || val === undefined) {\n+    return ret;\n+  }\n+\n   // Validate operator\n   if (!/^(gte?|lte?|eq|ne)$/.test(op)) {\n     return ret;\n   }\n \n   // Validate the value\n   switch (param) {\n-    case 'account.id':\n+    case filterKeys.ACCOUNT_ID:\n       // Accepted forms: shard.realm.num or num\n       ret = isValidEntityNum(val);\n       break;\n-    case 'timestamp':\n+    case filterKeys.TIMESTAMP:\n       ret = isValidTimestampParam(val);\n       break;\n-    case 'account.balance':\n+    case filterKeys.ACCOUNT_BALANCE:\n       // Accepted forms: Upto 50 billion\n       ret = /^\\d{1,19}$/.test(val);\n       break;\n-    case 'account.publickey':\n+    case filterKeys.ACCOUNT_PUBLICKEY:\n       // Acceptable forms: exactly 64 characters or +12 bytes (DER encoded)\n       ret = /^[0-9a-fA-F]{64}$/.test(val) || /^[0-9a-fA-F]{88}$/.test(val);\n       break;\n-    case 'limit':\n+    case filterKeys.LIMIT:\n       // Acceptable forms: upto 4 digits\n-      ret = /^\\d{1,4}$/.test(val);\n+      ret = isValidLimitNum(val);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0OTgzMw==", "bodyText": "Should add the utils.errorHandler here (just merged)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404349833", "createdAt": "2020-04-06T19:55:32Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -144,10 +285,19 @@ const getMessageByTopicAndSequenceRequest = function(req, res) {\n   return processGetMessageByTopicAndSequenceRequest(req.params, res);\n };\n \n+const getTopicMessages = (req, res) => {\n+  logger.debug('--------------------  getTopicMessages --------------------');\n+  logger.debug(`Client: [ ${req.ip} ] URL: ${req.originalUrl}`);\n+  return processGetTopicMessages(req, res);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c80bf428011e6edbb56a26d137960ec8d95609"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MzM3Mg==", "bodyText": "Is your IDE or prettier adding these commas and removing parantheses? Doesn't matter we just need to make sure we're all doing the same formatting.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404373372", "createdAt": "2020-04-06T20:38:43Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -150,15 +146,15 @@ const getBalances = function(req, res) {\n       }\n       ret.balances.push({\n         account: row.account,\n-        balance: Number(row.balance)\n+        balance: Number(row.balance),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3NDg1NA==", "bodyText": "Would it better practice to use select * to avoid having to change later if the fields are altered?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404374854", "createdAt": "2020-04-06T20:41:27Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -106,11 +151,94 @@ const processGetMessageByTopicAndSequenceRequest = (params, httpResponse) => {\n   return getMessage(pgSqlQuery, pgSqlParams, httpResponse);\n };\n \n+const processGetTopicMessages = (req, res) => {\n+  // retrieve param and filters from request\n+  const topicId = req.params.id;\n+  const filters = utils.buildFilterObject(req.query);\n+\n+  // validate params\n+  const validQuery = validateGetTopicMessagesRequest(topicId, filters, res);\n+  if (!validQuery) {\n+    return Promise.resolve;\n+  }\n+\n+  // build sql query validated param and filters\n+  let {query, params, order, limit} = extractSqlFromTopicMessagesRequest(topicId, filters);\n+\n+  let topicMessagesResponse = {\n+    messages: [],\n+    links: {\n+      next: null,\n+    },\n+  };\n+\n+  // get results and return formatted response\n+  getMessages(query, params).then((messages) => {\n+    topicMessagesResponse.messages = messages;\n+\n+    // populate next\n+    if (limit) {\n+      let lastTimeStamp =\n+        messages.length > 0 ? messages[messages.length - 1][topicMessageColumns.CONSENSUS_TIMESTAMP] : null;\n+      topicMessagesResponse.links.next = utils.getPaginationLink(\n+        req,\n+        topicMessagesResponse.messages.length !== limit,\n+        constants.filterKeys.TIMESTAMP,\n+        lastTimeStamp,\n+        order\n+      );\n+    }\n+\n+    res.json(topicMessagesResponse);\n+  });\n+};\n+\n+const extractSqlFromTopicMessagesRequest = (topicId, filters) => {\n+  const entity = utils.parseEntityId(topicId);\n+  let pgSqlQuery =\n+    'select consensus_timestamp, realm_num, topic_num, message, running_hash, sequence_number' +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3Nzc3Nw==", "bodyText": "This limit seems to be only set if a limit param is supplied. Thus if a query with no limit returned larger than default page size, there would be no next link it looks like.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404377777", "createdAt": "2020-04-06T20:47:03Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -106,11 +151,94 @@ const processGetMessageByTopicAndSequenceRequest = (params, httpResponse) => {\n   return getMessage(pgSqlQuery, pgSqlParams, httpResponse);\n };\n \n+const processGetTopicMessages = (req, res) => {\n+  // retrieve param and filters from request\n+  const topicId = req.params.id;\n+  const filters = utils.buildFilterObject(req.query);\n+\n+  // validate params\n+  const validQuery = validateGetTopicMessagesRequest(topicId, filters, res);\n+  if (!validQuery) {\n+    return Promise.resolve;\n+  }\n+\n+  // build sql query validated param and filters\n+  let {query, params, order, limit} = extractSqlFromTopicMessagesRequest(topicId, filters);\n+\n+  let topicMessagesResponse = {\n+    messages: [],\n+    links: {\n+      next: null,\n+    },\n+  };\n+\n+  // get results and return formatted response\n+  getMessages(query, params).then((messages) => {\n+    topicMessagesResponse.messages = messages;\n+\n+    // populate next\n+    if (limit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3ODYyMw==", "bodyText": "There is no check that this is below config.api.maxLimit or a default being set. Why are we not using parseLimitAndOrderParams?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404378623", "createdAt": "2020-04-06T20:48:42Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -106,11 +151,94 @@ const processGetMessageByTopicAndSequenceRequest = (params, httpResponse) => {\n   return getMessage(pgSqlQuery, pgSqlParams, httpResponse);\n };\n \n+const processGetTopicMessages = (req, res) => {\n+  // retrieve param and filters from request\n+  const topicId = req.params.id;\n+  const filters = utils.buildFilterObject(req.query);\n+\n+  // validate params\n+  const validQuery = validateGetTopicMessagesRequest(topicId, filters, res);\n+  if (!validQuery) {\n+    return Promise.resolve;\n+  }\n+\n+  // build sql query validated param and filters\n+  let {query, params, order, limit} = extractSqlFromTopicMessagesRequest(topicId, filters);\n+\n+  let topicMessagesResponse = {\n+    messages: [],\n+    links: {\n+      next: null,\n+    },\n+  };\n+\n+  // get results and return formatted response\n+  getMessages(query, params).then((messages) => {\n+    topicMessagesResponse.messages = messages;\n+\n+    // populate next\n+    if (limit) {\n+      let lastTimeStamp =\n+        messages.length > 0 ? messages[messages.length - 1][topicMessageColumns.CONSENSUS_TIMESTAMP] : null;\n+      topicMessagesResponse.links.next = utils.getPaginationLink(\n+        req,\n+        topicMessagesResponse.messages.length !== limit,\n+        constants.filterKeys.TIMESTAMP,\n+        lastTimeStamp,\n+        order\n+      );\n+    }\n+\n+    res.json(topicMessagesResponse);\n+  });\n+};\n+\n+const extractSqlFromTopicMessagesRequest = (topicId, filters) => {\n+  const entity = utils.parseEntityId(topicId);\n+  let pgSqlQuery =\n+    'select consensus_timestamp, realm_num, topic_num, message, running_hash, sequence_number' +\n+    ' from topic_message where realm_num = $1 and topic_num = $2';\n+  let nextParamCount = 3;\n+  let pgSqlParams = [entity.realm, entity.num];\n+\n+  // add filters\n+  let limit;\n+  let order = 'asc';\n+  for (let filter of filters) {\n+    if (filter.key === constants.filterKeys.LIMIT) {\n+      limit = filter.value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4MTY3Mg==", "bodyText": "Why would a sequence number be an entity num? entity nums accept 0.0.1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404381672", "createdAt": "2020-04-06T20:54:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -85,44 +111,58 @@ const paramValidityChecks = function(param, opAndVal) {\n     return ret;\n   }\n \n+  return filterValidityChecks(param, op, val);\n+};\n+\n+const filterValidityChecks = function (param, op, val) {\n+  let ret = false;\n+\n+  if (op === undefined || val === undefined) {\n+    return ret;\n+  }\n+\n   // Validate operator\n   if (!/^(gte?|lte?|eq|ne)$/.test(op)) {\n     return ret;\n   }\n \n   // Validate the value\n   switch (param) {\n-    case 'account.id':\n+    case filterKeys.ACCOUNT_ID:\n       // Accepted forms: shard.realm.num or num\n       ret = isValidEntityNum(val);\n       break;\n-    case 'timestamp':\n+    case filterKeys.TIMESTAMP:\n       ret = isValidTimestampParam(val);\n       break;\n-    case 'account.balance':\n+    case filterKeys.ACCOUNT_BALANCE:\n       // Accepted forms: Upto 50 billion\n       ret = /^\\d{1,19}$/.test(val);\n       break;\n-    case 'account.publickey':\n+    case filterKeys.ACCOUNT_PUBLICKEY:\n       // Acceptable forms: exactly 64 characters or +12 bytes (DER encoded)\n       ret = /^[0-9a-fA-F]{64}$/.test(val) || /^[0-9a-fA-F]{88}$/.test(val);\n       break;\n-    case 'limit':\n+    case filterKeys.LIMIT:\n       // Acceptable forms: upto 4 digits\n-      ret = /^\\d{1,4}$/.test(val);\n+      ret = isValidLimitNum(val);\n       break;\n-    case 'order':\n+    case filterKeys.ORDER:\n       // Acceptable words: asc or desc\n       ret = ['asc', 'desc'].includes(val);\n       break;\n-    case 'type':\n+    case filterKeys.TYPE:\n       // Acceptable words: credit or debig\n       ret = ['credit', 'debit'].includes(val);\n       break;\n-    case 'result':\n+    case filterKeys.RESULT:\n       // Acceptable words: success or fail\n       ret = ['success', 'fail'].includes(val);\n       break;\n+    case filterKeys.SEQUENCE_NUMBER:\n+      // Acceptable words: bigint\n+      ret = isValidEntityNum(val);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4MTkzNw==", "bodyText": "Why would a sequence number be an entity num? entity nums accept 0.0.1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404381937", "createdAt": "2020-04-06T20:54:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -35,29 +50,59 @@ const validateConsensusTimestampParam = function(consensusTimestamp) {\n /**\n  * Verify topicId and seqNum meet entity_num format\n  */\n-const validateGetSequenceMessageParams = function(topicId, seqNum) {\n+const validateGetSequenceMessageParams = function (topicId, seqNum) {\n   let badParams = [];\n   if (!utils.isValidEntityNum(topicId)) {\n-    badParams.push(utils.getInvalidParameterMessageObject('topic_num'));\n+    badParams.push(utils.getInvalidParameterMessageObject(topicMessageColumns.TOPIC_NUM));\n   }\n \n   if (!utils.isValidEntityNum(seqNum)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjUwMDM3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#pullrequestreview-388650037", "createdAt": "2020-04-06T22:02:37Z", "commit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMjowMjozOFrOGBrkTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMjoyNjowMVrOGBsLsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQxNTU2Ng==", "bodyText": "i think my editor reverses these :D\nnana, you are the boss. Later, please pick a default for these and let's add them in .editorconfig if possible so our IDEs are in sync.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404415566", "createdAt": "2020-04-06T22:02:38Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integrationDbOps.js", "diffHunk": "@@ -52,9 +52,9 @@ const SERVICE_FEE = 4;\n \n let accountEntityIds = {};\n \n-const isDockerInstalled = function() {\n-  return new Promise(resolve => {\n-    exec('docker --version', err => {\n+const isDockerInstalled = function () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQxNjM1MA==", "bodyText": "Weren't we going for /topic/:id/messages/:seq in the new apis to be consistent with kabuto and github?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404416350", "createdAt": "2020-04-06T22:04:20Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/specs/topicmessages-02-specific-sequence.spec.json", "diffHunk": "@@ -0,0 +1,42 @@\n+{\n+  \"description\": \"Get single message by valid topic and sequence\",\n+  \"setup\": {\n+    \"accounts\": [],\n+    \"balances\": [],\n+    \"transactions\": [],\n+    \"cryptotransfers\": [],\n+    \"topicmessages\": [\n+      {\n+        \"timestamp\": \"1234567890000000001\",\n+        \"topic_num\": 7,\n+        \"seq_num\": 1\n+      },\n+      {\n+        \"timestamp\": \"1234567890000000002\",\n+        \"topic_num\": 7,\n+        \"seq_num\": 2\n+      },\n+      {\n+        \"timestamp\": \"1234567890000000003\",\n+        \"topic_num\": 7,\n+        \"seq_num\": 3\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/topic/7?seqnum=2\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQyNTY1MA==", "bodyText": "As we add more tests, this file is gonna bloat up a lot since utils.js itself is bloated.\nWhile refactoring utils.js is not important right now, we can at least avoid bloating up utils.test.js only to split it again in future.\nI'd suggest to move these tests in standalone file, say filter.test.js\nbetter to have these in separate file filter.tests.js or `", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#discussion_r404425650", "createdAt": "2020-04-06T22:26:01Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/utils.test.js", "diffHunk": "@@ -193,3 +194,241 @@ describe('Utils isValidEntityNum tests', () => {\n     expect(utils.isValidEntityNum('0.2.3')).toBe(true);\n   });\n });\n+\n+describe('utils buildComparatorFilter tests', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a3c2d276226cbb71b2bb8a18c98e32a16de98b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4efd20c9277168bdb64149a4133421e51d09b4c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d4efd20c9277168bdb64149a4133421e51d09b4c", "committedDate": "2020-04-07T01:26:38Z", "message": "Addressed feedback, fixed limit logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23fed43036cd2f6dd78edd2ef80b1f724e8c3321", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/23fed43036cd2f6dd78edd2ef80b1f724e8c3321", "committedDate": "2020-04-07T01:32:30Z", "message": "Corrected topicmessages-08 url\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c70aa582aae6cb71668e058ee21834ac4b0b3918", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c70aa582aae6cb71668e058ee21834ac4b0b3918", "committedDate": "2020-04-07T01:47:03Z", "message": "JS IntelliJ format config settings\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b83493da6b562c4d49d7de81d4618d2d70a2ac", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/71b83493da6b562c4d49d7de81d4618d2d70a2ac", "committedDate": "2020-04-07T15:59:05Z", "message": "Change topic message logs to trace\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac41592b39903ba100591db2bea41a97c8fc7302", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ac41592b39903ba100591db2bea41a97c8fc7302", "committedDate": "2020-04-07T16:03:28Z", "message": "Corrected query logs to be trace\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mjg2NzQy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/644#pullrequestreview-389286742", "createdAt": "2020-04-07T16:26:25Z", "commit": {"oid": "ac41592b39903ba100591db2bea41a97c8fc7302"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3371, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}