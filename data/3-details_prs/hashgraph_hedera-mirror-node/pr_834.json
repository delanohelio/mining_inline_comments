{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MzY2ODU0", "number": 834, "title": "Denormalize entity in cryptotransferlists and non_fee_transfer tables", "bodyText": "Use encoded entity id in t_cryptotransferlists table\nOptimize indexes on t_cryptotransferlists table\nRename t_cryptotransferlists to crypto_transfers\nPerformance test: In a db with ~8M rows in t_ctl, and workload which inserted 6000 crypto transfer rows in a batch (no inserts in other tables), time to insert was as follows:\n\u00a0 \u00a0- Current: 41.4ms\n\u00a0 - With denormalization and non-composite indexes: 33.3ms\n\u00a0 - With partial index: 30ms\n\u00a0 Net gain : 41.4ms --> 30ms\nPartial index\nUse partial index for entity_id column of t_cryptotransferlists. Indexing ignores entity ids for the treasury account (0.0.98) since it is present in every transaction. This will also lead to much smaller index since that inserting records with that entity id leads to\u00a0a lot of btree node splits and half filled Index pages.\nMigration time of db having ~3m txns is 130s. Extrapolating for mainnet (~150m txns), migration will take ~2 hours\n\nSeeing insertions reach 10k at times now:\n2020-06-18 02:38:16,302 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 100034 transactions from record file ./data/recordstreams/valid/2020-02-09T20_00_00.004108Z.rcd in 17229ms (5806/s)\n2020-06-18 02:38:26,158 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 99995 transactions from record file ./data/recordstreams/valid/2020-02-09T20_01_40.009724Z.rcd in 9829ms (10173/s)\n2020-06-18 02:38:35,576 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 99997 transactions from record file ./data/recordstreams/valid/2020-02-09T20_03_20.004973Z.rcd in 9405ms (10632/s)\n2020-06-18 02:38:45,194 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 100028 transactions from record file ./data/recordstreams/valid/2020-02-09T20_05_00.011814Z.rcd in 9605ms (10414/s)\n2020-06-18 02:38:54,424 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 100004 transactions from record file ./data/recordstreams/valid/2020-02-09T20_06_40.019463Z.rcd in 9217ms (10849/s)\n2020-06-18 02:39:07,864 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 99998 transactions from record file ./data/recordstreams/valid/2020-02-09T20_08_20.006814Z.rcd in 13427ms (7447/s)\n2020-06-18 02:39:24,207 INFO \u00a0[scheduling-4] c.h.m.i.p.r.RecordFileParser Finished parsing 100008 transactions from record file ./data/recordstreams/valid/2020-02-09T20_10_00.001180Z.rcd in 16329ms (6124/s)\n\n\u00a0REST changes:\n\nparam parsing code was too convoluted to update for handling encoded ids. Refactored param parsing code.\nRemoved too many special characters in rest integration test code, were hurting readability when I was fixing test failures. Changed to plain csv.\n\nSigned-off-by: Apekshit Sharma apekshit.sharma@hedera.com\nDetailed description:\nWhich issue(s) this PR fixes:\nFixes #820\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-06-18T10:06:08Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834", "merged": true, "mergeCommit": {"oid": "dcbe797c73bc2660aa0ead33c8881ad7643ccffd"}, "closed": true, "closedAt": "2020-06-22T20:48:18Z", "author": {"login": "apeksharma"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsbgIcgH2gAyNDM2MzY2ODU0OmQxY2MxNWQ4ZjI1MDM0MmFiZTA3OTE3ODJlZmU3MGQ1NDgyZWYyMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct29zNgFqTQzNTI1Mzc0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d1cc15d8f250342abe0791782efe70d5482ef22d", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d1cc15d8f250342abe0791782efe70d5482ef22d", "committedDate": "2020-06-18T10:01:17Z", "message": "t_ctl entity encoding\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bfaeb38a602b48df4552c150822c2b7e53329180", "committedDate": "2020-06-18T18:24:51Z", "message": "remove transactionsSqlQuery.test.js\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296ceea4030c335831e85e18560d69aec8e56e9c", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/296ceea4030c335831e85e18560d69aec8e56e9c", "committedDate": "2020-06-18T19:16:33Z", "message": "Rename table to crypto_transfers\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjQ1ODU0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-433645854", "createdAt": "2020-06-18T21:03:53Z", "commit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTowMzo1M1rOGmAJDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTowMzo1M1rOGmAJDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwMTM4OA==", "bodyText": "Not really much point to have this method anymore", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#discussion_r442501388", "createdAt": "2020-06-18T21:03:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -304,31 +301,28 @@ private void insertCryptoCreateTransferList(\n         TransferList transferList = txRecord.getTransferList();\n         for (int i = 0; i < transferList.getAccountAmountsCount(); ++i) {\n             var aa = transferList.getAccountAmounts(i);\n-            var accountId = aa.getAccountID();\n-            entityListener.onEntityId(EntityId.of(accountId));\n-            long accountNum = accountId.getAccountNum();\n-            addCryptoTransferList(consensusTimestamp, accountId.getRealmNum(), accountNum, aa.getAmount());\n+            var account = EntityId.of(aa.getAccountID());\n+            entityListener.onEntityId(account);\n+            addCryptoTransferList(consensusTimestamp, aa.getAmount(), account);\n \n-            if (addInitialBalance && (initialBalance == aa.getAmount()) && (accountNum == createdAccountNum)) {\n+            if (addInitialBalance && (initialBalance == aa.getAmount())\n+                    && (account.getEntityNum() == createdAccountNum)) {\n                 addInitialBalance = false;\n             }\n         }\n \n         if (addInitialBalance) {\n-            AccountID payerAccountId = body.getTransactionID().getAccountID();\n-            AccountID createdAccountId = txRecord.getReceipt().getAccountID();\n-            entityListener.onEntityId(EntityId.of(payerAccountId));\n-            entityListener.onEntityId(EntityId.of(createdAccountId));\n-            addCryptoTransferList(consensusTimestamp, payerAccountId.getRealmNum(), payerAccountId\n-                    .getAccountNum(), -initialBalance);\n-            addCryptoTransferList(consensusTimestamp, createdAccountId\n-                    .getRealmNum(), createdAccountNum, initialBalance);\n+            var payerAccount = EntityId.of(body.getTransactionID().getAccountID());\n+            var createdAccount = EntityId.of(txRecord.getReceipt().getAccountID());\n+            entityListener.onEntityId(payerAccount);\n+            entityListener.onEntityId(createdAccount);\n+            addCryptoTransferList(consensusTimestamp, -initialBalance, payerAccount);\n+            addCryptoTransferList(consensusTimestamp, initialBalance, createdAccount);\n         }\n     }\n \n-    private void addCryptoTransferList(long consensusTimestamp, long realmNum, long accountNum, long amount) {\n-        entityListener\n-                .onCryptoTransfer(new CryptoTransfer(consensusTimestamp, amount, realmNum, accountNum));\n+    private void addCryptoTransferList(long consensusTimestamp, long amount, EntityId account) {\n+        entityListener.onCryptoTransfer(new CryptoTransfer(consensusTimestamp, amount, account));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjMzMDM4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-433633038", "createdAt": "2020-06-18T20:44:09Z", "commit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo0NDowOVrOGl_jMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo1ODo0M1rOGl__RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MTY5Nw==", "bodyText": "nit: remove or fix", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#discussion_r442491697", "createdAt": "2020-06-18T20:44:09Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/transactions.test.js", "diffHunk": "@@ -79,6 +79,8 @@ const validateAccNumRange = function (transactions, low, high) {\n   for (const tx of transactions) {\n     for (const xfer of tx.transfers) {\n       const accNum = xfer.account.split('.')[2];\n+      // epxect(accNum).toBeGreaterThanOrEqual(low);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5ODg4NQ==", "bodyText": "i understand the assumption of the shard=0, however i worry that means that migrations below this version must be done on shard 0. Should this migration ever occur on a future != 0 shard this'll cause incorrect data.\nI'm weighing if it's better to play it safe now and have a longer migration that do this and potentially have it fall through the cracks", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#discussion_r442498885", "createdAt": "2020-06-18T20:58:43Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.25.0__denormalize_entities.sql", "diffHunk": "@@ -104,3 +104,45 @@ alter table if exists t_entities\n \n alter table if exists t_entities\n     add primary key (id);\n+\n+-------------------\n+-- cryptotransferlists table\n+-------------------\n+\n+create table if not exists cryptotransferlists (\n+  entity_id entity_id not null,\n+  consensus_timestamp nanos_timestamp not null,\n+  amount hbar_tinybars not null\n+);\n+\n+-- Current assumption in t_cryptotransferlists is that shard = 0. Below migration builds on that assumption.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfaeb38a602b48df4552c150822c2b7e53329180"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aad8e86bf7175cf05228cff2fd65dc6026545978", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aad8e86bf7175cf05228cff2fd65dc6026545978", "committedDate": "2020-06-18T21:23:04Z", "message": "fix crypto transfers index\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dc0761bb979d0e285bf6f356788716448c4ee7f", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6dc0761bb979d0e285bf6f356788716448c4ee7f", "committedDate": "2020-06-18T21:44:44Z", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjgzMjQ3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-433683247", "createdAt": "2020-06-18T22:14:40Z", "commit": {"oid": "6dc0761bb979d0e285bf6f356788716448c4ee7f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoxNDo0MFrOGmB8_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoxNDo0MFrOGmB8_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMTA3MQ==", "bodyText": "Should still have a test that verifies the custom repository method works as expected.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#discussion_r442531071", "createdAt": "2020-06-18T22:14:40Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/repository/CryptoTransferRepositoryTest.java", "diffHunk": "@@ -1,49 +0,0 @@\n-package com.hedera.mirror.importer.repository;\n-\n-/*-\n- * \u200c\n- * Hedera Mirror Node\n- * \u200b\n- * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n- * \u200b\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- * \u200d\n- */\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import org.junit.jupiter.api.Test;\n-\n-import com.hedera.mirror.importer.domain.CryptoTransfer;\n-import com.hedera.mirror.importer.domain.Transaction;\n-\n-public class CryptoTransferRepositoryTest extends AbstractRepositoryTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc0761bb979d0e285bf6f356788716448c4ee7f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDY4Njgx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-435068681", "createdAt": "2020-06-22T16:03:56Z", "commit": {"oid": "6dc0761bb979d0e285bf6f356788716448c4ee7f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMzo1NlrOGnHU0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMzo1NlrOGnHU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NzY2NQ==", "bodyText": "Talked it over with Nana, we would both prefer crypto_transfer", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#discussion_r443667665", "createdAt": "2020-06-22T16:03:56Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.25.1__denormalize_transfer_tables.sql", "diffHunk": "@@ -0,0 +1,45 @@\n+-------------------\n+-- crypto_transfers table\n+-------------------\n+\n+create table if not exists crypto_transfers (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc0761bb979d0e285bf6f356788716448c4ee7f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "317e5e924a9625849038fbfac5cf27de7f07ca9a", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/317e5e924a9625849038fbfac5cf27de7f07ca9a", "committedDate": "2020-06-22T19:31:02Z", "message": "add crypto repo test\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "818426b302b64f8b2a50a3de1e83f777632dda77", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/818426b302b64f8b2a50a3de1e83f777632dda77", "committedDate": "2020-06-22T19:39:06Z", "message": "Rename *_transfers tables to *_transfer\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjUxNzk2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-435251796", "createdAt": "2020-06-22T20:32:03Z", "commit": {"oid": "818426b302b64f8b2a50a3de1e83f777632dda77"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjUzNzQz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/834#pullrequestreview-435253743", "createdAt": "2020-06-22T20:35:03Z", "commit": {"oid": "818426b302b64f8b2a50a3de1e83f777632dda77"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3202, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}