{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NjE3ODUz", "number": 1163, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0ODozMVrOEwWFAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo1MTo1MlrOEwWKlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTI4ODMyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0ODozMVrOHl19BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNzozMToyN1rOHl4M1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0MzMzMw==", "bodyText": "It might be better to define this once in AccountBalance via a @NamedEntityGraph then reference it here. That way if we add more fields it's defined in one spot.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1163#discussion_r509443333", "createdAt": "2020-10-21T16:48:31Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "diffHunk": "@@ -21,11 +21,17 @@\n  */\n \n import java.util.List;\n+import org.springframework.data.jpa.repository.EntityGraph;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AccountBalance;\n \n public interface AccountBalanceRepository extends CrudRepository<AccountBalance, AccountBalance.Id> {\n \n+    @Override\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d3a3b0a751b8540a66e8e06228517e2c494120"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ4MDE0OA==", "bodyText": "sure will make the change", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1163#discussion_r509480148", "createdAt": "2020-10-21T17:31:27Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "diffHunk": "@@ -21,11 +21,17 @@\n  */\n \n import java.util.List;\n+import org.springframework.data.jpa.repository.EntityGraph;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AccountBalance;\n \n public interface AccountBalanceRepository extends CrudRepository<AccountBalance, AccountBalance.Id> {\n \n+    @Override\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0MzMzMw=="}, "originalCommit": {"oid": "26d3a3b0a751b8540a66e8e06228517e2c494120"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTMwMjYwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo1MTo1MlrOHl2F1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo0NDowNFrOHmEbBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NTU5MQ==", "bodyText": "We should probably remove the fetch parameter in the @OneToMany so it defaults back to lazy so it's clear we're relying on the repository to eagerly fetch and not the annotation in the domain.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1163#discussion_r509445591", "createdAt": "2020-10-21T16:51:52Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "diffHunk": "@@ -21,11 +21,17 @@\n  */\n \n import java.util.List;\n+import org.springframework.data.jpa.repository.EntityGraph;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AccountBalance;\n \n public interface AccountBalanceRepository extends CrudRepository<AccountBalance, AccountBalance.Id> {\n \n+    @Override\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})\n+    List<AccountBalance> findAll();\n+\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d3a3b0a751b8540a66e8e06228517e2c494120"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY4MDM4OQ==", "bodyText": "removed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1163#discussion_r509680389", "createdAt": "2020-10-21T20:44:04Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/repository/AccountBalanceRepository.java", "diffHunk": "@@ -21,11 +21,17 @@\n  */\n \n import java.util.List;\n+import org.springframework.data.jpa.repository.EntityGraph;\n import org.springframework.data.repository.CrudRepository;\n \n import com.hedera.mirror.importer.domain.AccountBalance;\n \n public interface AccountBalanceRepository extends CrudRepository<AccountBalance, AccountBalance.Id> {\n \n+    @Override\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})\n+    List<AccountBalance> findAll();\n+\n+    @EntityGraph(attributePaths = {\"tokenBalances\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NTU5MQ=="}, "originalCommit": {"oid": "26d3a3b0a751b8540a66e8e06228517e2c494120"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1575, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}