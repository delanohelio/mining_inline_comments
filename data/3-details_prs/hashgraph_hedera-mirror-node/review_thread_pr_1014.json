{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjgxODQw", "number": 1014, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToxMDoyMFrOEhYSKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0MDo1NFrOEhyXEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDM2MzI4OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-importer/values.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToxMDoyMFrOHOqeqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDo0OFrOHP8c9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzODA4OA==", "bodyText": "The problem here is the probes don't start until Flway migrations complete. So if a migration takes longer than a minute or so the importer will repeatedly crash and never startup. Have to revert this unless you can figure out how to make probes start earlier than Flyway.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485138088", "createdAt": "2020-09-08T19:10:20Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -31,13 +31,13 @@ imagePullSecrets: []\n \n labels: {}\n \n-livenessProbe: null\n-#  httpGet:\n-#    path: /actuator/health\n-#    port: http\n-#  initialDelaySeconds: 60\n-#  periodSeconds: 30\n-#  timeoutSeconds: 2\n+livenessProbe:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA1MjczNw==", "bodyText": "The most common suggestion I've seen to get around this is to move the flyway migration into a separate Kubernetes job, though that may cause its own problems.\nThe other option I'm exploring is try to override the beans in the config, similar to what I've seen here.  It's a little hackey but it may do the trick.  It seems otherwise Spring Boot is pretty insistent on running the flyway migrations right off the bat.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r486052737", "createdAt": "2020-09-10T04:17:00Z", "author": {"login": "ijungmann"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -31,13 +31,13 @@ imagePullSecrets: []\n \n labels: {}\n \n-livenessProbe: null\n-#  httpGet:\n-#    path: /actuator/health\n-#    port: http\n-#  initialDelaySeconds: 60\n-#  periodSeconds: 30\n-#  timeoutSeconds: 2\n+livenessProbe:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzODA4OA=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MTE0MA==", "bodyText": "Let's time box this to if you can't figure out anything by scrum, then we revert to how it was.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r486481140", "createdAt": "2020-09-10T16:34:48Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -31,13 +31,13 @@ imagePullSecrets: []\n \n labels: {}\n \n-livenessProbe: null\n-#  httpGet:\n-#    path: /actuator/health\n-#    port: http\n-#  initialDelaySeconds: 60\n-#  periodSeconds: 30\n-#  timeoutSeconds: 2\n+livenessProbe:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzODA4OA=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDM5Mjg1OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/values.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToxOToyMlrOHOqwdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0Mjo1OVrOHPTC8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MjY0Ng==", "bodyText": "We can probably lower the initialDelaySeconds now that it doesn't have to wait for the db to start. Try starting it locally and seeing how long it takes for that endpoint to return 200.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485142646", "createdAt": "2020-09-08T19:19:22Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -60,7 +60,7 @@ labels: {}\n \n livenessProbe:\n   httpGet:\n-    path: /actuator/health\n+    path: /actuator/health/liveness\n     port: http\n   initialDelaySeconds: 45", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4NzA4NQ==", "bodyText": "Yeah, seems like it's taking around 10 seconds to get going, I think I'll knock it down to 15 seconds.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485787085", "createdAt": "2020-09-09T17:15:35Z", "author": {"login": "ijungmann"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -60,7 +60,7 @@ labels: {}\n \n livenessProbe:\n   httpGet:\n-    path: /actuator/health\n+    path: /actuator/health/liveness\n     port: http\n   initialDelaySeconds: 45", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MjY0Ng=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwMjczOQ==", "bodyText": "Ran it a few times with different delays, the best I could consistently get is 35 seconds, but still knocked 10 seconds off", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485802739", "createdAt": "2020-09-09T17:42:59Z", "author": {"login": "ijungmann"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -60,7 +60,7 @@ labels: {}\n \n livenessProbe:\n   httpGet:\n-    path: /actuator/health\n+    path: /actuator/health/liveness\n     port: http\n   initialDelaySeconds: 45", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MjY0Ng=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDM5NzE2OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/values.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyMDozNVrOHOqzGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0MzozNlrOHPTEKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MzMyMA==", "bodyText": "We can probably lower the periodSeconds now that we are less likely to crash repeatedly on startup if db is down. Maybe 10s or so", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485143320", "createdAt": "2020-09-08T19:20:35Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -60,7 +60,7 @@ labels: {}\n \n livenessProbe:\n   httpGet:\n-    path: /actuator/health\n+    path: /actuator/health/liveness\n     port: http\n   initialDelaySeconds: 45\n   periodSeconds: 30", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwMzA0OA==", "bodyText": "Pulled down to 10s", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485803048", "createdAt": "2020-09-09T17:43:36Z", "author": {"login": "ijungmann"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -60,7 +60,7 @@ labels: {}\n \n livenessProbe:\n   httpGet:\n-    path: /actuator/health\n+    path: /actuator/health/liveness\n     port: http\n   initialDelaySeconds: 45\n   periodSeconds: 30", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MzMyMA=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQwMDA1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/src/main/resources/application.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyMToyMVrOHOq0ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0NDowNlrOHPTFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MzczOA==", "bodyText": "Should probably be a little higher like 30-45s", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485143738", "createdAt": "2020-09-08T19:21:21Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/resources/application.yml", "diffHunk": "@@ -64,6 +72,8 @@ spring:\n       hibernate.criteria.literal_handling_mode: BIND # Ensure Criteria API queries use bind parameters and not literals\n       hibernate.generate_statistics: true\n       hibernate.hbm2ddl.auto: none\n+  lifecycle:\n+    timeout-per-shutdown-phase: 20s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwMzMwMw==", "bodyText": "Changed to 40s", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485803303", "createdAt": "2020-09-09T17:44:06Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-grpc/src/main/resources/application.yml", "diffHunk": "@@ -64,6 +72,8 @@ spring:\n       hibernate.criteria.literal_handling_mode: BIND # Ensure Criteria API queries use bind parameters and not literals\n       hibernate.generate_statistics: true\n       hibernate.hbm2ddl.auto: none\n+  lifecycle:\n+    timeout-per-shutdown-phase: 20s", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MzczOA=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQ1OTE0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/health.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTozOTowOFrOHOrYBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo1NjowOVrOHPOKdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1Mjc3NA==", "bodyText": "This should be configurable", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485152774", "createdAt": "2020-09-08T19:39:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/health.js", "diffHunk": "@@ -0,0 +1,59 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactions = require('./transactions.js');\n+\n+/**\n+ * Function to determine readiness of application.\n+ * @return {} None.\n+ */\n+const readinessCheck = async () => {\n+  return transactions.getOneTransactionForHealthCheck();\n+};\n+\n+/**\n+ * Function to determine liveness of application.\n+ * @return {} None.\n+ */\n+const livenessCheck = async () => {\n+  return;\n+};\n+\n+/**\n+ * Allows for a graceful shutdown.\n+ * @return {} None.\n+ */\n+\n+function beforeDown() {\n+  // given your readiness probes run every 5 second\n+  // may be worth using a bigger number so you won't\n+  // run into any race conditions\n+  console.log('Test of system');\n+  return new Promise((resolve) => {\n+    setTimeout(resolve, 20000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMjc0MA==", "bodyText": "Fixed to be configurable.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485722740", "createdAt": "2020-09-09T15:56:09Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/health.js", "diffHunk": "@@ -0,0 +1,59 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactions = require('./transactions.js');\n+\n+/**\n+ * Function to determine readiness of application.\n+ * @return {} None.\n+ */\n+const readinessCheck = async () => {\n+  return transactions.getOneTransactionForHealthCheck();\n+};\n+\n+/**\n+ * Function to determine liveness of application.\n+ * @return {} None.\n+ */\n+const livenessCheck = async () => {\n+  return;\n+};\n+\n+/**\n+ * Allows for a graceful shutdown.\n+ * @return {} None.\n+ */\n+\n+function beforeDown() {\n+  // given your readiness probes run every 5 second\n+  // may be worth using a bigger number so you won't\n+  // run into any race conditions\n+  console.log('Test of system');\n+  return new Promise((resolve) => {\n+    setTimeout(resolve, 20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1Mjc3NA=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQ4MTYwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/transactions.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTo0NTozN1rOHOrlJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo1Njo0OFrOHPOMOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1NjEzMw==", "bodyText": "I don't think we need to join from 3 tables for a health check or hit a larger table like transaction. Also, would be better to encapsulate the health check query in health.js. Recommend doing a select true from t_entity_types limit 1; inside health.js and verify return value is 1.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485156133", "createdAt": "2020-09-08T19:45:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -254,11 +254,40 @@ const getOneTransaction = async (req, res) => {\n     });\n };\n \n+/**\n+ * Function to support readiness check for Terminus, finds one transaction.\n+ * @return {} None.\n+ */\n+const getOneTransactionForHealthCheck = function () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMzE5Mg==", "bodyText": "Makes sense, that seemed excessive at the time.  Swapped to your query and stuck it in health.js", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485723192", "createdAt": "2020-09-09T15:56:48Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -254,11 +254,40 @@ const getOneTransaction = async (req, res) => {\n     });\n };\n \n+/**\n+ * Function to support readiness check for Terminus, finds one transaction.\n+ * @return {} None.\n+ */\n+const getOneTransactionForHealthCheck = function () {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1NjEzMw=="}, "originalCommit": {"oid": "734d5d89fa0193d917a99e4946ab1a6f4f81f21d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODYzNTY5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/config/application.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0MDo1NFrOHPS-Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1NDowNlrOHP9K3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwMTU3MA==", "bodyText": "Add to docs", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r485801570", "createdAt": "2020-09-09T17:40:54Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/config/application.yml", "diffHunk": "@@ -32,3 +32,5 @@ hedera:\n           accessKey:\n           secretKey:\n           bucketName:\n+      shutdown:\n+        timeout: 20000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d346225f4480e817b07d233615a8fa49ac00682"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Mjg5Mg==", "bodyText": "Added", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1014#discussion_r486492892", "createdAt": "2020-09-10T16:54:06Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/config/application.yml", "diffHunk": "@@ -32,3 +32,5 @@ hedera:\n           accessKey:\n           secretKey:\n           bucketName:\n+      shutdown:\n+        timeout: 20000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwMTU3MA=="}, "originalCommit": {"oid": "6d346225f4480e817b07d233615a8fa49ac00682"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1617, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}