{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTg1MTEw", "number": 857, "title": "Add download latency metrics", "bodyText": "Detailed description:\n\nAdd hedera.mirror.download.latency metric to track consensus to download/verification latency\nAdd hedera.mirror.stream.close.latency metric to track time to close record file\nChange frequency of polling the filesystem for record files from 500ms to 100ms to reduce overall latency\nChange hedera.mirror.topicmessage.latency to hedera.mirror.publish.latency with a tag to indicate type of entity being published. This\nChange hedera.mirror.signature.verification to hedera.mirror.download.signature.verification\nChange hedera.mirror.stream.verification to hedera.mirror.download.stream.verification\nRemove dead code parsing a signature from the record file after confirming signatures are not present in that file\n\nWhich issue(s) this PR fixes:\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-07-09T02:52:12Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857", "merged": true, "mergeCommit": {"oid": "3db4917e6f53ef4ee7d5b63fa4658ec9a5409197"}, "closed": true, "closedAt": "2020-07-09T15:43:36Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczF7_KAH2gAyNDQ2NTg1MTEwOmRkYjIyNjllNTU3YmVmYTlkNjc0NzU3MjE1ZjAzYWZiMDA4MjFhOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczQ3CagFqTQ0NTczNDcxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ddb2269e557befa9d674757215f03afb00821a9f", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ddb2269e557befa9d674757215f03afb00821a9f", "committedDate": "2020-07-09T02:51:16Z", "message": "Add download latency metrics\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjU5MzAy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857#pullrequestreview-445259302", "createdAt": "2020-07-09T03:04:07Z", "commit": {"oid": "ddb2269e557befa9d674757215f03afb00821a9f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzowNDowN1rOGvAENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoxMTozOVrOGvALbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNzMzNA==", "bodyText": "q: Wouldn't this time always be smaller than the timing for the 1st transaction?\nThe 1st transaction would wait longer than the rest to be downloaded and verified.\nIn that case shouldn't we go with the 1st transaction so we always get a sense of the worst case scenario and future efforts will look to get that latency down?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857#discussion_r451937334", "createdAt": "2020-07-09T03:04:07Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/downloader/Downloader.java", "diffHunk": "@@ -96,13 +97,19 @@ public Downloader(S3AsyncClient s3Client, ApplicationStatusRepository applicatio\n         signatureDownloadThreadPool = Executors.newFixedThreadPool(downloaderProperties.getThreads());\n         Runtime.getRuntime().addShutdownHook(new Thread(signatureDownloadThreadPool::shutdown));\n \n-        signatureVerificationMetric = Counter.builder(\"hedera.mirror.signature.verification\")\n+        signatureVerificationMetric = Counter.builder(\"hedera.mirror.download.signature.verification\")\n                 .description(\"The number of signatures verified from a particular node\")\n                 .tag(\"type\", downloaderProperties.getStreamType().toString());\n \n-        streamVerificationMetric = Timer.builder(\"hedera.mirror.stream.verification\")\n+        streamVerificationMetric = Timer.builder(\"hedera.mirror.download.stream.verification\")\n                 .description(\"The duration in seconds it took to verify consensus and hash chain of a stream file\")\n                 .tag(\"type\", downloaderProperties.getStreamType().toString());\n+\n+        downloadLatencyMetric = Timer.builder(\"hedera.mirror.download.latency\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb2269e557befa9d674757215f03afb00821a9f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNzg3OA==", "bodyText": "Same thought as above. Wouldn't the 1st transaction and therefore recordFile.getConsensusStart be better?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857#discussion_r451937878", "createdAt": "2020-07-09T03:06:02Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/downloader/record/RecordFileDownloader.java", "diffHunk": "@@ -78,6 +80,9 @@ protected boolean verifyDataFile(File file, byte[] verifiedHash) {\n             if (!recordFile.getFileHash().contentEquals(Hex.encodeHexString(verifiedHash))) {\n                 return false;\n             }\n+\n+            Instant consensusEnd = Instant.ofEpochSecond(0, recordFile.getConsensusEnd());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb2269e557befa9d674757215f03afb00821a9f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzOTE4MA==", "bodyText": "I pondered this back when I was adding hedera.mirror.parse.delay but wasn't sure. Is we switch to 1st transaction that should also be updated.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857#discussion_r451939180", "createdAt": "2020-07-09T03:11:39Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/downloader/record/RecordFileDownloader.java", "diffHunk": "@@ -78,6 +80,9 @@ protected boolean verifyDataFile(File file, byte[] verifiedHash) {\n             if (!recordFile.getFileHash().contentEquals(Hex.encodeHexString(verifiedHash))) {\n                 return false;\n             }\n+\n+            Instant consensusEnd = Instant.ofEpochSecond(0, recordFile.getConsensusEnd());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNzg3OA=="}, "originalCommit": {"oid": "ddb2269e557befa9d674757215f03afb00821a9f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89841137827817cc7bf19e2024a26e86ccc1fcdb", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/89841137827817cc7bf19e2024a26e86ccc1fcdb", "committedDate": "2020-07-09T15:09:22Z", "message": "Add hedera.mirror.stream.close.latency metric\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NzM0NzE5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/857#pullrequestreview-445734719", "createdAt": "2020-07-09T15:34:49Z", "commit": {"oid": "89841137827817cc7bf19e2024a26e86ccc1fcdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4065, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}