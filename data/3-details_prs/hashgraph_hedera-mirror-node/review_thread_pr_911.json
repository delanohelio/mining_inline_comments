{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTM4NDc1", "number": 911, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzowODo1N1rOES6DaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzoyNDozNVrOES6a1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjYwOTY5OnYy", "diffSide": "RIGHT", "path": "docs/configuration.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzowODo1N1rOG4WSXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozMzo0MVrOG4ZYFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczODU5MA==", "bodyText": "nit: 65536 seems random. Add to the configuration comment to hint it's value.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/911#discussion_r461738590", "createdAt": "2020-07-28T17:08:57Z", "author": {"login": "Nana-EC"}, "path": "docs/configuration.md", "diffHunk": "@@ -78,9 +78,9 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.importer.parser.record.entity.persist.nonFeeTransfers`       | false                   | Persist non-fee transfers for transactions that explicitly request hbar transfers              |\n | `hedera.mirror.importer.parser.record.entity.persist.systemFiles`           | true                    | Persist only system files (number lower than `1000`) to the database                           |\n | `hedera.mirror.importer.parser.record.entity.persist.transactionBytes`      | false                   | Persist raw transaction bytes to the database                                                  |\n-| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 100_000_000             | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 20_000                  | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.bufferSize`                | 65536                   | The size of the byte buffer to allocate for each batch                                         |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def085c18ca180a3d6649ffc8f6ee4e4904e5f53"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MjM2Ng==", "bodyText": "It's not random, it's the value in CopyManager.DEFAULT_BUFFER_SIZE and equal to 2^16", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/911#discussion_r461762366", "createdAt": "2020-07-28T17:48:02Z", "author": {"login": "steven-sheehy"}, "path": "docs/configuration.md", "diffHunk": "@@ -78,9 +78,9 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.importer.parser.record.entity.persist.nonFeeTransfers`       | false                   | Persist non-fee transfers for transactions that explicitly request hbar transfers              |\n | `hedera.mirror.importer.parser.record.entity.persist.systemFiles`           | true                    | Persist only system files (number lower than `1000`) to the database                           |\n | `hedera.mirror.importer.parser.record.entity.persist.transactionBytes`      | false                   | Persist raw transaction bytes to the database                                                  |\n-| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 100_000_000             | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 20_000                  | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.bufferSize`                | 65536                   | The size of the byte buffer to allocate for each batch                                         |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczODU5MA=="}, "originalCommit": {"oid": "def085c18ca180a3d6649ffc8f6ee4e4904e5f53"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4OTIwNA==", "bodyText": "Sounds good. Mentioning exactly that is useful but not required right now. Ship it", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/911#discussion_r461789204", "createdAt": "2020-07-28T18:33:41Z", "author": {"login": "Nana-EC"}, "path": "docs/configuration.md", "diffHunk": "@@ -78,9 +78,9 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.importer.parser.record.entity.persist.nonFeeTransfers`       | false                   | Persist non-fee transfers for transactions that explicitly request hbar transfers              |\n | `hedera.mirror.importer.parser.record.entity.persist.systemFiles`           | true                    | Persist only system files (number lower than `1000`) to the database                           |\n | `hedera.mirror.importer.parser.record.entity.persist.transactionBytes`      | false                   | Persist raw transaction bytes to the database                                                  |\n-| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 100_000_000             | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.batchSize`                 | 20_000                  | When inserting transactions into db, executeBatches() is called every these many transactions  |\n+| `hedera.mirror.importer.parser.record.entity.sql.bufferSize`                | 65536                   | The size of the byte buffer to allocate for each batch                                         |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczODU5MA=="}, "originalCommit": {"oid": "def085c18ca180a3d6649ffc8f6ee4e4904e5f53"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjY2OTY0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzoyNDozNVrOG4W3aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo0OTozOVrOG4XzKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0ODA3NQ==", "bodyText": "q: Probably outside of the scope of this PR but should this check be here. Would it be better in RecordFileParser before onStart is called?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/911#discussion_r461748075", "createdAt": "2020-07-28T17:24:35Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -148,17 +120,27 @@ public void onStart(StreamFileData streamFileData) {\n         liveHashes = new ArrayList<>();\n         entityIds = new HashSet<>();\n         topicMessages = new ArrayList<>();\n-        batchCount = 0;\n+    }\n+\n+    @Override\n+    public void onStart(StreamFileData streamFileData) {\n+        String fileName = FilenameUtils.getName(streamFileData.getFilename());\n+\n+        if (recordFileRepository.findByName(fileName).size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def085c18ca180a3d6649ffc8f6ee4e4904e5f53"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MzM2OQ==", "bodyText": "No, since currently it is the responsibility of SqlEntityListener to save the record file on end it should also have to responsibility of verying it on start.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/911#discussion_r461763369", "createdAt": "2020-07-28T17:49:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -148,17 +120,27 @@ public void onStart(StreamFileData streamFileData) {\n         liveHashes = new ArrayList<>();\n         entityIds = new HashSet<>();\n         topicMessages = new ArrayList<>();\n-        batchCount = 0;\n+    }\n+\n+    @Override\n+    public void onStart(StreamFileData streamFileData) {\n+        String fileName = FilenameUtils.getName(streamFileData.getFilename());\n+\n+        if (recordFileRepository.findByName(fileName).size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0ODA3NQ=="}, "originalCommit": {"oid": "def085c18ca180a3d6649ffc8f6ee4e4904e5f53"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 920, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}