{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTgzODc5", "number": 576, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNjozNTo1NVrODkVjcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNjozNTo1NVrODkVjcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDI4NDY0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNjozNTo1NVrOFwmf4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODowNTo0OFrOFwpmXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUwNjcyMA==", "bodyText": "beyond the if statement it looks like insertFileCreate() and insertFileAppend() have some common code that could be shared.\nConsider consolidating it if it makes sense", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/576#discussion_r386506720", "createdAt": "2020-03-02T16:35:55Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileLogger.java", "diffHunk": "@@ -748,39 +729,33 @@ private static EntityId storeConsensusSubmitMessage(TransactionBody body,\n     }\n \n     private static void insertConsensusTopicMessage(ConsensusSubmitMessageTransactionBody transactionBody,\n-                                                    TransactionRecord transactionRecord) throws SQLException {\n+                                                    TransactionRecord transactionRecord) {\n         var receipt = transactionRecord.getReceipt();\n-        var ts = transactionRecord.getConsensusTimestamp();\n         var topicId = transactionBody.getTopicID();\n-        sqlInsertTopicMessage.setLong(1, Utility.timeStampInNanos(ts));\n-        sqlInsertTopicMessage.setShort(2, (short) topicId.getRealmNum());\n-        sqlInsertTopicMessage.setInt(3, (int) topicId.getTopicNum());\n-        sqlInsertTopicMessage.setBytes(4, transactionBody.getMessage().toByteArray());\n-        sqlInsertTopicMessage.setBytes(5, receipt.getTopicRunningHash().toByteArray());\n-        sqlInsertTopicMessage.setLong(6, receipt.getTopicSequenceNumber());\n-        sqlInsertTopicMessage.addBatch();\n+        TopicMessage topicMessage = new TopicMessage(\n+                Utility.timeStampInNanos(transactionRecord.getConsensusTimestamp()),\n+                transactionBody.getMessage().toByteArray(), (int) topicId.getRealmNum(),\n+                receipt.getTopicRunningHash().toByteArray(), receipt.getTopicSequenceNumber(),\n+                (int) topicId.getTopicNum());\n+        postgresWriter.onTopicMessage(topicMessage);\n     }\n \n     private static void insertFileCreate(long consensusTimestamp, FileCreateTransactionBody transactionBody,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb953ab499776bcd1a0bd2c446e2060cbc49350"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzNA==", "bodyText": "sure thing. will do in PW3.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/576#discussion_r386557534", "createdAt": "2020-03-02T18:05:48Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileLogger.java", "diffHunk": "@@ -748,39 +729,33 @@ private static EntityId storeConsensusSubmitMessage(TransactionBody body,\n     }\n \n     private static void insertConsensusTopicMessage(ConsensusSubmitMessageTransactionBody transactionBody,\n-                                                    TransactionRecord transactionRecord) throws SQLException {\n+                                                    TransactionRecord transactionRecord) {\n         var receipt = transactionRecord.getReceipt();\n-        var ts = transactionRecord.getConsensusTimestamp();\n         var topicId = transactionBody.getTopicID();\n-        sqlInsertTopicMessage.setLong(1, Utility.timeStampInNanos(ts));\n-        sqlInsertTopicMessage.setShort(2, (short) topicId.getRealmNum());\n-        sqlInsertTopicMessage.setInt(3, (int) topicId.getTopicNum());\n-        sqlInsertTopicMessage.setBytes(4, transactionBody.getMessage().toByteArray());\n-        sqlInsertTopicMessage.setBytes(5, receipt.getTopicRunningHash().toByteArray());\n-        sqlInsertTopicMessage.setLong(6, receipt.getTopicSequenceNumber());\n-        sqlInsertTopicMessage.addBatch();\n+        TopicMessage topicMessage = new TopicMessage(\n+                Utility.timeStampInNanos(transactionRecord.getConsensusTimestamp()),\n+                transactionBody.getMessage().toByteArray(), (int) topicId.getRealmNum(),\n+                receipt.getTopicRunningHash().toByteArray(), receipt.getTopicSequenceNumber(),\n+                (int) topicId.getTopicNum());\n+        postgresWriter.onTopicMessage(topicMessage);\n     }\n \n     private static void insertFileCreate(long consensusTimestamp, FileCreateTransactionBody transactionBody,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUwNjcyMA=="}, "originalCommit": {"oid": "ddb953ab499776bcd1a0bd2c446e2060cbc49350"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}