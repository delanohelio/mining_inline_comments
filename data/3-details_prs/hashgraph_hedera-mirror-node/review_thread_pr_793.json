{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0ODY5MzM5", "number": 793, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowNjo1MFrOEA7dYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoxNjozN1rOEA_c-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDA5NjMzOnYy", "diffSide": "RIGHT", "path": "docs/configuration.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowNjo1MFrOGcgvdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowNjo1MFrOGcgvdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTc1MA==", "bodyText": "Need to remove LOCAL", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/793#discussion_r432549750", "createdAt": "2020-05-29T15:06:50Z", "author": {"login": "steven-sheehy"}, "path": "docs/configuration.md", "diffHunk": "@@ -39,6 +39,8 @@ value, it is recommended to only populate overridden properties in the custom `a\n | `hedera.mirror.importer.downloader.balance.threads`                  | 13                      | The number of threads to search for new files to download                                      |\n | `hedera.mirror.importer.downloader.bucketName`                       | \"hedera-demo-streams\"   | The cloud storage bucket name to download streamed files                                       |\n | `hedera.mirror.importer.downloader.cloudProvider`                    | S3                      | The cloud provider to download files from. Either `S3`, `GCP` or `LOCAL`                       |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402ff94a84ec73819529ebb95b6de7e81c7679c3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDc1MDY0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorImporterConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoxNjozN1rOGcnSwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoyNDoxMlrOGcnjKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzA4OA==", "bodyText": "q: should the region be parametized, with the above as default of course.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/793#discussion_r432657088", "createdAt": "2020-05-29T18:16:37Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorImporterConfiguration.java", "diffHunk": "@@ -67,47 +71,63 @@ LeaderAspect leaderAspect() {\n     }\n \n     @Bean\n-    public S3AsyncClient s3AsyncClient(ExecutionInterceptor metricsExecutionInterceptor) {\n+    @ConditionalOnProperty(prefix = \"hedera.mirror.importer.downloader\", name = \"cloudProvider\", havingValue = \"GCP\")\n+    public S3AsyncClient gcpCloudStorageClient() {\n+        log.info(\"Configured to download from GCP with bucket name '{}'\", downloaderProperties.getBucketName());\n+        // Any valid region for aws client. Ignored by GCP.\n+        S3AsyncClientBuilder clientBuilder = asyncClientBuilder(\"us-east-1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402ff94a84ec73819529ebb95b6de7e81c7679c3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MTI4OA==", "bodyText": "this is just dummy value since aws sdk needs a non-null value. its ignored by gcp.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/793#discussion_r432661288", "createdAt": "2020-05-29T18:24:12Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorImporterConfiguration.java", "diffHunk": "@@ -67,47 +71,63 @@ LeaderAspect leaderAspect() {\n     }\n \n     @Bean\n-    public S3AsyncClient s3AsyncClient(ExecutionInterceptor metricsExecutionInterceptor) {\n+    @ConditionalOnProperty(prefix = \"hedera.mirror.importer.downloader\", name = \"cloudProvider\", havingValue = \"GCP\")\n+    public S3AsyncClient gcpCloudStorageClient() {\n+        log.info(\"Configured to download from GCP with bucket name '{}'\", downloaderProperties.getBucketName());\n+        // Any valid region for aws client. Ignored by GCP.\n+        S3AsyncClientBuilder clientBuilder = asyncClientBuilder(\"us-east-1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzA4OA=="}, "originalCommit": {"oid": "402ff94a84ec73819529ebb95b6de7e81c7679c3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1066, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}