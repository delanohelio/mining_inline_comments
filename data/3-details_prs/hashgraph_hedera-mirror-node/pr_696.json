{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjAyMjEy", "number": 696, "title": "Address book fix", "bodyText": "Detailed description:\nFix address book updates to:\n\nNot write to in memory objects as they are stateful and we may lose data if restarted before it's complete\nUse an addressbook.bin.tmp to store address books that don't fit in a single file update and don't parse\nOverwrite addressbook.bin if file update parses\nOverwrite addressbook.bin if contents of tmp file plus file append contents parse\nOtherwise append to addressbook.bin.tmp if file append and it exists\nDelete tmp whenever addressbook.bin written\n\nWhich issue(s) this PR fixes:\nFixes #58\nFixes #695\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-04-20T17:35:16Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696", "merged": true, "mergeCommit": {"oid": "380ad9ec7bc08c8f65ac217dc0f8c1a61abfa602"}, "closed": true, "closedAt": "2020-04-20T19:38:59Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZixOuAFqTM5NjY3NDA2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZj5rcAFqTM5NjczMTcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Njc0MDY2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#pullrequestreview-396674066", "createdAt": "2020-04-20T17:43:19Z", "commit": {"oid": "f36472b8a85379c813a7de96d154ea3fab3e4f83"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo0MzoxOVrOGIgK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo0MzoxOVrOGIgK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2ODg5MQ==", "bodyText": "I don't think this method has test coverage.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#discussion_r411568891", "createdAt": "2020-04-20T17:43:19Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/NetworkAddressBook.java", "diffHunk": "@@ -72,45 +72,58 @@ private void init() {\n     }\n \n     public void update(byte[] newContents) throws IOException {\n-        addressBookBytes = newContents;\n-        saveToDisk();\n+        saveToDisk(newContents, StandardOpenOption.TRUNCATE_EXISTING);\n     }\n \n     public void append(byte[] extraContents) throws IOException {\n-        byte[] newAddressBook = Arrays.copyOf(addressBookBytes, addressBookBytes.length + extraContents.length);\n-        System.arraycopy(extraContents, 0, newAddressBook, addressBookBytes.length, extraContents.length);\n-        addressBookBytes = newAddressBook;\n-        saveToDisk();\n+        saveToDisk(extraContents, StandardOpenOption.APPEND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36472b8a85379c813a7de96d154ea3fab3e4f83"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Njg1Mzk2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#pullrequestreview-396685396", "createdAt": "2020-04-20T17:58:31Z", "commit": {"oid": "f36472b8a85379c813a7de96d154ea3fab3e4f83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1ODozMVrOGIgy9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1ODozMVrOGIgy9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3OTEyNQ==", "bodyText": "Since NetworkAddressBook \"owns\" underlying file, it doesn't need a disk IO every time Downloader needs list of nodes.\nWe can store Collection<NodeAddress> in local variable, initializing it in init() and updating it in saveToDisk in if (!nodeAddresses.isEmpty()) { condition", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#discussion_r411579125", "createdAt": "2020-04-20T17:58:31Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/addressbook/NetworkAddressBook.java", "diffHunk": "@@ -72,45 +72,58 @@ private void init() {\n     }\n \n     public void update(byte[] newContents) throws IOException {\n-        addressBookBytes = newContents;\n-        saveToDisk();\n+        saveToDisk(newContents, StandardOpenOption.TRUNCATE_EXISTING);\n     }\n \n     public void append(byte[] extraContents) throws IOException {\n-        byte[] newAddressBook = Arrays.copyOf(addressBookBytes, addressBookBytes.length + extraContents.length);\n-        System.arraycopy(extraContents, 0, newAddressBook, addressBookBytes.length, extraContents.length);\n-        addressBookBytes = newAddressBook;\n-        saveToDisk();\n+        saveToDisk(extraContents, StandardOpenOption.APPEND);\n     }\n \n-    private void saveToDisk() throws IOException {\n+    private void saveToDisk(byte[] contents, OpenOption openOption) throws IOException {\n         Path path = mirrorProperties.getAddressBookPath();\n-        Files.write(path, addressBookBytes);\n-        log.info(\"New address book successfully saved to {}\", path);\n+        Path tempPath = path.resolveSibling(path.getFileName() + \".tmp\");\n+        Files.write(tempPath, contents, StandardOpenOption.CREATE, StandardOpenOption.WRITE, openOption);\n+        log.info(\"Saved temporary address book to {}\", tempPath);\n+\n+        try {\n+            Collection<NodeAddress> nodeAddresses = parse(tempPath);\n+            if (!nodeAddresses.isEmpty()) {\n+                Files.move(tempPath, path, StandardCopyOption.REPLACE_EXISTING);\n+                log.info(\"New address book successfully parsed and saved to {}\", path);\n+            }\n+        } catch (Exception e) {\n+            // Ignore partial update errors\n+        }\n     }\n \n-    public Collection<NodeAddress> load() {\n+    private Collection<NodeAddress> parse(Path path) throws Exception {\n+        byte[] addressBookBytes = Files.readAllBytes(path);\n+        NodeAddressBook nodeAddressBook = NodeAddressBook.parseFrom(addressBookBytes);\n         ImmutableList.Builder<NodeAddress> builder = ImmutableList.builder();\n+\n+        for (com.hederahashgraph.api.proto.java.NodeAddress nodeAddressProto : nodeAddressBook\n+                .getNodeAddressList()) {\n+            NodeAddress nodeAddress = NodeAddress.builder()\n+                    .id(nodeAddressProto.getMemo().toStringUtf8())\n+                    .ip(nodeAddressProto.getIpAddress().toStringUtf8())\n+                    .port(nodeAddressProto.getPortno())\n+                    .publicKey(nodeAddressProto.getRSAPubKey())\n+                    .build();\n+            builder.add(nodeAddress);\n+        }\n+\n+        return builder.build();\n+    }\n+\n+    public Collection<NodeAddress> load() {\n         Path path = mirrorProperties.getAddressBookPath();\n \n         try {\n-            byte[] addressBookBytes = Files.readAllBytes(path);\n-            NodeAddressBook nodeAddressBook = NodeAddressBook.parseFrom(addressBookBytes);\n-\n-            for (com.hederahashgraph.api.proto.java.NodeAddress nodeAddressProto : nodeAddressBook\n-                    .getNodeAddressList()) {\n-                NodeAddress nodeAddress = NodeAddress.builder()\n-                        .id(nodeAddressProto.getMemo().toStringUtf8())\n-                        .ip(nodeAddressProto.getIpAddress().toStringUtf8())\n-                        .port(nodeAddressProto.getPortno())\n-                        .publicKey(nodeAddressProto.getRSAPubKey())\n-                        .build();\n-                builder.add(nodeAddress);\n-            }\n+            return parse(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36472b8a85379c813a7de96d154ea3fab3e4f83"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d703191c5641a2643fd0caed3c93df2fe4ac62b1", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d703191c5641a2643fd0caed3c93df2fe4ac62b1", "committedDate": "2020-04-20T17:58:58Z", "message": "Fix address book updates\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e0552c60a5d984daabc5f92b6dfe7ad9345ad0", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/13e0552c60a5d984daabc5f92b6dfe7ad9345ad0", "committedDate": "2020-04-20T17:59:01Z", "message": "Update versions to 0.9.1\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f36472b8a85379c813a7de96d154ea3fab3e4f83", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f36472b8a85379c813a7de96d154ea3fab3e4f83", "committedDate": "2020-04-20T17:34:14Z", "message": "Update versions to 0.9.1\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}, "afterCommit": {"oid": "13e0552c60a5d984daabc5f92b6dfe7ad9345ad0", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/13e0552c60a5d984daabc5f92b6dfe7ad9345ad0", "committedDate": "2020-04-20T17:59:01Z", "message": "Update versions to 0.9.1\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzMxMTA5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#pullrequestreview-396731109", "createdAt": "2020-04-20T19:02:59Z", "commit": {"oid": "13e0552c60a5d984daabc5f92b6dfe7ad9345ad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzMxNzE1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/696#pullrequestreview-396731715", "createdAt": "2020-04-20T19:03:52Z", "commit": {"oid": "13e0552c60a5d984daabc5f92b6dfe7ad9345ad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3081, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}