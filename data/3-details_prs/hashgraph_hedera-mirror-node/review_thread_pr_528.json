{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjMyMjUz", "number": 528, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyNzowMFrODeTFvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyNzowMFrODeTFvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDk2NjM3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-grpc/scripts/monitor.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyNzowMFrOFnXE-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNTo0MDowOFrOFnarEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjg4OA==", "bodyText": "Is it possible to log in an external time framed log file every time this happens.\nThat way we can look back and say it happened x number of times a day etc.\nIf the log also had the topic message num/full query and how many locked up active processed there were it might be useful for debugging.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/528#discussion_r376816888", "createdAt": "2020-02-09T21:27:00Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/scripts/monitor.sh", "diffHunk": "@@ -0,0 +1,30 @@\n+#!/bin/bash\n+\n+PERIOD_SECONDS=${PERIOD_SECONDS:-5}\n+MAX_QUERY_AGE_SECONDS=${MAX_AGE_SECONDS:-15}\n+echo \"INFO Started. polling period ${PERIOD_SECONDS}s. queries locking topic_message older than ${MAX_QUERY_AGE_SECONDS}s will be killed.\"\n+\n+while true\n+do\n+  bounce_service=false\n+  for pid in `psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pl.pid from pg_locks pl join pg_stat_activity pa on pa.pid = pl.pid join pg_class pc on pl.relation = pc.OID where pa.query like 'SELECT%' and pc.relname = 'topic_message' and now() - query_start > '${MAX_QUERY_AGE_SECONDS} seconds';\"`\n+  do\n+    case $pid in\n+      ''|*[!0-9]*) echo \"ERROR SQL query results did not appear to return PIDs.\" ;;\n+      *) res=$(psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pg_terminate_backend($pid);\" | head -1)\n+        rc=$?\n+        if [ $rc -ne 0 ] || [ \"$res\" != \" t\" ] ; then\n+          echo \"ERROR SQL query failed attempting to kill pid $pid.\"\n+        else\n+          echo \"INFO Terminated postgres pid $pid.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89654107434ded26912d98bb4a2ed1cdbe35e4f4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMDMyOQ==", "bodyText": "Log gets sent to systemd-journald log which has the timestamp.\ntopic_message num and full query aren't accessible due to the information available in pg_stat_activity (it includes placeholders for variables like $1 for topic_num, but we can't see topic_num).", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/528#discussion_r376830329", "createdAt": "2020-02-10T00:13:52Z", "author": {"login": "mike-burrage-hedera"}, "path": "hedera-mirror-grpc/scripts/monitor.sh", "diffHunk": "@@ -0,0 +1,30 @@\n+#!/bin/bash\n+\n+PERIOD_SECONDS=${PERIOD_SECONDS:-5}\n+MAX_QUERY_AGE_SECONDS=${MAX_AGE_SECONDS:-15}\n+echo \"INFO Started. polling period ${PERIOD_SECONDS}s. queries locking topic_message older than ${MAX_QUERY_AGE_SECONDS}s will be killed.\"\n+\n+while true\n+do\n+  bounce_service=false\n+  for pid in `psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pl.pid from pg_locks pl join pg_stat_activity pa on pa.pid = pl.pid join pg_class pc on pl.relation = pc.OID where pa.query like 'SELECT%' and pc.relname = 'topic_message' and now() - query_start > '${MAX_QUERY_AGE_SECONDS} seconds';\"`\n+  do\n+    case $pid in\n+      ''|*[!0-9]*) echo \"ERROR SQL query results did not appear to return PIDs.\" ;;\n+      *) res=$(psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pg_terminate_backend($pid);\" | head -1)\n+        rc=$?\n+        if [ $rc -ne 0 ] || [ \"$res\" != \" t\" ] ; then\n+          echo \"ERROR SQL query failed attempting to kill pid $pid.\"\n+        else\n+          echo \"INFO Terminated postgres pid $pid.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjg4OA=="}, "originalCommit": {"oid": "89654107434ded26912d98bb4a2ed1cdbe35e4f4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg3NTc5NQ==", "bodyText": "Got it", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/528#discussion_r376875795", "createdAt": "2020-02-10T05:40:08Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/scripts/monitor.sh", "diffHunk": "@@ -0,0 +1,30 @@\n+#!/bin/bash\n+\n+PERIOD_SECONDS=${PERIOD_SECONDS:-5}\n+MAX_QUERY_AGE_SECONDS=${MAX_AGE_SECONDS:-15}\n+echo \"INFO Started. polling period ${PERIOD_SECONDS}s. queries locking topic_message older than ${MAX_QUERY_AGE_SECONDS}s will be killed.\"\n+\n+while true\n+do\n+  bounce_service=false\n+  for pid in `psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pl.pid from pg_locks pl join pg_stat_activity pa on pa.pid = pl.pid join pg_class pc on pl.relation = pc.OID where pa.query like 'SELECT%' and pc.relname = 'topic_message' and now() - query_start > '${MAX_QUERY_AGE_SECONDS} seconds';\"`\n+  do\n+    case $pid in\n+      ''|*[!0-9]*) echo \"ERROR SQL query results did not appear to return PIDs.\" ;;\n+      *) res=$(psql -h \"${DBHOST:-dbhost}\" -d \"${DBNAME:-mirror_node}\" -U \"${DBUSER:-mirror_grpc}\" -tc \"select pg_terminate_backend($pid);\" | head -1)\n+        rc=$?\n+        if [ $rc -ne 0 ] || [ \"$res\" != \" t\" ] ; then\n+          echo \"ERROR SQL query failed attempting to kill pid $pid.\"\n+        else\n+          echo \"INFO Terminated postgres pid $pid.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjg4OA=="}, "originalCommit": {"oid": "89654107434ded26912d98bb4a2ed1cdbe35e4f4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1139, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}