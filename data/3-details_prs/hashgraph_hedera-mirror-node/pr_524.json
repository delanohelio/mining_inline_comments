{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDk0Nzk2", "number": 524, "title": "Fix GRPC high CPU usage and long running queries", "bodyText": "Detailed description:\n\nReverts R2DBC to 0.8.0.RELEASE to avoid high CPU usage issue (ticket filed upstream)\nSet limit on query to speed up requests for historical messages with a limit on large topics\nSet a max page size of 5000 to break up large requests for historical messages to smaller chunks and poll for the next batch every 1-2s. This frees up resources for other clients and allows us to respond to client cancellation requests.\nSet following connection options to help ensure hold transactions or locks too long:\n\ndefault_transaction_read_only=on\nidle_in_transaction_session_timeout=30s\nlock_timeout=30s\nstatement_timeout=120s\n\n\nChanged Reactor poller from a fixed 4 executor scheduler to a configurable bounded elastic executor with 10 * cores default. Bounded elastic is preferred over parallel for blocking I/O tasks.\n\nWhich issue(s) this PR fixes:\nFixes #522\nSpecial notes for your reviewer:\nDon't merge until we've done some performance testing in dev\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-02-04T23:04:51Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524", "merged": true, "mergeCommit": {"oid": "a08c192aa42859848782d8936d1ba2b1e7a26828"}, "closed": true, "closedAt": "2020-02-06T04:01:17Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBJqPAgH2gAyMzcxMDk0Nzk2OmYwZWNiMGJkMjk3NTI5ZWExNTE3Y2IxNDIyYzg4OGI0OTY1YTc1NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBilJOgFqTM1NDE4ODIzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f0ecb0bd297529ea1517cb1422c888b4965a756c", "committedDate": "2020-02-04T22:55:17Z", "message": "Fix GRPC high CPU usage and long running queries\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzcxNTY3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-353371567", "createdAt": "2020-02-04T23:17:09Z", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoxNzoxMFrOFlm5Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoxNzoxMFrOFlm5Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3ODg1OA==", "bodyText": "nit: Why not just do the max of (int) filter.getLimit() and grpcProperties.getMaxPageSize().\nI think based on the logic, Integer.MAX_VALUE will never be the limit, and  grpcProperties.getMaxPageSize() will always have a value.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#discussion_r374978858", "createdAt": "2020-02-04T23:17:10Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryCustomImpl.java", "diffHunk": "@@ -54,15 +58,22 @@\n                     .lessThan(instantToLongConverter.convert(filter.getEndTime()));\n         }\n \n+        int limit = filter.hasLimit() ? (int) filter.getLimit() : Integer.MAX_VALUE;\n+        int pageSize = Math.min(limit, grpcProperties.getMaxPageSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzczNjYx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-353373661", "createdAt": "2020-02-04T23:22:29Z", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoyMjoyOVrOFlnAIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoyMjoyOVrOFlnAIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MDY0Mw==", "bodyText": "Wish there was an easy way to utilize the onNext logic to test that x number of pages were traversed on a call to the db. Just logs for now is okay I guess", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#discussion_r374980643", "createdAt": "2020-02-04T23:22:29Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/repository/TopicMessageRepositoryCustomImpl.java", "diffHunk": "@@ -54,15 +58,22 @@\n                     .lessThan(instantToLongConverter.convert(filter.getEndTime()));\n         }\n \n+        int limit = filter.hasLimit() ? (int) filter.getLimit() : Integer.MAX_VALUE;\n+        int pageSize = Math.min(limit, grpcProperties.getMaxPageSize());\n+        Pageable pageable = PageRequest.of(0, pageSize);\n+\n         return databaseClient.select()\n                 .from(TopicMessage.class)\n                 .matching(whereClause)\n                 .orderBy(Sort.by(\"consensus_timestamp\"))\n+                .page(pageable)\n                 .fetch()\n                 .all()\n-                .as(t -> filter.hasLimit() ? t.limitRequest(filter.getLimit()) : t)\n                 .name(\"findByFilter\")\n                 .metrics()\n-                .doOnSubscribe(s -> log.debug(\"Executing query: {}\", filter));\n+                .doOnSubscribe(s -> log.debug(\"Executing query: {}\", filter))\n+                .doOnCancel(() -> log.debug(\"[{}] Cancelled query\", filter.getSubscriberId()))\n+                .doOnComplete(() -> log.debug(\"[{}] Completed query\", filter.getSubscriberId()))\n+                .doOnNext(t -> log.trace(\"[{}] Next message: {}\", filter.getSubscriberId(), t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzc0NjA1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-353374605", "createdAt": "2020-02-04T23:25:09Z", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoyNTowOVrOFlnDOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoyNTowOVrOFlnDOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MTQzNQ==", "bodyText": "Is r2dbc stable enough now that we trust taking new version automatically? If not maybe we should peg to a version we know works and manually increase it till we're comfortable.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#discussion_r374981435", "createdAt": "2020-02-04T23:25:09Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/pom.xml", "diffHunk": "@@ -37,10 +37,13 @@\n             <groupId>io.micrometer</groupId>\n             <artifactId>micrometer-registry-elastic</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>io.r2dbc</groupId>\n+            <artifactId>r2dbc-pool</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>io.r2dbc</groupId>\n             <artifactId>r2dbc-postgresql</artifactId>\n-            <version>0.8.1.BUILD-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODc2MDkz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-353876093", "createdAt": "2020-02-05T16:51:12Z", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTIwMTI2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-353920126", "createdAt": "2020-02-05T17:54:11Z", "commit": {"oid": "f0ecb0bd297529ea1517cb1422c888b4965a756c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bedd0714849a0e695f3eed423e8d35b863d4944", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9bedd0714849a0e695f3eed423e8d35b863d4944", "committedDate": "2020-02-05T20:53:40Z", "message": "Set r2dbc timeout values & bump scheduler pool\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDQzNzY3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-354043767", "createdAt": "2020-02-05T21:12:55Z", "commit": {"oid": "9bedd0714849a0e695f3eed423e8d35b863d4944"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMToxMjo1NVrOFmHV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMToxMjo1NVrOFmHV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxMDUxNw==", "bodyText": "possible divide by zero", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#discussion_r375510517", "createdAt": "2020-02-05T21:12:55Z", "author": {"login": "mike-burrage-hedera"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -157,8 +158,9 @@ boolean isNext(TopicMessage topicMessage) {\n         }\n \n         void onComplete() {\n-            log.info(\"[{}] Topic {} {} complete with {} messages in {}\", filter\n-                    .getSubscriberId(), topicId, mode, count, stopwatch);\n+            var rate = (int) (1_000_000.0 * count.get() / stopwatch.elapsed(TimeUnit.MICROSECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bedd0714849a0e695f3eed423e8d35b863d4944"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dab7d788c61359c72463140678c23a81bb333a60", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/dab7d788c61359c72463140678c23a81bb333a60", "committedDate": "2020-02-05T22:50:08Z", "message": "More fixes and bump versions\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cce714761715ac28269322e752d8b2560aeaa66", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4cce714761715ac28269322e752d8b2560aeaa66", "committedDate": "2020-02-06T03:23:49Z", "message": "Rollback some changes\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTg4MjM4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/524#pullrequestreview-354188238", "createdAt": "2020-02-06T03:57:21Z", "commit": {"oid": "4cce714761715ac28269322e752d8b2560aeaa66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3233, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}