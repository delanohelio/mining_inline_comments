{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzM5OTgz", "number": 1139, "title": "Add transaction type filter to REST API ", "bodyText": "Detailed description:\nCurrently The REST API for transactions only lets you filter by account.id, timestamp, result (success/failure) and type (credit/debit) - https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api#transactions\nThis makes it challenging to query for say the 1st transaction that created an entity or a specific file operation.\n\nAdd getTransactionTypeQuery to utils.js to create where clause for transaction filter\nAdd isValidTransactionType  to utils.js to verify provided filter is in transactionType\nAdd transactionTypeQuery to transaction innerQuery\nAdd transactionTypes map to constants.js\nAdd util tests for coverage\nAdd spec files for coverage\n\nWhich issue(s) this PR fixes:\nFixes #992\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-10-17T20:07:13Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139", "merged": true, "mergeCommit": {"oid": "a59ca5a720ace1af0e615ff816eb9f5153491bad"}, "closed": true, "closedAt": "2020-10-20T22:50:41Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTgk50AH2gAyNTA1MzM5OTgzOjY1N2ZlODUyNWFkM2NlZDFiZjFlMWIwNjM1ODEzNjg4MTkxNmExYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUgwS3AFqTUxMzE4ODc4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "657fe8525ad3ced1bf1e1b06358136881916a1b7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/657fe8525ad3ced1bf1e1b06358136881916a1b7", "committedDate": "2020-10-17T19:59:04Z", "message": "REST: Enable Transaction Type Filter\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce492868ddde039e6a91e8713d9f511ac76940bb", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ce492868ddde039e6a91e8713d9f511ac76940bb", "committedDate": "2020-10-19T17:21:02Z", "message": "Cleaned up and Corrected getTransactionTypeQuery check for negative cases\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4567666cab1901306b52106d015b2d196d9b5c4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c4567666cab1901306b52106d015b2d196d9b5c4", "committedDate": "2020-10-19T17:26:33Z", "message": "Remove unused isValidFilterKey\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/03a52a2a583fb9e7dab26d8efe28c141453485ac", "committedDate": "2020-10-19T18:10:05Z", "message": "Removed unused items from transactions.js\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODE1NjEx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#pullrequestreview-512815611", "createdAt": "2020-10-20T14:58:53Z", "commit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1ODo1NFrOHlBe4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNToyODozN1rOHlDHyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MzY0OA==", "bodyText": "Is it possible to load these from the table lazily on first request and cache it instead of hardcoding here?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508583648", "createdAt": "2020-10-20T14:58:54Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -94,17 +101,58 @@ const defaultBucketNames = {\n \n const recordStreamPrefix = 'recordstreams/record';\n \n+const transactionTypes = {\n+  UNKNOWN: -1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NjE4NA==", "bodyText": "I don't think it's a good user experience to silently fail and return all transactions if they mistype the transaction type. We should return an error if it's not one of the known types so they can adjust their criteria. Add a test for this scenario as well.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508596184", "createdAt": "2020-10-20T15:14:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -724,6 +733,22 @@ const parsePublicKey = (publicKey) => {\n   return decodedKey == null ? publicKey : decodedKey;\n };\n \n+const getTransactionTypeQuery = (parsedQueryParams) => {\n+  if (_.isNil(parsedQueryParams)) {\n+    return '';\n+  }\n+\n+  const transactionType = parsedQueryParams[constants.filterKeys.TRANSACTION_TYPE];\n+\n+  if (isValidTransactionType(transactionType)) {\n+    return `${constants.transactionColumns.TYPE}${opsMap.eq}${\n+      constants.transactionTypes[transactionType.toUpperCase()]\n+    }`;\n+  }\n+\n+  return '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NzQzMA==", "bodyText": "Add a lower case test.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508597430", "createdAt": "2020-10-20T15:16:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/utils.test.js", "diffHunk": "@@ -228,6 +228,33 @@ describe('Utils isValidNum tests', () => {\n   });\n });\n \n+describe('Utils isValidTransactionType tests', () => {\n+  test('Verify invalid for null', () => {\n+    expect(utils.isValidTransactionType(null)).toBe(false);\n+  });\n+  test('Verify invalid for empty input', () => {\n+    expect(utils.isValidTransactionType('')).toBe(false);\n+  });\n+  test('Verify invalid for invalid input', () => {\n+    expect(utils.isValidTransactionType('1234567890.000000001')).toBe(false);\n+  });\n+  test('Verify invalid for entity format shard', () => {\n+    expect(utils.isValidTransactionType('1.0.1')).toBe(false);\n+  });\n+  test('Verify invalid for negative num', () => {\n+    expect(utils.isValidTransactionType(-10)).toBe(false);\n+  });\n+  test('Verify invalid for 0', () => {\n+    expect(utils.isValidTransactionType(0)).toBe(false);\n+  });\n+  test('Verify valid for valid CONSENSUSSUBMITMESSAGE transaction type', () => {\n+    expect(utils.isValidTransactionType('CONSENSUSSUBMITMESSAGE')).toBe(true);\n+  });\n+  test('Verify valid for valid TOKENTRANSFERS transaction type', () => {\n+    expect(utils.isValidTransactionType('TOKENTRANSFERS')).toBe(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMDUwNw==", "bodyText": "Our naming is all over the map. Is this query param case sensitive? I think we need to use camel case transactionType to try to be consistent.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508610507", "createdAt": "2020-10-20T15:28:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -33,16 +34,22 @@ const filterKeys = {\n   TIMESTAMP: 'timestamp',\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n-  TYPE: 'type',\n+  CREDIT_TYPE: 'type',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e50023f4a8d5a436a95477e7375c17e7edb30ee", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8e50023f4a8d5a436a95477e7375c17e7edb30ee", "committedDate": "2020-10-20T20:55:20Z", "message": "Added initial case insensitive support for transaction type query and test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85412ae3bb6f5fd60c89d60bab7033f72541bde4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/85412ae3bb6f5fd60c89d60bab7033f72541bde4", "committedDate": "2020-10-20T21:57:58Z", "message": "Hard code transactionType and update spec\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b2ec17a26965be1710cb9135e4c2b42f59f1f83", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4b2ec17a26965be1710cb9135e4c2b42f59f1f83", "committedDate": "2020-10-20T22:42:44Z", "message": "Add invalid transaction type integration test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTg4Nzg2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#pullrequestreview-513188786", "createdAt": "2020-10-20T22:45:26Z", "commit": {"oid": "4b2ec17a26965be1710cb9135e4c2b42f59f1f83"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3612, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}