{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODg4NDM0", "number": 598, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoyMzozNFrODn6iFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzo0MzozOVrODn67dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTgwMDU1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/integration.test.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoyMzozNFrOF2MPHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODowMDoyMFrOF2NZbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzkwMw==", "bodyText": "earlier, many tests were setting up record file due to foreign key restriction in t_transactions.fk_rec_file_id. Now the restriction is gone.\nIf that's the only reason for it to be here, consider removing it in future.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392367903", "createdAt": "2020-03-13T17:23:34Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -326,8 +326,19 @@ fs.readdirSync(specPath).forEach(function(file) {\n   let specText = fs.readFileSync(p, 'utf8');\n   var spec = JSON.parse(specText);\n   test(`DB integration test - ${file} - ${spec.url}`, async () => {\n+    // await specSetupSteps(spec);\n     let response = await request(server).get(spec.url);\n     expect(response.status).toEqual(spec.responseStatus);\n     expect(JSON.parse(response.text)).toEqual(spec.responseJson);\n   });\n });\n+\n+const specSetupSteps = async function(spec) {\n+  let recordFile = spec.fileName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade03d120784942fe9a6d997f958355b2b6a753a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4NjkyNA==", "bodyText": "Gotcha will look into this.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392386924", "createdAt": "2020-03-13T18:00:20Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -326,8 +326,19 @@ fs.readdirSync(specPath).forEach(function(file) {\n   let specText = fs.readFileSync(p, 'utf8');\n   var spec = JSON.parse(specText);\n   test(`DB integration test - ${file} - ${spec.url}`, async () => {\n+    // await specSetupSteps(spec);\n     let response = await request(server).get(spec.url);\n     expect(response.status).toEqual(spec.responseStatus);\n     expect(JSON.parse(response.text)).toEqual(spec.responseJson);\n   });\n });\n+\n+const specSetupSteps = async function(spec) {\n+  let recordFile = spec.fileName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzkwMw=="}, "originalCommit": {"oid": "ade03d120784942fe9a6d997f958355b2b6a753a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTg2NTUxOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/integrationDbOps.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzo0MzozOVrOF2M5CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoxNTowNFrOF2RAEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3ODYzMw==", "bodyText": "if there's an existing test case where we add duplicate accounts for testing some corner case, this is okay.\nIf we don't have a reason to accept duplicates here, we should fail explicitly.\nokay in followup.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392378633", "createdAt": "2020-03-13T17:43:39Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integrationDbOps.js", "diffHunk": "@@ -189,11 +268,29 @@ const toAccount = function(str) {\n };\n \n const addAccount = async function(account) {\n+  account = Object.assign({entity_shard: 0, entity_realm: 0, exp_time_ns: null}, account);\n+\n+  let e = accountEntityIds[account.entity_num];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade03d120784942fe9a6d997f958355b2b6a753a"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0NTk2OQ==", "bodyText": "Will look into it", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392445969", "createdAt": "2020-03-13T20:15:04Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/integrationDbOps.js", "diffHunk": "@@ -189,11 +268,29 @@ const toAccount = function(str) {\n };\n \n const addAccount = async function(account) {\n+  account = Object.assign({entity_shard: 0, entity_realm: 0, exp_time_ns: null}, account);\n+\n+  let e = accountEntityIds[account.entity_num];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3ODYzMw=="}, "originalCommit": {"oid": "ade03d120784942fe9a6d997f958355b2b6a753a"}, "originalPosition": 135}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1224, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}