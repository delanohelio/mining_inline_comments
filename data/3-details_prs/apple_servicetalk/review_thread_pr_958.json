{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDcyMzY3", "number": 958, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MDo1OFrODl3PaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0NjozNlrODl3X8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDI4OTY5OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/RepeatStrategies.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MDo1OFrOFy_cLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MDo1OFrOFy_cLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxMjUyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // It is fine to reuse this instance and let it escape to the user as we enableSuppression is set to false\n          \n          \n            \n                    // while constructing it.\n          \n          \n            \n                    // It is fine to reuse this instance and let it escape to the user as enableSuppression is set to false.", "url": "https://github.com/apple/servicetalk/pull/958#discussion_r389012527", "createdAt": "2020-03-06T16:40:58Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/RepeatStrategies.java", "diffHunk": "@@ -35,6 +35,8 @@\n     public static final class TerminateRepeatException extends Exception {\n         private static final long serialVersionUID = -1725458427890873886L;\n \n+        // It is fine to reuse this instance and let it escape to the user as we enableSuppression is set to false\n+        // while constructing it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e94a728a334b1990f58630f87b1fd9d7bac58d3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDMxMTUzOnYy", "diffSide": "RIGHT", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/StacklessClosedChannelException.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0NjozNlrOFy_o7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzoxNTo1OVrOFzxx3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxNTc5MQ==", "bodyText": "Interesting that the quality task did not complain of the lack of javadoc in a public class \\cc @idelpivnitskiy\nCan you add javadocs here and for newInstance() method?", "url": "https://github.com/apple/servicetalk/pull/958#discussion_r389015791", "createdAt": "2020-03-06T16:46:36Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/StacklessClosedChannelException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import io.servicetalk.concurrent.internal.ThrowableUtils;\n+\n+import java.nio.channels.ClosedChannelException;\n+\n+public final class StacklessClosedChannelException extends ClosedChannelException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e94a728a334b1990f58630f87b1fd9d7bac58d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4NDQ0OA==", "bodyText": "done... not resolving this so @idelpivnitskiy can still see it tho...", "url": "https://github.com/apple/servicetalk/pull/958#discussion_r389584448", "createdAt": "2020-03-09T10:48:06Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/StacklessClosedChannelException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import io.servicetalk.concurrent.internal.ThrowableUtils;\n+\n+import java.nio.channels.ClosedChannelException;\n+\n+public final class StacklessClosedChannelException extends ClosedChannelException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxNTc5MQ=="}, "originalCommit": {"oid": "1e94a728a334b1990f58630f87b1fd9d7bac58d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzNzI3OQ==", "bodyText": "Interesting, checkstyle introduced new improved rules for javadoc checks:\nMissingJavadocMethod\nMissingJavadocPackage\nMissingJavadocType\nSee https://checkstyle.sourceforge.io/config_javadoc.html#MissingJavadocMethod\nThe old rules (JavadocMethod, JavadocPackage, JavadocType) work as regex, when new rules work on checkstyle token parsing. And it looks like the old rules do not work correctly anymore. I tried locally this PR, when I activate MissingJavadocMethod rule, it captures this class (for the previous commit).", "url": "https://github.com/apple/servicetalk/pull/958#discussion_r389837279", "createdAt": "2020-03-09T17:15:59Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/StacklessClosedChannelException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import io.servicetalk.concurrent.internal.ThrowableUtils;\n+\n+import java.nio.channels.ClosedChannelException;\n+\n+public final class StacklessClosedChannelException extends ClosedChannelException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxNTc5MQ=="}, "originalCommit": {"oid": "1e94a728a334b1990f58630f87b1fd9d7bac58d3"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2876, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}