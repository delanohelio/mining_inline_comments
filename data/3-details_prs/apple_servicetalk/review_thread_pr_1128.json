{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5Nzg5MjY2", "number": 1128, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzo1ODo0NlrOEZs0zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzo1ODo0NlrOEZs0zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mzg0MjcxOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/AlpnClientAndServerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzo1ODo0NlrOHCqo-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDoxOTo1MFrOHCq_2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1NzgxNg==", "bodyText": "Overwrites like this causes debugging pain if inadvertently multiple requests are sent to the service.\nI find it useful to instead use a BlockingQueue to track requests which gives an additional benefit of being able to wait for a request to be received by the server. However, YMMV", "url": "https://github.com/apple/servicetalk/pull/1128#discussion_r472557816", "createdAt": "2020-08-18T23:58:46Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/AlpnClientAndServerTest.java", "diffHunk": "@@ -110,19 +112,16 @@ public AlpnClientAndServerTest(List<String> serverSideProtocols,\n         });\n     }\n \n-    private static ServerContext startServer(List<String> supportedProtocols,\n-                                             @Nullable HttpProtocolVersion expectedProtocol) throws Exception {\n+    private ServerContext startServer(List<String> supportedProtocols,\n+                                      @Nullable HttpProtocolVersion expectedProtocol) throws Exception {\n         return HttpServers.forAddress(localAddress(0))\n                 .protocols(toProtocolConfigs(supportedProtocols))\n                 .secure()\n                 .provider(OPENSSL)\n                 .commit(DefaultTestCerts::loadServerPem, DefaultTestCerts::loadServerKey)\n                 .listenBlocking((ctx, request, responseFactory) -> {\n-                    if (\"PRI\".equals(request.method().name()) && expectedProtocol == null) {\n-                        return responseFactory.badRequest();\n-                    }\n-                    assertThat(request.version(), is(expectedProtocol));\n-                    assertThat(ctx.sslSession(), is(notNullValue()));\n+                    serviceContext.set(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13e5d9857caeff032b48ec6a308c346ced34c5d"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MzY3NA==", "bodyText": "Thanks for reminder, BlockingQueue is better!", "url": "https://github.com/apple/servicetalk/pull/1128#discussion_r472563674", "createdAt": "2020-08-19T00:19:50Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/AlpnClientAndServerTest.java", "diffHunk": "@@ -110,19 +112,16 @@ public AlpnClientAndServerTest(List<String> serverSideProtocols,\n         });\n     }\n \n-    private static ServerContext startServer(List<String> supportedProtocols,\n-                                             @Nullable HttpProtocolVersion expectedProtocol) throws Exception {\n+    private ServerContext startServer(List<String> supportedProtocols,\n+                                      @Nullable HttpProtocolVersion expectedProtocol) throws Exception {\n         return HttpServers.forAddress(localAddress(0))\n                 .protocols(toProtocolConfigs(supportedProtocols))\n                 .secure()\n                 .provider(OPENSSL)\n                 .commit(DefaultTestCerts::loadServerPem, DefaultTestCerts::loadServerKey)\n                 .listenBlocking((ctx, request, responseFactory) -> {\n-                    if (\"PRI\".equals(request.method().name()) && expectedProtocol == null) {\n-                        return responseFactory.badRequest();\n-                    }\n-                    assertThat(request.version(), is(expectedProtocol));\n-                    assertThat(ctx.sslSession(), is(notNullValue()));\n+                    serviceContext.set(ctx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1NzgxNg=="}, "originalCommit": {"oid": "d13e5d9857caeff032b48ec6a308c346ced34c5d"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2543, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}