{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODAzMzQ2", "number": 1242, "title": "Jersey to return 400 response for invalid URI", "bodyText": "Motivation:\nDefaultJerseyStreamingHttpRouter must create two URI objects in order to\ninitialize Jersey's ContainerRequest object. URI creation will also do\nvalidation, and may throw. In this case we should return a 400 response\ninstead of a 500 internal server error.\nModifications:\n\nDefaultJerseyStreamingHttpRouter to try/catch creation of URIs and\nreturn a 400 if an exception is thrown.\n\nResult:\nMore correct error returned in the event of invalid URI when using\nJersey.", "createdAt": "2020-12-07T16:41:31Z", "url": "https://github.com/apple/servicetalk/pull/1242", "merged": true, "mergeCommit": {"oid": "45fc641ffed0a719f31ca763bb4ab238f4bebe57"}, "closed": true, "closedAt": "2020-12-07T23:29:42Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj4SZpAH2gAyNTMzODAzMzQ2OjU5ZTFiMGEyNDA4MmVhOWJmMGUxMGY4YmFhNDhiMWUwZGM4M2M2NjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj8uH2AFqTU0NjU2NTE5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666", "committedDate": "2020-12-07T16:39:22Z", "message": "Jersey to return 400 response for invalid URI\n\nMotivation:\nDefaultJerseyStreamingHttpRouter must create two URI objects in order to\ninitialize Jersey's ContainerRequest object. URI creation will also do\nvalidation, and may throw. In this case we should return a 400 response\ninstead of a 500 internal server error.\n\nModifications:\n- DefaultJerseyStreamingHttpRouter to try/catch creation of URIs and\nreturn a 400 if an exception is thrown.\n\nResult:\nMore correct error returned in the event of invalid URI when using\nJersey."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDgyNTM5", "url": "https://github.com/apple/servicetalk/pull/1242#pullrequestreview-546482539", "createdAt": "2020-12-07T19:49:52Z", "commit": {"oid": "59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo0OTo1MlrOIA31_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo0OTo1MlrOIA31_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NTg1Mg==", "bodyText": "Exception msg may leak some server details, which is hard to control if this try block changes in future. Consider logging the exception and generating a response without payload body. Alternatively, consider catching only specific exception types relevant to URI.", "url": "https://github.com/apple/servicetalk/pull/1242#discussion_r537785852", "createdAt": "2020-12-07T19:49:52Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-router-jersey/src/main/java/io/servicetalk/http/router/jersey/DefaultJerseyStreamingHttpRouter.java", "diffHunk": "@@ -202,9 +207,23 @@ private void handle0(final HttpServiceContext serviceCtx, final StreamingHttpReq\n             requestUriBuilder.append(requestTarget);\n         }\n \n+        final URI baseURI;\n+        final URI requestURI;\n+        try {\n+            baseURI = URI.create(baseUri.toString());\n+            requestURI = URI.create(requestUriBuilder.toString());\n+        } catch (Throwable cause) {\n+            Buffer message = serviceCtx.executionContext().bufferAllocator().fromAscii(cause.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "862754d9a9cb3f9bcbcd30c8457e989fa9894e07", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/862754d9a9cb3f9bcbcd30c8457e989fa9894e07", "committedDate": "2020-12-07T21:30:26Z", "message": "Throwable -> IllegalArgumentException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTY1MTk1", "url": "https://github.com/apple/servicetalk/pull/1242#pullrequestreview-546565195", "createdAt": "2020-12-07T21:49:16Z", "commit": {"oid": "862754d9a9cb3f9bcbcd30c8457e989fa9894e07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3371, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}