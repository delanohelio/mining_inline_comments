{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODE2ODIx", "number": 1042, "title": "`SingleConcatWithPublisher` and invalid request-n", "bodyText": "Motivation\nIf invalid calls to request-n are made for Single.concat(Publisher) before the Single result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated Publisher completes inline with subscribe()`` (eg: Publisher.empty()`), this means we will never deliver an error for the invalid demand.\nModification\nDeliver error when invalid demand is made in the above case instead of Single's result and do not subscribe to the concatenated Publisher\nResult\nInvalid demand always terminates the Subscriber with an error.", "createdAt": "2020-05-06T00:23:37Z", "url": "https://github.com/apple/servicetalk/pull/1042", "merged": true, "mergeCommit": {"oid": "44161eb38129150821dc60f890ac25b7ec9fc107"}, "closed": true, "closedAt": "2020-05-06T17:54:03Z", "author": {"login": "NiteshKant"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceeWOJAFqTQwNjI1NjQwNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABceeforgBqjMzMDY1OTcwMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjU2NDA1", "url": "https://github.com/apple/servicetalk/pull/1042#pullrequestreview-406256405", "createdAt": "2020-05-06T01:24:44Z", "commit": {"oid": "dae808df61d0597aa18e6da0c28586456770305f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToyNDo0NFrOGRBNNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToyNDo0NFrOGRBNNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5ODc0Mg==", "bodyText": "consider breaking into 2 tests:\n\nrequest(0) delivers on onError\nrequest(0) after request(>0) delivers the item and propagates the 0 to the subscription (what is done now in this test)", "url": "https://github.com/apple/servicetalk/pull/1042#discussion_r420498742", "createdAt": "2020-05-06T01:24:44Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/test/java/io/servicetalk/concurrent/api/single/SingleConcatWithPublisherTest.java", "diffHunk": "@@ -140,6 +152,7 @@ private void invalidThenValidRequest(long invalidN) {\n     @Test\n     public void request0PropagatedAfterSuccess() {\n         source.onSuccess(1);\n+        subscriber.request(1); // get the success from the Single", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae808df61d0597aa18e6da0c28586456770305f"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f720fb78c1af42534b8ea07f01a436e4f0a5568", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/7f720fb78c1af42534b8ea07f01a436e4f0a5568", "committedDate": "2020-05-06T01:35:02Z", "message": "`SingleConcatWithPublisher` and invalid request-n\n\n__Motivation__\n\nIf invalid calls to request-n are made for `Single.concat(Publisher)` before the `Single` result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated `Publisher` completes inline with `subscribe()` (eg: `Publisher.empty()`), this means we will never deliver an error for the invalid demand.\n\n__Modification__\n\nDeliver error when invalid demand is made in the above case instead of `Single`'s result and do not subscribe to the concatenated `Publisher`\n\n__Result__\n\nInvalid demand always terminates the `Subscriber` with an error."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dae808df61d0597aa18e6da0c28586456770305f", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/dae808df61d0597aa18e6da0c28586456770305f", "committedDate": "2020-05-06T00:23:01Z", "message": "`SingleConcatWithPublisher` and invalid request-n\n\n__Motivation__\n\nIf invalid calls to request-n are made for `Single.concat(Publisher)` before the `Single` result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated `Publisher` completes inline with `subscribe()`` (eg: `Publisher.empty()`), this means we will never deliver an error for the invalid demand.\n\n__Modification__\n\nDeliver error when invalid demand is made in the above case instead of `Single`'s result and do not subscribe to the concatenated `Publisher`\n\n__Result__\n\nInvalid demand always terminates the `Subscriber` with an error."}, "afterCommit": {"oid": "7f720fb78c1af42534b8ea07f01a436e4f0a5568", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/7f720fb78c1af42534b8ea07f01a436e4f0a5568", "committedDate": "2020-05-06T01:35:02Z", "message": "`SingleConcatWithPublisher` and invalid request-n\n\n__Motivation__\n\nIf invalid calls to request-n are made for `Single.concat(Publisher)` before the `Single` result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated `Publisher` completes inline with `subscribe()` (eg: `Publisher.empty()`), this means we will never deliver an error for the invalid demand.\n\n__Modification__\n\nDeliver error when invalid demand is made in the above case instead of `Single`'s result and do not subscribe to the concatenated `Publisher`\n\n__Result__\n\nInvalid demand always terminates the `Subscriber` with an error."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3666, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}