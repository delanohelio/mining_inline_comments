{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjcwNzg0", "number": 1052, "title": "RoundRobinLoadBalancer to allow duplicate addresses", "bodyText": "Motivation:\nRoundRobinLoadBalancer currently prevents duplicates from being\ninserted. However the ServiceDiscoverer is responsible for filtering\nduplicates in the typical use case. Allowing duplicates at the LB layer\nallows to give more weight to specific addresses if desired.\nModifications:\n\nRoundRobinLoadBalancer simplify addition/removal to forgo duplicate\ndetection\n\nResult:\nRoundRobinLoadBalancer code simplified to ignore duplicate detection,\naddition doesn't require linear search.", "createdAt": "2020-05-13T23:46:49Z", "url": "https://github.com/apple/servicetalk/pull/1052", "merged": true, "mergeCommit": {"oid": "b82319f501a70ac8948ea4825cfbb7635eaba4d7"}, "closed": true, "closedAt": "2020-05-14T17:33:03Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchBjdQgH2gAyNDE3NjcwNzg0OjAwNjA0NjhhY2Q1YmY1NWU4ZjY1ZTI2OGIxMDJkNTY0ZDViNTEzYzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchQ-LpgFqTQxMjAzNDE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/0060468acd5bf55e8f65e268b102d564d5b513c9", "committedDate": "2020-05-13T23:34:13Z", "message": "RoundRobinLoadBalancer to allow duplicate addresses\n\nMotivation:\nRoundRobinLoadBalancer currently prevents duplicates from being\ninserted. However the ServiceDiscoverer is responsible for filtering\nduplicates in the typical use case. Allowing duplicates at the LB layer\nallows to give more weight to specific addresses if desired.\n\nModifications:\n- RoundRobinLoadBalancer simplify addition/removal to forgo duplicate\ndetection\n\nResult:\nRoundRobinLoadBalancer code simplified to ignore duplicate detection,\naddition doesn't require linear search."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzc1MDMy", "url": "https://github.com/apple/servicetalk/pull/1052#pullrequestreview-411375032", "createdAt": "2020-05-13T23:50:51Z", "commit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1MDo1MlrOGVHZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1NDo0OVrOGVHeSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NDU0MA==", "bodyText": "Consider using emptyList() to allow currentAddresses to be GCed.", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424794540", "createdAt": "2020-05-13T23:50:52Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {\n+                                refreshedAddresses = new ArrayList<>(currentAddresses.size() + 1);\n+                                refreshedAddresses.addAll(currentAddresses);\n                                 refreshedAddresses.add(new Host<>(addr));\n-                                return refreshedAddresses;\n+                            } else if (currentAddresses.isEmpty()) {\n+                                refreshedAddresses = currentAddresses;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NTEwMg==", "bodyText": "ArrayList.addAll(anotherArrayList) implementation does copying two times internally:\n\nto convert anotherArrayList to array\nto copy that new array into its elementData\n\nAmount of allocated memory and copied elements remains the same.\nAlso, I won't expect this to be a perf issue, as usually new addresses does not appear frequently.", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424795102", "createdAt": "2020-05-13T23:52:42Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {\n+                                refreshedAddresses = new ArrayList<>(currentAddresses.size() + 1);\n+                                refreshedAddresses.addAll(currentAddresses);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NTcyMw==", "bodyText": "As we discussed in #1051 (comment), SD may emit duplicated events and it should be expected.", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424795723", "createdAt": "2020-05-13T23:54:49Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "931875bc904c645e45c912bd7ba7874b60f9855c", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/931875bc904c645e45c912bd7ba7874b60f9855c", "committedDate": "2020-05-14T02:49:01Z", "message": "review comments, benchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDMyNDIz", "url": "https://github.com/apple/servicetalk/pull/1052#pullrequestreview-411432423", "createdAt": "2020-05-14T02:58:49Z", "commit": {"oid": "931875bc904c645e45c912bd7ba7874b60f9855c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjo1ODo0OVrOGVKYgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMzowMToyOVrOGVKbBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0MzM5NA==", "bodyText": "This test is still relevant, the assert can be changed.", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424843394", "createdAt": "2020-05-14T02:58:49Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-loadbalancer/src/test/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancerTest.java", "diffHunk": "@@ -242,15 +242,6 @@ public void unknownAddressIsRemoved() {\n         assertThat(lb.activeAddresses(), is(empty()));\n     }\n \n-    @Test\n-    public void addressIsAddedTwice() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931875bc904c645e45c912bd7ba7874b60f9855c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NDAzOQ==", "bodyText": "An equivalent log may still be useful to detect descrepancies of events from SD or an issue with our matching.", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424844039", "createdAt": "2020-05-14T03:01:29Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {\n+                                refreshedAddresses = new ArrayList<>(currentAddresses.size() + 1);\n+                                refreshedAddresses.addAll(currentAddresses);\n                                 refreshedAddresses.add(new Host<>(addr));\n-                                return refreshedAddresses;\n+                            } else if (currentAddresses.isEmpty()) {\n+                                refreshedAddresses = emptyList();\n                             } else {\n-                                LOGGER.debug(\"Address {} removed but it does not exist.\", addr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931875bc904c645e45c912bd7ba7874b60f9855c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebeca0d822082ce444d4a54b3f88f7cdfb834c1c", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/ebeca0d822082ce444d4a54b3f88f7cdfb834c1c", "committedDate": "2020-05-14T03:32:43Z", "message": "add back test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDUwOTA5", "url": "https://github.com/apple/servicetalk/pull/1052#pullrequestreview-411450909", "createdAt": "2020-05-14T04:06:56Z", "commit": {"oid": "ebeca0d822082ce444d4a54b3f88f7cdfb834c1c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDowNjo1N1rOGVLV1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDowOTowNlrOGVLYLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1OTA5Mw==", "bodyText": "currentAddresses.size() - 1 may give a zero as the result. Consider rewriting in this way:\nif (event.isAvailable()) {\n    ...\n} else if (currentAddresses.size() <= 1) {\n    refreshedAddresses = emptyList();\n} else {\n    refreshedAddresses = new ArrayList<>(currentAddresses.size() - 1);\n    ...\n}", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424859093", "createdAt": "2020-05-14T04:06:57Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {\n+                                refreshedAddresses = new ArrayList<>(currentAddresses.size() + 1);\n+                                refreshedAddresses.addAll(currentAddresses);\n                                 refreshedAddresses.add(new Host<>(addr));\n-                                return refreshedAddresses;\n+                            } else if (currentAddresses.isEmpty()) {\n+                                refreshedAddresses = emptyList();\n                             } else {\n-                                LOGGER.debug(\"Address {} removed but it does not exist.\", addr);\n-                                return currentAddresses;\n+                                refreshedAddresses = new ArrayList<>(currentAddresses.size() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebeca0d822082ce444d4a54b3f88f7cdfb834c1c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1OTY5Mw==", "bodyText": "sgtm!", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r424859693", "createdAt": "2020-05-14T04:09:06Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -150,29 +150,26 @@ public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                         event);\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n                         activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n                             final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n-                                if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n-                                    }\n-                                }\n-                            }\n+                            final List<Host<ResolvedAddress, C>> refreshedAddresses;\n                             if (event.isAvailable()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NTcyMw=="}, "originalCommit": {"oid": "0060468acd5bf55e8f65e268b102d564d5b513c9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7175505060065417fa98b8f0a2e73c39e35bfe", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/bc7175505060065417fa98b8f0a2e73c39e35bfe", "committedDate": "2020-05-14T05:08:12Z", "message": "singleton list when adding to empty list, return empty list if removal results in empty list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "843a4c65e3ad5d0bd30355b82e9d7f53a03592d3", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/843a4c65e3ad5d0bd30355b82e9d7f53a03592d3", "committedDate": "2020-05-14T12:19:29Z", "message": "duplicate removal, only remove first match"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d613e07eae8797356f31155ccf40a0494b82ae", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/d6d613e07eae8797356f31155ccf40a0494b82ae", "committedDate": "2020-05-14T12:25:52Z", "message": "move unchecked supression to specific assignments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d52ff2dba3b86c7fa733644089faafd40426ef0", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/8d52ff2dba3b86c7fa733644089faafd40426ef0", "committedDate": "2020-05-14T12:30:14Z", "message": "use typed list instead of untyped list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b520ad49d5a8183867864a097b0b0953c4e13920", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/b520ad49d5a8183867864a097b0b0953c4e13920", "committedDate": "2020-05-14T12:32:55Z", "message": "move 2nd copy loop inside first loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTM3NjY0", "url": "https://github.com/apple/servicetalk/pull/1052#pullrequestreview-411937664", "createdAt": "2020-05-14T15:44:46Z", "commit": {"oid": "b520ad49d5a8183867864a097b0b0953c4e13920"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NDo0NlrOGVihqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NDo0NlrOGVihqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzODk1NA==", "bodyText": "We said that it's ok to have duplicated addresses from SD. Neither SD, nor RRLB removes duplicates. What is expected behavior when we receive inactive event for an address that appears multiple times in the list? Should we remove all entries or only the first one?", "url": "https://github.com/apple/servicetalk/pull/1052#discussion_r425238954", "createdAt": "2020-05-14T15:44:46Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -143,37 +144,43 @@ public void onSubscribe(final Subscription s) {\n                 discoveryCancellable.nextCancellable(s);\n             }\n \n-            @SuppressWarnings(\"unchecked\")\n             @Override\n             public void onNext(final ServiceDiscovererEvent<ResolvedAddress> event) {\n                 LOGGER.debug(\"Load balancer {}, received new ServiceDiscoverer event {}.\", RoundRobinLoadBalancer.this,\n                         event);\n+                @SuppressWarnings(\"unchecked\")\n                 final List<Host<ResolvedAddress, C>> activeAddresses =\n-                        activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, currentAddresses -> {\n-                            final List<Host<ResolvedAddress, C>> refreshedAddresses =\n-                                    new ArrayList<Host<ResolvedAddress, C>>(currentAddresses);\n-                            final ResolvedAddress addr = requireNonNull(event.address());\n-                            for (int i = 0; i < refreshedAddresses.size(); i++) {\n-                                Host<ResolvedAddress, C> host = refreshedAddresses.get(i);\n+                    activeHostsUpdater.updateAndGet(RoundRobinLoadBalancer.this, oldHosts -> {\n+                        final ResolvedAddress addr = requireNonNull(event.address());\n+                        @SuppressWarnings(\"unchecked\")\n+                        final List<Host<ResolvedAddress, C>> oldHostsTyped = (List<Host<ResolvedAddress, C>>) oldHosts;\n+                        if (event.isAvailable()) {\n+                            if (oldHostsTyped.isEmpty()) {\n+                                return singletonList(new Host<>(addr));\n+                            }\n+                            final List<Host<ResolvedAddress, C>> newHosts = new ArrayList<>(oldHostsTyped.size() + 1);\n+                            newHosts.addAll(oldHostsTyped);\n+                            newHosts.add(new Host<>(addr));\n+                            return newHosts;\n+                        } else if (oldHostsTyped.isEmpty()) {\n+                            return emptyList();\n+                        } else {\n+                            final List<Host<ResolvedAddress, C>> newHosts = new ArrayList<>(oldHostsTyped.size() - 1);\n+                            for (int i = 0; i < oldHostsTyped.size(); ++i) {\n+                                final Host<ResolvedAddress, C> host = oldHostsTyped.get(i);\n                                 if (host.address.equals(addr)) {\n-                                    if (event.isAvailable()) {\n-                                        LOGGER.debug(\"Address {} added but it already exists.\", addr);\n-                                        return currentAddresses;\n-                                    } else {\n-                                        refreshedAddresses.remove(i);\n-                                        host.markInactive();\n-                                        return refreshedAddresses;\n+                                    host.markInactive();\n+                                    for (int x = i + 1; x < oldHostsTyped.size(); ++x) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b520ad49d5a8183867864a097b0b0953c4e13920"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fafe357cce76b07abf51a2e07542b374573c8aef", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/fafe357cce76b07abf51a2e07542b374573c8aef", "committedDate": "2020-05-14T16:17:05Z", "message": "move conditional to where removal happens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDM0MTk3", "url": "https://github.com/apple/servicetalk/pull/1052#pullrequestreview-412034197", "createdAt": "2020-05-14T17:31:59Z", "commit": {"oid": "fafe357cce76b07abf51a2e07542b374573c8aef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3694, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}