{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTI1NTg0", "number": 991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo0OTozNVrODtPfUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo0OTozNVrODtPfUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzY2Mjg5OnYy", "diffSide": "RIGHT", "path": "servicetalk-buffer-netty/src/main/java/io/servicetalk/buffer/netty/UnreleasableDirectByteBuf.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo0OTozNVrOF-jhQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNTo0NzozMFrOF-xoFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNzk4NQ==", "bodyText": "Actually, we can also remove these methods that are here to avoid an additional call to retain(). As retain() it just noon for our implementations, it's ok to use readRetainedSlice from AbstractByteBuf. Tests are all green if I remove these methods. WDYT?", "url": "https://github.com/apple/servicetalk/pull/991#discussion_r401137985", "createdAt": "2020-03-31T18:49:35Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-buffer-netty/src/main/java/io/servicetalk/buffer/netty/UnreleasableDirectByteBuf.java", "diffHunk": "@@ -44,31 +43,11 @@\n         super.retain();\n     }\n \n-    @Override\n-    public ByteBuf asReadOnly() {\n-        return Unpooled.unreleasableBuffer(super.asReadOnly());\n-    }\n-\n-    @Override\n-    public ByteBuf readSlice(int length) {\n-        return Unpooled.unreleasableBuffer(super.readSlice(length));\n-    }\n-\n     @Override\n     public ByteBuf readRetainedSlice(int length) {\n         return readSlice(length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2OTExMQ==", "bodyText": "(I am not sure if you are saying the same thing)\nI guess it was here before since this was calling readSlice() which was wrapping into the unreleasableBuffer. Since readSlice() override is removed, this becomes redundant.", "url": "https://github.com/apple/servicetalk/pull/991#discussion_r401369111", "createdAt": "2020-04-01T05:47:30Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-buffer-netty/src/main/java/io/servicetalk/buffer/netty/UnreleasableDirectByteBuf.java", "diffHunk": "@@ -44,31 +43,11 @@\n         super.retain();\n     }\n \n-    @Override\n-    public ByteBuf asReadOnly() {\n-        return Unpooled.unreleasableBuffer(super.asReadOnly());\n-    }\n-\n-    @Override\n-    public ByteBuf readSlice(int length) {\n-        return Unpooled.unreleasableBuffer(super.readSlice(length));\n-    }\n-\n     @Override\n     public ByteBuf readRetainedSlice(int length) {\n         return readSlice(length);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNzk4NQ=="}, "originalCommit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2640, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}