{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODg1ODUw", "number": 1177, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDozNTowOFrOEtRZ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDo0MjoyNFrOEtRfCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTA2NTM0OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/ServerRespondsOnClosingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDozNTowOFrOHg-GqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjowNDowN1rOHg_e6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzMzk5Mg==", "bodyText": "intentional? debugging?", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504333992", "createdAt": "2020-10-14T00:35:08Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/ServerRespondsOnClosingTest.java", "diffHunk": "@@ -220,11 +249,11 @@ private void verifyResponse(String requestPath) {\n \n     private void respondWithFIN() {\n         assertThat(\"Server did not shutdown output\", channel.isOutputShutdown(), is(true));\n-        channel.shutdownInput();    // simulate FIN from the client\n+        channel.shutdownInput().syncUninterruptibly();    // simulate FIN from the client\n     }\n \n     private void assertServerConnectionClosed() throws Exception {\n-        serverConnection.onClose().toFuture().get();\n+        // serverConnection.onClose().toFuture().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM1NjU4NA==", "bodyText": "debugging \ud83e\udd26", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504356584", "createdAt": "2020-10-14T02:04:07Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/ServerRespondsOnClosingTest.java", "diffHunk": "@@ -220,11 +249,11 @@ private void verifyResponse(String requestPath) {\n \n     private void respondWithFIN() {\n         assertThat(\"Server did not shutdown output\", channel.isOutputShutdown(), is(true));\n-        channel.shutdownInput();    // simulate FIN from the client\n+        channel.shutdownInput().syncUninterruptibly();    // simulate FIN from the client\n     }\n \n     private void assertServerConnectionClosed() throws Exception {\n-        serverConnection.onClose().toFuture().get();\n+        // serverConnection.onClose().toFuture().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzMzk5Mg=="}, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTA3ODQ5OnYy", "diffSide": "RIGHT", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDo0MjoyNFrOHg-OVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTo1OTozMVrOHhm1yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTk1OA==", "bodyText": "this maybe called on a non-EventLoop thread, and it doesn't look like RequestResponseCloseHandler supports this. All other methods on the CloseHandler can only be invoked on the EventLoop thread, can we stay consistent with this approach?", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504335958", "createdAt": "2020-10-14T00:42:24Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "diffHunk": "@@ -384,6 +384,7 @@ protected void handleSubscribe(Subscriber completableSubscriber) {\n                 WriteStreamSubscriber subscriber = new WriteStreamSubscriber(channel(), demandEstimatorSupplier.get(),\n                         completableSubscriber, closeHandler, writeObserver);\n                 if (failIfWriteActive(subscriber, completableSubscriber)) {\n+                    closeHandler.notifyConnected(channel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM1MzA3MQ==", "bodyText": "hm, good catch! Internal state of RequestResponseCloseHandler may be broken. Is it ok if we schedule invocation of closeHandler.notifyConnected(channel()) on the event loop from here?\nAlso, wdyt about an alternative approach proposed in #1156?", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504353071", "createdAt": "2020-10-14T01:49:44Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "diffHunk": "@@ -384,6 +384,7 @@ protected void handleSubscribe(Subscriber completableSubscriber) {\n                 WriteStreamSubscriber subscriber = new WriteStreamSubscriber(channel(), demandEstimatorSupplier.get(),\n                         completableSubscriber, closeHandler, writeObserver);\n                 if (failIfWriteActive(subscriber, completableSubscriber)) {\n+                    closeHandler.notifyConnected(channel());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTk1OA=="}, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwMTQxOQ==", "bodyText": "Discussed offline, will temporarily apply the approach from #1156 and we will do follow-up work for DefaultNettyConnection to improve its internal state.", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r505001419", "createdAt": "2020-10-14T21:59:31Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "diffHunk": "@@ -384,6 +384,7 @@ protected void handleSubscribe(Subscriber completableSubscriber) {\n                 WriteStreamSubscriber subscriber = new WriteStreamSubscriber(channel(), demandEstimatorSupplier.get(),\n                         completableSubscriber, closeHandler, writeObserver);\n                 if (failIfWriteActive(subscriber, completableSubscriber)) {\n+                    closeHandler.notifyConnected(channel());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTk1OA=="}, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2599, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}