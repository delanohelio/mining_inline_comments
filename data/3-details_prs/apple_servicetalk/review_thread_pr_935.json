{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNDY0NTY0", "number": 935, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTowOToyNVrODe7R-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTozNjoxMlrODgBjPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU1MTMwOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTowOToyNVrOFoVgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzozODo0N1rOFp-aGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzOTY2OA==", "bodyText": "(Applicable to all methods added in this PR)\nFollowing documents of Publisher#whenOnSubscribe()1 can you also add the following:\nThe order in which {@code onSubscribe} will be invoked relative to\n{@link Subscriber#onSubscribe(Cancellable)} is undefined. If you need strict ordering see\n{@link #beforeOnSubscribe(Consumer)} and {@link #afterOnSubscribe(Consumer)}.\nReference to the before/after methods\n     * @see #beforeOnNext(Consumer)\n     * @see #afterOnNext(Consumer)", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r377839668", "createdAt": "2020-02-11T19:09:25Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk4MA==", "bodyText": "Thanks for the review. I have updated the documentations for the methods whenOnSubscribe: but I am not sure what to write for whenSubscriber method which have arguments like (Supplier<? extends Subscriber<? super T>> subscriberSupplier).\nShould it be same ?\n     * <p>\n     * The order in which {@code onSubscribe} will be invoked relative to\n     * {@link Subscriber#onSubscribe(Cancellable)} is undefined. If you need strict ordering see\n     * {@link #beforeOnSubscribe(Consumer)} and {@link #afterOnSubscribe(Consumer)}.\n\n\nand\n     * @see #beforeOnNext(Consumer)\n     * @see #afterOnNext(Consumer)", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r378036980", "createdAt": "2020-02-12T04:36:25Z", "author": {"login": "shekhar-rajak"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzOTY2OA=="}, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3NjYwOA==", "bodyText": "@NiteshKant please review the changes.", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r378676608", "createdAt": "2020-02-13T06:44:39Z", "author": {"login": "shekhar-rajak"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzOTY2OA=="}, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MDA3Ng==", "bodyText": "I have commented on the changes for Completable which can now be replicated to other classes also. LMK if you have questions.", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r379070076", "createdAt": "2020-02-13T19:25:31Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzOTY2OA=="}, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1ODQyNA==", "bodyText": "Thanks for the review @NiteshKant ! I have done the changes.", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r379558424", "createdAt": "2020-02-14T17:38:47Z", "author": {"login": "shekhar-rajak"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzOTY2OA=="}, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU1NjY1OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToxMTowMFrOFoVjlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxNDo0OVrOFomwvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0MDUzMg==", "bodyText": "(Applicable to all methods added in this PR)\nSince when does not have any semantic meaning as compared to before/after, we do not need to enclose it in <strong> tags.", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r377840532", "createdAt": "2020-02-11T19:11:00Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyMjQzMQ==", "bodyText": "Done!", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r378122431", "createdAt": "2020-02-12T09:14:49Z", "author": {"login": "shekhar-rajak"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,19 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument <strong>when</strong>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0MDUzMg=="}, "originalCommit": {"oid": "8bfb280c5f44214e9a7e9322b7dd6a76da07d83d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTIxNTk2OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0NDowOVrOFpfS9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0NDowOVrOFpfS9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0ODY5NQ==", "bodyText": "Sorry my bad, I should have made it clear to adapt these references to suit the method. In this case these references should be:\n     * @see #beforeOnSubscribe(Consumer)\n     * @see #afterOnSubscribe(Consumer)", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r379048695", "createdAt": "2020-02-13T18:44:09Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -789,6 +789,26 @@ public final Completable afterOnSubscribe(Consumer<Cancellable> onSubscribe) {\n         return afterSubscriber(doOnSubscribeSupplier(onSubscribe));\n     }\n \n+    /**\n+     * Invokes the {@code onSubscribe} {@link Consumer} argument when\n+     * {@link Subscriber#onSubscribe(Cancellable)} is called for {@link Subscriber}s of the returned\n+     * {@link Completable}.\n+     * <p>\n+     * The order in which {@code onSubscribe} will be invoked relative to\n+     * {@link Subscriber#onSubscribe(Cancellable)} is undefined. If you need strict ordering see\n+     * {@link #beforeOnSubscribe(Consumer)} and {@link #afterOnSubscribe(Consumer)}.\n+     *\n+     * @param onSubscribe Invoked when {@link Subscriber#onSubscribe(Cancellable)} is called for\n+     * {@link Subscriber}s of the returned {@link Completable}. <strong>MUST NOT</strong> throw.\n+     * @return The new {@link Completable}.\n+     *\n+     * @see #beforeOnNext(Consumer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d23148ef222f2f66370cd909dfd28d6cb627fe"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTI0MTg2OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1MjowMFrOFpfjHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1MjowMFrOFpfjHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MjgyOQ==", "bodyText": "I will suggest the following language:\n * Creates a new {@link Subscriber} (via the {@code subscriberSupplier} argument) for each new subscribe and\n * invokes methods on that {@link Subscriber} when the corresponding methods are called for {@link Subscriber}s of\n * the returned {@link Publisher}.\n *\n * @param subscriberSupplier Creates a new {@link Subscriber} for each new subscribe and invokes methods on that\n * {@link Subscriber} when the corresponding methods are called for {@link Subscriber}s of the returned\n * {@link Publisher}. {@link Subscriber} methods <strong>MUST NOT</strong> throw.", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r379052829", "createdAt": "2020-02-13T18:52:00Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Completable.java", "diffHunk": "@@ -889,6 +909,20 @@ public final Completable afterSubscriber(Supplier<? extends Subscriber> subscrib\n         return new AfterSubscriberCompletable(this, subscriberSupplier, executor);\n     }\n \n+    /**\n+     * Creates a new {@link Subscriber} (via the {@code subscriberSupplier} argument) on each call to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d23148ef222f2f66370cd909dfd28d6cb627fe"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTA2NDMxOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Publisher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTozNjoxMlrOFqEVBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTozNjoxMlrOFqEVBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1NTQyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * invokes all the {@link Subscription} methods when the {@link Subscription}s of the returned\n          \n          \n            \n                 * invokes all the {@link Subscription} methods when the corresponding methods are called for {@link Subscription}s of the returned", "url": "https://github.com/apple/servicetalk/pull/935#discussion_r379655428", "createdAt": "2020-02-14T21:36:12Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/Publisher.java", "diffHunk": "@@ -1713,6 +1727,22 @@ public final Completable flatMapCompletableDelayError(Function<? super T, ? exte\n         return new WhenSubscriptionPublisher<>(this, subscriptionSupplier, false, executor);\n     }\n \n+    /**\n+     * Creates a new {@link Subscription} (via the {@code subscriptionSupplier} argument) for each new subscribe and\n+     * invokes all the {@link Subscription} methods when the {@link Subscription}s of the returned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "699b10d42c9af038b8b5b3f1c55d449bc6646c55"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2845, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}