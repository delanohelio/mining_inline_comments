{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDY2NzQw", "number": 985, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowMzowOVrODsISfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNzowNVrODsIYrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTk5NzQyOnYy", "diffSide": "RIGHT", "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowMzowOVrOF83woQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyMjoxMVrOF864Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjQ0OQ==", "bodyText": "the intention with rootProject is that we only need to have a single task which generates the executable script, and have a single script generated in the root project (regardless of how many subprojects apply the plugin). can you clarify why this changed?", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399372449", "createdAt": "2020-03-27T16:03:09Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -64,12 +64,11 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n-      Project rootProject = project.rootProject != null ? project.rootProject : project\n       String serviceTalkGrpcProtocGenerateScriptTaskName = \"serviceTalkGrpcProtocGenerateScript\"\n-      if (rootProject.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {\n-        rootProject.task(serviceTalkGrpcProtocGenerateScriptTaskName, {\n+      if (project.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5NDMyOQ==", "bodyText": "Understood that intention before making this change. With the rootProject approach:\n\ngradle adds build folder at the root and does not clean it after with ./gradlew clean;\nit increases the exposure of the servicetalk-grpc-protoc plugin for the whole project, that is not necessary if could be isolated in the module that is using it. Because the overhead of this task is very low, it's ok to run it for each module that needs it. Optimization doesn't worth it. Debugging of the gradle's task dependency graph and sequencing of tasks is easier when everything executes as part of a single module.", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399394329", "createdAt": "2020-03-27T16:36:15Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -64,12 +64,11 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n-      Project rootProject = project.rootProject != null ? project.rootProject : project\n       String serviceTalkGrpcProtocGenerateScriptTaskName = \"serviceTalkGrpcProtocGenerateScript\"\n-      if (rootProject.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {\n-        rootProject.task(serviceTalkGrpcProtocGenerateScriptTaskName, {\n+      if (project.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjQ0OQ=="}, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMjA1NQ==", "bodyText": "gradle adds build folder at the root and does not clean it after with ./gradlew clean\n\nThis is not the behavior I observe. Can you describe your setup and Is this related to --include-build behavior?", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399422055", "createdAt": "2020-03-27T17:19:45Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -64,12 +64,11 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n-      Project rootProject = project.rootProject != null ? project.rootProject : project\n       String serviceTalkGrpcProtocGenerateScriptTaskName = \"serviceTalkGrpcProtocGenerateScript\"\n-      if (rootProject.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {\n-        rootProject.task(serviceTalkGrpcProtocGenerateScriptTaskName, {\n+      if (project.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjQ0OQ=="}, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMzUxMQ==", "bodyText": "if we are adding to every sub-project we can get rid of this conditional check and always add the task. which avoids an \"expensive\" operation for gradle [1].\n[1] https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html#getTasksByName-java.lang.String-boolean-\n\nNOTE: This is an expensive operation since it requires all projects to be configured.", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399423511", "createdAt": "2020-03-27T17:22:11Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -64,12 +64,11 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n-      Project rootProject = project.rootProject != null ? project.rootProject : project\n       String serviceTalkGrpcProtocGenerateScriptTaskName = \"serviceTalkGrpcProtocGenerateScript\"\n-      if (rootProject.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {\n-        rootProject.task(serviceTalkGrpcProtocGenerateScriptTaskName, {\n+      if (project.getTasksByName(serviceTalkGrpcProtocGenerateScriptTaskName, false).isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjQ0OQ=="}, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAwNDAxOnYy", "diffSide": "LEFT", "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNDo0N1rOF830yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjoyMTo0N1rOF84g1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MzUxMw==", "bodyText": "the rational for putting the version suffix was that if folks update their version of ServiceTalk and the script generation changes, they won't have to clean their build in order to get the updates (it will be confusing if folks update their version and don't see new behavior without a clean build). Can you clarify the motivation for this change?", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399373513", "createdAt": "2020-03-27T16:04:47Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -80,26 +79,23 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n           // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n           // on the executable script\n           File uberJarFile\n-          String scriptNamePrefix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4NDc4OA==", "bodyText": "This is not an issue if we generate a new file every time (see motivation described in the discussion below).\nWhen you run project with --include-build the version is taken from project.version variable instead of implementation-version property. But project.version with --include-build is equal to the version of the project that runs with --include-build, it's not a ST version. For example, if I have a project with version 5.5 and run it with --include-build=/path/to/servicetalk I will see 5.5 in the script name.", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399384788", "createdAt": "2020-03-27T16:21:47Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -80,26 +79,23 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n           // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n           // on the executable script\n           File uberJarFile\n-          String scriptNamePrefix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MzUxMw=="}, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAxMjQxOnYy", "diffSide": "RIGHT", "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNjo1M1rOF836IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNjo1M1rOF836IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NDg4MQ==", "bodyText": "serviceTalkVersion is always not empty. But it could have ${projectVersion} as a value instead of the actual version (e.g. 0.26.0-SNAPSHOT) when this code executes before processResources (happens with --include-build).", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399374881", "createdAt": "2020-03-27T16:06:53Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -54,7 +54,7 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n       def serviceTalkGrpcProtoc = \"servicetalk-grpc-protoc\"\n       def serviceTalkVersion = pluginProperties.\"implementation-version\"\n       def serviceTalkProtocPluginPath = extension.serviceTalkProtocPluginPath\n-      if (!serviceTalkVersion && !serviceTalkProtocPluginPath) {\n+      if (!isVersion(serviceTalkVersion) && !serviceTalkProtocPluginPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAxMzI0OnYy", "diffSide": "LEFT", "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNzowNVrOF836rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjoxNzozOVrOF84V9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NTAyMQ==", "bodyText": "can you clarify the motivation for this change? if the file already exists the assumption is we don't need to try to re-write the file. The script files are (or were before this PR) versioned so no need to re-write. If folks are using SNAPSHOT it is possible the contents have changed, but this will mostly be just for us during development and we can force a clean if we are working on the scripts.", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399375021", "createdAt": "2020-03-27T16:07:05Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -224,9 +220,6 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n   }\n \n   private static boolean createNewScriptFile(File outputFile) throws IOException {\n-    if (outputFile.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4MjAwNg==", "bodyText": "If we do not generate a new file on every run users can be in a situation when the previously generated file is not correct and contains path to the old *-all.jar that does not exist anymore. Examples:\n\ngradle changes the hash for the cached file. Because the generated script contains the full path to the cached artifact, it won't run:\n\n#!/bin/sh\nexec java -jar ~/.gradle/caches/modules-2/files-2.1/io.servicetalk/servicetalk-grpc-protoc/0.26.0-SNAPSHOT/a2b7606f481385d75bc8fc419d6dfe244435a6b4/servicetalk-grpc-protoc-0.26.0-SNAPSHOT-all.jar \"$@\"\n\n\nUsers run with --include-build, then run the same project without --include-build. The script file contains value from the serviceTalkProtocPluginPath provided for --include-build. This makes script incorrect when users run it without --include-build later.\n\nThe overhead of writing a new file is very low. It will be cleaner and more reliable to override the old file on every run.", "url": "https://github.com/apple/servicetalk/pull/985#discussion_r399382006", "createdAt": "2020-03-27T16:17:39Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -224,9 +220,6 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n   }\n \n   private static boolean createNewScriptFile(File outputFile) throws IOException {\n-    if (outputFile.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NTAyMQ=="}, "originalCommit": {"oid": "cd5e2eb2a58dc8d01236ca46dc25da653d81fecd"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2631, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}