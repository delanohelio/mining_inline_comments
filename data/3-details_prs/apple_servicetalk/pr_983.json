{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODc3NjE5", "number": 983, "title": "gRPC gradle plugin rework", "bodyText": "Motivation:\n0ebe48e divided the\nservicetalk-grpc-gradle plugin into two files:\n\nan executable script\nan uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n\nInstead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development.", "createdAt": "2020-03-25T23:27:21Z", "url": "https://github.com/apple/servicetalk/pull/983", "merged": true, "mergeCommit": {"oid": "4a85c39a7af5cea8952806020a62eb61a14020bd"}, "closed": true, "closedAt": "2020-03-26T04:07:21Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRQGN6ABqjMxNjYxMzI3MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRT7_ZgBqjMxNjY1OTc0OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e7229596dc5464645288788e4bf2075804bdf23", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/3e7229596dc5464645288788e4bf2075804bdf23", "committedDate": "2020-03-25T23:24:01Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}, "afterCommit": {"oid": "0cb7da209ad3d85059e859ad6e39e66d5f79fa90", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/0cb7da209ad3d85059e859ad6e39e66d5f79fa90", "committedDate": "2020-03-25T23:27:50Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjA4OTk4", "url": "https://github.com/apple/servicetalk/pull/983#pullrequestreview-381608998", "createdAt": "2020-03-25T23:29:04Z", "commit": {"oid": "0cb7da209ad3d85059e859ad6e39e66d5f79fa90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMzoyOTowNVrOF7yJXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMzoyOTowNVrOF7yJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIzMTkwMQ==", "bodyText": "generation of temp files is not ideal ... but a reliable way to make sure we use the jar file that is actually resolved for each build. I'm open to alternatives @idelpivnitskiy", "url": "https://github.com/apple/servicetalk/pull/983#discussion_r398231901", "createdAt": "2020-03-25T23:29:05Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -67,6 +62,49 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n+      // If this project is outside of ServiceTalk's gradle build we need to add an explicit dependency on the\n+      // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n+      // on the executable script\n+      File uberJarFile\n+      String scriptNamePrefix\n+      if (serviceTalkProtocPluginPath) {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-\" + project.version\n+        uberJarFile = new File(serviceTalkProtocPluginPath)\n+      } else {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-$serviceTalkVersion\"\n+        def stGrpcProtocDep =\n+            project.getDependencies().create(\"io.servicetalk:servicetalk-grpc-protoc:$serviceTalkVersion:all\")\n+        compileOnlyDeps.add(stGrpcProtocDep)\n+        testCompileOnlyDeps.add(stGrpcProtocDep)\n+\n+        uberJarFile = project.configurations.compileOnly.find { it.name.startsWith(\"servicetalk-grpc-protoc\") }\n+        if (uberJarFile == null) {\n+          throw new IllegalStateException(\"failed to find the servicetalk-grpc-protoc:$serviceTalkVersion:all\")\n+        }\n+      }\n+\n+      File scriptExecutableFile\n+      try {\n+        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n+          scriptExecutableFile = File.createTempFile(scriptNamePrefix, \".bat\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cb7da209ad3d85059e859ad6e39e66d5f79fa90"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cb7da209ad3d85059e859ad6e39e66d5f79fa90", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/0cb7da209ad3d85059e859ad6e39e66d5f79fa90", "committedDate": "2020-03-25T23:27:50Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}, "afterCommit": {"oid": "bf58a812b42435e61a302420a852722a67723e8c", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/bf58a812b42435e61a302420a852722a67723e8c", "committedDate": "2020-03-26T01:30:54Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjQ5MjYx", "url": "https://github.com/apple/servicetalk/pull/983#pullrequestreview-381649261", "createdAt": "2020-03-26T01:39:47Z", "commit": {"oid": "bf58a812b42435e61a302420a852722a67723e8c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMTozOTo0N1rOF70bFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMTo0Nzo1MFrOF70jIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI2OTIwNg==", "bodyText": "nit (here and in other places): You can avoid concatenation in this way: \"${project.rootProject.rootDir}/servicetalk-grpc-protoc/build/buildExecutable/servicetalk-grpc-protoc-${project.version}-all.jar\"", "url": "https://github.com/apple/servicetalk/pull/983#discussion_r398269206", "createdAt": "2020-03-26T01:39:47Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/grpc/helloworld/build.gradle", "diffHunk": "@@ -33,7 +33,7 @@ serviceTalkGrpc {\n \n   // The following setting must be omitted in users projects and is necessary here\n   // only because we want to use the locally built version of the plugin\n-  serviceTalkProtocPluginPath = \"${project.rootProject.rootDir}/servicetalk-grpc-protoc/build/buildExecutable/\" +\n-      io.servicetalk.internal.build.ExecutableBuilder.addExecutablePostFix(\"protoc-gen-servicetalk_grpc\",\n-          org.gradle.internal.os.OperatingSystem.current().isWindows())\n+  serviceTalkProtocPluginPath =\n+      \"${project.rootProject.rootDir}/servicetalk-grpc-protoc/build/buildExecutable/servicetalk-grpc-protoc-\" +\n+          project.version + \"-all.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf58a812b42435e61a302420a852722a67723e8c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MDI3MA==", "bodyText": "Why if branch should use project.version but else branch uses $serviceTalkVersion? Are they different?", "url": "https://github.com/apple/servicetalk/pull/983#discussion_r398270270", "createdAt": "2020-03-26T01:44:05Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -67,6 +62,49 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n+      // If this project is outside of ServiceTalk's gradle build we need to add an explicit dependency on the\n+      // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n+      // on the executable script\n+      File uberJarFile\n+      String scriptNamePrefix\n+      if (serviceTalkProtocPluginPath) {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-\" + project.version\n+        uberJarFile = new File(serviceTalkProtocPluginPath)\n+      } else {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-$serviceTalkVersion\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf58a812b42435e61a302420a852722a67723e8c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MDg0NA==", "bodyText": "servicetalk-grpc-protoc string is used multiple times in this class, consider using a constant", "url": "https://github.com/apple/servicetalk/pull/983#discussion_r398270844", "createdAt": "2020-03-26T01:46:14Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -67,6 +62,49 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n+      // If this project is outside of ServiceTalk's gradle build we need to add an explicit dependency on the\n+      // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n+      // on the executable script\n+      File uberJarFile\n+      String scriptNamePrefix\n+      if (serviceTalkProtocPluginPath) {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-\" + project.version\n+        uberJarFile = new File(serviceTalkProtocPluginPath)\n+      } else {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-$serviceTalkVersion\"\n+        def stGrpcProtocDep =\n+            project.getDependencies().create(\"io.servicetalk:servicetalk-grpc-protoc:$serviceTalkVersion:all\")\n+        compileOnlyDeps.add(stGrpcProtocDep)\n+        testCompileOnlyDeps.add(stGrpcProtocDep)\n+\n+        uberJarFile = project.configurations.compileOnly.find { it.name.startsWith(\"servicetalk-grpc-protoc\") }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf58a812b42435e61a302420a852722a67723e8c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MTI2Ng==", "bodyText": "how grpc-java solves this issue?", "url": "https://github.com/apple/servicetalk/pull/983#discussion_r398271266", "createdAt": "2020-03-26T01:47:50Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-gradle-plugin/src/main/groovy/io/servicetalk/grpc/gradle/plugin/ServiceTalkGrpcPlugin.groovy", "diffHunk": "@@ -67,6 +62,49 @@ class ServiceTalkGrpcPlugin implements Plugin<Project> {\n         throw new InvalidUserDataException(\"Please set `serviceTalkGrpc.protobufVersion`.\")\n       }\n \n+      // If this project is outside of ServiceTalk's gradle build we need to add an explicit dependency on the\n+      // uber jar which contains the protoc logic, as otherwise the grpc-gradle-plugin will only add a dependency\n+      // on the executable script\n+      File uberJarFile\n+      String scriptNamePrefix\n+      if (serviceTalkProtocPluginPath) {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-\" + project.version\n+        uberJarFile = new File(serviceTalkProtocPluginPath)\n+      } else {\n+        scriptNamePrefix = \"servicetalk-grpc-protoc-$serviceTalkVersion\"\n+        def stGrpcProtocDep =\n+            project.getDependencies().create(\"io.servicetalk:servicetalk-grpc-protoc:$serviceTalkVersion:all\")\n+        compileOnlyDeps.add(stGrpcProtocDep)\n+        testCompileOnlyDeps.add(stGrpcProtocDep)\n+\n+        uberJarFile = project.configurations.compileOnly.find { it.name.startsWith(\"servicetalk-grpc-protoc\") }\n+        if (uberJarFile == null) {\n+          throw new IllegalStateException(\"failed to find the servicetalk-grpc-protoc:$serviceTalkVersion:all\")\n+        }\n+      }\n+\n+      File scriptExecutableFile\n+      try {\n+        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n+          scriptExecutableFile = File.createTempFile(scriptNamePrefix, \".bat\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIzMTkwMQ=="}, "originalCommit": {"oid": "0cb7da209ad3d85059e859ad6e39e66d5f79fa90"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cceef5fda613836d3c2e43d8948276ea90c2009", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/5cceef5fda613836d3c2e43d8948276ea90c2009", "committedDate": "2020-03-26T03:53:49Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30b4f2cc7f3ff4372fa36edda4d5cc5d901cffd0", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/30b4f2cc7f3ff4372fa36edda4d5cc5d901cffd0", "committedDate": "2020-03-26T03:07:22Z", "message": "undo fancy auto task finding"}, "afterCommit": {"oid": "5cceef5fda613836d3c2e43d8948276ea90c2009", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/5cceef5fda613836d3c2e43d8948276ea90c2009", "committedDate": "2020-03-26T03:53:49Z", "message": "gRPC gradle plugin rework\n\nMotivation:\n0ebe48ed3948f22bfc003c8a0c551572bb70bbbf divided the\nservicetalk-grpc-gradle plugin into two files:\n1. an executable script\n2. an uber jar with the plugin logic\nThe executable script assumed the uber jar would be co-located in the\nsame directory as the uber jar, but that isn't the case in gradle\ncaches. This means the plugin may fail to execute outside of the maven\nm2 repository structure.\n\nModifications:\n- Instead of publishing a static script for each platform which assumes\na co-located uber jar, dynamically generate the executable script\ndepending upon where the uber jar is resolved from for the local build.\n\nResult:\nservicetalk-grpc-gradle works with gradle cache directory structure and\nlocal development."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3766, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}