{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTExOTc2", "number": 936, "title": "`HttpObjectEncoder` should always allocate direct outbound buffers", "bodyText": "Motivation:\nHttpObjectEncoder internally allocates buffers that will be\npassed to the transport or OPENSSL handler, both require direct\nmemory for processing. We should explicitly allocate direct memory\nin outbound handler to prevent from slowing down (by introducing\nadditional copying from heap to direct memory) when users specify\nio.netty.noPreferDirectFlag=true system property.\nModifications:\n\nExplicitly allocate direct pooled buffers in HttpObjectEncoder;\n\nResult:\nBuffers allocated in HttpObjectEncoder will always use direct\npooled memory and won't be copied by transport or OPENSSL handler.", "createdAt": "2020-02-12T20:19:33Z", "url": "https://github.com/apple/servicetalk/pull/936", "merged": true, "mergeCommit": {"oid": "1f9c67588db101af8d71f89501da4afedc861e9b"}, "closed": true, "closedAt": "2020-02-15T02:12:19Z", "author": {"login": "idelpivnitskiy"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDsN2EAH2gAyMzc0NTExOTc2OmY2NmY2NjEwNGEyMTczZDQ2OGMzZGFiZDM2ZWNlMDQ3NTg2NDMwOTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEWt_6AFqTM1OTIzOTY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f66f66104a2173d468c3dabd36ece04758643090", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/f66f66104a2173d468c3dabd36ece04758643090", "committedDate": "2020-02-12T20:18:48Z", "message": "`HttpObjectEncoder` should always allocate direct outbound buffers\n\nMotivation:\n\n`HttpObjectEncoder` internally allocates buffers that will be\npassed to the transport or `OPENSSL` handler, both require direct\nmemory for processing. We should explicitly allocate direct memory\nin outbound handler to prevent from slowing down (by introducing\nadditional copying from heap to direct memory) when users specify\n`io.netty.noPreferDirectFlag=true` system property.\n\nModifications:\n\n- Explicitly allocate direct pooled buffers in `HttpObjectEncoder`;\n\nResult:\n\nBuffers allocated in `HttpObjectEncoder` will always use direct\npooled memory and won't be copied by transport or `OPENSSL` handler."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzYyMjE3", "url": "https://github.com/apple/servicetalk/pull/936#pullrequestreview-357762217", "createdAt": "2020-02-12T20:24:53Z", "commit": {"oid": "f66f66104a2173d468c3dabd36ece04758643090"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoyNDo1NFrOFo9Ypg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoyNDo1NFrOFo9Ypg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5MzA5NA==", "bodyText": "Transport needs direct memory for the outgoing data and after this handler users do not touch buffers anymore. So, this helps to prevent additional copy in transport when users configure buffer allocator to prefer heap memory.\n@normanmaurer as there any specific reason to use buffer method here instead of directBuffer or ioBuffer in similar handler in netty?\nhttps://github.com/netty/netty/blob/fcf55fcf718af1e4cae85eb86cdb679094186aed/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java#L93", "url": "https://github.com/apple/servicetalk/pull/936#discussion_r378493094", "createdAt": "2020-02-12T20:24:54Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectEncoder.java", "diffHunk": "@@ -125,7 +125,7 @@ public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise)\n             // We prefer a direct allocation here because it is expected the resulted encoded Buffer will be written\n             // to a socket. In order to do the write to the socket the memory typically needs to be allocated in direct\n             // memory and will be copied to direct memory if not. Using a direct buffer will avoid the copy.\n-            ByteBuf byteBuf = POOLED_ALLOCATOR.buffer((int) headersEncodedSizeAccumulator);\n+            ByteBuf byteBuf = POOLED_ALLOCATOR.directBuffer((int) headersEncodedSizeAccumulator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f66f66104a2173d468c3dabd36ece04758643090"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MjM5NjY5", "url": "https://github.com/apple/servicetalk/pull/936#pullrequestreview-359239669", "createdAt": "2020-02-14T21:49:56Z", "commit": {"oid": "f66f66104a2173d468c3dabd36ece04758643090"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3275, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}