{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTA5NzE3", "number": 977, "title": "Initial support for windows development", "bodyText": "Motivation:\nServiceTalk currently doesn't build on windows. This can be limiting for\nfolks who are comfortable with that development environment.\nModifications:\n\ngrpc-protoc project needs refactoring of the plugin in order to\nexecute on unix and windows platforms. The distribution is now\nconsistent with a script as the executable and co-located uber jar\ncontaining the plugin logic.\nignore/modify tests that failed when running locally on windows, there\nwill be followup PRs for other tests that sporadically fail.\n\nResult:\nServiceTalk can now be built on windows.\nResolves #575.", "createdAt": "2020-03-23T16:59:15Z", "url": "https://github.com/apple/servicetalk/pull/977", "merged": true, "mergeCommit": {"oid": "0ebe48ed3948f22bfc003c8a0c551572bb70bbbf"}, "closed": true, "closedAt": "2020-03-24T00:24:46Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQhRXFAH2gAyMzkyNTA5NzE3OjRjMDE3MTUyMWUzZTRhNDg1YTkyZGVkZjNmNDUwYmRkMmU4YjgzMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQnrtxgFqTM3OTkyMTI1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "committedDate": "2020-03-23T16:54:42Z", "message": "Initial support for windows development\n\nMotivation:\nServiceTalk currently doesn't build on windows. This can be limiting for\nfolks who are comfortable with that development environment.\n\nModifications:\n- grpc-protoc project needs refactoring of the plugin in order to\nexecute on unix and windows platforms. The distribution is now\nconsistent with a script as the executable and co-located uber jar\ncontaining the plugin logic.\n- ignore/modify tests that failed when running locally on windows, there\nwill be followup PRs for other tests that sporadically fail.\n\nResult:\nServiceTalk can now be built on windows."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjMwMzE2", "url": "https://github.com/apple/servicetalk/pull/977#pullrequestreview-379630316", "createdAt": "2020-03-23T17:00:43Z", "commit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDo0NFrOF6PBGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzoxNjoyOVrOF6PsIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzc3MQ==", "bodyText": "PublishToMavenRepository does not cover PublishToMavenLocal. Should we use AbstractPublishToMaven type instead?\nhttps://docs.gradle.org/current/javadoc/org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396607771", "createdAt": "2020-03-23T17:00:44Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-protoc/build.gradle", "diffHunk": "@@ -47,42 +50,78 @@ shadowJar {\n   classifier = ''\n }\n \n+def grpcPluginUberJarName = project.name + \"-\" + project.version + \"-all.jar\"\n+\n+task copyUberJarForDevelopment(type: Copy) {\n+  dependsOn tasks.shadowJar\n+  from shadowJar.outputs.files.singleFile\n+  into file(\"$buildDir/buildExecutable\")\n+\n+  rename { fileName ->\n+    return grpcPluginUberJarName\n+  }\n+}\n+\n task buildExecutable {\n-  def outputFile = file(\"$buildDir/buildExecutable/protoc-gen-servicetalk_grpc.exe\")\n+  def isWindows = org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk_grpc\", isWindows))\n+  dependsOn tasks.copyUberJarForDevelopment\n   inputs.files shadowJar.outputs.files\n   outputs.file outputFile\n \n   doLast {\n-    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n-      throw new GradleException(\"Windows is currently not supported\")\n+    if (isWindows) {\n+      buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+    } else {\n+      buildUnixExecutable(grpcPluginUberJarName, outputFile)\n     }\n-\n-    outputFile.parentFile.mkdirs()\n-    outputFile.delete()\n-    outputFile <<\n-        '''#!/bin/sh\n-exec java -jar \"$0\" \"$@\"\n-exit1\n-'''\n-    shadowJar.outputs.files.singleFile.withInputStream { outputFile.append(it) }\n-    outputFile.executable = true\n   }\n }\n tasks.compileJava.finalizedBy(buildExecutable)\n \n+task buildExecutableWindowsPublishing {\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk-windows_grpc\", true))\n+  dependsOn tasks.copyUberJarForDevelopment\n+  inputs.files shadowJar.outputs.files\n+  outputs.file outputFile\n+\n+  doLast {\n+    buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+  }\n+}\n+\n+// we attempt to generate both grpc executables when on windows, and don't publish from windows anyways.\n+tasks.withType(PublishToMavenRepository) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwODM4NA==", "bodyText": "Could you please elaborate why this is necessary? Does it cause issues with the test if windows has different default value here?", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396608384", "createdAt": "2020-03-23T17:01:33Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/MultiAddressUrlHttpClientTest.java", "diffHunk": "@@ -92,6 +93,7 @@ public static void beforeClass() throws Exception {\n         afterClassCloseables = newCompositeCloseable();\n \n         client = afterClassCloseables.append(HttpClients.forMultiAddressUrl()\n+                .socketOption(CONNECT_TIMEOUT, 1) // windows default connect timeout is seconds, we want to fail fast.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMDk3Mg==", "bodyText": "Should we use \\r\\n for windows?", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396610972", "createdAt": "2020-03-23T17:05:24Z", "author": {"login": "idelpivnitskiy"}, "path": "buildSrc/src/main/java/io/servicetalk/internal/build/ExecutableBuilder.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.internal.build;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.nio.charset.StandardCharsets;\n+\n+public final class ExecutableBuilder {\n+\n+    private ExecutableBuilder() {\n+        // no instances\n+    }\n+\n+    public static void buildUnixExecutable(String uberJarName, File outputFile) throws IOException {\n+        prepareOutputFile(outputFile);\n+        try(FileOutputStream execOutputStream = new FileOutputStream(outputFile)) {\n+            execOutputStream.write((\"#!/bin/sh\\n\" +\n+                    \"pushd $(dirname \\\"$0\\\") > /dev/null\\n\" +\n+                    \"exec java -jar \" + uberJarName + \" \\\"$@\\\"\\n\" +\n+                    \"popd > /dev/null\\n\").getBytes(StandardCharsets.US_ASCII));\n+        }\n+        finalizeOutputFile(outputFile);\n+    }\n+\n+    public static void buildWindowsExecutable(String uberJarName, File outputFile) throws IOException {\n+        prepareOutputFile(outputFile);\n+        try(FileOutputStream execOutputStream = new FileOutputStream(outputFile)) {\n+            execOutputStream.write((\"@ECHO OFF\\n\" +\n+                    \"pushd %~dp0\\n\" +\n+                    \"java -jar \" + uberJarName + \" %*\\n\" +\n+                    \"popd\\n\").getBytes(StandardCharsets.US_ASCII));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMjg3NA==", "bodyText": "Consider creating an issue, otherwise it's hard to track.", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396612874", "createdAt": "2020-03-23T17:08:17Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/InsufficientlySizedExecutorHttpTest.java", "diffHunk": "@@ -116,6 +116,7 @@ public void insufficientServerCapacityStreaming() throws Exception {\n         insufficientServerCapacityStreaming0();\n     }\n \n+    // TODO Windows seeing CHANNEL_CLOSED_INBOUND. Is 1 thread enough with control events (e.g. close)?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxODc4NA==", "bodyText": "What is the expected output for linux and osx classifiers? After running it locally, in servicetalk-grpc-protoc/build/buildExecutable folder I see only:\n\nprotoc-gen-servicetalk_grpc.sh\nservicetalk-grpc-protoc-0.26.0-SNAPSHOT-all.jar\nShould I see any files with classifiers?", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396618784", "createdAt": "2020-03-23T17:16:29Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-grpc-protoc/build.gradle", "diffHunk": "@@ -47,42 +50,78 @@ shadowJar {\n   classifier = ''\n }\n \n+def grpcPluginUberJarName = project.name + \"-\" + project.version + \"-all.jar\"\n+\n+task copyUberJarForDevelopment(type: Copy) {\n+  dependsOn tasks.shadowJar\n+  from shadowJar.outputs.files.singleFile\n+  into file(\"$buildDir/buildExecutable\")\n+\n+  rename { fileName ->\n+    return grpcPluginUberJarName\n+  }\n+}\n+\n task buildExecutable {\n-  def outputFile = file(\"$buildDir/buildExecutable/protoc-gen-servicetalk_grpc.exe\")\n+  def isWindows = org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk_grpc\", isWindows))\n+  dependsOn tasks.copyUberJarForDevelopment\n   inputs.files shadowJar.outputs.files\n   outputs.file outputFile\n \n   doLast {\n-    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n-      throw new GradleException(\"Windows is currently not supported\")\n+    if (isWindows) {\n+      buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+    } else {\n+      buildUnixExecutable(grpcPluginUberJarName, outputFile)\n     }\n-\n-    outputFile.parentFile.mkdirs()\n-    outputFile.delete()\n-    outputFile <<\n-        '''#!/bin/sh\n-exec java -jar \"$0\" \"$@\"\n-exit1\n-'''\n-    shadowJar.outputs.files.singleFile.withInputStream { outputFile.append(it) }\n-    outputFile.executable = true\n   }\n }\n tasks.compileJava.finalizedBy(buildExecutable)\n \n+task buildExecutableWindowsPublishing {\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk-windows_grpc\", true))\n+  dependsOn tasks.copyUberJarForDevelopment\n+  inputs.files shadowJar.outputs.files\n+  outputs.file outputFile\n+\n+  doLast {\n+    buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+  }\n+}\n+\n+// we attempt to generate both grpc executables when on windows, and don't publish from windows anyways.\n+tasks.withType(PublishToMavenRepository) {\n+  onlyIf {\n+    !org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  }\n+}\n+\n publishing {\n   publications {\n     mavenJava {\n       artifact(buildExecutable.outputs.files.singleFile) {\n         classifier = \"linux-x86_64\"\n-        extension = \"exe\"\n+        extension = \"sh\"\n         builtBy buildExecutable\n       }\n       artifact(buildExecutable.outputs.files.singleFile) {\n         classifier = \"osx-x86_64\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTE3OTI0", "url": "https://github.com/apple/servicetalk/pull/977#pullrequestreview-379917924", "createdAt": "2020-03-24T00:12:48Z", "commit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoxMjo0OFrOF6cx3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoxMjo0OFrOF6cx3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzMzI0Nw==", "bodyText": "will be replaced by reference to #977", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396833247", "createdAt": "2020-03-24T00:12:48Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/HttpServerMultipleRequestsTest.java", "diffHunk": "@@ -65,6 +66,7 @@\n     @Rule\n     public final Timeout timeout = new ServiceTalkTestTimeout();\n \n+    @Ignore(\"todo NettyHttpServer repeat WriteStreamSubscriber issues\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332f64dd4cb929bda4f0a018c5632b332303cd6b", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/332f64dd4cb929bda4f0a018c5632b332303cd6b", "committedDate": "2020-03-24T00:14:00Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTIxMjU5", "url": "https://github.com/apple/servicetalk/pull/977#pullrequestreview-379921259", "createdAt": "2020-03-24T00:22:55Z", "commit": {"oid": "332f64dd4cb929bda4f0a018c5632b332303cd6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3754, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}