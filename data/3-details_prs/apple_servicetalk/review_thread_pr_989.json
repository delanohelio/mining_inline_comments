{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODA5MjAx", "number": 989, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODowMzoyN1rODsynaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo0MToyNVrODs03jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjkzMjI0OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/HttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODowMzoyN1rOF91z3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDoyNzozMlrOF-BBpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA==", "bodyText": "note this PR breaks the public APIs in a few spots (here and constructor of DeafultHttpSetCookie). it could be done in alternative ways but at this point we are still breaking APIs and I'm assuming minimal direct implement/use these APIs.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400389084", "createdAt": "2020-03-30T18:03:27Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/HttpSetCookie.java", "diffHunk": "@@ -55,6 +55,15 @@\n     @Nullable\n     CharSequence expires();\n \n+    /**\n+     * Get the value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     * @return The value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     */\n+    @Nullable\n+    SameSite sameSite();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NjEwMA==", "bodyText": "You could also add a default implementation if you want to minimise breakage... not sure this is needed tho.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400446100", "createdAt": "2020-03-30T19:38:38Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/HttpSetCookie.java", "diffHunk": "@@ -55,6 +55,15 @@\n     @Nullable\n     CharSequence expires();\n \n+    /**\n+     * Get the value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     * @return The value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     */\n+    @Nullable\n+    SameSite sameSite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MjgzNw==", "bodyText": "Ack; I think it is OK to break APIs now.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400572837", "createdAt": "2020-03-31T00:27:32Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/HttpSetCookie.java", "diffHunk": "@@ -55,6 +55,15 @@\n     @Nullable\n     CharSequence expires();\n \n+    /**\n+     * Get the value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     * @return The value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     */\n+    @Nullable\n+    SameSite sameSite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI2OTE2OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTozMTo1OFrOF95Eaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0NTo1M1rOF-BVmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ==", "bodyText": "I just wondered why 16 now... Seems like 8 should be enough ?", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400442475", "createdAt": "2020-03-30T19:31:58Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -45,13 +50,14 @@\n      * if/else block we lean on {@link HttpHeaders} which provides an associative array that compares keys in a case\n      * case-insensitive manner.\n      */\n-    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(8, false, false);\n+    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(16, false, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTM4Nw==", "bodyText": "8 and 16 are both functional, but 8 lead to overlap in a bucket between 2 entries and 16 makes it so there is no overlap.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455387", "createdAt": "2020-03-30T19:55:36Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -45,13 +50,14 @@\n      * if/else block we lean on {@link HttpHeaders} which provides an associative array that compares keys in a case\n      * case-insensitive manner.\n      */\n-    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(8, false, false);\n+    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(16, false, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MDA3NQ==", "bodyText": "javadoc mentions 8 which is stale now.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400570075", "createdAt": "2020-03-31T00:18:02Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -45,13 +50,14 @@\n      * if/else block we lean on {@link HttpHeaders} which provides an associative array that compares keys in a case\n      * case-insensitive manner.\n      */\n-    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(8, false, false);\n+    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(16, false, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3Nzk0Nw==", "bodyText": "javadoc fixed", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400577947", "createdAt": "2020-03-31T00:45:53Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -45,13 +50,14 @@\n      * if/else block we lean on {@link HttpHeaders} which provides an associative array that compares keys in a case\n      * case-insensitive manner.\n      */\n-    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(8, false, false);\n+    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(16, false, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI3NDI0OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTozMzoyM1rOF95Hcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo1NjowNFrOF953tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MzI1MQ==", "bodyText": "not really related to this PR but I wondered if you may want to consider adding a Builder at some point as these are quite a few params for a constructor.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400443251", "createdAt": "2020-03-30T19:33:23Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -111,18 +119,21 @@ public DefaultHttpSetCookie(final CharSequence name, final CharSequence value,\n      * @param secure the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">secure-av</a>.\n      * @param httpOnly the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">httponly-av</a> (see\n      * <a href=\"http://www.owasp.org/index.php/HTTPOnly\">HTTP-only</a>).\n+     * @param sameSite the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n      */\n     public DefaultHttpSetCookie(final CharSequence name, final CharSequence value, @Nullable final CharSequence path,\n                                 @Nullable final CharSequence domain, @Nullable final CharSequence expires,\n-                                @Nullable final Long maxAge, final boolean wrapped, final boolean secure,\n-                                final boolean httpOnly) {\n+                                @Nullable final Long maxAge, @Nullable final SameSite sameSite, final boolean wrapped,\n+                                final boolean secure, final boolean httpOnly) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTYwNg==", "bodyText": "lets consider for a followup PR.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455606", "createdAt": "2020-03-30T19:56:04Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -111,18 +119,21 @@ public DefaultHttpSetCookie(final CharSequence name, final CharSequence value,\n      * @param secure the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">secure-av</a>.\n      * @param httpOnly the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">httponly-av</a> (see\n      * <a href=\"http://www.owasp.org/index.php/HTTPOnly\">HTTP-only</a>).\n+     * @param sameSite the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n      */\n     public DefaultHttpSetCookie(final CharSequence name, final CharSequence value, @Nullable final CharSequence path,\n                                 @Nullable final CharSequence domain, @Nullable final CharSequence expires,\n-                                @Nullable final Long maxAge, final boolean wrapped, final boolean secure,\n-                                final boolean httpOnly) {\n+                                @Nullable final Long maxAge, @Nullable final SameSite sameSite, final boolean wrapped,\n+                                final boolean secure, final boolean httpOnly) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MzI1MQ=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI3ODI2OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTozNDoyNVrOF95JwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo1Njo0M1rOF955AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mzg0MA==", "bodyText": "why you even need this if its checked in the constructor ?", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400443840", "createdAt": "2020-03-30T19:34:25Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -277,7 +295,9 @@ static HttpSetCookie parseSetCookie(final CharSequence setCookieString, boolean\n             }\n         }\n \n-        return new DefaultHttpSetCookie(name, value, path, domain, expires, maxAge, isWrapped, isSecure, isHttpOnly);\n+        assert name != null && value != null; // these are checked at runtime in the constructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTkzNg==", "bodyText": "IntelliJ flags this as a warning (e.g. passing in arguments that maybe null that are no annotated with @Nullable).", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455936", "createdAt": "2020-03-30T19:56:43Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -277,7 +295,9 @@ static HttpSetCookie parseSetCookie(final CharSequence setCookieString, boolean\n             }\n         }\n \n-        return new DefaultHttpSetCookie(name, value, path, domain, expires, maxAge, isWrapped, isSecure, isHttpOnly);\n+        assert name != null && value != null; // these are checked at runtime in the constructor", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mzg0MA=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI4MTk4OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTozNToxOFrOF95L6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDowNzoyMVrOF96Peg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NDM5NQ==", "bodyText": "nit: the toString() is not needed.", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400444395", "createdAt": "2020-03-30T19:35:18Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -373,6 +400,10 @@ public CharSequence encoded() {\n             sb.append(ENCODED_LABEL_MAX_AGE);\n             sb.append(maxAge);\n         }\n+        if (sameSite != null) {\n+            sb.append(ENCODED_LABEL_SAMESITE);\n+            sb.append(sameSite.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2MTY5MA==", "bodyText": "done", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400461690", "createdAt": "2020-03-30T20:07:21Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -373,6 +400,10 @@ public CharSequence encoded() {\n             sb.append(ENCODED_LABEL_MAX_AGE);\n             sb.append(maxAge);\n         }\n+        if (sameSite != null) {\n+            sb.append(ENCODED_LABEL_SAMESITE);\n+            sb.append(sameSite.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NDM5NQ=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzMwMTI3OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo0MToyNVrOF95YRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDoyMDoyOVrOF96r7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzU1OA==", "bodyText": "nit: you could optimize this with a switch statement:\nswitch (length) {\n    // lax\n    case 3: \n       ....\n    // none\n    case 4:\n       ....\n    // strict\n    case 6:\n       ...\n    default:\n        return null;\n\n}", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400447558", "createdAt": "2020-03-30T19:41:25Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -447,6 +479,35 @@ public CharSequence subSequence(final int start, final int end) {\n         }\n     }\n \n+    @Nullable\n+    private static SameSite fromSequence(CharSequence cs, int begin, int end) {\n+        final int length = end - begin;\n+        if (length == Lax.toString().length()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2ODk3NA==", "bodyText": "done", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400468974", "createdAt": "2020-03-30T20:20:29Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -447,6 +479,35 @@ public CharSequence subSequence(final int start, final int end) {\n         }\n     }\n \n+    @Nullable\n+    private static SameSite fromSequence(CharSequence cs, int begin, int end) {\n+        final int length = end - begin;\n+        if (length == Lax.toString().length()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzU1OA=="}, "originalCommit": {"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2633, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}