{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjgxMzQz", "number": 1153, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTowNjozN1rOEj450Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NDoxM1rOEj5WNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDY3OTIxOnYy", "diffSide": "RIGHT", "path": "servicetalk-examples/http/uds/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTowNjozN1rOHSgSfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTowNjozN1rOHSgSfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NTQzNw==", "bodyText": "Please update the copyright year in all files to 2020.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489165437", "createdAt": "2020-09-16T05:06:37Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/http/uds/build.gradle", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright \u00a9 2019 Apple Inc. and the ServiceTalk project authors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDY5OTgyOnYy", "diffSide": "RIGHT", "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToxNzo1OVrOHSgekQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo0NToxMFrOHS5hQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ==", "bodyText": "May be in a separate PR: can you please remove get prefix from DomainSocketAddress#getPath() method for consistency with other API?", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489168529", "createdAt": "2020-09-16T05:17:59Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.http.netty.HttpServers;\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+\n+import static io.servicetalk.examples.http.uds.blocking.UdsUtils.udsAddress;\n+import static io.servicetalk.http.api.HttpSerializationProviders.textSerializer;\n+\n+/**\n+ * <a href=\"http://man7.org/linux/man-pages/man7/unix.7.html\">AF_UNIX socket</a> server example.\n+ */\n+public final class BlockingUdsServer {\n+    public static void main(String[] args) throws Exception {\n+        DomainSocketAddress udsAddress = udsAddress();\n+        try {\n+            HttpServers.forAddress(udsAddress)\n+                    .listenBlockingAndAwait((ctx, request, responseFactory) ->\n+                            responseFactory.ok().payloadBody(\"Hello World!\", textSerializer()))\n+                    .awaitShutdown();\n+        } finally {\n+            new File(udsAddress.getPath()).delete(); // After the server is done, clean up the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3Njc1NQ==", "bodyText": "Separate PR, I'm not sure this is worth breaking APIs over.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489576755", "createdAt": "2020-09-16T16:41:41Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.http.netty.HttpServers;\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+\n+import static io.servicetalk.examples.http.uds.blocking.UdsUtils.udsAddress;\n+import static io.servicetalk.http.api.HttpSerializationProviders.textSerializer;\n+\n+/**\n+ * <a href=\"http://man7.org/linux/man-pages/man7/unix.7.html\">AF_UNIX socket</a> server example.\n+ */\n+public final class BlockingUdsServer {\n+    public static void main(String[] args) throws Exception {\n+        DomainSocketAddress udsAddress = udsAddress();\n+        try {\n+            HttpServers.forAddress(udsAddress)\n+                    .listenBlockingAndAwait((ctx, request, responseFactory) ->\n+                            responseFactory.ok().payloadBody(\"Hello World!\", textSerializer()))\n+                    .awaitShutdown();\n+        } finally {\n+            new File(udsAddress.getPath()).delete(); // After the server is done, clean up the file.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3ODgxOA==", "bodyText": "Sounds good, looks like DomainSocketAddress was not useful before this PR, should be ok to change API.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489578818", "createdAt": "2020-09-16T16:45:10Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.http.netty.HttpServers;\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+\n+import static io.servicetalk.examples.http.uds.blocking.UdsUtils.udsAddress;\n+import static io.servicetalk.http.api.HttpSerializationProviders.textSerializer;\n+\n+/**\n+ * <a href=\"http://man7.org/linux/man-pages/man7/unix.7.html\">AF_UNIX socket</a> server example.\n+ */\n+public final class BlockingUdsServer {\n+    public static void main(String[] args) throws Exception {\n+        DomainSocketAddress udsAddress = udsAddress();\n+        try {\n+            HttpServers.forAddress(udsAddress)\n+                    .listenBlockingAndAwait((ctx, request, responseFactory) ->\n+                            responseFactory.ok().payloadBody(\"Hello World!\", textSerializer()))\n+                    .awaitShutdown();\n+        } finally {\n+            new File(udsAddress.getPath()).delete(); // After the server is done, clean up the file.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDcxODc4OnYy", "diffSide": "RIGHT", "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToyNzoxOVrOHSgpdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjowMzoxM1rOHS380A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ==", "bodyText": "Consider using File#createTempFile instead of requiring a system property to simplify the example.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489171319", "createdAt": "2020-09-16T05:27:19Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public final class UdsUtils {\n+    /**\n+     * Create a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     * @return a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     */\n+    public static DomainSocketAddress udsAddress() {\n+        final String tempDirProp = \"java.io.tmpdir\";\n+        final String tempDir = System.getProperty(tempDirProp);\n+        if (tempDir == null) {\n+            throw new IllegalStateException(\"unable to find \" + tempDirProp + \" in System properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2MjcyMg==", "bodyText": "I believe a fixed name is needed, not a random one, the File#createTempFile wouldn't work in that case", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489262722", "createdAt": "2020-09-16T08:36:25Z", "author": {"login": "tkountis"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public final class UdsUtils {\n+    /**\n+     * Create a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     * @return a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     */\n+    public static DomainSocketAddress udsAddress() {\n+        final String tempDirProp = \"java.io.tmpdir\";\n+        final String tempDir = System.getProperty(tempDirProp);\n+        if (tempDir == null) {\n+            throw new IllegalStateException(\"unable to find \" + tempDirProp + \" in System properties\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MzEwNA==", "bodyText": "+1 to what @tkountis said. Random file name is not suitable for this use case. The system property is set by the JVM [1] and this code is just a bit defensive.\n[1] https://docs.oracle.com/javase/8/docs/api/java/lang/System.html", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489553104", "createdAt": "2020-09-16T16:03:13Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public final class UdsUtils {\n+    /**\n+     * Create a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     * @return a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     */\n+    public static DomainSocketAddress udsAddress() {\n+        final String tempDirProp = \"java.io.tmpdir\";\n+        final String tempDir = System.getProperty(tempDirProp);\n+        if (tempDir == null) {\n+            throw new IllegalStateException(\"unable to find \" + tempDirProp + \" in System properties\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDczMTg2OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTozNDoxNlrOHSgxTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0NDoyOFrOHS3JrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MzMyNw==", "bodyText": "Why the @Nullable required now?", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489173327", "createdAt": "2020-09-16T05:34:16Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -495,6 +495,7 @@ HttpExecutionStrategyInfluencer buildStrategyInfluencerForClient(HttpExecutionSt\n         return influencerChainBuilder.buildForClient(strategy);\n     }\n \n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MDAxMg==", "bodyText": "good call, not needed. was returning null at one point during development.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489540012", "createdAt": "2020-09-16T15:44:28Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -495,6 +495,7 @@ HttpExecutionStrategyInfluencer buildStrategyInfluencerForClient(HttpExecutionSt\n         return influencerChainBuilder.buildForClient(strategy);\n     }\n \n+    @Nullable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MzMyNw=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDc1MTg4OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NDoxM1rOHSg9gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0Mzo0OFrOHS3IFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NjQ1MQ==", "bodyText": "Should R extend SocketAddress?", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489176451", "createdAt": "2020-09-16T05:44:13Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -179,9 +179,9 @@ private DefaultSingleAddressHttpClientBuilder(@Nullable final U address,\n                 globalDnsServiceDiscoverer());\n     }\n \n-    static <U> DefaultSingleAddressHttpClientBuilder<U, InetSocketAddress> forResolvedAddress(\n-            final U u, final InetSocketAddress address) {\n-        ServiceDiscoverer<U, InetSocketAddress, ServiceDiscovererEvent<InetSocketAddress>> sd =\n+    static <U, R> DefaultSingleAddressHttpClientBuilder<U, R> forResolvedAddress(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzOTYwNg==", "bodyText": "done. somewhat on the fence if we need to take a dependency on the marker base class in our APIs, but we should be able to relax the generic constraints later if necessary.", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489539606", "createdAt": "2020-09-16T15:43:48Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -179,9 +179,9 @@ private DefaultSingleAddressHttpClientBuilder(@Nullable final U address,\n                 globalDnsServiceDiscoverer());\n     }\n \n-    static <U> DefaultSingleAddressHttpClientBuilder<U, InetSocketAddress> forResolvedAddress(\n-            final U u, final InetSocketAddress address) {\n-        ServiceDiscoverer<U, InetSocketAddress, ServiceDiscovererEvent<InetSocketAddress>> sd =\n+    static <U, R> DefaultSingleAddressHttpClientBuilder<U, R> forResolvedAddress(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NjQ1MQ=="}, "originalCommit": {"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2576, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}