{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjQ3NDQ3", "number": 1289, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOFHZc3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOFHZc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzAxMzQxOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/CancellableStack.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOII3onw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOII3onw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTAzOQ==", "bodyText": "queue -> stack?", "url": "https://github.com/apple/servicetalk/pull/1289#discussion_r546171039", "createdAt": "2020-12-19T01:31:26Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/CancellableStack.java", "diffHunk": "@@ -17,44 +17,46 @@\n \n import io.servicetalk.concurrent.Cancellable;\n \n-/**\n- * Provides a means to cascade a {@link #cancel()} call to other {@link Cancellable} objects.\n- */\n-interface DynamicCompositeCancellable extends Cancellable {\n+final class CancellableStack implements Cancellable {\n+    private final ConcurrentStack<Cancellable> queue = new ConcurrentStack<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de37665536516455eeecc0162fbd99db74681498"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2497, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}