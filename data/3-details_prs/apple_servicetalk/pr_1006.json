{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDQwMDk1", "number": 1006, "title": "`RoundRobinLoadBalancer` should compose connection closure with error response", "bodyText": "Motivation:\nDangling subscribes is usually a bad idea. As RRLB is not composing the\nsubscribe, it will still keep closing the connection after it returns a failure.\nWorse if the closure does not complete, it will keep this subscribe around\nforever (and so the resources associated with the subscribe).\nModification:\n\nCompose new connection closure with the Single.failed returned from\nflatMap;\nAdd a test to verify that new connection is closed if it's rejected by\nselector;\n\nResult:\nA new connection is closed before RRLB fails the returned Single from\nselectConnection.", "createdAt": "2020-04-07T05:05:26Z", "url": "https://github.com/apple/servicetalk/pull/1006", "merged": true, "mergeCommit": {"oid": "375601316f39c86eb1bc09a15b50877f8a7e928e"}, "closed": true, "closedAt": "2020-04-07T20:47:39Z", "author": {"login": "idelpivnitskiy"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVMGizAH2gAyNDAwMDQwMDk1Ojg4NzIwZTQ5MmY2OTA5Mjc0OTU1NzU3NTI2YWM2MjFjMDkzODAwYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVW8FhAH2gAyNDAwMDQwMDk1OmE0ZGE5ZGQxNDc0OGFkMWNjMWQ3YzNkZWQ0MzlhOTk1ODk5Y2EwNWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88720e492f6909274955757526ac621c093800b3", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/88720e492f6909274955757526ac621c093800b3", "committedDate": "2020-04-07T05:04:30Z", "message": "`RoundRobinLoadBalancer` should compose connection closure with error response\n\nMotivation:\n\nDangling subscribes are usually a bad idea. As RRLB is not composing the\nsubscribe, it will still keep closing the connection after it returns a failure.\nWorse if the closure does not complete, it will keep this subscribe around\nforever (and so the resources associated with the subscribe).\n\nModification:\n\n- Compose new connection closure with the `Single.failed` returned from\n`flatMap`;\n\nResult:\n\nNew connection is closed before RRLB fails the returned `Single` from\n`selectConnection`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4Nzg1OTc3", "url": "https://github.com/apple/servicetalk/pull/1006#pullrequestreview-388785977", "createdAt": "2020-04-07T05:06:14Z", "commit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNTowNjoxNVrOGBzAdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNTowNjoxNVrOGBzAdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzNzQ2Mg==", "bodyText": "I use needClose to keep the existing behavior. But because connection closure is idempotent we may simplify and always close it.", "url": "https://github.com/apple/servicetalk/pull/1006#discussion_r404537462", "createdAt": "2020-04-07T05:06:15Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -299,18 +298,20 @@ public void onComplete() {\n                                     break;\n                                 }\n                                 if (Host.connectionsUpdater.compareAndSet(host, existing, connectionRemoved)) {\n-                                    newCnx.closeAsync().subscribe();\n+                                    needClose = true;\n                                     break;\n                                 }\n                                 existing = connections;\n                             }\n \n-                            return failed(new IllegalStateException(\"LoadBalancer has closed\"));\n+                            final Single<C> lbClosed = failed(new IllegalStateException(\"LoadBalancer has closed\"));\n+                            return needClose ? newCnx.closeAsync().concat(lbClosed) : lbClosed;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzkzMjI4", "url": "https://github.com/apple/servicetalk/pull/1006#pullrequestreview-388793228", "createdAt": "2020-04-07T05:27:27Z", "commit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNToyNzoyN1rOGBzX5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNToyODowNFrOGBzYiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0MzQ2Mg==", "bodyText": "I think it is better to keep needClose since we are anyways doing the heavy-lifting to figure out who should close the connection anyways.", "url": "https://github.com/apple/servicetalk/pull/1006#discussion_r404543462", "createdAt": "2020-04-07T05:27:27Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -299,18 +298,20 @@ public void onComplete() {\n                                     break;\n                                 }\n                                 if (Host.connectionsUpdater.compareAndSet(host, existing, connectionRemoved)) {\n-                                    newCnx.closeAsync().subscribe();\n+                                    needClose = true;\n                                     break;\n                                 }\n                                 existing = connections;\n                             }\n \n-                            return failed(new IllegalStateException(\"LoadBalancer has closed\"));\n+                            final Single<C> lbClosed = failed(new IllegalStateException(\"LoadBalancer has closed\"));\n+                            return needClose ? newCnx.closeAsync().concat(lbClosed) : lbClosed;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzNzQ2Mg=="}, "originalCommit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0MzYyNA==", "bodyText": "Can you verify if we have a test that checks the connection is closed when we get the error?", "url": "https://github.com/apple/servicetalk/pull/1006#discussion_r404543624", "createdAt": "2020-04-07T05:28:04Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-loadbalancer/src/main/java/io/servicetalk/loadbalancer/RoundRobinLoadBalancer.java", "diffHunk": "@@ -277,18 +277,17 @@ public void onComplete() {\n                     // Invoke the selector before adding the connection to the pool, otherwise, connection can be used\n                     // concurrently and hence a new connection can be rejected by the selector.\n                     if (!selector.test(newCnx)) {\n-                        newCnx.closeAsync().subscribe();\n                         // Failure in selection could be temporary, hence add it to the queue and be consistent with the\n                         // fact that select failure does not close a connection.\n-                        return failed(new ConnectionRejectedException(\"Newly created connection \" + newCnx +\n-                                \" rejected by the selection filter.\"));\n+                        return newCnx.closeAsync().concat(failed(new ConnectionRejectedException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODM2ODk1", "url": "https://github.com/apple/servicetalk/pull/1006#pullrequestreview-388836895", "createdAt": "2020-04-07T07:06:10Z", "commit": {"oid": "88720e492f6909274955757526ac621c093800b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56620f8e88a81537621aafae2101e94913f280c7", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/56620f8e88a81537621aafae2101e94913f280c7", "committedDate": "2020-04-07T17:18:37Z", "message": "Add a test to verify that connection is closed by LB when selector rejects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4da9dd14748ad1cc1d7c3ded439a995899ca05d", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/a4da9dd14748ad1cc1d7c3ded439a995899ca05d", "committedDate": "2020-04-07T17:42:02Z", "message": "make checkstyle happy"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}