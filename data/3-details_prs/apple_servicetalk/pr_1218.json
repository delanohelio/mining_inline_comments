{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTAxMDU3", "number": 1218, "title": "Publisher#flatMapMerge recover from mapped Publisher exception", "bodyText": "Motivation:\nPublisher#flatMapMerge does not attempt to recover from throwing in\nonNext from a mapped publisher. In this case we should attempt to\nreplenish demand incase there is a recoverWith or similar operator\napplied to the mapped publisher, or else we may deadlock.\nModifications:\n\nFlatMapSubscriber should try to replenish demand even if onNext throws\nan exception\n\nResult:\nPublisher#flatMapMerge is compatible with recoverWith style operators on\nthe mapped publishers.", "createdAt": "2020-11-18T21:50:50Z", "url": "https://github.com/apple/servicetalk/pull/1218", "merged": true, "mergeCommit": {"oid": "62d9e44d528ddd420fe7e7eb78e1c88ac6d9e90f"}, "closed": true, "closedAt": "2020-11-19T00:38:13Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd1Ul7AH2gAyNTIzNTAxMDU3OmI2MDcwYWY5OGYxMDdmYzQ1ZGZkNTQ4OTI1YzYyNDFkYzI0NDk0NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd3qNHgFqTUzMzk5MDc2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6070af98f107fc45dfd548925c6241dc2449459", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/b6070af98f107fc45dfd548925c6241dc2449459", "committedDate": "2020-11-18T21:48:30Z", "message": "Publisher#flatMapMerge recover from mapped Publisher exception\n\nMotivation:\nPublisher#flatMapMerge does not attempt to recover from throwing in\nonNext from a mapped publisher. In this case we should attempt to\nreplenish demand incase there is a recoverWith or similar operator\napplied to the mapped publisher, or else we may deadlock.\n\nModifications:\n- FlatMapSubscriber should try to replenish demand even if onNext throws\nan exception\n\nResult:\nPublisher#flatMapMerge is compatible with recoverWith style operators on\nthe mapped publishers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzOTc2MDAz", "url": "https://github.com/apple/servicetalk/pull/1218#pullrequestreview-533976003", "createdAt": "2020-11-18T23:55:09Z", "commit": {"oid": "b6070af98f107fc45dfd548925c6241dc2449459"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1NTowOVrOH2HD5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1NTowOVrOH2HD5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMDgzOA==", "bodyText": "The ordering of events in this test is a bit confusing. results queue already has 21 before processor.onError(DELIBERATE_EXCEPTION) is invoked. Consider moving this check up if this is expected.\nWhy the concatenated cause is not delivered to mockSubscriber?", "url": "https://github.com/apple/servicetalk/pull/1218#discussion_r526500838", "createdAt": "2020-11-18T23:55:09Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-api/src/test/java/io/servicetalk/concurrent/api/PublisherFlatMapMergeTest.java", "diffHunk": "@@ -96,6 +105,43 @@ public static void afterClass() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void mappedRecoverMakesProgress() throws Exception {\n+        @SuppressWarnings(\"unchecked\")\n+        Subscriber<Integer> mockSubscriber = mock(Subscriber.class);\n+        CountDownLatch latchOnSubscribe = new CountDownLatch(1);\n+        CountDownLatch latchOnError = new CountDownLatch(1);\n+        AtomicReference<Throwable> causeRef = new AtomicReference<>();\n+        BlockingQueue<Integer> results = new ArrayBlockingQueue<>(10);\n+        doAnswer(a -> {\n+            Subscription s = a.getArgument(0);\n+            s.request(4);\n+            latchOnSubscribe.countDown();\n+            return null;\n+        }).when(mockSubscriber).onSubscribe(any(Subscription.class));\n+        doAnswer(a -> {\n+            causeRef.set(a.getArgument(0));\n+            latchOnError.countDown();\n+            return null;\n+        }).when(mockSubscriber).onError(any());\n+        doAnswer(a -> {\n+            results.add(a.getArgument(0));\n+            throw new DeliberateException();\n+        }).when(mockSubscriber).onNext(any());\n+\n+        Processor<Integer, Integer> processor = newPublisherProcessor();\n+        toSource(fromSource(processor).flatMapMergeDelayError(i -> from(i + 10).recoverWith(cause ->\n+                from(i + 20).concat(failed(cause))))).subscribe(mockSubscriber);\n+\n+        latchOnSubscribe.await();\n+        processor.onNext(1);\n+        assertThat(results.take(), is(11));\n+        processor.onError(DELIBERATE_EXCEPTION);\n+        assertThat(results.take(), is(21));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6070af98f107fc45dfd548925c6241dc2449459"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabfdb777eb5f95fabb1b39833fca0ef3f112a69", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/fabfdb777eb5f95fabb1b39833fca0ef3f112a69", "committedDate": "2020-11-19T00:10:43Z", "message": "adjust test assertion/ordering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzOTkwNzY0", "url": "https://github.com/apple/servicetalk/pull/1218#pullrequestreview-533990764", "createdAt": "2020-11-19T00:31:55Z", "commit": {"oid": "fabfdb777eb5f95fabb1b39833fca0ef3f112a69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}