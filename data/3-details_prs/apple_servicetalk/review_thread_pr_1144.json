{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzAwMzE1", "number": 1144, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozMjo1NlrOEh5Lvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxNjozOVrOEh5svw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTc1MzU4OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpClients.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozMjo1NlrOHPdtng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTozODo0M1rOHQDDsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NzUwMg==", "bodyText": "If the closeable is always emptyAsyncCloseable(), can we return Completable.completed() everywhere instead and avoid allocation of empty closeable?", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485977502", "createdAt": "2020-09-09T23:32:56Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpClients.java", "diffHunk": "@@ -292,11 +297,33 @@ private HttpClients() {\n      * @return new builder with provided configuration\n      */\n     public static <U, R> PartitionedHttpClientBuilder<U, R> forPartitionedAddress(\n-            final ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n+            final ServiceDiscoverer<U, R, PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n             final U address,\n             final Function<HttpRequestMetaData, PartitionAttributesBuilder> partitionAttributesBuilderFactory) {\n         return new DefaultPartitionedHttpClientBuilder<>(\n-                new DefaultSingleAddressHttpClientBuilder<>(address, serviceDiscoverer),\n-                partitionAttributesBuilderFactory);\n+                new DefaultSingleAddressHttpClientBuilder<>(address,\n+                        new ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>>() {\n+                            private final ListenableAsyncCloseable closeable = emptyAsyncCloseable();\n+\n+                            @Override\n+                            public Publisher<ServiceDiscovererEvent<R>> discover(final U u) {\n+                                return failed(new IllegalStateException(\"Invalid service discoverer.\"));\n+                            }\n+\n+                            @Override\n+                            public Completable onClose() {\n+                                return closeable.onClose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTM2Mw==", "bodyText": "emptyAsyncCloseable() makes sure that onClose() does not complete till the closeable is closed. Using completed() will violate that constraint.", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r486589363", "createdAt": "2020-09-10T19:38:43Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpClients.java", "diffHunk": "@@ -292,11 +297,33 @@ private HttpClients() {\n      * @return new builder with provided configuration\n      */\n     public static <U, R> PartitionedHttpClientBuilder<U, R> forPartitionedAddress(\n-            final ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n+            final ServiceDiscoverer<U, R, PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n             final U address,\n             final Function<HttpRequestMetaData, PartitionAttributesBuilder> partitionAttributesBuilderFactory) {\n         return new DefaultPartitionedHttpClientBuilder<>(\n-                new DefaultSingleAddressHttpClientBuilder<>(address, serviceDiscoverer),\n-                partitionAttributesBuilderFactory);\n+                new DefaultSingleAddressHttpClientBuilder<>(address,\n+                        new ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>>() {\n+                            private final ListenableAsyncCloseable closeable = emptyAsyncCloseable();\n+\n+                            @Override\n+                            public Publisher<ServiceDiscovererEvent<R>> discover(final U u) {\n+                                return failed(new IllegalStateException(\"Invalid service discoverer.\"));\n+                            }\n+\n+                            @Override\n+                            public Completable onClose() {\n+                                return closeable.onClose();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NzUwMg=="}, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTgyNTM2OnYy", "diffSide": "RIGHT", "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDowOTo1NFrOHPeWtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDowOTo1NFrOHPeWtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODAyMQ==", "bodyText": "We can also kill ? extends  in ctor argument (line 101) and in GroupedByPartitionSubscriber (lines 258, 278).", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988021", "createdAt": "2020-09-10T00:09:54Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -74,8 +75,7 @@\n          * @param psd the partitioned {@link ServiceDiscoverer}\n          * @return new client for the given arguments\n          */\n-        Client apply(PartitionAttributes pa,\n-                     ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> psd);\n+        Client apply(PartitionAttributes pa, ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>> psd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTgyOTc4OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxMjoxM1rOHPeZNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxMjoxM1rOHPeZNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODY2MQ==", "bodyText": "Kill ? extends here as well?", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988661", "createdAt": "2020-09-10T00:12:13Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -263,8 +252,9 @@ public StreamingHttpClient buildStreaming() {\n         // Track resources that potentially need to be closed when an exception is thrown during buildStreaming\n         final CompositeCloseable closeOnException = newCompositeCloseable();\n         try {\n-            final SdStatusCompletable sdStatus = new SdStatusCompletable();\n-            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents = ctx.discover(sdStatus);\n+\n+            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTgzODA3OnYy", "diffSide": "RIGHT", "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxNjozOVrOHPeeFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxNjozOVrOHPeeFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTkxMQ==", "bodyText": "Consider using Function.identity().", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485989911", "createdAt": "2020-09-10T00:16:39Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -181,7 +182,7 @@ public boolean test(PSDE evt) {\n                     }\n                     return acceptEvent;\n                 }\n-            }).beforeFinally(partition::closeNow);\n+            }).beforeFinally(partition::closeNow).map(psde -> psde);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2563, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}