{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTIzODEx", "number": 969, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0OTo0M1rODo89pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1NToyM1rODo9BIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjY4NDUyOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpRequestDecoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0OTo0M1rOF30o1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0OTo0M1rOF30o1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3ODQyMw==", "bodyText": "any reason not to use a ByteProcessor here to reduce calls to getByte?", "url": "https://github.com/apple/servicetalk/pull/969#discussion_r394078423", "createdAt": "2020-03-18T02:49:43Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpRequestDecoder.java", "diffHunk": "@@ -58,19 +62,27 @@ protected boolean isDecodingRequest() {\n \n     @Override\n     protected void handlePartialInitialLine(final ChannelHandlerContext ctx, final ByteBuf buffer) {\n-        final int len = min(3, buffer.readableBytes());\n-        for (int i = 0; i < len; ++i) {\n-            byte b = buffer.getByte(buffer.readerIndex() + i);\n-            if (b == ' ' && i > 0) {\n-                // If we find a space after at least one capital letter, accept this as valid.\n+        final int writerIndex = buffer.writerIndex();\n+        int readerIndex = buffer.readerIndex();\n+        if (readerIndex == writerIndex) {   // ByteBuf is not readable\n+            return;\n+        }\n+        byte b = buffer.getByte(readerIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27edd1890693f0a8f8d604513eda43a53b1d833d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjY4NjgyOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpRequestDecoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1MTowNlrOF30qJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1MTowNlrOF30qJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3ODc1OA==", "bodyText": "consider doing validation only for custom header names, most of the time we shouldn't have to do the validation because it is handled in the lookup (e.g. if it matches a cached entry it is upper case). It is worth paying the string conversion costs assuming most of the time we will get a valid string.", "url": "https://github.com/apple/servicetalk/pull/969#discussion_r394078758", "createdAt": "2020-03-18T02:51:06Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpRequestDecoder.java", "diffHunk": "@@ -79,17 +91,15 @@ protected HttpRequestMetaData createMessage(final ByteBuf buffer,\n                                                 final int firstStart, final int firstLength,\n                                                 final int secondStart, final int secondLength,\n                                                 final int thirdStart, final int thirdLength) {\n-        if (thirdLength < 0) {\n-            splitInitialLineError();\n-        }\n-\n         return newRequestMetaData(nettyBufferToHttpVersion(buffer, thirdStart, thirdLength),\n-                decodeHttpMethod(buffer.toString(firstStart, firstLength, US_ASCII)),\n+                decodeHttpMethod(buffer, firstStart, firstLength),\n                 buffer.toString(secondStart, secondLength, US_ASCII),\n                 headersFactory().newHeaders());\n     }\n \n-    private static HttpRequestMethod decodeHttpMethod(final String methodName) {\n+    private static HttpRequestMethod decodeHttpMethod(final ByteBuf buffer, final int start, final int length) {\n+        buffer.forEachByte(start, length, ENSURE_UPPER_CASE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27edd1890693f0a8f8d604513eda43a53b1d833d"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjY5MTAzOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpResponseDecoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1Mzo0N1rOF30s4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1Mzo0N1rOF30s4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3OTQ1Nw==", "bodyText": "nit: consider combining conditionals:\nif (value != HT && isISOControl(value) {\n  throw ...\n}\nreturn true;", "url": "https://github.com/apple/servicetalk/pull/969#discussion_r394079457", "createdAt": "2020-03-18T02:53:47Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpResponseDecoder.java", "diffHunk": "@@ -38,13 +41,23 @@\n import static io.servicetalk.http.api.HttpResponseStatus.SWITCHING_PROTOCOLS;\n import static io.servicetalk.http.api.HttpResponseStatus.StatusClass.INFORMATIONAL_1XX;\n import static io.servicetalk.transport.netty.internal.CloseHandler.UNSUPPORTED_PROTOCOL_CLOSE_HANDLER;\n+import static java.lang.Character.isISOControl;\n import static java.lang.Math.min;\n import static java.nio.charset.StandardCharsets.US_ASCII;\n import static java.util.Objects.requireNonNull;\n \n final class HttpResponseDecoder extends HttpObjectDecoder<HttpResponseMetaData> {\n \n     private static final byte[] FIRST_BYTES = \"HTTP\".getBytes(US_ASCII);\n+    private static final ByteProcessor ENSURE_NO_CONTROL_CHARS = value -> {\n+        if (value == HT) {\n+            return true;    // allow HTAB\n+        }\n+        if (isISOControl(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27edd1890693f0a8f8d604513eda43a53b1d833d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjY5MzQ0OnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpResponseDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo1NToyM1rOF30uZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDo0MToyOVrOF32K4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3OTg0Ng==", "bodyText": "https://tools.ietf.org/html/rfc7230#section-3.1.2\n\nA client SHOULD ignore the reason-phrase content.\n\nsad to waste cycles validating something that should be ignored \ud83d\ude22", "url": "https://github.com/apple/servicetalk/pull/969#discussion_r394079846", "createdAt": "2020-03-18T02:55:23Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpResponseDecoder.java", "diffHunk": "@@ -84,10 +97,19 @@ protected HttpResponseMetaData createMessage(final ByteBuf buffer, final int fir\n                                                  final int thirdStart, final int thirdLength) {\n         return newResponseMetaData(nettyBufferToHttpVersion(buffer, firstStart, firstLength),\n                 HttpResponseStatus.of(nettyBufferToStatusCode(buffer, secondStart, secondLength),\n-                        thirdLength >= 0 ? buffer.toString(thirdStart, thirdLength, US_ASCII) : \"\"),\n+                        reasonPhrase(buffer, thirdStart, thirdLength)),\n                 headersFactory().newHeaders());\n     }\n \n+    private static String reasonPhrase(final ByteBuf buffer, final int start, final int length) {\n+        if (length <= 0) {\n+            return EMPTY_STRING;\n+        }\n+        // Verify reason-phrase = *( HTAB / SP / VCHAR / obs-text )\n+        buffer.forEachByte(start, length, ENSURE_NO_CONTROL_CHARS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27edd1890693f0a8f8d604513eda43a53b1d833d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzUyMg==", "bodyText": "We can optimize the \"most-likely path\" of hitting the known status code if we will make HttpResponseStatus.valueOf(int) public. Right know, there is no cheap way to check if we already have a constant for the status-code because we always fallback to new HttpResponseStatus that is relatively expensive. We can do that in a follow up. Something like:\n\nCheck if the status-code is known.\nIf yes, return the constant. If no, do the validation and create a new HttpResponseStatus.", "url": "https://github.com/apple/servicetalk/pull/969#discussion_r394103522", "createdAt": "2020-03-18T04:41:29Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpResponseDecoder.java", "diffHunk": "@@ -84,10 +97,19 @@ protected HttpResponseMetaData createMessage(final ByteBuf buffer, final int fir\n                                                  final int thirdStart, final int thirdLength) {\n         return newResponseMetaData(nettyBufferToHttpVersion(buffer, firstStart, firstLength),\n                 HttpResponseStatus.of(nettyBufferToStatusCode(buffer, secondStart, secondLength),\n-                        thirdLength >= 0 ? buffer.toString(thirdStart, thirdLength, US_ASCII) : \"\"),\n+                        reasonPhrase(buffer, thirdStart, thirdLength)),\n                 headersFactory().newHeaders());\n     }\n \n+    private static String reasonPhrase(final ByteBuf buffer, final int start, final int length) {\n+        if (length <= 0) {\n+            return EMPTY_STRING;\n+        }\n+        // Verify reason-phrase = *( HTAB / SP / VCHAR / obs-text )\n+        buffer.forEachByte(start, length, ENSURE_NO_CONTROL_CHARS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3OTg0Ng=="}, "originalCommit": {"oid": "27edd1890693f0a8f8d604513eda43a53b1d833d"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2897, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}