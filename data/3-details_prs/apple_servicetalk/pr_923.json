{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTk5NzYw", "number": 923, "title": "WriteStreamSubscriber and WriteListener cleanup", "bodyText": "Motivation:\nThe WriteListener interface has grown over time and its naming conventions have\nbecome less clear. For example \"closeGracefully\" implies that some action is\nexpected to be taken to account for pending writes, but in reality this is just\na notification that the transport's outbound side has been closed and should be\ninterpreted accordingly by the implementation.\nModifications:\n\nRename WritableListener to ChannelOutboundListener. Rename method names on\nthis interface to indicate they are notification of channel events and\nimplementations can react however they need to.\nDefaultNettyConnectionTest writes a static buffer, but doesn't duplicate() on\neach use. The test now duplicates the buffer to avoid shared indexes.\nAvoid forcing error logs from WriteSingleSubscriber because the async\ncontrol flow has already been completed and the additional noise/overhead of the\nlog may not be necessary.\n\nResult:\nMore clarity around ChannelOutboundListener interfaces and implementations.", "createdAt": "2020-01-17T15:40:37Z", "url": "https://github.com/apple/servicetalk/pull/923", "merged": true, "mergeCommit": {"oid": "c4ab8877ace59689f67af2f4e4ad8e9bcb1939e1"}, "closed": true, "closedAt": "2020-02-25T05:48:41Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7QnUGgH2gAyMzY0MTk5NzYwOjk0ZGQwYWVjMzU0ZDExZTlkODNkMDVlYmM0NjA4ZDRlMDk5MDRjOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCDyAcAFqTM1NTM1NTc5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "94dd0aec354d11e9d83d05ebc4608d4e09904c94", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/94dd0aec354d11e9d83d05ebc4608d4e09904c94", "committedDate": "2020-01-17T15:37:53Z", "message": "WriteStreamSubscriber and WriteListener cleanup\n\nMotivation:\nThe WriteListener interface has grown over time and its naming conventions have\nbecome less clear. For example \"closeGracefully\" implies that some action is\nexpected to be taken to account for pending writes, but in reality this is just\na notification that the transport's outbound side has been closed and should be\ninterpreted accordingly by the implementation.\nThe CloseHandler introduced a new class and public static variable which is\nintended for use in the http/2.0 codec. However the CloseHandler isn't protocol\nspecific and the naming of this class implies an inverted dependency\nrelationship.\n\nModifications:\n- Rename WritableListener to ChannelOutboundListener. Rename method names on\nthis interface to indicate they are notification of channel events and\nimplementations can react however they need to.\n- Rename H2ProtocolHandler to ProtocolOutboundCloseEventHandler to be more\nagnositc to specific protocols which may use this class and associated public\nstatic singleton instance.\n- DefaultNettyConnectionTest writes a static buffer, but doesn't duplicate() on\neach use. The test now duplicates the buffer to avoid shared indexes.\n- Avoid forcing error logs from WriteSingleSubscriber because the async\ncontrol flow has already been completed and the additional noise/overhead of the\nlog may not be necessary.\n\nResult:\nMore clarity around ChannelOutboundListener interfaces and implementations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d580f8419590521cc90ce0e066e53e6385c15423", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/d580f8419590521cc90ce0e066e53e6385c15423", "committedDate": "2020-01-17T15:43:21Z", "message": "flip copare order on TRAILERs to avoid potential NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1638ff22a7f630a8b958e1db5119fea700ef72e4", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/1638ff22a7f630a8b958e1db5119fea700ef72e4", "committedDate": "2020-01-17T16:21:52Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzExNjQx", "url": "https://github.com/apple/servicetalk/pull/923#pullrequestreview-344711641", "createdAt": "2020-01-17T16:54:42Z", "commit": {"oid": "1638ff22a7f630a8b958e1db5119fea700ef72e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNjo1NDo0MlrOFe_L6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNjo1NDo0MlrOFe_L6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzNjg0MQ==", "bodyText": "We call this method when we receive ProtocolPayloadEndEvent.OUTBOUND which is different than channel outbound closed. I am not convinced this is the correct nomenclature here.\nFrom the perspective of a write, outbound closure is the only interesting event and we intentionally wanted to remove the older approach of handling outbound closure and channel closure differently. Although this renaming does not alter behavior but it has the potential of adding confusion that outbound closure and full channel closure should be handled differently.", "url": "https://github.com/apple/servicetalk/pull/923#discussion_r368036841", "createdAt": "2020-01-17T16:54:42Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "diffHunk": "@@ -459,37 +464,34 @@ public FlushStrategy defaultFlushStrategy() {\n         void channelWritable();\n \n         /**\n-         * Close the channel after the pending writes complete.\n-         *\n+         * Notification that the channel's outbound side has been closed and will no longer accept writes.s\n          * <p>\n-         * Calling {@link #close(Throwable)} after {@link #closeGracefully()} will be ignored.\n-         * <p>\n-         * This event is expected be called from the eventloop.\n+         * Always called from the event loop thread.\n          */\n-        void closeGracefully();\n+        void channelOutboundClosed();\n \n         /**\n          * Notification that the channel has been closed.\n          * <p>\n-         * This may not always be called from the event loop. For example if the channel is closed when a new write\n-         * happens then this method will be called from the writer thread.\n+         * This may not always be called from the event loop thread. For example if the channel is closed when a new\n+         * write happens then this method will be called from the writer thread.\n          *\n          * @param closedException the exception which describes the close rational.\n          */\n-        void close(Throwable closedException);\n+        void channelClosed(Throwable closedException);\n     }\n \n-    private static final class NoopWritableListener implements WritableListener {\n+    private static final class NoopChannelOutboundListener implements ChannelOutboundListener {\n         @Override\n         public void channelWritable() {\n         }\n \n         @Override\n-        public void closeGracefully() {\n+        public void channelOutboundClosed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1638ff22a7f630a8b958e1db5119fea700ef72e4"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzU1Nzk2", "url": "https://github.com/apple/servicetalk/pull/923#pullrequestreview-355355796", "createdAt": "2020-02-07T18:38:16Z", "commit": {"oid": "1638ff22a7f630a8b958e1db5119fea700ef72e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}