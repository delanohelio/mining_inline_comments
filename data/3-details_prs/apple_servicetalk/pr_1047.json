{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjQyNzA1", "number": 1047, "title": "Publisher#flatMapMergeSingle avoid queue if no concurrency", "bodyText": "Motivation:\nPublisher#flatMapMergeSingle currently enqueues all signals before\nemitting to the downstream Subscriber. Going through the queue leverages\nthe concurrency controls around the queue to prevent concurrent\nemissions and also provides an ordering of emissions. The ordering of\nemissions is only necessary for terminal completion events to ensure we\nprocess all outstanding signals before terminating, and otherwise there\nis no ordering requirements between independent mapped Singles.\nModifications:\n\nadd PublisherFlatMapSingle#tryEmitSignal which supports a fast path\nfor direct emission without going through the queue if there is no\nconcurrency detected.\n\nResult:\nPublisher#flatMapMergeSingle uses less memory and avoids queuing signals\nif no concurrency.", "createdAt": "2020-05-09T23:09:31Z", "url": "https://github.com/apple/servicetalk/pull/1047", "merged": true, "mergeCommit": {"oid": "ec3d9d8089a0b0f7359410412272c5c2c95e7490"}, "closed": true, "closedAt": "2020-05-21T00:26:23Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgqGX7AH2gAyNDE1NjQyNzA1OjAzMGFmZGMyOGI4OWFlNWEyZGQ5MDAwZTc3NzQxYjdlNDkwNjY2MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci-hiNgH2gAyNDE1NjQyNzA1OmYxYmUwNzhmMjE1YjY0NTI0NGQxMTBkYWI3YTE0ODM2MzQwOWE0MWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "030afdc28b89ae5a2dd9000e77741b7e49066633", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/030afdc28b89ae5a2dd9000e77741b7e49066633", "committedDate": "2020-05-12T20:14:38Z", "message": "Publisher#flatMapMergeSingle avoid queue if no concurrency\n\nMotivation:\nPublisher#flatMapMergeSingle currently enqueues all signals before\nemitting to the downstream Subscriber. Going through the queue leverages\nthe concurrency controls around the queue to prevent concurrent\nemissions and also provides an ordering of emissions. The ordering of\nemissions is only necessary for terminal completion events to ensure we\nprocess all outstanding signals before terminating, and otherwise there\nis no ordering requirements between independent mapped Singles.\n\nModifications:\n- add PublisherFlatMapSingle#tryEmitSignal which supports a fast path\nfor direct emission without going through the queue if there is no\nconcurrency detected.\n\nResult:\nPublisher#flatMapMergeSingle uses less memory and avoids queuing signals\nif no concurrency."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1553697bf78842e57a24e6ee3d8d3c1cac24077", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/b1553697bf78842e57a24e6ee3d8d3c1cac24077", "committedDate": "2020-05-09T20:57:16Z", "message": "Publisher#flatMapMergeSingle avoid queue if no concurrency\n\nMotivation:\nPublisher#flatMapMergeSingle currently enqueues all signals before\nemitting to the downstream Subscriber. Going through the queue leverages\nthe concurrency controls around the queue to prevent concurrent\nemissions and also provides an ordering of emissions. The ordering of\nemissions is only necessary for terminal completion events to ensure we\nprocess all outstanding signals before terminating, and otherwise there\nis no ordering requirements between independent mapped Singles.\n\nModifications:\n- add PublisherFlatMapSingle#tryEmitSignal which supports a fast path\nfor direct emission without going through the queue if there is no\nconcurrency detected.\n\nResult:\nPublisher#flatMapMergeSingle uses less memory and avoids queuing signals\nif no concurrency."}, "afterCommit": {"oid": "030afdc28b89ae5a2dd9000e77741b7e49066633", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/030afdc28b89ae5a2dd9000e77741b7e49066633", "committedDate": "2020-05-12T20:14:38Z", "message": "Publisher#flatMapMergeSingle avoid queue if no concurrency\n\nMotivation:\nPublisher#flatMapMergeSingle currently enqueues all signals before\nemitting to the downstream Subscriber. Going through the queue leverages\nthe concurrency controls around the queue to prevent concurrent\nemissions and also provides an ordering of emissions. The ordering of\nemissions is only necessary for terminal completion events to ensure we\nprocess all outstanding signals before terminating, and otherwise there\nis no ordering requirements between independent mapped Singles.\n\nModifications:\n- add PublisherFlatMapSingle#tryEmitSignal which supports a fast path\nfor direct emission without going through the queue if there is no\nconcurrency detected.\n\nResult:\nPublisher#flatMapMergeSingle uses less memory and avoids queuing signals\nif no concurrency."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyODA4OTQ2", "url": "https://github.com/apple/servicetalk/pull/1047#pullrequestreview-412808946", "createdAt": "2020-05-15T16:47:41Z", "commit": {"oid": "030afdc28b89ae5a2dd9000e77741b7e49066633"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo0Nzo0MVrOGWMa7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjo0Nzo0MVrOGWMa7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyNTM1OQ==", "bodyText": "Do we care about requesting more if sendToTarget() failed? I think we can do without this finally block:\ntry {\n    sendToTarget(item);\n    doDrainPostProcessing(1);\n} finally {", "url": "https://github.com/apple/servicetalk/pull/1047#discussion_r425925359", "createdAt": "2020-05-15T16:47:41Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -248,6 +248,24 @@ private boolean onError0(Throwable throwable, boolean overrideComplete,\n             return false;\n         }\n \n+        private void tryEmitItem(final Object item) {\n+            if (tryAcquireLock(emittingUpdater, this)) { // fast path. no concurrency, avoid the queue and emit.\n+                try {\n+                    try {\n+                        sendToTarget(item);\n+                    } finally {\n+                        doDrainPostProcessing(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030afdc28b89ae5a2dd9000e77741b7e49066633"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1be078f215b645244d110dab7a148363409a41e", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/f1be078f215b645244d110dab7a148363409a41e", "committedDate": "2020-05-20T01:10:15Z", "message": "avoid doDrainPostProcessing if exception"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3683, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}