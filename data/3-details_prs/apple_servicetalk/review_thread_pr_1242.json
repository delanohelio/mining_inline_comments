{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODAzMzQ2", "number": 1242, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo0OTo1MlrOFB9PeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo0OTo1MlrOFB9PeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTk2MjgwOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-router-jersey/src/main/java/io/servicetalk/http/router/jersey/DefaultJerseyStreamingHttpRouter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo0OTo1MlrOIA31_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzoyOTozMFrOIA_raQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NTg1Mg==", "bodyText": "Exception msg may leak some server details, which is hard to control if this try block changes in future. Consider logging the exception and generating a response without payload body. Alternatively, consider catching only specific exception types relevant to URI.", "url": "https://github.com/apple/servicetalk/pull/1242#discussion_r537785852", "createdAt": "2020-12-07T19:49:52Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-router-jersey/src/main/java/io/servicetalk/http/router/jersey/DefaultJerseyStreamingHttpRouter.java", "diffHunk": "@@ -202,9 +207,23 @@ private void handle0(final HttpServiceContext serviceCtx, final StreamingHttpReq\n             requestUriBuilder.append(requestTarget);\n         }\n \n+        final URI baseURI;\n+        final URI requestURI;\n+        try {\n+            baseURI = URI.create(baseUri.toString());\n+            requestURI = URI.create(requestUriBuilder.toString());\n+        } catch (Throwable cause) {\n+            Buffer message = serviceCtx.executionContext().bufferAllocator().fromAscii(cause.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNDIxNw==", "bodyText": "I'll refine/narrow the exceptions type", "url": "https://github.com/apple/servicetalk/pull/1242#discussion_r537914217", "createdAt": "2020-12-07T23:29:30Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-router-jersey/src/main/java/io/servicetalk/http/router/jersey/DefaultJerseyStreamingHttpRouter.java", "diffHunk": "@@ -202,9 +207,23 @@ private void handle0(final HttpServiceContext serviceCtx, final StreamingHttpReq\n             requestUriBuilder.append(requestTarget);\n         }\n \n+        final URI baseURI;\n+        final URI requestURI;\n+        try {\n+            baseURI = URI.create(baseUri.toString());\n+            requestURI = URI.create(requestUriBuilder.toString());\n+        } catch (Throwable cause) {\n+            Buffer message = serviceCtx.executionContext().bufferAllocator().fromAscii(cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NTg1Mg=="}, "originalCommit": {"oid": "59e1b0a24082ea9bf0e10f8baa48b1e0dc83c666"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2471, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}