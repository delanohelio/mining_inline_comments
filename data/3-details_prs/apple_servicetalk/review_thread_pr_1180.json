{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMDM2NTY3", "number": 1180, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNTo1NlrOEuOFBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNTo1NlrOEuOFBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTAwNjEzOnYy", "diffSide": "RIGHT", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/GracefulConnectionClosureHandlingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNTo1NlrOHie4WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNTo1NlrOHie4WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxOTU3Ng==", "bodyText": "this is an unfortunate side effect of error handling being coupled to the close handler. we should consider a followup effort to preserve the exception.", "url": "https://github.com/apple/servicetalk/pull/1180#discussion_r505919576", "createdAt": "2020-10-15T23:25:56Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/GracefulConnectionClosureHandlingTest.java", "diffHunk": "@@ -479,6 +497,10 @@ private void assertClosedChannelException(ThrowingRunnable runnable, CloseEvent\n         Exception e = assertThrows(ExecutionException.class, runnable);\n         Throwable cause = e.getCause();\n         assertThat(cause, instanceOf(ClosedChannelException.class));\n+        if (protocol == HTTP_2) {\n+            // HTTP/2 does not enhance ClosedChannelException with CloseEvent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abaa57e51a46c6bef4adee941147898fd484c24"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2601, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}