{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzAwMTMw", "number": 1117, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNTowNlrOEVntPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNTowNlrOEVntPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTA2MTExOnYy", "diffSide": "LEFT", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoxNTowNlrOG8e01w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDozODowM1rOG8fN9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mjc5MQ==", "bodyText": "can you clarify why the cast approach is used here?", "url": "https://github.com/apple/servicetalk/pull/1117#discussion_r466072791", "createdAt": "2020-08-06T00:15:06Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java", "diffHunk": "@@ -114,8 +117,7 @@\n     @Override\n     public MultiAddressHttpClientBuilder<U, R> appendClientFilter(final Predicate<StreamingHttpRequest> predicate,\n                                                                   final StreamingHttpClientFilterFactory factory) {\n-        super.appendClientFilter(predicate, factory);\n-        return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e91731f8555b9a9ff86b44051ecdb481deca5c7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3OTIyMA==", "bodyText": "Just wanted to make it consistent to the approach we use in other places:\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java\n    \n    \n         Line 84\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (MultiAddressHttpClientBuilder<U, R>) super.appendConnectionFilter(predicate, factory); \n        \n    \n  \n\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/BaseSingleAddressHttpClientBuilder.java\n    \n    \n         Line 57\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (BaseSingleAddressHttpClientBuilder<U, R, SDE>) super.appendConnectionFilter(predicate, factory); \n        \n    \n  \n\n\n\n  \n    \n      servicetalk/servicetalk-http-api/src/main/java/io/servicetalk/http/api/PartitionedHttpClientBuilder.java\n    \n    \n        Lines 74 to 75\n      in\n      05c28f8\n    \n    \n    \n    \n\n        \n          \n           return (PartitionedHttpClientBuilder<U, R>) \n        \n\n        \n          \n                   super.appendConnectionFilter(predicate, factory);", "url": "https://github.com/apple/servicetalk/pull/1117#discussion_r466079220", "createdAt": "2020-08-06T00:38:03Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/MultiAddressHttpClientBuilder.java", "diffHunk": "@@ -114,8 +117,7 @@\n     @Override\n     public MultiAddressHttpClientBuilder<U, R> appendClientFilter(final Predicate<StreamingHttpRequest> predicate,\n                                                                   final StreamingHttpClientFilterFactory factory) {\n-        super.appendClientFilter(predicate, factory);\n-        return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mjc5MQ=="}, "originalCommit": {"oid": "8e91731f8555b9a9ff86b44051ecdb481deca5c7"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2529, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}