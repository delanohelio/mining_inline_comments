{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzg2ODA1", "number": 1012, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToxNjo1NVrOD4LHEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTozMDozOFrOD4LYHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjI4ODgzOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToxNjo1NVrOGO28Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToxNjo1NVrOGO28Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzMzM5MQ==", "bodyText": "prevActivePublishers -> prevActiveSingles", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418233391", "createdAt": "2020-04-30T19:16:55Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -193,16 +192,42 @@ public void onError(Throwable t) {\n \n         @Override\n         public void onComplete() {\n-            // active must be checked after setting the terminal event, because they are accessed in the reverse way in\n-            // FlatMapSingleSubscriber and if it were reversed here the FlatMapSingleSubscriber would be racy and may\n-            // not detect the terminal event.\n-            if (trySetTerminal(complete(), false, terminalNotificationUpdater, this) && active == 0) {\n-                // Since onComplete and onNext can not be concurrent and onNext must not be invoked post onComplete,\n-                // if we see active == 0 here, active must not change after this.\n+            // Setting terminal must be done before terminateActiveMappedSources to ensure visibility of the terminal.\n+            final boolean setTerminal = trySetTerminal(complete(), false, terminalNotificationUpdater, this);\n+            final boolean allSourcesTerminated = terminateActiveMappedSources();\n+            if (setTerminal && allSourcesTerminated) {\n                 enqueueAndDrain(complete());\n             }\n         }\n \n+        private boolean terminateActiveMappedSources() {\n+            for (;;) {\n+                final int prevActiveMappedSources = activeMappedSources;\n+                // Should always be >= 0, but just in case there is a bug in user code that results in multiple terminal\n+                // events we avoid corrupting our internal state.\n+                if (prevActiveMappedSources < 0 || activeMappedSourcesUpdater.compareAndSet(this,\n+                        prevActiveMappedSources, -prevActiveMappedSources)) {\n+                    return prevActiveMappedSources == 0;\n+                }\n+            }\n+        }\n+\n+        private boolean decrementActiveMappedSources() {\n+            for (;;) {\n+                final int prevActivePublishers = activeMappedSources;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjMyNTMzOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToyODoxOVrOGO3THw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyNzo0OVrOGO8gkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzOTI2Mw==", "bodyText": "Is this comment saying that prevActiveMappedSources should always be >= 0? We are setting it to -prevActiveMappedSources, so this is confusing. Maybe just elaborate more like:\n// prevActiveMappedSources >= 0 if only a single terminal event is received (expected)\n// prevActiveMappedSources < 0 if multiple terminal events are received (unexpected)\n// We return true only for the first terminal event.", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418239263", "createdAt": "2020-04-30T19:28:19Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -193,16 +192,42 @@ public void onError(Throwable t) {\n \n         @Override\n         public void onComplete() {\n-            // active must be checked after setting the terminal event, because they are accessed in the reverse way in\n-            // FlatMapSingleSubscriber and if it were reversed here the FlatMapSingleSubscriber would be racy and may\n-            // not detect the terminal event.\n-            if (trySetTerminal(complete(), false, terminalNotificationUpdater, this) && active == 0) {\n-                // Since onComplete and onNext can not be concurrent and onNext must not be invoked post onComplete,\n-                // if we see active == 0 here, active must not change after this.\n+            // Setting terminal must be done before terminateActiveMappedSources to ensure visibility of the terminal.\n+            final boolean setTerminal = trySetTerminal(complete(), false, terminalNotificationUpdater, this);\n+            final boolean allSourcesTerminated = terminateActiveMappedSources();\n+            if (setTerminal && allSourcesTerminated) {\n                 enqueueAndDrain(complete());\n             }\n         }\n \n+        private boolean terminateActiveMappedSources() {\n+            for (;;) {\n+                final int prevActiveMappedSources = activeMappedSources;\n+                // Should always be >= 0, but just in case there is a bug in user code that results in multiple terminal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyNDYyNQ==", "bodyText": "good point. I'll simplify to an asset and clarify the comment.", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418324625", "createdAt": "2020-04-30T22:27:49Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -193,16 +192,42 @@ public void onError(Throwable t) {\n \n         @Override\n         public void onComplete() {\n-            // active must be checked after setting the terminal event, because they are accessed in the reverse way in\n-            // FlatMapSingleSubscriber and if it were reversed here the FlatMapSingleSubscriber would be racy and may\n-            // not detect the terminal event.\n-            if (trySetTerminal(complete(), false, terminalNotificationUpdater, this) && active == 0) {\n-                // Since onComplete and onNext can not be concurrent and onNext must not be invoked post onComplete,\n-                // if we see active == 0 here, active must not change after this.\n+            // Setting terminal must be done before terminateActiveMappedSources to ensure visibility of the terminal.\n+            final boolean setTerminal = trySetTerminal(complete(), false, terminalNotificationUpdater, this);\n+            final boolean allSourcesTerminated = terminateActiveMappedSources();\n+            if (setTerminal && allSourcesTerminated) {\n                 enqueueAndDrain(complete());\n             }\n         }\n \n+        private boolean terminateActiveMappedSources() {\n+            for (;;) {\n+                final int prevActiveMappedSources = activeMappedSources;\n+                // Should always be >= 0, but just in case there is a bug in user code that results in multiple terminal", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzOTI2Mw=="}, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjMzMjQ0OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTozMDozOFrOGO3Xuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyNTo0OFrOGO8dEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MDQ0Mw==", "bodyText": "Since we are setting a negative value to this variable; should we instead use:\nactiveMappedSourcesUpdater.accumulateAndGet(this, 1, (prev, next) -> prev >= 0 ? prev + next : prev);", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418240443", "createdAt": "2020-04-30T19:30:38Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -180,7 +179,7 @@ public void onNext(T t) {\n             // If we are cancelled the activeUpdater count is best effort depending upon which sources finish. This best\n             // effort behavior mimics the semantics of cancel though so we don't take any special action to try to\n             // adjust the count or prematurely terminate.\n-            activeUpdater.incrementAndGet(this);\n+            activeMappedSourcesUpdater.incrementAndGet(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMzcyOQ==", "bodyText": "good question. activeMappedSources is set to a negative value in this Subscriber's onComplete method, so onNext should not see a negative value and I'll add an assert to clarify expectations.", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418323729", "createdAt": "2020-04-30T22:25:48Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -180,7 +179,7 @@ public void onNext(T t) {\n             // If we are cancelled the activeUpdater count is best effort depending upon which sources finish. This best\n             // effort behavior mimics the semantics of cancel though so we don't take any special action to try to\n             // adjust the count or prematurely terminate.\n-            activeUpdater.incrementAndGet(this);\n+            activeMappedSourcesUpdater.incrementAndGet(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MDQ0Mw=="}, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2684, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}