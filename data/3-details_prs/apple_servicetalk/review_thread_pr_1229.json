{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MTgyMjU0", "number": 1229, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxOTo1OTo0M1rOE745qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDowMDoxNVrOE7451A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjMzNzA2OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherConcatMapIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxOTo1OTo0M1rOH3w_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDo1MzoyNlrOH4lOjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjUwNw==", "bodyText": "this is a change to real code, caught by updating the test utilities.", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r528236507", "createdAt": "2020-11-21T19:59:43Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherConcatMapIterable.java", "diffHunk": "@@ -172,17 +177,22 @@ private void tryDrainIterator(ErrorHandlingStrategyInDrain errorHandlingStrategy\n                         switch (errorHandlingStrategyInDrain) {\n                             case PropagateAndCancel:\n                                 terminated = true;\n-                                doCancel();\n                                 safeOnError(target, cause);\n+                                doCancel();\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Propagate:\n                                 terminated = true;\n                                 safeOnError(target, cause);\n+                                tryClose(currentIterator);\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Throw:\n                                 // since we only request 1 at a time we maybe holding requestN demand, in this case we\n                                 // discard the current iterator and request 1 more from upstream (if there is demand).\n                                 hasNext = false;\n+                                thrown = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07133e14b10da963171b6db907727b747a4d5688"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MjIzOQ==", "bodyText": "moved to #1231", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r529092239", "createdAt": "2020-11-24T00:53:26Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherConcatMapIterable.java", "diffHunk": "@@ -172,17 +177,22 @@ private void tryDrainIterator(ErrorHandlingStrategyInDrain errorHandlingStrategy\n                         switch (errorHandlingStrategyInDrain) {\n                             case PropagateAndCancel:\n                                 terminated = true;\n-                                doCancel();\n                                 safeOnError(target, cause);\n+                                doCancel();\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Propagate:\n                                 terminated = true;\n                                 safeOnError(target, cause);\n+                                tryClose(currentIterator);\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Throw:\n                                 // since we only request 1 at a time we maybe holding requestN demand, in this case we\n                                 // discard the current iterator and request 1 more from upstream (if there is demand).\n                                 hasNext = false;\n+                                thrown = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjUwNw=="}, "originalCommit": {"oid": "07133e14b10da963171b6db907727b747a4d5688"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjMzNzQ4OnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/SingleConcatWithPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDowMDoxNVrOH3xAEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDozNzoyNFrOH4k5hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjU2Mw==", "bodyText": "this is a change in real code, caught by test utility updates", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r528236563", "createdAt": "2020-11-21T20:00:15Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/SingleConcatWithPublisher.java", "diffHunk": "@@ -120,20 +120,22 @@ public void request(long n) {\n                 if (oldVal == REQUESTED || oldVal == CANCELLED) {\n                     super.request(n);\n                     break;\n+                } else if (!isRequestNValid(n)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07133e14b10da963171b6db907727b747a4d5688"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4Njg1Mg==", "bodyText": "moved to #1230", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r529086852", "createdAt": "2020-11-24T00:37:24Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/SingleConcatWithPublisher.java", "diffHunk": "@@ -120,20 +120,22 @@ public void request(long n) {\n                 if (oldVal == REQUESTED || oldVal == CANCELLED) {\n                     super.request(n);\n                     break;\n+                } else if (!isRequestNValid(n)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjU2Mw=="}, "originalCommit": {"oid": "07133e14b10da963171b6db907727b747a4d5688"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2452, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}