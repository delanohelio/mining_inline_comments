{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODg1ODUw", "number": 1177, "title": "Do not abort server write if the CloseEvent is already registered", "bodyText": "Motivation:\nIf a server receives a request with Connection: close header, it registers\nPROTOCOL_CLOSING_INBOUND event and transitions to the CLOSING state.\nThis event can be observed before the server connection started processing\nrequests. As the result, server's write stream fails and does not let the server\nrespond.\nThis use-case happens frequently when TLSv1.3 is used, because a client\nstarts sending data before the server completes TLS handshake. Therefore,\nthe first request can be pending before the server connection is established.\nA similar scenario (request received before processing starts, closing state\nwaits for the response) may occur with graceful closure or\nCHANNEL_CLOSED_INBOUND event (client half-closes the connection\nafter a request is sent).\nModifications:\n\nAbort new writes only on the client-side in DefaultNettyConnection;\nAdd tests that reproduce described behavior;\n\nResult:\nServer initializes request-response processing and responds to the already\nreceived request.", "createdAt": "2020-10-13T21:49:19Z", "url": "https://github.com/apple/servicetalk/pull/1177", "merged": true, "mergeCommit": {"oid": "573c998af00ce4dff515bf9c3408fed29b46ebe6"}, "closed": true, "closedAt": "2020-10-14T22:00:24Z", "author": {"login": "idelpivnitskiy"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSPvKrAH2gAyNTAyODg1ODUwOjYxNWY5ZmJlNjgwODdkNzI1NzEzMmM4ODRjNjIxM2MxMjk0NjhlOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSjoa9AH2gAyNTAyODg1ODUwOjNiYmI3MjlmYjBkNjkyODcyYWM3NWUyNWNmZjJmMDZjNmNlZDUwNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "615f9fbe68087d7257132c884c6213c129468e99", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/615f9fbe68087d7257132c884c6213c129468e99", "committedDate": "2020-10-13T21:47:58Z", "message": "Do not abort server write if the CloseEvent is already registered\n\nMotivation:\n\nIf a server receives a request with `Connection: close` header, it registers\n`PROTOCOL_CLOSING_INBOUND` event and transitions to the `CLOSING` state.\nThis event can be observed before the server connection started processing\nrequests. As the result, server's write stream fails and does not let the server\nrespond.\nThis use-case happens frequently when `TLSv1.3` is used, because a client\nstarts sending data before the server completes TLS handshake. Therefore,\nthe first request can be pending before the server connection is established.\nA similar scenario (request received before processing starts, closing state\nwaits for the response) may occur with graceful closure or\n`CHANNEL_CLOSED_INBOUND` event (client half-closes the connection\nafter a request is sent).\n\nModifications:\n\n- Defer delivering the `CloseEvent` from `CloseHandler` until the connection\nnotifies that the read-write stream is initialized for the `Channel`;\n- Add tests that reproduce described behavior;\n- Enhance `RequestResponseCloseHandlerTest` to verify that the `CloseEvent`\nis delivered as soon as `notifyConnected` is invoked;\n\nResult:\n\nServer initializes request-response processing and responds to the already\nreceived request."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "875237b539ff6ccb74c2b4d5ac8ab5234ba765e3", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/875237b539ff6ccb74c2b4d5ac8ab5234ba765e3", "committedDate": "2020-10-13T23:06:24Z", "message": "Merge remote-tracking branch 'upstream/main' into do-not-abort-server-write"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/5a1fc4028db5e44ab6ea7192c28f8df7595d9875", "committedDate": "2020-10-14T00:04:31Z", "message": "Do not expect that eventHandler is invoked on the EventLoop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTE4Mzc0", "url": "https://github.com/apple/servicetalk/pull/1177#pullrequestreview-507918374", "createdAt": "2020-10-14T00:35:07Z", "commit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDozNTowOFrOHg-GqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDo0MjoyNFrOHg-OVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzMzk5Mg==", "bodyText": "intentional? debugging?", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504333992", "createdAt": "2020-10-14T00:35:08Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/ServerRespondsOnClosingTest.java", "diffHunk": "@@ -220,11 +249,11 @@ private void verifyResponse(String requestPath) {\n \n     private void respondWithFIN() {\n         assertThat(\"Server did not shutdown output\", channel.isOutputShutdown(), is(true));\n-        channel.shutdownInput();    // simulate FIN from the client\n+        channel.shutdownInput().syncUninterruptibly();    // simulate FIN from the client\n     }\n \n     private void assertServerConnectionClosed() throws Exception {\n-        serverConnection.onClose().toFuture().get();\n+        // serverConnection.onClose().toFuture().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTk1OA==", "bodyText": "this maybe called on a non-EventLoop thread, and it doesn't look like RequestResponseCloseHandler supports this. All other methods on the CloseHandler can only be invoked on the EventLoop thread, can we stay consistent with this approach?", "url": "https://github.com/apple/servicetalk/pull/1177#discussion_r504335958", "createdAt": "2020-10-14T00:42:24Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/DefaultNettyConnection.java", "diffHunk": "@@ -384,6 +384,7 @@ protected void handleSubscribe(Subscriber completableSubscriber) {\n                 WriteStreamSubscriber subscriber = new WriteStreamSubscriber(channel(), demandEstimatorSupplier.get(),\n                         completableSubscriber, closeHandler, writeObserver);\n                 if (failIfWriteActive(subscriber, completableSubscriber)) {\n+                    closeHandler.notifyConnected(channel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1fc4028db5e44ab6ea7192c28f8df7595d9875"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9775502350ab6120345bfd35810866054926b2f4", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/9775502350ab6120345bfd35810866054926b2f4", "committedDate": "2020-10-14T02:03:46Z", "message": "Uncomment serverConnection.onClose().toFuture().get()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af83752f281f4b62433380b0bf02975a4294454c", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/af83752f281f4b62433380b0bf02975a4294454c", "committedDate": "2020-10-14T06:00:27Z", "message": "Merge remote-tracking branch 'upstream/main' into do-not-abort-server-write"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5c9a2c8c89afe6f7b5630fb1e3fa7f3d2603ba", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/eb5c9a2c8c89afe6f7b5630fb1e3fa7f3d2603ba", "committedDate": "2020-10-14T06:07:17Z", "message": "Call notifyConnected on the EventLoop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a64315fcc2b284481ba7d7bb9345e874602e9beb", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/a64315fcc2b284481ba7d7bb9345e874602e9beb", "committedDate": "2020-10-14T20:40:22Z", "message": "Revert the approach with notifyConnected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bbb729fb0d692872ac75e25cff2f06c6ced5044", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/3bbb729fb0d692872ac75e25cff2f06c6ced5044", "committedDate": "2020-10-14T20:58:42Z", "message": "Apply isClient approach from #1156"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3515, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}