{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzQ5MzAy", "number": 1186, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozNzozNFrOEuKkJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozOTo0OFrOEuKoEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODQzMDQ2OnYy", "diffSide": "RIGHT", "path": "servicetalk-examples/grpc/protoc-options/README.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozNzozNFrOHiZN-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjoxNDowN1rOHidWBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyNjgwOQ==", "bodyText": "Consider adding a comment here, describing what this option does and referencing the servicetalk-grpc-protoc/README.adoc file for more information.\nAlso, we need to update servicetalk-examples/docs/modules/ROOT/pages/_partials/nav-versioned.adoc and servicetalk-examples/docs/modules/ROOT/pages/grpc/index.adoc file to include this example.", "url": "https://github.com/apple/servicetalk/pull/1186#discussion_r505826809", "createdAt": "2020-10-15T20:37:34Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/grpc/protoc-options/README.adoc", "diffHunk": "@@ -0,0 +1,14 @@\n+== ServiceTalk gRPC protoc options\n+\n+Using the same interface as the \"Hello World\" examples, demonstrate servicetalk-grpc-protoc plugin options.\n+\n+For example here is one of the options demonstrated:\n+\n+[source,gradle]\n+----\n+task.plugins {\n+  servicetalk_grpc {\n+    option 'typeNameSuffix=St'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3827e17d7c17dc1fa2562d951a4e378b25df0126"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg5NDQwNA==", "bodyText": "done", "url": "https://github.com/apple/servicetalk/pull/1186#discussion_r505894404", "createdAt": "2020-10-15T22:14:07Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-examples/grpc/protoc-options/README.adoc", "diffHunk": "@@ -0,0 +1,14 @@\n+== ServiceTalk gRPC protoc options\n+\n+Using the same interface as the \"Hello World\" examples, demonstrate servicetalk-grpc-protoc plugin options.\n+\n+For example here is one of the options demonstrated:\n+\n+[source,gradle]\n+----\n+task.plugins {\n+  servicetalk_grpc {\n+    option 'typeNameSuffix=St'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyNjgwOQ=="}, "originalCommit": {"oid": "3827e17d7c17dc1fa2562d951a4e378b25df0126"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODQ0MDUxOnYy", "diffSide": "RIGHT", "path": "servicetalk-examples/grpc/protoc-options/src/main/java/io/servicetalk/examples/grpc/protocoptions/BlockingProtocOptionsClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozOTo0OFrOHiZUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MDozOVrOHicwWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyODUwMA==", "bodyText": "Consider using GreeterSt.BlockingGreeterClient and adding a comment that highlights the St suffix. Otherwise, it's hard to understand where the suffix is added. import section is usually collapsed in IDE. Something like:\n// Greeter service is generated with \"St\" suffix:\ntry (GreeterSt.BlockingGreeterClient client = ...\n\nSame comment for BlockingProtocOptionsServer class.", "url": "https://github.com/apple/servicetalk/pull/1186#discussion_r505828500", "createdAt": "2020-10-15T20:39:48Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-examples/grpc/protoc-options/src/main/java/io/servicetalk/examples/grpc/protocoptions/BlockingProtocOptionsClient.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.grpc.protocoptions;\n+\n+import io.servicetalk.grpc.netty.GrpcClients;\n+\n+import io.grpc.examples.helloworld.GreeterSt.BlockingGreeterClient;\n+import io.grpc.examples.helloworld.GreeterSt.ClientFactory;\n+import io.grpc.examples.helloworld.HelloReply;\n+import io.grpc.examples.helloworld.HelloRequest;\n+\n+public final class BlockingProtocOptionsClient {\n+\n+    public static void main(String[] args) throws Exception {\n+        try (BlockingGreeterClient client = GrpcClients.forAddress(\"localhost\", 8080)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3827e17d7c17dc1fa2562d951a4e378b25df0126"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NDc2Mw==", "bodyText": "done", "url": "https://github.com/apple/servicetalk/pull/1186#discussion_r505884763", "createdAt": "2020-10-15T21:50:39Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-examples/grpc/protoc-options/src/main/java/io/servicetalk/examples/grpc/protocoptions/BlockingProtocOptionsClient.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.grpc.protocoptions;\n+\n+import io.servicetalk.grpc.netty.GrpcClients;\n+\n+import io.grpc.examples.helloworld.GreeterSt.BlockingGreeterClient;\n+import io.grpc.examples.helloworld.GreeterSt.ClientFactory;\n+import io.grpc.examples.helloworld.HelloReply;\n+import io.grpc.examples.helloworld.HelloRequest;\n+\n+public final class BlockingProtocOptionsClient {\n+\n+    public static void main(String[] args) throws Exception {\n+        try (BlockingGreeterClient client = GrpcClients.forAddress(\"localhost\", 8080)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyODUwMA=="}, "originalCommit": {"oid": "3827e17d7c17dc1fa2562d951a4e378b25df0126"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2604, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}