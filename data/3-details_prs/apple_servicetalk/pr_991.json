{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTI1NTg0", "number": 991, "title": "Do not wrap unreleasable ByteBuf(s) with `Unpooled.unreleasableBuffer`", "bodyText": "Motivation:\nFor cases when AbstractByteBuf wraps ByteBuf(s) allocated by ST\nwith another interface (slice/duplicate/readOnly) we wrap them one\nmore time with UnreleasableByteBuf. However, this is not necessary\nas our ByteBuf(s) are always unreleasable and final. There is no\nway it can be unwrapped and released. Therefore, UnreleasableByteBuf\nis useless and just creates more garbage for GC.\nModifications:\n\nRemove all methods that apply Unpooled.unreleasableBuffer for\nreturned results;\nRemove unnecessary overrides for methods that return retained\nslice or duplicate;\nAdd missed final modifiers for methods of\nUnreleasableHeapByteBuf;\nEnhance tests to cover all API that may return a new ByteBuf\nor a new wrapped ByteBuf;\nAssert that all Buffers allocated by ST have refCnt() > 1;\n\nResult:\nLess memory allocation for slice/duplicate/readOnly methods of\nalready unreleasable ByteBuf(s).", "createdAt": "2020-03-31T18:46:09Z", "url": "https://github.com/apple/servicetalk/pull/991", "merged": true, "mergeCommit": {"oid": "38c10ddcda10067f5da96322811dc4ea40eaca70"}, "closed": true, "closedAt": "2020-04-01T21:10:29Z", "author": {"login": "idelpivnitskiy"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTHpN-AH2gAyMzk2NTI1NTg0OjVkMTEyODFiNzE1YWQwMTcwMmNjZTA1ZTk5M2Q5ODIwOGE2ZmVmZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTarioAH2gAyMzk2NTI1NTg0OmIyOGE1Y2QwNWFhMTlkNDVlN2NkNTAwNjRlZTA0ZGFiM2ExOWFjZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/5d11281b715ad01702cce05e993d98208a6fefec", "committedDate": "2020-03-31T18:45:00Z", "message": "Do not wrap unreleasable ByteBuf(s) with `Unpooled.unreleasableBuffer`\n\nMotivation:\n\nFor cases when `AbstractByteBuf` wraps `ByteBuf`(s) allocated by ST\nwith another interface (slice/duplicate/readOnly) we wrap them one\nmore time with `UnreleasableByteBuf`. However, this is not necessary\nas our `ByteBuf`(s) are always unreleasable and final. There is no\nway it can be unwrapped and released. Therefore, `UnreleasableByteBuf`\nis useless and just creates more garbage for GC.\n\nModifications:\n\n- Remove all methods that apply `Unpooled.unreleasableBuffer` for\nreturned results;\n- Enhance tests to cover all API that may return a new `ByteBuf`\nor a new wrapped `ByteBuf`;\n- Assert that all `Buffer`s allocated by ST have `refCnt() > 1`;\n\nResult:\n\nLess memory allocation for slice/duplicate/readOnly methods of\nalready unreleasable `ByteBuf`(s)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDExNjM3", "url": "https://github.com/apple/servicetalk/pull/991#pullrequestreview-385011637", "createdAt": "2020-03-31T18:49:35Z", "commit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo0OTozNVrOF-jhQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo0OTozNVrOF-jhQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNzk4NQ==", "bodyText": "Actually, we can also remove these methods that are here to avoid an additional call to retain(). As retain() it just noon for our implementations, it's ok to use readRetainedSlice from AbstractByteBuf. Tests are all green if I remove these methods. WDYT?", "url": "https://github.com/apple/servicetalk/pull/991#discussion_r401137985", "createdAt": "2020-03-31T18:49:35Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-buffer-netty/src/main/java/io/servicetalk/buffer/netty/UnreleasableDirectByteBuf.java", "diffHunk": "@@ -44,31 +43,11 @@\n         super.retain();\n     }\n \n-    @Override\n-    public ByteBuf asReadOnly() {\n-        return Unpooled.unreleasableBuffer(super.asReadOnly());\n-    }\n-\n-    @Override\n-    public ByteBuf readSlice(int length) {\n-        return Unpooled.unreleasableBuffer(super.readSlice(length));\n-    }\n-\n     @Override\n     public ByteBuf readRetainedSlice(int length) {\n         return readSlice(length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDcwMDUy", "url": "https://github.com/apple/servicetalk/pull/991#pullrequestreview-385070052", "createdAt": "2020-03-31T20:14:41Z", "commit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MjgwMTM2", "url": "https://github.com/apple/servicetalk/pull/991#pullrequestreview-385280136", "createdAt": "2020-04-01T05:47:30Z", "commit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNTo0NzozMFrOF-xoFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNTo0NzozMFrOF-xoFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2OTExMQ==", "bodyText": "(I am not sure if you are saying the same thing)\nI guess it was here before since this was calling readSlice() which was wrapping into the unreleasableBuffer. Since readSlice() override is removed, this becomes redundant.", "url": "https://github.com/apple/servicetalk/pull/991#discussion_r401369111", "createdAt": "2020-04-01T05:47:30Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-buffer-netty/src/main/java/io/servicetalk/buffer/netty/UnreleasableDirectByteBuf.java", "diffHunk": "@@ -44,31 +43,11 @@\n         super.retain();\n     }\n \n-    @Override\n-    public ByteBuf asReadOnly() {\n-        return Unpooled.unreleasableBuffer(super.asReadOnly());\n-    }\n-\n-    @Override\n-    public ByteBuf readSlice(int length) {\n-        return Unpooled.unreleasableBuffer(super.readSlice(length));\n-    }\n-\n     @Override\n     public ByteBuf readRetainedSlice(int length) {\n         return readSlice(length);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNzk4NQ=="}, "originalCommit": {"oid": "5d11281b715ad01702cce05e993d98208a6fefec"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b28a5cd05aa19d45e7cd50064ee04dab3a19aced", "author": {"user": {"login": "idelpivnitskiy", "name": "Idel Pivnitskiy"}}, "url": "https://github.com/apple/servicetalk/commit/b28a5cd05aa19d45e7cd50064ee04dab3a19aced", "committedDate": "2020-04-01T16:55:44Z", "message": "Remove overrides for retained slice/duplicate"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3565, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}