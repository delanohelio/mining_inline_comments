{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzg2ODA1", "number": 1012, "title": "Publisher#flatMapMergeSingle terminal condition race", "bodyText": "Motivation:\nPublisher#flatMapMergeSingle has the following race condition:\nT1 - FlatMapSubscriber#onComplete (the outer Subscriber)\nT2 - FlatMapSingleSubscriber#onComplete (the inner Subscriber)\nT1 - terminal.cas(onComplete()) -> true, active == 0 -> false\nT2 - active.dec() -> 0, terminal == null -> true\nThere is no guarantee that T2 will see the terminal.cas() from T1\nPublisher#flatMapMerge was recently introduced, shares some control flow\nlogic with Publisher#flatMapMergeSingle that is now inconsistent.\nModifications:\n\nuse atomic operations on the active count to flip to negative when the\nouter source completes to ensure visibility on termination between\ndifferen threads.\n\nResult:\nMore correct termination of Publisher#flatMapMergeSingle", "createdAt": "2020-04-14T20:03:19Z", "url": "https://github.com/apple/servicetalk/pull/1012", "merged": true, "mergeCommit": {"oid": "00eb752e80ca78d6f3dba12b39b7608b8adfd11d"}, "closed": true, "closedAt": "2020-04-30T23:58:28Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXpJM_AH2gAyNDAzMzg2ODA1OmJkYWNmZWZlOGY3ZGI1ZDRlNTNiYzMyYmVhZjZmNjYzZjBiZDRkNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc05p8AH2gAyNDAzMzg2ODA1OmVkZTcxZGVhNWI4ZDQxZjY1MDE2NmJlMzA1Njc3YWQwMDQyNWQyMDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66", "committedDate": "2020-04-14T20:02:30Z", "message": "Publisher#flatMapMergeSingle terminal condition race\n\nMotivation:\nPublisher#flatMapMergeSingle has the following race condition:\nT1 - FlatMapSubscriber#onComplete (the outer Subscriber)\nT2 - FlatMapSingleSubscriber#onComplete (the inner Subscriber)\nT1 - terminal.cas(onComplete()) -> true, active == 0 -> false\nT2 - active.dec() -> 0, terminal == null -> true\nThere is no guarantee that T2 will see the terminal.cas() from T1\n\nPublisher#flatMapMerge was recently introduced, shares some control flow\nlogic with Publisher#flatMapMergeSingle that is now inconsistent.\n\nModifications:\n- use atomic operations on the active count to flip to negative when the\nouter source completes to ensure visibility on termination between\ndifferen threads.\n\nResult:\nMore correct termination of Publisher#flatMapMergeSingle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjUzNTcy", "url": "https://github.com/apple/servicetalk/pull/1012#pullrequestreview-397253572", "createdAt": "2020-04-21T11:52:00Z", "commit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODA3NDcw", "url": "https://github.com/apple/servicetalk/pull/1012#pullrequestreview-403807470", "createdAt": "2020-04-30T19:16:55Z", "commit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToxNjo1NVrOGO28Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTozMDozOFrOGO3Xuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzMzM5MQ==", "bodyText": "prevActivePublishers -> prevActiveSingles", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418233391", "createdAt": "2020-04-30T19:16:55Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -193,16 +192,42 @@ public void onError(Throwable t) {\n \n         @Override\n         public void onComplete() {\n-            // active must be checked after setting the terminal event, because they are accessed in the reverse way in\n-            // FlatMapSingleSubscriber and if it were reversed here the FlatMapSingleSubscriber would be racy and may\n-            // not detect the terminal event.\n-            if (trySetTerminal(complete(), false, terminalNotificationUpdater, this) && active == 0) {\n-                // Since onComplete and onNext can not be concurrent and onNext must not be invoked post onComplete,\n-                // if we see active == 0 here, active must not change after this.\n+            // Setting terminal must be done before terminateActiveMappedSources to ensure visibility of the terminal.\n+            final boolean setTerminal = trySetTerminal(complete(), false, terminalNotificationUpdater, this);\n+            final boolean allSourcesTerminated = terminateActiveMappedSources();\n+            if (setTerminal && allSourcesTerminated) {\n                 enqueueAndDrain(complete());\n             }\n         }\n \n+        private boolean terminateActiveMappedSources() {\n+            for (;;) {\n+                final int prevActiveMappedSources = activeMappedSources;\n+                // Should always be >= 0, but just in case there is a bug in user code that results in multiple terminal\n+                // events we avoid corrupting our internal state.\n+                if (prevActiveMappedSources < 0 || activeMappedSourcesUpdater.compareAndSet(this,\n+                        prevActiveMappedSources, -prevActiveMappedSources)) {\n+                    return prevActiveMappedSources == 0;\n+                }\n+            }\n+        }\n+\n+        private boolean decrementActiveMappedSources() {\n+            for (;;) {\n+                final int prevActivePublishers = activeMappedSources;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzOTI2Mw==", "bodyText": "Is this comment saying that prevActiveMappedSources should always be >= 0? We are setting it to -prevActiveMappedSources, so this is confusing. Maybe just elaborate more like:\n// prevActiveMappedSources >= 0 if only a single terminal event is received (expected)\n// prevActiveMappedSources < 0 if multiple terminal events are received (unexpected)\n// We return true only for the first terminal event.", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418239263", "createdAt": "2020-04-30T19:28:19Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -193,16 +192,42 @@ public void onError(Throwable t) {\n \n         @Override\n         public void onComplete() {\n-            // active must be checked after setting the terminal event, because they are accessed in the reverse way in\n-            // FlatMapSingleSubscriber and if it were reversed here the FlatMapSingleSubscriber would be racy and may\n-            // not detect the terminal event.\n-            if (trySetTerminal(complete(), false, terminalNotificationUpdater, this) && active == 0) {\n-                // Since onComplete and onNext can not be concurrent and onNext must not be invoked post onComplete,\n-                // if we see active == 0 here, active must not change after this.\n+            // Setting terminal must be done before terminateActiveMappedSources to ensure visibility of the terminal.\n+            final boolean setTerminal = trySetTerminal(complete(), false, terminalNotificationUpdater, this);\n+            final boolean allSourcesTerminated = terminateActiveMappedSources();\n+            if (setTerminal && allSourcesTerminated) {\n                 enqueueAndDrain(complete());\n             }\n         }\n \n+        private boolean terminateActiveMappedSources() {\n+            for (;;) {\n+                final int prevActiveMappedSources = activeMappedSources;\n+                // Should always be >= 0, but just in case there is a bug in user code that results in multiple terminal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MDQ0Mw==", "bodyText": "Since we are setting a negative value to this variable; should we instead use:\nactiveMappedSourcesUpdater.accumulateAndGet(this, 1, (prev, next) -> prev >= 0 ? prev + next : prev);", "url": "https://github.com/apple/servicetalk/pull/1012#discussion_r418240443", "createdAt": "2020-04-30T19:30:38Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherFlatMapSingle.java", "diffHunk": "@@ -180,7 +179,7 @@ public void onNext(T t) {\n             // If we are cancelled the activeUpdater count is best effort depending upon which sources finish. This best\n             // effort behavior mimics the semantics of cancel though so we don't take any special action to try to\n             // adjust the count or prematurely terminate.\n-            activeUpdater.incrementAndGet(this);\n+            activeMappedSourcesUpdater.incrementAndGet(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdacfefe8f7db5d4e53bc32beaf6f663f0bd4d66"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f99f8e658ac58bf22c9bce0f964c51bdbd7a2ac0", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/f99f8e658ac58bf22c9bce0f964c51bdbd7a2ac0", "committedDate": "2020-04-30T22:28:24Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ede71dea5b8d41f650166be305677ad00425d206", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/ede71dea5b8d41f650166be305677ad00425d206", "committedDate": "2020-04-30T22:34:00Z", "message": "fix formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3614, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}