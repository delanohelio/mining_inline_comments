{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTIzOTI2", "number": 1063, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDowMjowN1rOD-d2cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDowMjowN1rOD-d2cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODI3Mzc2OnYy", "diffSide": "RIGHT", "path": "servicetalk-opentracing-inmemory/src/main/java/io/servicetalk/opentracing/inmemory/AbstractInMemorySpanBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDowMjowN1rOGYldxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyODoxOFrOGY7-qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQzMjgzNg==", "bodyText": "Do we need similar public methods to simplify adding FOLLOWS_FROM references?", "url": "https://github.com/apple/servicetalk/pull/1063#discussion_r428432836", "createdAt": "2020-05-21T04:02:07Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-opentracing-inmemory/src/main/java/io/servicetalk/opentracing/inmemory/AbstractInMemorySpanBuilder.java", "diffHunk": "@@ -52,13 +53,13 @@ protected AbstractInMemorySpanBuilder(String operationName, int maxTagSize) {\n \n     @Override\n     public final InMemorySpanBuilder asChildOf(SpanContext parent) {\n-        addReference(References.CHILD_OF, parent);\n+        addReference(CHILD_OF, parent);\n         return this;\n     }\n \n     @Override\n     public final InMemorySpanBuilder asChildOf(Span parent) {\n-        addReference(References.CHILD_OF, parent.context());\n+        addReference(CHILD_OF, parent.context());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c2cd8445242dae17567a43e698636f9bb1e036"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMTcwNA==", "bodyText": "This method is overriden from io.opentracing.SpanBuilder to refine/specialize the return type. I don't think it is necessary to add additional methods for followsFrom but we can do this in a followup PR if necessary.", "url": "https://github.com/apple/servicetalk/pull/1063#discussion_r428801704", "createdAt": "2020-05-21T17:28:18Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-opentracing-inmemory/src/main/java/io/servicetalk/opentracing/inmemory/AbstractInMemorySpanBuilder.java", "diffHunk": "@@ -52,13 +53,13 @@ protected AbstractInMemorySpanBuilder(String operationName, int maxTagSize) {\n \n     @Override\n     public final InMemorySpanBuilder asChildOf(SpanContext parent) {\n-        addReference(References.CHILD_OF, parent);\n+        addReference(CHILD_OF, parent);\n         return this;\n     }\n \n     @Override\n     public final InMemorySpanBuilder asChildOf(Span parent) {\n-        addReference(References.CHILD_OF, parent.context());\n+        addReference(CHILD_OF, parent.context());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQzMjgzNg=="}, "originalCommit": {"oid": "e9c2cd8445242dae17567a43e698636f9bb1e036"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2763, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}