{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjkwMTEw", "number": 993, "title": "Replace ConcurrentSubscription with DelayedCancellable when synchronous request(Long.MAX_VALUE)", "bodyText": "Motivation:\nThere are some operators which convert from Publisher to Completable or\nSingle. Since the demand for Completable and Single is implicit on\nsubscribe(..) these operators need to simulate the demand in\nonSubscribe. In order to prevent concurrent access on the Subscription\nwith the downstream Subscriber and the synchornous requestN call it is\nwrapped in a ConcurrentSubscription. However ConcurrentSubscription has\nto coordinate between two methods and is inheritly more complicated than\nDelayedCancellable. We can use DelayedCancellable which is a simpler\noperation at the cost of requesting demand before propagating\nsynchronous cancel operation. This isn't perceived as a deal breaker\nbecause demand is implicit anyways, and cancel is best effort.\nModifications:\n\nWhen converting from Publisher to Completable or Single use\nDelayedCancellable instead of ConcurrentSubscription\n\nResult:\nLess complicated and less expensive conversion from Subscription to\nCancellable when converting from Publisher to Single or Completable.", "createdAt": "2020-04-02T00:06:15Z", "url": "https://github.com/apple/servicetalk/pull/993", "merged": true, "mergeCommit": {"oid": "c5dbb2b43c34ee3d4a993a88e46f573ad1f1b440"}, "closed": true, "closedAt": "2020-04-02T18:03:30Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTg1L_AH2gAyMzk3MjkwMTEwOmNkNjE0Nzk4YjRkY2MwMmNlY2ZjMjk4YjBmMDgwMDNmMTIzNTUxYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTvmxkAFqTM4NjYzNDI3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd614798b4dcc02cecfc298b0f08003f123551c2", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/cd614798b4dcc02cecfc298b0f08003f123551c2", "committedDate": "2020-04-02T00:05:42Z", "message": "Replace ConcurrentSubscription with DelayedCancellable when synchronous request(Long.MAX_VALUE)\n\nMotivation:\nThere are some operators which convert from Publisher to Completable or\nSingle. Since the demand for Completable and Single is implicit on\nsubscribe(..) these operators need to simulate the demand in\nonSubscribe. In order to prevent concurrent access on the Subscription\nwith the downstream Subscriber and the synchornous requestN call it is\nwrapped in a ConcurrentSubscription. However ConcurrentSubscription has\nto coordinate between two methods and is inheritly more complicated than\nDelayedCancellable. We can use DelayedCancellable which is a simpler\noperation at the cost of requesting demand before propagating\nsynchronous cancel operation. This isn't perceived as a deal breaker\nbecause demand is implicit anyways, and cancel is best effort.\n\nModifications:\n- When converting from Publisher to Completable or Single use\nDelayedCancellable instead of ConcurrentSubscription\n\nResult:\nLess complicated and less expensive conversion from Subscription to\nCancellable when converting from Publisher to Single or Completable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTg5MzUw", "url": "https://github.com/apple/servicetalk/pull/993#pullrequestreview-386589350", "createdAt": "2020-04-02T16:21:51Z", "commit": {"oid": "cd614798b4dcc02cecfc298b0f08003f123551c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjoyMTo1MVrOF_zIpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjoyMTo1MVrOF_zIpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0MjQwNA==", "bodyText": "Looks like we can just extend DelayedCancellable now.\nfinal class ForEachSubscriber<T> extends DelayedCancellable implements Subscriber<T> {\n\n    @Override\n    public void onSubscribe(Subscription s) {\n        s.request(Long.MAX_VALUE);\n        delayedCancellable(s);\n    }\n}\nAlso for all other classes in this PR", "url": "https://github.com/apple/servicetalk/pull/993#discussion_r402442404", "createdAt": "2020-04-02T16:21:51Z", "author": {"login": "NiteshKant"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/ForEachSubscriber.java", "diffHunk": "@@ -40,11 +39,12 @@\n \n     @Override\n     public void onSubscribe(Subscription s) {\n-        // We wrap the subscription into ConcurrentSubscription as cancel on SequentialCancellable (this) can be\n+        // We wrap the subscription into DelayedCancellable as cancel on SequentialCancellable (this) can be\n         // concurrent with the request-n below.\n-        ConcurrentSubscription cs = wrap(s);\n-        nextCancellable(cs::cancel);\n-        cs.request(Long.MAX_VALUE);\n+        DelayedCancellable delayedCancellable = new DelayedCancellable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd614798b4dcc02cecfc298b0f08003f123551c2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b1773df57bee4ee1d12b09aee0efbfa8e0c7c07", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/0b1773df57bee4ee1d12b09aee0efbfa8e0c7c07", "committedDate": "2020-04-02T16:50:43Z", "message": "ForEachSubscriber to extend DelayedCancellable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd942c2b4f580b13556b237f17134e678406fe8", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/ebd942c2b4f580b13556b237f17134e678406fe8", "committedDate": "2020-04-02T16:53:06Z", "message": "PayloadPump to extend DelayedCancellable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "427f55303f86e11b82a79bc635a916be01123e38", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/427f55303f86e11b82a79bc635a916be01123e38", "committedDate": "2020-04-02T17:14:42Z", "message": "remaining cases to extend DelayedCancellable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NjM0Mjcx", "url": "https://github.com/apple/servicetalk/pull/993#pullrequestreview-386634271", "createdAt": "2020-04-02T17:18:32Z", "commit": {"oid": "427f55303f86e11b82a79bc635a916be01123e38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3568, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}