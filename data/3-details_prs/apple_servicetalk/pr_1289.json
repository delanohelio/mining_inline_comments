{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjQ3NDQ3", "number": 1289, "title": "QueueDynamicCompositeCancellable -> CancellableStack", "bodyText": "Motivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\nModifications:\n\nRemove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\nRename QueueDynamicCompositeCancellable to CancellableStack.\nRename SetDynamicCompositeCancellable to CancellableSet.\nUse ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators.", "createdAt": "2020-12-18T02:28:57Z", "url": "https://github.com/apple/servicetalk/pull/1289", "merged": true, "mergeCommit": {"oid": "497ea327cf4645337890927df7816ec7c688a3bb"}, "closed": true, "closedAt": "2020-12-19T04:13:27Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnV5ddgBqjQxMjkyMzk0NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnkp6xgH2gAyNTQyMjQ3NDQ3OjRiZDA4ZmE5OWIwZjA2MDM3NjY4ZDAzNTIyMmUwOWQxMDEyM2E2NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2544d223d3aba55c9e161644dc169ac92da04a5b", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/2544d223d3aba55c9e161644dc169ac92da04a5b", "committedDate": "2020-12-18T02:24:26Z", "message": "QueueDynamicCompositeCancellable -> StackDynamicCompositeCancellable\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Rename QueueDynamicCompositeCancellable to\nStackDynamicCompositeCancellable.\n- Use ConcurrentStack in StackDynamicCompositeCancellable.\n\nResult:\nImproved performance for StackDynamicCompositeCancellable use cases such\nas Completable#merge* operators."}, "afterCommit": {"oid": "a05d22cbd259b3c5f2c5259d084208816a76b511", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/a05d22cbd259b3c5f2c5259d084208816a76b511", "committedDate": "2020-12-18T10:48:25Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a05d22cbd259b3c5f2c5259d084208816a76b511", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/a05d22cbd259b3c5f2c5259d084208816a76b511", "committedDate": "2020-12-18T10:48:25Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}, "afterCommit": {"oid": "f03c11705345082ca0510f28d1df91caa400ef9b", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/f03c11705345082ca0510f28d1df91caa400ef9b", "committedDate": "2020-12-18T10:52:59Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de37665536516455eeecc0162fbd99db74681498", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/de37665536516455eeecc0162fbd99db74681498", "committedDate": "2020-12-19T00:44:44Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f03c11705345082ca0510f28d1df91caa400ef9b", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/f03c11705345082ca0510f28d1df91caa400ef9b", "committedDate": "2020-12-18T10:52:59Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}, "afterCommit": {"oid": "de37665536516455eeecc0162fbd99db74681498", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/de37665536516455eeecc0162fbd99db74681498", "committedDate": "2020-12-19T00:44:44Z", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTAyOTAz", "url": "https://github.com/apple/servicetalk/pull/1289#pullrequestreview-555902903", "createdAt": "2020-12-19T01:31:26Z", "commit": {"oid": "de37665536516455eeecc0162fbd99db74681498"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOII3onw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyNlrOII3onw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTAzOQ==", "bodyText": "queue -> stack?", "url": "https://github.com/apple/servicetalk/pull/1289#discussion_r546171039", "createdAt": "2020-12-19T01:31:26Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/CancellableStack.java", "diffHunk": "@@ -17,44 +17,46 @@\n \n import io.servicetalk.concurrent.Cancellable;\n \n-/**\n- * Provides a means to cascade a {@link #cancel()} call to other {@link Cancellable} objects.\n- */\n-interface DynamicCompositeCancellable extends Cancellable {\n+final class CancellableStack implements Cancellable {\n+    private final ConcurrentStack<Cancellable> queue = new ConcurrentStack<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de37665536516455eeecc0162fbd99db74681498"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bd08fa99b0f06037668d035222e09d10123a664", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/4bd08fa99b0f06037668d035222e09d10123a664", "committedDate": "2020-12-19T04:02:39Z", "message": "queue -> stack variable name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}