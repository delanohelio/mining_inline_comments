{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzAwMzE1", "number": 1144, "title": "Simplify ServiceDiscoverer generics in client builders", "bodyText": "Motivation\nSingleAddressHttpClientBuilder is used as a template for partitioned and multi-address builders for which SD event types is different. Although, users are not expected to use a ServiceDiscoverer with different event type, we accommodate this usage in our public APIs. Accomodating this usage further trickles down to builder implementation and the external facing ServiceDiscoveryRetryStrategy. It also complicates generic handling whenever we change ServiceDiscoverer APIs.\nFurther the partitioned builder uncheck casts the service discovery stream while using which hides type issues.\nModification\n\nRemove the ? extends in the ServiceDiscoverer event type while accepting a ServiceDiscoverer in the builders. When a different event type is required (partitioned builder), store the ServiceDiscoverer locally.\nSimplify ServiceDiscoveryRetryStrategy generics.\n\nResult\nLess generics clutter in public APIs.", "createdAt": "2020-09-05T00:01:59Z", "url": "https://github.com/apple/servicetalk/pull/1144", "merged": true, "mergeCommit": {"oid": "7b429c572ff96579ac166ccf637569ed1b523e60"}, "closed": true, "closedAt": "2020-09-10T20:30:40Z", "author": {"login": "NiteshKant"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFuPqkAH2gAyNDgwMzAwMzE1OjlmZjA3YTFkNzVhMTQ5MDM1YjAzOWEzZGUxMzQyM2U0ZDQwN2M0ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHmItwgH2gAyNDgwMzAwMzE1OjJmNjM4OTY1ZTFjYzVmOTMxNzRjNjM3NTU1ODYxNjc3MjY1OWU1YzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/9ff07a1d75a149035b039a3de13423e4d407c488", "committedDate": "2020-09-04T23:59:36Z", "message": "Simplify ServiceDiscoverer generics in client builders\n\n__Motivation__\n\n`SingleAddressHttpClientBuilder` is used as a template for partitioned and multi-address builders for which SD event types is different. Although, users are not expected to use a ServiceDiscoverer with different event type, we accommodate this usage in our public APIs. Accomodating this usage further trickles down to builder implementation and the external facing `ServiceDiscoveryRetryStrategy`. It also complicates generic handling whenever we change `ServiceDiscoverer` APIs.\nFurther the partitioned builder uncheck casts the service discovery stream while using which hides type issues.\n\n__Modification__\n\n - Remove the `? extends` in the `ServiceDiscoverer` event type while accepting a `ServiceDiscoverer` in the builders. When a different event type is required (partitioned builder), store the `ServiceDiscoverer` locally.\n - Simplify `ServiceDiscoveryRetryStrategy` generics.\n\n __Result__\n\n Less generics clutter in public APIs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDcwMTY3", "url": "https://github.com/apple/servicetalk/pull/1144#pullrequestreview-485470167", "createdAt": "2020-09-09T23:32:56Z", "commit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozMjo1NlrOHPdtng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxMjoxM1rOHPeZNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NzUwMg==", "bodyText": "If the closeable is always emptyAsyncCloseable(), can we return Completable.completed() everywhere instead and avoid allocation of empty closeable?", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485977502", "createdAt": "2020-09-09T23:32:56Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpClients.java", "diffHunk": "@@ -292,11 +297,33 @@ private HttpClients() {\n      * @return new builder with provided configuration\n      */\n     public static <U, R> PartitionedHttpClientBuilder<U, R> forPartitionedAddress(\n-            final ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n+            final ServiceDiscoverer<U, R, PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n             final U address,\n             final Function<HttpRequestMetaData, PartitionAttributesBuilder> partitionAttributesBuilderFactory) {\n         return new DefaultPartitionedHttpClientBuilder<>(\n-                new DefaultSingleAddressHttpClientBuilder<>(address, serviceDiscoverer),\n-                partitionAttributesBuilderFactory);\n+                new DefaultSingleAddressHttpClientBuilder<>(address,\n+                        new ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>>() {\n+                            private final ListenableAsyncCloseable closeable = emptyAsyncCloseable();\n+\n+                            @Override\n+                            public Publisher<ServiceDiscovererEvent<R>> discover(final U u) {\n+                                return failed(new IllegalStateException(\"Invalid service discoverer.\"));\n+                            }\n+\n+                            @Override\n+                            public Completable onClose() {\n+                                return closeable.onClose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODAyMQ==", "bodyText": "We can also kill ? extends  in ctor argument (line 101) and in GroupedByPartitionSubscriber (lines 258, 278).", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988021", "createdAt": "2020-09-10T00:09:54Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -74,8 +75,7 @@\n          * @param psd the partitioned {@link ServiceDiscoverer}\n          * @return new client for the given arguments\n          */\n-        Client apply(PartitionAttributes pa,\n-                     ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> psd);\n+        Client apply(PartitionAttributes pa, ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>> psd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODY2MQ==", "bodyText": "Kill ? extends here as well?", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988661", "createdAt": "2020-09-10T00:12:13Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -263,8 +252,9 @@ public StreamingHttpClient buildStreaming() {\n         // Track resources that potentially need to be closed when an exception is thrown during buildStreaming\n         final CompositeCloseable closeOnException = newCompositeCloseable();\n         try {\n-            final SdStatusCompletable sdStatus = new SdStatusCompletable();\n-            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents = ctx.discover(sdStatus);\n+\n+            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDg0MDY0", "url": "https://github.com/apple/servicetalk/pull/1144#pullrequestreview-485484064", "createdAt": "2020-09-10T00:16:39Z", "commit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxNjozOVrOHPeeFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMDoxNjozOVrOHPeeFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTkxMQ==", "bodyText": "Consider using Function.identity().", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485989911", "createdAt": "2020-09-10T00:16:39Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -181,7 +182,7 @@ public boolean test(PSDE evt) {\n                     }\n                     return acceptEvent;\n                 }\n-            }).beforeFinally(partition::closeNow);\n+            }).beforeFinally(partition::closeNow).map(psde -> psde);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff07a1d75a149035b039a3de13423e4d407c488"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1db3b0b599cba5ca3c017252fac52b401c424d4b", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/1db3b0b599cba5ca3c017252fac52b401c424d4b", "committedDate": "2020-09-10T19:36:29Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf36c650d34f930abc4c6c96af28a4b62218bc3c", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/bf36c650d34f930abc4c6c96af28a4b62218bc3c", "committedDate": "2020-09-10T19:39:46Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f638965e1cc5f93174c6375558616772659e5c0", "author": {"user": {"login": "NiteshKant", "name": "Nitesh Kant"}}, "url": "https://github.com/apple/servicetalk/commit/2f638965e1cc5f93174c6375558616772659e5c0", "committedDate": "2020-09-10T19:40:37Z", "message": "Review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}