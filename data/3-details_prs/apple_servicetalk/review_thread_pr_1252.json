{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MTIyMjAx", "number": 1252, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyNTo0MVrOFCJV-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyOTozNlrOFCJadA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Nzk0NTUzOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyNTo0MVrOIBI_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyNTo0MVrOIBI_2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2NjkwNg==", "bodyText": "Single -> SingleSource", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538066906", "createdAt": "2020-12-08T06:25:41Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Nzk1MjgwOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyODowMFrOIBJDtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyODowMFrOIBJDtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2Nzg5NQ==", "bodyText": "Single -> Completable", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538067895", "createdAt": "2020-12-08T06:28:00Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link SingleSource}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(SingleSource<T> source) {\n+        return toReactiveStreamsPublisher(fromSource(source).toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link Completable} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Nzk1NzAwOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyOTozNlrOIBJGGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjoyOTozNlrOIBJGGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2ODUwNQ==", "bodyText": "Single -> CompletableSource", "url": "https://github.com/apple/servicetalk/pull/1252#discussion_r538068505", "createdAt": "2020-12-08T06:29:36Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-reactivestreams/src/main/java/io/servicetalk/concurrent/reactivestreams/ReactiveStreamsAdapters.java", "diffHunk": "@@ -73,6 +80,54 @@ private ReactiveStreamsAdapters() {\n         return new StToRsPublisher<>(source);\n     }\n \n+    /**\n+     * Converts the passed {@link Single} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Single}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Single<T> source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link SingleSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link SingleSource}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(SingleSource<T> source) {\n+        return toReactiveStreamsPublisher(fromSource(source).toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link Completable} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.\n+     * @param <T> Type of items emitted from the {@code source} and the returned {@link org.reactivestreams.Publisher}.\n+     * @return A {@link org.reactivestreams.Publisher} representation of the passed {@link Completable}.\n+     */\n+    public static <T> org.reactivestreams.Publisher<T> toReactiveStreamsPublisher(Completable source) {\n+        return toReactiveStreamsPublisher(source.toPublisher());\n+    }\n+\n+    /**\n+     * Converts the passed {@link CompletableSource} to a\n+     * <a href=\"https://github.com/reactive-streams/reactive-streams-jvm\">Reactive Streams</a>\n+     * {@link org.reactivestreams.Publisher}.\n+     * @param source {@link Single} to convert to a {@link org.reactivestreams.Publisher}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15464f82642a2b6bacd3e9eee8c0fda0fa3e154d"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2474, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}