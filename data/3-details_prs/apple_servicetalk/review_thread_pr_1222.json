{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTUwNzUy", "number": 1222, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MjoxMlrOE60-Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1OTo1MFrOE61FLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTIwNzcxOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/ThreadBasedSignalOffloader.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MjoxMlrOH2IPpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMTo0NjoxOFrOH2JUvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDIyOQ==", "bodyText": "Inside sendOnErrorToOriginal, it looks like we should do the opposite:\n        private void sendOnErrorToOriginal(final Throwable throwable) {\n            try {\n                original.onError(throwable);\n            } catch (Throwable t) {\n                t.addSuppressed(throwable);\n                LOGGER.error(\"Ignored unexpected exception terminating subscriber: {}.\", original, t);\n            }\n        }\nWDYT?", "url": "https://github.com/apple/servicetalk/pull/1222#discussion_r526520229", "createdAt": "2020-11-19T00:52:12Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/ThreadBasedSignalOffloader.java", "diffHunk": "@@ -499,6 +499,7 @@ public void sendSignals0() {\n                         original.onNext(signal == NULL_ON_NEXT ? null : uncheckedCast(signal));\n                     } catch (Throwable throwable) {\n                         setTerminated();\n+                        sendOnErrorToOriginal(throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a7a0c9e0928c57874ce9f18083767cad83dc41"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMTAyOQ==", "bodyText": "Should we also flip sendCancel/sendOnErrorToOriginal order in lines 485-486?", "url": "https://github.com/apple/servicetalk/pull/1222#discussion_r526521029", "createdAt": "2020-11-19T00:54:35Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/ThreadBasedSignalOffloader.java", "diffHunk": "@@ -499,6 +499,7 @@ public void sendSignals0() {\n                         original.onNext(signal == NULL_ON_NEXT ? null : uncheckedCast(signal));\n                     } catch (Throwable throwable) {\n                         setTerminated();\n+                        sendOnErrorToOriginal(throwable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDIyOQ=="}, "originalCommit": {"oid": "d2a7a0c9e0928c57874ce9f18083767cad83dc41"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMjg3MQ==", "bodyText": "I don't think addSuppressed provides much value here, I would be in favor of removing it but lets do this in a followup PR.", "url": "https://github.com/apple/servicetalk/pull/1222#discussion_r526532871", "createdAt": "2020-11-19T01:30:45Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/ThreadBasedSignalOffloader.java", "diffHunk": "@@ -499,6 +499,7 @@ public void sendSignals0() {\n                         original.onNext(signal == NULL_ON_NEXT ? null : uncheckedCast(signal));\n                     } catch (Throwable throwable) {\n                         setTerminated();\n+                        sendOnErrorToOriginal(throwable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDIyOQ=="}, "originalCommit": {"oid": "d2a7a0c9e0928c57874ce9f18083767cad83dc41"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzNzkxNw==", "bodyText": "actually now that you mention safeOnError in the other comment ... I will take a pass here and update the code to use the common utilities.", "url": "https://github.com/apple/servicetalk/pull/1222#discussion_r526537917", "createdAt": "2020-11-19T01:46:18Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/ThreadBasedSignalOffloader.java", "diffHunk": "@@ -499,6 +499,7 @@ public void sendSignals0() {\n                         original.onNext(signal == NULL_ON_NEXT ? null : uncheckedCast(signal));\n                     } catch (Throwable throwable) {\n                         setTerminated();\n+                        sendOnErrorToOriginal(throwable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDIyOQ=="}, "originalCommit": {"oid": "d2a7a0c9e0928c57874ce9f18083767cad83dc41"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTIyNTQwOnYy", "diffSide": "RIGHT", "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/TaskBasedSignalOffloader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1OTo1MFrOH2IaNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1OTo1MFrOH2IaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMjkzMg==", "bodyText": "Because we try-catch target.onError(th) invocation, finally is not necessary anymore. Consider using SubscriberUtils.safeOnError for simplicity.", "url": "https://github.com/apple/servicetalk/pull/1222#discussion_r526522932", "createdAt": "2020-11-19T00:59:50Z", "author": {"login": "idelpivnitskiy"}, "path": "servicetalk-concurrent-internal/src/main/java/io/servicetalk/concurrent/internal/TaskBasedSignalOffloader.java", "diffHunk": "@@ -358,15 +358,13 @@ public void run() {\n                         } catch (Throwable th) {\n                             clearSignalsFromExecutorThread();\n                             try {\n+                                target.onError(th);\n+                            } catch (Throwable throwable) {\n+                                LOGGER.error(\"Ignored unexpected exception from onError(). Subscriber: {}\", target,\n+                                        throwable);\n+                            } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a7a0c9e0928c57874ce9f18083767cad83dc41"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2441, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}