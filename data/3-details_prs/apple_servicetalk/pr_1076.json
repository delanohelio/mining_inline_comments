{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzQ0MjA3", "number": 1076, "title": "Replace MaxSizeBasedWriteDemandEstimator with EWMAWriteDemandEstimator", "bodyText": "Motivation:\nMaxSizeBasedWriteDemandEstimator allocates an array of 32 elements by\ndefault to keep historical size information. This can introduce a lot of\nallocation and has been shown in benchmarks to consist of >3% of\nallocations inside a TLAB and >%90 of allocations outside of a TLAB. The\nestimation fidelity can be reduced with an Exponential Weighted Moving\nAverage given the loose estimation requirements which can also reduce\nthe allocation pressure.\nModification:\n\nRemove MaxSizeBasedWriteDemandEstimator\nAdd EWMAWriteDemandEstimator which uses Exponential Weighted Moving\nAverage to estimate requestN\n\nResult:\nLess memory pressure introduces while estimating requestN for writing\ndata.", "createdAt": "2020-06-02T04:35:31Z", "url": "https://github.com/apple/servicetalk/pull/1076", "merged": true, "mergeCommit": {"oid": "848678fe9aca077bc5a50a18d4c3a6a748d64077"}, "closed": true, "closedAt": "2020-06-03T15:35:03Z", "author": {"login": "Scottmitch"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnMhIvgH2gAyNDI2MzQ0MjA3OjUwMzI4MTZkMzBhMmY4OGEyYzMyZWUzZGU2YjlkNTY2MDk2ZDA4MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnrRH6gFqTQyMzY3NjQwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/5032816d30a2f88a2c32ee3de6b9d566096d081d", "committedDate": "2020-06-02T03:44:11Z", "message": "Replace MaxSizeBasedWriteDemandEstimator with EWMAWriteDemandEstimator\n\nMotivation:\nMaxSizeBasedWriteDemandEstimator allocates an array of 32 elements by\ndefault to keep historical size information. This can introduce a lot of\nallocation and has been shown in benchmarks to consist of >3% of\nallocations inside a TLAB and >%90 of allocations outside of a TLAB. The\nestimation fidelity can be reduced with an Exponential Weighted Moving\nAverage given the loose estimation requirements which can also reduce\nthe allocation pressure.\n\nModification:\n- Remove MaxSizeBasedWriteDemandEstimator\n- Add EWMAWriteDemandEstimator which uses Exponential Weighted Moving\nAverage to estimate requestN\n\nResult:\nLess memory pressure introduces while estimating requestN for writing\ndata."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzM3ODc0", "url": "https://github.com/apple/servicetalk/pull/1076#pullrequestreview-422337874", "createdAt": "2020-06-02T04:42:55Z", "commit": {"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo0Mjo1NVrOGdh3Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo0Mjo1NVrOGdh3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxNjY5MQ==", "bodyText": "we can make this more configurable in the future (e.g. 5 correlates to decay factor) ... but these classes aren't very exposed at the moment and I think we can defer until we get some more demand to expose.", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433616691", "createdAt": "2020-06-02T04:42:55Z", "author": {"login": "Scottmitch"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/EWMAWriteDemandEstimator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import static io.servicetalk.transport.netty.internal.OverlappingCapacityAwareEstimator.SizeEstimator.defaultEstimator;\n+import static java.lang.Math.max;\n+\n+final class EWMAWriteDemandEstimator extends OverlappingCapacityAwareEstimator {\n+    private static final double WEIGHT_NEW = 1 / 5d;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDMwNjIw", "url": "https://github.com/apple/servicetalk/pull/1076#pullrequestreview-422430620", "createdAt": "2020-06-02T07:57:35Z", "commit": {"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1NzozNVrOGdmTsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1NzozNVrOGdmTsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4OTUyMQ==", "bodyText": "What is this import needed for ?", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433689521", "createdAt": "2020-06-02T07:57:35Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/OverlappingCapacityAwareEstimator.java", "diffHunk": "@@ -17,6 +17,8 @@\n \n import io.netty.channel.FileRegion;\n \n+import java.nio.ByteBuffer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5032816d30a2f88a2c32ee3de6b9d566096d081d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82a949b5c610d5973d7309b148f60ee07e3450e8", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/82a949b5c610d5973d7309b148f60ee07e3450e8", "committedDate": "2020-06-02T14:38:55Z", "message": "remove unused import/code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzU0MzI4", "url": "https://github.com/apple/servicetalk/pull/1076#pullrequestreview-422754328", "createdAt": "2020-06-02T14:46:46Z", "commit": {"oid": "82a949b5c610d5973d7309b148f60ee07e3450e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo0Njo0NlrOGd1O4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo0Njo0NlrOGd1O4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNDA0OA==", "bodyText": "btw why is this constructor needed at all ? This is private so it will never be used outside of this class which means we could just only keep the EWMAWriteDemandEstimator(long sizeAccumulator) constructor.", "url": "https://github.com/apple/servicetalk/pull/1076#discussion_r433934048", "createdAt": "2020-06-02T14:46:46Z", "author": {"login": "normanmaurer"}, "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/EWMAWriteDemandEstimator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import static io.servicetalk.transport.netty.internal.OverlappingCapacityAwareEstimator.SizeEstimator.defaultEstimator;\n+import static java.lang.Math.max;\n+\n+final class EWMAWriteDemandEstimator extends OverlappingCapacityAwareEstimator {\n+    private static final double WEIGHT_NEW = 1 / 5d;\n+    private static final double WEIGHT_HISTORICAL = 1 - WEIGHT_NEW;\n+    private long sizeAccumulator;\n+\n+    EWMAWriteDemandEstimator() {\n+        this(1024);\n+    }\n+\n+    EWMAWriteDemandEstimator(long sizeAccumulator) {\n+        this(sizeAccumulator, defaultEstimator());\n+    }\n+\n+    private EWMAWriteDemandEstimator(long sizeAccumulator, SizeEstimator sizeEstimator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a949b5c610d5973d7309b148f60ee07e3450e8"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa96bf4e18cbe73925bb8a21c015ccb5aab01e7", "author": {"user": {"login": "Scottmitch", "name": "Scott Mitchell"}}, "url": "https://github.com/apple/servicetalk/commit/8aa96bf4e18cbe73925bb8a21c015ccb5aab01e7", "committedDate": "2020-06-02T15:00:08Z", "message": "more cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjc2NDA3", "url": "https://github.com/apple/servicetalk/pull/1076#pullrequestreview-423676407", "createdAt": "2020-06-03T15:33:45Z", "commit": {"oid": "8aa96bf4e18cbe73925bb8a21c015ccb5aab01e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3733, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}