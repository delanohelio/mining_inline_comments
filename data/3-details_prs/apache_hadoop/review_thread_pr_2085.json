{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDk1MDkw", "number": 2085, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozMDo1OVrOEINrYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0Mzo1OVrOEMpe0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ4MTYzOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozMDo1OVrOGoCjqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTozOToyNVrOGogaMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODEyMA==", "bodyText": "replace with lambda statement?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444638120", "createdAt": "2020-06-24T04:30:59Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -345,28 +373,28 @@ public long read() {\n      * implementation, otherwise is arranges for the cache to be updated later\n      */\n     @Override\n-    public ListenableFuture<List<String>> reload(final String key,\n-                                                 List<String> oldValue)\n+    public ListenableFuture<Set<String>> reload(final String key,\n+                                                 Set<String> oldValue)\n         throws Exception {\n       LOG.debug(\"GroupCacheLoader - reload (async).\");\n       if (!reloadGroupsInBackground) {\n         return super.reload(key, oldValue);\n       }\n \n       backgroundRefreshQueued.incrementAndGet();\n-      ListenableFuture<List<String>> listenableFuture =\n-          executorService.submit(new Callable<List<String>>() {\n+      ListenableFuture<Set<String>> listenableFuture =\n+          executorService.submit(new Callable<Set<String>>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyNzIxNg==", "bodyText": "Good catch. Fixed.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445127216", "createdAt": "2020-06-24T19:39:25Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -345,28 +373,28 @@ public long read() {\n      * implementation, otherwise is arranges for the cache to be updated later\n      */\n     @Override\n-    public ListenableFuture<List<String>> reload(final String key,\n-                                                 List<String> oldValue)\n+    public ListenableFuture<Set<String>> reload(final String key,\n+                                                 Set<String> oldValue)\n         throws Exception {\n       LOG.debug(\"GroupCacheLoader - reload (async).\");\n       if (!reloadGroupsInBackground) {\n         return super.reload(key, oldValue);\n       }\n \n       backgroundRefreshQueued.incrementAndGet();\n-      ListenableFuture<List<String>> listenableFuture =\n-          executorService.submit(new Callable<List<String>>() {\n+      ListenableFuture<Set<String>> listenableFuture =\n+          executorService.submit(new Callable<Set<String>>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODEyMA=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ4NzIxOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/JniBasedUnixGroupsMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozNDo0NVrOGoCm_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo0MToxMlrOGogdjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODk3NA==", "bodyText": "suggest single class import.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444638974", "createdAt": "2020-06-24T04:34:45Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/JniBasedUnixGroupsMapping.java", "diffHunk": "@@ -19,9 +19,9 @@\n package org.apache.hadoop.security;\n \n import java.io.IOException;\n-import java.util.Arrays;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyODA3OA==", "bodyText": "IntelliJ auto folded the imports. I will fix them in the next commit.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445128078", "createdAt": "2020-06-24T19:41:12Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/JniBasedUnixGroupsMapping.java", "diffHunk": "@@ -19,9 +19,9 @@\n package org.apache.hadoop.security;\n \n import java.io.IOException;\n-import java.util.Arrays;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODk3NA=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQ5OTU2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/NullGroupsMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo0MzoyOFrOGoCuVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo0MTo1MVrOGoge4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MDg1Mg==", "bodyText": "return Collections.emptySet();\nreturn EMPTY set rather than Null may be more safety?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444640852", "createdAt": "2020-06-24T04:43:28Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/NullGroupsMapping.java", "diffHunk": "@@ -31,6 +33,19 @@\n   public void cacheGroupsAdd(List<String> groups) {\n   }\n \n+  /**\n+   * Get all various group memberships of a given user.\n+   * Returns EMPTY set in case of non-existing user\n+   *\n+   * @param user User's name\n+   * @return set of group memberships of user\n+   * @throws IOException\n+   */\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyODQxOA==", "bodyText": "Fixed.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445128418", "createdAt": "2020-06-24T19:41:51Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/NullGroupsMapping.java", "diffHunk": "@@ -31,6 +33,19 @@\n   public void cacheGroupsAdd(List<String> groups) {\n   }\n \n+  /**\n+   * Get all various group memberships of a given user.\n+   * Returns EMPTY set in case of non-existing user\n+   *\n+   * @param user User's name\n+   * @return set of group memberships of user\n+   * @throws IOException\n+   */\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MDg1Mg=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUxMjM1OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MjowN1rOGoC19g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo0MjoyMVrOGogfyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjgwNg==", "bodyText": "another one star import.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444642806", "createdAt": "2020-06-24T04:52:07Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java", "diffHunk": "@@ -20,10 +20,7 @@\n import java.io.DataInput;\n import java.io.DataOutput;\n import java.io.IOException;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyODY1MQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445128651", "createdAt": "2020-06-24T19:42:21Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java", "diffHunk": "@@ -20,10 +20,7 @@\n import java.io.DataInput;\n import java.io.DataOutput;\n import java.io.IOException;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjgwNg=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUyMTA0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/lib/service/security/DummyGroupMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1NzozNFrOGoC7Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo0NjoxNFrOGognsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDE2Ng==", "bodyText": "return Collections.emptySet(); ?\nBTW, it seems that class DummyGroupMapping is never used now, do we need scrubbed it off?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444644166", "createdAt": "2020-06-24T04:57:34Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/lib/service/security/DummyGroupMapping.java", "diffHunk": "@@ -47,4 +48,9 @@ public void cacheGroupsRefresh() throws IOException {\n   @Override\n   public void cacheGroupsAdd(List<String> groups) throws IOException {\n   }\n+\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMDY3NA==", "bodyText": "Fixed.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445130674", "createdAt": "2020-06-24T19:46:14Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/lib/service/security/DummyGroupMapping.java", "diffHunk": "@@ -47,4 +48,9 @@ public void cacheGroupsRefresh() throws IOException {\n   @Override\n   public void cacheGroupsAdd(List<String> groups) throws IOException {\n   }\n+\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDE2Ng=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUyNjQzOnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterUserMappings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowMDo0MVrOGoC-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo1MDo0NVrOGogxLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDk4MQ==", "bodyText": "Do we need keep the same logic with getGroups. Not sure if this method will invoke by other unit test.\n    @Override\n    public List<String> getGroups(String user) throws IOException {\n      LOG.info(\"Getting groups in MockUnixGroupsMapping\");\n      String g1 = user + (10 * i + 1);\n      String g2 = user + (10 * i + 2);\n      List<String> l = new ArrayList<String>(2);\n      l.add(g1);\n      l.add(g2);\n      i++;\n      return l;\n    }", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444644981", "createdAt": "2020-06-24T05:00:41Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterUserMappings.java", "diffHunk": "@@ -111,6 +112,11 @@ public void cacheGroupsRefresh() throws IOException {\n     @Override\n     public void cacheGroupsAdd(List<String> groups) throws IOException {\n     }\n+\n+    @Override\n+    public Set<String> getGroupsSet(String user) throws IOException {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMzEwMg==", "bodyText": "Fixed with similar logic.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445133102", "createdAt": "2020-06-24T19:50:45Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterUserMappings.java", "diffHunk": "@@ -111,6 +112,11 @@ public void cacheGroupsRefresh() throws IOException {\n     @Override\n     public void cacheGroupsAdd(List<String> groups) throws IOException {\n     }\n+\n+    @Override\n+    public Set<String> getGroupsSet(String user) throws IOException {\n+      return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDk4MQ=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUyOTA3OnYy", "diffSide": "LEFT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowMjoyN1rOGoDAJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo1MDozMFrOGogwnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTQxMg==", "bodyText": "It seems that is not related to this changes.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444645412", "createdAt": "2020-06-24T05:02:27Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java", "diffHunk": "@@ -549,7 +549,6 @@ private boolean hasPermission(INodeAttributes inode, FsAction access) {\n    * - Default entries may be present, but they are ignored during enforcement.\n    *\n    * @param inode INodeAttributes accessed inode\n-   * @param snapshotId int snapshot ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMjk1Nw==", "bodyText": "I just reverted this change.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r445132957", "createdAt": "2020-06-24T19:50:30Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java", "diffHunk": "@@ -549,7 +549,6 @@ private boolean hasPermission(INodeAttributes inode, FsAction access) {\n    * - Default entries may be present, but they are ignored during enforcement.\n    *\n    * @param inode INodeAttributes accessed inode\n-   * @param snapshotId int snapshot ID", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTQxMg=="}, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDkwMDE1OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoxODoxM1rOGpor3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoxODoxM1rOGpor3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxMTM4OQ==", "bodyText": "Would it make sense to deprecate this API to push users to use the new API?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r446311389", "createdAt": "2020-06-26T17:18:13Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -203,17 +202,47 @@ private IOException noGroupsForUser(String user) {\n   /**\n    * Get the group memberships of a given user.\n    * If the user's group is not cached, this method may block.\n+   * Note this method can be expensive as it involves Set->List conversion.\n+   * For user with large group membership (i.e., > 1000 groups), we recommend\n+   * using getGroupSet to avoid the conversion and fast membership look up via\n+   * contains().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDkxMDYxOnYy", "diffSide": "LEFT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoyMTo1MFrOGpoypQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoyMTo1MFrOGpoypQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxMzEyNQ==", "bodyText": "No need to add Collections.unmodifiableSet here as the caller from the public API will do it.  Will fix in the next commit.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r446313125", "createdAt": "2020-06-26T17:21:50Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -203,17 +202,47 @@ private IOException noGroupsForUser(String user) {\n   /**\n    * Get the group memberships of a given user.\n    * If the user's group is not cached, this method may block.\n+   * Note this method can be expensive as it involves Set->List conversion.\n+   * For user with large group membership (i.e., > 1000 groups), we recommend\n+   * using getGroupSet to avoid the conversion and fast membership look up via\n+   * contains().\n    * @param user User's name\n-   * @return the group memberships of the user\n+   * @return the group memberships of the user as list\n    * @throws IOException if user does not exist\n    */\n   public List<String> getGroups(final String user) throws IOException {\n+    return Collections.unmodifiableList(new ArrayList<>(\n+        getGroupInternal(user)));\n+  }\n+\n+  /**\n+   * Get the group memberships of a given user.\n+   * If the user's group is not cached, this method may block.\n+   * This provide better performance when user has large group membership via\n+   * 1) avoid set->list->set conversion for the caller UGI/PermissionCheck\n+   * 2) fast lookup using contains() via Set instead of List\n+   * @param user User's name\n+   * @return the group memberships of the user as set\n+   * @throws IOException if user does not exist\n+   */\n+  public Set<String> getGroupsSet(final String user) throws IOException {\n+    return Collections.unmodifiableSet(getGroupInternal(user));\n+  }\n+\n+  /**\n+   * Get the group memberships of a given user.\n+   * If the user's group is not cached, this method may block.\n+   * @param user User's name\n+   * @return the group memberships of the user as Set\n+   * @throws IOException if user does not exist\n+   */\n+  private Set<String> getGroupInternal(final String user) throws IOException {\n     // No need to lookup for groups of static users\n-    Map<String, List<String>> staticUserToGroupsMap = staticMapRef.get();\n+    Map<String, Set<String>> staticUserToGroupsMap = staticMapRef.get();\n     if (staticUserToGroupsMap != null) {\n-      List<String> staticMapping = staticUserToGroupsMap.get(user);\n+      Set<String> staticMapping = staticUserToGroupsMap.get(user);\n       if (staticMapping != null) {\n-        return staticMapping;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjk4MDAzOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0Mzo1OVrOGu4jrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzozOTowN1rOGu8wDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDMxNg==", "bodyText": "Why do we use volatile variables here?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r451814316", "createdAt": "2020-07-08T20:43:59Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java", "diffHunk": "@@ -320,21 +321,21 @@\n   private Iterator<BindUserInfo> bindUsers;\n   private BindUserInfo currentBindUser;\n \n-  private String userbaseDN;\n+  private volatile String userbaseDN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4MzAyMg==", "bodyText": "Just realized it's there to make findbugs happy.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r451883022", "createdAt": "2020-07-08T23:39:07Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java", "diffHunk": "@@ -320,21 +321,21 @@\n   private Iterator<BindUserInfo> bindUsers;\n   private BindUserInfo currentBindUser;\n \n-  private String userbaseDN;\n+  private volatile String userbaseDN;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDMxNg=="}, "originalCommit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3449, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}