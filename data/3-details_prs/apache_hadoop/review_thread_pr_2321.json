{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjQ1MDAx", "number": 2321, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MzoxNFrOElyxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyNTo0M1rOEmtC7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDY0NjcwOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MzoxNFrOHVd1cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MzoxNFrOHVd1cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MDk2Mw==", "bodyText": "pass in \"\" instead of null and theres' no need for the ? : below", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492270963", "createdAt": "2020-09-21T18:43:14Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -621,6 +621,9 @@ public static LocalFileSystem newInstanceLocal(Configuration conf)\n    * @throws IOException a problem arose closing one or more filesystem.\n    */\n   public static void closeAll() throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAll\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "721402f9c40adec731c5739834ee5cefca389f86"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDY0ODE2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0Mzo0MVrOHVd2Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0Mzo0MVrOHVd2Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MTE5MQ==", "bodyText": "just use ugi and let the automatic to.String to the work", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492271191", "createdAt": "2020-09-21T18:43:41Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -632,9 +635,21 @@ public static void closeAll() throws IOException {\n    */\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "721402f9c40adec731c5739834ee5cefca389f86"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDY1NjEyOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0NTo1MlrOHVd7Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjozMzowNlrOHV3v0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MjQyMg==", "bodyText": "Prefer SLF4J {} and the values as varargs.\nYou might want to think that at TRACE the entire throwable is logged. Why so? one level up isn't always enough", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492272422", "createdAt": "2020-09-21T18:45:52Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -632,9 +635,21 @@ public static void closeAll() throws IOException {\n    */\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+    }\n     CACHE.closeAll(ugi);\n   }\n \n+  private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n+    StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n+    LOGGER.debug(\n+        \"FileSystem.\" + methodName + \"() called by method: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "721402f9c40adec731c5739834ee5cefca389f86"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5NTUwNw==", "bodyText": "Hi Steve, thanks for taking a look at this!\nCould you clarify what you mean by this?: You might want to think that at TRACE the entire throwable is logged. Why so? one level up isn't always enough", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492695507", "createdAt": "2020-09-22T12:33:06Z", "author": {"login": "klcopp"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -632,9 +635,21 @@ public static void closeAll() throws IOException {\n    */\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+    }\n     CACHE.closeAll(ugi);\n   }\n \n+  private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n+    StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n+    LOGGER.debug(\n+        \"FileSystem.\" + methodName + \"() called by method: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MjQyMg=="}, "originalCommit": {"oid": "721402f9c40adec731c5739834ee5cefca389f86"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDE4NTIxOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyMzozM1rOHW45sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyMzozM1rOHW45sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2Mjk5Mg==", "bodyText": "just use the throwable created on Line 645", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r493762992", "createdAt": "2020-09-23T17:23:33Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n+            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    if (LOGGER.isTraceEnabled()) {\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b4342e2636a20e358219ba59982f3e6995e3cbf"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDE5MzcyOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyNTo0M1rOHW4-yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNzozNDowOFrOHXNcBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NDI5OA==", "bodyText": "include URI of filesystem\npass in callingMethod and let it's toString() include all the information; no need to replicate -especially as toString handles file/line unknown.", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r493764298", "createdAt": "2020-09-23T17:25:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b4342e2636a20e358219ba59982f3e6995e3cbf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5OTQ2MQ==", "bodyText": "I included the URI in the case of close().", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r494099461", "createdAt": "2020-09-24T07:34:08Z", "author": {"login": "klcopp"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NDI5OA=="}, "originalCommit": {"oid": "2b4342e2636a20e358219ba59982f3e6995e3cbf"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3302, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}