{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDk1MDkw", "number": 2085, "title": "HADOOP-17079. Optimize UGI#getGroups by adding UGI#getGroupsSet.", "bodyText": "NOTICE\nhttps://issues.apache.org/jira/browse/HADOOP-17079\nUserGroupInformation.java adding getGroupsSet() that returns a Set instead of List. The callers of Groups#getGroups() in Hadoop are replaced with getGroupsSet() as we know Set#contains() will be\ngenerally faster than List#contains expecially the user has large group memeberships. In some of our cusotmers' datalake use cases, user can typically have hundreds or thousands of group members. Changing from list to set make a big difference.\nGroupMappingServiceProvider.java add a new method that returns result as Set instead of List\nGroups.java Change to maintain cached user -> groups mapping as a set instead of list.", "createdAt": "2020-06-21T04:43:43Z", "url": "https://github.com/apache/hadoop/pull/2085", "merged": true, "mergeCommit": {"oid": "f91a8ad88b00b50231f1ae3f8820a25c963bb561"}, "closed": true, "closedAt": "2020-07-09T18:33:38Z", "author": {"login": "xiaoyuyao"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuS96hgFqTQzNjMxNjM0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABczDMLNAFqTQ0NTE5ODE5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MzE2MzQ0", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-436316344", "createdAt": "2020-06-24T04:30:59Z", "commit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDozMDo1OVrOGoCjqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowMjoyN1rOGoDAJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODEyMA==", "bodyText": "replace with lambda statement?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444638120", "createdAt": "2020-06-24T04:30:59Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -345,28 +373,28 @@ public long read() {\n      * implementation, otherwise is arranges for the cache to be updated later\n      */\n     @Override\n-    public ListenableFuture<List<String>> reload(final String key,\n-                                                 List<String> oldValue)\n+    public ListenableFuture<Set<String>> reload(final String key,\n+                                                 Set<String> oldValue)\n         throws Exception {\n       LOG.debug(\"GroupCacheLoader - reload (async).\");\n       if (!reloadGroupsInBackground) {\n         return super.reload(key, oldValue);\n       }\n \n       backgroundRefreshQueued.incrementAndGet();\n-      ListenableFuture<List<String>> listenableFuture =\n-          executorService.submit(new Callable<List<String>>() {\n+      ListenableFuture<Set<String>> listenableFuture =\n+          executorService.submit(new Callable<Set<String>>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODk3NA==", "bodyText": "suggest single class import.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444638974", "createdAt": "2020-06-24T04:34:45Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/JniBasedUnixGroupsMapping.java", "diffHunk": "@@ -19,9 +19,9 @@\n package org.apache.hadoop.security;\n \n import java.io.IOException;\n-import java.util.Arrays;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MDg1Mg==", "bodyText": "return Collections.emptySet();\nreturn EMPTY set rather than Null may be more safety?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444640852", "createdAt": "2020-06-24T04:43:28Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/NullGroupsMapping.java", "diffHunk": "@@ -31,6 +33,19 @@\n   public void cacheGroupsAdd(List<String> groups) {\n   }\n \n+  /**\n+   * Get all various group memberships of a given user.\n+   * Returns EMPTY set in case of non-existing user\n+   *\n+   * @param user User's name\n+   * @return set of group memberships of user\n+   * @throws IOException\n+   */\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjgwNg==", "bodyText": "another one star import.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444642806", "createdAt": "2020-06-24T04:52:07Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java", "diffHunk": "@@ -20,10 +20,7 @@\n import java.io.DataInput;\n import java.io.DataOutput;\n import java.io.IOException;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDE2Ng==", "bodyText": "return Collections.emptySet(); ?\nBTW, it seems that class DummyGroupMapping is never used now, do we need scrubbed it off?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444644166", "createdAt": "2020-06-24T04:57:34Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/lib/service/security/DummyGroupMapping.java", "diffHunk": "@@ -47,4 +48,9 @@ public void cacheGroupsRefresh() throws IOException {\n   @Override\n   public void cacheGroupsAdd(List<String> groups) throws IOException {\n   }\n+\n+  @Override\n+  public Set<String> getGroupsSet(String user) throws IOException {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDk4MQ==", "bodyText": "Do we need keep the same logic with getGroups. Not sure if this method will invoke by other unit test.\n    @Override\n    public List<String> getGroups(String user) throws IOException {\n      LOG.info(\"Getting groups in MockUnixGroupsMapping\");\n      String g1 = user + (10 * i + 1);\n      String g2 = user + (10 * i + 2);\n      List<String> l = new ArrayList<String>(2);\n      l.add(g1);\n      l.add(g2);\n      i++;\n      return l;\n    }", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444644981", "createdAt": "2020-06-24T05:00:41Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterUserMappings.java", "diffHunk": "@@ -111,6 +112,11 @@ public void cacheGroupsRefresh() throws IOException {\n     @Override\n     public void cacheGroupsAdd(List<String> groups) throws IOException {\n     }\n+\n+    @Override\n+    public Set<String> getGroupsSet(String user) throws IOException {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTQxMg==", "bodyText": "It seems that is not related to this changes.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r444645412", "createdAt": "2020-06-24T05:02:27Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java", "diffHunk": "@@ -549,7 +549,6 @@ private boolean hasPermission(INodeAttributes inode, FsAction access) {\n    * - Default entries may be present, but they are ignored during enforcement.\n    *\n    * @param inode INodeAttributes accessed inode\n-   * @param snapshotId int snapshot ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a7f6107e136ec34308e5b064da2002dbeb66128", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/5a7f6107e136ec34308e5b064da2002dbeb66128", "committedDate": "2020-06-21T04:39:27Z", "message": "HADOOP-17079. Optimize UGI#getGroups by adding UGI#getGroupsSet."}, "afterCommit": {"oid": "2332e0d00dc79c366bce24a42a032537ef960403", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/2332e0d00dc79c366bce24a42a032537ef960403", "committedDate": "2020-06-24T19:56:02Z", "message": "Address code review feedbacks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDY1ODM3", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-438465837", "createdAt": "2020-06-26T17:18:13Z", "commit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoxODoxM1rOGpor3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoxODoxM1rOGpor3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxMTM4OQ==", "bodyText": "Would it make sense to deprecate this API to push users to use the new API?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r446311389", "createdAt": "2020-06-26T17:18:13Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -203,17 +202,47 @@ private IOException noGroupsForUser(String user) {\n   /**\n    * Get the group memberships of a given user.\n    * If the user's group is not cached, this method may block.\n+   * Note this method can be expensive as it involves Set->List conversion.\n+   * For user with large group membership (i.e., > 1000 groups), we recommend\n+   * using getGroupSet to avoid the conversion and fast membership look up via\n+   * contains().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDY4MDk5", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-438468099", "createdAt": "2020-06-26T17:21:50Z", "commit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoyMTo1MFrOGpoypQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzoyMTo1MFrOGpoypQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxMzEyNQ==", "bodyText": "No need to add Collections.unmodifiableSet here as the caller from the public API will do it.  Will fix in the next commit.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r446313125", "createdAt": "2020-06-26T17:21:50Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java", "diffHunk": "@@ -203,17 +202,47 @@ private IOException noGroupsForUser(String user) {\n   /**\n    * Get the group memberships of a given user.\n    * If the user's group is not cached, this method may block.\n+   * Note this method can be expensive as it involves Set->List conversion.\n+   * For user with large group membership (i.e., > 1000 groups), we recommend\n+   * using getGroupSet to avoid the conversion and fast membership look up via\n+   * contains().\n    * @param user User's name\n-   * @return the group memberships of the user\n+   * @return the group memberships of the user as list\n    * @throws IOException if user does not exist\n    */\n   public List<String> getGroups(final String user) throws IOException {\n+    return Collections.unmodifiableList(new ArrayList<>(\n+        getGroupInternal(user)));\n+  }\n+\n+  /**\n+   * Get the group memberships of a given user.\n+   * If the user's group is not cached, this method may block.\n+   * This provide better performance when user has large group membership via\n+   * 1) avoid set->list->set conversion for the caller UGI/PermissionCheck\n+   * 2) fast lookup using contains() via Set instead of List\n+   * @param user User's name\n+   * @return the group memberships of the user as set\n+   * @throws IOException if user does not exist\n+   */\n+  public Set<String> getGroupsSet(final String user) throws IOException {\n+    return Collections.unmodifiableSet(getGroupInternal(user));\n+  }\n+\n+  /**\n+   * Get the group memberships of a given user.\n+   * If the user's group is not cached, this method may block.\n+   * @param user User's name\n+   * @return the group memberships of the user as Set\n+   * @throws IOException if user does not exist\n+   */\n+  private Set<String> getGroupInternal(final String user) throws IOException {\n     // No need to lookup for groups of static users\n-    Map<String, List<String>> staticUserToGroupsMap = staticMapRef.get();\n+    Map<String, Set<String>> staticUserToGroupsMap = staticMapRef.get();\n     if (staticUserToGroupsMap != null) {\n-      List<String> staticMapping = staticUserToGroupsMap.get(user);\n+      Set<String> staticMapping = staticUserToGroupsMap.get(user);\n       if (staticMapping != null) {\n-        return staticMapping;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDgxOTk2", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-438481996", "createdAt": "2020-06-26T17:43:51Z", "commit": {"oid": "4344467575bbc5da03173204adb569e47579a0cd"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5994e784c341041f1043f4d5e550a7daf019da3", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/f5994e784c341041f1043f4d5e550a7daf019da3", "committedDate": "2020-06-26T22:25:54Z", "message": "HADOOP-17079. Optimize UGI#getGroups by adding UGI#getGroupsSet."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68a4062707ae94c039c889db2e962e7c95ea26e3", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/68a4062707ae94c039c889db2e962e7c95ea26e3", "committedDate": "2020-06-26T22:25:54Z", "message": "Address code review feedbacks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2846431cdfd8e7209d84afb7f37955ad26c568", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/7b2846431cdfd8e7209d84afb7f37955ad26c568", "committedDate": "2020-06-26T22:25:54Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c1bcaa8be2f2161fe6367484cf0e730dd492e30", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/7c1bcaa8be2f2161fe6367484cf0e730dd492e30", "committedDate": "2020-06-26T22:25:54Z", "message": "Fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0447676fef3d4de5615cc776e923083f55845c4", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/a0447676fef3d4de5615cc776e923083f55845c4", "committedDate": "2020-06-26T22:25:54Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec7feede7d42f5c3698733f2fb4c9ad46842fd89", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/ec7feede7d42f5c3698733f2fb4c9ad46842fd89", "committedDate": "2020-06-26T22:25:54Z", "message": "findbugs and checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dae651fd7b3834aa001a9f97384196ab91127d5", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/8dae651fd7b3834aa001a9f97384196ab91127d5", "committedDate": "2020-06-26T23:45:24Z", "message": "additional unit test fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bf15bab4c5141d77dcdb0b9f38076d05a038fab", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/3bf15bab4c5141d77dcdb0b9f38076d05a038fab", "committedDate": "2020-06-26T21:45:18Z", "message": "findbugs and checkstyle"}, "afterCommit": {"oid": "8dae651fd7b3834aa001a9f97384196ab91127d5", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/8dae651fd7b3834aa001a9f97384196ab91127d5", "committedDate": "2020-06-26T23:45:24Z", "message": "additional unit test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "214ee3da5abf89a6dad04a23d165cb47401b4f57", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/214ee3da5abf89a6dad04a23d165cb47401b4f57", "committedDate": "2020-06-28T00:16:02Z", "message": "Fix testGetGroupsToLower"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc2a4e08172d9a274f41c44d504a019229b59640", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/dc2a4e08172d9a274f41c44d504a019229b59640", "committedDate": "2020-06-28T00:18:57Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfb7c3cb26f0fad4b735b2c2c41c1be08da43848", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/dfb7c3cb26f0fad4b735b2c2c41c1be08da43848", "committedDate": "2020-06-28T00:34:24Z", "message": "add deprecated annotation for getGroups() call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/hadoop/commit/2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df", "committedDate": "2020-06-30T00:07:31Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjQ5OTUw", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-439649950", "createdAt": "2020-06-30T03:48:48Z", "commit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTE0ODAz", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-445114803", "createdAt": "2020-07-08T20:43:58Z", "commit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0Mzo1OVrOGu4jrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0Mzo1OVrOGu4jrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDMxNg==", "bodyText": "Why do we use volatile variables here?", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r451814316", "createdAt": "2020-07-08T20:43:59Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java", "diffHunk": "@@ -320,21 +321,21 @@\n   private Iterator<BindUserInfo> bindUsers;\n   private BindUserInfo currentBindUser;\n \n-  private String userbaseDN;\n+  private volatile String userbaseDN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTk4MTky", "url": "https://github.com/apache/hadoop/pull/2085#pullrequestreview-445198192", "createdAt": "2020-07-08T23:39:07Z", "commit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzozOTowN1rOGu8wDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzozOTowN1rOGu8wDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4MzAyMg==", "bodyText": "Just realized it's there to make findbugs happy.", "url": "https://github.com/apache/hadoop/pull/2085#discussion_r451883022", "createdAt": "2020-07-08T23:39:07Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java", "diffHunk": "@@ -320,21 +321,21 @@\n   private Iterator<BindUserInfo> bindUsers;\n   private BindUserInfo currentBindUser;\n \n-  private String userbaseDN;\n+  private volatile String userbaseDN;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDMxNg=="}, "originalCommit": {"oid": "2a88387ccf91531b42ac7eef1d2bfd8b2b81c5df"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4057, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}