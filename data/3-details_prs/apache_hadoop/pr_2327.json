{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODAwNjYy", "number": 2327, "title": "HADOOP-17276. Extend CallerContext to make it include many items", "bodyText": "JIRA: https://issues.apache.org/jira/browse/HADOOP-17276", "createdAt": "2020-09-22T09:14:32Z", "url": "https://github.com/apache/hadoop/pull/2327", "merged": true, "mergeCommit": {"oid": "d0d10f7e8f998779ef11182c0f5c60fc8f729b39"}, "closed": true, "closedAt": "2020-10-03T17:02:29Z", "author": {"login": "ferhui"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLUQSxAH2gAyNDkwODAwNjYyOjgzNTAwOWJhZmI2OTY0MmVmOTQ4Y2UzOTYxMTMyMzRjZWNlNTgyYTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOi5-IAH2gAyNDkwODAwNjYyOjQzNmVkNzMzNDQwNjJhODlmNTFlMjQ2MDBkYTc3NDVjNWNjMzE2ZjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "835009bafb69642ef948ce396113234cece582a0", "author": {"user": {"login": "ferhui", "name": "Hui Fei"}}, "url": "https://github.com/apache/hadoop/commit/835009bafb69642ef948ce396113234cece582a0", "committedDate": "2020-09-22T09:06:18Z", "message": "HADOOP-17276. Extend CallerContext to make it include many items"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNzUyOTIz", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-493752923", "createdAt": "2020-09-22T18:50:23Z", "commit": {"oid": "835009bafb69642ef948ce396113234cece582a0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1MDoyM1rOHWH65A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1MToxMVrOHWH8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2MDQ4NA==", "bodyText": "Having to pass the separator for the key value is weird.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r492960484", "createdAt": "2020-09-22T18:50:23Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallerContext.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ipc;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestCallerContext {\n+  @Test\n+  public void testBuilderAppend() {\n+    CallerContext.Builder builder = new CallerContext.Builder(\"context1\");\n+    CallerContext context =\n+        builder.append(\"context2\").append(\"key3\", \"value3\", \":\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "835009bafb69642ef948ce396113234cece582a0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2MDk3NA==", "bodyText": "This was the issue that Daryn was bringing up.\nI'm not sure if overriding an existing concept is safe.\nThe idea would be to add a new one with the proper key/value semantic.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r492960974", "createdAt": "2020-09-22T18:51:11Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -36,6 +36,7 @@\n @InterfaceStability.Evolving\n public final class CallerContext {\n   public static final Charset SIGNATURE_ENCODING = StandardCharsets.UTF_8;\n+  public static final String ITEM_SEPARATOR = \"\\\\$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "835009bafb69642ef948ce396113234cece582a0"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/a0b376f0589777ad96b034e0eb7008e688fc17ad", "committedDate": "2020-09-23T08:23:15Z", "message": "Make separator configurable and monify UT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MzA1MjYw", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-495305260", "createdAt": "2020-09-24T07:50:10Z", "commit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNzo1MDoxMVrOHXOA8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNzo1MDoxMVrOHXOA8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEwODkxMw==", "bodyText": "Thank you @ferhui for providing the patch.\nAre there any use cases for this method instead of calling append(key + kvSeparator + value) directly?", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r494108913", "createdAt": "2020-09-24T07:50:11Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -108,24 +117,86 @@ public String toString() {\n   }\n \n   /** The caller context builder. */\n-  public static final class Builder {\n-    private final String context;\n+  public static final class Builder implements Configurable {\n+    private String context;\n     private byte[] signature;\n+    private Configuration conf = new Configuration();\n \n     public Builder(String context) {\n       this.context = context;\n     }\n \n+    public Builder(String key, String value, String kvSeparator) {\n+      this.context = new StringBuilder(key)\n+          .append(kvSeparator)\n+          .append(value)\n+          .toString();\n+    }\n+\n     public Builder setSignature(byte[] signature) {\n       if (signature != null && signature.length > 0) {\n         this.signature = Arrays.copyOf(signature, signature.length);\n       }\n       return this;\n     }\n \n+    /**\n+     * Append new item to the context.\n+     * @param item\n+     * @return builder\n+     */\n+    public Builder append(String item) {\n+      if (CallerContext.isContextValid(context)) {\n+        this.context = new StringBuilder(context)\n+            .append(conf.get(HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_KEY,\n+                HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_DEFAULT))\n+            .append(item)\n+            .toString();\n+      } else {\n+        this.context = item;\n+      }\n+      return this;\n+    }\n+\n+    /**\n+     * Append new item which contains key and value to the context.\n+     * @param key\n+     * @param value\n+     * @param kvSeparator\n+     * @return builder\n+     */\n+    public Builder append(String key, String value, String kvSeparator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTMwNzQ0", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-496930744", "createdAt": "2020-09-26T01:56:56Z", "commit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwMTo1Njo1N1rOHYbUBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwMjowMToyMVrOHYbbrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM3NTM2Nw==", "bodyText": "I am not sure we need to implement the Configurable to make this flexible. How about:\n\nAdd a new final separator field\nAdd a new final StringBuilder sb = new StringBuilder(); field and remove context variable\nExisting constructor public Builder(String context) will simply callsb.append(context) and assign separator field with default value , aka HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_DEFAULT\nCreate a new constructor public Builder(Configuration conf) which initializes the separator with the config, do not save the conf since we do not need it\nAdd a new method public append(String key, String value) which calls sb.append(key).append(separator).append(value)\nReplace all places using builder.context with builder.sb.toString(), especially in CallerContext(Builder b) constructor.\n\nThis seems very straightforward without losing configurability:\n\nit will not allow user to mix different separator when appending multiple key/values since it's final either from the default , or from Configuration\nno need to create a new string builder every time calling append(key, value)\nuser does not need to call builder.setConf(conf)\nwe do not  save conf by implementing Configurable interface so this builder lightweight\n\nThoughts?", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r495375367", "createdAt": "2020-09-26T01:56:57Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -108,24 +117,86 @@ public String toString() {\n   }\n \n   /** The caller context builder. */\n-  public static final class Builder {\n-    private final String context;\n+  public static final class Builder implements Configurable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM3NTY3Mw==", "bodyText": "hadoop.caller.context.separator would just work for me. Shorter and easier to remember.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r495375673", "createdAt": "2020-09-26T01:57:38Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/main/resources/core-default.xml", "diffHunk": "@@ -3826,6 +3826,13 @@\n       in audit logs.\n     </description>\n   </property>\n+  <property>\n+    <name>hadoop.caller.context.item.separator</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM3NjA1Mg==", "bodyText": "Add an example with two key/value items to make this embarrassingly clear?", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r495376052", "createdAt": "2020-09-26T01:58:33Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/main/resources/core-default.xml", "diffHunk": "@@ -3826,6 +3826,13 @@\n       in audit logs.\n     </description>\n   </property>\n+  <property>\n+    <name>hadoop.caller.context.item.separator</name>\n+    <value>,</value>\n+    <description>\n+      The separator is for context which maybe contain many items.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM3NzMyNA==", "bodyText": "Use assertEquals to compare values, instead of comparing true with the return value of equals.\nassertEquals(\"context1$context2$key3:value3$$$\", builder.build().getContext());\n\nSimple reason: if it fails, the suggested way will show you expected value and real value of the context - which can help you debug.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r495377324", "createdAt": "2020-09-26T02:01:21Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallerContext.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ipc;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_DEFAULT;\n+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_KEY;\n+\n+public class TestCallerContext {\n+  @Test\n+  public void testBuilderAppend() {\n+    Configuration conf = new Configuration();\n+    conf.set(HADOOP_CALLER_CONTEXT_ITEM_SEPARATOR_KEY, \"$\");\n+    CallerContext.Builder builder = new CallerContext.Builder(null);\n+    builder.setConf(conf);\n+    CallerContext context =\n+        builder.append(\"context1\").append(\"context2\").append(\"key3\", \"value3\", \":\").build();\n+    Assert.assertEquals(true,\n+        context.getContext().contains(\"$\"));\n+    String[] items = context.getContext().split(\"\\\\$\");\n+    Assert.assertEquals(3, items.length);\n+    Assert.assertEquals(true, items[2].equals(\"key3:value3\"));\n+\n+    builder.append(\"$$\");\n+    Assert.assertEquals(true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0b376f0589777ad96b034e0eb7008e688fc17ad"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51090695932dbd94624bcbdef929fbf507d6c2d2", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/51090695932dbd94624bcbdef929fbf507d6c2d2", "committedDate": "2020-09-27T06:22:33Z", "message": "reconstruct context Builder with liuml07 suggestions and fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43e0309d953b408359f5bee0ada84c21473f027", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/a43e0309d953b408359f5bee0ada84c21473f027", "committedDate": "2020-09-27T06:35:02Z", "message": "remove uselese method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91907528d2fb9cab381e9a27be653b962a3dc2d9", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/91907528d2fb9cab381e9a27be653b962a3dc2d9", "committedDate": "2020-09-27T06:38:32Z", "message": "remove useless conf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d87313ec9d10af66e00502db3d71530ec936b9db", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/d87313ec9d10af66e00502db3d71530ec936b9db", "committedDate": "2020-09-27T16:13:19Z", "message": "fix UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/317a5f0465f72fdd212d3804c2e8a4adf13a11e3", "committedDate": "2020-09-28T02:50:33Z", "message": "Fix Yarn UT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzI5MDU1", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-497729055", "createdAt": "2020-09-28T17:01:50Z", "commit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzowMTo1MFrOHZHsDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzowMjozMlrOHZHtrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwMjQxNQ==", "bodyText": "I think it is cleaner to make it a method: getContext() in the Builder so we do the checks there.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496102415", "createdAt": "2020-09-28T17:01:50Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -54,7 +58,7 @@\n   private final byte[] signature;\n \n   private CallerContext(Builder builder) {\n-    this.context = builder.context;\n+    this.context = builder.sb.length() > 0 ? builder.sb.toString() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwMjgzMA==", "bodyText": "Should we make the colon a constant or even configurable?", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496102830", "createdAt": "2020-09-28T17:02:32Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -123,6 +140,37 @@ public Builder setSignature(byte[] signature) {\n       return this;\n     }\n \n+    /**\n+     * Append new item to the context.\n+     * @param item\n+     * @return builder\n+     */\n+    public Builder append(String item) {\n+      if (isValid(item)) {\n+        if (sb.length() > 0) {\n+          sb.append(separator);\n+        }\n+        sb.append(item);\n+      }\n+      return this;\n+    }\n+\n+    /**\n+     * Append new item which contains key and value to the context.\n+     * @param key\n+     * @param value\n+     * @return builder\n+     */\n+    public Builder append(String key, String value) {\n+      if (isValid(key) && isValid(value)) {\n+        if (sb.length() > 0) {\n+          sb.append(separator);\n+        }\n+        sb.append(key + \":\" + value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzYyMjU0", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-497762254", "createdAt": "2020-09-28T17:47:46Z", "commit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0Nzo0NlrOHZJQ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0Nzo0NlrOHZJQ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyODIxNQ==", "bodyText": "nit: final?", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496128215", "createdAt": "2020-09-28T17:47:46Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,24 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private final String separator;\n+    private StringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzY4NDQz", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-497768443", "createdAt": "2020-09-28T17:56:27Z", "commit": {"oid": "317a5f0465f72fdd212d3804c2e8a4adf13a11e3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/ac181340c6b6a0c63f2220287f8b1a409916dad3", "committedDate": "2020-09-29T02:41:29Z", "message": "Add getContext and getSignature to Builder, Replace append instead of +"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDM3NjIz", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-498037623", "createdAt": "2020-09-29T03:23:51Z", "commit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzoyMzo1MVrOHZXI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzoyNjo1NFrOHZXLnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NTU3MA==", "bodyText": "The name should be capitalized.\nI would also call it something like FIELD_SEPARATOR or KEY_VALUE_SEPARATOR_CHAR.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496355570", "createdAt": "2020-09-29T03:23:51Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -113,8 +113,9 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n+    private static final String colon = \":\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NTY3MQ==", "bodyText": "I think it would be a good place to have a javadoc describing what the context would look like and give examples.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496355671", "createdAt": "2020-09-29T03:24:19Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -140,6 +141,14 @@ public Builder setSignature(byte[] signature) {\n       return this;\n     }\n \n+    public String getContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NTcwNg==", "bodyText": "Simple javadoc.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496355706", "createdAt": "2020-09-29T03:24:29Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -140,6 +141,14 @@ public Builder setSignature(byte[] signature) {\n       return this;\n     }\n \n+    public String getContext() {\n+      return sb.length() > 0 ? sb.toString() : null;\n+    }\n+\n+    public byte[] getSignature() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NTkwOQ==", "bodyText": "something a little more descriptive like: fieldSeparator", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496355909", "createdAt": "2020-09-29T03:25:17Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,25 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String colon = \":\";\n+    private final String separator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NjA2MA==", "bodyText": "Expand a little. Same for the item one.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496356060", "createdAt": "2020-09-29T03:26:01Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -123,6 +141,45 @@ public Builder setSignature(byte[] signature) {\n       return this;\n     }\n \n+    public String getContext() {\n+      return sb.length() > 0 ? sb.toString() : null;\n+    }\n+\n+    public byte[] getSignature() {\n+      return signature;\n+    }\n+\n+    /**\n+     * Append new item to the context.\n+     * @param item\n+     * @return builder\n+     */\n+    public Builder append(String item) {\n+      if (isValid(item)) {\n+        if (sb.length() > 0) {\n+          sb.append(separator);\n+        }\n+        sb.append(item);\n+      }\n+      return this;\n+    }\n+\n+    /**\n+     * Append new item which contains key and value to the context.\n+     * @param key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NjI1NQ==", "bodyText": "This is technically not \"context\" but \"item\".\nGood to have a javadoc explaining what we don't allow.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r496356255", "createdAt": "2020-09-29T03:26:54Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,25 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String colon = \":\";\n+    private final String separator;\n+    private final StringBuilder sb = new StringBuilder();\n     private byte[] signature;\n \n     public Builder(String context) {\n-      this.context = context;\n+      separator = HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT;\n+      if (isValid(context)) {\n+        sb.append(context);\n+      }\n+    }\n+\n+    public Builder(Configuration conf) {\n+      separator = conf.get(HADOOP_CALLER_CONTEXT_SEPARATOR_KEY,\n+          HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT);\n+    }\n+\n+    private boolean isValid(String context) {\n+      return context != null && context.length() > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac181340c6b6a0c63f2220287f8b1a409916dad3"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a81004172e737535cc85050c84c98e52a289928a", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/a81004172e737535cc85050c84c98e52a289928a", "committedDate": "2020-09-29T05:03:33Z", "message": "Add javadoc and change var name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d12e7f19cd324ec0511bf19bd29f24aebb45c41", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/8d12e7f19cd324ec0511bf19bd29f24aebb45c41", "committedDate": "2020-09-29T05:05:37Z", "message": "grammar fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3edea36e65b65c922a088e6bb5c00f9db4336b53", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/3edea36e65b65c922a088e6bb5c00f9db4336b53", "committedDate": "2020-09-30T01:10:30Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzM4NTc4", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-499338578", "createdAt": "2020-09-30T11:38:31Z", "commit": {"oid": "3edea36e65b65c922a088e6bb5c00f9db4336b53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTozODozMVrOHaZZWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTozODozMVrOHaZZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0MTExNQ==", "bodyText": "After adding this constructor, new Builder(null) fails. This is an incompatible change because CallerContext is @Public.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r497441115", "createdAt": "2020-09-30T11:38:31Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,32 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String KEY_VALUE_SEPARATOR = \":\";\n+    private final String fieldSeparator;\n+    private final StringBuilder sb = new StringBuilder();\n     private byte[] signature;\n \n     public Builder(String context) {\n-      this.context = context;\n+      fieldSeparator = HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT;\n+      if (isValid(context)) {\n+        sb.append(context);\n+      }\n+    }\n+\n+    public Builder(Configuration conf) {\n+      fieldSeparator = conf.get(HADOOP_CALLER_CONTEXT_SEPARATOR_KEY,\n+          HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3edea36e65b65c922a088e6bb5c00f9db4336b53"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab72cef10dd10e78d86e450d4bbde7677f5c496", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/6ab72cef10dd10e78d86e450d4bbde7677f5c496", "committedDate": "2020-09-30T16:03:30Z", "message": "refactor builder constructor and remove type case in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjE5MDcw", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-499619070", "createdAt": "2020-09-30T16:38:37Z", "commit": {"oid": "6ab72cef10dd10e78d86e450d4bbde7677f5c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjozODozN1rOHamLzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjozODozN1rOHamLzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MDYzOQ==", "bodyText": "Can we throw illegal argument exception if the fieldSeparator also has \\t, \\n, or =? Thanks,", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r497650639", "createdAt": "2020-09-30T16:38:37Z", "author": {"login": "liuml07"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,32 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String KEY_VALUE_SEPARATOR = \":\";\n+    private final String fieldSeparator;\n+    private final StringBuilder sb = new StringBuilder();\n     private byte[] signature;\n \n     public Builder(String context) {\n-      this.context = context;\n+      this(context, new Configuration());\n+    }\n+\n+    public Builder(String context, Configuration conf) {\n+      if (isValid(context)) {\n+        sb.append(context);\n+      }\n+      fieldSeparator = conf.get(HADOOP_CALLER_CONTEXT_SEPARATOR_KEY,\n+          HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab72cef10dd10e78d86e450d4bbde7677f5c496"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0450d6b1922ce682fcd6e16000fcbff0e7ee945c", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/0450d6b1922ce682fcd6e16000fcbff0e7ee945c", "committedDate": "2020-09-30T17:25:06Z", "message": "check field separator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4116557204ce495342e2e1c74800c739e5d5787a", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/4116557204ce495342e2e1c74800c739e5d5787a", "committedDate": "2020-09-30T17:27:27Z", "message": "fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODU1NDgy", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-499855482", "createdAt": "2020-09-30T22:27:33Z", "commit": {"oid": "4116557204ce495342e2e1c74800c739e5d5787a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoyNzozM1rOHaxfXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoyNzozM1rOHaxfXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzNTg3MA==", "bodyText": "I would define the list of illegal characters in an static list or check and check if the separator is there.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r497835870", "createdAt": "2020-09-30T22:27:33Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +113,47 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String KEY_VALUE_SEPARATOR = \":\";\n+    private final String fieldSeparator;\n+    private final StringBuilder sb = new StringBuilder();\n     private byte[] signature;\n \n     public Builder(String context) {\n-      this.context = context;\n+      this(context, new Configuration());\n+    }\n+\n+    public Builder(String context, Configuration conf) {\n+      if (isValid(context)) {\n+        sb.append(context);\n+      }\n+      fieldSeparator = conf.get(HADOOP_CALLER_CONTEXT_SEPARATOR_KEY,\n+          HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT);\n+      checkFieldSeparator(fieldSeparator);\n+    }\n+\n+    /**\n+     * Check whether the separator is legal.\n+     * The illegal separators include '\\t', '\\n', '=', etc.\n+     * Throw IllegalArgumentException if the separator is Illegal.\n+     * @param separator the separator of fields.\n+     */\n+    private void checkFieldSeparator(String separator) {\n+      if (separator.contains(\"\\t\") || separator.contains(\"\\n\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4116557204ce495342e2e1c74800c739e5d5787a"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/a6a2a7181dc457c0ab4080b3f87ef6ea1257039b", "committedDate": "2020-10-01T03:22:37Z", "message": "refactor checking separator and add ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMjc0MDkw", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500274090", "createdAt": "2020-10-01T12:02:12Z", "commit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjowMjoxMlrOHbHGTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjowMjoxMlrOHbHGTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4OTkwMQ==", "bodyText": "We should use Collections.unmodifiableList to provide an unmodifiable view.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r498189901", "createdAt": "2020-10-01T12:02:12Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -114,6 +115,12 @@ public String toString() {\n   /** The caller context builder. */\n   public static final class Builder {\n     private static final String KEY_VALUE_SEPARATOR = \":\";\n+    /**\n+     * The illegal separators include '\\t', '\\n', '=', etc.\n+     * User should not set illegal separator.\n+     */\n+    private static final List<String> ILLEGAL_SEPARATORS =\n+        Arrays.asList(\"\\t\",\"\\n\",\"=\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMjc1NTk3", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500275597", "createdAt": "2020-10-01T12:04:23Z", "commit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjowNDoyM1rOHbHKqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjowNDoyM1rOHbHKqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE5MTAxOQ==", "bodyText": ", etc.\n\nThe illegal separators are only \\t, \\n, and =.\n\"etc\" is not needed.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r498191019", "createdAt": "2020-10-01T12:04:23Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -114,6 +115,12 @@ public String toString() {\n   /** The caller context builder. */\n   public static final class Builder {\n     private static final String KEY_VALUE_SEPARATOR = \":\";\n+    /**\n+     * The illegal separators include '\\t', '\\n', '=', etc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eac93e8e3f22fd992cb743d15a8aec0d03fc320", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/8eac93e8e3f22fd992cb743d15a8aec0d03fc320", "committedDate": "2020-10-01T15:31:44Z", "message": "fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNTc4ODY1", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500578865", "createdAt": "2020-10-01T17:43:03Z", "commit": {"oid": "8eac93e8e3f22fd992cb743d15a8aec0d03fc320"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzo0MzowM1rOHbUxTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzo0MzoxNFrOHbUxxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzkwMw==", "bodyText": "Not that is wrong, but we could just do: ILLEGAL_SEPARATORS.contains(separator), and if we make it a HashSet would be faster.", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r498413903", "createdAt": "2020-10-01T17:43:03Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -109,11 +114,53 @@ public String toString() {\n \n   /** The caller context builder. */\n   public static final class Builder {\n-    private final String context;\n+    private static final String KEY_VALUE_SEPARATOR = \":\";\n+    /**\n+     * The illegal separators include '\\t', '\\n', '='.\n+     * User should not set illegal separator.\n+     */\n+    private static final List<String> ILLEGAL_SEPARATORS =\n+        Arrays.asList(\"\\t\",\"\\n\",\"=\");\n+    private final String fieldSeparator;\n+    private final StringBuilder sb = new StringBuilder();\n     private byte[] signature;\n \n     public Builder(String context) {\n-      this.context = context;\n+      this(context, new Configuration());\n+    }\n+\n+    public Builder(String context, Configuration conf) {\n+      if (isValid(context)) {\n+        sb.append(context);\n+      }\n+      fieldSeparator = conf.get(HADOOP_CALLER_CONTEXT_SEPARATOR_KEY,\n+          HADOOP_CALLER_CONTEXT_SEPARATOR_DEFAULT);\n+      checkFieldSeparator(fieldSeparator);\n+    }\n+\n+    /**\n+     * Check whether the separator is legal.\n+     * The illegal separators include '\\t', '\\n', '='.\n+     * Throw IllegalArgumentException if the separator is Illegal.\n+     * @param separator the separator of fields.\n+     */\n+    private void checkFieldSeparator(String separator) {\n+      if (ILLEGAL_SEPARATORS.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eac93e8e3f22fd992cb743d15a8aec0d03fc320"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxNDAyMA==", "bodyText": "I would do a set: Collections.unmodifiableSet()", "url": "https://github.com/apache/hadoop/pull/2327#discussion_r498414020", "createdAt": "2020-10-01T17:43:14Z", "author": {"login": "goiri"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallerContext.java", "diffHunk": "@@ -114,6 +115,12 @@ public String toString() {\n   /** The caller context builder. */\n   public static final class Builder {\n     private static final String KEY_VALUE_SEPARATOR = \":\";\n+    /**\n+     * The illegal separators include '\\t', '\\n', '=', etc.\n+     * User should not set illegal separator.\n+     */\n+    private static final List<String> ILLEGAL_SEPARATORS =\n+        Arrays.asList(\"\\t\",\"\\n\",\"=\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4OTkwMQ=="}, "originalCommit": {"oid": "a6a2a7181dc457c0ab4080b3f87ef6ea1257039b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "923c96b82784690f97c0315f91df9243a55ca3a9", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/923c96b82784690f97c0315f91df9243a55ca3a9", "committedDate": "2020-10-01T18:10:27Z", "message": "change ILLEGAL_SEPARATORS to hashset"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjIyNTcz", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500622573", "createdAt": "2020-10-01T18:43:17Z", "commit": {"oid": "923c96b82784690f97c0315f91df9243a55ca3a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzQ4NzIy", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500748722", "createdAt": "2020-10-01T22:02:54Z", "commit": {"oid": "923c96b82784690f97c0315f91df9243a55ca3a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzcxMTIz", "url": "https://github.com/apache/hadoop/pull/2327#pullrequestreview-500771123", "createdAt": "2020-10-01T22:57:34Z", "commit": {"oid": "923c96b82784690f97c0315f91df9243a55ca3a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "436ed73344062a89f51e24600da7745c5cc316f6", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/436ed73344062a89f51e24600da7745c5cc316f6", "committedDate": "2020-10-02T09:52:16Z", "message": "fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3690, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}