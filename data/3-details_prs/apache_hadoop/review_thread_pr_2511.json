{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzA3Njk4", "number": 2511, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDoyNjo0OVrOFFNKqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDo0MDoyNFrOFFNsTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMDAyOTIzOnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDoyNjo0OVrOIFmgqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDoyNjo0OVrOIFmgqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc0NDc0NA==", "bodyText": "This explanation belongs in the Jira, not in a comment in the code.  When looking at current code, it's not really clear why you are talking about TreeMap at all.\nAlso, I think this comment misses the point of the TreeMap.  The reason a TreeMap was used here was to maintain a sorted order, which allowed the checkLeases() to exit the while loop as soon as it hit an unexpired lease.\nThe new design removes the need for the TreeMap by pruning the list it passes to checkLeases().", "url": "https://github.com/apache/hadoop/pull/2511#discussion_r542744744", "createdAt": "2020-12-14T20:26:49Z", "author": {"login": "jbrennan333"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "diffHunk": "@@ -92,21 +91,15 @@\n   private long lastHolderUpdateTime;\n   private String internalLeaseHolder;\n \n+  //\n   // Used for handling lock-leases\n   // Mapping: leaseHolder -> Lease\n-  private final SortedMap<String, Lease> leases = new TreeMap<>();\n-  // Set of: Lease\n-  private final NavigableSet<Lease> sortedLeases = new TreeSet<>(\n-      new Comparator<Lease>() {\n-        @Override\n-        public int compare(Lease o1, Lease o2) {\n-          if (o1.getLastUpdate() != o2.getLastUpdate()) {\n-            return Long.signum(o1.getLastUpdate() - o2.getLastUpdate());\n-          } else {\n-            return o1.holder.compareTo(o2.holder);\n-          }\n-        }\n-  });\n+  // TreeMap has O(log(n)) complexity but it is more space efficient\n+  //             compared to HashMap. Therefore, replacing TreeMap with a\n+  //             HashMap can be considered to get faster O(1) time complexity\n+  //             on the expense of 30% memory waste.\n+  //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdb03728c6b07319f3f485b6595c6b0c78090d6"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMDA4NDcyOnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDozNToxOVrOIFnECA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDozNToxOVrOIFnECA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc1MzgwMA==", "bodyText": "I much prefer the loop in @daryn-sharp's original code.\nCollection<Lease> expired = new HashSet<>();\nfor (Lease lease : leases) {\n  if (lease.expiredHardLimit(now)) {\n    expired.add(lease);\n  }\n}\n\nThis streams code will have to change if we want to pull this back to branch 2.\nI think @daryn-sharp  also said that stream()'s are more expensive.", "url": "https://github.com/apache/hadoop/pull/2511#discussion_r542753800", "createdAt": "2020-12-14T20:35:19Z", "author": {"login": "jbrennan333"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "diffHunk": "@@ -515,6 +508,13 @@ public void setLeasePeriod(long softLimit, long hardLimit) {\n     this.softLimit = softLimit;\n     this.hardLimit = hardLimit; \n   }\n+\n+  private synchronized Collection<Lease> getExpiredCandidateLeases() {\n+    final long now = Time.monotonicNow();\n+    return leases.values().stream()\n+        .filter(lease -> lease.expiredHardLimit(now))\n+        .collect(Collectors.toCollection(HashSet::new));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdb03728c6b07319f3f485b6595c6b0c78090d6"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMDExNTM0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDo0MDoyNFrOIFnXWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDo0MDoyNFrOIFnXWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc1ODc0Nw==", "bodyText": "This LOG.isDebugEnabled() check is not needed anymore.", "url": "https://github.com/apache/hadoop/pull/2511#discussion_r542758747", "createdAt": "2020-12-14T20:40:24Z", "author": {"login": "jbrennan333"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java", "diffHunk": "@@ -541,10 +550,10 @@ public void run() {\n               fsnamesystem.getEditLog().logSync();\n             }\n           }\n-  \n-          Thread.sleep(fsnamesystem.getLeaseRecheckIntervalMs());\n         } catch(InterruptedException ie) {\n-          LOG.debug(\"{} is interrupted\", name, ie);\n+          if (LOG.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdb03728c6b07319f3f485b6595c6b0c78090d6"}, "originalPosition": 178}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3156, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}