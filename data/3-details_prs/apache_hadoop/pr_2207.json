{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1Mzc0OTQy", "number": 2207, "title": "HADOOP-17074 Optimise s3a Listing to be fully asynchronous.", "bodyText": "Tested using ap-south-1 bucket. All good apart from known failures.\nhttps://issues.apache.org/jira/browse/HADOOP-17192\nhttps://issues.apache.org/jira/browse/HADOOP-17190", "createdAt": "2020-08-10T09:09:28Z", "url": "https://github.com/apache/hadoop/pull/2207", "merged": true, "mergeCommit": {"oid": "cc641534dcb39d304ecbd0820963465b85677ce2"}, "closed": true, "closedAt": "2020-08-25T10:29:44Z", "author": {"login": "mukund-thakur"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9d5XVAH2gAyNDY1Mzc0OTQyOjdkNDEyNmE3NDUxMDNlMDg3NDk1MGI2ODc5NDhkOTBmZWFlOGI3ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCBaJggH2gAyNDY1Mzc0OTQyOjQ3ZWNiZWY0YjM5NDBjYzc0ZGIwNWQzZTY3ZDA5ZTQ5MDA4MDA4NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/7d4126a745103e0874950b687948d90feae8b7e1", "committedDate": "2020-08-10T08:25:22Z", "message": "HADOOP-17074 Optimise s3a Listing to be fully asynchronous."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjMwMjIx", "url": "https://github.com/apache/hadoop/pull/2207#pullrequestreview-464230221", "createdAt": "2020-08-10T13:32:21Z", "commit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozMjoyMlrOG-OrnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0NzowM1rOG-PRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNTQzNg==", "bodyText": "move the log into fetchNextBatchAsyncIfPresent", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467905436", "createdAt": "2020-08-10T13:32:22Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java", "diffHunk": "@@ -761,29 +777,44 @@ public boolean hasNext() throws IOException {\n     @Retries.RetryTranslated\n     public S3ListResult next() throws IOException {\n       if (firstListing) {\n-        // on the first listing, don't request more data.\n-        // Instead just clear the firstListing flag so that it future calls\n-        // will request new data.\n+        // clear the firstListing flag for future calls.\n         firstListing = false;\n+        // Calculating the result of last async list call.\n+        objects = awaitFuture(s3ListResultFuture);\n+        fetchNextBatchAsyncIfPresent();\n       } else {\n         try {\n-          if (!objects.isTruncated()) {\n+          if (objectsPrev!= null && !objectsPrev.isTruncated()) {\n             // nothing more to request: fail.\n             throw new NoSuchElementException(\"No more results in listing of \"\n-                + listPath);\n+                    + listPath);\n           }\n-          // need to request a new set of objects.\n+          // Calculating the result of last async list call.\n+          objects = awaitFuture(s3ListResultFuture);\n+          // Requesting next batch of results.\n           LOG.debug(\"[{}], Requesting next {} objects under {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNjE4OQ==", "bodyText": "make private unless someone needs to get at these in mockito tests", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467906189", "createdAt": "2020-08-10T13:33:29Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -1956,6 +1956,14 @@ protected S3ListResult listObjects(S3ListRequest request) throws IOException {\n     }\n   }\n \n+  protected CompletableFuture<S3ListResult> listObjectsAsync(S3ListRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNjk2OA==", "bodyText": "get a WriteOperationHelper instance and invoke via that", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467906968", "createdAt": "2020-08-10T13:34:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -2244,8 +2263,9 @@ public UploadInfo putObject(PutObjectRequest putObjectRequest) {\n    * not be saved to the metadata store and\n    * fs.s3a.metadatastore.fail.on.write.error=true\n    */\n+  @VisibleForTesting\n   @Retries.OnceRaw(\"For PUT; post-PUT actions are RetryTranslated\")\n-  PutObjectResult putObjectDirect(PutObjectRequest putObjectRequest)\n+  public PutObjectResult putObjectDirect(PutObjectRequest putObjectRequest)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNDEwOQ==", "bodyText": "any reason to not use a local variable here?", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467914109", "createdAt": "2020-08-10T13:45:31Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/scale/ITestS3ADirectoryPerformance.java", "diffHunk": "@@ -137,6 +159,78 @@ public void testListOperations() throws Throwable {\n     }\n   }\n \n+  @Test\n+  public void testMultiPagesListingPerformanceAndCorrectness() throws Throwable {\n+    describe(\"Check performance and correctness for multi page listing \" +\n+            \"using different listing api\");\n+    Path dir = path(this.getMethodName());\n+    Configuration conf = getConfigurationWithConfiguredBatchSize(10);\n+    fs = (S3AFileSystem) FileSystem.get(dir.toUri(), conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNDE4Nw==", "bodyText": "methodPath()", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467914187", "createdAt": "2020-08-10T13:45:39Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/scale/ITestS3ADirectoryPerformance.java", "diffHunk": "@@ -137,6 +159,78 @@ public void testListOperations() throws Throwable {\n     }\n   }\n \n+  @Test\n+  public void testMultiPagesListingPerformanceAndCorrectness() throws Throwable {\n+    describe(\"Check performance and correctness for multi page listing \" +\n+            \"using different listing api\");\n+    Path dir = path(this.getMethodName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNDc2Mw==", "bodyText": "Add some tracking/logging of how long it took to create all these files.", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467914763", "createdAt": "2020-08-10T13:46:34Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/scale/ITestS3ADirectoryPerformance.java", "diffHunk": "@@ -137,6 +159,78 @@ public void testListOperations() throws Throwable {\n     }\n   }\n \n+  @Test\n+  public void testMultiPagesListingPerformanceAndCorrectness() throws Throwable {\n+    describe(\"Check performance and correctness for multi page listing \" +\n+            \"using different listing api\");\n+    Path dir = path(this.getMethodName());\n+    Configuration conf = getConfigurationWithConfiguredBatchSize(10);\n+    fs = (S3AFileSystem) FileSystem.get(dir.toUri(), conf);\n+    assume(\"Test is only for raw fs\", !fs.hasMetadataStore());\n+    fs.create(dir);\n+    final InputStream im = new InputStream() {\n+      @Override\n+      public int read() throws IOException {\n+        return -1;\n+      }\n+    };\n+    final int numOfPutRequests = 500;\n+    final List<String> originalListOfFiles = new ArrayList<>();\n+    List<Callable<PutObjectResult>> putObjectRequests = new ArrayList<>();\n+    ExecutorService executorService = Executors.newFixedThreadPool(50);\n+    try {\n+      for (int i=0; i<numOfPutRequests; i++) {\n+        Path file = new Path(dir, String.format(\"file-%03d\", i));\n+        originalListOfFiles.add(file.toString());\n+        ObjectMetadata om = fs.newObjectMetadata(0L);\n+        PutObjectRequest put = new PutObjectRequest(fs.getBucket(),\n+                fs.pathToKey(file),\n+                im,\n+                om);\n+        putObjectRequests.add(() -> fs.putObjectDirect(put));\n+      }\n+      executorService.invokeAll(putObjectRequests);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNTA5OQ==", "bodyText": "use a shorter name so the lines after are less wide", "url": "https://github.com/apache/hadoop/pull/2207#discussion_r467915099", "createdAt": "2020-08-10T13:47:03Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/scale/ITestS3ADirectoryPerformance.java", "diffHunk": "@@ -137,6 +159,78 @@ public void testListOperations() throws Throwable {\n     }\n   }\n \n+  @Test\n+  public void testMultiPagesListingPerformanceAndCorrectness() throws Throwable {\n+    describe(\"Check performance and correctness for multi page listing \" +\n+            \"using different listing api\");\n+    Path dir = path(this.getMethodName());\n+    Configuration conf = getConfigurationWithConfiguredBatchSize(10);\n+    fs = (S3AFileSystem) FileSystem.get(dir.toUri(), conf);\n+    assume(\"Test is only for raw fs\", !fs.hasMetadataStore());\n+    fs.create(dir);\n+    final InputStream im = new InputStream() {\n+      @Override\n+      public int read() throws IOException {\n+        return -1;\n+      }\n+    };\n+    final int numOfPutRequests = 500;\n+    final List<String> originalListOfFiles = new ArrayList<>();\n+    List<Callable<PutObjectResult>> putObjectRequests = new ArrayList<>();\n+    ExecutorService executorService = Executors.newFixedThreadPool(50);\n+    try {\n+      for (int i=0; i<numOfPutRequests; i++) {\n+        Path file = new Path(dir, String.format(\"file-%03d\", i));\n+        originalListOfFiles.add(file.toString());\n+        ObjectMetadata om = fs.newObjectMetadata(0L);\n+        PutObjectRequest put = new PutObjectRequest(fs.getBucket(),\n+                fs.pathToKey(file),\n+                im,\n+                om);\n+        putObjectRequests.add(() -> fs.putObjectDirect(put));\n+      }\n+      executorService.invokeAll(putObjectRequests);\n+    } finally {\n+      executorService.shutdown();\n+    }\n+    RemoteIterator<LocatedFileStatus> locatedFileStatusRemoteIterator =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4126a745103e0874950b687948d90feae8b7e1"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "744ef7bd8e31f4db1e16f282f31a9ad53753a960", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/744ef7bd8e31f4db1e16f282f31a9ad53753a960", "committedDate": "2020-08-13T09:53:26Z", "message": "HADOOP-17074 Fixing review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47ecbef4b3940cc74db05d3e67d09e4900800872", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/47ecbef4b3940cc74db05d3e67d09e4900800872", "committedDate": "2020-08-24T12:03:33Z", "message": "HADOOP-17074 checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3880, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}