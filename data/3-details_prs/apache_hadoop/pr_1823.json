{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MTA0Mjc1", "number": 1823, "title": "HADOOP-16794 S3 Encryption keys not propagating correctly during copy operation", "bodyText": "Debugging details:\nWhen a put operation is performed without -d parameter is used, it happens in two steps. First is copying to a temporary file and then copying the temp file to the right location. The is issue is durning the copy step as an extra header \"x-amz-server-side-encryption: aws:kms\" is set.\nWhen -d parameter is used, the file is uploaded directly and in that api call this kms header is not set.\nSolution: Removing the kms header from the ClonedObjectMetatData.\nTesting: Tested by compiling the complete hadoop distribution and invoking the hadoop shell command locally.\nBucket used : https://mthakur-data.s3.ap-south-1.amazonaws.com/file2\nPlease suggest how to write testcases for this. Thanks", "createdAt": "2020-01-28T16:18:17Z", "url": "https://github.com/apache/hadoop/pull/1823", "merged": true, "mergeCommit": {"oid": "f864ef742960b805b430841c3a1ccb9e11bcc77c"}, "closed": true, "closedAt": "2020-03-02T17:31:13Z", "author": {"login": "mukund-thakur"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_uAmngBqjI5OTY4NTQwODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJxLvDAFqTM2NzM4NjM4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "301f65e6e95903f8a925914c8c12eff3033bca89", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/301f65e6e95903f8a925914c8c12eff3033bca89", "committedDate": "2020-01-28T16:06:41Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}, "afterCommit": {"oid": "e12ba53ef8212dcae6ec109d97dc859d57d5f4b5", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/e12ba53ef8212dcae6ec109d97dc859d57d5f4b5", "committedDate": "2020-01-31T12:02:58Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e12ba53ef8212dcae6ec109d97dc859d57d5f4b5", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/e12ba53ef8212dcae6ec109d97dc859d57d5f4b5", "committedDate": "2020-01-31T12:02:58Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}, "afterCommit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/499b0449e89a9455177e2402b6b7d03669a2d4fc", "committedDate": "2020-02-03T12:31:23Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjY3NzUz", "url": "https://github.com/apache/hadoop/pull/1823#pullrequestreview-352267753", "createdAt": "2020-02-03T13:54:11Z", "commit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1NDoxMVrOFkyEwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo1Njo0M1rOFkyKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMzQ3Mg==", "bodyText": "should go into the same block as the amazon one", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r374113472", "createdAt": "2020-02-03T13:54:11Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AEncryptionWithDefaultS3Settings.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.s3a;\n+\n+import java.io.IOException;\n+\n+import com.amazonaws.services.s3.model.ObjectMetadata;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.Path;\n+import org.junit.Ignore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMzk2MQ==", "bodyText": "not needed", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r374113961", "createdAt": "2020-02-03T13:55:06Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AEncryptionWithDefaultS3Settings.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.s3a;\n+\n+import java.io.IOException;\n+\n+import com.amazonaws.services.s3.model.ObjectMetadata;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.Path;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+import static org.apache.hadoop.fs.contract.ContractTestUtils.skip;\n+import static org.apache.hadoop.fs.s3a.Constants.SERVER_SIDE_ENCRYPTION_KEY;\n+import static org.apache.hadoop.fs.s3a.S3AEncryptionMethods.SSE_KMS;\n+\n+/**\n+ * Concrete class that extends {@link AbstractTestS3AEncryption}\n+ * and tests already configured bucket level encryption using s3 console.\n+ * This requires the SERVER_SIDE_ENCRYPTION_KEY\n+ * to be set in auth-keys.xml for it to run. The value should match with the\n+ * kms key set for the bucket.\n+ */\n+public class ITestS3AEncryptionWithDefaultS3Settings extends\n+        AbstractTestS3AEncryption {\n+\n+  @Override\n+  protected Configuration getConfiguration() {\n+    // get the KMS key for this test.\n+    Configuration c = new Configuration();\n+    String kmsKey = c.get(SERVER_SIDE_ENCRYPTION_KEY);\n+    if (StringUtils.isBlank(kmsKey)) {\n+      skip(SERVER_SIDE_ENCRYPTION_KEY + \" is not set for \" +\n+              SSE_KMS.getMethod());\n+    }\n+    return super.createConfiguration();\n+  }\n+\n+  /**\n+   * Setting this to NONE as we don't want to overwrite\n+   * already configured encryption settings.\n+   * @return\n+   */\n+  @Override\n+  protected S3AEncryptionMethods getSSEAlgorithm() {\n+    return S3AEncryptionMethods.NONE;\n+  }\n+\n+  @Override\n+  protected void assertEncrypted(Path path) throws IOException {\n+    Configuration c = new Configuration();\n+    String kmsKey = c.get(SERVER_SIDE_ENCRYPTION_KEY);\n+    ObjectMetadata objectMetadata = getFileSystem().getObjectMetadata(path);\n+    assertEquals(\"SSE KMS key id should match\", kmsKey, objectMetadata.getSSEAwsKmsKeyId());\n+  }\n+\n+  @Override\n+  @Ignore\n+  @Test\n+  public void testEncryptionSettingPropagation() throws Throwable {\n+    super.testEncryptionSettingPropagation();\n+  }\n+\n+  @Override\n+  @Ignore\n+  @Test\n+  public void testEncryption() throws Throwable {\n+    super.testEncryption();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExNDk1MQ==", "bodyText": "see checkstyle -line needs splitting. We like under/near 80 chars for better side-by-side review", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r374114951", "createdAt": "2020-02-03T13:56:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AEncryptionWithDefaultS3Settings.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.s3a;\n+\n+import java.io.IOException;\n+\n+import com.amazonaws.services.s3.model.ObjectMetadata;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.Path;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+import static org.apache.hadoop.fs.contract.ContractTestUtils.skip;\n+import static org.apache.hadoop.fs.s3a.Constants.SERVER_SIDE_ENCRYPTION_KEY;\n+import static org.apache.hadoop.fs.s3a.S3AEncryptionMethods.SSE_KMS;\n+\n+/**\n+ * Concrete class that extends {@link AbstractTestS3AEncryption}\n+ * and tests already configured bucket level encryption using s3 console.\n+ * This requires the SERVER_SIDE_ENCRYPTION_KEY\n+ * to be set in auth-keys.xml for it to run. The value should match with the\n+ * kms key set for the bucket.\n+ */\n+public class ITestS3AEncryptionWithDefaultS3Settings extends\n+        AbstractTestS3AEncryption {\n+\n+  @Override\n+  protected Configuration getConfiguration() {\n+    // get the KMS key for this test.\n+    Configuration c = new Configuration();\n+    String kmsKey = c.get(SERVER_SIDE_ENCRYPTION_KEY);\n+    if (StringUtils.isBlank(kmsKey)) {\n+      skip(SERVER_SIDE_ENCRYPTION_KEY + \" is not set for \" +\n+              SSE_KMS.getMethod());\n+    }\n+    return super.createConfiguration();\n+  }\n+\n+  /**\n+   * Setting this to NONE as we don't want to overwrite\n+   * already configured encryption settings.\n+   * @return\n+   */\n+  @Override\n+  protected S3AEncryptionMethods getSSEAlgorithm() {\n+    return S3AEncryptionMethods.NONE;\n+  }\n+\n+  @Override\n+  protected void assertEncrypted(Path path) throws IOException {\n+    Configuration c = new Configuration();\n+    String kmsKey = c.get(SERVER_SIDE_ENCRYPTION_KEY);\n+    ObjectMetadata objectMetadata = getFileSystem().getObjectMetadata(path);\n+    assertEquals(\"SSE KMS key id should match\", kmsKey, objectMetadata.getSSEAwsKmsKeyId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc"}, "originalPosition": 72}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "499b0449e89a9455177e2402b6b7d03669a2d4fc", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/499b0449e89a9455177e2402b6b7d03669a2d4fc", "committedDate": "2020-02-03T12:31:23Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}, "afterCommit": {"oid": "db822aa905537ee266c8146633d973cad165a887", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/db822aa905537ee266c8146633d973cad165a887", "committedDate": "2020-02-03T14:28:34Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTc0Njgw", "url": "https://github.com/apache/hadoop/pull/1823#pullrequestreview-356574680", "createdAt": "2020-02-11T11:12:59Z", "commit": {"oid": "db822aa905537ee266c8146633d973cad165a887"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxMjo1OVrOFoFIcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxMjo1OVrOFoFIcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MTQ0Mw==", "bodyText": "I am looking at this, trying to understand what it is doing.\nBefore: we created a file src, renamed it to dest and verified the contents were unchanged; dest encrypted.\nAfter:\n\nsrc is created as a dataset\nnew path targetDir created\nfile dest is created in a target/src+\"-another\" with a different dataset; contents verified\nrename(src, targetDir) to create the file targetDir/src\nwhich is verified\ndest file is completely ignored\n\nSo why the change here? I don't see why we need the new test file, and the only change is now that you're renaming into a subdirectory  which already exists rather than a path of the destination file.\nI need some clarification here.\n\nwhy the change\nbefore the encryption settings were changed in copy, how did this new test fail?", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r377571443", "createdAt": "2020-02-11T11:12:59Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/AbstractTestS3AEncryption.java", "diffHunk": "@@ -107,10 +106,15 @@ public void testEncryptionOverRename() throws Throwable {\n     validateEncrytionSecrets(secrets);\n     writeDataset(fs, src, data, data.length, 1024 * 1024, true);\n     ContractTestUtils.verifyFileContents(fs, src, data);\n-    Path dest = path(src.getName() + \"-copy\");\n-    fs.rename(src, dest);\n-    ContractTestUtils.verifyFileContents(fs, dest, data);\n-    assertEncrypted(dest);\n+    Path targetDir = path(\"target\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db822aa905537ee266c8146633d973cad165a887"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MTkxMTQw", "url": "https://github.com/apache/hadoop/pull/1823#pullrequestreview-365191140", "createdAt": "2020-02-26T19:46:06Z", "commit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTo0NjowN1rOFu5tIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDowNTowN1rOFu6WSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcyNDI1OA==", "bodyText": "pull that up into the if() clause and you can avoid doing the optional work, just\nsetSSE...(new SS3AwsKMP(sourceKMSId)).\nnow, troublespot, and its one I'm curious about. What if there's SSE-C set, as it is also being set on the request? FWIW, I think things will break trying to read the file by setting the SSE-C key will inevitably break too.", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384724258", "createdAt": "2020-02-26T19:46:07Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -3394,6 +3396,42 @@ private CopyResult copyFile(String srcKey, String dstKey, long size,\n         });\n   }\n \n+  /**\n+   * Propagate encryption parameters from source file if set else use the\n+   * current file system encryption settings.\n+   * @param srcom\n+   * @param copyObjectRequest\n+   */\n+  private void propagateEncryptionParams(ObjectMetadata srcom,\n+                                         CopyObjectRequest copyObjectRequest) {\n+    Optional<SSEAwsKeyManagementParams> kmsParams = Optional.empty();\n+    String sourceKMSId = srcom.getSSEAwsKmsKeyId();\n+    if (isNotEmpty(sourceKMSId)) {\n+      // source KMS ID is propagated\n+      LOG.debug(\"Propagating SSE-KMS settings from source {}\",\n+          sourceKMSId);\n+      kmsParams = Optional.of(new SSEAwsKeyManagementParams(sourceKMSId));\n+    }\n+    kmsParams.ifPresent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcyNTYwNw==", "bodyText": "use  getServerSideEncryptionAlgorithm() as before", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384725607", "createdAt": "2020-02-26T19:48:34Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -3394,6 +3396,42 @@ private CopyResult copyFile(String srcKey, String dstKey, long size,\n         });\n   }\n \n+  /**\n+   * Propagate encryption parameters from source file if set else use the\n+   * current file system encryption settings.\n+   * @param srcom\n+   * @param copyObjectRequest\n+   */\n+  private void propagateEncryptionParams(ObjectMetadata srcom,\n+                                         CopyObjectRequest copyObjectRequest) {\n+    Optional<SSEAwsKeyManagementParams> kmsParams = Optional.empty();\n+    String sourceKMSId = srcom.getSSEAwsKmsKeyId();\n+    if (isNotEmpty(sourceKMSId)) {\n+      // source KMS ID is propagated\n+      LOG.debug(\"Propagating SSE-KMS settings from source {}\",\n+          sourceKMSId);\n+      kmsParams = Optional.of(new SSEAwsKeyManagementParams(sourceKMSId));\n+    }\n+    kmsParams.ifPresent(\n+            copyObjectRequest::setSSEAwsKeyManagementParams);\n+    switch(encryptionSecrets.getEncryptionMethod()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcyNzM3Ng==", "bodyText": "can you move down to where setOptionalCopyObjectRequestParameters() was before; it will make it easier to cherry pick.\nRestore the original name, with new args (and javadoc). Same reason -and because we may want add more options in future", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384727376", "createdAt": "2020-02-26T19:51:52Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -3394,6 +3396,42 @@ private CopyResult copyFile(String srcKey, String dstKey, long size,\n         });\n   }\n \n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcyNzgxMA==", "bodyText": "cut. I know, we all hate imports. But S3A FS is big and even minor changes break other patches", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384727810", "createdAt": "2020-02-26T19:52:39Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -45,6 +45,7 @@\n import java.util.concurrent.ThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMDg2Ng==", "bodyText": "lets stick this one above L22 in its own block", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384730866", "createdAt": "2020-02-26T19:57:44Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/AbstractS3ATestBase.java", "diffHunk": "@@ -32,8 +34,11 @@\n \n import java.io.IOException;\n \n+import com.amazonaws.services.s3.model.ObjectMetadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMjkwNg==", "bodyText": "add a javadoc entry for the argument; just delete the @throws IOE line altogether", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384732906", "createdAt": "2020-02-26T20:01:34Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/AbstractS3ATestBase.java", "diffHunk": "@@ -159,4 +168,63 @@ protected void assertStatusCode(AWSServiceIOException e, int code)\n       throw e;\n     }\n   }\n+\n+  /**\n+   * Assert that a path is encrypted with right encryption settings.\n+   * @param path file path.\n+   * @param algorithm encryption algorithm.\n+   * @param kmsKeyArn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMzE4OQ==", "bodyText": "Typo", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384733189", "createdAt": "2020-02-26T20:02:06Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/AbstractS3ATestBase.java", "diffHunk": "@@ -159,4 +168,63 @@ protected void assertStatusCode(AWSServiceIOException e, int code)\n       throw e;\n     }\n   }\n+\n+  /**\n+   * Assert that a path is encrypted with right encryption settings.\n+   * @param path file path.\n+   * @param algorithm encryption algorithm.\n+   * @param kmsKeyArn\n+   * @throws IOException\n+   */\n+  protected void assertEncrypted(final Path path,\n+                                 final S3AEncryptionMethods algorithm,\n+                                 final String kmsKeyArn)\n+          throws IOException {\n+    ObjectMetadata md = getFileSystem().getObjectMetadata(path);\n+    String details = String.format(\n+            \"file %s with encryption algorthm %s and key %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczNDc5Mw==", "bodyText": "add this to org.apache.hadoop.fs.s3a.test.ExtraAssertions", "url": "https://github.com/apache/hadoop/pull/1823#discussion_r384734793", "createdAt": "2020-02-26T20:05:07Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/AbstractS3ATestBase.java", "diffHunk": "@@ -159,4 +168,63 @@ protected void assertStatusCode(AWSServiceIOException e, int code)\n       throw e;\n     }\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d80ce7b1adcc20690bf22190c5e1178408c71fe", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/2d80ce7b1adcc20690bf22190c5e1178408c71fe", "committedDate": "2020-02-27T08:45:58Z", "message": "HADOOP-16794 S3 Encryption key is not getting set properly during put operation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e0d896f69dfce9260a16fc070dc78dc84f9d270", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/2e0d896f69dfce9260a16fc070dc78dc84f9d270", "committedDate": "2020-02-27T08:45:58Z", "message": "Removing creation of extra file-Review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64cefc3100b3b8af883ee3b8b24adeaf9b0ee993", "author": {"user": {"login": "steveloughran", "name": "Steve Loughran"}}, "url": "https://github.com/apache/hadoop/commit/64cefc3100b3b8af883ee3b8b24adeaf9b0ee993", "committedDate": "2020-02-27T08:45:58Z", "message": "HADOOP-16794. encryption over rename/copy\n\nreturns to copying sse algorithm header, but then\n\n* extracts full KMS settings from src and sets on request\n* overriding with S3A KMS client settings.\n* tries to test it better\n\nThis is still not ready to go in.\n\nI think we should have a consistent policy here of\n\n1. if the client has any encryption settings, including explicit AES256, KMS+default key, KMS+custom key, then they will set the encryption options on the copy.\n2. else the encryption settings of the source file are retained.\n\nThis is nice and memorable. It needs to apply for all s3a encryption settings; this patch only does it for SSE-KMS.\n\nChange-Id: I6c07d5bdbec27da94d6ab1b51aec9b5707f44634"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f49e0396b524d9204ecae7b3a2dd81b64ce34db", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/4f49e0396b524d9204ecae7b3a2dd81b64ce34db", "committedDate": "2020-02-27T08:45:58Z", "message": "HADOOP-16794 Encryption settings propagation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "781215d8fad1f21c4bb11536cd84e5acbe688b97", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/781215d8fad1f21c4bb11536cd84e5acbe688b97", "committedDate": "2020-02-27T08:45:58Z", "message": "HADOOP-16794  tests for big files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d616ed3f7c6b277c13f9f2ce08226eb62851590", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/9d616ed3f7c6b277c13f9f2ce08226eb62851590", "committedDate": "2020-02-27T08:45:58Z", "message": "HADOOP-16794 fixing checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8cabde842a8feb7c76ab5d4761ecdd272db93ec", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/b8cabde842a8feb7c76ab5d4761ecdd272db93ec", "committedDate": "2020-02-27T19:13:19Z", "message": "HADOOP-16794 Final set of review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85bfd490a1662f42c9f65df2a121498c0f5a6b5e", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/85bfd490a1662f42c9f65df2a121498c0f5a6b5e", "committedDate": "2020-02-20T10:35:24Z", "message": "HADOOP-16794 fixing checkstyle"}, "afterCommit": {"oid": "b8cabde842a8feb7c76ab5d4761ecdd272db93ec", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/b8cabde842a8feb7c76ab5d4761ecdd272db93ec", "committedDate": "2020-02-27T19:13:19Z", "message": "HADOOP-16794 Final set of review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801a5e7d4eb6eb7593d7cbdb1df4365f47f2e118", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/801a5e7d4eb6eb7593d7cbdb1df4365f47f2e118", "committedDate": "2020-02-28T14:10:19Z", "message": "HADOOP-16794 fixing checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mzg2Mzgy", "url": "https://github.com/apache/hadoop/pull/1823#pullrequestreview-367386382", "createdAt": "2020-03-02T17:29:34Z", "commit": {"oid": "801a5e7d4eb6eb7593d7cbdb1df4365f47f2e118"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}