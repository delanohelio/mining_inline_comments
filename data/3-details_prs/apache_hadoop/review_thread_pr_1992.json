{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDY1NzQ4", "number": 1992, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1MDo0OFrOD4ezyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1ODoxMFrOD4e6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTUxNjI2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1MDo0OFrOGPVY-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1MDo0OFrOGPVY-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczMjI4Mg==", "bodyText": "nit: use /** as javadoc", "url": "https://github.com/apache/hadoop/pull/1992#discussion_r418732282", "createdAt": "2020-05-01T20:50:48Z", "author": {"login": "liuml07"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "diffHunk": "@@ -243,6 +243,34 @@ public void doFilter(ServletRequest servletRequest,\n     filter.destroy();\n   }\n \n+  /*\n+   * Test acceptable behavior to malformed requests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df3ed14f3631943db88141cbadfce7e86c10d084"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTUzMjc4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1ODowM1rOGPVjgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1ODowM1rOGPVjgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNDk3OA==", "bodyText": "nit: this seems not required?", "url": "https://github.com/apache/hadoop/pull/1992#discussion_r418734978", "createdAt": "2020-05-01T20:58:03Z", "author": {"login": "liuml07"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "diffHunk": "@@ -243,6 +243,34 @@ public void doFilter(ServletRequest servletRequest,\n     filter.destroy();\n   }\n \n+  /*\n+   * Test acceptable behavior to malformed requests\n+   * Case: the request URI does not start with \"/webhdfs/v1\"\n+   */\n+  @Test\n+  public void testInvalidURI() throws Exception {\n+    HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n+    Mockito.when(request.getRemoteAddr()).thenReturn(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df3ed14f3631943db88141cbadfce7e86c10d084"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTUzMzAwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1ODoxMFrOGPVjrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDo1ODoxMFrOGPVjrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNTAyMg==", "bodyText": "nit: this seems not required?", "url": "https://github.com/apache/hadoop/pull/1992#discussion_r418735022", "createdAt": "2020-05-01T20:58:10Z", "author": {"login": "liuml07"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/common/TestHostRestrictingAuthorizationFilter.java", "diffHunk": "@@ -243,6 +243,34 @@ public void doFilter(ServletRequest servletRequest,\n     filter.destroy();\n   }\n \n+  /*\n+   * Test acceptable behavior to malformed requests\n+   * Case: the request URI does not start with \"/webhdfs/v1\"\n+   */\n+  @Test\n+  public void testInvalidURI() throws Exception {\n+    HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n+    Mockito.when(request.getRemoteAddr()).thenReturn(null);\n+    Mockito.when(request.getMethod()).thenReturn(\"GET\");\n+    Mockito.when(request.getRequestURI()).thenReturn(\"/InvalidURI\");\n+    Mockito.when(request.getQueryString()).thenReturn(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df3ed14f3631943db88141cbadfce7e86c10d084"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3543, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}