{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTc0NzUx", "number": 2272, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MTowM1rOEgF8iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MToyMFrOEgF80w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDg3MzA3OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MTowM1rOHMxD0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MTowM1rOHMxD0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0ODc1NQ==", "bodyText": "say what it is rather than why, e,g \"number of bytes picked up in async readahead\"", "url": "https://github.com/apache/hadoop/pull/2272#discussion_r483148755", "createdAt": "2020-09-03T17:41:03Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -503,6 +507,28 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n     return streamStatistics;\n   }\n \n+  /**\n+   * Since, the value of readAheadBytesRead counter could be arbitrary due to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5d52e6450cc7a73661ef002a52115e7f86a4093"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDg3Mzc5OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MToyMFrOHMxETQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0MToyMFrOHMxETQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0ODg3Nw==", "bodyText": "same: explain what the counter is", "url": "https://github.com/apache/hadoop/pull/2272#discussion_r483148877", "createdAt": "2020-09-03T17:41:20Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -503,6 +507,28 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n     return streamStatistics;\n   }\n \n+  /**\n+   * Since, the value of readAheadBytesRead counter could be arbitrary due to\n+   * race condition we have a getter for value of this counter at some point\n+   * in the operation.\n+   * @return bytes read from readAhead at some point of the operation.\n+   */\n+  @VisibleForTesting\n+  public long getBytesFromReadAhead() {\n+    return bytesFromReadAhead;\n+  }\n+\n+  /**\n+   * Since, the value of remoteBytesRead counter value is dependent on a race", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5d52e6450cc7a73661ef002a52115e7f86a4093"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3268, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}