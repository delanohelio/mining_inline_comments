{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxOTYyNDYz", "number": 1803, "title": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs.", "bodyText": "Removed below APIs from Token.java and replaced usages with helper methods moved from hadoop-hdfs-client module\n  /**\n   * Construct a Token from a TokenProto.\n   * @param tokenPB the TokenProto object\n   */\n  public Token(TokenProto tokenPB){\n   ...\n  }\n\n  /**\n   * Construct a TokenProto from this Token instance.\n   * @return a new TokenProto object holding copies of data in this instance\n   */\n  public TokenProto toTokenProto() {\n   ...\n  }", "createdAt": "2020-01-13T07:00:15Z", "url": "https://github.com/apache/hadoop/pull/1803", "merged": true, "mergeCommit": {"oid": "edbbc03ce7d479f1b84d9209021e9d2822909cfe"}, "closed": true, "closedAt": "2020-01-16T17:57:51Z", "author": {"login": "vinayakumarb"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb52rxnAH2gAyMzYxOTYyNDYzOjdjZGQwMmVmZWI3NmNjODg1OTNhNDczNTRkMDE2OTU2ZjMxYTFlYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6KQO1gH2gAyMzYxOTYyNDYzOjdlMjQ3NTgxZDkwNjFjMTg5YjMzZTE2YTFhNmY0OTJkNDI0NzExZGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7cdd02efeb76cc88593a47354d016956f31a1ea3", "author": {"user": {"login": "vinayakumarb", "name": "Vinayakumar B"}}, "url": "https://github.com/apache/hadoop/commit/7cdd02efeb76cc88593a47354d016956f31a1ea3", "committedDate": "2020-01-13T06:51:18Z", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60", "author": {"user": {"login": "vinayakumarb", "name": "Vinayakumar B"}}, "url": "https://github.com/apache/hadoop/commit/e5db4277b8c12e8664405cba47d5b8abcadd3e60", "committedDate": "2020-01-13T10:01:25Z", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs. Fixed findbugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzY1NjM1", "url": "https://github.com/apache/hadoop/pull/1803#pullrequestreview-341765635", "createdAt": "2020-01-13T10:58:50Z", "commit": {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDo1ODo1MFrOFczS7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMTowNDo0OVrOFczcPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NDg3Ng==", "bodyText": "final?", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365744876", "createdAt": "2020-01-13T10:58:50Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NjI2MQ==", "bodyText": "I think I'd prefer some explicit description \"tokenFromProto\", but not that fussy about overloading if you prefer that", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365746261", "createdAt": "2020-01-13T11:02:20Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n+      new ConcurrentHashMap<>();\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(Text key) {\n+    ByteString value = fixedByteStringCache.get(key);\n+    if (value == null) {\n+      value = ByteString.copyFromUtf8(key.toString());\n+      fixedByteStringCache.put(new Text(key.copyBytes()), value);\n+    }\n+    return value;\n+  }\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(String key) {\n+    ByteString value = fixedByteStringCache.get(key);\n+    if (value == null) {\n+      value = ByteString.copyFromUtf8(key);\n+      fixedByteStringCache.put(key, value);\n+    }\n+    return value;\n+  }\n+\n+  public static ByteString getByteString(byte[] bytes) {\n+    // return singleton to reduce object allocation\n+    return (bytes.length == 0) ? ByteString.EMPTY : ByteString.copyFrom(bytes);\n+  }\n+\n+  public static Token<? extends TokenIdentifier> convert(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NzI2MA==", "bodyText": "Is there any risk this will grow to a size it becomes a problem? If not, using a guava cache is overkill, if there is a risk then yes, we would need to", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365747260", "createdAt": "2020-01-13T11:04:49Z", "author": {"login": "steveloughran"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n+      new ConcurrentHashMap<>();\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(Text key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "author": {"user": {"login": "vinayakumarb", "name": "Vinayakumar B"}}, "url": "https://github.com/apache/hadoop/commit/f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "committedDate": "2020-01-13T12:54:51Z", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs. Fixed Review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxODI1NzMy", "url": "https://github.com/apache/hadoop/pull/1803#pullrequestreview-341825732", "createdAt": "2020-01-13T13:00:10Z", "commit": {"oid": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e247581d9061c189b33e16a1a6f492d424711df", "author": {"user": {"login": "vinayakumarb", "name": "Vinayakumar B"}}, "url": "https://github.com/apache/hadoop/commit/7e247581d9061c189b33e16a1a6f492d424711df", "committedDate": "2020-01-14T05:39:19Z", "message": "Fixed checkstyle comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4651, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}