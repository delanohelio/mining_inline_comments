{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NjgyNDM0", "number": 2259, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzozNjo1OFrOEjaBaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzozNjo1OFrOEjaBaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTYxOTYzOnYy", "diffSide": "LEFT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzozNjo1OFrOHRvTqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyMTowMFrOHS6ylA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2MjkyMg==", "bodyText": "Hi @xiaoyuyao , Not sure if it is compatible to throw out this exception. Other are fair enough to me. Thanks.", "url": "https://github.com/apache/hadoop/pull/2259#discussion_r488362922", "createdAt": "2020-09-15T03:36:58Z", "author": {"login": "Hexiaoqiao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java", "diffHunk": "@@ -299,19 +299,18 @@ public E getNext(String keyName)\n    * @param keyName the key to drain the Queue for\n    */\n   public void drain(String keyName) {\n+    Runnable e;\n+    while ((e = queue.deleteByName(keyName)) != null) {\n+      executor.remove(e);\n+    }\n+    writeLock(keyName);\n     try {\n-      Runnable e;\n-      while ((e = queue.deleteByName(keyName)) != null) {\n-        executor.remove(e);\n-      }\n-      writeLock(keyName);\n-      try {\n-        keyQueues.get(keyName).clear();\n-      } finally {\n-        writeUnlock(keyName);\n+      LinkedBlockingQueue kq = keyQueues.getIfPresent(keyName);\n+      if (kq != null) {\n+        kq.clear();\n       }\n-    } catch (ExecutionException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "609357f6b52a0fc3469bfb43a2a277ead5aecd75"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OTYzNg==", "bodyText": "We don't have compatibility issue here. LoadingCache#get() may throw ExecutionException. But this ticket has change to use LoadingCache#getIfPresent() which does not throw ExecutionException. This way, we don't need to worry about either NPE from LoadingCache.get().clear() or ExecutionException.", "url": "https://github.com/apache/hadoop/pull/2259#discussion_r489599636", "createdAt": "2020-09-16T17:21:00Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java", "diffHunk": "@@ -299,19 +299,18 @@ public E getNext(String keyName)\n    * @param keyName the key to drain the Queue for\n    */\n   public void drain(String keyName) {\n+    Runnable e;\n+    while ((e = queue.deleteByName(keyName)) != null) {\n+      executor.remove(e);\n+    }\n+    writeLock(keyName);\n     try {\n-      Runnable e;\n-      while ((e = queue.deleteByName(keyName)) != null) {\n-        executor.remove(e);\n-      }\n-      writeLock(keyName);\n-      try {\n-        keyQueues.get(keyName).clear();\n-      } finally {\n-        writeUnlock(keyName);\n+      LinkedBlockingQueue kq = keyQueues.getIfPresent(keyName);\n+      if (kq != null) {\n+        kq.clear();\n       }\n-    } catch (ExecutionException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2MjkyMg=="}, "originalCommit": {"oid": "609357f6b52a0fc3469bfb43a2a277ead5aecd75"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3414, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}