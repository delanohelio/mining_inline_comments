{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTY4NTk5", "number": 2132, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDoyMTo0MlrOENjrzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDoyMTo0MlrOENjrzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjUxNTk2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/TestViewFsOverloadSchemeListStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDoyMTo0MlrOGwRHEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyNTowNFrOGwRq2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTE3MA==", "bodyText": "nit:\nthere is a static import for assert.* above, you can avoid having Assert.", "url": "https://github.com/apache/hadoop/pull/2132#discussion_r453265170", "createdAt": "2020-07-12T04:21:42Z", "author": {"login": "ayushtkn"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/TestViewFsOverloadSchemeListStatus.java", "diffHunk": "@@ -124,6 +126,24 @@ public void testListStatusACL() throws IOException, URISyntaxException {\n     }\n   }\n \n+  /**\n+   * Tests that ViewFSOverloadScheme should consider initialized fs as fallback\n+   * if there are no mount links configured.\n+   */\n+  @Test(timeout = 30000)\n+  public void testViewFSOverloadSchemeWithoutAnyMountLinks() throws Exception {\n+    try (FileSystem fs = FileSystem.get(TEST_DIR.toPath().toUri(), conf)) {\n+      ViewFileSystemOverloadScheme vfs = (ViewFileSystemOverloadScheme) fs;\n+      Assert.assertEquals(0, vfs.getMountPoints().length);\n+      Path testFallBack = new Path(\"test\", FILE_NAME);\n+      Assert.assertTrue(vfs.mkdirs(testFallBack));\n+      FileStatus[] status = vfs.listStatus(testFallBack.getParent());\n+      Assert.assertEquals(FILE_NAME, status[0].getPath().getName());\n+      Assert.assertEquals(testFallBack.getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c76ae4d0f6dec615300f113401e4fd3533960031"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDMyOQ==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2132#discussion_r453274329", "createdAt": "2020-07-12T06:25:04Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/TestViewFsOverloadSchemeListStatus.java", "diffHunk": "@@ -124,6 +126,24 @@ public void testListStatusACL() throws IOException, URISyntaxException {\n     }\n   }\n \n+  /**\n+   * Tests that ViewFSOverloadScheme should consider initialized fs as fallback\n+   * if there are no mount links configured.\n+   */\n+  @Test(timeout = 30000)\n+  public void testViewFSOverloadSchemeWithoutAnyMountLinks() throws Exception {\n+    try (FileSystem fs = FileSystem.get(TEST_DIR.toPath().toUri(), conf)) {\n+      ViewFileSystemOverloadScheme vfs = (ViewFileSystemOverloadScheme) fs;\n+      Assert.assertEquals(0, vfs.getMountPoints().length);\n+      Path testFallBack = new Path(\"test\", FILE_NAME);\n+      Assert.assertTrue(vfs.mkdirs(testFallBack));\n+      FileStatus[] status = vfs.listStatus(testFallBack.getParent());\n+      Assert.assertEquals(FILE_NAME, status[0].getPath().getName());\n+      Assert.assertEquals(testFallBack.getName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTE3MA=="}, "originalCommit": {"oid": "c76ae4d0f6dec615300f113401e4fd3533960031"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3490, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}