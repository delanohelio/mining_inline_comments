{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MzY4NDY1", "number": 2494, "title": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler", "bodyText": "##For  YARN-10380 issue\nImport logic of multi-node allocation in CapacityScheduler.", "createdAt": "2020-11-27T03:06:18Z", "url": "https://github.com/apache/hadoop/pull/2494", "merged": true, "mergeCommit": {"oid": "d67ccd03e36b3afdb9ce900460a16a6210444bff"}, "closed": true, "closedAt": "2020-12-09T11:48:40Z", "author": {"login": "zhuqi-lucas"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdge048ABqjQwNDQzNzA1NjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiFm3LABqjQwNjAxODMzMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c0d6bfa3f7a1a658b111e8ff8329fcb1747a891", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/4c0d6bfa3f7a1a658b111e8ff8329fcb1747a891", "committedDate": "2020-11-27T03:02:51Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}, "afterCommit": {"oid": "cad6881da696a0fbc427f3dcb199e95ffc81804b", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/cad6881da696a0fbc427f3dcb199e95ffc81804b", "committedDate": "2020-11-27T03:17:04Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80388afb28c8d2b92fff95416bf0a0f76d9d202d", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/80388afb28c8d2b92fff95416bf0a0f76d9d202d", "committedDate": "2020-12-01T05:40:57Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cad6881da696a0fbc427f3dcb199e95ffc81804b", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/cad6881da696a0fbc427f3dcb199e95ffc81804b", "committedDate": "2020-11-27T03:17:04Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}, "afterCommit": {"oid": "80388afb28c8d2b92fff95416bf0a0f76d9d202d", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/80388afb28c8d2b92fff95416bf0a0f76d9d202d", "committedDate": "2020-12-01T05:40:57Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "615184b1d963fa400c97c22601dbd39baef1ff1b", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/615184b1d963fa400c97c22601dbd39baef1ff1b", "committedDate": "2020-12-01T11:18:11Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}, "afterCommit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/fb506a09bcf17d30468cb22231e710492168a1c8", "committedDate": "2020-12-01T14:25:17Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMDE3Njk3", "url": "https://github.com/apache/hadoop/pull/2494#pullrequestreview-542017697", "createdAt": "2020-12-01T15:29:41Z", "commit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNToyOTo0MVrOH8yaMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozNDowOVrOH8yn6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUwMjUxMg==", "bodyText": "Why remove this variable and add new within if-else block?", "url": "https://github.com/apache/hadoop/pull/2494#discussion_r533502512", "createdAt": "2020-12-01T15:29:41Z", "author": {"login": "jiwq"}, "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java", "diffHunk": "@@ -531,11 +531,11 @@ private static boolean shouldSkipNodeSchedule(FiCaSchedulerNode node,\n \n   /**\n    * Schedule on all nodes by starting at a random point.\n+   * Schedule on all partitions by starting at a random partition\n+   * when multiNodePlacementEnabled is true.\n    * @param cs\n    */\n   static void schedule(CapacityScheduler cs) throws InterruptedException{\n-    // First randomize the start point\n-    int current = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUwMjg0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //Get all partitions\n          \n          \n            \n                  // Get all partitions", "url": "https://github.com/apache/hadoop/pull/2494#discussion_r533502841", "createdAt": "2020-12-01T15:30:03Z", "author": {"login": "jiwq"}, "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java", "diffHunk": "@@ -544,44 +544,73 @@ static void schedule(CapacityScheduler cs) throws InterruptedException{\n     if(nodeSize == 0) {\n       return;\n     }\n-    int start = random.nextInt(nodeSize);\n+    if (!cs.multiNodePlacementEnabled) {\n+      // First randomize the start point\n+      int current = 0;\n+      int start = random.nextInt(nodeSize);\n \n-    // To avoid too verbose DEBUG logging, only print debug log once for\n-    // every 10 secs.\n-    boolean printSkipedNodeLogging = false;\n-    if (Time.monotonicNow() / 1000 % 10 == 0) {\n-      printSkipedNodeLogging = (!printedVerboseLoggingForAsyncScheduling);\n-    } else {\n-      printedVerboseLoggingForAsyncScheduling = false;\n-    }\n+      // To avoid too verbose DEBUG logging, only print debug log once for\n+      // every 10 secs.\n+      boolean printSkipedNodeLogging = false;\n+      if (Time.monotonicNow() / 1000 % 10 == 0) {\n+        printSkipedNodeLogging = (!printedVerboseLoggingForAsyncScheduling);\n+      } else {\n+        printedVerboseLoggingForAsyncScheduling = false;\n+      }\n+\n+      // Allocate containers of node [start, end)\n+      for (FiCaSchedulerNode node : nodes) {\n+        if (current++ >= start) {\n+          if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n+            continue;\n+          }\n+          cs.allocateContainersToNode(node.getNodeID(), false);\n+        }\n+      }\n \n-    // Allocate containers of node [start, end)\n-    for (FiCaSchedulerNode node : nodes) {\n-      if (current++ >= start) {\n+      current = 0;\n+\n+      // Allocate containers of node [0, start)\n+      for (FiCaSchedulerNode node : nodes) {\n+        if (current++ > start) {\n+          break;\n+        }\n         if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n           continue;\n         }\n         cs.allocateContainersToNode(node.getNodeID(), false);\n       }\n-    }\n-\n-    current = 0;\n \n-    // Allocate containers of node [0, start)\n-    for (FiCaSchedulerNode node : nodes) {\n-      if (current++ > start) {\n-        break;\n+      if (printSkipedNodeLogging) {\n+        printedVerboseLoggingForAsyncScheduling = true;\n       }\n-      if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n-        continue;\n+    } else {\n+      //Get all partitions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUwNjAyNg==", "bodyText": "Due to getCandiateNodeSet(String) method maybe return null, so call allocateContainersToNode can cause NPE.", "url": "https://github.com/apache/hadoop/pull/2494#discussion_r533506026", "createdAt": "2020-12-01T15:34:09Z", "author": {"login": "jiwq"}, "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java", "diffHunk": "@@ -544,44 +544,73 @@ static void schedule(CapacityScheduler cs) throws InterruptedException{\n     if(nodeSize == 0) {\n       return;\n     }\n-    int start = random.nextInt(nodeSize);\n+    if (!cs.multiNodePlacementEnabled) {\n+      // First randomize the start point\n+      int current = 0;\n+      int start = random.nextInt(nodeSize);\n \n-    // To avoid too verbose DEBUG logging, only print debug log once for\n-    // every 10 secs.\n-    boolean printSkipedNodeLogging = false;\n-    if (Time.monotonicNow() / 1000 % 10 == 0) {\n-      printSkipedNodeLogging = (!printedVerboseLoggingForAsyncScheduling);\n-    } else {\n-      printedVerboseLoggingForAsyncScheduling = false;\n-    }\n+      // To avoid too verbose DEBUG logging, only print debug log once for\n+      // every 10 secs.\n+      boolean printSkipedNodeLogging = false;\n+      if (Time.monotonicNow() / 1000 % 10 == 0) {\n+        printSkipedNodeLogging = (!printedVerboseLoggingForAsyncScheduling);\n+      } else {\n+        printedVerboseLoggingForAsyncScheduling = false;\n+      }\n+\n+      // Allocate containers of node [start, end)\n+      for (FiCaSchedulerNode node : nodes) {\n+        if (current++ >= start) {\n+          if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n+            continue;\n+          }\n+          cs.allocateContainersToNode(node.getNodeID(), false);\n+        }\n+      }\n \n-    // Allocate containers of node [start, end)\n-    for (FiCaSchedulerNode node : nodes) {\n-      if (current++ >= start) {\n+      current = 0;\n+\n+      // Allocate containers of node [0, start)\n+      for (FiCaSchedulerNode node : nodes) {\n+        if (current++ > start) {\n+          break;\n+        }\n         if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n           continue;\n         }\n         cs.allocateContainersToNode(node.getNodeID(), false);\n       }\n-    }\n-\n-    current = 0;\n \n-    // Allocate containers of node [0, start)\n-    for (FiCaSchedulerNode node : nodes) {\n-      if (current++ > start) {\n-        break;\n+      if (printSkipedNodeLogging) {\n+        printedVerboseLoggingForAsyncScheduling = true;\n       }\n-      if (shouldSkipNodeSchedule(node, cs, printSkipedNodeLogging)) {\n-        continue;\n+    } else {\n+      //Get all partitions\n+      List<String> partitions = cs.nodeTracker.getPartitions();\n+      int partitionSize = partitions.size();\n+      // First randomize the start point\n+      int start = random.nextInt(partitionSize);\n+      int current = 0;\n+      // Allocate containers of partition [start, end)\n+      for (String partititon : partitions) {\n+        if (current++ >= start) {\n+          cs.allocateContainersToNode(cs.getCandidateNodeSet(partititon),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f03143911fc5e0527304da8e8f05d9563748fe", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/c0f03143911fc5e0527304da8e8f05d9563748fe", "committedDate": "2020-12-02T03:02:22Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb506a09bcf17d30468cb22231e710492168a1c8", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/fb506a09bcf17d30468cb22231e710492168a1c8", "committedDate": "2020-12-01T14:25:17Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}, "afterCommit": {"oid": "c0f03143911fc5e0527304da8e8f05d9563748fe", "author": {"user": {"login": "zhuqi-lucas", "name": "zhuqi"}}, "url": "https://github.com/apache/hadoop/commit/c0f03143911fc5e0527304da8e8f05d9563748fe", "committedDate": "2020-12-02T03:02:22Z", "message": "YARN-10380: Import logic of multi-node allocation in CapacityScheduler"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3332, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}