{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjM4ODMw", "number": 1872, "title": "Hadoop 16890: Change in expiry calculation for MSI token provider", "bodyText": "NOTICE\nPlease create an issue in ASF JIRA before opening a pull request,\nand you need to set the title of the pull request which starts with\nthe corresponding JIRA issue number. (e.g. HADOOP-XXXXX. Fix a typo in YYY.)\nFor more details, please see https://cwiki.apache.org/confluence/display/HADOOP/How+To+Contribute", "createdAt": "2020-03-02T22:20:52Z", "url": "https://github.com/apache/hadoop/pull/1872", "merged": true, "mergeCommit": {"oid": "0b931f36ec83dc72729a9e84a0d313f471061c64"}, "closed": true, "closedAt": "2020-03-11T20:39:10Z", "author": {"login": "bilaharith"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJyux6gH2gAyMzgyNjM4ODMwOjA0M2FiMTFmMGVkMzQ1OTc3ZmRjOTQyOGM1ZmNkNTk4MTgxZTMyOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMtRqyAFqTM3Mjc0MjQ2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "043ab11f0ed345977fdc9428c5fcd598181e3299", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/043ab11f0ed345977fdc9428c5fcd598181e3299", "committedDate": "2020-03-02T19:17:45Z", "message": "Change in expiry calculation for MSI token provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e043dfa92bc1a4f14011026d83ec31cfdd33ac49", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/e043dfa92bc1a4f14011026d83ec31cfdd33ac49", "committedDate": "2020-03-02T19:22:04Z", "message": "powermock version update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "386b6e020d8df312ce1adc0bd171c39620582aad", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/386b6e020d8df312ce1adc0bd171c39620582aad", "committedDate": "2020-03-02T20:14:43Z", "message": "Moved powermock dependancies to child pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/d3d12d9a844f6af2015b295789219460dff6a726", "committedDate": "2020-03-02T22:56:36Z", "message": "Change in test file name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzYzNTI0", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-367763524", "createdAt": "2020-03-03T07:57:19Z", "commit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzo1NzoyMFrOFw7YEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODoyNToxMFrOFw8DXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0ODc4Nw==", "bodyText": "If expiresOnInSecs is supposed to be the field to rely on and has been returned -1, why not error out in else ?\nWhy is it that we are defaulting to value in expires_in which is not reliable ?", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386848787", "createdAt": "2020-03-03T07:57:20Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,29 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {\n-            expiryPeriod = Integer.parseInt(fieldValue);\n+            expiryPeriodInSecs = Integer.parseInt(fieldValue);\n+          }\n+\n+          if (fieldName.equals(\"expires_on\")) {\n+            expiresOnInSecs = Long.parseLong(fieldValue);\n           }\n+\n         }\n         jp.nextToken();\n       }\n       jp.close();\n-      long expiry = System.currentTimeMillis();\n-      expiry = expiry + expiryPeriod * 1000L; // convert expiryPeriod to milliseconds and add\n-      token.setExpiry(new Date(expiry));\n-      LOG.debug(\"AADToken: fetched token with expiry \" + token.getExpiry().toString());\n+      if (expiresOnInSecs > -1) {\n+        token.setExpiry(new Date(expiresOnInSecs * 1000));\n+      } else {\n+        long expiry = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0ODkwOQ==", "bodyText": "new line after if check block needed.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386848909", "createdAt": "2020-03-03T07:57:39Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,29 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {\n-            expiryPeriod = Integer.parseInt(fieldValue);\n+            expiryPeriodInSecs = Integer.parseInt(fieldValue);\n+          }\n+\n+          if (fieldName.equals(\"expires_on\")) {\n+            expiresOnInSecs = Long.parseLong(fieldValue);\n           }\n+\n         }\n         jp.nextToken();\n       }\n       jp.close();\n-      long expiry = System.currentTimeMillis();\n-      expiry = expiry + expiryPeriod * 1000L; // convert expiryPeriod to milliseconds and add\n-      token.setExpiry(new Date(expiry));\n-      LOG.debug(\"AADToken: fetched token with expiry \" + token.getExpiry().toString());\n+      if (expiresOnInSecs > -1) {\n+        token.setExpiry(new Date(expiresOnInSecs * 1000));\n+      } else {\n+        long expiry = System.currentTimeMillis();\n+        expiry = expiry + expiryPeriodInSecs\n+            * 1000L; // convert expiryPeriod to milliseconds and add\n+        token.setExpiry(new Date(expiry));\n+      }\n+      LOG.debug(\"AADToken: fetched token with expiry {}, expiresOn passed: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg1NTQ2Ng==", "bodyText": "Order the non-static imports in the order:\n\njava*\nany non org.apache imports\norg.apache imports", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386855466", "createdAt": "2020-03-03T08:14:18Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/ITestAbfsMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg1NjAxMA==", "bodyText": "It seems there are javadoc compilers issues with description comments without a dot at end. Please add here and at places such comments are added.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386856010", "createdAt": "2020-03-03T08:15:39Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/ITestAbfsMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AccessTokenProvider;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AzureADToken;\n+import org.apache.hadoop.fs.azurebfs.oauth2.MsiTokenProvider;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Date;\n+\n+import static org.apache.hadoop.fs.azurebfs.constants.AuthConfigurations.DEFAULT_FS_AZURE_ACCOUNT_OAUTH_MSI_AUTHORITY;\n+import static org.apache.hadoop.fs.azurebfs.constants.AuthConfigurations.DEFAULT_FS_AZURE_ACCOUNT_OAUTH_MSI_ENDPOINT;\n+import static org.apache.hadoop.fs.azurebfs.constants.ConfigurationKeys.FS_AZURE_ACCOUNT_OAUTH_CLIENT_ID;\n+import static org.apache.hadoop.fs.azurebfs.constants.ConfigurationKeys.FS_AZURE_ACCOUNT_OAUTH_MSI_AUTHORITY;\n+import static org.apache.hadoop.fs.azurebfs.constants.ConfigurationKeys.FS_AZURE_ACCOUNT_OAUTH_MSI_ENDPOINT;\n+import static org.apache.hadoop.fs.azurebfs.constants.ConfigurationKeys.FS_AZURE_ACCOUNT_OAUTH_MSI_TENANT;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.hamcrest.Matchers.isEmptyOrNullString;\n+import static org.hamcrest.Matchers.isEmptyString;\n+import static org.junit.Assume.assumeThat;\n+\n+/**\n+ * Test MsiTokenProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg1NjMxNg==", "bodyText": "Please refer to non-static import order mentioned in above comment.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386856316", "createdAt": "2020-03-03T08:16:22Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/unittests/TestMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs.azurebfs.unittests;\n+\n+import org.apache.hadoop.fs.azurebfs.oauth2.AccessTokenProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg1OTg2OQ==", "bodyText": "With this mock the code which parses the response and sets the expiry from expires_on will not be hit ?", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r386859869", "createdAt": "2020-03-03T08:25:10Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/unittests/TestMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs.azurebfs.unittests;\n+\n+import org.apache.hadoop.fs.azurebfs.oauth2.AccessTokenProvider;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AzureADAuthenticator;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AzureADToken;\n+import org.apache.hadoop.fs.azurebfs.oauth2.MsiTokenProvider;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import java.io.IOException;\n+import java.util.Date;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.greaterThan;\n+import static org.hamcrest.Matchers.lessThanOrEqualTo;\n+import static org.hamcrest.core.AllOf.allOf;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+import static org.powermock.api.mockito.PowerMockito.mockStatic;\n+import static org.powermock.reflect.Whitebox.getInternalState;\n+import static org.powermock.reflect.Whitebox.invokeMethod;\n+import static org.powermock.reflect.Whitebox.setInternalState;\n+\n+/**\n+ * Unit test for MsiTokenProvider\n+ */\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest(AzureADAuthenticator.class)\n+public class TestMsiTokenProvider {\n+\n+  private static final long ONE_HOUR = 3600 * 1000;\n+  private static final long TWO_HOUR = ONE_HOUR * 2;\n+\n+  @Test\n+  public void testMsiTokenProvider() throws Exception {\n+    String testToken = \"TEST_TOKEN1\";\n+    setMockAzureADAuthenticator(testToken,\n+        System.currentTimeMillis() + TWO_HOUR);\n+\n+    AccessTokenProvider msiTokenProvider = new MsiTokenProvider(\"\", \"\", \"\", \"\");\n+    long tokenFetchTime = getInternalState(msiTokenProvider, \"tokenFetchTime\");\n+    Assert.assertEquals(-1, tokenFetchTime);\n+\n+    long before = System.currentTimeMillis();\n+    AzureADToken token = msiTokenProvider.getToken();\n+    long after = System.currentTimeMillis();\n+    long newTokenFetchTime = getInternalState(msiTokenProvider,\n+        \"tokenFetchTime\");\n+    assertThat(newTokenFetchTime,\n+        is(allOf(greaterThan(before), lessThanOrEqualTo(after))));\n+    assertThat(token.getAccessToken(), is(equalTo(testToken)));\n+\n+    assertThat(invokeMethod(msiTokenProvider, \"isTokenAboutToExpire\"),\n+        is(false));\n+\n+    setInternalState(msiTokenProvider, \"tokenFetchTime\",\n+        System.currentTimeMillis() - ONE_HOUR);\n+    assertThat(invokeMethod(msiTokenProvider, \"isTokenAboutToExpire\"),\n+        is(true));\n+\n+    setInternalState(msiTokenProvider, \"tokenFetchTime\",\n+        System.currentTimeMillis() + 2 - ONE_HOUR);\n+    assertThat(invokeMethod(msiTokenProvider, \"isTokenAboutToExpire\"),\n+        is(false));\n+  }\n+\n+  private AzureADToken setMockAzureADAuthenticator(String tokenStr, long expiry)\n+      throws IOException {\n+    AzureADToken token = new AzureADToken();\n+    token.setAccessToken(tokenStr);\n+    token.setExpiry(new Date(expiry));\n+    mockStatic(AzureADAuthenticator.class);\n+    when(AzureADAuthenticator\n+        .getTokenFromMsi(Mockito.anyString(), Mockito.anyString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTYyMDkz", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-368162093", "createdAt": "2020-03-03T17:06:02Z", "commit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b717a3c1e1b4129d763b948b5fdc73adc37d3e9e", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/b717a3c1e1b4129d763b948b5fdc73adc37d3e9e", "committedDate": "2020-03-03T17:18:40Z", "message": "Review comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDQ0OTk3", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-368444997", "createdAt": "2020-03-04T01:20:27Z", "commit": {"oid": "b717a3c1e1b4129d763b948b5fdc73adc37d3e9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyMDoyOFrOFxc4iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1Njo0NFrOFxdgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM5Nzc2OA==", "bodyText": "the version need to go to hadoop-project pom file", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387397768", "createdAt": "2020-03-04T01:20:28Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/pom.xml", "diffHunk": "@@ -45,6 +45,7 @@\n     <fs.azure.scale.test.timeout>7200</fs.azure.scale.test.timeout>\n     <fs.azure.scale.test.list.performance.threads>10</fs.azure.scale.test.list.performance.threads>\n     <fs.azure.scale.test.list.performance.files>1000</fs.azure.scale.test.list.performance.files>\n+    <powermock.version>2.0.4</powermock.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b717a3c1e1b4129d763b948b5fdc73adc37d3e9e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM5OTY1OA==", "bodyText": "I suppose 0 is not a valid value for expiresOnInSecs, do we need to add value check here?", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387399658", "createdAt": "2020-03-04T01:26:01Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,30 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {\n-            expiryPeriod = Integer.parseInt(fieldValue);\n+            expiryPeriodInSecs = Integer.parseInt(fieldValue);\n+          }\n+\n+          if (fieldName.equals(\"expires_on\")) {\n+            expiresOnInSecs = Long.parseLong(fieldValue);\n           }\n+\n         }\n         jp.nextToken();\n       }\n       jp.close();\n-      long expiry = System.currentTimeMillis();\n-      expiry = expiry + expiryPeriod * 1000L; // convert expiryPeriod to milliseconds and add\n-      token.setExpiry(new Date(expiry));\n-      LOG.debug(\"AADToken: fetched token with expiry \" + token.getExpiry().toString());\n+      if (expiresOnInSecs > -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b717a3c1e1b4129d763b948b5fdc73adc37d3e9e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwNzg4OQ==", "bodyText": "need to update this @return documentation too.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387407889", "createdAt": "2020-03-04T01:56:44Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/MsiTokenProvider.java", "diffHunk": "@@ -51,6 +55,35 @@ protected AzureADToken refreshToken() throws IOException {\n     LOG.debug(\"AADToken: refreshing token from MSI\");\n     AzureADToken token = AzureADAuthenticator\n         .getTokenFromMsi(authEndpoint, tenantGuid, clientId, authority, false);\n+    tokenFetchTime = System.currentTimeMillis();\n     return token;\n   }\n+\n+  /**\n+   * Checks if the token is about to expire as per base expiry logic.\n+   * Otherwise try to expire every 1 hour\n+   *\n+   * @return true if the token is expiring in next 5 minutes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b717a3c1e1b4129d763b948b5fdc73adc37d3e9e"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ff89d6947537e56f364d96aa35abc5ace486be", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/41ff89d6947537e56f364d96aa35abc5ace486be", "committedDate": "2020-03-04T10:55:50Z", "message": "Moving dependancy versions to parent pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/97b70be69cc406ead58202d5f9d311c86b68c6a5", "committedDate": "2020-03-04T14:29:34Z", "message": "Review comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDE5NzE5", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369019719", "createdAt": "2020-03-04T18:30:58Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODozMDo1OFrOFx4tYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODozMDo1OFrOFx4tYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1MzY2NQ==", "bodyText": "define a variable for the version", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387853665", "createdAt": "2020-03-04T18:30:58Z", "author": {"login": "DadanielZ"}, "path": "hadoop-project/pom.xml", "diffHunk": "@@ -1680,6 +1680,20 @@\n         <artifactId>jna</artifactId>\n         <version>${jna.version}</version>\n       </dependency>\n+\n+      <dependency>\n+        <groupId>org.powermock</groupId>\n+        <artifactId>powermock-api-mockito2</artifactId>\n+        <scope>test</scope>\n+        <version>2.0.4</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDE5ODIw", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369019820", "createdAt": "2020-03-04T18:31:09Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODozMTowOVrOFx4tsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODozMTowOVrOFx4tsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1Mzc0Nw==", "bodyText": "same here", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387853747", "createdAt": "2020-03-04T18:31:09Z", "author": {"login": "DadanielZ"}, "path": "hadoop-project/pom.xml", "diffHunk": "@@ -1680,6 +1680,20 @@\n         <artifactId>jna</artifactId>\n         <version>${jna.version}</version>\n       </dependency>\n+\n+      <dependency>\n+        <groupId>org.powermock</groupId>\n+        <artifactId>powermock-api-mockito2</artifactId>\n+        <scope>test</scope>\n+        <version>2.0.4</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.powermock</groupId>\n+        <artifactId>powermock-module-junit4</artifactId>\n+        <scope>test</scope>\n+        <version>2.0.4</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDI2Njg5", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369026689", "createdAt": "2020-03-04T18:41:28Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MToyOFrOFx5DOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MToyOFrOFx5DOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1OTI1OA==", "bodyText": "remove it if not being used", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387859258", "createdAt": "2020-03-04T18:41:28Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/pom.xml", "diffHunk": "@@ -45,7 +45,7 @@\n     <fs.azure.scale.test.timeout>7200</fs.azure.scale.test.timeout>\n     <fs.azure.scale.test.list.performance.threads>10</fs.azure.scale.test.list.performance.threads>\n     <fs.azure.scale.test.list.performance.files>1000</fs.azure.scale.test.list.performance.files>\n-    <powermock.version>2.0.4</powermock.version>\n+    <!--<powermock.version>2.0.4</powermock.version>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDI2OTY3", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369026967", "createdAt": "2020-03-04T18:41:52Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MTo1MlrOFx5ELg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MTo1MlrOFx5ELg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1OTUwMg==", "bodyText": "same here", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387859502", "createdAt": "2020-03-04T18:41:52Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/pom.xml", "diffHunk": "@@ -290,13 +290,13 @@\n       <groupId>org.powermock</groupId>\n       <artifactId>powermock-api-mockito2</artifactId>\n       <scope>test</scope>\n-      <version>${powermock.version}</version>\n+      <!--<version>${powermock.version}</version>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDI3MjE5", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369027219", "createdAt": "2020-03-04T18:42:14Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MjoxNFrOFx5E6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo0MjoxNFrOFx5E6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1OTY4OA==", "bodyText": "same here", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r387859688", "createdAt": "2020-03-04T18:42:14Z", "author": {"login": "DadanielZ"}, "path": "hadoop-tools/hadoop-azure/pom.xml", "diffHunk": "@@ -290,13 +290,13 @@\n       <groupId>org.powermock</groupId>\n       <artifactId>powermock-api-mockito2</artifactId>\n       <scope>test</scope>\n-      <version>${powermock.version}</version>\n+      <!--<version>${powermock.version}</version>-->\n     </dependency>\n     <dependency>\n       <groupId>org.powermock</groupId>\n       <artifactId>powermock-module-junit4</artifactId>\n       <scope>test</scope>\n-      <version>${powermock.version}</version>\n+      <!--<version>${powermock.version}</version>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDI4MjAw", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369028200", "createdAt": "2020-03-04T18:43:39Z", "commit": {"oid": "97b70be69cc406ead58202d5f9d311c86b68c6a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39496686cb9f8d75c6d42186d7b12be6bf855742", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/39496686cb9f8d75c6d42186d7b12be6bf855742", "committedDate": "2020-03-04T20:05:50Z", "message": "Review comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzQxMTYx", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-369341161", "createdAt": "2020-03-05T07:23:19Z", "commit": {"oid": "39496686cb9f8d75c6d42186d7b12be6bf855742"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzoyMzoxOVrOFyIs-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzoyMzoxOVrOFyIs-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODExNTcwNg==", "bodyText": "Hey @bilaharith  @steveloughran ,  I'm still not sure about this change. Simply updating the existing \"powermock.version\" will cause build issues for some other projects, so new version variable \"powermock-api.version\" is introduced.\nSome other projects already override \"powermock.version\" for powermock-api-mockito2 , such as Hadoop-Yarn here.\nMaybe we can override its version in hadoop-azure's pom file too, instead of introducing the new version variable?\nOther changes look good to me.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r388115706", "createdAt": "2020-03-05T07:23:19Z", "author": {"login": "DadanielZ"}, "path": "hadoop-project/pom.xml", "diffHunk": "@@ -204,6 +204,7 @@\n     <assertj.version>3.12.2</assertj.version>\n     <jline.version>3.9.0</jline.version>\n     <powermock.version>1.5.6</powermock.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39496686cb9f8d75c6d42186d7b12be6bf855742"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c999b6dc2857a84d9632071aac8f3f18d0ce6da7", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/c999b6dc2857a84d9632071aac8f3f18d0ce6da7", "committedDate": "2020-03-06T20:10:48Z", "message": "Updating the parent pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/a5fb0fe106f44ff76806dcd40408b7ca8188e713", "committedDate": "2020-03-07T09:18:49Z", "message": "Removing power mock dependancy for now"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMDUyODYx", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-371052861", "createdAt": "2020-03-09T10:26:39Z", "commit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDoyNjozOVrOFzhsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozMDowMlrOFzhziw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3Mzc5NA==", "bodyText": "I'd like some reporting of parse failures here, especially which field isn't parsing.\nAlso, make sure that the code is validating content type before JSON parsing. We've done that for OAuth, needs to be done here so that a bad URL or proxy returns HTML and everything fails for no obvious reason", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r389573794", "createdAt": "2020-03-09T10:26:39Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,30 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NDA4Nw==", "bodyText": "this is going to be a separate PR, isn't it?", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r389574087", "createdAt": "2020-03-09T10:27:14Z", "author": {"login": "steveloughran"}, "path": "hadoop-project/pom.xml", "diffHunk": "@@ -1680,6 +1680,20 @@\n         <artifactId>jna</artifactId>\n         <version>${jna.version}</version>\n       </dependency>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NDkzNg==", "bodyText": "put expiryPeriod and * 1000 on same line. Also, feel free to use the new java time classes which are complex but powerful once you start to use them", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r389574936", "createdAt": "2020-03-09T10:28:48Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,30 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {\n-            expiryPeriod = Integer.parseInt(fieldValue);\n+            expiryPeriodInSecs = Integer.parseInt(fieldValue);\n+          }\n+\n+          if (fieldName.equals(\"expires_on\")) {\n+            expiresOnInSecs = Long.parseLong(fieldValue);\n           }\n+\n         }\n         jp.nextToken();\n       }\n       jp.close();\n-      long expiry = System.currentTimeMillis();\n-      expiry = expiry + expiryPeriod * 1000L; // convert expiryPeriod to milliseconds and add\n-      token.setExpiry(new Date(expiry));\n-      LOG.debug(\"AADToken: fetched token with expiry \" + token.getExpiry().toString());\n+      if (expiresOnInSecs > 0) {\n+        token.setExpiry(new Date(expiresOnInSecs * 1000));\n+      } else {\n+        long expiry = System.currentTimeMillis();\n+        expiry = expiry + expiryPeriodInSecs\n+            * 1000L; // convert expiryPeriod to milliseconds and add", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NTI5MQ==", "bodyText": "or if a token has never been fetched", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r389575291", "createdAt": "2020-03-09T10:29:33Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/MsiTokenProvider.java", "diffHunk": "@@ -51,6 +55,35 @@ protected AzureADToken refreshToken() throws IOException {\n     LOG.debug(\"AADToken: refreshing token from MSI\");\n     AzureADToken token = AzureADAuthenticator\n         .getTokenFromMsi(authEndpoint, tenantGuid, clientId, authority, false);\n+    tokenFetchTime = System.currentTimeMillis();\n     return token;\n   }\n+\n+  /**\n+   * Checks if the token is about to expire as per base expiry logic.\n+   * Otherwise try to expire every 1 hour\n+   *\n+   * @return true if the token is expiring in next 1 hour", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NTU2Mw==", "bodyText": "check import ordering. you know what I'll complain about", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r389575563", "createdAt": "2020-03-09T10:30:02Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/ITestAbfsMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs;\n+\n+import org.apache.commons.lang3.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fb0fe106f44ff76806dcd40408b7ca8188e713"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3633c073ec7363e23fbbff43c051e80bcd533bb3", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/3633c073ec7363e23fbbff43c051e80bcd533bb3", "committedDate": "2020-03-09T18:59:26Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f794d651df01651941b8e56c005579b988fa0a4", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/3f794d651df01651941b8e56c005579b988fa0a4", "committedDate": "2020-03-09T19:03:22Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjY3ODI4", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-371667828", "createdAt": "2020-03-10T03:56:08Z", "commit": {"oid": "3f794d651df01651941b8e56c005579b988fa0a4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzo1NjowOFrOF0Awyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzo1NjozNVrOF0AxPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA4Mjc2Mw==", "bodyText": "Extra new line.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r390082763", "createdAt": "2020-03-10T03:56:08Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/ITestAbfsMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f794d651df01651941b8e56c005579b988fa0a4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA4Mjg3Ng==", "bodyText": "import ordering still not as expected.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r390082876", "createdAt": "2020-03-10T03:56:35Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/ITestAbfsMsiTokenProvider.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs;\n+\n+\n+import java.io.IOException;\n+import java.util.Date;\n+\n+import org.junit.Test;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AccessTokenProvider;\n+import org.apache.hadoop.fs.azurebfs.oauth2.AzureADToken;\n+import org.apache.hadoop.fs.azurebfs.oauth2.MsiTokenProvider;\n+\n+import static org.junit.Assume.assumeThat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f794d651df01651941b8e56c005579b988fa0a4"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d82bf7e021c7859355fa9f62207f6d3617e24439", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/d82bf7e021c7859355fa9f62207f6d3617e24439", "committedDate": "2020-03-10T07:04:12Z", "message": "Fixing import order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODIwNzYz", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-371820763", "createdAt": "2020-03-10T10:10:11Z", "commit": {"oid": "d82bf7e021c7859355fa9f62207f6d3617e24439"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd71fd27d651f84a5f2e6e21aa69ee2b3b052c01", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/cd71fd27d651f84a5f2e6e21aa69ee2b3b052c01", "committedDate": "2020-03-10T10:39:52Z", "message": "Added comment regarding the issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTY5MTUx", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-372169151", "createdAt": "2020-03-10T17:27:45Z", "commit": {"oid": "cd71fd27d651f84a5f2e6e21aa69ee2b3b052c01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d32b33fed0478d0e9c57e8393094ee2525f49893", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/d32b33fed0478d0e9c57e8393094ee2525f49893", "committedDate": "2020-03-11T02:20:31Z", "message": "Added comment regarding the issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "982dad0c57f84b40e5c4b1c761f4c4e5a5f4db43", "author": {"user": {"login": "bilaharith", "name": null}}, "url": "https://github.com/apache/hadoop/commit/982dad0c57f84b40e5c4b1c761f4c4e5a5f4db43", "committedDate": "2020-03-11T02:21:23Z", "message": "Merge branch 'HADOOP-16890_2' of https://github.com/bilaharith/hadoop into HADOOP-16890_2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzQyNDY4", "url": "https://github.com/apache/hadoop/pull/1872#pullrequestreview-372742468", "createdAt": "2020-03-11T13:12:21Z", "commit": {"oid": "982dad0c57f84b40e5c4b1c761f4c4e5a5f4db43"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxMjoyMVrOF02Onw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDozNjoyNVrOF1INlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1ODc1MQ==", "bodyText": "Not something needing changing in this PR, but this should really be Map<> and the code to move to a HashMap; all of Hashtable's methods are synchronized and it underperforms.", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r390958751", "createdAt": "2020-03-11T13:12:21Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -258,8 +258,13 @@ public UnexpectedResponseException(final int httpErrorCode,\n   }\n \n   private static AzureADToken getTokenCall(String authEndpoint, String body,\n-                                           Hashtable<String, String> headers, String httpMethod)\n-          throws IOException {\n+      Hashtable<String, String> headers, String httpMethod) throws IOException {\n+    return getTokenCall(authEndpoint, body, headers, httpMethod, false);\n+  }\n+\n+  private static AzureADToken getTokenCall(String authEndpoint, String body,\n+      Hashtable<String, String> headers, String httpMethod, boolean isMsi)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "982dad0c57f84b40e5c4b1c761f4c4e5a5f4db43"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MzE3OA==", "bodyText": "it'd be good to have some test JSONs here for real-world responses", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r391253178", "createdAt": "2020-03-11T20:35:59Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java", "diffHunk": "@@ -408,17 +409,29 @@ private static AzureADToken parseTokenFromStream(InputStream httpResponseStream)\n           if (fieldName.equals(\"access_token\")) {\n             token.setAccessToken(fieldValue);\n           }\n+\n           if (fieldName.equals(\"expires_in\")) {\n-            expiryPeriod = Integer.parseInt(fieldValue);\n+            expiryPeriodInSecs = Integer.parseInt(fieldValue);\n+          }\n+\n+          if (fieldName.equals(\"expires_on\")) {\n+            expiresOnInSecs = Long.parseLong(fieldValue);\n           }\n+\n         }\n         jp.nextToken();\n       }\n       jp.close();\n-      long expiry = System.currentTimeMillis();\n-      expiry = expiry + expiryPeriod * 1000L; // convert expiryPeriod to milliseconds and add\n-      token.setExpiry(new Date(expiry));\n-      LOG.debug(\"AADToken: fetched token with expiry \" + token.getExpiry().toString());\n+      if (expiresOnInSecs > -1) {\n+        token.setExpiry(new Date(expiresOnInSecs * 1000));\n+      } else {\n+        long expiry = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0ODc4Nw=="}, "originalCommit": {"oid": "d3d12d9a844f6af2015b295789219460dff6a726"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MzM5Nw==", "bodyText": "better: 3600_1000", "url": "https://github.com/apache/hadoop/pull/1872#discussion_r391253397", "createdAt": "2020-03-11T20:36:25Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/MsiTokenProvider.java", "diffHunk": "@@ -36,6 +36,10 @@\n \n   private final String clientId;\n \n+  private long tokenFetchTime = -1;\n+\n+  private static final long ONE_HOUR = 3600 * 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "982dad0c57f84b40e5c4b1c761f4c4e5a5f4db43"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4420, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}