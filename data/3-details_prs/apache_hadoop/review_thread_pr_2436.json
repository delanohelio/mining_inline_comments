{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjQ5OTcw", "number": 2436, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODoyNjowOFrOE1yaGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo1MDozN1rOE3dWiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODM1ODY2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODoyNjowOFrOHuQsgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODozOTo0OVrOHuRLuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3MDA4MQ==", "bodyText": "I would really appreciate if you rewrite this so it doesn't use -1 as startIdx. A year from now I won't remember why we want to load from position -1.", "url": "https://github.com/apache/hadoop/pull/2436#discussion_r518270081", "createdAt": "2020-11-05T18:26:08Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "diffHunk": "@@ -2876,10 +2876,17 @@ public Reader getConfResourceAsReader(String name) {\n   protected synchronized Properties getProps() {\n     if (properties == null) {\n       properties = new Properties();\n+      loadProps(properties, -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd816f3fd4fc2c3e16f219928d8d245c8123e602"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3ODA3Mg==", "bodyText": "Good point @jojochuang .I will think about something. or maybe addd a comment.", "url": "https://github.com/apache/hadoop/pull/2436#discussion_r518278072", "createdAt": "2020-11-05T18:39:49Z", "author": {"login": "amahussein"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "diffHunk": "@@ -2876,10 +2876,17 @@ public Reader getConfResourceAsReader(String name) {\n   protected synchronized Properties getProps() {\n     if (properties == null) {\n       properties = new Properties();\n+      loadProps(properties, -1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3MDA4MQ=="}, "originalCommit": {"oid": "cd816f3fd4fc2c3e16f219928d8d245c8123e602"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDQ4MzE5OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzowOTo0MFrOHwmtUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzowOTo0MFrOHwmtUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNzg5MA==", "bodyText": "(I thought I posted a comment here, but somehow it got lost in github comments)\nreturning this object isn't necessary, and obviously the callers don't use the return value.", "url": "https://github.com/apache/hadoop/pull/2436#discussion_r520727890", "createdAt": "2020-11-10T17:09:40Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "diffHunk": "@@ -2893,7 +2909,7 @@ protected synchronized Properties getProps() {\n         }\n       }\n     }\n-    return properties;\n+    return props;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6e55262424634531a5256e717e9b1e1d44ad2f8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTg4MDQwOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo1MDozN1rOHw0HsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo1NjoxNlrOHw0POw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NzYzMg==", "bodyText": "Could you also remove this @return? I am +1 once this is updated.", "url": "https://github.com/apache/hadoop/pull/2436#discussion_r520947632", "createdAt": "2020-11-10T23:50:37Z", "author": {"login": "jojochuang"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "diffHunk": "@@ -2876,12 +2876,28 @@ public Reader getConfResourceAsReader(String name) {\n   protected synchronized Properties getProps() {\n     if (properties == null) {\n       properties = new Properties();\n-      Map<String, String[]> backup = updatingResource != null ?\n-          new ConcurrentHashMap<String, String[]>(updatingResource) : null;\n-      loadResources(properties, resources, quietmode);\n+      loadProps(properties, 0, true);\n+    }\n+    return properties;\n+  }\n \n+  /**\n+   * Loads the resource at a given index into the properties.\n+   * @param props the object containing the loaded properties.\n+   * @param startIdx the index where the new resource has been added.\n+   * @param fullReload flag whether we do complete reload of the conf instead\n+   *                   of just loading the new resource.\n+   * @return the properties loaded from the resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3087c2c1956f5eba6dc2cca26e4cfa93fa4b2d2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0OTU2Mw==", "bodyText": "Sorry . I overlooked that.\nI added a new commit.", "url": "https://github.com/apache/hadoop/pull/2436#discussion_r520949563", "createdAt": "2020-11-10T23:56:16Z", "author": {"login": "amahussein"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java", "diffHunk": "@@ -2876,12 +2876,28 @@ public Reader getConfResourceAsReader(String name) {\n   protected synchronized Properties getProps() {\n     if (properties == null) {\n       properties = new Properties();\n-      Map<String, String[]> backup = updatingResource != null ?\n-          new ConcurrentHashMap<String, String[]>(updatingResource) : null;\n-      loadResources(properties, resources, quietmode);\n+      loadProps(properties, 0, true);\n+    }\n+    return properties;\n+  }\n \n+  /**\n+   * Loads the resource at a given index into the properties.\n+   * @param props the object containing the loaded properties.\n+   * @param startIdx the index where the new resource has been added.\n+   * @param fullReload flag whether we do complete reload of the conf instead\n+   *                   of just loading the new resource.\n+   * @return the properties loaded from the resource.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NzYzMg=="}, "originalCommit": {"oid": "d3087c2c1956f5eba6dc2cca26e4cfa93fa4b2d2"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3246, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}