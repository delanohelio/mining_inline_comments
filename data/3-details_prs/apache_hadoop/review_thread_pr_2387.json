{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODcxNDM5", "number": 2387, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyNToxOVrOEvJTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyNToxOVrOEvJTxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3ODcxMDQ2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestRawLocalFileSystemContract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyNToxOVrOHj9uKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTozMDoxNFrOHj92DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3MzQ1MA==", "bodyText": "HFS+ does not support milliseconds for mtime, so I agreed to skip this in MacOS. In contrast, APFS supports nanoseconds and JDK-8177809 is fixed if the filesystem is APFS.\n\u279c  hadoop git:(trunk) uname -a\nDarwin <snip> 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64 x86_64\n\u279c  hadoop git:(trunk) jshell                                          \n|  Welcome to JShell -- Version 11.0.8\n|  For an introduction type: /help intro\n\njshell> Files.getLastModifiedTime(Paths.get(\"./pom.xml\"))\n$1 ==> 2020-10-19T04:51:58.69531Z\n\njshell> new File(\"./pom.xml\").lastModified()\n$1 ==> 1603083118695\n\nWould you update the comment like \"Skip MacOS because HFS+ does not support milliseconds for mtime.\" ?", "url": "https://github.com/apache/hadoop/pull/2387#discussion_r507473450", "createdAt": "2020-10-19T05:25:19Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestRawLocalFileSystemContract.java", "diffHunk": "@@ -203,4 +203,27 @@ public void testPermission() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMTimeAtime() throws IOException {\n+    RawLocalFileSystem.setUseDeprecatedFileStatus(true);\n+    try {\n+      Path testDir = getTestBaseDir();\n+      String testFilename = \"testmtime\";\n+      Path path = new Path(testDir, testFilename);\n+      Path file = new Path(path, \"file\");\n+      fs.create(file);\n+      long now = System.currentTimeMillis();\n+      long mtime = (now % 1000 == 0) ? now + 1 : now;\n+      long atime = (now % 1000 == 0) ? now + 2 : now;\n+      fs.setTimes(file, mtime, atime);\n+      FileStatus fileStatus = fs.getFileStatus(file);\n+      if (!Shell.MAC) {\n+        //HADOOP-17306 ; JDK-8177809 not fixed in MacOs\n+        assertEquals(mtime, fileStatus.getModificationTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1d2cc5ff8c7c0d7171d40016df19d325f3cc1c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3NTQ2OA==", "bodyText": "Sure. Thanks for details @aajisaka", "url": "https://github.com/apache/hadoop/pull/2387#discussion_r507475468", "createdAt": "2020-10-19T05:30:14Z", "author": {"login": "vinayakumarb"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestRawLocalFileSystemContract.java", "diffHunk": "@@ -203,4 +203,27 @@ public void testPermission() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMTimeAtime() throws IOException {\n+    RawLocalFileSystem.setUseDeprecatedFileStatus(true);\n+    try {\n+      Path testDir = getTestBaseDir();\n+      String testFilename = \"testmtime\";\n+      Path path = new Path(testDir, testFilename);\n+      Path file = new Path(path, \"file\");\n+      fs.create(file);\n+      long now = System.currentTimeMillis();\n+      long mtime = (now % 1000 == 0) ? now + 1 : now;\n+      long atime = (now % 1000 == 0) ? now + 2 : now;\n+      fs.setTimes(file, mtime, atime);\n+      FileStatus fileStatus = fs.getFileStatus(file);\n+      if (!Shell.MAC) {\n+        //HADOOP-17306 ; JDK-8177809 not fixed in MacOs\n+        assertEquals(mtime, fileStatus.getModificationTime());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3MzQ1MA=="}, "originalCommit": {"oid": "af1d2cc5ff8c7c0d7171d40016df19d325f3cc1c"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3212, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}