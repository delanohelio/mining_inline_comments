{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjI0MjUy", "number": 1815, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNToxMVrODaSElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowNTo1N1rODbQRAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg1NjUzOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNToxMVrOFhJn6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDozODoyOFrOFhpyUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw==", "bodyText": "nit: leave the empty line", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370305003", "createdAt": "2020-01-23T19:15:11Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "diffHunk": "@@ -35,6 +35,7 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.RemoteIterator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxMDU3Ng==", "bodyText": "there was no empty line here", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370410576", "createdAt": "2020-01-23T23:34:44Z", "author": {"login": "mustafaiman"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "diffHunk": "@@ -35,6 +35,7 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.RemoteIterator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw=="}, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNjM5Ng==", "bodyText": "(add an empty line between the com.google. and org.apahce.hadoop imports. we group our imports for easier backporting)", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370826396", "createdAt": "2020-01-24T20:23:39Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "diffHunk": "@@ -35,6 +35,7 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.RemoteIterator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw=="}, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMTk1NA==", "bodyText": "thanks for clarification. will do", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370831954", "createdAt": "2020-01-24T20:38:28Z", "author": {"login": "mustafaiman"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "diffHunk": "@@ -35,6 +35,7 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.RemoteIterator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw=="}, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg2MzgzOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNzozMFrOFhJsbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxNzozMFrOFhJsbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNjE1Nw==", "bodyText": "This test suite has made the leap to AssertJ assertions -please us them unless you can make the case against them. They're better, really", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370306157", "createdAt": "2020-01-23T19:17:30Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "diffHunk": "@@ -291,6 +295,102 @@ public void testListStatusMakesEmptyDirAuth() throws Throwable {\n     assertListDoesNotUpdateAuth(dir);\n   }\n \n+  @Test\n+  public void testListFilesRecursiveWhenAllListingsAreAuthoritative()\n+      throws Exception {\n+    describe(\"listFiles does not make further calls to the fs when\"\n+        + \"all nested directory listings are authoritative\");\n+    Set<Path> files = new HashSet<>();\n+\n+    Path parentDir = dir;\n+    Path parentFile = dirFile;\n+    Path nestedDir1 = new Path(dir, \"nested1\");\n+    Path nestedFile1 = new Path(nestedDir1, \"nestedFile1\");\n+    Path nestedDir2 = new Path(nestedDir1, \"nested2/\");\n+    Path nestedFile2 = new Path(nestedDir2, \"nestedFile2\");\n+\n+    files.add(parentFile);\n+    files.add(nestedFile1);\n+    files.add(nestedFile2);\n+\n+    authFS.mkdirs(parentDir);\n+    authFS.mkdirs(nestedDir1);\n+    authFS.mkdirs(nestedDir2);\n+    touchFile(parentFile);\n+    touchFile(nestedFile1);\n+    touchFile(nestedFile2);\n+\n+    // making listStatus call to mark directories authoritative\n+    authFS.listStatus(parentDir);\n+    authFS.listStatus(nestedDir1);\n+    authFS.listStatus(nestedDir2);\n+\n+    S3AStorageStatistics statistics = authFS.getStorageStatistics();\n+    statistics.reset();\n+\n+    RemoteIterator<LocatedFileStatus> statusIterator =\n+        authFS.listFiles(dir, true);\n+\n+    while (statusIterator.hasNext()) {\n+      LocatedFileStatus locatedFileStatus = statusIterator.next();\n+      assertTrue(\"This path does not exist in original listing: \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg2OTE1OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxOToyM1rOFhJv-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxOToyM1rOFhJv-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNzA2NQ==", "bodyText": "assertJ's assert will list the array, so is needed here", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370307065", "createdAt": "2020-01-23T19:19:23Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "diffHunk": "@@ -291,6 +295,102 @@ public void testListStatusMakesEmptyDirAuth() throws Throwable {\n     assertListDoesNotUpdateAuth(dir);\n   }\n \n+  @Test\n+  public void testListFilesRecursiveWhenAllListingsAreAuthoritative()\n+      throws Exception {\n+    describe(\"listFiles does not make further calls to the fs when\"\n+        + \"all nested directory listings are authoritative\");\n+    Set<Path> files = new HashSet<>();\n+\n+    Path parentDir = dir;\n+    Path parentFile = dirFile;\n+    Path nestedDir1 = new Path(dir, \"nested1\");\n+    Path nestedFile1 = new Path(nestedDir1, \"nestedFile1\");\n+    Path nestedDir2 = new Path(nestedDir1, \"nested2/\");\n+    Path nestedFile2 = new Path(nestedDir2, \"nestedFile2\");\n+\n+    files.add(parentFile);\n+    files.add(nestedFile1);\n+    files.add(nestedFile2);\n+\n+    authFS.mkdirs(parentDir);\n+    authFS.mkdirs(nestedDir1);\n+    authFS.mkdirs(nestedDir2);\n+    touchFile(parentFile);\n+    touchFile(nestedFile1);\n+    touchFile(nestedFile2);\n+\n+    // making listStatus call to mark directories authoritative\n+    authFS.listStatus(parentDir);\n+    authFS.listStatus(nestedDir1);\n+    authFS.listStatus(nestedDir2);\n+\n+    S3AStorageStatistics statistics = authFS.getStorageStatistics();\n+    statistics.reset();\n+\n+    RemoteIterator<LocatedFileStatus> statusIterator =\n+        authFS.listFiles(dir, true);\n+\n+    while (statusIterator.hasNext()) {\n+      LocatedFileStatus locatedFileStatus = statusIterator.next();\n+      assertTrue(\"This path does not exist in original listing: \" +\n+          locatedFileStatus.getPath(),\n+          files.remove(locatedFileStatus.getPath()));\n+    }\n+    assertEquals(\"Some files were missing from authoritative listing:\"\n+        + Arrays.toString(files.toArray()), 0, files.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg3MjcwOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToyMDozMVrOFhJyEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToyMDozMVrOFhJyEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNzYwMQ==", "bodyText": "good to see you've discovered using the metrics for your asserts -use MetricDiff to make it easier", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r370307601", "createdAt": "2020-01-23T19:20:31Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java", "diffHunk": "@@ -291,6 +295,102 @@ public void testListStatusMakesEmptyDirAuth() throws Throwable {\n     assertListDoesNotUpdateAuth(dir);\n   }\n \n+  @Test\n+  public void testListFilesRecursiveWhenAllListingsAreAuthoritative()\n+      throws Exception {\n+    describe(\"listFiles does not make further calls to the fs when\"\n+        + \"all nested directory listings are authoritative\");\n+    Set<Path> files = new HashSet<>();\n+\n+    Path parentDir = dir;\n+    Path parentFile = dirFile;\n+    Path nestedDir1 = new Path(dir, \"nested1\");\n+    Path nestedFile1 = new Path(nestedDir1, \"nestedFile1\");\n+    Path nestedDir2 = new Path(nestedDir1, \"nested2/\");\n+    Path nestedFile2 = new Path(nestedDir2, \"nestedFile2\");\n+\n+    files.add(parentFile);\n+    files.add(nestedFile1);\n+    files.add(nestedFile2);\n+\n+    authFS.mkdirs(parentDir);\n+    authFS.mkdirs(nestedDir1);\n+    authFS.mkdirs(nestedDir2);\n+    touchFile(parentFile);\n+    touchFile(nestedFile1);\n+    touchFile(nestedFile2);\n+\n+    // making listStatus call to mark directories authoritative\n+    authFS.listStatus(parentDir);\n+    authFS.listStatus(nestedDir1);\n+    authFS.listStatus(nestedDir2);\n+\n+    S3AStorageStatistics statistics = authFS.getStorageStatistics();\n+    statistics.reset();\n+\n+    RemoteIterator<LocatedFileStatus> statusIterator =\n+        authFS.listFiles(dir, true);\n+\n+    while (statusIterator.hasNext()) {\n+      LocatedFileStatus locatedFileStatus = statusIterator.next();\n+      assertTrue(\"This path does not exist in original listing: \" +\n+          locatedFileStatus.getPath(),\n+          files.remove(locatedFileStatus.getPath()));\n+    }\n+    assertEquals(\"Some files were missing from authoritative listing:\"\n+        + Arrays.toString(files.toArray()), 0, files.size());\n+    assertEquals(\"There must not be any OBJECT_LIST requests\"\n+            + \"as all directory listings are authoritative.\",\n+        0, (long) statistics.getLong(OBJECT_LIST_REQUESTS.getSymbol()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b742c95ea5e5923b1d82a8b663514dce8ce5bd5"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODgzMTYwOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/OperationCallbacks.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDoxMTozNVrOFimV7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTowMjowNFrOFjEerg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDEwOA==", "bodyText": "Missing javadoc for rejectAuthoritative", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371824108", "createdAt": "2020-01-28T14:11:35Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/OperationCallbacks.java", "diffHunk": "@@ -119,7 +119,8 @@ void deleteObjectAtPath(Path path,\n       Path path,\n       S3AFileStatus status,\n       boolean collectTombstones,\n-      boolean includeSelf) throws IOException;\n+      boolean includeSelf,\n+      boolean rejectAuthoritative) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNTgxMQ==", "bodyText": "Also, I don't see any point for this interface change. Please justify.", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371825811", "createdAt": "2020-01-28T14:14:31Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/OperationCallbacks.java", "diffHunk": "@@ -119,7 +119,8 @@ void deleteObjectAtPath(Path path,\n       Path path,\n       S3AFileStatus status,\n       boolean collectTombstones,\n-      boolean includeSelf) throws IOException;\n+      boolean includeSelf,\n+      boolean rejectAuthoritative) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDEwOA=="}, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA3MDg4Mw==", "bodyText": "You are right. At first I introduced the extra parameter because I thought some tools might use the improvement in this PR and other can continue to work the same way by forcing non-authoritative. Given that only Import tool use this method and it should force non-authoritative, implementers of this method should force non-authoritative. The flag has no use.", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r372070883", "createdAt": "2020-01-28T21:35:16Z", "author": {"login": "mustafaiman"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/OperationCallbacks.java", "diffHunk": "@@ -119,7 +119,8 @@ void deleteObjectAtPath(Path path,\n       Path path,\n       S3AFileStatus status,\n       boolean collectTombstones,\n-      boolean includeSelf) throws IOException;\n+      boolean includeSelf,\n+      boolean rejectAuthoritative) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDEwOA=="}, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNzg3MA==", "bodyText": "Thanks!", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r372317870", "createdAt": "2020-01-29T11:02:04Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/OperationCallbacks.java", "diffHunk": "@@ -119,7 +119,8 @@ void deleteObjectAtPath(Path path,\n       Path path,\n       S3AFileStatus status,\n       boolean collectTombstones,\n-      boolean includeSelf) throws IOException;\n+      boolean includeSelf,\n+      boolean rejectAuthoritative) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDEwOA=="}, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODg0MDMwOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDoxMzo1NlrOFimbTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDoxMzo1NlrOFimbTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNTQ4NQ==", "bodyText": "There's a call to this method in two places, and both of these places pass true for rejectAuthoritative.\nI don't see the point of modifying OperationCallbacks interface for this - just pass true from this method instead.", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371825485", "createdAt": "2020-01-28T14:13:56Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -1444,15 +1444,17 @@ public void deleteObjectAtPath(final Path path,\n         final Path path,\n         final S3AFileStatus status,\n         final boolean collectTombstones,\n-        final boolean includeSelf) throws IOException {\n+        final boolean includeSelf,\n+        final boolean rejectAuthoritative) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODg0NTk1OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDoxNTozNVrOFime-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDoxNjoxM1rOFimgeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNjQyNg==", "bodyText": "please add a comment before this if in what it's doing - just a short summary, preferably one line.", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371826426", "createdAt": "2020-01-28T14:15:35Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -4035,6 +4057,15 @@ public LocatedFileStatus next() throws IOException {\n               new MetadataStoreListFilesIterator(metadataStore, pm,\n                   allowAuthoritative);\n           tombstones = metadataStoreListFilesIterator.listTombstones();\n+          if (!forceNonAuthoritativeMS &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNjgwOQ==", "bodyText": "also extend the javadoc with this behaviour", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371826809", "createdAt": "2020-01-28T14:16:13Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java", "diffHunk": "@@ -4035,6 +4057,15 @@ public LocatedFileStatus next() throws IOException {\n               new MetadataStoreListFilesIterator(metadataStore, pm,\n                   allowAuthoritative);\n           tombstones = metadataStoreListFilesIterator.listTombstones();\n+          if (!forceNonAuthoritativeMS &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNjQyNg=="}, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTA0NjQyOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowNTo1N1rOFiobaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowNTo1N1rOFiobaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1ODI4MQ==", "bodyText": "I would name this listFilesAndEmptyDirectoriesForceNonAuth", "url": "https://github.com/apache/hadoop/pull/1815#discussion_r371858281", "createdAt": "2020-01-28T15:05:57Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java", "diffHunk": "@@ -146,7 +146,7 @@ private long importDir() throws IOException {\n       long countOfFilesWritten = 0;\n       long countOfDirsWritten = 0;\n       RemoteIterator<S3ALocatedFileStatus> it = getFilesystem()\n-          .listFilesAndEmptyDirectories(basePath, true);\n+          .listFilesAndEmptyDirectoriesStrict(basePath, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cbddefe7513f22cb81f66441dcc1e53d08230"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3687, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}