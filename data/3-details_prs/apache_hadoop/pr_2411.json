{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MjQzMDk1", "number": 2411, "title": "HADOOP-17324. Don't relocate org.bouncycastle in shaded client jars", "bodyText": "In HADOOP-15832 we excluded org.bouncycastle from the shaded client jars but still relocate them to org.apache.hadoop.shaded. This breaks any downstream application that wants to use MiniYARNCluster from hadoop-client-minicluster since there is no way to bring its own org.bouncycastle test dependency.\nError:  Caused by: sbt.ForkMain$ForkError: java.lang.ClassNotFoundException: org.apache.hadoop.shaded.org.bouncycastle.operator.OperatorCreationException\nError:  \tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\nError:  \tat java.lang.ClassLoader.loadClass(ClassLoader.java:419)\nError:  \tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)\nError:  \tat java.lang.ClassLoader.loadClass(ClassLoader.java:352)\nError:  \tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$RMActiveServices.serviceInit(ResourceManager.java:862)\nError:  \tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\nError:  \tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.createAndInitActiveServices(ResourceManager.java:1296)\nError:  \tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.serviceInit(ResourceManager.java:339)\nError:  \tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\nError:  \tat org.apache.hadoop.yarn.server.MiniYARNCluster.initResourceManager(MiniYARNCluster.java:353)\nError:  \tat org.apache.hadoop.yarn.server.MiniYARNCluster.access$200(MiniYARNCluster.java:127)\nError:  \tat org.apache.hadoop.yarn.server.MiniYARNCluster$ResourceManagerWrapper.serviceInit(MiniYARNCluster.java:488)\nError:  \tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\nError:  \tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:109)\nError:  \tat org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:321)\nError:  \tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\nError:  \tat org.apache.spark.deploy.yarn.BaseYarnClusterSuite.beforeAll(BaseYarnClusterSuite.scala:94)\nError:  \tat org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:212)\nError:  \tat org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\nError:  \tat org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\nError:  \tat org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:61)\nError:  \tat org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:318)\nError:  \tat org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:513)\nError:  \tat sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\nError:  \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nError:  \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nError:  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nError:  \tat java.lang.Thread.run(Thread.java:748)\n\nThis fixes the issue by excluding org.bouncycastle from relocation.", "createdAt": "2020-10-23T22:23:23Z", "url": "https://github.com/apache/hadoop/pull/2411", "merged": true, "mergeCommit": {"oid": "2522bf2f9b0c720eab099fef27bd3d22460ad5d0"}, "closed": true, "closedAt": "2020-11-10T16:00:16Z", "author": {"login": "sunchao"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVeEeUgH2gAyNTA5MjQzMDk1OjY0MGI0YTBhMzQ1ZjBkYmViNzhlNDllNGY1OGU5YzcwNGQ3MjBlODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda6mE6gH2gAyNTA5MjQzMDk1OjcxNDlhYTFjMWQ1MjhjZWM3OTM3NjhmODNlNmI0ZTg0ZDc4N2Q0ODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "640b4a0a345f0dbeb78e49e4f58e9c704d720e87", "author": {"user": {"login": "sunchao", "name": "Chao Sun"}}, "url": "https://github.com/apache/hadoop/commit/640b4a0a345f0dbeb78e49e4f58e9c704d720e87", "committedDate": "2020-10-23T22:11:41Z", "message": "HADOOP-17324. Don't relocate org.bouncycastle in shaded client jars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39", "author": {"user": {"login": "sunchao", "name": "Chao Sun"}}, "url": "https://github.com/apache/hadoop/commit/8f2a4902cae57985f5ce8f241ac774ddba29fc39", "committedDate": "2020-10-26T18:20:12Z", "message": "Add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDU4ODY4", "url": "https://github.com/apache/hadoop/pull/2411#pullrequestreview-517058868", "createdAt": "2020-10-26T18:21:48Z", "commit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyMTo0OVrOHoctsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyMTo0OVrOHoctsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NTUzNg==", "bodyText": "another issue: we currently don't bundle YARN test resources like capacity-scheduler.xml in hadoop-client-minicluster so this is a temporary workaround. I'll open another JIRA for this later.", "url": "https://github.com/apache/hadoop/pull/2411#discussion_r512175536", "createdAt": "2020-10-26T18:21:49Z", "author": {"login": "sunchao"}, "path": "hadoop-client-modules/hadoop-client-integration-tests/src/test/java/org/apache/hadoop/example/ITUseMiniCluster.java", "diffHunk": "@@ -73,13 +78,22 @@ public void clusterUp() throws IOException {\n         .numDataNodes(3)\n         .build();\n     cluster.waitActive();\n+\n+    conf.set(\"yarn.scheduler.capacity.root.queues\", \"default\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5d64e7e3bca1b836d93bdbbe5b65c5df1208ac3", "author": {"user": {"login": "sunchao", "name": "Chao Sun"}}, "url": "https://github.com/apache/hadoop/commit/e5d64e7e3bca1b836d93bdbbe5b65c5df1208ac3", "committedDate": "2020-11-04T17:37:41Z", "message": "Include dependencies needed by MiniYARNCluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MjY2MjY2", "url": "https://github.com/apache/hadoop/pull/2411#pullrequestreview-526266266", "createdAt": "2020-11-09T13:41:15Z", "commit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo0MToxNVrOHvvZvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo0NTozN1rOHvvk9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMTc1OA==", "bodyText": "should go straight after line 45 - no gap", "url": "https://github.com/apache/hadoop/pull/2411#discussion_r519821758", "createdAt": "2020-11-09T13:41:15Z", "author": {"login": "steveloughran"}, "path": "hadoop-client-modules/hadoop-client-integration-tests/src/test/java/org/apache/hadoop/example/ITUseMiniCluster.java", "diffHunk": "@@ -44,6 +44,10 @@\n import org.apache.hadoop.hdfs.web.WebHdfsTestUtil;\n import org.apache.hadoop.hdfs.web.WebHdfsConstants;\n \n+import org.apache.hadoop.yarn.server.MiniYARNCluster;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMTkzNA==", "bodyText": "unused, according to checkstyle", "url": "https://github.com/apache/hadoop/pull/2411#discussion_r519821934", "createdAt": "2020-11-09T13:41:31Z", "author": {"login": "steveloughran"}, "path": "hadoop-client-modules/hadoop-client-integration-tests/src/test/java/org/apache/hadoop/example/ITUseMiniCluster.java", "diffHunk": "@@ -44,6 +44,10 @@\n import org.apache.hadoop.hdfs.web.WebHdfsTestUtil;\n import org.apache.hadoop.hdfs.web.WebHdfsConstants;\n \n+import org.apache.hadoop.yarn.server.MiniYARNCluster;\n+\n+import static org.junit.Assert.assertTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMjc4OA==", "bodyText": "we leave out all of test/resources to stop log4j files, site configs etc getting onto the classpath of apps downstream -so making it impossible for them to choose their own options", "url": "https://github.com/apache/hadoop/pull/2411#discussion_r519822788", "createdAt": "2020-11-09T13:42:54Z", "author": {"login": "steveloughran"}, "path": "hadoop-client-modules/hadoop-client-integration-tests/src/test/java/org/apache/hadoop/example/ITUseMiniCluster.java", "diffHunk": "@@ -73,13 +78,22 @@ public void clusterUp() throws IOException {\n         .numDataNodes(3)\n         .build();\n     cluster.waitActive();\n+\n+    conf.set(\"yarn.scheduler.capacity.root.queues\", \"default\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NTUzNg=="}, "originalCommit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyNDYyOQ==", "bodyText": "all services are closeable, so use IOUtil.cleanupWithLogger() & let it handle null checks and exceptions", "url": "https://github.com/apache/hadoop/pull/2411#discussion_r519824629", "createdAt": "2020-11-09T13:45:37Z", "author": {"login": "steveloughran"}, "path": "hadoop-client-modules/hadoop-client-integration-tests/src/test/java/org/apache/hadoop/example/ITUseMiniCluster.java", "diffHunk": "@@ -73,13 +78,22 @@ public void clusterUp() throws IOException {\n         .numDataNodes(3)\n         .build();\n     cluster.waitActive();\n+\n+    conf.set(\"yarn.scheduler.capacity.root.queues\", \"default\");\n+    conf.setInt(\"yarn.scheduler.capacity.root.default.capacity\", 100);\n+    yarnCluster = new MiniYARNCluster(getClass().getName(), 1, 1, 1, 1);\n+    yarnCluster.init(conf);\n+    yarnCluster.start();\n   }\n \n   @After\n   public void clusterDown() {\n     if (cluster != null) {\n       cluster.close();\n     }\n+    if (yarnCluster != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2a4902cae57985f5ce8f241ac774ddba29fc39"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7149aa1c1d528cec793768f83e6b4e84d787d489", "author": {"user": {"login": "sunchao", "name": "Chao Sun"}}, "url": "https://github.com/apache/hadoop/commit/7149aa1c1d528cec793768f83e6b4e84d787d489", "committedDate": "2020-11-09T20:15:21Z", "message": "Address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3507, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}