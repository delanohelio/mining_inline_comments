{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMDgxMjk3", "number": 1956, "title": "HADOOP-16965 Refactor abfs stream configuration.", "bodyText": "Ran all abfs tests using mvn -T 1C -Dparallel-tests=abfs clean verify with my storage account in us-east.", "createdAt": "2020-04-14T09:48:38Z", "url": "https://github.com/apache/hadoop/pull/1956", "merged": true, "mergeCommit": {"oid": "8031c66295b530dcaae9e00d4f656330bc3b3952"}, "closed": true, "closedAt": "2020-04-21T16:27:30Z", "author": {"login": "mukund-thakur"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXgUWmAH2gAyNDAzMDgxMjk3OjNlZDFlZDFmZWZmYzNmMDQxMGYzNzIwODljODlmNTg4ZDc3ODZkMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZzs3QgH2gAyNDAzMDgxMjk3OjhmYWYxOGM4YTc4YmExZGNlMGUyMDAxYzMzNjIzNTNkMGQxNGViM2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ed1ed1feffc3f0410f372089c89f588d7786d38", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/3ed1ed1feffc3f0410f372089c89f588d7786d38", "committedDate": "2020-04-14T09:45:32Z", "message": "HADOOP-16965 Rafactor abfs stream configuration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/492ca11519a9122fac2d7c33436aa008a86f980e", "committedDate": "2020-04-15T13:32:48Z", "message": " Changing to builder based contexts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NTY5NDY3", "url": "https://github.com/apache/hadoop/pull/1956#pullrequestreview-396569467", "createdAt": "2020-04-20T15:34:38Z", "commit": {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTozNDozOVrOGIakOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTozNzoyN1rOGIaszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3NzA1MA==", "bodyText": "for consistency, mark as final. I know, it's not that significant in a constructor, but it just keeps things the same.", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411477050", "createdAt": "2020-04-20T15:34:39Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -61,21 +61,19 @@\n   private boolean closed = false;\n \n   public AbfsInputStream(\n-      final AbfsClient client,\n-      final Statistics statistics,\n-      final String path,\n-      final long contentLength,\n-      final int bufferSize,\n-      final int readAheadQueueDepth,\n-      final boolean tolerateOobAppends,\n-      final String eTag) {\n+          final AbfsClient client,\n+          final Statistics statistics,\n+          final String path,\n+          final long contentLength,\n+          AbfsInputStreamContext abfsInputStreamContext,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3Nzg4NA==", "bodyText": "do we need any validators here yet, or is there enough in the code as it is?", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411477884", "createdAt": "2020-04-20T15:35:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStreamContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra output stream configs.\n+ */\n+public class AbfsOutputStreamContext extends AbfsStreamContext {\n+\n+  private int writeBufferSize;\n+\n+  private boolean enableFlush;\n+\n+  private boolean disableOutputStreamFlush;\n+\n+  public AbfsOutputStreamContext() {\n+  }\n+\n+  public AbfsOutputStreamContext withWriteBufferSize(\n+          final int writeBufferSize) {\n+    this.writeBufferSize = writeBufferSize;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext enableFlush(final boolean enableFlush) {\n+    this.enableFlush = enableFlush;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext disableOutputStreamFlush(\n+          final boolean disableOutputStreamFlush) {\n+    this.disableOutputStreamFlush = disableOutputStreamFlush;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext build() {\n+    // Validation of parameters to be done here.\n+    return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3OTI0Ng==", "bodyText": "trailing ;", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411479246", "createdAt": "2020-04-20T15:37:27Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStreamContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra input stream configs.\n+ */\n+public class AbfsInputStreamContext extends AbfsStreamContext {\n+\n+  private int readBufferSize;\n+\n+  private int readAheadQueueDepth;\n+\n+  private boolean tolerateOobAppends;\n+\n+  public AbfsInputStreamContext() {\n+  }\n+\n+  public AbfsInputStreamContext withReadBufferSize(final int readBufferSize) {\n+    this.readBufferSize = readBufferSize;\n+    return this;\n+  }\n+\n+  public AbfsInputStreamContext withReadAheadQueueDepth(\n+          final int readAheadQueueDepth) {\n+    this.readAheadQueueDepth = (readAheadQueueDepth >= 0)\n+            ? readAheadQueueDepth\n+            : Runtime.getRuntime().availableProcessors();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8faf18c8a78ba1dce0e2001c3362353d0d14eb3c", "author": {"user": {"login": "mukund-thakur", "name": "Mukund Thakur"}}, "url": "https://github.com/apache/hadoop/commit/8faf18c8a78ba1dce0e2001c3362353d0d14eb3c", "committedDate": "2020-04-21T13:28:21Z", "message": "Review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}