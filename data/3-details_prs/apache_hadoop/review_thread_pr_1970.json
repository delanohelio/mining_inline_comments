{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjQ4NzY4", "number": 1970, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxMjozN1rOD0L8rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODo1NToyM1rOD1qykQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDQ4MzAyOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxMjozN1rOGJAJWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToxNjo1NlrOGLS2tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5Mjc2Mg==", "bodyText": "account key config is already explained with an example in the above shared key section. Please cross check with the details above and if needed more comments can be added in respective place.", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r412092762", "createdAt": "2020-04-21T11:12:37Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -665,6 +665,79 @@ performance issues.\n Config `fs.azure.enable.check.access` needs to be set true to enable\n  the AzureBlobFileSystem.access().\n \n+### <a name=\"authconfigoptions\"></a> Auth Options\n+`fs.azure.account.key`: To set the account access key. Access keys can be used to authenticate the requests made from the ABFS driver to the Azure storage account.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "235fb1fd6f8fe3529368989061d4d8bb00e3ce69"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NjI2Ng==", "bodyText": "Comment holds for other configs too, please check.", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r412096266", "createdAt": "2020-04-21T11:18:29Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -665,6 +665,79 @@ performance issues.\n Config `fs.azure.enable.check.access` needs to be set true to enable\n  the AzureBlobFileSystem.access().\n \n+### <a name=\"authconfigoptions\"></a> Auth Options\n+`fs.azure.account.key`: To set the account access key. Access keys can be used to authenticate the requests made from the ABFS driver to the Azure storage account.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5Mjc2Mg=="}, "originalCommit": {"oid": "235fb1fd6f8fe3529368989061d4d8bb00e3ce69"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NjQzNg==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r414496436", "createdAt": "2020-04-24T11:16:56Z", "author": {"login": "bilaharith"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -665,6 +665,79 @@ performance issues.\n Config `fs.azure.enable.check.access` needs to be set true to enable\n  the AzureBlobFileSystem.access().\n \n+### <a name=\"authconfigoptions\"></a> Auth Options\n+`fs.azure.account.key`: To set the account access key. Access keys can be used to authenticate the requests made from the ABFS driver to the Azure storage account.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5Mjc2Mg=="}, "originalCommit": {"oid": "235fb1fd6f8fe3529368989061d4d8bb00e3ce69"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDUzMjYxOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToyNTowOFrOGJAm0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToxNzowMVrOGLS26A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDMwNQ==", "bodyText": "Maybe provide more context to the feature and then list the relevant configs.", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r412100305", "createdAt": "2020-04-21T11:25:08Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -665,6 +665,79 @@ performance issues.\n Config `fs.azure.enable.check.access` needs to be set true to enable\n  the AzureBlobFileSystem.access().\n \n+### <a name=\"authconfigoptions\"></a> Auth Options\n+`fs.azure.account.key`: To set the account access key. Access keys can be used to authenticate the requests made from the ABFS driver to the Azure storage account.\n+\n+`fs.azure.account.keyprovider`: If a key provider class is provided the same will be used to get Storage Account key. Else the Simple key provider will be used which will use the given key from the config.\n+\n+`fs.azure.shellkeyprovider.script`: ShellDecryptionKeyProvider class invokes an external script that will perform the key decryption. The script path has to be set via this config.\n+\n+`fs.azure.enable.delegation.token`: To enable delegation token manager. Instantiates the class declared in fs.azure.delegation.token.provider.type and issues tokens from the same.\n+\n+`fs.azure.delegation.token.provider.type`: In case delegation token manager is enabled the AbfsDelegationTokenManager implementation specified in this config will be used as the AbfsDelegationTokenManager implementation.\n+\n+`fs.azure.sas.token.provider.type`: If the auth type is AuthType.SAS, instantiates the class declared in fs.azure.sas.token.provider.type and issues tokens from it.\n+\n+`fs.azure.account.auth.type`: To set the auth type to be used. Possible values:   SharedKey, OAuth, Custom, SAS.\n+\n+`fs.azure.account.oauth.provider.type`: To set the auth provider class to be used.\n+\n+`fs.azure.account.oauth2.client.id`: To set the OAuth AAD client id when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.client.secret`: To set the OAuth AAD client secret when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.client.endpoint`: To set the OAuth AAD client endpoint when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.tenant`: To set OAuth MSI tenant id when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.endpoint`: To set OAuth MSI endpoint when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.authority`: To set OAuth MSI authority when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.user.name`: To set username when UserPasswordTokenProvider is used.\n+\n+`fs.azure.account.oauth2.user.password`: To set password when UserPasswordTokenProvider is used.\n+\n+`fs.azure.account.oauth2.refresh.token`: To set OAuth refreshtoken when RefreshTokenBasedTokenProvider is used.\n+\n+`fs.azure.account.oauth2.refresh.token.endpoint`: To set OAuth refresh token end point when RefreshTokenBasedTokenProvider is used.\n+\n+### <a name=\"featureconfigoptions\"></a> Feature Options", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "235fb1fd6f8fe3529368989061d4d8bb00e3ce69"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NjQ4OA==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r414496488", "createdAt": "2020-04-24T11:17:01Z", "author": {"login": "bilaharith"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -665,6 +665,79 @@ performance issues.\n Config `fs.azure.enable.check.access` needs to be set true to enable\n  the AzureBlobFileSystem.access().\n \n+### <a name=\"authconfigoptions\"></a> Auth Options\n+`fs.azure.account.key`: To set the account access key. Access keys can be used to authenticate the requests made from the ABFS driver to the Azure storage account.\n+\n+`fs.azure.account.keyprovider`: If a key provider class is provided the same will be used to get Storage Account key. Else the Simple key provider will be used which will use the given key from the config.\n+\n+`fs.azure.shellkeyprovider.script`: ShellDecryptionKeyProvider class invokes an external script that will perform the key decryption. The script path has to be set via this config.\n+\n+`fs.azure.enable.delegation.token`: To enable delegation token manager. Instantiates the class declared in fs.azure.delegation.token.provider.type and issues tokens from the same.\n+\n+`fs.azure.delegation.token.provider.type`: In case delegation token manager is enabled the AbfsDelegationTokenManager implementation specified in this config will be used as the AbfsDelegationTokenManager implementation.\n+\n+`fs.azure.sas.token.provider.type`: If the auth type is AuthType.SAS, instantiates the class declared in fs.azure.sas.token.provider.type and issues tokens from it.\n+\n+`fs.azure.account.auth.type`: To set the auth type to be used. Possible values:   SharedKey, OAuth, Custom, SAS.\n+\n+`fs.azure.account.oauth.provider.type`: To set the auth provider class to be used.\n+\n+`fs.azure.account.oauth2.client.id`: To set the OAuth AAD client id when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.client.secret`: To set the OAuth AAD client secret when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.client.endpoint`: To set the OAuth AAD client endpoint when ClientCredsTokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.tenant`: To set OAuth MSI tenant id when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.endpoint`: To set OAuth MSI endpoint when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.msi.authority`: To set OAuth MSI authority when MSITokenProvider is used.\n+\n+`fs.azure.account.oauth2.user.name`: To set username when UserPasswordTokenProvider is used.\n+\n+`fs.azure.account.oauth2.user.password`: To set password when UserPasswordTokenProvider is used.\n+\n+`fs.azure.account.oauth2.refresh.token`: To set OAuth refreshtoken when RefreshTokenBasedTokenProvider is used.\n+\n+`fs.azure.account.oauth2.refresh.token.endpoint`: To set OAuth refresh token end point when RefreshTokenBasedTokenProvider is used.\n+\n+### <a name=\"featureconfigoptions\"></a> Feature Options", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDMwNQ=="}, "originalCommit": {"oid": "235fb1fd6f8fe3529368989061d4d8bb00e3ce69"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjAyMTkzOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODo1NToyM1rOGLNmvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODo1NToyM1rOGLNmvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQxMDQzMA==", "bodyText": "indentation.", "url": "https://github.com/apache/hadoop/pull/1970#discussion_r414410430", "createdAt": "2020-04-24T08:55:23Z", "author": {"login": "snvijaya"}, "path": "hadoop-tools/hadoop-azure/src/site/markdown/abfs.md", "diffHunk": "@@ -539,6 +563,20 @@ token when its `getAccessToken()` method is invoked.\n The declared class must implement `org.apache.hadoop.fs.azurebfs.extensions.CustomTokenProviderAdaptee`\n and optionally `org.apache.hadoop.fs.azurebfs.extensions.BoundDTExtension`.\n \n+#### <a name=\"delegationtokensupportconfigoptions\"></a> Delegation token support\n+\n+Delegation token support can be achieved by making the following config true\n+ `fs.azure.enable.delegation.token` and specifying the config\n+  CustomDelegationTokenManager to be used with the config `fs.azure.delegation.token.provider.type`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0b64c7f477df19ba0710523c19f7d02b8213c5"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3525, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}