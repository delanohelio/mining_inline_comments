{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MDc5NzM4", "number": 2216, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxMTo0M1rOEbNUbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjoyMjo0N1rOEcpsbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTY1MjI4OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxMTo0M1rOHFEkHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjoyMzo1MVrOHHT6qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3OTcxMQ==", "bodyText": "Mixiing the builder with the implementation is a bit, well, cheating, isn't it? More importantly -it stops the context being immutable. Could you split into a builder and acutal context?", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r475079711", "createdAt": "2020-08-22T11:11:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra configurations for AbfsClient and further classes\n+ * inside AbfsClient.\n+ */\n+public class AbfsClientContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMxNzk2Ng==", "bodyText": "So, just to be clear.\n\nA separate builder class that would have the build method and also the with options(withAbfsCounters(), withAbfsPerfTracker(), etc), right? So, move the with options from the context class to the builder class.\nAlso, the context class would now have a parameterized constructor which I would call in the build() method to return the context instance.\nThe validations are for future usages, right? Since for options, I am adding I already have validation in the class that uses them( for eg: if(abfsCounter !=null) {} is checked in the AbfsClient class).", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r475317966", "createdAt": "2020-08-24T03:06:19Z", "author": {"login": "mehakmeet"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra configurations for AbfsClient and further classes\n+ * inside AbfsClient.\n+ */\n+public class AbfsClientContext {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3OTcxMQ=="}, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyODM5NQ==", "bodyText": "ok, don't worry about validation. What you have done is great -all that is left is to make the AbfsClientContext package private so forcing everything to go through the builder", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r477428395", "createdAt": "2020-08-26T16:23:51Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra configurations for AbfsClient and further classes\n+ * inside AbfsClient.\n+ */\n+public class AbfsClientContext {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3OTcxMQ=="}, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTY1MjkyOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxMjo0M1rOHFEkZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxMjo0M1rOHFEkZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3OTc4Mw==", "bodyText": "this (once moved to the separate builder) could be a place to validate things for not being null", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r475079783", "createdAt": "2020-08-22T11:12:43Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra configurations for AbfsClient and further classes\n+ * inside AbfsClient.\n+ */\n+public class AbfsClientContext {\n+\n+  private ExponentialRetryPolicy exponentialRetryPolicy;\n+  private AbfsPerfTracker abfsPerfTracker;\n+  private AbfsCounters abfsCounters;\n+\n+  public AbfsClientContext withExponentialRetryPolicy(\n+      final ExponentialRetryPolicy exponentialRetryPolicy) {\n+    this.exponentialRetryPolicy = exponentialRetryPolicy;\n+    return this;\n+  }\n+\n+  public AbfsClientContext withAbfsPerfTracker(\n+      final AbfsPerfTracker abfsPerfTracker) {\n+    this.abfsPerfTracker = abfsPerfTracker;\n+    return this;\n+  }\n+\n+  public AbfsClientContext withAbfsCounters(final AbfsCounters abfsCounters) {\n+    this.abfsCounters = abfsCounters;\n+    return this;\n+  }\n+\n+  /**\n+   * Build the context and get the instance with the properties selected.\n+   *\n+   * @return an instance of AbfsClientContext.\n+   */\n+  public AbfsClientContext build() {\n+    return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTY1NDU0OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxNToxNlrOHFElMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxNToxNlrOHFElMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3OTk4NA==", "bodyText": "I was going to suggest making this a generai RetryPolicy rather than the explicit exponential one -but I see this isn't the normal hadoop-common retry policy, just one unique to abfs. So moot. If we find that retry policy is too inflexible, then it would be time to revisit that decision.", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r475079984", "createdAt": "2020-08-22T11:15:16Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra configurations for AbfsClient and further classes\n+ * inside AbfsClient.\n+ */\n+public class AbfsClientContext {\n+\n+  private ExponentialRetryPolicy exponentialRetryPolicy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTY1NTU5OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxNzowN1rOHFElsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMToxNzowN1rOHFElsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4MDExMg==", "bodyText": "let's add some javadocs. In particularly highlighting this is is a one-off operation", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r475080112", "createdAt": "2020-08-22T11:17:07Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java", "diffHunk": "@@ -1214,7 +1217,7 @@ public boolean isAtomicRenameKey(String key) {\n   }\n \n   private void initializeClient(URI uri, String fileSystemName,\n-      String accountName, boolean isSecure, AbfsCounters abfsCounters)\n+      String accountName, boolean isSecure)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bafb6af593683476bbfdfdabf503caa5d35838e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDc4NzAxOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjoyMjo0N1rOHHT36A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjoyMjo0N1rOHHT36A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNzY4OA==", "bodyText": "you can make this package private now, as nobody should be creating directly", "url": "https://github.com/apache/hadoop/pull/2216#discussion_r477427688", "createdAt": "2020-08-26T16:22:47Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsClientContext.java", "diffHunk": "@@ -24,34 +24,17 @@\n  */\n public class AbfsClientContext {\n \n-  private ExponentialRetryPolicy exponentialRetryPolicy;\n-  private AbfsPerfTracker abfsPerfTracker;\n-  private AbfsCounters abfsCounters;\n-\n-  public AbfsClientContext withExponentialRetryPolicy(\n-      final ExponentialRetryPolicy exponentialRetryPolicy) {\n+  private final ExponentialRetryPolicy exponentialRetryPolicy;\n+  private final AbfsPerfTracker abfsPerfTracker;\n+  private final AbfsCounters abfsCounters;\n+\n+  public AbfsClientContext(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f9ceebb40c63fb98fd988a9c3263bdc45b0863"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3379, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}