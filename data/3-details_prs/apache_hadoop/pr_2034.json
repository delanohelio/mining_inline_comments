{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDg3MzU1", "number": 2034, "title": "HADOOP-17053. ABFS: Fix Account-specific OAuth config setting parsing", "bodyText": "When AuthType and Auth token provider configs are set for both generic (account-agnostic) and account-specific config, as below:\n// account agnostic\nfs.azure.account.auth.type=CUSTOM\nfs.azure.account.oauth.provider.type=ClassExtendingCustomTokenProviderAdapter\n// account specific\nfs.azure.account.auth.type.account_name=OAuth\nfs.azure.account.oauth.provider.type.account_name=ClassExtendingAccessTokenProvider\nEffective token provider for 'account_name' is expected to be ClassExtendingAccessTokenProvider.\nBut currently, when the token provider class is being read from the config, account-agnostic config setting is read first in the assumption that it can serve as default if account-specific config setting is absent.\nThis logic leads to failure such as in above case where AuthType for account-specific and AuthType for account-agnostic are different. This is because the Interface implementing the token provider is different for various Auth Types (For Custom AuthType it is CustomTokenProviderAdapter and for OAuth it is AccessTokenProvider). This leads to a Runtime exception when trying to create the oAuth access token provider.\nIn this PR, getTokenProvider() is fixed to check for account-specific token provider configuration first. In its absence, account-agnostic token provider configuration is read only if account-specific and account-agnostic AuthType setting is same (otherwise expected token provider interface is different). The same logic applies while determining SAS Token provider too, hence that has been updated as well.\nTesting is done with combinations of Custom and OAuth settings in account-specific and account-agnostic configs and determining which is in effect. Tested getSASTokenProvider which uses the same logic to find the effective token provider with SAS set for both account-specific and account-agnostic configs.", "createdAt": "2020-05-26T22:01:57Z", "url": "https://github.com/apache/hadoop/pull/2034", "merged": true, "mergeCommit": {"oid": "4c5cd751e3911e350c7437dcb28c0ed67735f635"}, "closed": true, "closedAt": "2020-05-27T20:56:10Z", "author": {"login": "snvijaya"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclK047AH2gAyNDIzNDg3MzU1OjQ0ZjdkMmYzY2JlMDVlMDkyYzc1YTY4ZjYzMTkyMmU4ODA4ZDBmZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclfraGgFqTQxOTYwMTM3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44f7d2f3cbe05e092c75a68f631922e8808d0ffe", "author": {"user": {"login": "snvijaya", "name": "Sneha Vijayarajan"}}, "url": "https://github.com/apache/hadoop/commit/44f7d2f3cbe05e092c75a68f631922e8808d0ffe", "committedDate": "2020-05-26T20:38:06Z", "message": "Fix getTokenProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1d294abfb259a4d8b4f8eb238d5e7429479c5fe", "author": {"user": {"login": "snvijaya", "name": "Sneha Vijayarajan"}}, "url": "https://github.com/apache/hadoop/commit/f1d294abfb259a4d8b4f8eb238d5e7429479c5fe", "committedDate": "2020-05-26T21:59:46Z", "message": "Minor formatting fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a", "author": {"user": {"login": "snvijaya", "name": "Sneha Vijayarajan"}}, "url": "https://github.com/apache/hadoop/commit/4775b8965bf90a10412310ef90b99c7afdf8ab0a", "committedDate": "2020-05-27T05:38:12Z", "message": "findbugs NPE fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDM5MzUy", "url": "https://github.com/apache/hadoop/pull/2034#pullrequestreview-419039352", "createdAt": "2020-05-27T09:58:25Z", "commit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1ODoyNlrOGbCKoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1ODoyNlrOGbCKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMDIyNA==", "bodyText": "nit: I could see it from the javadocs, still naming it something like authTypeForAccount could improve readability", "url": "https://github.com/apache/hadoop/pull/2034#discussion_r431000224", "createdAt": "2020-05-27T09:58:26Z", "author": {"login": "bilaharith"}, "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AbfsConfiguration.java", "diffHunk": "@@ -325,31 +325,91 @@ public String getPasswordString(String key) throws IOException {\n   }\n \n   /**\n-   * Returns the account-specific Class if it exists, then looks for an\n-   * account-agnostic value, and finally tries the default value.\n+   * Returns account-specific token provider class if it exists, else checks if\n+   * an account-agnostic setting is present for token provider class if AuthType\n+   * matches with authType passed.\n+   * @param authType AuthType effective on the account\n    * @param name Account-agnostic configuration key\n    * @param defaultValue Class returned if none is configured\n    * @param xface Interface shared by all possible values\n+   * @param <U> Interface class type\n    * @return Highest-precedence Class object that was found\n    */\n-  public <U> Class<? extends U> getClass(String name, Class<? extends U> defaultValue, Class<U> xface) {\n+  public <U> Class<? extends U> getTokenProviderClass(AuthType authType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDQxMzcx", "url": "https://github.com/apache/hadoop/pull/2034#pullrequestreview-419041371", "createdAt": "2020-05-27T10:01:12Z", "commit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowMToxMlrOGbCQgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowMToxMlrOGbCQgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMTcyOQ==", "bodyText": "Nit: This new line can be removed", "url": "https://github.com/apache/hadoop/pull/2034#discussion_r431001729", "createdAt": "2020-05-27T10:01:12Z", "author": {"login": "bilaharith"}, "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/TestAccountConfiguration.java", "diffHunk": "@@ -20,13 +20,25 @@\n \n import java.io.IOException;\n \n+import org.assertj.core.api.Assertions;\n+import org.junit.Test;\n+\n import org.apache.hadoop.conf.Configuration;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDQ2MDMy", "url": "https://github.com/apache/hadoop/pull/2034#pullrequestreview-419046032", "createdAt": "2020-05-27T10:07:42Z", "commit": {"oid": "4775b8965bf90a10412310ef90b99c7afdf8ab0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75557967c37afc1567fe4e4c5b01791cdde77c01", "author": {"user": {"login": "snvijaya", "name": "Sneha Vijayarajan"}}, "url": "https://github.com/apache/hadoop/commit/75557967c37afc1567fe4e4c5b01791cdde77c01", "committedDate": "2020-05-27T10:14:53Z", "message": "Addressing review comment to extra newline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjAxMzcy", "url": "https://github.com/apache/hadoop/pull/2034#pullrequestreview-419601372", "createdAt": "2020-05-27T20:55:45Z", "commit": {"oid": "75557967c37afc1567fe4e4c5b01791cdde77c01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}