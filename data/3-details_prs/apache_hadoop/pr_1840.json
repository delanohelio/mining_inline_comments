{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODA0NzQw", "number": 1840, "title": "HADOOP-16853. ITestS3GuardOutOfBandOperations failing on versioned S3 buckets", "bodyText": "Tested s3 ireland with/without change.detection.source = versionid", "createdAt": "2020-02-11T18:08:10Z", "url": "https://github.com/apache/hadoop/pull/1840", "merged": true, "mergeCommit": {"oid": "929004074fe99e39922c52517ac743deac537d00"}, "closed": true, "closedAt": "2020-02-24T18:45:35Z", "author": {"login": "steveloughran"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDVuFiAH2gAyMzczODA0NzQwOjcxYjUyN2ZiNjViODQyODQ4YTBkYWE5ODAyOGIxMDBkOGY2N2EzNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHguwVgH2gAyMzczODA0NzQwOmI2ZmI1NmU2ZjIzMWRjMDAyNGM0MTYxZTU4OTc4ZGEwZDMzNzE2MzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368", "author": {"user": {"login": "steveloughran", "name": "Steve Loughran"}}, "url": "https://github.com/apache/hadoop/commit/71b527fb65b842848a0daa98028b100d8f67a368", "committedDate": "2020-02-11T18:06:12Z", "message": "HADOOP-16853. ITestS3GuardOutOfBandOperations failing on versioned S3 buckets.\n\nchooses a different assertion path based on store type/version ID.\n\nChange-Id: I08a4fed7268676e93ae3d9412f8f7b1edfbbe5a7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjIxNTY3", "url": "https://github.com/apache/hadoop/pull/1840#pullrequestreview-357221567", "createdAt": "2020-02-12T06:53:22Z", "commit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo1MzoyM1rOFojYjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo1MzoyM1rOFojYjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NzA4Nw==", "bodyText": "bytes = readOpenFileAPI(rawFS, testFilePath, length, null); should still fail right? Do you think we can also that in this if clause?", "url": "https://github.com/apache/hadoop/pull/1840#discussion_r378067087", "createdAt": "2020-02-12T06:53:23Z", "author": {"login": "liuml07"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3GuardOutOfBandOperations.java", "diffHunk": "@@ -969,16 +970,42 @@ private void deleteFileInListing()\n       deleteFile(rawFS, testFilePath);\n \n       // File status will be still readable from s3guard\n-      FileStatus status = guardedFs.getFileStatus(testFilePath);\n+      S3AFileStatus status = (S3AFileStatus)\n+          guardedFs.getFileStatus(testFilePath);\n       LOG.info(\"authoritative: {} status: {}\", allowAuthoritative, status);\n-      expectExceptionWhenReading(testFilePath, text);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, null);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, status);\n+      if (isVersionedChangeDetection() && status.getVersionId() != null) {\n+        // when the status entry has a version ID, then that may be used\n+        // when opening the file on what is clearly a versioned store.\n+        int length = text.length();\n+        byte[] bytes = readOpenFileAPI(guardedFs, testFilePath, length, null);\n+        Assertions.assertThat(toChar(bytes))\n+            .describedAs(\"openFile(%s)\", testFilePath)\n+            .isEqualTo(text);\n+        // reading the rawFS with status will also work.\n+        bytes = readOpenFileAPI(rawFS, testFilePath, length, status);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDE2MTc2", "url": "https://github.com/apache/hadoop/pull/1840#pullrequestreview-357416176", "createdAt": "2020-02-12T12:34:48Z", "commit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjozNDo0OVrOFos6cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo0MTo1NFrOFotG0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyMzIxNw==", "bodyText": "bytes = readOpenFileAPI(rawFS, testFilePath, length, null); won't fail (tested). Why should it fail? TheFileStatus is just an additional parameter for theFutureDataInputStreamBuilder.", "url": "https://github.com/apache/hadoop/pull/1840#discussion_r378223217", "createdAt": "2020-02-12T12:34:49Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3GuardOutOfBandOperations.java", "diffHunk": "@@ -969,16 +970,42 @@ private void deleteFileInListing()\n       deleteFile(rawFS, testFilePath);\n \n       // File status will be still readable from s3guard\n-      FileStatus status = guardedFs.getFileStatus(testFilePath);\n+      S3AFileStatus status = (S3AFileStatus)\n+          guardedFs.getFileStatus(testFilePath);\n       LOG.info(\"authoritative: {} status: {}\", allowAuthoritative, status);\n-      expectExceptionWhenReading(testFilePath, text);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, null);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, status);\n+      if (isVersionedChangeDetection() && status.getVersionId() != null) {\n+        // when the status entry has a version ID, then that may be used\n+        // when opening the file on what is clearly a versioned store.\n+        int length = text.length();\n+        byte[] bytes = readOpenFileAPI(guardedFs, testFilePath, length, null);\n+        Assertions.assertThat(toChar(bytes))\n+            .describedAs(\"openFile(%s)\", testFilePath)\n+            .isEqualTo(text);\n+        // reading the rawFS with status will also work.\n+        bytes = readOpenFileAPI(rawFS, testFilePath, length, status);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NzA4Nw=="}, "originalCommit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNjM4NA==", "bodyText": "I would rather add this to the test as a new private method.", "url": "https://github.com/apache/hadoop/pull/1840#discussion_r378226384", "createdAt": "2020-02-12T12:41:54Z", "author": {"login": "bgaborg"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3GuardOutOfBandOperations.java", "diffHunk": "@@ -969,16 +970,42 @@ private void deleteFileInListing()\n       deleteFile(rawFS, testFilePath);\n \n       // File status will be still readable from s3guard\n-      FileStatus status = guardedFs.getFileStatus(testFilePath);\n+      S3AFileStatus status = (S3AFileStatus)\n+          guardedFs.getFileStatus(testFilePath);\n       LOG.info(\"authoritative: {} status: {}\", allowAuthoritative, status);\n-      expectExceptionWhenReading(testFilePath, text);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, null);\n-      expectExceptionWhenReadingOpenFileAPI(testFilePath, text, status);\n+      if (isVersionedChangeDetection() && status.getVersionId() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b527fb65b842848a0daa98028b100d8f67a368"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d2e4500f9ae5d42444eabcdc4341314e045ce2e", "author": {"user": {"login": "steveloughran", "name": "Steve Loughran"}}, "url": "https://github.com/apache/hadoop/commit/3d2e4500f9ae5d42444eabcdc4341314e045ce2e", "committedDate": "2020-02-18T17:30:03Z", "message": "HADOOP-16853. assert that the rawFS doesn't open without the status\n\nChange-Id: If9f1a76716785e0a8a821541ca9b2bb65bb0d74d"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTgwODIy", "url": "https://github.com/apache/hadoop/pull/1840#pullrequestreview-360580822", "createdAt": "2020-02-18T18:42:45Z", "commit": {"oid": "3d2e4500f9ae5d42444eabcdc4341314e045ce2e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODo0Mjo0NlrOFrN_Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODo0Mjo0NlrOFrN_Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg2MjI3MQ==", "bodyText": "nit: the , here goes to the end of last line... :)", "url": "https://github.com/apache/hadoop/pull/1840#discussion_r380862271", "createdAt": "2020-02-18T18:42:46Z", "author": {"login": "liuml07"}, "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3GuardOutOfBandOperations.java", "diffHunk": "@@ -1032,8 +1034,26 @@ private void expectExceptionWhenReading(Path testFilePath, String text)\n   private void expectExceptionWhenReadingOpenFileAPI(\n       Path testFilePath, String text, FileStatus status)\n       throws Exception {\n+    expectExceptionWhenReadingOpenFileAPI(guardedFs,\n+        testFilePath, text, status);\n+  }\n+\n+  /**\n+   * We expect the read to fail with an FNFE: open will be happy.\n+   * @param fs filesystem\n+   * @param testFilePath path of the test file\n+   * @param text the context in the file.\n+   * @param status optional status for the withFileStatus operation.\n+   * @throws Exception failure other than the FNFE\n+   */\n+  private void expectExceptionWhenReadingOpenFileAPI(\n+      final S3AFileSystem fs,\n+      final Path testFilePath\n+      , final String text,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d2e4500f9ae5d42444eabcdc4341314e045ce2e"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTgxNTY5", "url": "https://github.com/apache/hadoop/pull/1840#pullrequestreview-360581569", "createdAt": "2020-02-18T18:43:52Z", "commit": {"oid": "3d2e4500f9ae5d42444eabcdc4341314e045ce2e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6fb56e6f231dc0024c4161e58978da0d3371631", "author": {"user": {"login": "steveloughran", "name": "Steve Loughran"}}, "url": "https://github.com/apache/hadoop/commit/b6fb56e6f231dc0024c4161e58978da0d3371631", "committedDate": "2020-02-24T17:11:35Z", "message": "HADOOP-16853\n\ntestListingInDelete to take deleteFileinListing() in line.\n\nI did that by moving the test method down, as that was the smallest change\n\nChange-Id: I8f112de3bcd03e069291bc81e3e5429452485326"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4732, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}