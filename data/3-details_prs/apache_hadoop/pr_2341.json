{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNTk0MzUz", "number": 2341, "title": "HADOOP-17287. Support new Instance by non default constructor by ReflectionUtils", "bodyText": "https://issues.apache.org/jira/browse/HADOOP-17287\nThis PR provide possibility to new instance by non default constructor through ReflectionUtils", "createdAt": "2020-09-26T15:58:46Z", "url": "https://github.com/apache/hadoop/pull/2341", "merged": true, "mergeCommit": {"oid": "d68d2a5c1ed53bcab546f6f870cf2084d22ca498"}, "closed": true, "closedAt": "2020-09-30T21:22:55Z", "author": {"login": "maobaolong"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMshS5gH2gAyNDkzNTk0MzUzOmM4OTJhNjQwMmUyNTI1NThlYjkwMjNiNDUyNGYzYmE1ODY0ZWQxNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN_WfRAFqTQ5OTYwOTIzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/hadoop/commit/c892a6402e252558eb9023b4524f3ba5864ed179", "committedDate": "2020-09-26T15:56:31Z", "message": "HADOOP-17287. Support new Instance by non default constructor by ReflectionUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDE5NTk1", "url": "https://github.com/apache/hadoop/pull/2341#pullrequestreview-497019595", "createdAt": "2020-09-26T17:30:10Z", "commit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzozMDoxMFrOHYhlAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzozMTo0OVrOHYhliQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODAxNw==", "bodyText": "nit: argsType -> argTypes", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478017", "createdAt": "2020-09-26T17:30:10Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argsType, Object ... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODE1Mw==", "bodyText": "Could you add a test in TestReflectionUtils?", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478153", "createdAt": "2020-09-26T17:31:49Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec16bc59787aa5453dae9d0944bdc43373b2867d", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/hadoop/commit/ec16bc59787aa5453dae9d0944bdc43373b2867d", "committedDate": "2020-09-27T02:23:15Z", "message": "Add a test for non default constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac1010a0eabac3426d6ed9d59327ecbf1f6411ed", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/hadoop/commit/ac1010a0eabac3426d6ed9d59327ecbf1f6411ed", "committedDate": "2020-09-27T02:26:57Z", "message": "Address comment, fix nit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/hadoop/commit/bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "committedDate": "2020-09-27T02:28:18Z", "message": "Update ReflectionUtils.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzIwMDcz", "url": "https://github.com/apache/hadoop/pull/2341#pullrequestreview-497720073", "createdAt": "2020-09-28T16:53:32Z", "commit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MzozMlrOHZHSkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NDowN1rOHZHTyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTg4OA==", "bodyText": "One more thing we can do here is perhaps checking whether argTypes.length == values.length, and throw IllegalArgumentException like: \"1 parameters are required but 0 arguments are provided\". This will be more informative than the default exception message.", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496095888", "createdAt": "2020-09-28T16:53:32Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argTypes the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argTypes, Object ... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NjIwMg==", "bodyText": "I think Assert is not imported and compilation will fail. Also can we test the cases when number of parameter and argument doesn't match?", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496096202", "createdAt": "2020-09-28T16:54:07Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestReflectionUtils.java", "diffHunk": "@@ -168,6 +168,13 @@ public void testLogThreadInfo() throws Exception {\n         containsString(\"Process Thread Dump: \" + title));\n   }\n \n+  @Test\n+  public void testNewInstanceForNonDefaultConstructor() {\n+    Object x = ReflectionUtils.newInstance(\n+        NoDefaultCtor.class, null, new Class[] {int.class}, 1);\n+    Assert.assertTrue(x instanceof NoDefaultCtor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f96ecf781c73dd71b9b52db5b7cf443cb2d2e78e", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/hadoop/commit/f96ecf781c73dd71b9b52db5b7cf443cb2d2e78e", "committedDate": "2020-09-30T05:18:37Z", "message": "add argument length check, add a new test case."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjA5MjM1", "url": "https://github.com/apache/hadoop/pull/2341#pullrequestreview-499609235", "createdAt": "2020-09-30T16:26:50Z", "commit": {"oid": "f96ecf781c73dd71b9b52db5b7cf443cb2d2e78e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3702, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}