{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzIwOTEy", "number": 2133, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxOToyOTo1N1rOEUaVSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzowNjowMFrOEXnj1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODM4NDA5OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxOToyOTo1N1rOG6nUEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDo1Njo0N1rOG6pSQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExNDcwNQ==", "bodyText": "this wil be the HDFS minicluster, right?", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464114705", "createdAt": "2020-08-02T19:29:57Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test\n+  public void testPreserveStatusWithAtomicCommit() throws IOException {\n+    TaskAttemptContext taskAttemptContext = getTaskAttemptContext(config);\n+    JobContext jobContext = new JobContextImpl(taskAttemptContext.getConfiguration(),\n+                            taskAttemptContext.getTaskAttemptID().getJobID());\n+    Configuration conf = jobContext.getConfiguration();\n+    String sourceBase;\n+    String workBase;\n+    String targetBase;\n+    FileSystem fs = null;\n+    try {\n+      OutputCommitter committer = new CopyCommitter(null, taskAttemptContext);\n+      fs = FileSystem.get(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NzAwOA==", "bodyText": "Yeah, we have registered a HDFS minicluster.", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464147008", "createdAt": "2020-08-03T00:56:47Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test\n+  public void testPreserveStatusWithAtomicCommit() throws IOException {\n+    TaskAttemptContext taskAttemptContext = getTaskAttemptContext(config);\n+    JobContext jobContext = new JobContextImpl(taskAttemptContext.getConfiguration(),\n+                            taskAttemptContext.getTaskAttemptID().getJobID());\n+    Configuration conf = jobContext.getConfiguration();\n+    String sourceBase;\n+    String workBase;\n+    String targetBase;\n+    FileSystem fs = null;\n+    try {\n+      OutputCommitter committer = new CopyCommitter(null, taskAttemptContext);\n+      fs = FileSystem.get(conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExNDcwNQ=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTYwMDY1OnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTowODo1MFrOG6x7Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo0MzowMVrOG64AdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4ODU5NQ==", "bodyText": "Why we changed the path here ?? Assuming this test is for non-atomic, values of CONF_LABEL_TARGET_FINAL_PATH and CONF_LABEL_TARGET_WORK_PATH will be same.", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464288595", "createdAt": "2020-08-03T09:08:50Z", "author": {"login": "mukund-thakur"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());\n       listing.buildListing(listingFile, context);\n \n-      conf.set(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH, targetBase);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMyOTUyNQ==", "bodyText": "This test case is not the case of Atomic Copy or non Atomic Copy. You are right about that, the value of final Path & work path would be same in case of non atomic copy . But as you see above we are setting the environment for testing the preserve status functionality & not doing a copy. It solely depends on the configuration value of the final Path & not the work path. This is the bug I raised & fixed the test case pertaining to this along with it.", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464329525", "createdAt": "2020-08-03T10:29:44Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());\n       listing.buildListing(listingFile, context);\n \n-      conf.set(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH, targetBase);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4ODU5NQ=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4Njg4OQ==", "bodyText": "Thanks got it. Code was wrong as well as the testcase was wrong. Thanks for fixing.", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464386889", "createdAt": "2020-08-03T12:40:25Z", "author": {"login": "mukund-thakur"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());\n       listing.buildListing(listingFile, context);\n \n-      conf.set(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH, targetBase);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4ODU5NQ=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4ODIxMw==", "bodyText": "@mukund-thakur  Can this code be merged? Or is there anything I have to do from my end.", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r464388213", "createdAt": "2020-08-03T12:43:01Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());\n       listing.buildListing(listingFile, context);\n \n-      conf.set(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH, targetBase);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4ODU5NQ=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzU2NDMwOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoxODozNlrOG-QjUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjozNzozOVrOG-WlyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNjA4Mg==", "bodyText": "add newline", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r467936082", "createdAt": "2020-08-10T14:18:36Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzNTAxNg==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r468035016", "createdAt": "2020-08-10T16:37:39Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNjA4Mg=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzU2NzgwOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoxOTozMlrOG-Qljg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjozNjoyMFrOG-WilA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNjY1NA==", "bodyText": "do the same on lines 168 and 206", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r467936654", "createdAt": "2020-08-10T14:19:32Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzNDE5Ng==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r468034196", "createdAt": "2020-08-10T16:36:20Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -160,10 +160,10 @@ public void testPreserveStatus() throws IOException {\n       context.setTargetPathExists(false);\n \n       CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n-      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      Path listingFile = new Path(\"/tmp1/\" + rand.nextLong());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNjY1NA=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzU3OTYxOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoyMjowOFrOG-QslA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjozOToxOFrOG-Wprw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzODQ1Mg==", "bodyText": "you can do a static import for these constants if it keeps the code cleaner", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r467938452", "createdAt": "2020-08-10T14:22:08Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test\n+  public void testPreserveStatusWithAtomicCommit() throws IOException {\n+    TaskAttemptContext taskAttemptContext = getTaskAttemptContext(config);\n+    JobContext jobContext = new JobContextImpl(taskAttemptContext.getConfiguration(),\n+                            taskAttemptContext.getTaskAttemptID().getJobID());\n+    Configuration conf = jobContext.getConfiguration();\n+    String sourceBase;\n+    String workBase;\n+    String targetBase;\n+    FileSystem fs = null;\n+    try {\n+      OutputCommitter committer = new CopyCommitter(null, taskAttemptContext);\n+      fs = FileSystem.get(conf);\n+      FsPermission sourcePerm = new FsPermission((short) 511);\n+      FsPermission initialPerm = new FsPermission((short) 448);\n+      sourceBase = TestDistCpUtils.createTestSetup(fs, sourcePerm);\n+      workBase = TestDistCpUtils.createTestSetup(fs, initialPerm);\n+      targetBase = \"/tmp1/\" + String.valueOf(rand.nextLong());\n+      final DistCpOptions options = new DistCpOptions.Builder(\n+              Collections.singletonList(new Path(sourceBase)), new Path(\"/out\"))\n+              .preserve(FileAttribute.PERMISSION).build();\n+      options.appendToConf(conf);\n+      final DistCpContext context = new DistCpContext(options);\n+      context.setTargetPathExists(false);\n+      CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n+      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      listing.buildListing(listingFile, context);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzNjAxNQ==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r468036015", "createdAt": "2020-08-10T16:39:18Z", "author": {"login": "swamirishi"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -177,6 +177,44 @@ public void testPreserveStatus() throws IOException {\n       conf.unset(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     }\n \n+  }\n+  @Test\n+  public void testPreserveStatusWithAtomicCommit() throws IOException {\n+    TaskAttemptContext taskAttemptContext = getTaskAttemptContext(config);\n+    JobContext jobContext = new JobContextImpl(taskAttemptContext.getConfiguration(),\n+                            taskAttemptContext.getTaskAttemptID().getJobID());\n+    Configuration conf = jobContext.getConfiguration();\n+    String sourceBase;\n+    String workBase;\n+    String targetBase;\n+    FileSystem fs = null;\n+    try {\n+      OutputCommitter committer = new CopyCommitter(null, taskAttemptContext);\n+      fs = FileSystem.get(conf);\n+      FsPermission sourcePerm = new FsPermission((short) 511);\n+      FsPermission initialPerm = new FsPermission((short) 448);\n+      sourceBase = TestDistCpUtils.createTestSetup(fs, sourcePerm);\n+      workBase = TestDistCpUtils.createTestSetup(fs, initialPerm);\n+      targetBase = \"/tmp1/\" + String.valueOf(rand.nextLong());\n+      final DistCpOptions options = new DistCpOptions.Builder(\n+              Collections.singletonList(new Path(sourceBase)), new Path(\"/out\"))\n+              .preserve(FileAttribute.PERMISSION).build();\n+      options.appendToConf(conf);\n+      final DistCpContext context = new DistCpContext(options);\n+      context.setTargetPathExists(false);\n+      CopyListing listing = new GlobbedCopyListing(conf, CREDENTIALS);\n+      Path listingFile = new Path(\"/tmp1/\" + String.valueOf(rand.nextLong()));\n+      listing.buildListing(listingFile, context);\n+      conf.set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH, targetBase);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzODQ1Mg=="}, "originalCommit": {"oid": "10d0fab726c80e32287c2b9018247a2469d73154"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjAwODUyOnYy", "diffSide": "RIGHT", "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzowNjowMFrOG_gZBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzowNjowMFrOG_gZBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NDE2Nw==", "bodyText": "nit: restore the line ending", "url": "https://github.com/apache/hadoop/pull/2133#discussion_r469244167", "createdAt": "2020-08-12T13:06:00Z", "author": {"login": "steveloughran"}, "path": "hadoop-tools/hadoop-distcp/src/test/java/org/apache/hadoop/tools/mapred/TestCopyCommitter.java", "diffHunk": "@@ -650,4 +653,4 @@ public RecordReader createRecordReader(InputSplit split,\n       return null;\n     }\n   }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166ec387af72ca70b612154d1fc1e47a65647cad"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3492, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}