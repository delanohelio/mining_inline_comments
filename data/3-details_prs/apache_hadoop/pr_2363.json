{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTU2NzIx", "number": 2363, "title": "HDFS-13293. RBF: The RouterRPCServer should transfer client IP via CallerContext to NamenodeRpcServer", "bodyText": "\u2026d client ip to NamenodeRpcServer\nNOTICE\nPlease create an issue in ASF JIRA before opening a pull request,\nand you need to set the title of the pull request which starts with\nthe corresponding JIRA issue number. (e.g. HADOOP-XXXXX. Fix a typo in YYY.)\nFor more details, please see https://cwiki.apache.org/confluence/display/HADOOP/How+To+Contribute", "createdAt": "2020-10-06T13:42:37Z", "url": "https://github.com/apache/hadoop/pull/2363", "merged": true, "mergeCommit": {"oid": "518a212cfffdfb7baabd16e2b69db292fdd15dbc"}, "closed": true, "closedAt": "2020-10-09T08:12:23Z", "author": {"login": "ferhui"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP4kk2AH2gAyNDk4NTU2NzIxOmRmNWYzYjVhZWM0OGI2ZjFmZTFlYjBiNDYwZGQ4ZWIwZGNmYjlkZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQjN6lAFqTUwNDg5OTU1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df5f3b5aec48b6f1fe1eb0b460dd8eb0dcfb9deb", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/df5f3b5aec48b6f1fe1eb0b460dd8eb0dcfb9deb", "committedDate": "2020-10-06T13:40:44Z", "message": "HDFS-13293. RBF: The RouterRPCServer should transfer CallerContext and client ip to NamenodeRpcServer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/98e97d8608614d931224450a11bb2b9d9119f16a", "committedDate": "2020-10-06T15:43:46Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ0NTU4", "url": "https://github.com/apache/hadoop/pull/2363#pullrequestreview-503144558", "createdAt": "2020-10-06T16:22:33Z", "commit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyMjozM1rOHdP5vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjo0MlrOHdQEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMTI5NQ==", "bodyText": "Extract the builder.build()", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r500431295", "createdAt": "2020-10-06T16:22:33Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcClient.java", "diffHunk": "@@ -519,6 +525,21 @@ private Object invokeMethod(\n     }\n   }\n \n+  /**\n+   * For Tracking which is the actual client address.\n+   * It adds key/value (clientIp/\"ip\") pair to the caller context.\n+   */\n+  private void appendClientIp2CallerContext() {\n+    final CallerContext ctx = CallerContext.getCurrent();\n+    CallerContext.Builder builder;\n+    String origContext = ctx == null ? null : ctx.getContext();\n+    byte[] origSignature = ctx == null ? null : ctx.getSignature();\n+    builder = new CallerContext.Builder(origContext, clientConf);\n+    builder.append(CLIENT_IP_STR, Server.getRemoteAddress());\n+    builder.setSignature(origSignature);\n+    CallerContext.setCurrent(builder.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMjQwMg==", "bodyText": "Do this in the moment you create it in line 537.", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r500432402", "createdAt": "2020-10-06T16:24:12Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcClient.java", "diffHunk": "@@ -519,6 +525,21 @@ private Object invokeMethod(\n     }\n   }\n \n+  /**\n+   * For Tracking which is the actual client address.\n+   * It adds key/value (clientIp/\"ip\") pair to the caller context.\n+   */\n+  private void appendClientIp2CallerContext() {\n+    final CallerContext ctx = CallerContext.getCurrent();\n+    CallerContext.Builder builder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMjkxOA==", "bodyText": "Can we verify we still contain the old context we had?", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r500432918", "createdAt": "2020-10-06T16:25:00Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterRpc.java", "diffHunk": "@@ -1901,4 +1903,19 @@ private DFSClient getFileDFSClient(final String path) {\n     }\n     return null;\n   }\n+\n+  @Test\n+  public void testCreateWithCallerContext() throws IOException {\n+    GenericTestUtils.LogCapturer auditlog =\n+        GenericTestUtils.LogCapturer.captureLogs(FSNamesystem.auditLog);\n+\n+    // Create a directory via the router\n+    String dirPath = \"/test_dir_with_callercontext\";\n+    FsPermission permission = new FsPermission(\"705\");\n+    routerProtocol.mkdirs(dirPath, permission, false);\n+\n+    // The audit log should contains \"callerContext=clientIp:\"\n+    assertTrue(auditlog.getOutput().contains(\"callerContext=clientIp:\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzY5OQ==", "bodyText": "I would do it more formal: appendClientIpToCallerContext", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r500433699", "createdAt": "2020-10-06T16:26:12Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcClient.java", "diffHunk": "@@ -404,6 +409,7 @@ private Object invokeMethod(\n           \" with params \" + Arrays.deepToString(params) + \" from \"\n           + router.getRouterId());\n     }\n+    appendClientIp2CallerContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzk2OA==", "bodyText": "Is there something else we need to add?", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r500433968", "createdAt": "2020-10-06T16:26:42Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcClient.java", "diffHunk": "@@ -116,10 +118,13 @@\n   /** Optional perf monitor. */\n   private final RouterRpcMonitor rpcMonitor;\n \n+  private final Configuration clientConf;\n+\n   /** Pattern to parse a stack trace line. */\n   private static final Pattern STACK_TRACE_PATTERN =\n       Pattern.compile(\"\\\\tat (.*)\\\\.(.*)\\\\((.*):(\\\\d*)\\\\)\");\n \n+  private static final String CLIENT_IP_STR = \"clientIp\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e97d8608614d931224450a11bb2b9d9119f16a"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08f3596cf6e00624f95b01ff87fdbb25dca89a9", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/e08f3596cf6e00624f95b01ff87fdbb25dca89a9", "committedDate": "2020-10-06T17:02:31Z", "message": "extract builder, check original context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d211231660a37f5d7fc6aaad9c0949ecfe0791f1", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/d211231660a37f5d7fc6aaad9c0949ecfe0791f1", "committedDate": "2020-10-07T04:21:47Z", "message": "fix checkstyle and add context to UT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDQ2NjY4", "url": "https://github.com/apache/hadoop/pull/2363#pullrequestreview-504046668", "createdAt": "2020-10-07T16:12:16Z", "commit": {"oid": "d211231660a37f5d7fc6aaad9c0949ecfe0791f1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoxMjoxNlrOHd7CrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoxMjoxNlrOHd7CrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzODA5Mg==", "bodyText": "Anyway we can check for the actual IP?", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r501138092", "createdAt": "2020-10-07T16:12:16Z", "author": {"login": "goiri"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/test/java/org/apache/hadoop/hdfs/server/federation/router/TestRouterRpc.java", "diffHunk": "@@ -1901,4 +1904,27 @@ private DFSClient getFileDFSClient(final String path) {\n     }\n     return null;\n   }\n+\n+  @Test\n+  public void testMkdirsWithCallerContext() throws IOException {\n+    GenericTestUtils.LogCapturer auditlog =\n+        GenericTestUtils.LogCapturer.captureLogs(FSNamesystem.auditLog);\n+\n+    // Current callerContext is null\n+    assertNull(CallerContext.getCurrent());\n+\n+    // Set client context\n+    CallerContext.setCurrent(\n+        new CallerContext.Builder(\"clientContext\").build());\n+\n+    // Create a directory via the router\n+    String dirPath = \"/test_dir_with_callercontext\";\n+    FsPermission permission = new FsPermission(\"755\");\n+    routerProtocol.mkdirs(dirPath, permission, false);\n+\n+    // The audit log should contains \"callerContext=clientContext,clientIp:\"\n+    assertTrue(auditlog.getOutput()\n+        .contains(\"callerContext=clientContext,clientIp:\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d211231660a37f5d7fc6aaad9c0949ecfe0791f1"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Mzk2NjQw", "url": "https://github.com/apache/hadoop/pull/2363#pullrequestreview-504396640", "createdAt": "2020-10-08T03:00:41Z", "commit": {"oid": "d211231660a37f5d7fc6aaad9c0949ecfe0791f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMzowMDo0MlrOHeMRwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMzowMDo0MlrOHeMRwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQyMDQ4MA==", "bodyText": "Can we pass the string separator instead of configuration to avoid unnecessary Configuration.get() for each RPC?", "url": "https://github.com/apache/hadoop/pull/2363#discussion_r501420480", "createdAt": "2020-10-08T03:00:42Z", "author": {"login": "aajisaka"}, "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcClient.java", "diffHunk": "@@ -519,6 +525,20 @@ private Object invokeMethod(\n     }\n   }\n \n+  /**\n+   * For Tracking which is the actual client address.\n+   * It adds key/value (clientIp/\"ip\") pair to the caller context.\n+   */\n+  private void appendClientIpToCallerContext() {\n+    final CallerContext ctx = CallerContext.getCurrent();\n+    String origContext = ctx == null ? null : ctx.getContext();\n+    byte[] origSignature = ctx == null ? null : ctx.getSignature();\n+    CallerContext.setCurrent(\n+        new CallerContext.Builder(origContext, clientConfiguration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d211231660a37f5d7fc6aaad9c0949ecfe0791f1"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c579d31d96488039d0ccb3c8b121c9f09ef085", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/41c579d31d96488039d0ccb3c8b121c9f09ef085", "committedDate": "2020-10-08T04:32:20Z", "message": "pass separator instead of conf to builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODk5NTU1", "url": "https://github.com/apache/hadoop/pull/2363#pullrequestreview-504899555", "createdAt": "2020-10-08T15:21:54Z", "commit": {"oid": "41c579d31d96488039d0ccb3c8b121c9f09ef085"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3429, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}