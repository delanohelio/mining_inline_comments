{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTg5ODQ3", "number": 1880, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1Njo1MVrODltQVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1ODozMVrODltR8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODY1MzY3OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1Njo1MVrOFyv3tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1Njo1MVrOFyv3tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1NzQyOQ==", "bodyText": "We can use the utility method and don't have to parse the java.version string. This change can avoid test failure in Java 9 and 10 (corner case).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String version = System.getProperty(\"java.version\");\n          \n          \n            \n                if (version.startsWith(\"1.\")) { // JDK 8\n          \n          \n            \n                  includedProtocols = INCLUDED_PROTOCOLS;\n          \n          \n            \n                } else { // JDK 11 and above\n          \n          \n            \n                  includedProtocols = INCLUDED_PROTOCOLS_JDK11;\n          \n          \n            \n                }\n          \n          \n            \n                if (Shell.isJavaVersionAtLeast(11) {\n          \n          \n            \n                  includedProtocols = INCLUDED_PROTOCOLS_JDK11;\n          \n          \n            \n                } else {\n          \n          \n            \n                  includedProtocols = INCLUDED_PROTOCOLS;\n          \n          \n            \n                }", "url": "https://github.com/apache/hadoop/pull/1880#discussion_r388757429", "createdAt": "2020-03-06T07:56:51Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java", "diffHunk": "@@ -291,13 +294,30 @@ public void testExcludedCiphers() throws Exception {\n   @Test\n   public void testIncludedProtocols() throws Exception {\n     URL url = new URL(baseUrl, SERVLET_PATH_ECHO + \"?a=b&c=d\");\n+\n+    String includedProtocols;\n+    String version = System.getProperty(\"java.version\");\n+    if (version.startsWith(\"1.\")) { // JDK 8\n+      includedProtocols = INCLUDED_PROTOCOLS;\n+    } else { // JDK 11 and above\n+      includedProtocols = INCLUDED_PROTOCOLS_JDK11;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2670160d36809ddea601d51a0017052f6d866994"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODY1Nzc3OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1ODozMVrOFyv6GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNzo1ODozMVrOFyv6GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODA0MQ==", "bodyText": "This lines can be fixed as well.", "url": "https://github.com/apache/hadoop/pull/1880#discussion_r388758041", "createdAt": "2020-03-06T07:58:31Z", "author": {"login": "aajisaka"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java", "diffHunk": "@@ -291,13 +294,30 @@ public void testExcludedCiphers() throws Exception {\n   @Test\n   public void testIncludedProtocols() throws Exception {\n     URL url = new URL(baseUrl, SERVLET_PATH_ECHO + \"?a=b&c=d\");\n+\n+    String includedProtocols;\n+    String version = System.getProperty(\"java.version\");\n+    if (version.startsWith(\"1.\")) { // JDK 8\n+      includedProtocols = INCLUDED_PROTOCOLS;\n+    } else { // JDK 11 and above\n+      includedProtocols = INCLUDED_PROTOCOLS_JDK11;\n+    }\n     HttpsURLConnection conn =\n         getConnectionWithPreferredProtocolSSLSocketFactory(url,\n-        INCLUDED_PROTOCOLS);\n+            includedProtocols);\n     assertFalse(\"included protocol list is empty\",\n-        INCLUDED_PROTOCOLS.isEmpty());\n+        includedProtocols.isEmpty());\n \n     readFromConnection(conn);\n+\n+    PreferredProtocolSSLSocketFactory factory =\n+        (PreferredProtocolSSLSocketFactory)conn.getSSLSocketFactory();\n+\n+    if (version.startsWith(\"1.\")) {\n+      assertEquals(\"TLSv1.2\", factory.getSocket().getSession().getProtocol());\n+    } else {\n+      assertEquals(\"TLSv1.3\", factory.getSocket().getSession().getProtocol());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2670160d36809ddea601d51a0017052f6d866994"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3607, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}