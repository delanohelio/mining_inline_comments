{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4OTI3MjEw", "number": 2058, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNjo1MTo1M1rOEDJlqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNjo1MTo1M1rOEDJlqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzM4MjgzOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestCommonConfigurationFields.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNjo1MTo1M1rOGgCRww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNzo1NToxNFrOGgCgZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NDkzMQ==", "bodyText": "Can we just add one line instead :\n    xmlPrefixToSkipCompare.add(\"fs.viewfs.overload.scheme.target.\");", "url": "https://github.com/apache/hadoop/pull/2058#discussion_r436244931", "createdAt": "2020-06-06T06:51:53Z", "author": {"login": "ayushtkn"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestCommonConfigurationFields.java", "diffHunk": "@@ -124,6 +124,24 @@ public void initializeMemberVariables() {\n     xmlPrefixToSkipCompare.add(\"fs.adl.\");\n     xmlPropsToSkipCompare.add(\"fs.AbstractFileSystem.adl.impl\");\n \n+    // ViewfsOverloadScheme target fs impl property keys are dynamically\n+    // constructed and they are advanced props.\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.file.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.ftp.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.hdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.http.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.https.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.o3fs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.oss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.s3a.impl\");\n+    xmlPropsToSkipCompare.\n+        add(\"fs.viewfs.overload.scheme.target.swebhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.webhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.wasb.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.swift.impl\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa403c9d67e5887988c6cb3a4c7980717ff6286"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0ODY3OA==", "bodyText": "@ayushtkn , Thanks a lot for review!\nInitially I thought that, but if we add any property later starts with prefix this test will silently ignore them. In tests I prefer specific cases rather than pattern here in this case. If you are so strong on to change, let me know I will try to modify it :-).", "url": "https://github.com/apache/hadoop/pull/2058#discussion_r436248678", "createdAt": "2020-06-06T07:55:14Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestCommonConfigurationFields.java", "diffHunk": "@@ -124,6 +124,24 @@ public void initializeMemberVariables() {\n     xmlPrefixToSkipCompare.add(\"fs.adl.\");\n     xmlPropsToSkipCompare.add(\"fs.AbstractFileSystem.adl.impl\");\n \n+    // ViewfsOverloadScheme target fs impl property keys are dynamically\n+    // constructed and they are advanced props.\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.file.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.ftp.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.hdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.http.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.https.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.o3fs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.oss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.s3a.impl\");\n+    xmlPropsToSkipCompare.\n+        add(\"fs.viewfs.overload.scheme.target.swebhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.webhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.wasb.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.swift.impl\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NDkzMQ=="}, "originalCommit": {"oid": "eaa403c9d67e5887988c6cb3a4c7980717ff6286"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}