{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MDgzNjg3", "number": 2305, "title": "HDFS-15578: Fix the rename issues with fallback fs enabled", "bodyText": "https://issues.apache.org/jira/browse/HDFS-15578", "createdAt": "2020-09-15T07:01:35Z", "url": "https://github.com/apache/hadoop/pull/2305", "merged": true, "mergeCommit": {"oid": "e4cb0d351450dba10cd6a0a6d999cc4423f1c2a9"}, "closed": true, "closedAt": "2020-09-17T05:43:01Z", "author": {"login": "umamaheswararao"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJCQHbAH2gAyNDg3MDgzNjg3OjZhZjYwYjE0MWQ1NjI2NGYyNTIxZWY4MWUyZjU0MjUyYjljZDMyYzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJpbJngFqTQ5MDIzNzE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6af60b141d56264f2521ef81e2f54252b9cd32c0", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/6af60b141d56264f2521ef81e2f54252b9cd32c0", "committedDate": "2020-09-15T06:59:58Z", "message": "HDFS-1558: Fix the rename issues with fallback fs enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fcc6e89931a846636f9585ebf3616385a1fd673", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/1fcc6e89931a846636f9585ebf3616385a1fd673", "committedDate": "2020-09-15T16:20:26Z", "message": "HDFS-15578: Added additional fallback check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7cab8b9ecabf7e508a1c9ef2f489b727e87478d", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/f7cab8b9ecabf7e508a1c9ef2f489b727e87478d", "committedDate": "2020-09-15T23:08:46Z", "message": "HDFS-15578: Fixed checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjQ0OTQx", "url": "https://github.com/apache/hadoop/pull/2305#pullrequestreview-489244941", "createdAt": "2020-09-16T03:20:00Z", "commit": {"oid": "f7cab8b9ecabf7e508a1c9ef2f489b727e87478d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMzoyMDowMVrOHSekcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMzoyMDowMVrOHSekcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzNzI2Ng==", "bodyText": "I tried a couple of cases of rename. Can you give a check once.\n  public void testRenameOnInternalDirWithFallback() throws Exception {\n    Configuration conf = getConf();\n    URI defaultFSURI =\n        URI.create(conf.get(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY));\n    final Path hdfsTargetPath1 = new Path(defaultFSURI + \"/HDFSUser\");\n    final Path hdfsTargetPath2 = new Path(defaultFSURI + \"/dstNewHDFSUser\"\n        + \"/next\");\n    ViewFsTestSetup.addMountLinksToConf(defaultFSURI.getAuthority(),\n        new String[] {\"/HDFSUser\", \"/NewHDFSUser/next/next1\"},\n        new String[] {hdfsTargetPath1.toUri().toString(),\n            hdfsTargetPath2.toUri().toString()}, conf);\n    //Making sure parent dir structure as mount points available in fallback.\n    try (DistributedFileSystem dfs = new DistributedFileSystem()) {\n      dfs.initialize(defaultFSURI, conf);\n      dfs.mkdirs(hdfsTargetPath1);\n      dfs.mkdirs(hdfsTargetPath2);\n    }\n\n    try (FileSystem fs = FileSystem.get(conf)) {\n      // Case : 1\n      Path src = new Path(\"/newFileOnRoot\");\n      Path dst = new Path(\"/NewHDFSUser/next\");\n      fs.create(src).close();\n      verifyRename(fs, src, dst); // Fails. Shouldn't it move to\n      // /NewHDFSUser/next/newFileOnRoot ?\n\n       src = new Path(\"/newFileOnRoot\");\n       dst = new Path(\"/NewHDFSUser/next/file\");\n      verifyRename(fs, src, dst); // Fails. Guess since the parent structure\n      // isn't there at fallback?```\n\nI couldn't check more, but\nCASE 1: if the destination is a directory, shouldn't it move src inside it?\nCASE:2 Seems due to parent structure isn't there in fallback?\n\nI didn't try with ViewFs, maybe something similar there as well", "url": "https://github.com/apache/hadoop/pull/2305#discussion_r489137266", "createdAt": "2020-09-16T03:20:01Z", "author": {"login": "ayushtkn"}, "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestViewDistributedFileSystemWithMountLinks.java", "diffHunk": "@@ -61,4 +64,55 @@ public void testCreateOnRoot() throws Exception {\n   public void testMountLinkWithNonExistentLink() throws Exception {\n     testMountLinkWithNonExistentLink(false);\n   }\n+\n+  @Test\n+  public void testRenameOnInternalDirWithFallback() throws Exception {\n+    Configuration conf = getConf();\n+    URI defaultFSURI =\n+        URI.create(conf.get(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY));\n+    final Path hdfsTargetPath1 = new Path(defaultFSURI + \"/HDFSUser\");\n+    final Path hdfsTargetPath2 = new Path(defaultFSURI + \"/NewHDFSUser/next\");\n+    ViewFsTestSetup.addMountLinksToConf(defaultFSURI.getAuthority(),\n+        new String[] {\"/HDFSUser\", \"/NewHDFSUser/next\"},\n+        new String[] {hdfsTargetPath1.toUri().toString(),\n+            hdfsTargetPath2.toUri().toString()}, conf);\n+    //Making sure parent dir structure as mount points available in fallback.\n+    try (DistributedFileSystem dfs = new DistributedFileSystem()) {\n+      dfs.initialize(defaultFSURI, conf);\n+      dfs.mkdirs(hdfsTargetPath1);\n+      dfs.mkdirs(hdfsTargetPath2);\n+    }\n+\n+    try (FileSystem fs = FileSystem.get(conf)) {\n+      Path src = new Path(\"/newFileOnRoot\");\n+      Path dst = new Path(\"/newFileOnRoot1\");\n+      fs.create(src).close();\n+      verifyRename(fs, src, dst);\n+\n+      src = new Path(\"/newFileOnRoot1\");\n+      dst = new Path(\"/NewHDFSUser/newFileOnRoot\");\n+      fs.mkdirs(dst.getParent());\n+      verifyRename(fs, src, dst);\n+\n+      src = new Path(\"/NewHDFSUser/newFileOnRoot\");\n+      dst = new Path(\"/NewHDFSUser/newFileOnRoot1\");\n+      verifyRename(fs, src, dst);\n+\n+      src = new Path(\"/NewHDFSUser/newFileOnRoot1\");\n+      dst = new Path(\"/newFileOnRoot\");\n+      verifyRename(fs, src, dst);\n+\n+      src = new Path(\"/HDFSUser/newFileOnRoot1\");\n+      dst = new Path(\"/HDFSUser/newFileOnRoot\");\n+      fs.create(src).close();\n+      verifyRename(fs, src, dst);\n+    }\n+  }\n+\n+  private void verifyRename(FileSystem fs, Path src, Path dst)\n+      throws IOException {\n+    fs.rename(src, dst);\n+    Assert.assertFalse(fs.exists(src));\n+    Assert.assertTrue(fs.exists(dst));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7cab8b9ecabf7e508a1c9ef2f489b727e87478d"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2422dad1a4d26e71733c9e45069e566569164d64", "author": {"user": null}, "url": "https://github.com/apache/hadoop/commit/2422dad1a4d26e71733c9e45069e566569164d64", "committedDate": "2020-09-16T08:20:31Z", "message": "HDFS-15578: Fixed a review comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjM3MTc2", "url": "https://github.com/apache/hadoop/pull/2305#pullrequestreview-490237176", "createdAt": "2020-09-17T04:38:19Z", "commit": {"oid": "2422dad1a4d26e71733c9e45069e566569164d64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3657, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}