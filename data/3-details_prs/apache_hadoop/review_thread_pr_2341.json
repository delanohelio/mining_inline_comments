{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNTk0MzUz", "number": 2341, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzozMDoxMFrOEnwxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NDowN1rOEoLQEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI5MDc2OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzozMDoxMFrOHYhlAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNToyNToyN1rOHYoCuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODAxNw==", "bodyText": "nit: argsType -> argTypes", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478017", "createdAt": "2020-09-26T17:30:10Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argsType, Object ... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzkyOQ==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495583929", "createdAt": "2020-09-27T15:25:27Z", "author": {"login": "maobaolong"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argsType, Object ... values) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODAxNw=="}, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI5MTg0OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzozMTo0OVrOHYhliQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNToyNToyMVrOHYoCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODE1Mw==", "bodyText": "Could you add a test in TestReflectionUtils?", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478153", "createdAt": "2020-09-26T17:31:49Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzkyMA==", "bodyText": "Done", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495583920", "createdAt": "2020-09-27T15:25:21Z", "author": {"login": "maobaolong"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODE1Mw=="}, "originalCommit": {"oid": "c892a6402e252558eb9023b4524f3ba5864ed179"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTYyNjM5OnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MzozMlrOHZHSkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNToxOTo0OFrOHaNpvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTg4OA==", "bodyText": "One more thing we can do here is perhaps checking whether argTypes.length == values.length, and throw IllegalArgumentException like: \"1 parameters are required but 0 arguments are provided\". This will be more informative than the default exception message.", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496095888", "createdAt": "2020-09-28T16:53:32Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argTypes the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argTypes, Object ... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODcwMA==", "bodyText": "Good idea, done.", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r497248700", "createdAt": "2020-09-30T05:19:48Z", "author": {"login": "maobaolong"}, "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argTypes the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argTypes, Object ... values) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTg4OA=="}, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTYyODMyOnYy", "diffSide": "RIGHT", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestReflectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NDowN1rOHZHTyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNToyMDowOFrOHaNqKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NjIwMg==", "bodyText": "I think Assert is not imported and compilation will fail. Also can we test the cases when number of parameter and argument doesn't match?", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496096202", "createdAt": "2020-09-28T16:54:07Z", "author": {"login": "sunchao"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestReflectionUtils.java", "diffHunk": "@@ -168,6 +168,13 @@ public void testLogThreadInfo() throws Exception {\n         containsString(\"Process Thread Dump: \" + title));\n   }\n \n+  @Test\n+  public void testNewInstanceForNonDefaultConstructor() {\n+    Object x = ReflectionUtils.newInstance(\n+        NoDefaultCtor.class, null, new Class[] {int.class}, 1);\n+    Assert.assertTrue(x instanceof NoDefaultCtor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODgwOA==", "bodyText": "Thanks for check this for me, done", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r497248808", "createdAt": "2020-09-30T05:20:08Z", "author": {"login": "maobaolong"}, "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestReflectionUtils.java", "diffHunk": "@@ -168,6 +168,13 @@ public void testLogThreadInfo() throws Exception {\n         containsString(\"Process Thread Dump: \" + title));\n   }\n \n+  @Test\n+  public void testNewInstanceForNonDefaultConstructor() {\n+    Object x = ReflectionUtils.newInstance(\n+        NoDefaultCtor.class, null, new Class[] {int.class}, 1);\n+    Assert.assertTrue(x instanceof NoDefaultCtor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NjIwMg=="}, "originalCommit": {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3312, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}