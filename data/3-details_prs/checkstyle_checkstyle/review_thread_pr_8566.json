{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzE0MDQ4", "number": 8566, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0OToyOFrOES8UAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzoxNTo1MlrOET9HXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk3OTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0OToyOFrOG4Z6Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNzo0NlrOG5B7tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Nzg5NQ==", "bodyText": "Please fix the Javadoc too.", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r461797895", "createdAt": "2020-07-28T18:49:28Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -548,7 +562,7 @@ private static String getFieldType(DetailAST field) {\n         private String frameName;\n \n         /** Whether the frame is CLASS_DEF, ENUM_DEF or ENUM_CONST_DEF. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c81770ba81935d4d6b6d3ae7cf7db14be13e4e98"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1MzY4NA==", "bodyText": "Thanks, fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r462453684", "createdAt": "2020-07-29T17:07:46Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -548,7 +562,7 @@ private static String getFieldType(DetailAST field) {\n         private String frameName;\n \n         /** Whether the frame is CLASS_DEF, ENUM_DEF or ENUM_CONST_DEF. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Nzg5NQ=="}, "originalCommit": {"oid": "c81770ba81935d4d6b6d3ae7cf7db14be13e4e98"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzU3MjU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzowNTo1N1rOG5-MtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMzoxODozMVrOG6IN3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0MTA3Nw==", "bodyText": "Please remove extra blank line", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r463441077", "createdAt": "2020-07-31T07:05:57Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -146,6 +146,10 @@\n             TokenTypes.LITERAL_NEW,\n             TokenTypes.LAMBDA,\n             TokenTypes.PATTERN_VARIABLE_DEF,\n+            TokenTypes.RECORD_DEF,\n+            TokenTypes.COMPACT_CTOR_DEF,\n+            TokenTypes.RECORD_COMPONENT_DEF,\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3793216947a9c23e6029420502c89b0716e0d6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYwNTIxMg==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r463605212", "createdAt": "2020-07-31T13:18:31Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -146,6 +146,10 @@\n             TokenTypes.LITERAL_NEW,\n             TokenTypes.LAMBDA,\n             TokenTypes.PATTERN_VARIABLE_DEF,\n+            TokenTypes.RECORD_DEF,\n+            TokenTypes.COMPACT_CTOR_DEF,\n+            TokenTypes.RECORD_COMPONENT_DEF,\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0MTA3Nw=="}, "originalCommit": {"oid": "cf3793216947a9c23e6029420502c89b0716e0d6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzU5NzExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzoxNTo1MlrOG5-bSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMjo0NDo0OFrOG6HMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0NDgwOA==", "bodyText": "Please move this code to a helper method. Something like boolean isClassOrEnumOrRecordDef(DetailAST ast)\nThis triple check is performed several times in the file.", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r463444808", "createdAt": "2020-07-31T07:15:52Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -183,7 +188,9 @@ public void visitToken(final DetailAST ast) {\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 final int parentType = ast.getParent().getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3793216947a9c23e6029420502c89b0716e0d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU4ODU1Nw==", "bodyText": "Since we check the parent twice, and the token itself once, I left the code that is extracting the parent type in each case group.  Also, since there was already a method called isClassOrEnumOrRecordDef used for checking and setting frames, I named the new method astTypeIsClassOrEnumOrRecordDef.", "url": "https://github.com/checkstyle/checkstyle/pull/8566#discussion_r463588557", "createdAt": "2020-07-31T12:44:48Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "diffHunk": "@@ -183,7 +188,9 @@ public void visitToken(final DetailAST ast) {\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 final int parentType = ast.getParent().getType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0NDgwOA=="}, "originalCommit": {"oid": "cf3793216947a9c23e6029420502c89b0716e0d6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 724, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}