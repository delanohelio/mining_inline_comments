{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDE0ODM0", "number": 7714, "title": "Issue: #7697 update doc for RegexpSingleline", "bodyText": "Description\nThis fixes #7697\n\n\n\nOutput of default example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"System.exit\\(\"/>\n        <!-- next line not required as 0 is the default -->\n        <property name=\"minimum\" value=\"0\"/>\n        <property name=\"maximum\" value=\"1\"/>\n    </module>\n</module>\n\n$ cat MyClass.java\nclass MyClass {\n    void myFunction() {\n        try{\n            doSomething();\n        } catch (Exception e) {\n            System.exit(1); // OK, as only there is only one occurrence.\n        } \n    }\n    void doSomething() {};\n}\n\n$ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java\nStarting audit...\nAudit done.\n\n$ cat MyClass.java\n  class MyClass {\n    void myFunction() {\n        try {\n            doSomething();\n            System.exit(0);\n        } catch (Exception e) {\n            System.exit(1); // violation, as there are more than one occurrence.\n        }\n    }\n    void doSomething(){};\n}\n\n$ java -jar .\\checkstyle-8.31-SNAPSHOT-all.jar -c .\\config.xml .\\MyClass.java\n   Starting audit...\n   [ERROR] F:\\FY\\gosc\\checkstyle\\MyClass.java:7: Line matches the illegal pattern 'System.exit\\('. \n   [RegexpSingleline]\n   Audit done.\n   Checkstyle ends with 1 errors.\n\n\n\nOutput of default example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"This file is copyrighted\"/>\n        <property name=\"minimum\" value=\"1\"/>\n        <!--  Need to specify a maximum, so 10 times is more than enough. -->\n        <property name=\"maximum\" value=\"10\"/>\n    </module>\n</module>\n\n\n$ cat MyClass.java\n/**\n* This file is copyrighted under CC. // Ok, as the file contains a copyright statement.\n*/\nclass MyClass {\n\n}\n\n$ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java\nStarting audit...\nAudit done.\n\n$ cat MyClass.java\n/** // violation, as the file doesn't contain a copyright statement.\n* MyClass as a configuration example.\n*/\nclass MyClass {\n\n}\n\njava -jar checkstyle-8.29-all.jar -c config.xml MyClass.java\nStarting audit...\n[ERROR] MyClass.java:1: File does not contain at least 1 matches for pattern 'This file is copyrighted'. [RegexpSingleline]\nAudit done.\nCheckstyle ends with 1 errors.\n\n\n\nOutput of example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"license\"/>\n        <property name=\"ignoreCase\" value=\"true\"/>\n        <property name=\"minimum\" value=\"1\"/>\n        <property name=\"maximum\" value=\"9999\"/>\n        <!--  Configure a message to be shown on violation of the Check. -->\n        <property name=\"message\" value=\"File must contain at least one occurrence of 'license' term\"/>\n        <!--  Perform the Check only on files with java extension. -->\n        <property name=\"fileExtensions\" value=\"sql\" />\n    </module>\n</module>\n\n$ cat mysql.sql\n/*\n AP 2.0 License. // Ok, Check ignores the case of the term.\n*/\nCREATE DATABASE MyDB;\n  \n\n$ java -jar checkstyle-8.29-all.jar -c config.xml mysql.sql\nStarting audit...\nAudit done.\n\n$ cat mysql.sql\n/* // violation, file doesn't contain the term.\n Example sql file.\n*/\nCREATE DATABASE MyDB;\n\n$ java -jar checkstyle-8.29-all.jar -c config.xml  mysql.sql\nStarting audit...\n[ERROR] F:\\FY\\gosc\\checkstyle\\mysql.sql:1: File must contain at least one occurrence of license term [RegexpSingleline]\nAudit done.\nCheckstyle ends with 1 errors.\n\n\n\nGoal\nAdd code examples for RegexpSingleline doc", "createdAt": "2020-03-01T08:25:54Z", "url": "https://github.com/checkstyle/checkstyle/pull/7714", "merged": true, "mergeCommit": {"oid": "c543397c24fa8c92c84e4fe7a8398246e6163d9b"}, "closed": true, "closedAt": "2020-03-29T22:49:36Z", "author": {"login": "malinthar"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJlT_BgBqjMwODYyOTc1MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSbu0vABqjMxNzYwMTg4NDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1544084e659d8c66a7f0a4215acb2dc6b6009ae0", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1544084e659d8c66a7f0a4215acb2dc6b6009ae0", "committedDate": "2020-03-01T10:37:30Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "22d5ec11ddb043b12db31f793b5714a29057acaf", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/22d5ec11ddb043b12db31f793b5714a29057acaf", "committedDate": "2020-03-02T03:34:30Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22d5ec11ddb043b12db31f793b5714a29057acaf", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/22d5ec11ddb043b12db31f793b5714a29057acaf", "committedDate": "2020-03-02T03:34:30Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "9804ed3b7444e09ea490ddf02071bb3b9ea57da6", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9804ed3b7444e09ea490ddf02071bb3b9ea57da6", "committedDate": "2020-03-02T05:26:35Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Mzk1MjA0", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-368395204", "createdAt": "2020-03-03T23:13:44Z", "commit": {"oid": "9804ed3b7444e09ea490ddf02071bb3b9ea57da6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzoxMzo0NFrOFxaEaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzoxNjowNVrOFxaHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTY1OQ==", "bodyText": "Please make example of default config and make note that by default Check do nothing. No code sample is required for default.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r387351659", "createdAt": "2020-03-03T23:13:44Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -70,6 +70,12 @@\n  *   &lt;property name=\"format\" value=\"\\s+$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9804ed3b7444e09ea490ddf02071bb3b9ea57da6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MjQ4MA==", "bodyText": "Please review configs, and make sure all properties of Checks are showed in examples. You are ok to create new configs/samples for them.\nOne of property is file extension. So for config you should have two code blocks with definition of name outside of pre tag", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r387352480", "createdAt": "2020-03-03T23:16:05Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,8 +107,18 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9804ed3b7444e09ea490ddf02071bb3b9ea57da6"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9804ed3b7444e09ea490ddf02071bb3b9ea57da6", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9804ed3b7444e09ea490ddf02071bb3b9ea57da6", "committedDate": "2020-03-02T05:26:35Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/bf323d5a7b6fa9b83761411d496d7064bc4a133e", "committedDate": "2020-03-06T20:45:07Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODgzMzcx", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-370883371", "createdAt": "2020-03-09T01:54:11Z", "commit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTo1NDoxMVrOFzZIVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTo1ODo0OFrOFzZLMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMzQyOQ==", "bodyText": "@since should not show up as having a difference. Please fix this. It looks like you added double space.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r389433429", "createdAt": "2020-03-09T01:54:11Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,8 +110,55 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n- * @since 5.0\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * This file is copyrighted under CC.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // Ok, as the file contains a copyright statement.\n+ * }\n+ * </pre>\n+ * <pre>\n+ * &#47;**\n+ * * MyClass as a configuration example.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // violation, as the file doesn't contain a copyright statement.\n+ * }\n+ * </pre>\n+ * <p>\n+ *  An example of how to configure the check to make sure java files contains the term 'license'.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"RegexpSingleline\"&gt;\n+ *     &lt;property name=\"format\" value=\"license\"/&gt;\n+ *     &lt;property name=\"minimum\" value=\"1\"/&gt;\n+ *     &lt;property name=\"maximum\" value=\"10\"/&gt;\n+ *     &lt;property name=\"ignoreCase\" value=\"true\"/&gt;\n+ *     &lt;!--  Configure a message to be shown on violation of the Check. --&gt;\n+ *     &lt;property name=\"message\"\n+ *           value=\"File must contain at least one occurrence of 'license' term\"/&gt;\n+*      &lt;!--  Perform the Check only on files with java extension. --&gt;\n+ *     &lt;property name=\"fileExtensions\" value=\"java\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * AP 2.0 License.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // Ok, Check ignores the case of the term.\n+ * }\n+ * </pre>\n+ *  @since 5.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMzkwNQ==", "bodyText": "Violation message go on the same line as where the violation will be reported by util.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r389433905", "createdAt": "2020-03-09T01:57:16Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -82,6 +82,22 @@\n  *   &lt;property name=\"maximum\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *      private String myString;...\n+ *      private int myInt;...\n+ *      //Ok, as only two occurrences of trailing whitespace are available.\n+ * }\n+ * </pre>\n+ * <pre>\n+ * class MyClass {\n+ *     private String myString;...\n+ *     private int myInt;...\n+ *     public MyClass() {};...\n+ *     // violation, since more than two occurrences of trailing whitespace are available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMzkzOA==", "bodyText": "Always have 1 space after comment and before text.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r389433938", "createdAt": "2020-03-09T01:57:32Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -82,6 +82,22 @@\n  *   &lt;property name=\"maximum\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *      private String myString;...\n+ *      private int myInt;...\n+ *      //Ok, as only two occurrences of trailing whitespace are available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzNDE2Mw==", "bodyText": "All examples should have a \"good\" case and a \"bad\" case. Violation versus non-violation.\nViolation example should be first to show users this is how to make bad code good.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r389434163", "createdAt": "2020-03-09T01:58:48Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,8 +110,55 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n- * @since 5.0\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * This file is copyrighted under CC.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // Ok, as the file contains a copyright statement.\n+ * }\n+ * </pre>\n+ * <pre>\n+ * &#47;**\n+ * * MyClass as a configuration example.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // violation, as the file doesn't contain a copyright statement.\n+ * }\n+ * </pre>\n+ * <p>\n+ *  An example of how to configure the check to make sure java files contains the term 'license'.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"RegexpSingleline\"&gt;\n+ *     &lt;property name=\"format\" value=\"license\"/&gt;\n+ *     &lt;property name=\"minimum\" value=\"1\"/&gt;\n+ *     &lt;property name=\"maximum\" value=\"10\"/&gt;\n+ *     &lt;property name=\"ignoreCase\" value=\"true\"/&gt;\n+ *     &lt;!--  Configure a message to be shown on violation of the Check. --&gt;\n+ *     &lt;property name=\"message\"\n+ *           value=\"File must contain at least one occurrence of 'license' term\"/&gt;\n+*      &lt;!--  Perform the Check only on files with java extension. --&gt;\n+ *     &lt;property name=\"fileExtensions\" value=\"java\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * AP 2.0 License.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ *      // Ok, Check ignores the case of the term.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf323d5a7b6fa9b83761411d496d7064bc4a133e", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/bf323d5a7b6fa9b83761411d496d7064bc4a133e", "committedDate": "2020-03-06T20:45:07Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "7a56f6527d53100ce27fb4e0e17c9d0441076d8b", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/7a56f6527d53100ce27fb4e0e17c9d0441076d8b", "committedDate": "2020-03-11T14:50:00Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4a25b6d457613ac12f0c2d1ac0fbfb3cd3110f0", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f4a25b6d457613ac12f0c2d1ac0fbfb3cd3110f0", "committedDate": "2020-03-11T20:13:48Z", "message": "Merge remote-tracking branch 'upstream/master'"}, "afterCommit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3", "committedDate": "2020-03-11T20:42:30Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzMzMjg3", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-374733287", "createdAt": "2020-03-14T15:16:22Z", "commit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToxNjoyM1rOF2aIvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToxNzo0N1rOF2aJGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTY0NA==", "bodyText": "please remove \"...\" , examples should be compile-able, they might be weird in look and artificial, BUT they must be able to compile.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r392595644", "createdAt": "2020-03-14T15:16:23Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -82,6 +82,20 @@\n  *   &lt;property name=\"maximum\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *      private String myString;...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTczOA==", "bodyText": "please remove fields in such examples, lets keep user focus on what is target ... it is header.\nplease remove extra code from all other examples.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r392595738", "createdAt": "2020-03-14T15:17:47Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,7 +108,60 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * This file is copyrighted under CC. // Ok, as the file contains a copyright statement.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ * }\n+ * </pre>\n+ * <pre>\n+ * &#47;** // violation, as the file doesn't contain a copyright statement.\n+ * * MyClass as a configuration example.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ * }\n+ * </pre>\n+ * <p>\n+ *  An example of how to configure the check to make sure java files contains the term 'license'.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"RegexpSingleline\"&gt;\n+ *     &lt;property name=\"format\" value=\"license\"/&gt;\n+ *     &lt;property name=\"minimum\" value=\"1\"/&gt;\n+ *     &lt;property name=\"maximum\" value=\"10\"/&gt;\n+ *     &lt;property name=\"ignoreCase\" value=\"true\"/&gt;\n+ *     &lt;!--  Configure a message to be shown on violation of the Check. --&gt;\n+ *     &lt;property name=\"message\"\n+ *           value=\"File must contain at least one occurrence of 'license' term\"/&gt;\n+*      &lt;!--  Perform the Check only on files with java extension. --&gt;\n+ *     &lt;property name=\"fileExtensions\" value=\"java\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * AP 2.0 License. // Ok, Check ignores the case of the term.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzMzNzYz", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-374733763", "createdAt": "2020-03-14T15:23:44Z", "commit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMzo0NFrOF2aKtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMzo0NFrOF2aKtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjE1MA==", "bodyText": "please make example for non-java file, make it for *.sql file for example.\nThis Check can work on any files (as Check has parent Checker) , https://checkstyle.org/config_regexp.html#RegexpSingleline , we need to show this to user.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r392596150", "createdAt": "2020-03-14T15:23:44Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,7 +108,60 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * This file is copyrighted under CC. // Ok, as the file contains a copyright statement.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ * }\n+ * </pre>\n+ * <pre>\n+ * &#47;** // violation, as the file doesn't contain a copyright statement.\n+ * * MyClass as a configuration example.\n+ * *&#47;\n+ * class MyClass {\n+ *      private String myString;\n+ *      private int myInt;\n+ * }\n+ * </pre>\n+ * <p>\n+ *  An example of how to configure the check to make sure java files contains the term 'license'.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"RegexpSingleline\"&gt;\n+ *     &lt;property name=\"format\" value=\"license\"/&gt;\n+ *     &lt;property name=\"minimum\" value=\"1\"/&gt;\n+ *     &lt;property name=\"maximum\" value=\"10\"/&gt;\n+ *     &lt;property name=\"ignoreCase\" value=\"true\"/&gt;\n+ *     &lt;!--  Configure a message to be shown on violation of the Check. --&gt;\n+ *     &lt;property name=\"message\"\n+ *           value=\"File must contain at least one occurrence of 'license' term\"/&gt;\n+*      &lt;!--  Perform the Check only on files with java extension. --&gt;\n+ *     &lt;property name=\"fileExtensions\" value=\"java\"/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/215a8780a55f0b04a7242a2ca809ec4dc5e4bcc3", "committedDate": "2020-03-11T20:42:30Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "905f5f7c9dd8319dbde90955223e771d1597b259", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/905f5f7c9dd8319dbde90955223e771d1597b259", "committedDate": "2020-03-15T08:16:49Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "905f5f7c9dd8319dbde90955223e771d1597b259", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/905f5f7c9dd8319dbde90955223e771d1597b259", "committedDate": "2020-03-15T08:16:49Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "6aeedfbb177ff71f79db90779c5bd3c2322dc6a0", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6aeedfbb177ff71f79db90779c5bd3c2322dc6a0", "committedDate": "2020-03-15T09:20:26Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6aeedfbb177ff71f79db90779c5bd3c2322dc6a0", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6aeedfbb177ff71f79db90779c5bd3c2322dc6a0", "committedDate": "2020-03-15T09:20:26Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "0c82df5401dd35bcd6e5d1cc73b24a6803960a24", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0c82df5401dd35bcd6e5d1cc73b24a6803960a24", "committedDate": "2020-03-15T10:17:16Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODQ5MzAw", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-374849300", "createdAt": "2020-03-15T23:59:54Z", "commit": {"oid": "0c82df5401dd35bcd6e5d1cc73b24a6803960a24"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMzo1OTo1NFrOF2iSEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMDowMjoyMVrOF2iTDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcyOTEwNQ==", "bodyText": "sorry this examples is  weird, and reason is weird config.\nLets change config to catch System.exit( to be no more than 1 per file.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r392729105", "createdAt": "2020-03-15T23:59:54Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -82,6 +82,20 @@\n  *   &lt;property name=\"maximum\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c82df5401dd35bcd6e5d1cc73b24a6803960a24"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcyOTM1Ng==", "bodyText": "why 10 ?\ncan we avoid this parameter?", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r392729356", "createdAt": "2020-03-16T00:02:21Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -94,7 +108,52 @@\n  *   &lt;property name=\"maximum\" value=\"10\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * &#47;**\n+ * * This file is copyrighted under CC. // Ok, as the file contains a copyright statement.\n+ * *&#47;\n+ * class MyClass {\n+ *\n+ * }\n+ * </pre>\n+ * <pre>\n+ * &#47;** // violation, as the file doesn't contain a copyright statement.\n+ * * MyClass as a configuration example.\n+ * *&#47;\n+ * class MyClass {\n  *\n+ * }\n+ * </pre>\n+ * <p>\n+ *  An example of how to configure the check to make sure sql files contains the term 'license'.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"RegexpSingleline\"&gt;\n+ *     &lt;property name=\"format\" value=\"license\"/&gt;\n+ *     &lt;property name=\"minimum\" value=\"1\"/&gt;\n+ *     &lt;property name=\"maximum\" value=\"10\"/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c82df5401dd35bcd6e5d1cc73b24a6803960a24"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c82df5401dd35bcd6e5d1cc73b24a6803960a24", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0c82df5401dd35bcd6e5d1cc73b24a6803960a24", "committedDate": "2020-03-15T10:17:16Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "6c3000807a19e44b96cc38fe753c5510e2cb30fd", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6c3000807a19e44b96cc38fe753c5510e2cb30fd", "committedDate": "2020-03-17T18:44:44Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTYwNDM5", "url": "https://github.com/checkstyle/checkstyle/pull/7714#pullrequestreview-378960439", "createdAt": "2020-03-21T23:44:09Z", "commit": {"oid": "6c3000807a19e44b96cc38fe753c5510e2cb30fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMzo0NDowOVrOF5sVbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMzo0NDowOVrOF5sVbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzOTUzNQ==", "bodyText": "please move  System.exit(0) to be after doSomething.", "url": "https://github.com/checkstyle/checkstyle/pull/7714#discussion_r396039535", "createdAt": "2020-03-21T23:44:09Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -71,17 +71,46 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * To configure the check to find trailing whitespace at the end of a line,\n- * with some <i>slack</i> of allowing two occurrences per file:\n+ * To configure the check to find occurrences of 'System.exit('\n+ * with some <i>slack</i> of allowing only one occurrence per file:\n  * </p>\n  * <pre>\n  * &lt;module name=\"RegexpSingleline\"&gt;\n- *   &lt;property name=\"format\" value=\"\\s+$\"/&gt;\n+ *   &lt;property name=\"format\" value=\"System.exit\\(\"/&gt;\n  *   &lt;!-- next line not required as 0 is the default --&gt;\n  *   &lt;property name=\"minimum\" value=\"0\"/&gt;\n- *   &lt;property name=\"maximum\" value=\"2\"/&gt;\n+ *   &lt;property name=\"maximum\" value=\"1\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *      void myFunction() {\n+ *          try{\n+ *             doSomething();\n+ *          } catch (Exception e) {\n+ *             System.exit(1) // OK, as only there is only one occurrence.\n+ *          } finally {\n+ *              System.println(\"success!\")\n+ *          }\n+ *      }\n+ *      void doSomething(){};\n+ * }\n+ * </pre>\n+ * <pre>\n+ * class MyClass {\n+ *     void myFunction() {\n+ *         try{\n+ *             doSomething();\n+ *         } catch (Exception e) {\n+ *             System.exit(1)\n+ *         } finally {\n+ *             System.exit(0) // violation, as there are more than one occurrence.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c3000807a19e44b96cc38fe753c5510e2cb30fd"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c3000807a19e44b96cc38fe753c5510e2cb30fd", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6c3000807a19e44b96cc38fe753c5510e2cb30fd", "committedDate": "2020-03-17T18:44:44Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "14179bf5af404a7c1ba9ab0a1a5c099cb3e60f5e", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/14179bf5af404a7c1ba9ab0a1a5c099cb3e60f5e", "committedDate": "2020-03-22T09:07:01Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14179bf5af404a7c1ba9ab0a1a5c099cb3e60f5e", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/14179bf5af404a7c1ba9ab0a1a5c099cb3e60f5e", "committedDate": "2020-03-22T09:07:01Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "1272fed67a3467d8dc86ceac3af1d76ad1a3d563", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1272fed67a3467d8dc86ceac3af1d76ad1a3d563", "committedDate": "2020-03-22T14:18:04Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1272fed67a3467d8dc86ceac3af1d76ad1a3d563", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1272fed67a3467d8dc86ceac3af1d76ad1a3d563", "committedDate": "2020-03-22T14:18:04Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "86575e8ed08901c2a6260ad5a692064c55819f34", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/86575e8ed08901c2a6260ad5a692064c55819f34", "committedDate": "2020-03-22T15:37:23Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86575e8ed08901c2a6260ad5a692064c55819f34", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/86575e8ed08901c2a6260ad5a692064c55819f34", "committedDate": "2020-03-22T15:37:23Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "9c6463786239cc8666ec849daff2eb0c1d9142af", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9c6463786239cc8666ec849daff2eb0c1d9142af", "committedDate": "2020-03-22T16:50:04Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c6463786239cc8666ec849daff2eb0c1d9142af", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9c6463786239cc8666ec849daff2eb0c1d9142af", "committedDate": "2020-03-22T16:50:04Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "fb9ad18745453a870c89892735c2294f16aafb3c", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb9ad18745453a870c89892735c2294f16aafb3c", "committedDate": "2020-03-22T17:23:20Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb9ad18745453a870c89892735c2294f16aafb3c", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb9ad18745453a870c89892735c2294f16aafb3c", "committedDate": "2020-03-22T17:23:20Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "08e83205b3d66dccc2f09bed68d15c2716b4211b", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/08e83205b3d66dccc2f09bed68d15c2716b4211b", "committedDate": "2020-03-28T16:46:47Z", "message": "Issue #7697: update doc for RegexpSingleline\n\nRef"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08e83205b3d66dccc2f09bed68d15c2716b4211b", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/08e83205b3d66dccc2f09bed68d15c2716b4211b", "committedDate": "2020-03-28T16:46:47Z", "message": "Issue #7697: update doc for RegexpSingleline\n\nRef"}, "afterCommit": {"oid": "9437181557ff41f057cb4522951642b56310c8b5", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9437181557ff41f057cb4522951642b56310c8b5", "committedDate": "2020-03-28T17:54:33Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b425044a047926f62e7302a6d4a12a3ad72ed160", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b425044a047926f62e7302a6d4a12a3ad72ed160", "committedDate": "2020-03-29T15:34:46Z", "message": "Issue #7697: update doc for RegexpSingleline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9437181557ff41f057cb4522951642b56310c8b5", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9437181557ff41f057cb4522951642b56310c8b5", "committedDate": "2020-03-28T17:54:33Z", "message": "Issue #7697: update doc for RegexpSingleline"}, "afterCommit": {"oid": "b425044a047926f62e7302a6d4a12a3ad72ed160", "author": {"user": {"login": "malinthar", "name": "Malintha Ranasinghe"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b425044a047926f62e7302a6d4a12a3ad72ed160", "committedDate": "2020-03-29T15:34:46Z", "message": "Issue #7697: update doc for RegexpSingleline"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1068, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}