{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Njc2MDEx", "number": 8033, "title": "Issue #7647: Update doc for IllegalType", "bodyText": "Fixes: #7647\n\n\ndefault:\nkaustubh@dxtk:~$ cat Test.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n<module name=\"TreeWalker\">\n<module name=\"IllegalType\">\n</module>\n</module>\n</module>\nkaustubh@dxtk:~$ cat Test.java\npublic class Test extends TreeSet { // violation\n  public <T extends java.util.HashSet> void method() { // violation\n\n    LinkedHashMap<Integer, String> lhmap = new LinkedHashMap<Integer, String>(); // violation\n    TreeMap<Integer, String> treemap = new TreeMap<Integer, String>(); // violation\n    Test t; // OK\n    HashMap<String, String> hmap; // violation\n    Queue<Integer> intqueue; // OK\n\n    java.lang.IllegalArgumentException illegalex; // OK\n    java.util.TreeSet treeset; // violation\n  }\n\n}\nkaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java\nStarting audit...\n[ERROR] /home/kaustubh/Test.java:1:27: Usage of type 'TreeSet' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:2:21: Usage of type 'java.util.HashSet' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:4:5: Usage of type 'LinkedHashMap' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:6:5: Usage of type 'TreeMap' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:8:5: Usage of type 'HashMap' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:12:5: Usage of type 'java.util.TreeSet' is not allowed. [IllegalType]\nAudit done.\nCheckstyle ends with 6 errors.\nkaustubh@dxtk:~$ \n\nConfig 1:\nkaustubh@dxtk:~$ cat Test.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n<module name=\"TreeWalker\">\n<module name=\"IllegalType\">\n\n  <property name=\"tokens\" value=\"METHOD_DEF\"/> \n</module>\n</module>\n</module>\nkaustubh@dxtk:~$ cat Test.java\npublic class Test extends TreeSet { // OK\n  public <T extends java.util.HashSet> void method() { // violation\n \n    LinkedHashMap<Integer, String> lhmap = \n      new LinkedHashMap<Integer, String>(); // OK\n    \n    java.lang.IllegalArgumentException illegalex; // OK\n    java.util.TreeSet treeset; // Ok\n  }\n\n  public <T extends java.util.HashSet> void typeParam(T t) {} // violation\n\n  public void fullName(TreeSet a) {} // OK\n\n}\n\nkaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java\nStarting audit...\n[ERROR] /home/kaustubh/Test.java:2:21: Usage of type 'java.util.HashSet' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test.java:11:21: Usage of type 'java.util.HashSet' is not allowed. [IllegalType]\nAudit done.\nCheckstyle ends with 2 errors.\n\n\nConfig2:\nkaustubh@dxtk:~$ cat Test.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n<module name=\"TreeWalker\">\n<module name=\"IllegalType\">\n  <property name=\"ignoredMethodNames\" value=\"function\"/>\n</module>\n</module>\n</module>\n\nkaustubh@dxtk:~$ cat Test3.java\npublic class Test3 {\n  public HashMap<String, String> function(){ // OK\n    // code\n  }\n\n  public HashMap<String, String> function1(){ // violation\n    // code\n  }\n\n}\n\nkaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test3.java\nStarting audit...\n[ERROR] /home/kaustubh/Test3.java:6:10: Usage of type 'HashMap' is not allowed. [IllegalType]\nAudit done.\nCheckstyle ends with 1 errors.\n\nConfig 3:\nkaustubh@dxtk:~$ cat Test.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n<module name=\"TreeWalker\">\n<module name=\"IllegalType\">\n  <property name=\"validateAbstractClassNames\" value=\"true\"/>\n  <property name=\"illegalAbstractClassNameFormat\" value=\"Gitt\"/>\n\n</module>\n</module>\n</module>\n\nkaustubh@dxtk:~$ cat Test.java\nclass Test extends Gitter{ // violation\n}\n\nclass Test1 extends Github{ // OK\n}\n\nkaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java\nStarting audit...\n[ERROR] /home/kaustubh/Test.java:1:20: Usage of type 'Gitter' is not allowed. [IllegalType]\nAudit done.\nCheckstyle ends with 1 errors.\n\n\nConfig 4:\nkaustubh@dxtk:~$ cat Test.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n<module name=\"TreeWalker\">\n<module name=\"IllegalType\">\n  <property name=\"memberModifiers\" value=\"LITERAL_PUBLIC,\n   LITERAL_PROTECTED, LITERAL_STATIC\"/>\n</module>\n</module>\n</module>\n\nkaustubh@dxtk:~$ cat Test2.java\npublic class Test2 {\n  public HashMap<String, String> method1(){ // violation\n    // code\n  }\n\n  private HashMap<String, String> method2(){ // OK\n    // code\n  }\n\n  protected HashMap<Integer, String> method3(){ // violation\n    // code\n  }\n\n  public static TreeMap<Integer, String> method4(){ // violation\n    // code\n  }\n\n}\n\nkaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test2.java\nStarting audit...\n[ERROR] /home/kaustubh/Test2.java:2:10: Usage of type 'HashMap' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test2.java:10:13: Usage of type 'HashMap' is not allowed. [IllegalType]\n[ERROR] /home/kaustubh/Test2.java:14:17: Usage of type 'TreeMap' is not allowed. [IllegalType]\nAudit done.\nCheckstyle ends with 3 errors.\n\n\n@strkkk, please review", "createdAt": "2020-04-04T18:34:27Z", "url": "https://github.com/checkstyle/checkstyle/pull/8033", "merged": true, "mergeCommit": {"oid": "65122e39bc3852862d0b55eb3317137893cd3ebb"}, "closed": true, "closedAt": "2020-04-10T12:24:40Z", "author": {"login": "DXTkastb"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUbjv1gFqTM4NzczMjE4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWQMfAAFqTM5MTQxNTQ0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzMyMTg5", "url": "https://github.com/checkstyle/checkstyle/pull/8033#pullrequestreview-387732189", "createdAt": "2020-04-04T20:28:42Z", "commit": {"oid": "95b112a075457f52a3793dc1d57f1935e664fc70"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDoyODo0MlrOGA0gDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDoyOToxMlrOGA0gVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMzM1Ng==", "bodyText": "please add more examples of default class names", "url": "https://github.com/checkstyle/checkstyle/pull/8033#discussion_r403513356", "createdAt": "2020-04-04T20:28:42Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "diffHunk": "@@ -130,13 +130,37 @@\n  * </li>\n  * </ul>\n  * <p>\n- * To configure the check so that it ignores getInstance() methods:\n+ * Default Configuration:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalType&quot;/&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test {\n+ *   public void function() {\n+ *     HashMap&lt;String, String&gt; var; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b112a075457f52a3793dc1d57f1935e664fc70"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMzQyOA==", "bodyText": "please do not use var as variable name, it can be a bit confusing after java 10", "url": "https://github.com/checkstyle/checkstyle/pull/8033#discussion_r403513428", "createdAt": "2020-04-04T20:29:12Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "diffHunk": "@@ -130,13 +130,37 @@\n  * </li>\n  * </ul>\n  * <p>\n- * To configure the check so that it ignores getInstance() methods:\n+ * Default Configuration:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalType&quot;/&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test {\n+ *   public void function() {\n+ *     HashMap&lt;String, String&gt; var; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b112a075457f52a3793dc1d57f1935e664fc70"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95b112a075457f52a3793dc1d57f1935e664fc70", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/95b112a075457f52a3793dc1d57f1935e664fc70", "committedDate": "2020-04-04T18:29:56Z", "message": "Issue #7647: Update doc for IllegalType"}, "afterCommit": {"oid": "c4eedd4b01ac7012685fdf9f57309f568afef6b2", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c4eedd4b01ac7012685fdf9f57309f568afef6b2", "committedDate": "2020-04-08T17:37:24Z", "message": "Issue #7647: Update doc for IllegalType"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4eedd4b01ac7012685fdf9f57309f568afef6b2", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c4eedd4b01ac7012685fdf9f57309f568afef6b2", "committedDate": "2020-04-08T17:37:24Z", "message": "Issue #7647: Update doc for IllegalType"}, "afterCommit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a27f3d57485eb4565785455f27e555123ee2fff5", "committedDate": "2020-04-08T18:42:16Z", "message": "Issue #7647: Update doc for IllegalType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTg5NDU5", "url": "https://github.com/checkstyle/checkstyle/pull/8033#pullrequestreview-390589459", "createdAt": "2020-04-09T08:27:08Z", "commit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoyNzowOFrOGDOt2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoyNzo0OVrOGDOvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0MDAyNw==", "bodyText": "typeParam(T) invalid syntax", "url": "https://github.com/checkstyle/checkstyle/pull/8033#discussion_r406040027", "createdAt": "2020-04-09T08:27:08Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "diffHunk": "@@ -130,13 +130,88 @@\n  * </li>\n  * </ul>\n  * <p>\n- * To configure the check so that it ignores getInstance() methods:\n+ * Default Configuration:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalType&quot;/&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // violation\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // violation\n+ *     TreeMap&lt;Integer, String&gt; treemap =\n+ *     new TreeMap&lt;Integer, String&gt;(); // violation\n+ *     Test t; // OK\n+ *     HashMap&lt;String, String&gt; hmap; // violation\n+ *     Queue&lt;Integer&gt; intqueue; // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // violation\n+ *   }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the Check so that particular tokens are checked:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"IllegalType\"&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // OK\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // Ok\n+ *   }\n+ *\n+ *   public &lt;T extends java.util.HashSet&gt; void typeParam(T) {} // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0MDM3Mw==", "bodyText": "please change ignored method name to function as description says", "url": "https://github.com/checkstyle/checkstyle/pull/8033#discussion_r406040373", "createdAt": "2020-04-09T08:27:43Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "diffHunk": "@@ -130,13 +130,88 @@\n  * </li>\n  * </ul>\n  * <p>\n- * To configure the check so that it ignores getInstance() methods:\n+ * Default Configuration:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalType&quot;/&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // violation\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // violation\n+ *     TreeMap&lt;Integer, String&gt; treemap =\n+ *     new TreeMap&lt;Integer, String&gt;(); // violation\n+ *     Test t; // OK\n+ *     HashMap&lt;String, String&gt; hmap; // violation\n+ *     Queue&lt;Integer&gt; intqueue; // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // violation\n+ *   }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the Check so that particular tokens are checked:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"IllegalType\"&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // OK\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // Ok\n+ *   }\n+ *\n+ *   public &lt;T extends java.util.HashSet&gt; void typeParam(T) {} // violation\n+ *\n+ *   public void fullName(TreeSet a) {} // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the Check so that it ignores function() methods:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalType&quot;&gt;\n- *   &lt;property name=&quot;ignoredMethodNames&quot; value=&quot;getInstance&quot;/&gt;\n+ *   &lt;property name=&quot;ignoredMethodNames&quot; value=&quot;function1&quot;/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0MDQyMw==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/8033#discussion_r406040423", "createdAt": "2020-04-09T08:27:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "diffHunk": "@@ -130,13 +130,88 @@\n  * </li>\n  * </ul>\n  * <p>\n- * To configure the check so that it ignores getInstance() methods:\n+ * Default Configuration:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalType&quot;/&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // violation\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // violation\n+ *     TreeMap&lt;Integer, String&gt; treemap =\n+ *     new TreeMap&lt;Integer, String&gt;(); // violation\n+ *     Test t; // OK\n+ *     HashMap&lt;String, String&gt; hmap; // violation\n+ *     Queue&lt;Integer&gt; intqueue; // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // violation\n+ *   }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the Check so that particular tokens are checked:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"IllegalType\"&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class Test extends TreeSet { // OK\n+ *   public &lt;T extends java.util.HashSet&gt; void method() { // violation\n+ *     LinkedHashMap&lt;Integer, String&gt; lhmap =\n+ *     new LinkedHashMap&lt;Integer, String&gt;(); // OK\n+ *\n+ *     java.lang.IllegalArgumentException illegalex; // OK\n+ *     java.util.TreeSet treeset; // Ok\n+ *   }\n+ *\n+ *   public &lt;T extends java.util.HashSet&gt; void typeParam(T) {} // violation\n+ *\n+ *   public void fullName(TreeSet a) {} // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the Check so that it ignores function() methods:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalType&quot;&gt;\n- *   &lt;property name=&quot;ignoredMethodNames&quot; value=&quot;getInstance&quot;/&gt;\n+ *   &lt;property name=&quot;ignoredMethodNames&quot; value=&quot;function1&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <pre>\n+ * public class Test {\n+ *   public HashMap&lt;String, String&gt; function1() { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a27f3d57485eb4565785455f27e555123ee2fff5", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a27f3d57485eb4565785455f27e555123ee2fff5", "committedDate": "2020-04-08T18:42:16Z", "message": "Issue #7647: Update doc for IllegalType"}, "afterCommit": {"oid": "0871a24d5ef376bab29a9cfc40ea49dcda97cb56", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0871a24d5ef376bab29a9cfc40ea49dcda97cb56", "committedDate": "2020-04-09T12:17:22Z", "message": "Issue #7647: Update doc for IllegalType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTU3MDI3", "url": "https://github.com/checkstyle/checkstyle/pull/8033#pullrequestreview-390957027", "createdAt": "2020-04-09T16:40:37Z", "commit": {"oid": "0871a24d5ef376bab29a9cfc40ea49dcda97cb56"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb17286c0276b3c9482de57caad62ad4a9f5e411", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb17286c0276b3c9482de57caad62ad4a9f5e411", "committedDate": "2020-04-10T08:54:50Z", "message": "Issue #7647: Update doc for IllegalType"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0871a24d5ef376bab29a9cfc40ea49dcda97cb56", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0871a24d5ef376bab29a9cfc40ea49dcda97cb56", "committedDate": "2020-04-09T12:17:22Z", "message": "Issue #7647: Update doc for IllegalType"}, "afterCommit": {"oid": "fb17286c0276b3c9482de57caad62ad4a9f5e411", "author": {"user": {"login": "DXTkastb", "name": "Kaustubh Dixit"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb17286c0276b3c9482de57caad62ad4a9f5e411", "committedDate": "2020-04-10T08:54:50Z", "message": "Issue #7647: Update doc for IllegalType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDE1NDQ0", "url": "https://github.com/checkstyle/checkstyle/pull/8033#pullrequestreview-391415444", "createdAt": "2020-04-10T12:24:32Z", "commit": {"oid": "fb17286c0276b3c9482de57caad62ad4a9f5e411"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 659, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}