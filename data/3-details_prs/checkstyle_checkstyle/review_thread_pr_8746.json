{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjQwNTQ1", "number": 8746, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwNTo1MjoxMVrOEbL5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwNTo1MjoxMVrOEbL5jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTQxOTY1OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/overloadmethodsdeclarationorder/InputOverloadMethodsDeclarationOrderRecords.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwNTo1MjoxMVrOHFC0Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNjowMDozM1rOHFrwaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA1MTAxOQ==", "bodyText": "typo", "url": "https://github.com/checkstyle/checkstyle/pull/8746#discussion_r475051019", "createdAt": "2020-08-22T05:52:11Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/overloadmethodsdeclarationorder/InputOverloadMethodsDeclarationOrderRecords.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.coding.overloadmethodsdeclarationorder;\n+\n+/* Config:\n+ *\n+ * default\n+ */\n+public class InputOverloadMethodsDeclarationOrderRecords {\n+    record MyRecord1() {\n+        public void foo(int i) {\n+        }\n+\n+        public void foo(String s) {\n+        }\n+\n+        public void notFoo() {\n+        }\n+\n+        public void foo(int i, String s) { // violation\n+        }\n+\n+        public void foo(String s, int i) {\n+        }\n+    }\n+\n+    record MyRecord2() {\n+        public void foo(int i, String s) {\n+        }\n+\n+        public void foo(String s, int i) {\n+        }\n+\n+        public void foo(int i) {\n+        }\n+         public void notFoo(){\n+\n+         }\n+\n+        public void foo() { // violation\n+        }\n+\n+        public MyRecord2{}\n+\n+\n+    }\n+\n+    class MyClass {\n+        public void foo(int i) {\n+        }\n+\n+        public void notFoo() {\n+        }\n+\n+\n+        public void foo() { // vioaltion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f3cc25919d6ad81f67e5b76334291b4c5b0de88"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyMTgzMg==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8746#discussion_r475721832", "createdAt": "2020-08-24T16:00:33Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/overloadmethodsdeclarationorder/InputOverloadMethodsDeclarationOrderRecords.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.coding.overloadmethodsdeclarationorder;\n+\n+/* Config:\n+ *\n+ * default\n+ */\n+public class InputOverloadMethodsDeclarationOrderRecords {\n+    record MyRecord1() {\n+        public void foo(int i) {\n+        }\n+\n+        public void foo(String s) {\n+        }\n+\n+        public void notFoo() {\n+        }\n+\n+        public void foo(int i, String s) { // violation\n+        }\n+\n+        public void foo(String s, int i) {\n+        }\n+    }\n+\n+    record MyRecord2() {\n+        public void foo(int i, String s) {\n+        }\n+\n+        public void foo(String s, int i) {\n+        }\n+\n+        public void foo(int i) {\n+        }\n+         public void notFoo(){\n+\n+         }\n+\n+        public void foo() { // violation\n+        }\n+\n+        public MyRecord2{}\n+\n+\n+    }\n+\n+    class MyClass {\n+        public void foo(int i) {\n+        }\n+\n+        public void notFoo() {\n+        }\n+\n+\n+        public void foo() { // vioaltion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA1MTAxOQ=="}, "originalCommit": {"oid": "5f3cc25919d6ad81f67e5b76334291b4c5b0de88"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 650, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}