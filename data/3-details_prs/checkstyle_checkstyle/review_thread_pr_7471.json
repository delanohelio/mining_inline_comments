{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzQ5NTEw", "number": 7471, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDowMToyNlrODXshNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODo1OTozMlrODX9GnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTczMjM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDowMToyN1rOFdIhdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMjowMDoxOVrOFeL_rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw==", "bodyText": "Isn't this considered a breaking change? Before this change, you could override destroy in an implementing class and not need to call the super class.\nLook at our own implementation checks like RegexpOnFilename.\nhttps://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.java#L247\nWe override init method but never call super init.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366092663", "createdAt": "2020-01-14T00:01:27Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5NDYyOA==", "bodyText": "this is not a breaking change ... bug as maximum, and even misc (as almost nobody notice any difference). We are not MT tool, this change is literally to make CI happy.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366094628", "createdAt": "2020-01-14T00:08:58Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMDA3Mg==", "bodyText": "Then this will make things weirder when we do become a MT tool. Implementation of MT will not be marked as breaking compatibility but a new feature and then we are expecting users to just know that they should be calling the super destroy. It is going to be up to us now to remember to recheck all checks for this when we get to it.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366100072", "createdAt": "2020-01-14T00:29:25Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwNjA2NA==", "bodyText": "it is ok, eventually it become clear and all Checks become fixed. This should not block us now.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366106064", "createdAt": "2020-01-14T00:54:31Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNzQ0NA==", "bodyText": "I still think this makes it a breaking change, as well as bug.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366517444", "createdAt": "2020-01-14T19:02:30Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyNDMyNg==", "bodyText": "we can put on it breaking label if you wish .... I just try to not attract that much attention to this code change for plugin maintainers.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366524326", "createdAt": "2020-01-14T19:17:36Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0MzYxNw==", "bodyText": "If we declare this as a breaking change, then we need to determine which methods we would also do this for. As showed above for init, we don't call super for it. If we break for destroy, I feel we should break for all of them to make it easier to remember. I would think we would want to make this clear in xdoc/javadoc that they should be calling the super if they ever override the class' method.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366543617", "createdAt": "2020-01-14T19:58:35Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0NDc3NA==", "bodyText": "I just try to not attract that much attention to this code change for plugin maintainers\n\nHow about we ask a plugin maintainer if they consider this a breaking change?", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366544774", "createdAt": "2020-01-14T20:01:08Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY4NTg4NA==", "bodyText": "I do not know what for such methods .... I do not want to explain user how to use them. We will come back to this ones we start finalizing our API.\n\nif they consider this a breaking change?\n\nI do not know such plugins. I would make this issue as \"misc\".", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366685884", "createdAt": "2020-01-15T03:52:44Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5ODA0Mg==", "bodyText": "Is it possible to make a check to verify that either this method is not overridden, or it is overridden and calls the base class method of the same name?", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r367098042", "createdAt": "2020-01-15T20:45:37Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5ODEyNw==", "bodyText": "We can to something like this https://stackoverflow.com/a/34180574/1015848 in separate issue.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r367198127", "createdAt": "2020-01-16T02:00:19Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java", "diffHunk": "@@ -125,7 +125,7 @@ public void init() {\n      * Destroy the check. It is being retired from service.\n      */\n     public void destroy() {\n-        // No code by default, should be overridden only by demand at subclasses\n+        context.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MjY2Mw=="}, "originalCommit": {"oid": "ec49fdfc9295332f1a370a9e099ecc3b1c587ae1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDQ0OTU3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODo1OTozMlrOFdiXZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOToxNDozMVrOFdiyTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjA2OQ==", "bodyText": "But the destroy methods does do something now. That was the point of me saying it was a breaking change.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366516069", "createdAt": "2020-01-14T18:59:32Z", "author": {"login": "rnveach"}, "path": "pom.xml", "diffHunk": "@@ -1866,6 +1866,13 @@\n                 <!-- needed for SuppressWarningsFilter -->\n                 <param>com.puppycrawl.tools.checkstyle.filters.SuppressWarningsFilterTest</param>\n               </targetTests>\n+              <excludedMethods>\n+                <!-- destroy method was added in case module had to free up resources\n+                before ending, but currently it does nothing, so we cannot check it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01e376b888fb9e7af37152df93d2d2cd720b214"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyMjk1Nw==", "bodyText": "wording is changed, please recheck.", "url": "https://github.com/checkstyle/checkstyle/pull/7471#discussion_r366522957", "createdAt": "2020-01-14T19:14:31Z", "author": {"login": "romani"}, "path": "pom.xml", "diffHunk": "@@ -1866,6 +1866,13 @@\n                 <!-- needed for SuppressWarningsFilter -->\n                 <param>com.puppycrawl.tools.checkstyle.filters.SuppressWarningsFilterTest</param>\n               </targetTests>\n+              <excludedMethods>\n+                <!-- destroy method was added in case module had to free up resources\n+                before ending, but currently it does nothing, so we cannot check it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjA2OQ=="}, "originalCommit": {"oid": "c01e376b888fb9e7af37152df93d2d2cd720b214"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1508, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}