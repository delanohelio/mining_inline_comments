{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MzczNTM3", "number": 7868, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjoxMzo0MlrODo5_Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxNTowNFrODpFaHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjE5NjkwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjoxMzo0MlrOF3v5-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNToyMjozMlrOF32tHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDg4OA==", "bodyText": "Please alphabetize.", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394000888", "createdAt": "2020-03-17T22:13:42Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -106,7 +107,8 @@\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n-                    \"SummaryJavadoc\"\n+                    \"SummaryJavadoc\",\n+                    \"JavadocStyle\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMjI4NA==", "bodyText": "Will fix", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394112284", "createdAt": "2020-03-18T05:22:32Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -106,7 +107,8 @@\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n-                    \"SummaryJavadoc\"\n+                    \"SummaryJavadoc\",\n+                    \"JavadocStyle\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDg4OA=="}, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjE5ODg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjoxNDoyOFrOF3v7Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNToyMjo0MFrOF32tNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTE5OQ==", "bodyText": "suppression -> suppressions", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394001199", "createdAt": "2020-03-17T22:14:28Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -162,7 +159,7 @@\n  * </li>\n  * </ul>\n  * <p>\n- * Also, the filter does not support Javadoc checks:\n+ * Also, the filter does not support suppression inside javadoc reported by Javadoc checks:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMjMwOQ==", "bodyText": "Will fix", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394112309", "createdAt": "2020-03-18T05:22:40Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -162,7 +159,7 @@\n  * </li>\n  * </ul>\n  * <p>\n- * Also, the filter does not support Javadoc checks:\n+ * Also, the filter does not support suppression inside javadoc reported by Javadoc checks:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTE5OQ=="}, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjIwMDM0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjoxNToxM1rOF3v8Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTozMDowN1rOF320Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTQ3NA==", "bodyText": "It is possible we will have other checks join this list. Please move it to a field.", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394001474", "createdAt": "2020-03-17T22:15:13Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -203,13 +205,19 @@ protected String getResourceLocation() {\n \n     @Test\n     public void validateIncompatibleJavadocCheckNames() throws IOException {\n-        final Set<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n+        // subclasses of AbstractJavadocCheck\n+        final Stream<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n                 .stream()\n-                .filter(AbstractJavadocCheck.class::isAssignableFrom)\n+                .filter(AbstractJavadocCheck.class::isAssignableFrom);\n+        // hardcoded exceptions, will eventually include JavadocMethodCheck and JavadocTypeCheck\n+        final Stream<Class<?>> otherJavadocCheckNames = Stream.of(JavadocStyleCheck.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNDA1OA==", "bodyText": "Ok, I'll move it out as a constant next to the definition of INCOMPATIBLE_JAVADOC_CHECK_NAMES", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394114058", "createdAt": "2020-03-18T05:30:07Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -203,13 +205,19 @@ protected String getResourceLocation() {\n \n     @Test\n     public void validateIncompatibleJavadocCheckNames() throws IOException {\n-        final Set<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n+        // subclasses of AbstractJavadocCheck\n+        final Stream<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n                 .stream()\n-                .filter(AbstractJavadocCheck.class::isAssignableFrom)\n+                .filter(AbstractJavadocCheck.class::isAssignableFrom);\n+        // hardcoded exceptions, will eventually include JavadocMethodCheck and JavadocTypeCheck\n+        final Stream<Class<?>> otherJavadocCheckNames = Stream.of(JavadocStyleCheck.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTQ3NA=="}, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjIwMzgxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjoxNjoyN1rOF3v-TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTozMjo1NVrOF3224A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTk5Ng==", "bodyText": "Do we need 2 streams? Does it make sense to combine them and the assignment of the Set?", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394001996", "createdAt": "2020-03-17T22:16:27Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -203,13 +205,19 @@ protected String getResourceLocation() {\n \n     @Test\n     public void validateIncompatibleJavadocCheckNames() throws IOException {\n-        final Set<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n+        // subclasses of AbstractJavadocCheck\n+        final Stream<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n                 .stream()\n-                .filter(AbstractJavadocCheck.class::isAssignableFrom)\n+                .filter(AbstractJavadocCheck.class::isAssignableFrom);\n+        // hardcoded exceptions, will eventually include JavadocMethodCheck and JavadocTypeCheck\n+        final Stream<Class<?>> otherJavadocCheckNames = Stream.of(JavadocStyleCheck.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNDc4NA==", "bodyText": "Since the latter stream is being moved to a field, I'll just revert the former stream to Set and work on that as it's closer to the original behavior anyway.", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394114784", "createdAt": "2020-03-18T05:32:55Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -203,13 +205,19 @@ protected String getResourceLocation() {\n \n     @Test\n     public void validateIncompatibleJavadocCheckNames() throws IOException {\n-        final Set<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n+        // subclasses of AbstractJavadocCheck\n+        final Stream<Class<?>> abstractJavadocCheckNames = CheckUtil.getCheckstyleChecks()\n                 .stream()\n-                .filter(AbstractJavadocCheck.class::isAssignableFrom)\n+                .filter(AbstractJavadocCheck.class::isAssignableFrom);\n+        // hardcoded exceptions, will eventually include JavadocMethodCheck and JavadocTypeCheck\n+        final Stream<Class<?>> otherJavadocCheckNames = Stream.of(JavadocStyleCheck.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMTk5Ng=="}, "originalCommit": {"oid": "9cc124d97c86181d01dddf337906c07e0fe0a1d4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDA1MTgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxMDoyMlrOF4CHtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozMzoxOVrOF4C4cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5OTMxOA==", "bodyText": "This was not alphabetized.", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394299318", "createdAt": "2020-03-18T12:10:22Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -189,6 +186,9 @@\n  * <li>\n  * SummaryJavadoc\n  * </li>\n+ * <li>\n+ * JavadocStyle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxMTc5NQ==", "bodyText": "Oops, missed that out. Fixed", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394311795", "createdAt": "2020-03-18T12:33:19Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -189,6 +186,9 @@\n  * <li>\n  * SummaryJavadoc\n  * </li>\n+ * <li>\n+ * JavadocStyle", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5OTMxOA=="}, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDA1NDE4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxMTowMFrOF4CJOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozMzozM1rOF4C45A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5OTcwNA==", "bodyText": "remove the will eventually line.", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394299704", "createdAt": "2020-03-18T12:11:00Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -102,13 +102,20 @@\n                     \"AtclauseOrder\",\n                     \"JavadocBlockTagLocation\",\n                     \"JavadocParagraph\",\n+                    \"JavadocStyle\",\n                     \"JavadocTagContinuationIndentation\",\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n                     \"SummaryJavadoc\"\n     )));\n \n+    // Older regex-based checks that are under INCOMPATIBLE_JAVADOC_CHECK_NAMES\n+    // but not subclasses of AbstractJavadocCheck.\n+    // Will eventually include JavadocMethodCheck and JavadocTypeCheck.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxMTkwOA==", "bodyText": "Fixed", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394311908", "createdAt": "2020-03-18T12:33:33Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -102,13 +102,20 @@\n                     \"AtclauseOrder\",\n                     \"JavadocBlockTagLocation\",\n                     \"JavadocParagraph\",\n+                    \"JavadocStyle\",\n                     \"JavadocTagContinuationIndentation\",\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n                     \"SummaryJavadoc\"\n     )));\n \n+    // Older regex-based checks that are under INCOMPATIBLE_JAVADOC_CHECK_NAMES\n+    // but not subclasses of AbstractJavadocCheck.\n+    // Will eventually include JavadocMethodCheck and JavadocTypeCheck.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5OTcwNA=="}, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDA2ODE0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxNTowNFrOF4CR0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozNDowNVrOF4C53Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwMTkwNg==", "bodyText": "ADDITIONAL does not really explain what this is. How about REGEXP_JAVADOC_CHECKS?", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394301906", "createdAt": "2020-03-18T12:15:04Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -102,13 +102,20 @@\n                     \"AtclauseOrder\",\n                     \"JavadocBlockTagLocation\",\n                     \"JavadocParagraph\",\n+                    \"JavadocStyle\",\n                     \"JavadocTagContinuationIndentation\",\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n                     \"SummaryJavadoc\"\n     )));\n \n+    // Older regex-based checks that are under INCOMPATIBLE_JAVADOC_CHECK_NAMES\n+    // but not subclasses of AbstractJavadocCheck.\n+    // Will eventually include JavadocMethodCheck and JavadocTypeCheck.\n+    private static final Set<Class<?>> ADDITIONAL_JAVADOC_CHECKS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxMjE1Nw==", "bodyText": "Sounds good, changed", "url": "https://github.com/checkstyle/checkstyle/pull/7868#discussion_r394312157", "createdAt": "2020-03-18T12:34:05Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -102,13 +102,20 @@\n                     \"AtclauseOrder\",\n                     \"JavadocBlockTagLocation\",\n                     \"JavadocParagraph\",\n+                    \"JavadocStyle\",\n                     \"JavadocTagContinuationIndentation\",\n                     \"MissingDeprecated\",\n                     \"NonEmptyAtclauseDescription\",\n                     \"SingleLineJavadoc\",\n                     \"SummaryJavadoc\"\n     )));\n \n+    // Older regex-based checks that are under INCOMPATIBLE_JAVADOC_CHECK_NAMES\n+    // but not subclasses of AbstractJavadocCheck.\n+    // Will eventually include JavadocMethodCheck and JavadocTypeCheck.\n+    private static final Set<Class<?>> ADDITIONAL_JAVADOC_CHECKS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwMTkwNg=="}, "originalCommit": {"oid": "ac7a92d076f8fc9aa37b9a68882c057feb8148ed"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1199, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}