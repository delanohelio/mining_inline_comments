{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MDI2ODYz", "number": 7513, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDowNDo1OFrODbOyJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDowNDo1OFrODbOyJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODgwMzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDowNDo1OVrOFimF3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTowNzowMVrOFixAWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng==", "bodyText": "Maybe I am confused, but this is changing from number of children to number of siblings?\nast.getParent().getNumberOfChildren() != 1\nto\nast.hasNextSibling() || ast.getParent().getFirstChild() != ast\nI am not grasping the equality of this.", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371819996", "createdAt": "2020-01-28T14:04:59Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "diffHunk": "@@ -135,12 +135,21 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST parent = ast.getParent();\n         if (parent.getType() == TokenTypes.SLIST\n-                && (!allowInSwitchCase\n-                    || parent.getNumberOfChildren() != 1)) {\n+                && (!allowInSwitchCase || hasSiblings(ast))) {\n             log(ast, MSG_KEY_BLOCK_NESTED);\n         }\n     }\n \n+    /**\n+     * Checks whether the AST node has any siblings or not.\n+     *\n+     * @param ast node to examine\n+     * @return {@code true} if the node has one or more siblings\n+     */\n+    private static boolean hasSiblings(DetailAST ast) {\n+        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9893e7cca80f05860f245ea737a5889c9a2c1e8f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTkxNTk1Mw==", "bodyText": "The ast parent can't have zero children, as it already have one child: the ast itself.\nThis expression should be ast.getParent().getNumberOfChildren()  > 1.\nThe first version of this method was named isLonelyChild(ast), but was inverted later to avoid negation in (!allowInSwitchCase || !isLonelyChild(ast)).", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371915953", "createdAt": "2020-01-28T16:33:23Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "diffHunk": "@@ -135,12 +135,21 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST parent = ast.getParent();\n         if (parent.getType() == TokenTypes.SLIST\n-                && (!allowInSwitchCase\n-                    || parent.getNumberOfChildren() != 1)) {\n+                && (!allowInSwitchCase || hasSiblings(ast))) {\n             log(ast, MSG_KEY_BLOCK_NESTED);\n         }\n     }\n \n+    /**\n+     * Checks whether the AST node has any siblings or not.\n+     *\n+     * @param ast node to examine\n+     * @return {@code true} if the node has one or more siblings\n+     */\n+    private static boolean hasSiblings(DetailAST ast) {\n+        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}, "originalCommit": {"oid": "9893e7cca80f05860f245ea737a5889c9a2c1e8f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MjUzMQ==", "bodyText": "Thanks, it is clearer to me now.\n\nast.getParent().getFirstChild() != ast\n\nSince we are looking for a lonely child, would it be better to swap the above with ast.getPreviousSibling() != null? Then we are only looking at the next/previous sibling and not involving the parent.", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371962531", "createdAt": "2020-01-28T17:55:36Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "diffHunk": "@@ -135,12 +135,21 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST parent = ast.getParent();\n         if (parent.getType() == TokenTypes.SLIST\n-                && (!allowInSwitchCase\n-                    || parent.getNumberOfChildren() != 1)) {\n+                && (!allowInSwitchCase || hasSiblings(ast))) {\n             log(ast, MSG_KEY_BLOCK_NESTED);\n         }\n     }\n \n+    /**\n+     * Checks whether the AST node has any siblings or not.\n+     *\n+     * @param ast node to examine\n+     * @return {@code true} if the node has one or more siblings\n+     */\n+    private static boolean hasSiblings(DetailAST ast) {\n+        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}, "originalCommit": {"oid": "9893e7cca80f05860f245ea737a5889c9a2c1e8f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5ODgxMQ==", "bodyText": "Since we are looking for a lonely child, would it be better to swap the above with ast.getPreviousSibling() != null? Then we are only looking at the next/previous sibling and not involving the parent.\n\nThat makes sense. The method is rewritten.", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371998811", "createdAt": "2020-01-28T19:07:01Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "diffHunk": "@@ -135,12 +135,21 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST parent = ast.getParent();\n         if (parent.getType() == TokenTypes.SLIST\n-                && (!allowInSwitchCase\n-                    || parent.getNumberOfChildren() != 1)) {\n+                && (!allowInSwitchCase || hasSiblings(ast))) {\n             log(ast, MSG_KEY_BLOCK_NESTED);\n         }\n     }\n \n+    /**\n+     * Checks whether the AST node has any siblings or not.\n+     *\n+     * @param ast node to examine\n+     * @return {@code true} if the node has one or more siblings\n+     */\n+    private static boolean hasSiblings(DetailAST ast) {\n+        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}, "originalCommit": {"oid": "9893e7cca80f05860f245ea737a5889c9a2c1e8f"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1530, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}