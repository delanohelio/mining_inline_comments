{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MzM4NjM0", "number": 7972, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzowOToxNFrODsJ7OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwOTowODowMlrODsTF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI2NTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzowOToxNFrOF86aMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzowOToxNFrOF86aMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNTg1OQ==", "bodyText": "can add a space, // body", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399415859", "createdAt": "2020-03-27T17:09:14Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -62,6 +62,40 @@\n  * </li>\n  * </ul>\n  * <p>\n+ * To configure check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ThrowsCount\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                             ArrayIndexOutOfBoundsException,\n+ *                             StringIndexOutOfBoundsException,\n+ *                             IllegalStateException,\n+ *                             NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *             NumberFormatException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI2ODQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxMDowM1rOF86cDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxMDowM1rOF86cDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjMzMw==", "bodyText": "could add a comment, // ok, private methods ignored", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399416333", "createdAt": "2020-03-27T17:10:03Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -62,6 +62,40 @@\n  * </li>\n  * </ul>\n  * <p>\n+ * To configure check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ThrowsCount\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                             ArrayIndexOutOfBoundsException,\n+ *                             StringIndexOutOfBoundsException,\n+ *                             IllegalStateException,\n+ *                             NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *             NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                             ClassNotFoundException,\n+ *                             IllegalAccessException,\n+ *                             ArithmeticException,\n+ *                             ClassCastException { // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI4NzU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNTowN1rOF86n_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyNjo1MVrOF87DCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTM4OQ==", "bodyText": "can add a space, // body", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399419389", "createdAt": "2020-03-27T17:15:07Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyNjMxNA==", "bodyText": "Done @esilkensen", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399426314", "createdAt": "2020-03-27T17:26:51Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTM4OQ=="}, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI4ODc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNTozMFrOF86ozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyNjo1NVrOF87DOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTU5OA==", "bodyText": "could add a comment, // ok, private methods ignored", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399419598", "createdAt": "2020-03-27T17:15:30Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyNjM2Mg==", "bodyText": "Done @esilkensen", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399426362", "createdAt": "2020-03-27T17:26:55Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTU5OA=="}, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI5MDU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNjowMVrOF86p_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyNjo1OFrOF87DVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTkwMA==", "bodyText": "can add a space, // body", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399419900", "createdAt": "2020-03-27T17:16:01Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyNjM4OA==", "bodyText": "Done @esilkensen", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399426388", "createdAt": "2020-03-27T17:26:58Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTkwMA=="}, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI5MTE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNjoxMFrOF86qYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyODoxNFrOF87GNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMDAwMw==", "bodyText": "can add a space, // body", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399420003", "createdAt": "2020-03-27T17:16:10Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,\n+ *                                 NullPointerException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyNjQxOA==", "bodyText": "Done @esilkensen", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399426418", "createdAt": "2020-03-27T17:27:01Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,\n+ *                                 NullPointerException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMDAwMw=="}, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyNzEyNQ==", "bodyText": "thanks - looks like this is the last one", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399427125", "createdAt": "2020-03-27T17:28:14Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         //body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,\n+ *                                 NullPointerException { // ok\n+ *         //body", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMDAwMw=="}, "originalCommit": {"oid": "202075cdecce08645475c614db8d9b81945ac5df"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjQxODYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzo1MDo0N1rOF877qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODozNjoyMVrOF89fSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MDgxMQ==", "bodyText": "there are two successTest() methods in this example.\nmaybe these examples could be improved with more realistic names? I don't mean to spend a lot of time on it, but instead of Test, failTest, successTest etc.", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399440811", "createdAt": "2020-03-27T17:50:47Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok, private methods are ignored\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cca9504b26f7ef8c432dde33a5f7990d9f2150"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1MTE5OQ==", "bodyText": "Hey @esilkensen changed the function names", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399451199", "createdAt": "2020-03-27T18:08:43Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok, private methods are ignored\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MDgxMQ=="}, "originalCommit": {"oid": "f1cca9504b26f7ef8c432dde33a5f7990d9f2150"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1ODMzNg==", "bodyText": "I was wondering about something a little more like you might see in real code or Java tutorials or that sort of thing, like instead of Test, myFunction, and myFunc maybe Writer, writeList, etc. -- again, not meaning to spend a lot of time on it, and I will also pass on to the next reviewer for their thoughts, if they are OK as is, then I am too.", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399458336", "createdAt": "2020-03-27T18:21:33Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok, private methods are ignored\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MDgxMQ=="}, "originalCommit": {"oid": "f1cca9504b26f7ef8c432dde33a5f7990d9f2150"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MzQyMQ==", "bodyText": "There is no functionality i am performing in those functions so i gave that name @esilkensen", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399463421", "createdAt": "2020-03-27T18:30:52Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok, private methods are ignored\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MDgxMQ=="}, "originalCommit": {"oid": "f1cca9504b26f7ef8c432dde33a5f7990d9f2150"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2NjMxMw==", "bodyText": "right, I don't mean to suggest to include functionality or implementation of the methods, only to think for illustrative purposes of the examples if there are names that may be better than myFunction and myFunc. after CI passes I will pass on to another reviewer.", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399466313", "createdAt": "2020-03-27T18:36:21Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -70,13 +104,72 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws IllegalStateException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 NullPointerException { // violation, max allowed is 2\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // ok, private methods are ignored\n+ *         // body\n+ *     }\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check so that it doesn't skip private methods:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ThrowsCount\"&gt;\n  *   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public void failTest() throws CloneNotSupportedException,\n+ *                                 ArrayIndexOutOfBoundsException,\n+ *                                 StringIndexOutOfBoundsException,\n+ *                                 IllegalStateException,\n+ *                                 NullPointerException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     public void successTest() throws ArithmeticException,\n+ *                                 NumberFormatException { // ok\n+ *         // body\n+ *     }\n+ *\n+ *     private void privateTest() throws CloneNotSupportedException,\n+ *                                 ClassNotFoundException,\n+ *                                 IllegalAccessException,\n+ *                                 ArithmeticException,\n+ *                                 ClassCastException { // violation, max allowed is 4\n+ *         // body\n+ *     }\n+ *\n+ *     private void successTest() throws IllegalStateException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MDgxMQ=="}, "originalCommit": {"oid": "f1cca9504b26f7ef8c432dde33a5f7990d9f2150"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzc2NzM5OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_design.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwOTowNzo1NVrOF9IEBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMjowMDo1MlrOF9I-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzOTU1OA==", "bodyText": "indentation should be 2 spaces", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399639558", "createdAt": "2020-03-28T09:07:55Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_design.xml", "diffHunk": "@@ -855,7 +889,32 @@ public class Foo { // OK, only one top-level class\n   &lt;property name=&quot;max&quot; value=&quot;2&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+        <p>\n+            Example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9eaff5327865b32098dca86c2521d42f7df6ea"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1NDQ4Mg==", "bodyText": "Done @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399654482", "createdAt": "2020-03-28T12:00:52Z", "author": {"login": "harsh-kukreja"}, "path": "src/xdocs/config_design.xml", "diffHunk": "@@ -855,7 +889,32 @@ public class Foo { // OK, only one top-level class\n   &lt;property name=&quot;max&quot; value=&quot;2&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+        <p>\n+            Example:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzOTU1OA=="}, "originalCommit": {"oid": "1a9eaff5327865b32098dca86c2521d42f7df6ea"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzc2NzQyOnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_design.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwOTowODowMlrOF9IECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMjowMDo1NFrOF9I-VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzOTU2Mw==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399639563", "createdAt": "2020-03-28T09:08:02Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_design.xml", "diffHunk": "@@ -864,6 +923,39 @@ public class Foo { // OK, only one top-level class\n   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+        <p>\n+            Example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9eaff5327865b32098dca86c2521d42f7df6ea"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1NDQ4NA==", "bodyText": "Done @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7972#discussion_r399654484", "createdAt": "2020-03-28T12:00:54Z", "author": {"login": "harsh-kukreja"}, "path": "src/xdocs/config_design.xml", "diffHunk": "@@ -864,6 +923,39 @@ public class Foo { // OK, only one top-level class\n   &lt;property name=&quot;ignorePrivateMethods&quot; value=&quot;false&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+        <p>\n+            Example:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzOTU2Mw=="}, "originalCommit": {"oid": "1a9eaff5327865b32098dca86c2521d42f7df6ea"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1317, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}