{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzM2MDYx", "number": 8421, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjowMToyOVrOENiTWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjowMToyOVrOENiTWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjI4OTUyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjowMToyOVrOGwPiYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQxMzozOTo1NVrOGzoUsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTM5Mg==", "bodyText": "what force you do this test ?\nWe need to test all real inputs. If something is missed it is better to extend Inputs.", "url": "https://github.com/checkstyle/checkstyle/pull/8421#discussion_r453239392", "createdAt": "2020-07-11T22:01:29Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "diffHunk": "@@ -277,4 +278,20 @@ public void testForEachChild() {\n         assertEquals(secondSibling, firstChild, \"Mismatched child node\");\n     }\n \n+    @Test\n+    public void testIsTypeDeclaration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e759a60f74f65c163feb25fe2155ad0bc6c742a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MzgxOA==", "bodyText": "Adding testIsTypeDeclaration() to TokenUtil reduces coverage by 0.03, so I added this test.  What inputs should I extend in this case to restore coverage?", "url": "https://github.com/checkstyle/checkstyle/pull/8421#discussion_r453443818", "createdAt": "2020-07-13T05:34:29Z", "author": {"login": "nmancus1"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "diffHunk": "@@ -277,4 +278,20 @@ public void testForEachChild() {\n         assertEquals(secondSibling, firstChild, \"Mismatched child node\");\n     }\n \n+    @Test\n+    public void testIsTypeDeclaration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTM5Mg=="}, "originalCommit": {"oid": "e759a60f74f65c163feb25fe2155ad0bc6c742a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY5MjE1Mg==", "bodyText": "Maybe a case where it makes sense skipping the test? Either way seems ok to me", "url": "https://github.com/checkstyle/checkstyle/pull/8421#discussion_r456692152", "createdAt": "2020-07-17T22:00:50Z", "author": {"login": "esilkensen"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "diffHunk": "@@ -277,4 +278,20 @@ public void testForEachChild() {\n         assertEquals(secondSibling, firstChild, \"Mismatched child node\");\n     }\n \n+    @Test\n+    public void testIsTypeDeclaration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTM5Mg=="}, "originalCommit": {"oid": "e759a60f74f65c163feb25fe2155ad0bc6c742a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczMzE4Ng==", "bodyText": "@esilkensen I'm just not sure how else to test this with actual code, since none of the other methods in TokenUtilTest.java use real input.  Until I use this method more (likely in the records check updates), I don't think it is getting exercised enough with real input to get enough coverage.", "url": "https://github.com/checkstyle/checkstyle/pull/8421#discussion_r456733186", "createdAt": "2020-07-18T01:35:17Z", "author": {"login": "nmancus1"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "diffHunk": "@@ -277,4 +278,20 @@ public void testForEachChild() {\n         assertEquals(secondSibling, firstChild, \"Mismatched child node\");\n     }\n \n+    @Test\n+    public void testIsTypeDeclaration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTM5Mg=="}, "originalCommit": {"oid": "e759a60f74f65c163feb25fe2155ad0bc6c742a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc5MTIxNw==", "bodyText": "I call back my point .... I do not know how resolve it.\nIt is good to use Util methods, but in the same time we use pitest split to speedup pitest execution and this force us to write non real test cases. So if new Check start to use this method we will miss a big chunk of test that Check should have to cover cases of different type.\nProbably I should demand to copy all Util methods in code of Check on first implmentation, make sure that pitest is happy and only then use Util methods.\nOr we should think on to move Utils pitest in same pitest execution as Checks.", "url": "https://github.com/checkstyle/checkstyle/pull/8421#discussion_r456791217", "createdAt": "2020-07-18T13:39:55Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilTest.java", "diffHunk": "@@ -277,4 +278,20 @@ public void testForEachChild() {\n         assertEquals(secondSibling, firstChild, \"Mismatched child node\");\n     }\n \n+    @Test\n+    public void testIsTypeDeclaration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTM5Mg=="}, "originalCommit": {"oid": "e759a60f74f65c163feb25fe2155ad0bc6c742a7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 881, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}