{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjI1MDQz", "number": 8091, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTowOToyM1rODxmJMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1MTo1MFrODzckBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzMxNzYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTowOToyM1rOGFJqiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1ODo1NlrOGFmHQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDQwOA==", "bodyText": "default example should also show default values for properties, if applicable. Here allowedAnnotations and scope default values are missing", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408054408", "createdAt": "2020-04-14T11:09:23Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwOTA2OA==", "bodyText": "Do you mean I need to include violations of allowed annotations and scope in this example?", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408109068", "createdAt": "2020-04-14T12:49:16Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDQwOA=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMDUxNA==", "bodyText": "Done. I have made the changes according to my understanding. Please have a look and let me know if it's correct or not.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408520514", "createdAt": "2020-04-15T00:58:56Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDQwOA=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzMyMTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToxMDoyN1rOGFJstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOTozNzozNFrOGIL4lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ==", "bodyText": "why here is violation if scope is set to private?", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408054965", "createdAt": "2020-04-14T11:10:27Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxMDkyMA==", "bodyText": "I ran MissingJavadocMethod check on such an example. It threw a violation on methods with public scope too. Hence I have marked it as a violation in the example.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408510920", "createdAt": "2020-04-15T00:24:02Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg4MzY1OQ==", "bodyText": "This seems weird. In case this is a valid behavior, it should be added in description for config. If not, please create new issue.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410883659", "createdAt": "2020-04-19T11:34:00Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzODkwOA==", "bodyText": "Well as specified in the documentation\n\nSpecify the visibility scope where Javadoc comments are checked.\n\nscope must be checked only on the given files. So I don't think this is the intended behaviour. Should I create a issue for this?", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410938908", "createdAt": "2020-04-19T16:17:48Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NjI5NA==", "bodyText": "Yes. Please note that issue should follow issue template.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410966294", "createdAt": "2020-04-19T18:48:11Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NDY2MA==", "bodyText": "Okayy", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410974660", "createdAt": "2020-04-19T19:33:41Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NzkyMQ==", "bodyText": "@Gaurav-Punjabi please remove this line (public method and violation there) to avoid confusion for users", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r411197921", "createdAt": "2020-04-20T08:39:14Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIzNjUwMQ==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r411236501", "createdAt": "2020-04-20T09:37:34Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -112,13 +112,35 @@\n  * &lt;module name=\"MissingJavadocMethod\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   public Test() {} // violation, missing javadoc for constructor\n+ *   public void test() {} // violation, missing javadoc for method\n+ *   &#47;**\n+ *    * Some description here.\n+ *    *&#47;\n+ *   public void test2() {}\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n  * To configure the check for {@code private} scope:\n  * </p>\n  * <pre>\n  * &lt;module name=\"MissingJavadocMethod\"&gt;\n  *   &lt;property name=\"scope\" value=\"private\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test() {} // violation, the public method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDk2NQ=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzMyNTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToxMTo1MFrOGFJvNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1OTowN1rOGFmHhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NTYwNw==", "bodyText": "extra space", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408055607", "createdAt": "2020-04-14T11:11:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +171,34 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example: </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMDU4MQ==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408520581", "createdAt": "2020-04-15T00:59:07Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +171,34 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example: </p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NTYwNw=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzMyNzkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToxMjo0NlrOGFJw9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1OToxM1rOGFmHnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NjA1Mg==", "bodyText": "example for allowedAnnotations property is missing", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408056052", "createdAt": "2020-04-14T11:12:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +171,34 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMDYwNQ==", "bodyText": "Added", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r408520605", "createdAt": "2020-04-15T00:59:13Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +171,34 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example: </p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NjA1Mg=="}, "originalCommit": {"oid": "2bcd14a801c98ff4b2245a32c197052b3ac5728d"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjAwMzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMTozNDo1NVrOGH2Www==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxNTowM1rOGH5sUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg4Mzc3OQ==", "bodyText": "violations -> violation", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410883779", "createdAt": "2020-04-19T11:34:55Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check with annotations that allow missed documentation:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowedAnnotations\" value=\"Override,Deprecated\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *     public void test() {} // violation, method is missing javadoc\n+ *     &#64;Override\n+ *     public void test1() {} // OK\n+ *     &#64;Deprecated\n+ *     public void test2() {} // OK\n+ *     &#64;SuppressWarnings\n+ *     public void test3() {} // violations, method is missing javadoc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4a140370b4d51811e7b642c5d0d56cd0495ea45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzODQ0OA==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410938448", "createdAt": "2020-04-19T16:15:03Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check with annotations that allow missed documentation:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowedAnnotations\" value=\"Override,Deprecated\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *     public void test() {} // violation, method is missing javadoc\n+ *     &#64;Override\n+ *     public void test1() {} // OK\n+ *     &#64;Deprecated\n+ *     public void test2() {} // OK\n+ *     &#64;SuppressWarnings\n+ *     public void test3() {} // violations, method is missing javadoc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg4Mzc3OQ=="}, "originalCommit": {"oid": "e4a140370b4d51811e7b642c5d0d56cd0495ea45"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjcxNjY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1MDoxMVrOGH7alQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTo0OTozMVrOGH8FeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NjY3Nw==", "bodyText": "ok -> OK ay both lines above\nto make it consistent", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410966677", "createdAt": "2020-04-19T18:50:11Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -129,6 +160,18 @@\n  *   &lt;property name=\"excludeScope\" value=\"protected\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private void test1() {} // violation, the private method is missing javadoc\n+ *   &#47;**\n+ *    * Some description here\n+ *    *&#47;\n+ *   private void test1() {} // ok\n+ *   protected void test2() {} // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NzY1Nw==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410977657", "createdAt": "2020-04-19T19:49:31Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -129,6 +160,18 @@\n  *   &lt;property name=\"excludeScope\" value=\"protected\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private void test1() {} // violation, the private method is missing javadoc\n+ *   &#47;**\n+ *    * Some description here\n+ *    *&#47;\n+ *   private void test1() {} // ok\n+ *   protected void test2() {} // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NjY3Nw=="}, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjcxNzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1MDoyNFrOGH7ayA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTo0OTozNFrOGH8FgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NjcyOA==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410966728", "createdAt": "2020-04-19T18:50:24Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NzY2NA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410977664", "createdAt": "2020-04-19T19:49:34Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NjcyOA=="}, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjcxNzU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1MDo0MVrOGH7a-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTo0OTozOFrOGH8Fmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2Njc3Ng==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410966776", "createdAt": "2020-04-19T18:50:41Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NzY5MA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410977690", "createdAt": "2020-04-19T19:49:38Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2Njc3Ng=="}, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjcxOTQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1MTo1MFrOGH7bzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTo0OTo0MVrOGH8Fng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2Njk5MQ==", "bodyText": "for lines above indentation is 4, but in other examples it is 2.\nPlease make it 2 here as well to keep all the code consistent", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410966991", "createdAt": "2020-04-19T18:51:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check with annotations that allow missed documentation:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowedAnnotations\" value=\"Override,Deprecated\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *     public void test() {} // violation, method is missing javadoc\n+ *     &#64;Override\n+ *     public void test1() {} // OK\n+ *     &#64;Deprecated\n+ *     public void test2() {} // OK\n+ *     &#64;SuppressWarnings\n+ *     public void test3() {} // violation, method is missing javadoc\n+ *     &#47;**\n+ *      * Some description here.\n+ *      *&#47;\n+ *     &#64;SuppressWarnings\n+ *     public void test4() {} // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NzY5NA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8091#discussion_r410977694", "createdAt": "2020-04-19T19:49:41Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocMethodCheck.java", "diffHunk": "@@ -137,6 +180,59 @@\n  *   &lt;property name=\"ignoreMethodNamesRegex\" value=\"^foo.*$\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   public void test1() {} // violation, method is missing javadoc\n+ *   public void foo() {} // ok\n+ *   public void foobar() {} // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check for ignoring missing javadoc for accessor methods:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowMissingPropertyJavadoc\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *   private String text;\n+ *\n+ *   public void test() {} // violation, method is missing javadoc\n+ *   public String getText() { return text; } // ok\n+ *   public void setText(String text) { this.text = text; } // ok\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check with annotations that allow missed documentation:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"MissingJavadocMethod\"&gt;\n+ *   &lt;property name=\"allowedAnnotations\" value=\"Override,Deprecated\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class Test {\n+ *     public void test() {} // violation, method is missing javadoc\n+ *     &#64;Override\n+ *     public void test1() {} // OK\n+ *     &#64;Deprecated\n+ *     public void test2() {} // OK\n+ *     &#64;SuppressWarnings\n+ *     public void test3() {} // violation, method is missing javadoc\n+ *     &#47;**\n+ *      * Some description here.\n+ *      *&#47;\n+ *     &#64;SuppressWarnings\n+ *     public void test4() {} // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2Njk5MQ=="}, "originalCommit": {"oid": "eb6c2f8b04bfa38e9a655fd44441fd7495565896"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1121, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}