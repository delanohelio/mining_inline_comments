{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDEzODc4", "number": 7906, "title": "Issue #7691: ClassFanOutComplexity doc update", "bodyText": "Closes #7691\nSite: https://shashwat70.github.io/site/config_metrics.html#ClassFanOutComplexity\nDefault config (Good):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\"/>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  public Place place = new Place(); // Counted, 3\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.\n\nDefault config (Violating):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\"/>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  A17 a17;\n  A18 a18;\n  public Place place = new Place(); // violation, total is 21\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] C:\\Users\\Shashwat\\Documents\\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nmax property config (Good):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"max\" value=\"2\"/>\n</module>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.\n\nmax property config (Violating):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"max\" value=\"2\"/>\n</module>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  public Place place = new Place(); // violation, total is 3\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] C:\\Users\\Shashwat\\Documents\\Test.java:1:1: Class Fan-Out Complexity is 3 (max allowed is 2). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nexcludedClasses property config (Good):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/>\n</module>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  public Set set = new HashSet(); // Counted, 1\n  public Map map = new HashMap(); // Counted, 2\n  public Date date = new Date(); // Counted, 3\n  public Time time = new Time(); // Counted, 4\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  public Place place = new Place(); // Ignored\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.\n\nexcludedClasses property config (Violating):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/>\n</module>\n  </module>\n</module>\n\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  public Set set = new HashSet(); // Counted, 1\n  public Map map = new HashMap(); // Counted, 2\n  public Date date = new Date(); // Counted, 3\n  public Time time = new Time(); // Counted, 4\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  public Space _space = new Space(); // violation, total is 21\n}\n\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] C:\\Users\\Shashwat\\Documents\\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nexcludedClassesRegexps property config (Good):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludeClassesRegexps\"\n    value=\".*Reader$\"/>\n</module>\n  </module>\n</module>\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  A17 a17;\n  A18 a18;\n  BufferedReader br; // Ignored\n}\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.\n\nexcludedClassesRegexps property config (Violating):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludeClassesRegexps\"\n    value=\".*Reader$\"/>\n</module>\n  </module>\n</module>\nC:\\Users\\Shashwat\\Documents>cat Test.java\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  A17 a17;\n  A18 a18;\n  File file; // violation, total is 21\n}\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] C:\\Users\\Shashwat\\Documents\\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nexcludedPackages property config (Good):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludedPackages\" value=\"java.io\"/>\n</module>\n  </module>\n</module>\nC:\\Users\\Shashwat\\Documents>cat Test.java\nimport java.io.BufferedReader;\n\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  A17 a17;\n  A18 a18;\n  BufferedReader br; // Ignored\n}\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.\n\nexcludedPackages property config (Violating):\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludedPackages\" value=\"java.io\"/>\n</module>\n  </module>\n</module>\nC:\\Users\\Shashwat\\Documents>cat Test.java\n\nimport java.util.StringTokenizer;\n\npublic class InputClassComplexity {\n  Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property\n  Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property\n  public Date date = new Date(); // Counted, 1\n  public Time time = new Time(); // Counted, 2\n  A01 a01;\n  A02 a02;\n  A03 a03;\n  A04 a04;\n  A05 a05;\n  A06 a06;\n  A07 a07;\n  A08 a08;\n  A09 a09;\n  A10 a10;\n  A11 a11;\n  A12 a12;\n  A13 a13;\n  A14 a14;\n  A15 a15;\n  A16 a16;\n  A17 a17;\n  A18 a18;\n  StringTokenizer st; // violation, total is 21\n}\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] C:\\Users\\Shashwat\\Documents\\Test.java:3:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nOther explanatory example:\nC:\\Users\\Shashwat\\Documents>cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n      <module name=\"ClassFanOutComplexity\">\n  <property name=\"excludedPackages\" value=\"a.b\"/>\n</module>\n  </module>\n</module>\nC:\\Users\\Shashwat\\Documents>cat Test.java\npackage a.b;\n\nimport a.b.Bar;\nimport a.b.c.Baz;\n\npublic class Foo {\n  public Bar bar; // Will be ignored, located inside ignored a.b package\n  public Baz baz; // Will not be ignored, located inside a.b.c package\n  public Data data; // Will not be ignored, same file\n\n  class Data {\n    public Foo foo; // Will not be ignored, same file\n  }\n}\nC:\\Users\\Shashwat\\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java\nStarting audit...\nAudit done.", "createdAt": "2020-03-19T13:47:50Z", "url": "https://github.com/checkstyle/checkstyle/pull/7906", "merged": true, "mergeCommit": {"oid": "524c8814d89d3ca83cf162d925888052f42926e9"}, "closed": true, "closedAt": "2020-04-14T08:23:43Z", "author": {"login": "shashwatj07"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRDjQQgBqjMxNjMwMjA0NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXfJLEgFqTM5MjcwNjU5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "949afd16855555c7972d1aacfc7522008dfbd863", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/949afd16855555c7972d1aacfc7522008dfbd863", "committedDate": "2020-03-19T13:42:48Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "c998b73f27bf12c6057d6d4c299cf0a69e104e24", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c998b73f27bf12c6057d6d4c299cf0a69e104e24", "committedDate": "2020-03-25T08:50:18Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c998b73f27bf12c6057d6d4c299cf0a69e104e24", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c998b73f27bf12c6057d6d4c299cf0a69e104e24", "committedDate": "2020-03-25T08:50:18Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "7166299b49faf750ff2f04b714b6e4e97c43d3cc", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/7166299b49faf750ff2f04b714b6e4e97c43d3cc", "committedDate": "2020-03-26T07:17:56Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64cbaba8b4d24b2f3fb094cb22194ca741617eb2", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/64cbaba8b4d24b2f3fb094cb22194ca741617eb2", "committedDate": "2020-03-26T08:16:30Z", "message": "fix"}, "afterCommit": {"oid": "0f557fa6e93fd450fb0127d7186cf97b741f064c", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f557fa6e93fd450fb0127d7186cf97b741f064c", "committedDate": "2020-03-26T08:21:17Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f557fa6e93fd450fb0127d7186cf97b741f064c", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f557fa6e93fd450fb0127d7186cf97b741f064c", "committedDate": "2020-03-26T08:21:17Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/af95a3e27f5a0aad1216265573e19c6d7b7a3245", "committedDate": "2020-03-26T08:27:05Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDAxMzA4", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-383401308", "createdAt": "2020-03-29T11:41:04Z", "commit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMTo0MTowNFrOF9Q9WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMjowMjoyN1rOF9RHFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NTMwNQ==", "bodyText": "please remove public from the fields. It just clutters the examples.\nplease do the same in all examples.", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399785305", "createdAt": "2020-03-29T11:41:04Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NTMzNA==", "bodyText": "please remove underscore _ symbol from field names.\nplease do the same in all examples.", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399785334", "createdAt": "2020-03-29T11:41:28Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NTY4Ng==", "bodyText": "I think this sentence is useless. Next paragraphs explain the same. Please remove it", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399785686", "createdAt": "2020-03-29T11:44:09Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>max</b> property\n+ * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NjA5OA==", "bodyText": "I think this sentence is useless. Next paragraphs explain the same. Please remove it", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399786098", "createdAt": "2020-03-29T11:48:09Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>max</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClasses</b> property\n+ * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NzUzOQ==", "bodyText": "Please add that HashSet is ignored here.\n// Set counted 1, HashSet ignored or something like this.\nSame with HashMap below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399787539", "createdAt": "2020-03-29T11:59:51Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>max</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClasses</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Counted, 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4Nzc5Nw==", "bodyText": "please make this one line", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r399787797", "createdAt": "2020-03-29T12:02:27Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,204 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>max</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   public Map _map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   public Date _date = new Date(); // Counted, 1\n+ *   public Time _time = new Time(); // Counted, 2\n+ *   public Place _place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClasses</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Counted, 1\n+ *   public Map _map = new HashMap(); // Counted, 2\n+ *   public Date _date = new Date(); // Counted, 3\n+ *   public Time _time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   public Place _place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * public class InputClassComplexity {\n+ *   public Set _set = new HashSet(); // Counted, 1\n+ *   public Map _map = new HashMap(); // Counted, 2\n+ *   public Date _date = new Date(); // Counted, 3\n+ *   public Time _time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   public Space _space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClassesRegexps</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a regular expression {@code .*Reader$}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludeClassesRegexps\"\n+ *     value=\".*Reader$\"/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245"}, "originalPosition": 123}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af95a3e27f5a0aad1216265573e19c6d7b7a3245", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/af95a3e27f5a0aad1216265573e19c6d7b7a3245", "committedDate": "2020-03-26T08:27:05Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "dee3ba123e0a6e78e06e65f36ea2915f0e55f1fe", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dee3ba123e0a6e78e06e65f36ea2915f0e55f1fe", "committedDate": "2020-03-29T16:03:21Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dee3ba123e0a6e78e06e65f36ea2915f0e55f1fe", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dee3ba123e0a6e78e06e65f36ea2915f0e55f1fe", "committedDate": "2020-03-29T16:03:21Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "53c1649b046cdf593bbc086f5110f3e7d3b9086f", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/53c1649b046cdf593bbc086f5110f3e7d3b9086f", "committedDate": "2020-03-29T16:08:57Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53c1649b046cdf593bbc086f5110f3e7d3b9086f", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/53c1649b046cdf593bbc086f5110f3e7d3b9086f", "committedDate": "2020-03-29T16:08:57Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8b171ecee3e7732a2fad78df170524497f3456dc", "committedDate": "2020-03-29T18:43:35Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTY0ODQx", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-385164841", "createdAt": "2020-03-31T23:06:36Z", "commit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMzowNjozN1rOF-rVDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMzowNzoyOFrOF-rV-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NTkzMw==", "bodyText": "To configure the check with a regular expression {@code .*Reader$}:\n-->\nTo configure the check to exclude classes with a regular expression {@code .*Reader$}:", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r401265933", "createdAt": "2020-03-31T23:06:37Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,197 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClassesRegexps</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a regular expression {@code .*Reader$}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NjA2MA==", "bodyText": "I think this sentence is useless. Next paragraphs explain the same. Please remove it", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r401266060", "createdAt": "2020-03-31T23:07:05Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,197 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClassesRegexps</b> property\n+ * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NjE3MQ==", "bodyText": "I think this sentence is useless. Next paragraphs explain the same. Please remove it", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r401266171", "createdAt": "2020-03-31T23:07:28Z", "author": {"login": "baratali"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,197 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedClassesRegexps</b> property\n+ * </p>\n+ * <p>\n+ * To configure the check with a regular expression {@code .*Reader$}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludeClassesRegexps\" value=\".*Reader$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   BufferedReader br; // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   File file; // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * The following example demonstrates usage of <b>excludedPackages</b> property\n+ * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc"}, "originalPosition": 152}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b171ecee3e7732a2fad78df170524497f3456dc", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8b171ecee3e7732a2fad78df170524497f3456dc", "committedDate": "2020-03-29T18:43:35Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "fc1c7c1c38f70695b796d3ae18aa97d951297970", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fc1c7c1c38f70695b796d3ae18aa97d951297970", "committedDate": "2020-04-01T07:39:44Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc1c7c1c38f70695b796d3ae18aa97d951297970", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fc1c7c1c38f70695b796d3ae18aa97d951297970", "committedDate": "2020-04-01T07:39:44Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "284ba1c91c43d17ecf14ec36488f32a1183556c8", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/284ba1c91c43d17ecf14ec36488f32a1183556c8", "committedDate": "2020-04-01T08:05:28Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "284ba1c91c43d17ecf14ec36488f32a1183556c8", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/284ba1c91c43d17ecf14ec36488f32a1183556c8", "committedDate": "2020-04-01T08:05:28Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8de58df681abc74e839e49ddb70009dc7eb6a0fc", "committedDate": "2020-04-06T04:25:58Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTQ4NDUx", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-390148451", "createdAt": "2020-04-08T16:42:40Z", "commit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMDY2NDYz", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-392066463", "createdAt": "2020-04-13T10:14:58Z", "commit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMDoxNDo1OFrOGEikKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMDoyODoxMVrOGEi1Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxMzgwMg==", "bodyText": "should be Example:", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407413802", "createdAt": "2020-04-13T10:14:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDAzOA==", "bodyText": "please remove", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414038", "createdAt": "2020-04-13T10:15:40Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDIzNA==", "bodyText": "// Violation should be // violation\nhere can be a reason, like \"violation, total is 21", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414234", "createdAt": "2020-04-13T10:16:20Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDI5MQ==", "bodyText": "Example:", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414291", "createdAt": "2020-04-13T10:16:30Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDM5NQ==", "bodyText": "colon instead of dot at the end", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414395", "createdAt": "2020-04-13T10:16:48Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDQ0OA==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414448", "createdAt": "2020-04-13T10:16:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDUwNA==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414504", "createdAt": "2020-04-13T10:17:09Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNDYwNg==", "bodyText": "Violation -> violation", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407414606", "createdAt": "2020-04-13T10:17:27Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNTA1Ng==", "bodyText": "it should be mentioned that both Map and HashMap are ignored.\nSame for Set and HashSet", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407415056", "createdAt": "2020-04-13T10:18:39Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNzk2Ng==", "bodyText": "please remove and update violation comment below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407417966", "createdAt": "2020-04-13T10:27:42Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxNzk5OA==", "bodyText": "please remove and update violation comment below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407417998", "createdAt": "2020-04-13T10:27:48Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxODA1MQ==", "bodyText": "please remove and update violation comment below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407418051", "createdAt": "2020-04-13T10:27:54Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to exclude classes with a regular expression\n+ * {@code .*Reader$}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludeClassesRegexps\" value=\".*Reader$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxODA4Nw==", "bodyText": "please remove and update violation comment below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407418087", "createdAt": "2020-04-13T10:28:01Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to exclude classes with a regular expression\n+ * {@code .*Reader$}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludeClassesRegexps\" value=\".*Reader$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   BufferedReader br; // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxODE0Nw==", "bodyText": "please remove and update violation comment below", "url": "https://github.com/checkstyle/checkstyle/pull/7906#discussion_r407418147", "createdAt": "2020-04-13T10:28:11Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "diffHunk": "@@ -79,14 +79,192 @@\n  * &lt;module name=\"ClassFanOutComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 10:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 2:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with three excluded classes {@code HashMap},\n+ * {@code HashSet} and {@code Place}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassFanOutComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"10\"/&gt;\n+ *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet, Place\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Place place = new Place(); // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Set counted 1, HashSet ignored\n+ *   Map map = new HashMap(); // Map counted 2, HashMap ignored\n+ *   Date date = new Date(); // Counted, 3\n+ *   Time time = new Time(); // Counted, 4\n+ *   // mention of 16 other user defined classes\n+ *   // Counted, 20\n+ *   Space space = new Space(); // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to exclude classes with a regular expression\n+ * {@code .*Reader$}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludeClassesRegexps\" value=\".*Reader$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   BufferedReader br; // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   File file; // Violation\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with an excluded package {@code java.io}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"ClassFanOutComplexity\"&gt;\n+ *   &lt;property name=\"excludedPackages\" value=\"java.io\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n+ * </p>\n+ * <pre>\n+ * import java.io.BufferedReader;\n+ *\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20\n+ *   BufferedReader br; // Ignored\n+ * }\n+ * </pre>\n+ * <p>\n+ * The check results in a violation in the following.\n+ * </p>\n+ * <pre>\n+ * import java.util.StringTokenizer;\n+ *\n+ * class InputClassComplexity {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // mention of 18 other user defined classes\n+ *   // Counted, 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc"}, "originalPosition": 187}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8de58df681abc74e839e49ddb70009dc7eb6a0fc", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8de58df681abc74e839e49ddb70009dc7eb6a0fc", "committedDate": "2020-04-06T04:25:58Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "5fe0a5a815565819f959c4a6f3ec69fad63c7761", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5fe0a5a815565819f959c4a6f3ec69fad63c7761", "committedDate": "2020-04-13T11:58:23Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37e319557d32661024a73738cd928bdf572494f6", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/37e319557d32661024a73738cd928bdf572494f6", "committedDate": "2020-04-13T11:59:18Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fe0a5a815565819f959c4a6f3ec69fad63c7761", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5fe0a5a815565819f959c4a6f3ec69fad63c7761", "committedDate": "2020-04-13T11:58:23Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}, "afterCommit": {"oid": "37e319557d32661024a73738cd928bdf572494f6", "author": {"user": {"login": "shashwatj07", "name": "Shashwat Jaiswal"}}, "url": "https://github.com/checkstyle/checkstyle/commit/37e319557d32661024a73738cd928bdf572494f6", "committedDate": "2020-04-13T11:59:18Z", "message": "Issue #7691: ClassFanOutComplexity doc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTg3NTg2", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-392187586", "createdAt": "2020-04-13T14:41:39Z", "commit": {"oid": "37e319557d32661024a73738cd928bdf572494f6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzA2NTkz", "url": "https://github.com/checkstyle/checkstyle/pull/7906#pullrequestreview-392706593", "createdAt": "2020-04-14T08:23:25Z", "commit": {"oid": "37e319557d32661024a73738cd928bdf572494f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 908, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}