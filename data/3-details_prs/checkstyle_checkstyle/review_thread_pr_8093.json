{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNzc2NTQ2", "number": 8093, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzozMzoxNVrODzMZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNTowMjoyNVrOD4FUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDA3MDY2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzozMzoxNVrOGHo3rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzozMzoxNVrOGHo3rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MjgyOQ==", "bodyText": "nitpick, remove spaces\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                : m: parameterModifier t: typeSpec[false]\n          \n          \n            \n                                                v: tryResourceDeclarator[(AST) getASTFactory().dupTree(#m),\n          \n          \n            \n                : m:parameterModifier t:typeSpec[false]\n          \n          \n            \n                                                v:tryResourceDeclarator[(AST) getASTFactory().dupTree(#m),", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410662829", "createdAt": "2020-04-18T07:33:15Z", "author": {"login": "esilkensen"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1224,15 +1224,27 @@ resources\n     ;\n \n \n-resource\n-    : IDENT\n-      | modifiers typeSpec[true] IDENT resource_assign\n-      {#resource = #([RESOURCE, \"RESOURCE\"], #resource);}\n+tryResourceDeclarator![AST mods, AST t]\n+    :    id:IDENT d:declaratorBrackets[t] v:varInitializer\n+        {#tryResourceDeclarator = #(#[RESOURCE, \"RESOURCE\"], mods, #(#[TYPE,\"TYPE\"],d), id, v);}\n ;\n \n-resource_assign\n-    : ASSIGN^ expression\n-    ;\n+\n+tryResourceDeclaration!\n+    : m: parameterModifier t: typeSpec[false]\n+                                    v: tryResourceDeclarator[(AST) getASTFactory().dupTree(#m),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "453a5547e98b33c64ae5527ba5f9a663f9a37ccf"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDA3NzM1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzo0MjoxOFrOGHo6tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzo0MjoxOFrOGHo6tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MzYwNg==", "bodyText": "I wonder about this alternative, could it be simplified?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                | ( (primaryExpression DOT^)+ identifier\n          \n          \n            \n                | IDENT)+\n          \n          \n            \n                | (primaryExpression DOT^)* IDENT", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410663606", "createdAt": "2020-04-18T07:42:18Z", "author": {"login": "esilkensen"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1224,15 +1224,27 @@ resources\n     ;\n \n \n-resource\n-    : IDENT\n-      | modifiers typeSpec[true] IDENT resource_assign\n-      {#resource = #([RESOURCE, \"RESOURCE\"], #resource);}\n+tryResourceDeclarator![AST mods, AST t]\n+    :    id:IDENT d:declaratorBrackets[t] v:varInitializer\n+        {#tryResourceDeclarator = #(#[RESOURCE, \"RESOURCE\"], mods, #(#[TYPE,\"TYPE\"],d), id, v);}\n ;\n \n-resource_assign\n-    : ASSIGN^ expression\n-    ;\n+\n+tryResourceDeclaration!\n+    : m: parameterModifier t: typeSpec[false]\n+                                    v: tryResourceDeclarator[(AST) getASTFactory().dupTree(#m),\n+                                    //dupList as this also copies siblings (like TYPE_ARGUMENTS)\n+                                    (AST) getASTFactory().dupList(#t)]\n+    {#tryResourceDeclaration = #v;}\n+;\n+\n+\n+resource\n+    : (tryResourceDeclaration)=>  tryResourceDeclaration\n+    | ( (primaryExpression DOT^)+ identifier\n+    | IDENT)+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "453a5547e98b33c64ae5527ba5f9a663f9a37ccf"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDUyNDMxOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNjoxNjo1NVrOGHsNrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNjoxNjo1NVrOGHsNrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzYxMg==", "bodyText": "This line doesn\u2019t compile and is failing the Travis build - probably need to declare the variable \u201cv\u201d before the loop", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410717612", "createdAt": "2020-04-18T16:16:55Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,39 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+\n+class Foo {\n+    static final Bar BAR = new Bar();\n+    static class Bar implements AutoCloseable {\n+        public void close() {\n+        }\n+    }\n+\n+\n+    final AutoCloseable closable = () -> {};\n+\n+    public void method1(TestClass cls) throws Exception {\n+        try (closable) {\n+        }\n+        try (cls.closable) {\n+        }\n+\n+    }\n+\n+    void method() {\n+        Foo.Bar bar = new Foo.Bar();\n+        try (Foo.BAR; BAR) {\n+        }\n+        try(this.BAR.bar){}\n+        try(this.BAR){\n+        }\n+        try(Foo.Bar b = new Foo.Bar()) {\n+        }\n+        try(Foo.super.BAR) {\n+        }\n+        try (new TwrForVariable1() { }.finalWrapper.finalField) {\n+        }\n+        try ((args.length > 0 ? v : new TwrForVariable1()).finalWrapper.finalField) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411c151b5ea89f71f8a06b6277d43897e968f862"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTcxODAyOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODozMToxMlrOGH0XTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNToyODo0MVrOGJkA9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MTE1MQ==", "bodyText": "While this compiles, I think it may be better to integrate the examples inside the existing InputJava9TryWithResources class rather than adding a separate top-level TwrForVariable1 class here. @harsh-kukreja, can you refactor?", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410851151", "createdAt": "2020-04-19T08:31:12Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,86 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+\n+class TwrForVariable1 implements AutoCloseable  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e93b73c3045ac9386edb51c18ce4c172400fc8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4MDQzOA==", "bodyText": "@esilkensen can u resolve this?", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r412680438", "createdAt": "2020-04-22T05:28:41Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,86 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+\n+class TwrForVariable1 implements AutoCloseable  {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MTE1MQ=="}, "originalCommit": {"oid": "81e93b73c3045ac9386edb51c18ce4c172400fc8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTk4NjkzOnYy", "diffSide": "LEFT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMzoyMDoxOFrOGNToiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyODo0NlrOGNhbEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ==", "bodyText": "I do not see exactly this example. We never remove code in Inputs, the more the better, we should have all possible combitations of code.\nPlease create new Input file and place all advanced try to it.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416606345", "createdAt": "2020-04-28T13:20:18Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -4,19 +4,81 @@\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources\n+public class InputJava9TryWithResources implements AutoCloseable\n {\n-    public static class MyResource implements AutoCloseable {\n-        @Override\n-        public void close() throws Exception { }\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n     }\n \n+    //Constructor\n+    public InputJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n     public static void main(String[] args) throws Exception {\n-        MyResource resource = new MyResource();\n-        try (resource) { } finally { }\n+        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n+        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        }\n+\n+        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n+        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;\n+\n+\n+    final static FinalWrapper finalWrapper = new FinalWrapper();\n+    public void method() throws Exception {\n+        try(this.finalWrapper.finalField) {\n+        }\n+    }\n+    static class FinalWrapper {\n+        public final AutoCloseable finalField = new AutoCloseable() {\n+            @Override\n+            public void close() throws Exception {\n+                closeCount++;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n \n-        final MyResource resource1 = new MyResource();\n-        final MyResource resource2 = new MyResource();\n-        try (resource1;resource2) { } finally { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTcxMw==", "bodyText": "Done @romani", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416831713", "createdAt": "2020-04-28T18:27:52Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -4,19 +4,81 @@\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources\n+public class InputJava9TryWithResources implements AutoCloseable\n {\n-    public static class MyResource implements AutoCloseable {\n-        @Override\n-        public void close() throws Exception { }\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n     }\n \n+    //Constructor\n+    public InputJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n     public static void main(String[] args) throws Exception {\n-        MyResource resource = new MyResource();\n-        try (resource) { } finally { }\n+        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n+        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        }\n+\n+        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n+        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;\n+\n+\n+    final static FinalWrapper finalWrapper = new FinalWrapper();\n+    public void method() throws Exception {\n+        try(this.finalWrapper.finalField) {\n+        }\n+    }\n+    static class FinalWrapper {\n+        public final AutoCloseable finalField = new AutoCloseable() {\n+            @Override\n+            public void close() throws Exception {\n+                closeCount++;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n \n-        final MyResource resource1 = new MyResource();\n-        final MyResource resource2 = new MyResource();\n-        try (resource1;resource2) { } finally { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ=="}, "originalCommit": {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMjI3NA==", "bodyText": "Also added the InputJava9TryWithResouce file to the AST tree @romani", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416832274", "createdAt": "2020-04-28T18:28:46Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -4,19 +4,81 @@\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources\n+public class InputJava9TryWithResources implements AutoCloseable\n {\n-    public static class MyResource implements AutoCloseable {\n-        @Override\n-        public void close() throws Exception { }\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n     }\n \n+    //Constructor\n+    public InputJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n     public static void main(String[] args) throws Exception {\n-        MyResource resource = new MyResource();\n-        try (resource) { } finally { }\n+        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n+        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        }\n+\n+        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n+        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;\n+\n+\n+    final static FinalWrapper finalWrapper = new FinalWrapper();\n+    public void method() throws Exception {\n+        try(this.finalWrapper.finalField) {\n+        }\n+    }\n+    static class FinalWrapper {\n+        public final AutoCloseable finalField = new AutoCloseable() {\n+            @Override\n+            public void close() throws Exception {\n+                closeCount++;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n \n-        final MyResource resource1 = new MyResource();\n-        final MyResource resource2 = new MyResource();\n-        try (resource1;resource2) { } finally { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ=="}, "originalCommit": {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjAwOTc3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMzoyNToxNlrOGNT3Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNzo1OFrOGNhZGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYxMDA2Mw==", "bodyText": "please move this after resource: declaration.\nThe same for tryResourceDeclaration!:.\nDetails of implementation should be right below first usage.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416610063", "createdAt": "2020-04-28T13:25:16Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1224,15 +1224,26 @@ resources\n     ;\n \n \n-resource\n-    : IDENT\n-      | modifiers typeSpec[true] IDENT resource_assign\n-      {#resource = #([RESOURCE, \"RESOURCE\"], #resource);}\n+tryResourceDeclarator![AST mods, AST t]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTc2OA==", "bodyText": "done @romani", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416831768", "createdAt": "2020-04-28T18:27:58Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1224,15 +1224,26 @@ resources\n     ;\n \n \n-resource\n-    : IDENT\n-      | modifiers typeSpec[true] IDENT resource_assign\n-      {#resource = #([RESOURCE, \"RESOURCE\"], #resource);}\n+tryResourceDeclarator![AST mods, AST t]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYxMDA2Mw=="}, "originalCommit": {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDk3ODczOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNTowNzoxMlrOGNv4hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNToyMDowNVrOGNwESA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTE5MQ==", "bodyText": "Please update the ctor name", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417069191", "createdAt": "2020-04-29T05:07:12Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7050503926f58a111ccd1413dee5cd3447ec7341"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MjIwMA==", "bodyText": "Done @pbludov, sorry!", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417072200", "createdAt": "2020-04-29T05:20:05Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTE5MQ=="}, "originalCommit": {"oid": "7050503926f58a111ccd1413dee5cd3447ec7341"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDk3ODkxOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNTowNzoyMVrOGNv4og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNToyMDoxMFrOGNwEWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTIxOA==", "bodyText": "Same here", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417069218", "createdAt": "2020-04-29T05:07:21Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputJava9TryWithResources() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7050503926f58a111ccd1413dee5cd3447ec7341"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MjIxNw==", "bodyText": "Done @pbludov, sorry!", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417072217", "createdAt": "2020-04-29T05:20:10Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputJava9TryWithResources() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTIxOA=="}, "originalCommit": {"oid": "7050503926f58a111ccd1413dee5cd3447ec7341"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQxNTU5OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMjo1NTo1M1rOGN9fTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMjo1NTo1M1rOGN9fTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5MjExMA==", "bodyText": "please remove this change", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417292110", "createdAt": "2020-04-29T12:55:53Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,4 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQyODM2OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMjo1ODo1MVrOGN9m-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMjo1ODo1MVrOGN9m-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NDA3Mg==", "bodyText": "please remove comments over methods, the are not required.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417294072", "createdAt": "2020-04-29T12:58:51Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQzMzMzOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMDowMlrOGN9p_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMDowMlrOGN9p_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NDg0NA==", "bodyText": "please explain what for this c-tor.\nWe do not need extra code in Input.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417294844", "createdAt": "2020-04-29T13:00:02Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQzNTI0OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMDoyOVrOGN9rJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMDoyOVrOGN9rJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NTE0Mw==", "bodyText": "if this is not required - please remove.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417295143", "createdAt": "2020-04-29T13:00:29Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQ0NDgyOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMjozOFrOGN9w0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowMjozOFrOGN9w0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NjU5Mw==", "bodyText": "please remove extra code from Input.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417296593", "createdAt": "2020-04-29T13:02:38Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjQ1NjI3OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzowNTo0OVrOGN931w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMzoxMzo0OFrOGPc8eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ==", "bodyText": "please explain how this code is related to issue we try to resolve.\nhow it is different from:\n      InputAdvanceJava9TryWithResources n = null;\n        try (n) {\n\nparser do not care about values and logic in code.\nIf you just extending our code base with more Input for better coverage - awesome, but please move them to separate Input file. Here we need to focus on all possible cases of field usage in try", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417298391", "createdAt": "2020-04-29T13:05:49Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3NjYwNQ==", "bodyText": "I still do not see separate input file.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418076605", "createdAt": "2020-04-30T15:00:24Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ=="}, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg1NjA1Nw==", "bodyText": "As you said there is no need of this code, so i have removed the line and did not create a sperate file. @romani", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418856057", "createdAt": "2020-05-02T03:13:48Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ=="}, "originalCommit": {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTM0MDEwOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNTowMjoyNVrOGOtdJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwNjozNjo0NFrOGPpLVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ==", "bodyText": "please explain what for we have this code in Input ?\nwhat case you try to cover?\nthe same question to code below //More than one resource", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418077989", "createdAt": "2020-04-30T15:02:25Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,55 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources()) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e670aa66c571ae401158753682455fc07a86dc26"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg1NzgyOA==", "bodyText": "This covers the nested try case. If it is not relevant i will remove the code.\n//More than one resource for this it covers the case of multiple resources in a try statement.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418857828", "createdAt": "2020-05-02T03:17:47Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,55 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources()) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}, "originalCommit": {"oid": "e670aa66c571ae401158753682455fc07a86dc26"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk2NDMwMw==", "bodyText": "I want only to separate all changes are essential for issue to implement and test AND one changes that good to have but they are not related. All unrelated changes can stay in PR, but should be moved to separate commit minor: extra test inputs for TRY blocks.\nplease remove them or move to separate commit.", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418964303", "createdAt": "2020-05-02T14:19:29Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,55 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources()) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}, "originalCommit": {"oid": "e670aa66c571ae401158753682455fc07a86dc26"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA1NjQ3MA==", "bodyText": "I removed the code @romani please check", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r419056470", "createdAt": "2020-05-03T06:36:44Z", "author": {"login": "harsh-kukreja"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,55 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources()) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}, "originalCommit": {"oid": "e670aa66c571ae401158753682455fc07a86dc26"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1126, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}