{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDY3Mzg3", "number": 7975, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMTowNTowM1rODsTleA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNjo1NFrODsUgsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzg0ODI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMTowNTowM1rOF9IqwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMTowNTowM1rOF9IqwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0OTQ3Mg==", "bodyText": "whitespace between \"//\" and \"violation\"", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399649472", "createdAt": "2020-03-28T11:05:03Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -63,6 +63,28 @@\n  * <pre>\n  * &lt;module name=&quot;NoLineWrap&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl.tools.checkstyle. //violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7cc5eb3f9f33b897885e69842b6b3e5a6aeb15"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzg1MDQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMTowODozMlrOF9IruQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMTowODozMlrOF9IruQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0OTcyMQ==", "bodyText": "Acceptable tokens for this check are\nIMPORT, STATIC_IMPORT, PACKAGE_DEF, CLASS_DEF, METHOD_DEF, CTOR_DEF, ENUM_DEF, INTERFACE_DEF.\nPlease add example for some extended tokens, e.g. for CLASS_DEF and CTOR_DEF", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399649721", "createdAt": "2020-03-28T11:08:32Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,20 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7cc5eb3f9f33b897885e69842b6b3e5a6aeb15"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5ODA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDozMlrOF9JzIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDozMlrOF9JzIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODAwMQ==", "bodyText": "Class name should start from uppercase", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668001", "createdAt": "2020-03-28T14:24:32Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5ODI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDo0MVrOF9JzOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDo0MVrOF9JzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODAyNQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668025", "createdAt": "2020-03-28T14:24:41Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {\n+ * }\n+ *\n+ * public class bar { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5ODQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDo1OFrOF9JzWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNDo1OFrOF9JzWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODA1OQ==", "bodyText": "space missing", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668059", "createdAt": "2020-03-28T14:24:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {\n+ * }\n+ *\n+ * public class bar { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in method definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public static //violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5ODcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNToxNVrOF9Jzdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNToxNVrOF9Jzdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODA4Ng==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668086", "createdAt": "2020-03-28T14:25:15Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {\n+ * }\n+ *\n+ * public class bar { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in method definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public static //violation\n+ *   void main(String[] args) {\n+ * }\n+ *\n+ * public void foo() { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in constructor definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CTOR_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class foo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5ODkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNToyNFrOF9Jziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNToyNFrOF9Jziw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODEwNw==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668107", "createdAt": "2020-03-28T14:25:24Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {\n+ * }\n+ *\n+ * public class bar { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in method definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public static //violation\n+ *   void main(String[] args) {\n+ * }\n+ *\n+ * public void foo() { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in constructor definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CTOR_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class foo {\n+ *   public // violation\n+ *     foo() {\n+ *   }\n+ * }\n+ *\n+ * class bar {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5OTE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNTo1MVrOF9JzrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNTo1MVrOF9JzrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODE0MQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668141", "createdAt": "2020-03-28T14:25:51Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class // violation\n+ *  foo {\n+ * }\n+ *\n+ * public class bar { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in method definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"METHOD_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public static //violation\n+ *   void main(String[] args) {\n+ * }\n+ *\n+ * public void foo() { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in constructor definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CTOR_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class foo {\n+ *   public // violation\n+ *     foo() {\n+ *   }\n+ * }\n+ *\n+ * class bar {\n+ *   public bar() { // OK\n+ *   }\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in enumeration definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"ENUM_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public enum // violation\n+ *   days {\n+ * }\n+ *\n+ * private enum months { // OK\n+ * }\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in interface definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"INTERFACE_DEF\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * interface foo { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk5OTg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoyNjo1NFrOF9J0CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDozMTowMlrOF9J1gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODIzMg==", "bodyText": "Example for class can include method_def and ctor_def as well", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668232", "createdAt": "2020-03-28T14:26:54Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODQ3NA==", "bodyText": "should i remove dedicated examples of METHOD_DEF and CTOR_DEF in that case or let them be?", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668474", "createdAt": "2020-03-28T14:29:32Z", "author": {"login": "sulkykookie"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODIzMg=="}, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODYwOA==", "bodyText": "Yes.\nI think it can be one example for class_def, method_def and ctor_def, no need for interface and enum", "url": "https://github.com/checkstyle/checkstyle/pull/7975#discussion_r399668608", "createdAt": "2020-03-28T14:31:02Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "diffHunk": "@@ -73,6 +95,129 @@\n  *   &lt;property name=\"tokens\" value=\"IMPORT\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * package com.puppycrawl. // OK\n+ * tools.checkstyle.checks;\n+ *\n+ * import java.io.*; // OK\n+ * import java.lang. // violation\n+ *  Boolean;\n+ *\n+ * import static java.math. // OK\n+ * BigInteger.ZERO;\n+ * </pre>\n+ *\n+ * <p>\n+ * To configure the check to force no line-wrapping only\n+ * in class definitions:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;NoLineWrap&quot;&gt;\n+ *   &lt;property name=\"tokens\" value=\"CLASS_DEF\"/&gt;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2ODIzMg=="}, "originalCommit": {"oid": "a5729a194f07cff5ba55803d7856430f07f8881d"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1153, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}