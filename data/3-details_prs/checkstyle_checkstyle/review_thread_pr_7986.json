{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjIzNzgy", "number": 7986, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNjoyMzoxNFrODsb6NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNjoyMzoxNFrODsb6NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTIxMjA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNjoyMzoxNFrOF9TFdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNzo0MDoxOVrOF9Tpkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMDE1MA==", "bodyText": "as for me, it looks better in a way like\npattern = Optional.ofNullable(format).map(this::createPattern).orElse(null)", "url": "https://github.com/checkstyle/checkstyle/pull/7986#discussion_r399820150", "createdAt": "2020-03-29T16:23:14Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "diffHunk": "@@ -228,9 +220,23 @@ public Builder suppressor(MatchSuppressor val) {\n         public DetectorOptions build() {\n             message = Optional.ofNullable(message).orElse(\"\");\n             suppressor = Optional.ofNullable(suppressor).orElse(NeverSuppress.INSTANCE);\n+            computePattern();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eb4aeb3112050bc62b8a3d9727980875aceb42c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMDY3OQ==", "bodyText": "Much better indeed. I'm refactoring right now. Thanks.", "url": "https://github.com/checkstyle/checkstyle/pull/7986#discussion_r399820679", "createdAt": "2020-03-29T16:27:30Z", "author": {"login": "wilcoln"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "diffHunk": "@@ -228,9 +220,23 @@ public Builder suppressor(MatchSuppressor val) {\n         public DetectorOptions build() {\n             message = Optional.ofNullable(message).orElse(\"\");\n             suppressor = Optional.ofNullable(suppressor).orElse(NeverSuppress.INSTANCE);\n+            computePattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMDE1MA=="}, "originalCommit": {"oid": "2eb4aeb3112050bc62b8a3d9727980875aceb42c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyODE4OQ==", "bodyText": "@strkkk , I had never used Optional class before, so I went to checkout it's api a little bit.\nSeems like an elegant way to avoid null pointer exceptions. Thanks for making me discover this feature. I'm definitely using it from now on :)", "url": "https://github.com/checkstyle/checkstyle/pull/7986#discussion_r399828189", "createdAt": "2020-03-29T17:30:39Z", "author": {"login": "wilcoln"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "diffHunk": "@@ -228,9 +220,23 @@ public Builder suppressor(MatchSuppressor val) {\n         public DetectorOptions build() {\n             message = Optional.ofNullable(message).orElse(\"\");\n             suppressor = Optional.ofNullable(suppressor).orElse(NeverSuppress.INSTANCE);\n+            computePattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMDE1MA=="}, "originalCommit": {"oid": "2eb4aeb3112050bc62b8a3d9727980875aceb42c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyOTM5NA==", "bodyText": "pitest report has been updated, still good.", "url": "https://github.com/checkstyle/checkstyle/pull/7986#discussion_r399829394", "createdAt": "2020-03-29T17:40:19Z", "author": {"login": "wilcoln"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "diffHunk": "@@ -228,9 +220,23 @@ public Builder suppressor(MatchSuppressor val) {\n         public DetectorOptions build() {\n             message = Optional.ofNullable(message).orElse(\"\");\n             suppressor = Optional.ofNullable(suppressor).orElse(NeverSuppress.INSTANCE);\n+            computePattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMDE1MA=="}, "originalCommit": {"oid": "2eb4aeb3112050bc62b8a3d9727980875aceb42c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1156, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}