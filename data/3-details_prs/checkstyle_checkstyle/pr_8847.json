{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTU3MDgz", "number": 8847, "title": "Issue #7640: add examples for FallThrough", "bodyText": "Issus #7640\n\n\n\n\n\n\n\nDefault config\ncat config.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n           <module name=\"FallThrough\"/>\n    </module>\n</module>\ncat Test.java \npublic class Test {\n  public void foo() throws Exception {\n    int i = 0;\n    while (i >= 0) {\n      switch (i) {\n        case 1:\n          i++;\n        case 2: // violation, case 1 contains code but lacks break, return, throw or continue\n                // statement\n          i++;\n          break;\n        case 3: // OK\n          i++;\n          return;\n        case 4: // OK\n          i++;\n          throw new Exception();\n        case 5: // OK\n          i++;\n          continue;\n        case 6: // OK\n        case 7: // OK, case 6 does not contain code\n          i++;\n          // OK, by default the last case is not checked\n      }\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:8:9: Fall through from previous branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.\n\ncat Test.java\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      default:\n        return;\n      case 1:\n        i++; // unreachable\n      case 2: // violation\n        return;\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:9:7: Fall through from previous branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.\n\ncat Test.java\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        i++; // fall through\n\n      case 2: // OK\n        i++;\n        // fallthru\n      case 3: { // OK\n        i++;\n      }\n      /* fall-thru */\n      case 4: // OK\n        i++;\n        // Fallthru\n      case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n        i++;\n        // fall through\n        i++;\n      case 6: // violation, the comment must be on the last non-empty line before 'case'\n        i++;\n        /* fall through */case 7: // OK, the comment can appear on the same line but before 'case'\n        i++;\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:18:7: Fall through from previous branch of the switch statement. [FallThrough]\n[ERROR] E:\\checkstyle-playground\\Test.java:22:7: Fall through from previous branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 2 errors.\n\nConfig with checkLastCaseGroup=true\ncat config.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n           <module name=\"FallThrough\">\n      <property name=\"checkLastCaseGroup\" value=\"true\"/>\n     </module>\n    </module>\n</module>\ncat Test.java\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        break;\n      case 2: // OK\n        i++;\n        // violation, last case group is checked\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:7:7: Fall through from the last branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.\n\nConfig with custom reliefPattern:\ncat config.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n      <module name=\"FallThrough\">\n        <property name=\"reliefPattern\" value=\"FALL?[ -]?THROUGH\"/>\n      </module>\n    </module>\n</module>\ncat Test.java \npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        i++;\n        // FALL-THROUGH\n      case 2: // OK, 'FALL-THROUGH' matches the regular expression \"FALL?[ -]?THROUGH\"\n        i++;\n        // fall-through\n      case 3: // violation, 'fall-through' doesn't match\n        break;\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:11:7: Fall through from previous branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.", "createdAt": "2020-09-21T21:00:07Z", "url": "https://github.com/checkstyle/checkstyle/pull/8847", "merged": true, "mergeCommit": {"oid": "8f2db18d0ad3fd9883f38ce980955cca15be61b0"}, "closed": true, "closedAt": "2020-10-03T20:31:45Z", "author": {"login": "anhminhtran235"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLZfNVgBqjM3OTM4MDEyNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPApbagFqTUwMTU3MjQ4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "443898f8d15a3309c7d2abc8e00c2550cf6fd3f2", "author": {"user": {"login": "anhminhtran235", "name": null}}, "url": "https://github.com/checkstyle/checkstyle/commit/443898f8d15a3309c7d2abc8e00c2550cf6fd3f2", "committedDate": "2020-09-22T01:51:26Z", "message": "Merge branch 'master' of https://github.com/anhminhtran235/checkstyle"}, "afterCommit": {"oid": "dd6da55d730544b1aa7a4c3dbd012de2cba20bb3", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dd6da55d730544b1aa7a4c3dbd012de2cba20bb3", "committedDate": "2020-09-22T15:09:35Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd6da55d730544b1aa7a4c3dbd012de2cba20bb3", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dd6da55d730544b1aa7a4c3dbd012de2cba20bb3", "committedDate": "2020-09-22T15:09:35Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "fb50f2864fdbd91c39eb718b1f0fd04d91aaa1ae", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb50f2864fdbd91c39eb718b1f0fd04d91aaa1ae", "committedDate": "2020-09-22T18:10:13Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb50f2864fdbd91c39eb718b1f0fd04d91aaa1ae", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fb50f2864fdbd91c39eb718b1f0fd04d91aaa1ae", "committedDate": "2020-09-22T18:10:13Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/53612949481b24f727f49f1a6825cbdd920f0eae", "committedDate": "2020-09-22T22:42:21Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTI2NTkw", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-494526590", "createdAt": "2020-09-23T10:41:25Z", "commit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0MToyNVrOHWk5ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1MjowNFrOHWlfQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNTMzMQ==", "bodyText": "violation, case 1 contains code but lacks break, return, throw or continue statement\n\ncontinue cannot be in switch, please correct description as well.\nviolation, case 1  -> violation, previous case ...", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493435331", "createdAt": "2020-09-23T10:41:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNjEwNg==", "bodyText": "that wont compile", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493436106", "createdAt": "2020-09-23T10:42:20Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzA5MA==", "bodyText": "case 6 -> previous case", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493437090", "createdAt": "2020-09-23T10:43:23Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzODU4Nw==", "bodyText": "please remove this section and its example, please address only properties and things mentioned in description.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493438587", "createdAt": "2020-09-23T10:44:59Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjA2Ng==", "bodyText": "Example how to suppress violations by comment:", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442066", "createdAt": "2020-09-23T10:48:51Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ==", "bodyText": "there is no comment, why it is ok?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442505", "createdAt": "2020-09-23T10:49:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mjc2Mw==", "bodyText": "indentation", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442763", "createdAt": "2020-09-23T10:49:41Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mzk4NQ==", "bodyText": "so that it checks last case group - > to enable check for last case group\nAdd colon at the end", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493443985", "createdAt": "2020-09-23T10:50:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ==", "bodyText": "why ok if you have violation comment 2 lines below?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493444761", "createdAt": "2020-09-23T10:51:52Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDkzMA==", "bodyText": "colon at the end", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493444930", "createdAt": "2020-09-23T10:52:04Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with custom relief pattern", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 144}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/53612949481b24f727f49f1a6825cbdd920f0eae", "committedDate": "2020-09-22T22:42:21Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "9766ab1fcf5e7f5a7a5bdfded361acde064a30ec", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9766ab1fcf5e7f5a7a5bdfded361acde064a30ec", "committedDate": "2020-09-23T18:15:57Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9766ab1fcf5e7f5a7a5bdfded361acde064a30ec", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9766ab1fcf5e7f5a7a5bdfded361acde064a30ec", "committedDate": "2020-09-23T18:15:57Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/113921987181d0a3471ad2edd5608278c09f5084", "committedDate": "2020-09-23T18:34:03Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NDM3NjQy", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-495437642", "createdAt": "2020-09-24T10:38:31Z", "commit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDIyODk4", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-497022898", "createdAt": "2020-09-26T18:30:46Z", "commit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDgzNjIy", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-497083622", "createdAt": "2020-09-27T14:00:14Z", "commit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDowMDoxNFrOHYnkdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDowMDo1MFrOHYnkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjE4Mg==", "bodyText": "OK, by default the last case might not have 'break'", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495576182", "createdAt": "2020-09-27T14:00:14Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjIzOQ==", "bodyText": "` // violation , last case must have statement that transfer control", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495576239", "createdAt": "2020-09-27T14:00:50Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * Example how to suppress violations by comment:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *     i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to enable check for last case group:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;FallThrough&quot;&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 132}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/113921987181d0a3471ad2edd5608278c09f5084", "committedDate": "2020-09-23T18:34:03Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "152ab1e0d13381d717a3aefdf306b1cd85e2197b", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/152ab1e0d13381d717a3aefdf306b1cd85e2197b", "committedDate": "2020-09-28T00:06:42Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "152ab1e0d13381d717a3aefdf306b1cd85e2197b", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/152ab1e0d13381d717a3aefdf306b1cd85e2197b", "committedDate": "2020-09-28T00:06:42Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f0c6aba0849457a188026c74b4ab56c6e866abfe", "committedDate": "2020-09-28T00:28:38Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTE5NDg5", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-498519489", "createdAt": "2020-09-29T14:16:46Z", "commit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNjo0NlrOHZvf5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNjo0NlrOHZvf5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NDY2MA==", "bodyText": "*       case 6: // OK case does not contain code\n *       case 7: // OK, by default the last case might not have statement that transfer control\n *         i++;\n *", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r496754660", "createdAt": "2020-09-29T14:16:46Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case might not have statement that transfer control", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "originalPosition": 82}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f0c6aba0849457a188026c74b4ab56c6e866abfe", "committedDate": "2020-09-28T00:28:38Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "63458c73321688e26b71b5ac209212860214eb6c", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/63458c73321688e26b71b5ac209212860214eb6c", "committedDate": "2020-09-30T14:42:14Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48eccfa6572dcf9ca93fff60e6ddabd476cf5ad5", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/48eccfa6572dcf9ca93fff60e6ddabd476cf5ad5", "committedDate": "2020-09-30T14:43:08Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63458c73321688e26b71b5ac209212860214eb6c", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/63458c73321688e26b71b5ac209212860214eb6c", "committedDate": "2020-09-30T14:42:14Z", "message": "Issue #7640: add examples for FallThrough"}, "afterCommit": {"oid": "48eccfa6572dcf9ca93fff60e6ddabd476cf5ad5", "author": {"user": {"login": "timurt", "name": "Timur Tibeyev"}}, "url": "https://github.com/checkstyle/checkstyle/commit/48eccfa6572dcf9ca93fff60e6ddabd476cf5ad5", "committedDate": "2020-09-30T14:43:08Z", "message": "Issue #7640: add examples for FallThrough"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTcyNDg2", "url": "https://github.com/checkstyle/checkstyle/pull/8847#pullrequestreview-501572486", "createdAt": "2020-10-03T20:31:21Z", "commit": {"oid": "48eccfa6572dcf9ca93fff60e6ddabd476cf5ad5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1118, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}