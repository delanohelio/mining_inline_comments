{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjAwODU4", "number": 8061, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyMVrODwrGcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODoyMDoxMlrODzWWIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NDAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyMVrOGDzfIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyMVrOGDzfIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjQ2Ng==", "bodyText": "third example should be without initialization at all\nprivate int c", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642466", "createdAt": "2020-04-10T07:37:21Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyOFrOGDzfSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyOFrOGDzfSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjUwNg==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642506", "createdAt": "2020-04-10T07:37:28Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NDY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzozOVrOGDzfgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzozOVrOGDzfgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjU2Mg==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642562", "createdAt": "2020-04-10T07:37:39Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzo0OFrOGDzfvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzo0OFrOGDzfvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjYyMg==", "bodyText": "duplicated example", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642622", "createdAt": "2020-04-10T07:37:48Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NTY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzo1OVrOGDzgEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzo1OVrOGDzgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjcwNQ==", "bodyText": "duplicated", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642705", "createdAt": "2020-04-10T07:37:59Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0NjIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODoxNFrOGDzgbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODoxNFrOGDzgbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0Mjc5OA==", "bodyText": "should be private D d", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642798", "createdAt": "2020-04-10T07:38:14Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0Njc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODoyOFrOGDzgvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODoyOFrOGDzgvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0Mjg3OA==", "bodyText": "no need for main method here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642878", "createdAt": "2020-04-10T07:38:28Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();\n+ *\n+ *   int ar1[] = null; // violation\n+ *   int ar2[] = new int[];\n+ *   int ar3[];\n+ *   private Bar&lt;String&gt; bar = null; // violation\n+ *   private Bar&lt;String&gt;[] barArray = null; // violation\n+ *   public static void main( String [] args ) {\n+ *   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0ODAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODo1N1rOGDzhbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozODo1N1rOGDzhbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MzA1NA==", "bodyText": "private Bar&lt;String&gt;[] looks weird, example looks duplicated", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406643054", "createdAt": "2020-04-10T07:38:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();\n+ *\n+ *   int ar1[] = null; // violation\n+ *   int ar2[] = new int[];\n+ *   int ar3[];\n+ *   private Bar&lt;String&gt; bar = null; // violation\n+ *   private Bar&lt;String&gt;[] barArray = null; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0OTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozOTo0NlrOGDzihg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNzoyNVrOGGXZmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MzMzNA==", "bodyText": "please change field names to make them distinct and make example compilable.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406643334", "createdAt": "2020-04-10T07:39:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyODAyNw==", "bodyText": "@ImmortalRabbit new field naming is not good. Please use more common, like intField, objField, etc.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r409328027", "createdAt": "2020-04-16T07:07:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MzMzNA=="}, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTM4OTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNDo1MFrOGGXVAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNDo1MFrOGGXVAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNjg0OQ==", "bodyText": "new int[] this wont compile as well.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r409326849", "createdAt": "2020-04-16T07:04:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,32 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a_int = 0; // violation\n+ *   private int b_int = 1;\n+ *   private int c_int;\n+ *\n+ *   private char a_char = '\\0'; // violation\n+ *   private char b_char = 'b';\n+ *   private char c_char;\n+ *\n+ *   private boolean a_bool = false; // violation\n+ *   private boolean b_bool = true;\n+ *   private boolean c_bool;\n+ *\n+ *   private Obj a_O = null; // violation\n+ *   private Obj b_O = new Obj();\n+ *   private Obj c_O;\n+ *\n+ *   private int ar1[] = null; // violation\n+ *   private int ar2[] = new int[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTM5MjkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNTo0OVrOGGXW6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNTo0OVrOGGXW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNzMzNw==", "bodyText": "please add // ignored to ignored cases", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r409327337", "createdAt": "2020-04-16T07:05:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int a_int = 0;\n+ *   private int b_int = 1;\n+ *   private int c_int;\n  *\n- *   private boolean a = true;\n- *   private boolean b = false;\n- *   private boolean c = true;\n- *   private boolean d = false;\n- *   private boolean e = false;\n+ *   private char a_char = '\\0';\n+ *   private char b_char = 'b';\n+ *   private char c_char;\n  *\n- *   private A a = new A();\n- *   private A b = null; // violation\n- *   private C c = null; // violation\n- *   private D d = new D();\n+ *   private boolean a_bool = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTcwMDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODoyMDoxMlrOGH0Prw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1Mzo1NlrOGV-REA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTE5OQ==", "bodyText": "usually, an OK case is marked as such:\n// OK, those references are ignored\n(applies to entire example)\n@strkkk please correct, if ignored is good here.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r410849199", "createdAt": "2020-04-19T08:20:12Z", "author": {"login": "muhlba91"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int intField1 = 0; // ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MjI2NA==", "bodyText": "@muhlba91\nSorry, apart form this suggestion do you know what is the reason of travis-ci failure?", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r410852264", "createdAt": "2020-04-19T08:37:32Z", "author": {"login": "ImmortalRabbit"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int intField1 = 0; // ignored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTE5OQ=="}, "originalCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1NTI2OA==", "bodyText": "this issue is related to travis itself (as far as i can judge now). it can be they are hitting some rate limiting or a similar issue:\n\nhttps://travis-ci.community/t/continuous-maven-repo-403/3908/37\ntravis-ci/travis-ci#10053 (comment)\nhttps://issues.sonatype.org/browse/MVNCENTRAL-4985\n\n@rnveach @romani @strkkk - can you please rerun the failed jobs and clear the caches. it seems maven have whitelisted new travis ip addresses nearly a week ago (unless they got new addresses in the meantime again).", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r410855268", "createdAt": "2020-04-19T08:54:08Z", "author": {"login": "muhlba91"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int intField1 = 0; // ignored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTE5OQ=="}, "originalCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5MzQ1Ng==", "bodyText": "@muhlba91 good point. Yes, something like // OK, references for primitives are ignored sounds better\n@ImmortalRabbit please correct", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r425693456", "createdAt": "2020-05-15T09:53:56Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int intField1 = 0; // ignored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTE5OQ=="}, "originalCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1085, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}