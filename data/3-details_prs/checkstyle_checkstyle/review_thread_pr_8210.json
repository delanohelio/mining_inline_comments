{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTcxODE3", "number": 8210, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozNVrOD3xb5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozNVrOD3xb5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODA4MjI4OnYy", "diffSide": "RIGHT", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidNoArgumentSuperConstructorCallTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozNVrOGOOAFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMToxM1rOGOO10g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY0NQ==", "bodyText": "This is the same path as in the first test, thus the same test case. Could you create and test a more complex case like this one:\npublic class A {\n  void fun() {\n    class B {\n      B() {\n        super(); // warn\n      }\n    }\n  }\n}", "url": "https://github.com/checkstyle/checkstyle/pull/8210#discussion_r417562645", "createdAt": "2020-04-29T19:36:35Z", "author": {"login": "rdiachenko"}, "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidNoArgumentSuperConstructorCallTest.java", "diffHunk": "@@ -62,4 +62,30 @@ public void testOne() throws Exception {\n \n         runVerifications(moduleConfig, fileToProcess, expectedViolation, expectedXpathQueries);\n     }\n+\n+    @Test\n+    public void testWithComments() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+            \"SuppressionXpathRegressionAvoidNoArgumentSuperConstructorCallWithComments.java\"\n+        ));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CLASS);\n+\n+        final String[] expectedViolation = {\n+            \"5:9: \" + getCheckMessage(CLASS,\n+                AvoidNoArgumentSuperConstructorCallCheck.MSG_CTOR),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da1c0ad6d23b2c9e49389d97521f6e90f51a70"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2ODI1NQ==", "bodyText": "Sure", "url": "https://github.com/checkstyle/checkstyle/pull/8210#discussion_r417568255", "createdAt": "2020-04-29T19:46:41Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidNoArgumentSuperConstructorCallTest.java", "diffHunk": "@@ -62,4 +62,30 @@ public void testOne() throws Exception {\n \n         runVerifications(moduleConfig, fileToProcess, expectedViolation, expectedXpathQueries);\n     }\n+\n+    @Test\n+    public void testWithComments() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+            \"SuppressionXpathRegressionAvoidNoArgumentSuperConstructorCallWithComments.java\"\n+        ));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CLASS);\n+\n+        final String[] expectedViolation = {\n+            \"5:9: \" + getCheckMessage(CLASS,\n+                AvoidNoArgumentSuperConstructorCallCheck.MSG_CTOR),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY0NQ=="}, "originalCommit": {"oid": "38da1c0ad6d23b2c9e49389d97521f6e90f51a70"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NjQwMg==", "bodyText": "Done, please check", "url": "https://github.com/checkstyle/checkstyle/pull/8210#discussion_r417576402", "createdAt": "2020-04-29T20:01:13Z", "author": {"login": "Gaurav-Punjabi"}, "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidNoArgumentSuperConstructorCallTest.java", "diffHunk": "@@ -62,4 +62,30 @@ public void testOne() throws Exception {\n \n         runVerifications(moduleConfig, fileToProcess, expectedViolation, expectedXpathQueries);\n     }\n+\n+    @Test\n+    public void testWithComments() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+            \"SuppressionXpathRegressionAvoidNoArgumentSuperConstructorCallWithComments.java\"\n+        ));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CLASS);\n+\n+        final String[] expectedViolation = {\n+            \"5:9: \" + getCheckMessage(CLASS,\n+                AvoidNoArgumentSuperConstructorCallCheck.MSG_CTOR),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY0NQ=="}, "originalCommit": {"oid": "38da1c0ad6d23b2c9e49389d97521f6e90f51a70"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 984, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}