{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NzY1OTA3", "number": 8417, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoyOTozOFrOENiaWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNToyNjoyMlrOESKJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMwNzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoyOTozOFrOGwPqYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1NTo0M1rOGwbbgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTQ0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** Creates a new {@code PatternVariableName} instance. */\n          \n          \n            \n                /** Creates a new {@code PatternVariableNameCheck} instance. */", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241443", "createdAt": "2020-07-11T22:29:38Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,129 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Default value is\n+ * {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STR) { // violation, name 'STR' must\n+ *                                         // match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *         if (o1 instanceof Integer num_1) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check to that all variables have 3 or more chars in name:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]{2,}$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String s) { // violation, name 's' must\n+ *                                       // match pattern '^[a-z][_a-zA-Z0-9]{2,}$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * @since 8.35\n+ */\n+public class PatternVariableNameCheck extends AbstractNameCheck {\n+\n+    /** Creates a new {@code PatternVariableName} instance. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDI0MQ==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434241", "createdAt": "2020-07-13T04:55:43Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,129 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Default value is\n+ * {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STR) { // violation, name 'STR' must\n+ *                                         // match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *         if (o1 instanceof Integer num_1) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check to that all variables have 3 or more chars in name:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]{2,}$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String s) { // violation, name 's' must\n+ *                                       // match pattern '^[a-z][_a-zA-Z0-9]{2,}$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * @since 8.35\n+ */\n+public class PatternVariableNameCheck extends AbstractNameCheck {\n+\n+    /** Creates a new {@code PatternVariableName} instance. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTQ0Mw=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMwODUxOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjozMDo0MVrOGwPq1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1NDo1M1rOGwbakQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n          \n            \n                    // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n      \n    \n    \n  \n\nMeta comment: do we typically list \"violation\" and \"ok\" comments in test inputs that are used in multiple test configurations? I was just thinking it's potentially a little confusing reading this file to see references to different patterns.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241558", "createdAt": "2020-07-11T22:30:41Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2MTMyNw==", "bodyText": "Input should be used in single test methods, so single config.\nUnfortunately not all inputs follow this model.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453261327", "createdAt": "2020-07-12T03:23:13Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDk3NA==", "bodyText": "I am going to amend this PR to have one input for each test method, and will do this going forward for all checks.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453350974", "createdAt": "2020-07-12T18:56:01Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDAwMQ==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434001", "createdAt": "2020-07-13T04:54:53Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMwOTE0OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjozMTo0MFrOGwPrGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1NTowNlrOGwba4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTYyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n          \n            \n                    // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241625", "createdAt": "2020-07-11T22:31:40Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDA4MA==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434080", "createdAt": "2020-07-13T04:55:06Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTYyNQ=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMwOTYzOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjozMjo0MlrOGwPrVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1NToxNlrOGwba_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTY4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)\n          \n          \n            \n                    // Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241685", "createdAt": "2020-07-11T22:32:42Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        b = ((VoidPredicate) () -> o1 instanceof String s).get();\n+\n+        ArrayList<Integer> arrayList = new ArrayList<Integer>();\n+        if (arrayList instanceof ArrayList<Integer> ai) {\n+            System.out.println(\"Blah\");\n+        }\n+\n+        //Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDExMQ==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434111", "createdAt": "2020-07-13T04:55:16Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        b = ((VoidPredicate) () -> o1 instanceof String s).get();\n+\n+        ArrayList<Integer> arrayList = new ArrayList<Integer>();\n+        if (arrayList instanceof ArrayList<Integer> ai) {\n+            System.out.println(\"Blah\");\n+        }\n+\n+        //Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTY4NQ=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMxNDU3OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_naming.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjo0MDozNVrOGwPthw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1NToyM1rOGwbbHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjI0Nw==", "bodyText": "Should be 8.35?", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453242247", "createdAt": "2020-07-11T22:40:35Z", "author": {"login": "esilkensen"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDE0Mw==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434143", "createdAt": "2020-07-13T04:55:23Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjI0Nw=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMxNjEyOnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_naming.xml", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjo0MzowOFrOGwPuQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDozOTo1NFrOGxqGqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg==", "bodyText": "These examples look a little strange - indentation, and curious if there's a reason the code here (and in the xpath example files) is in a block like this and not a constructor or method?", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453242432", "createdAt": "2020-07-11T22:43:08Z", "author": {"login": "esilkensen"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY5Ng==", "bodyText": "My reasoning was to keep code that wasn't relevant to the check/ this particular construct to a minimum; should I add more context to this code and make it more realistic?", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453350696", "createdAt": "2020-07-12T18:53:31Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDc4NA==", "bodyText": "Especially in these examples for the documentation, I did not want to over complicate the code.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453350784", "createdAt": "2020-07-12T18:54:23Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNjMyOA==", "bodyText": "I might vote to go ahead and name the block as a constructor or method just because it's a little more familiar, but it's a minor point of course -- I'll send this PR to @pbludov now, maybe he has a thought on it.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453436328", "createdAt": "2020-07-13T05:04:20Z", "author": {"login": "esilkensen"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MTAyNA==", "bodyText": "I agree with @esilkensen. The examples should be easy to read. The indentations are definitely necessary.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454141024", "createdAt": "2020-07-14T06:52:01Z", "author": {"login": "pbludov"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1NTExMA==", "bodyText": "I have pushed since this review, and fixed the indentation mistake. Just to be clear, you would like me to add  methods or constructors instead of just having the code in a static block?", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454255110", "createdAt": "2020-07-14T10:21:14Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0MjQ4Nw==", "bodyText": "In my opinion, the constructor is better .", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454542487", "createdAt": "2020-07-14T18:00:45Z", "author": {"login": "pbludov"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzI0MQ==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454723241", "createdAt": "2020-07-15T00:39:54Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2293,6 +2293,135 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>\n+          <subsection name=\"Description\" id=\"PatternVariableName_Description\">\n+              <p>\n+                  Checks that pattern variable names conform to a specified pattern.\n+              </p>\n+          </subsection>\n+\n+          <subsection name=\"Properties\" id=\"PatternVariableName_Properties\">\n+              <div class=\"wrapper\">\n+                  <table>\n+                      <tr>\n+                          <th>name</th>\n+                          <th>description</th>\n+                          <th>type</th>\n+                          <th>default value</th>\n+                          <th>since</th>\n+                      </tr>\n+                      <tr>\n+                          <td>format</td>\n+                          <td>Specifies valid identifiers.</td>\n+                          <td><a href=\"property_types.html#regexp\">Pattern</a></td>\n+                          <td><code>\"^[a-z][a-zA-Z0-9]*$\"</code></td>\n+                          <td>3.0</td>\n+                      </tr>\n+                  </table>\n+              </div>\n+          </subsection>\n+\n+          <subsection name=\"Examples\" id=\"PatternVariableName_Examples\">\n+              <p>\n+                  An example of how to configure the check is:\n+              </p>\n+\n+              <source>\n+                  &lt;module name=\"PatternVariableName\"/&gt;\n+              </source>\n+              <p>Code Example:</p>\n+              <source>\n+                  class MyClass {\n+                  {\n+                  Object o1 = null;\n+                  if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+                  // match pattern '^[a-z][a-zA-Z0-9]*$'\n+                  }\n+                  if (o1 instanceof Integer num) { // OK\n+                  }\n+                  }\n+                  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MjQzMg=="}, "originalCommit": {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjQyMTcxOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoyNzozN1rOGxF8OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDozOTo0N1rOGxqGhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzMDc0NA==", "bodyText": "Why not com.puppycrawl.tools.checkstyle.checks.naming.PatternVariableNameCheck*?", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454130744", "createdAt": "2020-07-14T06:27:37Z", "author": {"login": "pbludov"}, "path": "pom.xml", "diffHunk": "@@ -1857,6 +1857,9 @@\n                 <param>com.puppycrawl.tools.checkstyle.checks.NoCodeInFileCheck*</param>\n                 <param>com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheck*</param>\n                 <param>com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck*</param>\n+                <param>\n+                  com.puppycrawl.tools.checkstyle.checks.naming.PatternVariableNameCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzIwNA==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454723204", "createdAt": "2020-07-15T00:39:47Z", "author": {"login": "nmancus1"}, "path": "pom.xml", "diffHunk": "@@ -1857,6 +1857,9 @@\n                 <param>com.puppycrawl.tools.checkstyle.checks.NoCodeInFileCheck*</param>\n                 <param>com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheck*</param>\n                 <param>com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck*</param>\n+                <param>\n+                  com.puppycrawl.tools.checkstyle.checks.naming.PatternVariableNameCheck", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzMDc0NA=="}, "originalCommit": {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjQ1NTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo0MDoxN1rOGxGQKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDozOTozOVrOGxqGVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA==", "bodyText": "Actually, this is a pattern for \"a lower case letter, followed by letters and digits, optionally separated by underscore\".\nThese variable names: foo_, foo___bar do not match the pattern, although they are \"begin with a lower\ncase letter, followed by letters, digits, and underscores\". Please update either the pattern or the description.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454135848", "createdAt": "2020-07-14T06:40:17Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,140 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MDAzMA==", "bodyText": "Thanks for pointing this out, regex is definitely something I need to study more.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454670030", "createdAt": "2020-07-14T21:58:47Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,140 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA=="}, "originalCommit": {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzE1Ng==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454723156", "createdAt": "2020-07-15T00:39:39Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,140 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA=="}, "originalCommit": {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDY2NjQ2OnYy", "diffSide": "RIGHT", "path": "src/it/resources-noncompilable/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/InputPatternVariableNameEnhancedInstanceofTestDefault.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzozNDo1NlrOG3McLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzo1ODoyN1rOG3Mlng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyODY4Ng==", "bodyText": "remove config from google inputs, it is not required as config is single.\nWe have rule for embedded config only for UTs, where we have numerous configs.\nGoogle is single config, so copy of config will not do very good job, as google style is also changing periodically.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460528686", "createdAt": "2020-07-26T13:34:56Z", "author": {"login": "romani"}, "path": "src/it/resources-noncompilable/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/InputPatternVariableNameEnhancedInstanceofTestDefault.java", "diffHunk": "@@ -0,0 +1,83 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.google.checkstyle.test.chapter5naming.rule527localvariablenames;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+/*\n+ * Config:\n+ * tokens = PATTERN_VARIABLE_DEF\n+ * format = \"^[a-z][a-zA-Z0-9]*$\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "302954a7da5819fc7314c33e43f0aed32421706b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMTEwMg==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460531102", "createdAt": "2020-07-26T13:58:27Z", "author": {"login": "nmancus1"}, "path": "src/it/resources-noncompilable/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/InputPatternVariableNameEnhancedInstanceofTestDefault.java", "diffHunk": "@@ -0,0 +1,83 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.google.checkstyle.test.chapter5naming.rule527localvariablenames;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+/*\n+ * Config:\n+ * tokens = PATTERN_VARIABLE_DEF\n+ * format = \"^[a-z][a-zA-Z0-9]*$\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyODY4Ng=="}, "originalCommit": {"oid": "302954a7da5819fc7314c33e43f0aed32421706b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDc2MDU5OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_naming.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNToyNjoyMlrOG3NKRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjowMzoxMFrOG3NY2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MDQ4Nw==", "bodyText": "8.36", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460540487", "createdAt": "2020-07-26T15:26:22Z", "author": {"login": "romani"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2296,6 +2296,136 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e167e84b9a3a955a07e9dbb49dc17e9978d5cd70"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDIxNw==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460544217", "createdAt": "2020-07-26T16:03:10Z", "author": {"login": "nmancus1"}, "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -2296,6 +2296,136 @@ class MyClass {\n       </subsection>\n     </section>\n \n+    <section name=\"PatternVariableName\">\n+          <p>Since Checkstyle 8.35</p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MDQ4Nw=="}, "originalCommit": {"oid": "e167e84b9a3a955a07e9dbb49dc17e9978d5cd70"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 874, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}