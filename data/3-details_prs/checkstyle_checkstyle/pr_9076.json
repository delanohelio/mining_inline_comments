{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNTQ4MTI3", "number": 9076, "title": " Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "bodyText": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck\nI have simplified the logic quite a bit from the previous PR. The responsibility of implementing the requiredJavadocPhrase pattern (regex) should be on the user; we should not need to modify the text of the javadoc comment. We are only checking for a match anywhere within the javadoc, not an exact match of the entire contents of the javadoc.\nNote that this new property's default value is to match anything; that is, the check will still have the original behavior unless the phrase is changed.  I am making a patch config with the recommended This implementation... to make sure this works as intended.  I can run this a few times if we need to.\nLink to site: https://checkstyle-diff-reports.s3.us-east-2.amazonaws.com/issue-4358-design_2021220527/index.html\nLink to exact check documentation:  https://checkstyle-diff-reports.s3.us-east-2.amazonaws.com/issue-4358-design_2021220527/config_design.html#DesignForExtension\nDiff report 1 (Different patch and base): https://checkstyle-diff-reports.s3.us-east-2.amazonaws.com/issue-4358-design_2020075745/reports/diff/index.html\nDiff report 2 (same config): https://checkstyle-diff-reports.s3.us-east-2.amazonaws.com/issue-4358-design_2020134410/reports/diff/index.html\nDiff Regression projects: https://gist.githubusercontent.com/nmancus1/ac4228829bdf88c2e20aa77f4c358112/raw/91218ae045625ddb04df95cd03077a1402b624c0/projects-to-test-on.properties\nDiff Regression config: https://gist.githubusercontent.com/nmancus1/121b5d90a82a6fff8831c3842cfd8fed/raw/248c3e4c1d8ae7d9081812a15c0c7921bc417efc/DesignForExtensionBase.xml\npatch config: https://gist.githubusercontent.com/nmancus1/63a638e7dd6f9c4d3d3ff1006dafe716/raw/70c2b0ef5111ba9de0ec2b619c05171cee59ece7/DesignForExtensionPatch.xml", "createdAt": "2020-12-03T06:44:44Z", "url": "https://github.com/checkstyle/checkstyle/pull/9076", "merged": true, "mergeCommit": {"oid": "342c7e58bd31fbe6850ef591e812c6d054f07ce0"}, "closed": true, "closedAt": "2021-01-24T15:14:01Z", "author": {"login": "nmancus1"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdidf9egBqjQwNjU4Mzg1ODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdzA9RhAFqTU3NDg2MTEyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0136f5b871bbcba397e446c9fa0513e1528fc45e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0136f5b871bbcba397e446c9fa0513e1528fc45e", "committedDate": "2020-12-03T06:29:38Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "4f094f122f601f3db2e7228798fc37bdfa0edb44", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4f094f122f601f3db2e7228798fc37bdfa0edb44", "committedDate": "2020-12-03T06:52:34Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f094f122f601f3db2e7228798fc37bdfa0edb44", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4f094f122f601f3db2e7228798fc37bdfa0edb44", "committedDate": "2020-12-03T06:52:34Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "30940061b8b45754f36605f419f0d11f5f0d0e76", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/30940061b8b45754f36605f419f0d11f5f0d0e76", "committedDate": "2020-12-03T07:01:31Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30940061b8b45754f36605f419f0d11f5f0d0e76", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/30940061b8b45754f36605f419f0d11f5f0d0e76", "committedDate": "2020-12-03T07:01:31Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "aa55094ded1af219336fa3df14dfdc32508ed7b2", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/aa55094ded1af219336fa3df14dfdc32508ed7b2", "committedDate": "2020-12-29T05:07:49Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa55094ded1af219336fa3df14dfdc32508ed7b2", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/aa55094ded1af219336fa3df14dfdc32508ed7b2", "committedDate": "2020-12-29T05:07:49Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "fbfc298ab7d1069efd19067c623ed61e360bec6e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fbfc298ab7d1069efd19067c623ed61e360bec6e", "committedDate": "2021-01-01T15:16:08Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbfc298ab7d1069efd19067c623ed61e360bec6e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fbfc298ab7d1069efd19067c623ed61e360bec6e", "committedDate": "2021-01-01T15:16:08Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "committedDate": "2021-01-07T04:28:30Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "committedDate": "2021-01-07T04:28:30Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "committedDate": "2021-01-08T03:40:03Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODM4MjM3", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-564838237", "createdAt": "2021-01-10T08:16:42Z", "commit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwODoxNjo0MlrOIQ10tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwODoxNjo0MlrOIQ10tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUyOTk3Mg==", "bodyText": "The description is incomplete. There may be a issue in the metadata generation/validation.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r554529972", "createdAt": "2021-01-10T08:16:42Z", "author": {"login": "pbludov"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/meta/checks/design/DesignForExtensionCheck.xml", "diffHunk": "@@ -128,6 +128,11 @@\n                <description>Specify annotations which allow the check to\n  skip the method from validation.</description>\n             </property>\n+            <property default-value=\".*\"\n+                      name=\"requiredJavadocPhrase\"\n+                      type=\"java.util.regex.Pattern\">\n+               <description>Specify the comment text pattern which qualifies a</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "committedDate": "2021-01-08T03:40:03Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "a4cde628939506bf93cfe63dbefbeab9f30095f7", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a4cde628939506bf93cfe63dbefbeab9f30095f7", "committedDate": "2021-01-10T14:12:05Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4cde628939506bf93cfe63dbefbeab9f30095f7", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a4cde628939506bf93cfe63dbefbeab9f30095f7", "committedDate": "2021-01-10T14:12:05Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "5d76bd0b1919e072fafe809fe8ecb478c23c6321", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5d76bd0b1919e072fafe809fe8ecb478c23c6321", "committedDate": "2021-01-12T13:49:53Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d76bd0b1919e072fafe809fe8ecb478c23c6321", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5d76bd0b1919e072fafe809fe8ecb478c23c6321", "committedDate": "2021-01-12T13:49:53Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "committedDate": "2021-01-13T00:43:26Z", "message": "minor: refactor static methods to instance methods(#4358)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5OTc2NzA0", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-569976704", "createdAt": "2021-01-17T00:18:21Z", "commit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QwMDoxODoyMVrOIVKG2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QwMDoyMDo0OFrOIVKHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg==", "bodyText": "if you make requiredJavadocPhrase static, can we keep methods to stay static ?", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559056602", "createdAt": "2021-01-17T00:18:21Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -314,13 +365,13 @@ private static boolean hasJavadocCommentOnToken(DetailAST methodDef, int tokenTy\n      * @param token tree token.\n      * @return true if a javadoc comment exists under the token.\n      */\n-    private static boolean branchContainsJavadocComment(DetailAST token) {\n+    private boolean branchContainsJavadocComment(DetailAST token) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjcyOA==", "bodyText": "@nmancus1 , please investigate problem to generate full description, it might be separate issue, but better to identify it now.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559056728", "createdAt": "2021-01-17T00:19:47Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/meta/checks/design/DesignForExtensionCheck.xml", "diffHunk": "@@ -128,6 +128,11 @@\n                <description>Specify annotations which allow the check to\n  skip the method from validation.</description>\n             </property>\n+            <property default-value=\".*\"\n+                      name=\"requiredJavadocPhrase\"\n+                      type=\"java.util.regex.Pattern\">\n+               <description>Specify the comment text pattern which qualifies a</description>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUyOTk3Mg=="}, "originalCommit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjgxNQ==", "bodyText": "add a case of\n/**This method can safely be overridden. */ if this is valid javadoc (I am not sure)", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559056815", "createdAt": "2021-01-17T00:20:48Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/design/designforextension/InputDesignForExtensionRequiredJavadocPhrase.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package com.puppycrawl.tools.checkstyle.checks.design.designforextension;\n+\n+/* Config:\n+ * requiredJavadocPhrase = \"^This implementation.*\\\\.$\"\n+ *\n+ */\n+public class InputDesignForExtensionRequiredJavadocPhrase {\n+\n+    /**\n+     * This implementation is for <p> some html code\n+     * </p>.\n+     *\n+     * @param a\n+     * @param b\n+     * @return sum\n+     */\n+    public int foo1(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /**\n+     * This implementation is required for ...\n+     *\n+     * @param a\n+     * @param b\n+     * @return sum\n+     */\n+    public int foo2(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /** This implementation is for ... */\n+    public int foo3(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /**\n+     * This implementation ...\n+     */\n+    public int foo4(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /** This method can safely be overridden. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMTEyNDk5", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-570112499", "createdAt": "2021-01-18T00:22:23Z", "commit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMDoyMjoyM1rOIVWsGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMDoyMjoyM1rOIVWsGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI2Mjc0Ng==", "bodyText": "there will be questions from users on how we treat match on multi lines.\nPlease add fee words on this in property description and please add example\n *   /&#42;&#42; This\n *   &#42; implementation ...", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559262746", "createdAt": "2021-01-18T00:22:23Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +215,35 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "committedDate": "2021-01-13T00:43:26Z", "message": "minor: refactor static methods to instance methods(#4358)"}, "afterCommit": {"oid": "38a58ee12d769a87816a37f68fd4015852a96062", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/38a58ee12d769a87816a37f68fd4015852a96062", "committedDate": "2021-01-20T12:47:05Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38a58ee12d769a87816a37f68fd4015852a96062", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/38a58ee12d769a87816a37f68fd4015852a96062", "committedDate": "2021-01-20T12:47:05Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}, "afterCommit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "committedDate": "2021-01-20T12:58:21Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NDQ5ODQ3", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574449847", "createdAt": "2021-01-22T17:06:04Z", "commit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNzowNjowNFrOIYtB7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNzowODowNVrOIYtHjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3NDUxMA==", "bodyText": "remove extra space", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562774510", "createdAt": "2021-01-22T17:06:04Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -236,6 +304,12 @@\n     private Set<String> ignoredAnnotations = Arrays.stream(new String[] {\"Test\", \"Before\", \"After\",\n         \"BeforeClass\", \"AfterClass\", }).collect(Collectors.toSet());\n \n+    /**\n+     * Specify the comment text pattern which qualifies a method as designed for extension.\n+     *  Supports multi-line regex.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3NTk0OQ==", "bodyText": "some other Checks do have long descriptions and it works fine for them.\nin worse case I would agree to make description single line and suppress violation from LineLenght on it, until issue is resolved.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562775949", "createdAt": "2021-01-22T17:08:05Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/meta/checks/design/DesignForExtensionCheck.xml", "diffHunk": "@@ -128,6 +128,11 @@\n                <description>Specify annotations which allow the check to\n  skip the method from validation.</description>\n             </property>\n+            <property default-value=\".*\"\n+                      name=\"requiredJavadocPhrase\"\n+                      type=\"java.util.regex.Pattern\">\n+               <description>Specify the comment text pattern which qualifies a</description>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUyOTk3Mg=="}, "originalCommit": {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NDU0MTQ2", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574454146", "createdAt": "2021-01-22T17:11:15Z", "commit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNzoxMToxNlrOIYtPPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxNzoxMzo1OVrOIYtVsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3NzkxNw==", "bodyText": "sorry, I now got a problem, my bad, property of Check can not be static. I recall review item.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562777917", "createdAt": "2021-01-22T17:11:16Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -314,13 +365,13 @@ private static boolean hasJavadocCommentOnToken(DetailAST methodDef, int tokenTy\n      * @param token tree token.\n      * @return true if a javadoc comment exists under the token.\n      */\n-    private static boolean branchContainsJavadocComment(DetailAST token) {\n+    private boolean branchContainsJavadocComment(DetailAST token) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg=="}, "originalCommit": {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTM5Ng==", "bodyText": "please make method single line as methods below to be consistent in look.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562779396", "createdAt": "2021-01-22T17:13:42Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,66 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTU3MQ==", "bodyText": "single line please", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562779571", "createdAt": "2021-01-22T17:13:59Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,66 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;\n+ *   }\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo2() {return 8;} // violation, required javadoc phrase not in comment\n+ *\n+ *   public int foo3() {return 3;} // violation, required javadoc phrase not in comment\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc which can span multiple lines\n+ * to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This[\\s\\S]*implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This\n+ *   &#42; implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "committedDate": "2021-01-20T12:58:21Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}, "afterCommit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b61406ac8f000fafb01c62f9305c435a8bfeef16", "committedDate": "2021-01-22T19:57:02Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NjI1MzY4", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574625368", "createdAt": "2021-01-22T21:15:01Z", "commit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQyMToxNTowMVrOIY1lig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQyMToxNTowMVrOIY1lig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkxNDY5OA==", "bodyText": "remove extends B in all cases.\nCheck do make any decision on this.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562914698", "createdAt": "2021-01-22T21:15:01Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,62 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NjMzODE0", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574633814", "createdAt": "2021-01-22T21:24:50Z", "commit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQyMToyNDo1MFrOIY1-Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQyMToyNDo1MFrOIY1-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkyMTA1NQ==", "bodyText": "please remove such empty lines from javadoc, the less unnecessary stuff the better for user.", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562921055", "createdAt": "2021-01-22T21:24:50Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,62 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() {return 2;} // ok, required javadoc phrase in comment\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf3085d74b4fbbef6856c32345d57fa24d72cb1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/eaf3085d74b4fbbef6856c32345d57fa24d72cb1", "committedDate": "2021-01-23T13:22:29Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dfd60bef8c6ead96438c633b03b91febfbd9c270", "committedDate": "2021-01-23T13:22:29Z", "message": "minor: remove uneccessary \"extends\" from code example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b61406ac8f000fafb01c62f9305c435a8bfeef16", "committedDate": "2021-01-22T19:57:02Z", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck"}, "afterCommit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/dfd60bef8c6ead96438c633b03b91febfbd9c270", "committedDate": "2021-01-23T13:22:29Z", "message": "minor: remove uneccessary \"extends\" from code example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0ODYwNDE5", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574860419", "createdAt": "2021-01-23T16:54:37Z", "commit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0ODYxMTIw", "url": "https://github.com/checkstyle/checkstyle/pull/9076#pullrequestreview-574861120", "createdAt": "2021-01-23T17:05:57Z", "commit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yM1QxNzowNTo1N1rOIZFe8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yM1QxNzoxMTo0NlrOIZFhMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ==", "bodyText": "#4358 (comment)\n\nDefault should be \"^This implementation \" (as mentioned in our html doc).\n\nWas this changed?", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563175155", "createdAt": "2021-01-23T17:05:57Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -159,6 +161,12 @@\n  * Type is {@code java.lang.String[]}.\n  * Default value is {@code After, AfterClass, Before, BeforeClass, Test}.\n  * </li>\n+ * <li>\n+ * Property {@code requiredJavadocPhrase} - Specify the comment text pattern which qualifies a\n+ * method as designed for extension. Supports multi-line regex.\n+ * Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \".*\"}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTczMA==", "bodyText": "What happens if there is HTML between the text? Bold for example. How do I configure this?", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563175730", "createdAt": "2021-01-23T17:11:46Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,58 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;/\n+ *   public int foo() {return 2;} // ok, required javadoc phrase in comment\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;/\n+ *   public int foo2() {return 8;} // violation, required javadoc phrase not in comment\n+ *\n+ *   public int foo3() {return 3;} // violation, required javadoc phrase not in comment\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc which can span multiple lines", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1283, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}