{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDYxODYz", "number": 7478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMjoyNjo0NFrODY-k3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMjoyNjo0NFrODY-k3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTE3NjYzOnYy", "diffSide": "LEFT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMjoyNjo0NFrOFfJJSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMToyNToxNVrOFfMKEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ==", "bodyText": "why start here and not include the try/catch above? Then the whole new method could be called like validateCliWithConfigurationFile or such.", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368200011", "createdAt": "2020-01-18T02:26:44Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNTY5Mg==", "bodyText": "config file is not optional, all other parameters are optional.\nI think it is reasonable in current form, please review again.", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368235692", "createdAt": "2020-01-18T16:36:09Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ=="}, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNzQ2Ng==", "bodyText": "I was referring to this is all part of the if.\n\nelse if (hasConfigurationFile) {\n\nMoving the try/catch to the new method would make the code:\nelse if (hasConfigurationFile) {\n    result.addAll(validateOptionalCliParameters());\n}", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368237466", "createdAt": "2020-01-18T17:10:12Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ=="}, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MjMzMw==", "bodyText": "Config is not optional in comparison to MT parameters.\nWhat about validateOptionalCliParametersIfConfigDefined ?", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368242333", "createdAt": "2020-01-18T18:49:30Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ=="}, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0NzE3NQ==", "bodyText": "sounds fine to me. I was only speaking about putting more code into the method.", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368247175", "createdAt": "2020-01-18T20:35:10Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ=="}, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTM2MQ==", "bodyText": "renamed, with more code ... it become hard to make name, .... we will think about it later.", "url": "https://github.com/checkstyle/checkstyle/pull/7478#discussion_r368249361", "createdAt": "2020-01-18T21:25:15Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "diffHunk": "@@ -786,24 +786,32 @@ else if (hasConfigurationFile) {\n                     final String msg = \"Could not find config XML file '%s'.\";\n                     result.add(String.format(Locale.ROOT, msg, configurationFile));\n                 }\n-\n-                // validate optional parameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwMDAxMQ=="}, "originalCommit": {"oid": "55e8b601d631ce79fde4ea78b1e9b12aa7db0b8b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1512, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}