{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MzQwNTg2", "number": 8917, "title": "Issue #8916: use empty string for empty array values of token property", "bodyText": "Issue #8916", "createdAt": "2020-10-22T14:36:09Z", "url": "https://github.com/checkstyle/checkstyle/pull/8917", "merged": true, "mergeCommit": {"oid": "de2f537d42a0165709c40b74a1757822814d22eb"}, "closed": true, "closedAt": "2020-10-27T05:40:53Z", "author": {"login": "romani"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVDDTVAH2gAyNTA4MzQwNTg2OjM3NTI5OWY0ZDkzYjNmOWJiNTE4OGM2ODk3NmMzNDU0ZjFmZDYzNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWefQuAFqTUxNzI4MTUwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "375299f4d93b3f9bb5188c68976c3454f1fd636b", "author": {"user": {"login": "romani", "name": "Roman Ivanov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/375299f4d93b3f9bb5188c68976c3454f1fd636b", "committedDate": "2020-10-22T14:42:58Z", "message": "Issue #8916: use empty string for empty array values of token property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDE2MzYw", "url": "https://github.com/checkstyle/checkstyle/pull/8917#pullrequestreview-515416360", "createdAt": "2020-10-23T07:39:32Z", "commit": {"oid": "375299f4d93b3f9bb5188c68976c3454f1fd636b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzozOTozMlrOHnCQNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0MzowMVrOHnCXlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5MzQzMQ==", "bodyText": "if this is changed, how come metadata file didn't change?", "url": "https://github.com/checkstyle/checkstyle/pull/8917#discussion_r510693431", "createdAt": "2020-10-23T07:39:32Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "diffHunk": "@@ -54,7 +54,7 @@\n  * Property {@code tokens} - tokens to check\n  * Type is {@code java.lang.String[]}.\n  * Validation type is {@code tokenSet}.\n- * Default value is: empty.\n+ * Default value is: {@code \"\"}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375299f4d93b3f9bb5188c68976c3454f1fd636b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5Mzk4OA==", "bodyText": "{@code empty} above you removed the only occurrence of this in code, why it is added here?", "url": "https://github.com/checkstyle/checkstyle/pull/8917#discussion_r510693988", "createdAt": "2020-10-23T07:40:37Z", "author": {"login": "strkkk"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -393,10 +393,12 @@ else if (isPropertyTokenType) {\n         return result;\n     }\n \n-    private static String emptyStringArrayDefaultValue(Node defaultValueNode) {\n+    private static String emptyStringArrayDefaultValue(Node defaultValueNode,\n+                                                boolean isPropertyTokenType) {\n         String defaultValueText = getNodeText(defaultValueNode);\n         if (\"{@code {}}\".equals(defaultValueText)\n-            || \"{@code all files}\".equals(defaultValueText)) {\n+            || \"{@code all files}\".equals(defaultValueText)\n+            || isPropertyTokenType && \"{@code empty}\".equals(defaultValueText)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375299f4d93b3f9bb5188c68976c3454f1fd636b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NTMxNw==", "bodyText": "should have ',' & '.'\n\nProbably 'and' should be 'or'\narguably it is better to make it should have comma and dot ....  instead of chars", "url": "https://github.com/checkstyle/checkstyle/pull/8917#discussion_r510695317", "createdAt": "2020-10-23T07:43:01Z", "author": {"login": "strkkk"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -896,14 +896,20 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         final String defaultTokenText = columns.get(3).getTextContent().trim();\n         final String expectedDefaultTokenText = CheckUtil.getTokenText(check.getDefaultTokens(),\n                 check.getRequiredTokens());\n-        assertEquals(expectedDefaultTokenText, defaultTokenText\n-                        .replaceAll(\"\\\\s+\", \" \")\n-                        .replaceAll(\"\\\\s,\", \",\")\n-                        .replaceAll(\"\\\\s\\\\.\", \".\"),\n-                fileName + \" section '\" + sectionName + \"' should have all the default tokens\");\n-        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n-                fileName + \"'s default token section: \" + sectionName\n-                        + \"should have ',' & '.' at beginning of the next corresponding lines.\");\n+        if (expectedDefaultTokenText.isEmpty()) {\n+            assertEquals(\"empty\", defaultTokenText,\n+                    \"Empty tokens should have 'empty' string in xdoc\");\n+        }\n+        else {\n+            assertEquals(expectedDefaultTokenText, defaultTokenText\n+                            .replaceAll(\"\\\\s+\", \" \")\n+                            .replaceAll(\"\\\\s,\", \",\")\n+                            .replaceAll(\"\\\\s\\\\.\", \".\"),\n+                    fileName + \" section '\" + sectionName + \"' should have all the default tokens\");\n+            assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                    fileName + \"'s default token section: \" + sectionName\n+                           + \"should have ',' & '.' at beginning of the next corresponding lines.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375299f4d93b3f9bb5188c68976c3454f1fd636b"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2435f959953e219a81998f2042f9cc846ec52b", "author": {"user": {"login": "romani", "name": "Roman Ivanov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8c2435f959953e219a81998f2042f9cc846ec52b", "committedDate": "2020-10-23T14:27:49Z", "message": "minor: fix wording in assert for leading comma and dot in tokens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTUxNjA1", "url": "https://github.com/checkstyle/checkstyle/pull/8917#pullrequestreview-515951605", "createdAt": "2020-10-23T19:33:38Z", "commit": {"oid": "8c2435f959953e219a81998f2042f9cc846ec52b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MjgxNTA3", "url": "https://github.com/checkstyle/checkstyle/pull/8917#pullrequestreview-517281507", "createdAt": "2020-10-27T01:14:52Z", "commit": {"oid": "8c2435f959953e219a81998f2042f9cc846ec52b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1373, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}