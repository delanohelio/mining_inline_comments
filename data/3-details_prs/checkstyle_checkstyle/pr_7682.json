{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDk4NTM2", "number": 7682, "title": "Issue #7591: Update doc for TodoComment", "bodyText": "Fixes Issue: #7591\n\nOutput of default example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n    <module name=\"TodoComment\"/>\n  </module>\n </module>\n\n $ cat Test.java\n public class Test {\n\n public void myTest() {\n    i++;   // TODO: do differently in future   // violation\n    i++;   // todo: do differently in future   // OK\n   }\n\n }\n\n $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java\n Starting audit...\n [ERROR] D:\\OpenSource\\TestCommit\\Test.java:4: Comment matches to-do format 'TODO:'. [TodoComment] \n Audit done.\n Checkstyle ends with 1 errors.\n\nOutput of non-default example:\n$ cat config2.xml\n\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n   <module name=\"TodoComment\">\n    <property name=\"format\" value=\"(TODO)|(FIXME)\"/>\n  </module>\n  </module>\n</module>\n\n$ cat Test2.java\n\npublic class Test {\n\n  public void myTest() {\n      i++;   // TODO: do differently in future   // violation\n      i++;   // todo: do differently in future   // OK\n      i=i/x; // FIXME: handle x = 0 case         // violation\n      i=i/x; // FIX :  handle x = 0 case         // OK\n  }\n\n}\n$ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java\nStarting audit...\n[ERROR] D:\\OpenSource\\TestCommit\\Test2.java:4: Comment matches to-do format '(TODO)|(FIXME)'. [TodoComment]\n[ERROR] D:\\OpenSource\\TestCommit\\Test2.java:6: Comment matches to-do format '(TODO)|(FIXME)'. [TodoComment]\nAudit done.\nCheckstyle ends with 2 errors.", "createdAt": "2020-02-27T22:09:35Z", "url": "https://github.com/checkstyle/checkstyle/pull/7682", "merged": true, "mergeCommit": {"oid": "12c6e69fe7de3d462f5ca117dc4a6f0ba51a1d7c"}, "closed": true, "closedAt": "2020-03-01T05:51:23Z", "author": {"login": "AmrDeveloper"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIm753AFqTM2NjEzNTEyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI28LkgBqjMwODM2MTI1NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTM1MTIw", "url": "https://github.com/checkstyle/checkstyle/pull/7682#pullrequestreview-366135120", "createdAt": "2020-02-28T02:58:33Z", "commit": {"oid": "cae3e5eeadffac54865c2b65d059500a1ee5703c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo1ODozM1rOFvoJAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo1OTowMlrOFvoJXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NTA1Nw==", "bodyText": "Please add some java statement in front , at least i++; // TODO: do differently in future. This Check is only applicable to java files, as have to be placed under Treewalker module.\nPlease add example of Todo comment that default config will not catch like ` // todo: haha.   // Ok", "url": "https://github.com/checkstyle/checkstyle/pull/7682#discussion_r385485057", "createdAt": "2020-02-28T02:58:33Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "diffHunk": "@@ -50,13 +50,26 @@\n  * &lt;module name=\"TodoComment\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * //TODO: ..... violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae3e5eeadffac54865c2b65d059500a1ee5703c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NTE0OA==", "bodyText": "Please add cases without violation", "url": "https://github.com/checkstyle/checkstyle/pull/7682#discussion_r385485148", "createdAt": "2020-02-28T02:59:02Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "diffHunk": "@@ -50,13 +50,26 @@\n  * &lt;module name=\"TodoComment\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * //TODO: ..... violation\n+ * </pre>\n+ * <p>\n  * To configure the check for comments that contain {@code TODO} and {@code FIXME}:\n  * </p>\n  * <pre>\n  * &lt;module name=\"TodoComment\"&gt;\n  *   &lt;property name=\"format\" value=\"(TODO)|(FIXME)\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * //TODO: ..... violation\n+ * //FIXME: ..... violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae3e5eeadffac54865c2b65d059500a1ee5703c"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42fe18c3c82378a1e142c856bf283ef18db69e36", "author": {"user": {"login": "AmrDeveloper", "name": "Amr Hesham"}}, "url": "https://github.com/checkstyle/checkstyle/commit/42fe18c3c82378a1e142c856bf283ef18db69e36", "committedDate": "2020-02-28T21:32:14Z", "message": "Issue #7591: Update doc for TodoComment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7fe6373d9a8458904b99d5e02d6fbe6b213a437", "author": {"user": {"login": "AmrDeveloper", "name": "Amr Hesham"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b7fe6373d9a8458904b99d5e02d6fbe6b213a437", "committedDate": "2020-02-28T03:51:44Z", "message": "Issue #7591: Update doc for TodoComment"}, "afterCommit": {"oid": "42fe18c3c82378a1e142c856bf283ef18db69e36", "author": {"user": {"login": "AmrDeveloper", "name": "Amr Hesham"}}, "url": "https://github.com/checkstyle/checkstyle/commit/42fe18c3c82378a1e142c856bf283ef18db69e36", "committedDate": "2020-02-28T21:32:14Z", "message": "Issue #7591: Update doc for TodoComment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1042, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}