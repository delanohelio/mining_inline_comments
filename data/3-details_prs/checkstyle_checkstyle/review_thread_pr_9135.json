{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjY2NzEw", "number": 9135, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMjo0MToyN1rOFJhJEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMzozODozNVrOFL8ATQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTI0NDk5OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMjo0MToyN1rOIL4sUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNTowNjoyMlrOIMHDHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNDA5OA==", "bodyText": "// violation comments should be on lines 19 and 25, where violation is reported", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549334098", "createdAt": "2020-12-28T12:41:27Z", "author": {"login": "strkkk"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "diffHunk": "@@ -0,0 +1,28 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.avoidescapedunicodecharacters;\n+\n+/* Config:\n+ *\n+ * allowEscapesForControlCharacters = false\n+ * allowByTailComment = false\n+ * allowIfAllCharactersEscaped = true\n+ * allowNonPrintableEscapes = false\n+ */\n+public class InputAvoidEscapedUnicodeCharactersEscapedS {\n+    String value1 = \"\\u03bc\\t\"; // ok\n+    String value2 = \"\\u03bc\\s\"; // ok\n+    String value3 = \"\\u03bc\\s not all escaped chars\"; // violation\n+    String value31 = \"\\u03bc\\n not all escaped chars\"; // violation\n+    String value4 = \"\"\"\n+            \\s\\s\\s\\n\n+            \"\"\"; // ok\n+    String value5 = \"\"\"\n+            \\u03bc\\s\n+            \"\"\"; // ok\n+    String value6 = \"\"\"\n+            \\s\\s\\s\\n not all escaped chars\n+            \"\"\"; // violation\n+    String value7 = \"\"\"\n+            \\u03bc\\s not all escaped chars\n+            \"\"\"; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff954b81103c5f09b171cb1f903a3897143f46a2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3Mjk3Mw==", "bodyText": "@strkkk it is not possible to add comments to those particular lines; they would become text block content. I have added comments to make that more clear in the test case.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549372973", "createdAt": "2020-12-28T14:46:42Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "diffHunk": "@@ -0,0 +1,28 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.avoidescapedunicodecharacters;\n+\n+/* Config:\n+ *\n+ * allowEscapesForControlCharacters = false\n+ * allowByTailComment = false\n+ * allowIfAllCharactersEscaped = true\n+ * allowNonPrintableEscapes = false\n+ */\n+public class InputAvoidEscapedUnicodeCharactersEscapedS {\n+    String value1 = \"\\u03bc\\t\"; // ok\n+    String value2 = \"\\u03bc\\s\"; // ok\n+    String value3 = \"\\u03bc\\s not all escaped chars\"; // violation\n+    String value31 = \"\\u03bc\\n not all escaped chars\"; // violation\n+    String value4 = \"\"\"\n+            \\s\\s\\s\\n\n+            \"\"\"; // ok\n+    String value5 = \"\"\"\n+            \\u03bc\\s\n+            \"\"\"; // ok\n+    String value6 = \"\"\"\n+            \\s\\s\\s\\n not all escaped chars\n+            \"\"\"; // violation\n+    String value7 = \"\"\"\n+            \\u03bc\\s not all escaped chars\n+            \"\"\"; // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNDA5OA=="}, "originalCommit": {"oid": "ff954b81103c5f09b171cb1f903a3897143f46a2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU2NjQ1MQ==", "bodyText": "It is ok to to have // violation as part of string value. All we need is visual marker that line has violation", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549566451", "createdAt": "2020-12-29T04:47:11Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "diffHunk": "@@ -0,0 +1,28 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.avoidescapedunicodecharacters;\n+\n+/* Config:\n+ *\n+ * allowEscapesForControlCharacters = false\n+ * allowByTailComment = false\n+ * allowIfAllCharactersEscaped = true\n+ * allowNonPrintableEscapes = false\n+ */\n+public class InputAvoidEscapedUnicodeCharactersEscapedS {\n+    String value1 = \"\\u03bc\\t\"; // ok\n+    String value2 = \"\\u03bc\\s\"; // ok\n+    String value3 = \"\\u03bc\\s not all escaped chars\"; // violation\n+    String value31 = \"\\u03bc\\n not all escaped chars\"; // violation\n+    String value4 = \"\"\"\n+            \\s\\s\\s\\n\n+            \"\"\"; // ok\n+    String value5 = \"\"\"\n+            \\u03bc\\s\n+            \"\"\"; // ok\n+    String value6 = \"\"\"\n+            \\s\\s\\s\\n not all escaped chars\n+            \"\"\"; // violation\n+    String value7 = \"\"\"\n+            \\u03bc\\s not all escaped chars\n+            \"\"\"; // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNDA5OA=="}, "originalCommit": {"oid": "ff954b81103c5f09b171cb1f903a3897143f46a2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU2ODc0MQ==", "bodyText": "@romani in the case of text blocks, the initial newline and triple quotes delimit the content. I cannot put a comment or text following the delimiter on the same line.  I could do a C style comment:\n                String test = /* violation */\"\"\"\n                        \"\"\";", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549568741", "createdAt": "2020-12-29T05:02:26Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "diffHunk": "@@ -0,0 +1,28 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.avoidescapedunicodecharacters;\n+\n+/* Config:\n+ *\n+ * allowEscapesForControlCharacters = false\n+ * allowByTailComment = false\n+ * allowIfAllCharactersEscaped = true\n+ * allowNonPrintableEscapes = false\n+ */\n+public class InputAvoidEscapedUnicodeCharactersEscapedS {\n+    String value1 = \"\\u03bc\\t\"; // ok\n+    String value2 = \"\\u03bc\\s\"; // ok\n+    String value3 = \"\\u03bc\\s not all escaped chars\"; // violation\n+    String value31 = \"\\u03bc\\n not all escaped chars\"; // violation\n+    String value4 = \"\"\"\n+            \\s\\s\\s\\n\n+            \"\"\"; // ok\n+    String value5 = \"\"\"\n+            \\u03bc\\s\n+            \"\"\"; // ok\n+    String value6 = \"\"\"\n+            \\s\\s\\s\\n not all escaped chars\n+            \"\"\"; // violation\n+    String value7 = \"\"\"\n+            \\u03bc\\s not all escaped chars\n+            \"\"\"; // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNDA5OA=="}, "originalCommit": {"oid": "ff954b81103c5f09b171cb1f903a3897143f46a2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU2OTMxMA==", "bodyText": "I left a comment after each text block, and a C style comment on the same line.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549569310", "createdAt": "2020-12-29T05:06:22Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/avoidescapedunicodecharacters/InputAvoidEscapedUnicodeCharactersEscapedS.java", "diffHunk": "@@ -0,0 +1,28 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.avoidescapedunicodecharacters;\n+\n+/* Config:\n+ *\n+ * allowEscapesForControlCharacters = false\n+ * allowByTailComment = false\n+ * allowIfAllCharactersEscaped = true\n+ * allowNonPrintableEscapes = false\n+ */\n+public class InputAvoidEscapedUnicodeCharactersEscapedS {\n+    String value1 = \"\\u03bc\\t\"; // ok\n+    String value2 = \"\\u03bc\\s\"; // ok\n+    String value3 = \"\\u03bc\\s not all escaped chars\"; // violation\n+    String value31 = \"\\u03bc\\n not all escaped chars\"; // violation\n+    String value4 = \"\"\"\n+            \\s\\s\\s\\n\n+            \"\"\"; // ok\n+    String value5 = \"\"\"\n+            \\u03bc\\s\n+            \"\"\"; // ok\n+    String value6 = \"\"\"\n+            \\s\\s\\s\\n not all escaped chars\n+            \"\"\"; // violation\n+    String value7 = \"\"\"\n+            \\u03bc\\s not all escaped chars\n+            \"\"\"; // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNDA5OA=="}, "originalCommit": {"oid": "ff954b81103c5f09b171cb1f903a3897143f46a2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTYxMTM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo0NTo0M1rOIMd0qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo1Njo0MFrOIMu6IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MjQ0Mw==", "bodyText": "I think we should move this text to PR description. This comment is hard to understand", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r549942443", "createdAt": "2020-12-30T05:45:43Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -348,7 +350,13 @@ public void beginTree(DetailAST rootAST) {\n \n     @Override\n     public void visitToken(DetailAST ast) {\n-        final String literal = ast.getText();\n+        // pitest does not like the following assignment guarded by\n+        // a 'if' statement that checks token type. Since traditional string\n+        // literals do not have preceeding whitespace or newline,\n+        // 'stripIndentAndInitialNewLineFromTextBlock' has no effect\n+        // on them and does not affect the functionality of this check.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61d6958401175db6bccdcca23db6e16afe7aa7e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIyMjM2OQ==", "bodyText": "@romani I put a detailed comment in the PR description, and just did a\n// See https://github.com/checkstyle/checkstyle/pull/9135#issue-545666710 comment before the assignment.\nAfter thinking about review items from #9134 (review), this is what git blame is for. Comment removed.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r550222369", "createdAt": "2020-12-30T14:56:40Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -348,7 +350,13 @@ public void beginTree(DetailAST rootAST) {\n \n     @Override\n     public void visitToken(DetailAST ast) {\n-        final String literal = ast.getText();\n+        // pitest does not like the following assignment guarded by\n+        // a 'if' statement that checks token type. Since traditional string\n+        // literals do not have preceeding whitespace or newline,\n+        // 'stripIndentAndInitialNewLineFromTextBlock' has no effect\n+        // on them and does not affect the functionality of this check.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MjQ0Mw=="}, "originalCommit": {"oid": "d61d6958401175db6bccdcca23db6e16afe7aa7e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDM1ODEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToxMzoyMlrOIMlSOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo1NTo0MFrOIMu4tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA2NDY5Ng==", "bodyText": "Please change the link to https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10.7\n\n\nAll patterns in this file seems to be sorted. It is better to place \\s between \\r and \\t\n\n\nThe docs says there is one more escape - for a trailing \\. Something like \\\\$.\nFor example\n\n\n    static final String value1 = \"\"\"\n        \\u03bc\\\n        \\s\\u03bc\\\n        \"\"\"; // ok\nis just \u03bc \u03bc. Please create a new issue for this.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r550064696", "createdAt": "2020-12-30T09:13:22Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -191,6 +192,7 @@\n             + \"|\\\\\\\\n\"\n             + \"|\\\\\\\\r\"\n             + \"|\\\\\\\\t\"\n+            + \"|\\\\\\\\s\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61d6958401175db6bccdcca23db6e16afe7aa7e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIyMjAwNw==", "bodyText": "Done\nDone.\n#9143", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r550222007", "createdAt": "2020-12-30T14:55:40Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -191,6 +192,7 @@\n             + \"|\\\\\\\\n\"\n             + \"|\\\\\\\\r\"\n             + \"|\\\\\\\\t\"\n+            + \"|\\\\\\\\s\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA2NDY5Ng=="}, "originalCommit": {"oid": "d61d6958401175db6bccdcca23db6e16afe7aa7e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDUzMDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjo1Nzo0NFrOIPY1hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMzoyOToyOFrOIPZdbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAwNjQ2OA==", "bodyText": "Confirm Issue #9159 represents this fix. I will approve that issue and you should split this PR into 2 commits, 1 for new functionality and 1 for a bug fix. Then we can merge it since others have all approved this.\nThis is so the bug fix doesn't get lost in the release notes as they should go under different items.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r553006468", "createdAt": "2021-01-06T22:57:44Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -348,7 +350,8 @@ public void beginTree(DetailAST rootAST) {\n \n     @Override\n     public void visitToken(DetailAST ast) {\n-        final String literal = ast.getText();\n+        final String literal =\n+            CheckUtil.stripIndentAndInitialNewLineFromTextBlock(ast.getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e302c725527352ba1baa1735e1edb320555d91df"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAxNjY4NQ==", "bodyText": "Issue #9159 does represent this fix. PR split.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r553016685", "createdAt": "2021-01-06T23:29:28Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -348,7 +350,8 @@ public void beginTree(DetailAST rootAST) {\n \n     @Override\n     public void visitToken(DetailAST ast) {\n-        final String literal = ast.getText();\n+        final String literal =\n+            CheckUtil.stripIndentAndInitialNewLineFromTextBlock(ast.getText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAwNjQ2OA=="}, "originalCommit": {"oid": "e302c725527352ba1baa1735e1edb320555d91df"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDYxNzczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMzozODozNVrOIPZoAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMzo0NDoxM1rOIPZt8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAxOTM5Mg==", "bodyText": "Should this change be in the first commit?", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r553019392", "createdAt": "2021-01-06T23:38:35Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -453,8 +455,7 @@ private static int countMatches(Pattern pattern, String target) {\n      */\n     private boolean isAllCharactersEscaped(String literal) {\n         return allowIfAllCharactersEscaped\n-                && ALL_ESCAPED_CHARS.matcher(literal.substring(1,\n-                        literal.length() - 1)).find();\n+                && ALL_ESCAPED_CHARS.matcher(literal).find();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7471971603dbc5c9323687b32a31124c15df42f8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyMDkxNA==", "bodyText": "Yes, apologies. Fixing now.", "url": "https://github.com/checkstyle/checkstyle/pull/9135#discussion_r553020914", "createdAt": "2021-01-06T23:44:13Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "diffHunk": "@@ -453,8 +455,7 @@ private static int countMatches(Pattern pattern, String target) {\n      */\n     private boolean isAllCharactersEscaped(String literal) {\n         return allowIfAllCharactersEscaped\n-                && ALL_ESCAPED_CHARS.matcher(literal.substring(1,\n-                        literal.length() - 1)).find();\n+                && ALL_ESCAPED_CHARS.matcher(literal).find();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAxOTM5Mg=="}, "originalCommit": {"oid": "7471971603dbc5c9323687b32a31124c15df42f8"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}