{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTkzNzgw", "number": 8190, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjo1OTo1M1rOD4TaBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMToxNlrOE62J3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY0ODA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjo1OTo1M1rOGPDk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzowMzo1MlrOGPkpDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDQzNg==", "bodyText": "assignment -> assignmentS", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418440436", "createdAt": "2020-05-01T06:59:53Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MjE1OA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418982158", "createdAt": "2020-05-02T17:03:52Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDQzNg=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY1MDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowMjowMlrOGPDmgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzowMzo1OVrOGPkpIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDgzNA==", "bodyText": "please keep indentation for code = 2 and add enclosing class for this example", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418440834", "createdAt": "2020-05-01T07:02:02Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MjE3OA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418982178", "createdAt": "2020-05-02T17:03:59Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDgzNA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY1MjYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowMzoxNlrOGPDnig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMTozMDoxNlrOGPmXaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTA5OA==", "bodyText": "!((line = file.read()) != null)\nNo need for additional example complications, make simple like in while example", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418441098", "createdAt": "2020-05-01T07:03:16Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3NjIzMA==", "bodyText": "Done. I just want to let you know that this example was taken from while examples, and I haven't removed that yet, ok.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418976230", "createdAt": "2020-05-02T16:08:33Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTA5OA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTQwMw==", "bodyText": "it remains the same", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418991403", "createdAt": "2020-05-02T18:26:00Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTA5OA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwOTg5MA==", "bodyText": "Done. I am extremely sorry, at first glance I thought it was required to remove this test in test inputs. I have readded the test(in test inputs) and made changes in the Javadoc.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419009890", "createdAt": "2020-05-02T21:26:05Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTA5OA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAxMDQwOQ==", "bodyText": "please take a look now. Also, I have posted the new screenshot.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419010409", "createdAt": "2020-05-02T21:30:16Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTA5OA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY1Mjc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowMzoyNFrOGPDnpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMToyNjowMFrOGPmVXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTEyNw==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418441127", "createdAt": "2020-05-01T07:03:24Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK\n+ *     // process the line\n+ * }\n+ *\n+ * do {\n+ *     // process the line\n+ * }\n+ * while (!((line = file.read()) != null)); // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MjYwNQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418982605", "createdAt": "2020-05-02T17:07:33Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK\n+ *     // process the line\n+ * }\n+ *\n+ * do {\n+ *     // process the line\n+ * }\n+ * while (!((line = file.read()) != null)); // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTEyNw=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTQxNw==", "bodyText": "this one as well", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418991417", "createdAt": "2020-05-02T18:26:13Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK\n+ *     // process the line\n+ * }\n+ *\n+ * do {\n+ *     // process the line\n+ * }\n+ * while (!((line = file.read()) != null)); // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTEyNw=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwOTg4NQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419009885", "createdAt": "2020-05-02T21:26:00Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,28 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignment in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n- *   // process the line\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n+ *     // process the line\n  * }\n+ *\n+ * for (;!((line = file.read()) != null);) { // OK\n+ *     // process the line\n+ * }\n+ *\n+ * do {\n+ *     // process the line\n+ * }\n+ * while (!((line = file.read()) != null)); // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTEyNw=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY1NDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowNDo0OVrOGPDoxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzoxMjozNlrOGPktEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTQxNA==", "bodyText": "please remove whitespaces before right curly for 2 lines above to make it look consistent", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418441414", "createdAt": "2020-05-01T07:04:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -147,7 +156,9 @@\n      * towards the root.\n      */\n     private static final int[][] ALLOWED_ASSIGNMENT_IN_COMPARISON_CONTEXT = {\n-        {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.FOR_CONDITION, },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MzE4NQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418983185", "createdAt": "2020-05-02T17:12:36Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -147,7 +156,9 @@\n      * towards the root.\n      */\n     private static final int[][] ALLOWED_ASSIGNMENT_IN_COMPARISON_CONTEXT = {\n-        {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.FOR_CONDITION, },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTQxNA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY1NzAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzowNjozNFrOGPDp-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMToyNjo0OFrOGPmVvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTcyMg==", "bodyText": "please make indentation here 2 as well, like in javadoc for class", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418441722", "createdAt": "2020-05-01T07:06:34Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +266,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *     // process the line\n+     * }\n+     * for (;(value = reader.read()) != 0;) {\n+     *     // process", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MzE5OQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418983199", "createdAt": "2020-05-02T17:12:43Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +266,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *     // process the line\n+     * }\n+     * for (;(value = reader.read()) != 0;) {\n+     *     // process", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTcyMg=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTU4Mg==", "bodyText": "not changed. Please also see line 273 for same issue", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418991582", "createdAt": "2020-05-02T18:27:36Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +266,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *     // process the line\n+     * }\n+     * for (;(value = reader.read()) != 0;) {\n+     *     // process", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTcyMg=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwOTk4MQ==", "bodyText": "done. please review the update", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419009981", "createdAt": "2020-05-02T21:26:48Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +266,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *     // process the line\n+     * }\n+     * for (;(value = reader.read()) != 0;) {\n+     *     // process", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MTcyMg=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY2MjgwOnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoxMDo0NFrOGPDtQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMToyNTo0NFrOGPmVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MjU2MA==", "bodyText": "will it report violation for weird case like\nString a = \"\";\nfor (;;(a = \"das\").concat()) {}\n\n?\nIt can be added to test inputs", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418442560", "createdAt": "2020-05-01T07:10:44Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,47 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5ODY4OA==", "bodyText": "will it report violation for weird case like\nString a = \"\";\nfor (;;(a = \"das\").concat()) {}\n\n\n@strkkk my patch is reporting violation for these kinds of cases, should these be omitted? ( I am not sure if this is a good way of assigning variables)", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418698688", "createdAt": "2020-05-01T19:26:07Z", "author": {"login": "DXTkastb"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,47 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MjU2MA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTMwMQ==", "bodyText": "This is definitely not the best idea to do like this.\nI think it is ok to report violation in such case. Please add it to test inputs", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r418991301", "createdAt": "2020-05-02T18:24:54Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,47 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MjU2MA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwOTg2Mw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419009863", "createdAt": "2020-05-02T21:25:44Z", "author": {"login": "DXTkastb"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,47 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MjU2MA=="}, "originalCommit": {"oid": "56be00a55499b3ca195a479ed43a4acec367909a"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODI2NDc0OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwODowNDoxMlrOGPpvfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMjowOToyMlrOGPrfrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTcyNg==", "bodyText": "please add // violation comment", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419065726", "createdAt": "2020-05-03T08:04:12Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,50 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+\n+        String str1 = \"\";\n+        String str2 = \"cd\";\n+        for (;;(str1 = \"ab\").concat(str2)) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af8902cf2a08aea9da3d9e4024a4dcb5cf74e008"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDQ0Nw==", "bodyText": "done. please review", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r419094447", "createdAt": "2020-05-03T12:09:22Z", "author": {"login": "DXTkastb"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,50 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);\n+        do{}\n+        while ((line = file.read()) != null && line < 3 && line > 5);\n+        do{}\n+        while ((line = file.read()) != null || line < 3);\n+        do{}\n+        while ((line = file.read()) != null || line < 3 || line > 5);\n+        do{}\n+        while ((line = file.read()) != null & line < 3);\n+        do{}\n+        while ((line = file.read()) != null & line < 3 & line > 5);\n+        do{}\n+        while ((line = file.read()) != null | line < 3);\n+        do{}\n+        while ((line = file.read()) != null | line < 3 | line > 5);\n+        do{}\n+        while (line < 3 && (line = file.read()) != null);\n+        do{}\n+        while (line < 3 || (line = file.read()) != null);\n+        do{}\n+        while (line < 3 & (line = file.read()) != null);\n+        do{}\n+        while (line < 3 | (line = file.read()) != null);\n+\n+        for (;!((line = file.read()) != null);) {}\n+        for (;(line = file.read()) != null && line < 3;) {}\n+        for (;(line = file.read()) != null && line < 3 && line > 5;) {}\n+        for (;(line = file.read()) != null || line < 3;) {}\n+        for (;(line = file.read()) != null || line < 3 || line > 5;) {}\n+        for (;(line = file.read()) != null & line < 3;) {}\n+        for (;(line = file.read()) != null & line < 3 & line > 5;) {}\n+        for (;(line = file.read()) != null | line < 3;) {}\n+        for (;(line = file.read()) != null | line < 3 | line > 5;) {}\n+        for (;line < 3 && (line = file.read()) != null;) {}\n+        for (;line < 3 || (line = file.read()) != null;) {}\n+        for (;line < 3 & (line = file.read()) != null;) {}\n+        for (;line < 3 | (line = file.read()) != null;) {}\n+\n+        String str1 = \"\";\n+        String str2 = \"cd\";\n+        for (;;(str1 = \"ab\").concat(str2)) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTcyNg=="}, "originalCommit": {"oid": "af8902cf2a08aea9da3d9e4024a4dcb5cf74e008"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTEzMjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDoyMzoxNVrOGXLqnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0NTowOVrOH10JOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTU2NA==", "bodyText": "I find it odd that the while and do while use bufferedReader for their examples but the for loop does something else which I question if it really is a \"popular\" assignment. You assign flag a constant right before the condition check, while the others receive the result from a method that can be variable.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r426961564", "createdAt": "2020-05-19T00:23:15Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,29 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignments in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n  *   // process the line\n  * }\n+ *\n+ * int flag;\n+ * for (;(flag = 1) &lt;= 0;) { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2Mzk0NA==", "bodyText": "https://dxtkastb.github.io/innerassignment/diff/Hbase/xref/home/kaustubh/ck/contribution-master/checkstyle-tester/repositories/Hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Base64.java.html#L950\nI see this as a good example.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r426963944", "createdAt": "2020-05-19T00:32:24Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,29 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignments in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n  *   // process the line\n  * }\n+ *\n+ * int flag;\n+ * for (;(flag = 1) &lt;= 0;) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTU2NA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNTcxNw==", "bodyText": "I find it odd that the while and do while use bufferedReader for their examples but the for loop does something else which I question if it really is a \"popular\" assignment. You assign flag a constant right before the condition check, while the others receive the result from a method that can be variable.\n\nI thought using bufferedReader in examples is going a bit monotonous, nonetheless I will update the example", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r427105717", "createdAt": "2020-05-19T08:02:36Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,29 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignments in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n  *   // process the line\n  * }\n+ *\n+ * int flag;\n+ * for (;(flag = 1) &lt;= 0;) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTU2NA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MDkwNA==", "bodyText": "the same code is used", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526190904", "createdAt": "2020-11-18T15:45:09Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -32,19 +32,29 @@\n  * {@code String s = Integer.toString(i = 2);}.\n  * </p>\n  * <p>\n- * Rationale: With the exception of {@code for} iterators and assignment in {@code while} idiom,\n+ * Rationale: With the exception of loop idioms,\n  * all assignments should occur in their own top-level statement to increase readability.\n  * With inner assignments like the one given above, it is difficult to see all places\n  * where a variable is set.\n  * </p>\n  * <p>\n- * Note: Check allows usage of the popular assignment in {@code while} idiom:\n+ * Note: Check allows usage of the popular assignments in loops:\n  * </p>\n  * <pre>\n  * String line;\n- * while ((line = bufferedReader.readLine()) != null) {\n+ * while ((line = bufferedReader.readLine()) != null) { // OK\n  *   // process the line\n  * }\n+ *\n+ * int flag;\n+ * for (;(flag = 1) &lt;= 0;) { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTU2NA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTEzNTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDoyNDo1MFrOGXLsJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0NTowNFrOH10I6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTk1OA==", "bodyText": "The opposite of above. Why not make both examples the same?\nAlso why did we add the for loop example but not the do-while?", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r426961958", "createdAt": "2020-05-19T00:24:50Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +267,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyMDc3OA==", "bodyText": "The opposite of above. Why not make both examples the same?\n\nMy apologies, I couldn't understand this remark. Should I add a different kind of example for each type of loop or I just use any one loop as an example?\n\nAlso why did we add the for loop example but not the do-while?\n\nThere isn't a specific reason, I thought this would be enough for explanatory purposes, I'll add the do-while example.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r427120778", "createdAt": "2020-05-19T08:26:57Z", "author": {"login": "DXTkastb"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +267,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTk1OA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MDgyNw==", "bodyText": "the same code is used", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526190827", "createdAt": "2020-11-18T15:45:04Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -255,11 +267,14 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTk1OA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTEzNzg4OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDoyNjozNFrOGXLt8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODoxMzoxMVrOGXU2Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MjQxOA==", "bodyText": "Just a question, this should be another issue if it is identified as one.\nWill I atleast get a violation if I change line < 3 to line = 3 (assignment and not equals)?", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r426962418", "createdAt": "2020-05-19T00:26:34Z", "author": {"login": "rnveach"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,50 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExMjAxNQ==", "bodyText": "Changing line < 3 to line = 3  will cause compiler error as it expects some boolean expression associated with &&  operator", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r427112015", "createdAt": "2020-05-19T08:13:11Z", "author": {"login": "DXTkastb"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/innerassignment/InputInnerAssignment.java", "diffHunk": "@@ -128,5 +128,50 @@ void method() throws IOException {\n         while (line < 3 || (line = file.read()) != null) {}\n         while (line < 3 & (line = file.read()) != null) {}\n         while (line < 3 | (line = file.read()) != null) {}\n+\n+        do{}\n+        while (!((line = file.read()) != null));\n+        do{}\n+        while ((line = file.read()) != null && line < 3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MjQxOA=="}, "originalCommit": {"oid": "367e1e7d68065333a9dedd17ed9dca4b96bd2c98"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTM5NDc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoxODowOVrOH2J9Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1MDoxOVrOH2iOjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0ODI2Ng==", "bodyText": "Can we put the indentation back since there was no real change here?", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526548266", "createdAt": "2020-11-19T02:18:09Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -158,7 +167,9 @@\n      * towards the root.\n      */\n     private static final int[][] ALLOWED_ASSIGNMENT_IN_COMPARISON_CONTEXT = {\n-        {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0NTkzNA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526945934", "createdAt": "2020-11-19T14:50:19Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -158,7 +167,9 @@\n      * towards the root.\n      */\n     private static final int[][] ALLOWED_ASSIGNMENT_IN_COMPARISON_CONTEXT = {\n-        {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE, },\n+            {TokenTypes.EXPR, TokenTypes.LITERAL_WHILE},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0ODI2Ng=="}, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTM5ODMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoxOTo0N1rOH2J_Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1MDoyNVrOH2iO6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0ODc3MA==", "bodyText": "while checking\n\nThis original wording is the correct usage. It is using the word as a \u00bfconjunction? instead of talking about the Java while keyword.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526548770", "createdAt": "2020-11-19T02:19:47Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -174,9 +185,9 @@\n     };\n \n     /**\n-     * The token types that are ignored while checking \"while-idiom\".\n+     * The token types that are ignored loop checking \"loop-idiom\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0NjAyNQ==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526946025", "createdAt": "2020-11-19T14:50:25Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -174,9 +185,9 @@\n     };\n \n     /**\n-     * The token types that are ignored while checking \"while-idiom\".\n+     * The token types that are ignored loop checking \"loop-idiom\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0ODc3MA=="}, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTQwMDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMDo1NlrOH2KAlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1MDozMVrOH2iPSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTE0Mg==", "bodyText": "Please add space after do.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526549142", "createdAt": "2020-11-19T02:20:56Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -266,12 +277,19 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {\n+     *   // process the line\n+     * }\n+     * do{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0NjEyMQ==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526946121", "createdAt": "2020-11-19T14:50:31Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -266,12 +277,19 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {\n+     *   // process the line\n+     * }\n+     * do{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTE0Mg=="}, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTQwMTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMToxNlrOH2KA4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1MDozN1rOH2iPrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTIxOQ==", "bodyText": "Same here after while.", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526549219", "createdAt": "2020-11-19T02:21:16Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -266,12 +277,19 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {\n+     *   // process the line\n+     * }\n+     * do{\n+     *   // process the line\n      * }\n+     * while((line = bufferedReader.readLine()) != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0NjIyMA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8190#discussion_r526946220", "createdAt": "2020-11-19T14:50:37Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "diffHunk": "@@ -266,12 +277,19 @@ private static boolean isInNoBraceControlStatement(DetailAST ast) {\n     }\n \n     /**\n-     * Tests whether the given AST is used in the \"assignment in while\" idiom.\n+     * Tests whether the given AST is used in the \"assignment in loop\" idiom.\n      * <pre>\n      * String line;\n      * while ((line = bufferedReader.readLine()) != null) {\n-     *    // process the line\n+     *   // process the line\n+     * }\n+     * for (;(line = bufferedReader.readLine()) != null;) {\n+     *   // process the line\n+     * }\n+     * do{\n+     *   // process the line\n      * }\n+     * while((line = bufferedReader.readLine()) != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTIxOQ=="}, "originalCommit": {"oid": "088f9c9c14f30ccdb1ebc6295ac48b497f8f2e26"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 968, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}