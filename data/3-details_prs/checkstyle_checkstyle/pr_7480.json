{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDY5OTQ4", "number": 7480, "title": "Issue #5604: resolve Sonar violation Replace this Map.get() with Map.computeIfAbsent", "bodyText": "Issue #5604\nhttps://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w2eYD2QG1pPXIUN&open=AW9t2w2eYD2QG1pPXIUN", "createdAt": "2020-01-16T05:58:16Z", "url": "https://github.com/checkstyle/checkstyle/pull/7480", "merged": true, "mergeCommit": {"oid": "0f50360de5148414f0cf48193cfee0559a31da31"}, "closed": true, "closedAt": "2020-01-16T23:24:59Z", "author": {"login": "romani"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb65WotgFqTM0Mzg3ODEyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7A0BcgFqTM0NDIxOTU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzODc4MTI2", "url": "https://github.com/checkstyle/checkstyle/pull/7480#pullrequestreview-343878126", "createdAt": "2020-01-16T12:31:51Z", "commit": {"oid": "032855b4e7753fb5ce728a15a9d98df26fa70ea2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTcxNTkw", "url": "https://github.com/checkstyle/checkstyle/pull/7480#pullrequestreview-344171590", "createdAt": "2020-01-16T19:47:36Z", "commit": {"oid": "032855b4e7753fb5ce728a15a9d98df26fa70ea2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOTo0NzozN1rOFelfcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOTo0NzozN1rOFelfcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYxNTg1OQ==", "bodyText": "It is possible to extract the lambda body to a helper method to avoid creation of a helper class:\n    /**\n     * Gets Javadoc (DetailNode) tree of specified block comments.\n     * @param blockComment Javadoc comment as a block comment\n     * @return DetailNode tree\n     */\n    private DetailNode getJavadocTree(DetailAST blockComment) {\n        return blockCommentToJavadocTree.computeIfAbsent(blockComment,\n                ParseTreeTablePresentation::parseJavadocTree);\n    }\n\n    /**\n     * Parses Javadoc (DetailNode) tree of specified block comments.\n     * @param blockComment Javadoc comment as a block comment\n     * @return DetailNode tree\n     */\n    private static DetailNode parseJavadocTree(DetailAST blockComment) {\n        return new JavadocDetailNodeParser().parseJavadocAsDetailNode(blockComment)\n                .getTree();\n    }\nthen the method getJavadocTree can be inlined (it has one usage in getChildAtDetailAst)", "url": "https://github.com/checkstyle/checkstyle/pull/7480#discussion_r367615859", "createdAt": "2020-01-16T19:47:37Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentation.java", "diffHunk": "@@ -354,13 +354,11 @@ private static Object getValueAtDetailAST(DetailAST ast, int column) {\n      * @return DetailNode tree\n      */\n     private DetailNode getJavadocTree(DetailAST blockComment) {\n-        DetailNode javadocTree = blockCommentToJavadocTree.get(blockComment);\n-        if (javadocTree == null) {\n-            javadocTree = new JavadocDetailNodeParser().parseJavadocAsDetailNode(blockComment)\n+        return blockCommentToJavadocTree.computeIfAbsent(blockComment, blockCommentNode -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "032855b4e7753fb5ce728a15a9d98df26fa70ea2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac4dbfc9debe3c4ab3bb5afdb8bca495c1f5774b", "author": {"user": {"login": "romani", "name": "Roman Ivanov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ac4dbfc9debe3c4ab3bb5afdb8bca495c1f5774b", "committedDate": "2020-01-16T21:03:11Z", "message": "Issue #5604: resolve Sonar violation 'Replace this Map.get() and condition with a call to Map.computeIfAbsent().'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MjE5NTQ1", "url": "https://github.com/checkstyle/checkstyle/pull/7480#pullrequestreview-344219545", "createdAt": "2020-01-16T21:13:17Z", "commit": {"oid": "ac4dbfc9debe3c4ab3bb5afdb8bca495c1f5774b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1219, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}