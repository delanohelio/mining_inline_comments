{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTU3Mzgy", "number": 7967, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzoxN1rODron_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzoxN1rODron_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDgwOTU3OnYy", "diffSide": "RIGHT", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionInterfaceIsTypeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzoxN1rOF8Fz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowMTozN1rOF8OJtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDA4MA==", "bodyText": "Indentation seems incorrect (espessially comparing with the same list from testOne). Please recheck formatting", "url": "https://github.com/checkstyle/checkstyle/pull/7967#discussion_r398554080", "createdAt": "2020-03-26T13:03:17Z", "author": {"login": "baratali"}, "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionInterfaceIsTypeTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;\n+\n+public class XpathRegressionInterfaceIsTypeTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = InterfaceIsTypeCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionInterfaceIsType1.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(InterfaceIsTypeCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"3:1: \" + getCheckMessage(InterfaceIsTypeCheck.class,\n+                    InterfaceIsTypeCheck.MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]\",\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]/MODIFIERS\",\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]/MODIFIERS/LITERAL_PUBLIC\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionInterfaceIsType2.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(InterfaceIsTypeCheck.class);\n+\n+        moduleConfig.addAttribute(\"allowMarkerInterfaces\", \"false\");\n+\n+        final String[] expectedViolation = {\n+            \"3:1: \" + getCheckMessage(InterfaceIsTypeCheck.class,\n+                    InterfaceIsTypeCheck.MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/INTERFACE_DEF[./IDENT[\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744fc2800f914b3a60b3c6c1888859536de92a6b"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDc0Mw==", "bodyText": "Thanks, done, actually, it is testOne whose format is not good and I have changed it.", "url": "https://github.com/checkstyle/checkstyle/pull/7967#discussion_r398690743", "createdAt": "2020-03-26T16:01:37Z", "author": {"login": "HuGanghui"}, "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionInterfaceIsTypeTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;\n+\n+public class XpathRegressionInterfaceIsTypeTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = InterfaceIsTypeCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionInterfaceIsType1.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(InterfaceIsTypeCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"3:1: \" + getCheckMessage(InterfaceIsTypeCheck.class,\n+                    InterfaceIsTypeCheck.MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]\",\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]/MODIFIERS\",\n+            \"/INTERFACE_DEF[./IDENT[\"\n+                + \"@text='SuppressionXpathRegressionInterfaceIsType1']]/MODIFIERS/LITERAL_PUBLIC\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionInterfaceIsType2.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(InterfaceIsTypeCheck.class);\n+\n+        moduleConfig.addAttribute(\"allowMarkerInterfaces\", \"false\");\n+\n+        final String[] expectedViolation = {\n+            \"3:1: \" + getCheckMessage(InterfaceIsTypeCheck.class,\n+                    InterfaceIsTypeCheck.MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/INTERFACE_DEF[./IDENT[\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDA4MA=="}, "originalCommit": {"oid": "744fc2800f914b3a60b3c6c1888859536de92a6b"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1305, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}