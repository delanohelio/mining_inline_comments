{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDg0MzEz", "number": 8972, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NToxM1rOE4CUZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMToxNzoyM1rOE75Sfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTkzNzAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NToxM1rOHxuQ9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjozMjowOFrOHyDNJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDI3OQ==", "bodyText": "This can be easily replaced with a loop. How deep this recursion can be?", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r521900279", "createdAt": "2020-11-12T07:55:13Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,21 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        if (ast.getParent() != null) {\n+            isInCompactCtor = ast.getParent().getType() == TokenTypes.COMPACT_CTOR_DEF\n+                                || isInCompactConstructor(ast.getParent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af470a174b09e5549785e7547808c5e88d1bdd4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI0MzM2NA==", "bodyText": "@pbludov You are right. I have replaced it with a loop.\nThe recursion can reasonably be up to 6-8 level deep, depending on how many nested loops, nested expressions there are.", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r522243364", "createdAt": "2020-11-12T16:32:08Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,21 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        if (ast.getParent() != null) {\n+            isInCompactCtor = ast.getParent().getType() == TokenTypes.COMPACT_CTOR_DEF\n+                                || isInCompactConstructor(ast.getParent());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDI3OQ=="}, "originalCommit": {"oid": "0af470a174b09e5549785e7547808c5e88d1bdd4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjA5MjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxNToxNjoxNlrOH3vM3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxODo0NDo0OVrOH3wi-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIwNzA2OQ==", "bodyText": "This variable can be initialized with ast.getParent(), so the loop simplifies to\n DetailAST tempAst = ast.getParent();\n while (tempAst != null) {\n   if (tempAst.getType() == TokenTypes.COMPACT_CTOR_DEF) {\n   ...\nalso, tempAst can be renamed to parent for readability.", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528207069", "createdAt": "2020-11-21T15:16:16Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,25 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        DetailAST tempAst = ast;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef905262dc4767010079404278aafe81218832e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIyOTExNQ==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528229115", "createdAt": "2020-11-21T18:44:49Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,25 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        DetailAST tempAst = ast;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIwNzA2OQ=="}, "originalCommit": {"oid": "cef905262dc4767010079404278aafe81218832e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjQwMDYzOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/requirethis/InputRequireThisRecordCompactCtors.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMToxNzoyM1rOH3xcwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwMTo0NzoyN1rOH3y58A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg==", "bodyText": "@romani @pbludov should we consider creating a javac15 CI run for input files, similar to javac14? \n  \n    \n      checkstyle/.ci/travis/travis.sh\n    \n    \n        Lines 118 to 130\n      in\n      be3dab2\n    \n    \n    \n    \n\n        \n          \n           javac14) \n        \n\n        \n          \n             files=($(grep -Rl --include='*.java' ': Compilable with Java14' \\ \n        \n\n        \n          \n                   src/test/resources-noncompilable || true)) \n        \n\n        \n          \n             if [[  ${#files[@]} -eq 0 ]]; then \n        \n\n        \n          \n               echo \"No Java14 files to process\" \n        \n\n        \n          \n             else \n        \n\n        \n          \n                 mkdir -p target \n        \n\n        \n          \n                 for file in \"${files[@]}\" \n        \n\n        \n          \n                 do \n        \n\n        \n          \n                   javac --release 14 --enable-preview -d target \"${file}\" \n        \n\n        \n          \n                 done \n        \n\n        \n          \n             fi \n        \n\n        \n          \n             ;; \n        \n    \n  \n\n Since the changes in this PR relate to jdk15 syntax, and we already have an open issue for jdk15 specific syntax (#8989), this might be a good idea.", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528243906", "createdAt": "2020-11-21T21:17:23Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/requirethis/InputRequireThisRecordCompactCtors.java", "diffHunk": "@@ -0,0 +1,17 @@\n+//non-compiled with javac: Compilable with Java14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI2NzU1OA==", "bodyText": "We we need this execution in CI", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528267558", "createdAt": "2020-11-22T01:45:14Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/requirethis/InputRequireThisRecordCompactCtors.java", "diffHunk": "@@ -0,0 +1,17 @@\n+//non-compiled with javac: Compilable with Java14", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg=="}, "originalCommit": {"oid": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI2Nzc2MA==", "bodyText": "#9007", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528267760", "createdAt": "2020-11-22T01:47:27Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/requirethis/InputRequireThisRecordCompactCtors.java", "diffHunk": "@@ -0,0 +1,17 @@\n+//non-compiled with javac: Compilable with Java14", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg=="}, "originalCommit": {"oid": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1661, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}