{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzQ3NTAx", "number": 7463, "title": "Issue #7446: ensure all checks summaries in sync with checks.xml", "bodyText": "Issue #7446\nNode.getAttributes().getNamedItem(\"name\").getNodeValue() extracted to an utility method.\nMethod sanitizeXml moved to the class XmlUtil.", "createdAt": "2020-01-11T17:15:43Z", "url": "https://github.com/checkstyle/checkstyle/pull/7463", "merged": true, "mergeCommit": {"oid": "1a6443b724a3539b000bcaa2ed9f8016b6bb4f38"}, "closed": true, "closedAt": "2020-01-11T22:32:13Z", "author": {"login": "pbludov"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5XhxZgFqTM0MTUzNDY4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5a8RxgFqTM0MTU0NDE0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTM0Njg2", "url": "https://github.com/checkstyle/checkstyle/pull/7463#pullrequestreview-341534686", "createdAt": "2020-01-11T18:16:28Z", "commit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxODoxNjoyOFrOFcmeJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxODoyNTo1OFrOFcmfrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNDc1OQ==", "bodyText": "Utility methods should go after the method(s) that use them.", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365534759", "createdAt": "2020-01-11T18:16:28Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -258,6 +261,65 @@ private static boolean isPresent(String availableChecks, String checkName) {\n         return availableChecks.matches(linkPattern);\n     }\n \n+    private static Map<String, String> readSummaries() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNDg4MA==", "bodyText": "@romani Is there any reason filters don't have their own summary page?", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365534880", "createdAt": "2020-01-11T18:18:55Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -258,6 +261,65 @@ private static boolean isPresent(String availableChecks, String checkName) {\n         return availableChecks.matches(linkPattern);\n     }\n \n+    private static Map<String, String> readSummaries() throws Exception {\n+        final String fileName = AVAILABLE_CHECKS_PATH.getFileName().toString();\n+        final String input = new String(Files.readAllBytes(AVAILABLE_CHECKS_PATH), UTF_8);\n+        final Document document = XmlUtil.getRawXml(fileName, input, input);\n+        final NodeList rows = document.getElementsByTagName(\"tr\");\n+        final Map<String, String> result = new HashMap<>();\n+\n+        for (int position = 0; position < rows.getLength(); position++) {\n+            final Node row = rows.item(position);\n+            final Iterator<Node> cells = XmlUtil.findChildElementsByTag(row, \"td\").iterator();\n+            final String name = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+            final String summary = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+\n+            result.put(name, summary);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Test\n+    public void testAllChecksPageInSyncWithChecksSummaries() throws Exception {\n+        final Pattern endOfSentence = Pattern.compile(\"(.*?\\\\.)\\\\s\", Pattern.DOTALL);\n+        final Map<String, String> summaries = readSummaries();\n+\n+        for (Path path : XdocUtil.getXdocsConfigFilePaths(XdocUtil.getXdocsFilePaths())) {\n+            final String fileName = path.getFileName().toString();\n+            if (\"config_reporting.xml\".equals(fileName)\n+                    || \"config_filefilters.xml\".equals(fileName)\n+                    || \"config_filters.xml\".equals(fileName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNDkxMQ==", "bodyText": "Assertions require the page that is being examined, and the check that is being looked at. This is extremely helpful in debugging a failure.\nSee https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java#L1587 as an example. All tests in this class should have assertions like this.", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365534911", "createdAt": "2020-01-11T18:19:48Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -258,6 +261,65 @@ private static boolean isPresent(String availableChecks, String checkName) {\n         return availableChecks.matches(linkPattern);\n     }\n \n+    private static Map<String, String> readSummaries() throws Exception {\n+        final String fileName = AVAILABLE_CHECKS_PATH.getFileName().toString();\n+        final String input = new String(Files.readAllBytes(AVAILABLE_CHECKS_PATH), UTF_8);\n+        final Document document = XmlUtil.getRawXml(fileName, input, input);\n+        final NodeList rows = document.getElementsByTagName(\"tr\");\n+        final Map<String, String> result = new HashMap<>();\n+\n+        for (int position = 0; position < rows.getLength(); position++) {\n+            final Node row = rows.item(position);\n+            final Iterator<Node> cells = XmlUtil.findChildElementsByTag(row, \"td\").iterator();\n+            final String name = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+            final String summary = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+\n+            result.put(name, summary);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Test\n+    public void testAllChecksPageInSyncWithChecksSummaries() throws Exception {\n+        final Pattern endOfSentence = Pattern.compile(\"(.*?\\\\.)\\\\s\", Pattern.DOTALL);\n+        final Map<String, String> summaries = readSummaries();\n+\n+        for (Path path : XdocUtil.getXdocsConfigFilePaths(XdocUtil.getXdocsFilePaths())) {\n+            final String fileName = path.getFileName().toString();\n+            if (\"config_reporting.xml\".equals(fileName)\n+                    || \"config_filefilters.xml\".equals(fileName)\n+                    || \"config_filters.xml\".equals(fileName)) {\n+                continue;\n+            }\n+\n+            final String input = new String(Files.readAllBytes(path), UTF_8);\n+            final Document document = XmlUtil.getRawXml(fileName, input, input);\n+            final NodeList sources = document.getElementsByTagName(\"subsection\");\n+\n+            for (int position = 0; position < sources.getLength(); position++) {\n+                final Node section = sources.item(position);\n+                final String sectionName = XmlUtil.getNodeName(section);\n+                if (!\"Description\".equals(sectionName)) {\n+                    continue;\n+                }\n+\n+                final String checkName = XmlUtil.getNodeName(section.getParentNode());\n+                final Matcher matcher = endOfSentence.matcher(section.getTextContent());\n+                assertWithMessage(\n+                    \"XDocs description should start with a sentence that ends with a period\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNTAzNg==", "bodyText": "Please sync the assertion message. Also checkName is in the message twice.", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365535036", "createdAt": "2020-01-11T18:22:44Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -258,6 +261,65 @@ private static boolean isPresent(String availableChecks, String checkName) {\n         return availableChecks.matches(linkPattern);\n     }\n \n+    private static Map<String, String> readSummaries() throws Exception {\n+        final String fileName = AVAILABLE_CHECKS_PATH.getFileName().toString();\n+        final String input = new String(Files.readAllBytes(AVAILABLE_CHECKS_PATH), UTF_8);\n+        final Document document = XmlUtil.getRawXml(fileName, input, input);\n+        final NodeList rows = document.getElementsByTagName(\"tr\");\n+        final Map<String, String> result = new HashMap<>();\n+\n+        for (int position = 0; position < rows.getLength(); position++) {\n+            final Node row = rows.item(position);\n+            final Iterator<Node> cells = XmlUtil.findChildElementsByTag(row, \"td\").iterator();\n+            final String name = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+            final String summary = XmlUtil.sanitizeXml(cells.next().getTextContent());\n+\n+            result.put(name, summary);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Test\n+    public void testAllChecksPageInSyncWithChecksSummaries() throws Exception {\n+        final Pattern endOfSentence = Pattern.compile(\"(.*?\\\\.)\\\\s\", Pattern.DOTALL);\n+        final Map<String, String> summaries = readSummaries();\n+\n+        for (Path path : XdocUtil.getXdocsConfigFilePaths(XdocUtil.getXdocsFilePaths())) {\n+            final String fileName = path.getFileName().toString();\n+            if (\"config_reporting.xml\".equals(fileName)\n+                    || \"config_filefilters.xml\".equals(fileName)\n+                    || \"config_filters.xml\".equals(fileName)) {\n+                continue;\n+            }\n+\n+            final String input = new String(Files.readAllBytes(path), UTF_8);\n+            final Document document = XmlUtil.getRawXml(fileName, input, input);\n+            final NodeList sources = document.getElementsByTagName(\"subsection\");\n+\n+            for (int position = 0; position < sources.getLength(); position++) {\n+                final Node section = sources.item(position);\n+                final String sectionName = XmlUtil.getNodeName(section);\n+                if (!\"Description\".equals(sectionName)) {\n+                    continue;\n+                }\n+\n+                final String checkName = XmlUtil.getNodeName(section.getParentNode());\n+                final Matcher matcher = endOfSentence.matcher(section.getTextContent());\n+                assertWithMessage(\n+                    \"XDocs description should start with a sentence that ends with a period\")\n+                    .that(matcher.find());\n+                final String firstSentence = XmlUtil.sanitizeXml(matcher.group(1));\n+                assertWithMessage(\"Summary for check \" + checkName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNTA5NQ==", "bodyText": "getNodeName\nReturns the value of the \"name\" attribute\n\nShouldn't this be something like getNodeNameAttributeText? Maybe something a little bit shorter, but I don't think the current name expressly says enough about what it is doing.", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365535095", "createdAt": "2020-01-11T18:24:24Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/XmlUtil.java", "diffHunk": "@@ -132,4 +132,30 @@ else if (child.hasChildNodes()) {\n         return result;\n     }\n \n+    /**\n+     * Returns the value of the \"name\" attribute for the given node.\n+     *\n+     * @param node to retrieve the name\n+     * @return the node name\n+     */\n+    public static String getNodeName(Node node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzNTE1MA==", "bodyText": "The first sentence should be the summary, but you have it split into 2 and is a bit long.\nI think the first sentence should be something like \"This santizes the given string for safe use in XML documents.\" and then list what it specifically does as consecutive sentences.", "url": "https://github.com/checkstyle/checkstyle/pull/7463#discussion_r365535150", "createdAt": "2020-01-11T18:25:58Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/XmlUtil.java", "diffHunk": "@@ -132,4 +132,30 @@ else if (child.hasChildNodes()) {\n         return result;\n     }\n \n+    /**\n+     * Returns the value of the \"name\" attribute for the given node.\n+     *\n+     * @param node to retrieve the name\n+     * @return the node name\n+     */\n+    public static String getNodeName(Node node) {\n+        return node.getAttributes().getNamedItem(\"name\").getNodeValue();\n+    }\n+\n+    /**\n+     * Removes all whitespaces at the beginning and at the end of the string and\n+     * replaces repeated whitespaces in the middle of the string with a single space.\n+     * Replaces XML entities with escaped values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a", "author": {"user": {"login": "pbludov", "name": "Pavel Bludov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a", "committedDate": "2020-01-11T19:51:07Z", "message": "Issue #7446: ensure all checks summaries in sync with checks.xml"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6", "author": {"user": {"login": "pbludov", "name": "Pavel Bludov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2414a9f566bbc3d7b91ef45e90bc6a27dd7b83b6", "committedDate": "2020-01-11T17:13:42Z", "message": "Issue #7446: ensure all checks summaries in sync with checks.xml"}, "afterCommit": {"oid": "5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a", "author": {"user": {"login": "pbludov", "name": "Pavel Bludov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a", "committedDate": "2020-01-11T19:51:07Z", "message": "Issue #7446: ensure all checks summaries in sync with checks.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQwNTE0", "url": "https://github.com/checkstyle/checkstyle/pull/7463#pullrequestreview-341540514", "createdAt": "2020-01-11T20:46:20Z", "commit": {"oid": "5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQ0MTQ4", "url": "https://github.com/checkstyle/checkstyle/pull/7463#pullrequestreview-341544148", "createdAt": "2020-01-11T22:31:59Z", "commit": {"oid": "5a1ac2ff35ce26cd0440d3cdf800fb70e92d426a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1204, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}