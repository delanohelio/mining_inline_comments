{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDExNTY2", "number": 8083, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjowMTowN1rOE8SKyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyMjowOFrOE_pDwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjQ3NjkwOnYy", "diffSide": "RIGHT", "path": ".ci/validation.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjowMTowN1rOH4UOBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozMjoxNVrOH4aUxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxMzU3NQ==", "bodyText": "pmd/pmd#2925 is merged, please restore original repo.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528813575", "createdAt": "2020-11-23T16:01:07Z", "author": {"login": "romani"}, "path": ".ci/validation.sh", "diffHunk": "@@ -90,7 +90,7 @@ no-error-pmd)\n   echo \"CS_version: ${CS_POM_VERSION}\"\n   mkdir -p .ci-temp/\n   cd .ci-temp/\n-  git clone https://github.com/pmd/pmd.git\n+  git clone https://github.com/Abhishek-kumar09/pmd.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMzYwNw==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528913607", "createdAt": "2020-11-23T18:32:15Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/validation.sh", "diffHunk": "@@ -90,7 +90,7 @@ no-error-pmd)\n   echo \"CS_version: ${CS_POM_VERSION}\"\n   mkdir -p .ci-temp/\n   cd .ci-temp/\n-  git clone https://github.com/pmd/pmd.git\n+  git clone https://github.com/Abhishek-kumar09/pmd.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxMzU3NQ=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjUwMjkzOnYy", "diffSide": "RIGHT", "path": ".ci/wercker.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjowNTowMFrOH4UfMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODowNjoxOVrOH4wU4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxNzk3MQ==", "bodyText": "please send PR https://github.com/CS-SI/Orekit/pulls/Abhishek-kumar09", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528817971", "createdAt": "2020-11-23T16:05:00Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -82,12 +82,12 @@ no-error-orekit)\n   git checkout $SHA_HIPPARCHUS\n   mvn -e install -DskipTests\n   cd -\n-  checkout_from https://github.com/CS-SI/Orekit.git\n+  checkout_from https://github.com/Abhishek-kumar09/Orekit.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxNDcxOA==", "bodyText": "Done fix is merged.\nCS-SI/Orekit#28\nhttps://github.com/checkstyle/checkstyle/pull/8083/files#diff-8b07316a80f4b78a810d359a8be767cb13f5831e827aaa3b64cc36b6d133c2a0", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528914718", "createdAt": "2020-11-23T18:34:22Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -82,12 +82,12 @@ no-error-orekit)\n   git checkout $SHA_HIPPARCHUS\n   mvn -e install -DskipTests\n   cd -\n-  checkout_from https://github.com/CS-SI/Orekit.git\n+  checkout_from https://github.com/Abhishek-kumar09/Orekit.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxNzk3MQ=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMjU4MA==", "bodyText": "Ok, please their repo and commit where it was merged ( if we used strict commit)", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529232580", "createdAt": "2020-11-24T06:35:25Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -82,12 +82,12 @@ no-error-orekit)\n   git checkout $SHA_HIPPARCHUS\n   mvn -e install -DskipTests\n   cd -\n-  checkout_from https://github.com/CS-SI/Orekit.git\n+  checkout_from https://github.com/Abhishek-kumar09/Orekit.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxNzk3MQ=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI3NDA4Mg==", "bodyText": "Already done.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529274082", "createdAt": "2020-11-24T08:06:19Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -82,12 +82,12 @@ no-error-orekit)\n   git checkout $SHA_HIPPARCHUS\n   mvn -e install -DskipTests\n   cd -\n-  checkout_from https://github.com/CS-SI/Orekit.git\n+  checkout_from https://github.com/Abhishek-kumar09/Orekit.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgxNzk3MQ=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjUyMTcyOnYy", "diffSide": "RIGHT", "path": ".ci/wercker.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjowOToxN1rOH4UqnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODowODoxMlrOH4wY5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg5Mw==", "bodyText": "https://github.com/xwiki/xwiki-commons/pulls/Abhishek-kumar09\nplease send PR to them.\nsend PR to our repo - https://github.com/checkstyle/xwiki-commons/tree/5951-indentation", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528820893", "createdAt": "2020-11-23T16:09:17Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -98,7 +98,7 @@ no-error-xwiki)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/checkstyle/xwiki-commons.git\n+  checkout_from https://github.com/Abhishek-kumar09/xwiki-commons.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxNTIyOQ==", "bodyText": "Done\ncheckstyle/xwiki-commons#1", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528915229", "createdAt": "2020-11-23T18:35:18Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -98,7 +98,7 @@ no-error-xwiki)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/checkstyle/xwiki-commons.git\n+  checkout_from https://github.com/Abhishek-kumar09/xwiki-commons.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg5Mw=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMTk2MQ==", "bodyText": "Merged.\nPlease update to use our fork.\nPlease send PR to xwiki project to let them quickly merge it after we release your fix.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529231961", "createdAt": "2020-11-24T06:33:39Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -98,7 +98,7 @@ no-error-xwiki)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/checkstyle/xwiki-commons.git\n+  checkout_from https://github.com/Abhishek-kumar09/xwiki-commons.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg5Mw=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI3NTEwOA==", "bodyText": "Please send PR to xwiki project to let them quickly merge it after we release your fix.\n\nI sent it yesterday, and they had merged.\nxwiki/xwiki-commons#117\n\nPlease update to use our fork.\n\ndone", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529275108", "createdAt": "2020-11-24T08:08:12Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -98,7 +98,7 @@ no-error-xwiki)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/checkstyle/xwiki-commons.git\n+  checkout_from https://github.com/Abhishek-kumar09/xwiki-commons.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg5Mw=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjcyMTcwOnYy", "diffSide": "RIGHT", "path": ".ci/wercker.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjo1Mjo1NlrOH4Wlmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODowODo1OVrOH4waeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1MjM3OA==", "bodyText": "REL 42.2.16 is not a branch.\nMoreover, I had sent PR to master branch, did I made a mistake :(\nhttps://github.com/pgjdbc/pgjdbc/branches/all", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r528852378", "createdAt": "2020-11-23T16:52:56Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -61,10 +61,10 @@ no-error-pgjdbc)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/pgjdbc/pgjdbc.git\n+  checkout_from https://github.com/Abhishek-kumar09/pgjdbc.git\n   cd .ci-temp/pgjdbc\n   # pgjdbc easily damage build, we should use stable versions\n-  git checkout REL42.2.16\n+  git checkout master", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMTA3OA==", "bodyText": "No mistake, release is set in stone.\nUsage of master is good if sources are build able, but their CI is red.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529231078", "createdAt": "2020-11-24T06:30:50Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -61,10 +61,10 @@ no-error-pgjdbc)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/pgjdbc/pgjdbc.git\n+  checkout_from https://github.com/Abhishek-kumar09/pgjdbc.git\n   cd .ci-temp/pgjdbc\n   # pgjdbc easily damage build, we should use stable versions\n-  git checkout REL42.2.16\n+  git checkout master", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1MjM3OA=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI3NTUxMw==", "bodyText": "You can checkout ci changes here: 33189c8", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529275513", "createdAt": "2020-11-24T08:08:59Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -61,10 +61,10 @@ no-error-pgjdbc)\n   CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n                      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n   echo CS_version: ${CS_POM_VERSION}\n-  checkout_from https://github.com/pgjdbc/pgjdbc.git\n+  checkout_from https://github.com/Abhishek-kumar09/pgjdbc.git\n   cd .ci-temp/pgjdbc\n   # pgjdbc easily damage build, we should use stable versions\n-  git checkout REL42.2.16\n+  git checkout master", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1MjM3OA=="}, "originalCommit": {"oid": "238da3d833b3907fee2fa3a812d028bebd83d885"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTQwNDE5OnYy", "diffSide": "RIGHT", "path": ".ci/wercker.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDo0MzoyNVrOH5EEOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTo0MDozMlrOH5Hb2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU5NzQ5OA==", "bodyText": "bdf\n\nhttps://travis-ci.org/github/checkstyle/checkstyle/jobs/745479736#L306\nplease do hack\n\"51f18bf7755b97a4ab3e560431a3578d119a2b\"\"df\" to avoid extension of spellchecker with bad words", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529597498", "createdAt": "2020-11-24T14:43:25Z", "author": {"login": "romani"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -64,7 +64,7 @@ no-error-pgjdbc)\n   checkout_from https://github.com/pgjdbc/pgjdbc.git\n   cd .ci-temp/pgjdbc\n   # pgjdbc easily damage build, we should use stable versions\n-  git checkout REL42.2.16\n+  git checkout \"51f18bf7755b97a4ab3e560431a3578d119a2bdf\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33189c8557120cb254f64d8d4360c98621dffbf8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MjY5OQ==", "bodyText": "Its checking spelling when there are consecutive three letters. Nice hack.\nDone.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r529652699", "createdAt": "2020-11-24T15:40:32Z", "author": {"login": "Abhishek-kumar09"}, "path": ".ci/wercker.sh", "diffHunk": "@@ -64,7 +64,7 @@ no-error-pgjdbc)\n   checkout_from https://github.com/pgjdbc/pgjdbc.git\n   cd .ci-temp/pgjdbc\n   # pgjdbc easily damage build, we should use stable versions\n-  git checkout REL42.2.16\n+  git checkout \"51f18bf7755b97a4ab3e560431a3578d119a2bdf\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU5NzQ5OA=="}, "originalCommit": {"oid": "33189c8557120cb254f64d8d4360c98621dffbf8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjgxOTU1OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationDifficultAnnotations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowNjo1NVrOH53oEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjowNjoyM1rOH56Rwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0MjI1Nw==", "bodyText": "23,25\nI do not have a good knowledge of this check, can you shortly describe why there are such big numbers for expected indentation?", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530442257", "createdAt": "2020-11-25T15:06:55Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationDifficultAnnotations.java", "diffHunk": "@@ -37,8 +37,8 @@ void foo() { //indent:4 exp:4\n } //indent:0 exp:0\n \n @DifficultAnnotation({ //indent:0 exp:0\n-@MyType(value = Boolean.class, name = \"boolean\"), //indent:0 exp:4 warn\n-@MyType(value = String.class, name = \"string\") }) //indent:0 exp:4 warn\n+@MyType(value = Boolean.class, name = \"boolean\"), //indent:0 exp:4,23,25 warn\n+@MyType(value = String.class, name = \"string\") }) //indent:0 exp:4,23,25 warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4131a8d87490060be68cfafacbc31914cb4053d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ4NTY5OA==", "bodyText": "The children are accepting indent levels like arrayInitIndent, lineWrapping and basicOffset.\nThose big numbers are because it is also accepting indentLevel from firstNonBlank line after lcurly (Initialization block's) inside which those children are placed.\n23, 25:\nbecause indentation comment is the first non blank line on after the lcurly. And it is placed at 23 indent level. so 23 and 21(lcurly) + linewrapping(4) = 25.\nThis is important/helpful when we have code style like this: (where we are indenting other children relative to previous ones)\n@Annotation({ @Child1,\n              @Child2, \n              @Child3\n})\n\nSo yes, if there would not have those comments there then we would not have got 23,25.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530485698", "createdAt": "2020-11-25T16:06:23Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationDifficultAnnotations.java", "diffHunk": "@@ -37,8 +37,8 @@ void foo() { //indent:4 exp:4\n } //indent:0 exp:0\n \n @DifficultAnnotation({ //indent:0 exp:0\n-@MyType(value = Boolean.class, name = \"boolean\"), //indent:0 exp:4 warn\n-@MyType(value = String.class, name = \"string\") }) //indent:0 exp:4 warn\n+@MyType(value = Boolean.class, name = \"boolean\"), //indent:0 exp:4,23,25 warn\n+@MyType(value = String.class, name = \"string\") }) //indent:0 exp:4,23,25 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0MjI1Nw=="}, "originalCommit": {"oid": "4131a8d87490060be68cfafacbc31914cb4053d1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjgyMjA5OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationOddLineWrappingAndArrayInit.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowNzoyOVrOH53poA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODozNTo1NFrOH5_s7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0MjY1Ng==", "bodyText": "exp:11,17,53,54\nsame here, indentation 53 or 54 sounds a bit weird", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530442656", "createdAt": "2020-11-25T15:07:29Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationOddLineWrappingAndArrayInit.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/* Config:                                                                    //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration:   //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ * arrayInitIndent = 3                                                        //indent:1 exp:1\n+ * basicOffset = 4                                                            //indent:1 exp:1\n+ * braceAdjustment = 0                                                        //indent:1 exp:1\n+ * caseIndent = 4                                                             //indent:1 exp:1\n+ * forceStrictCondition = false                                               //indent:1 exp:1\n+ * lineWrappingIndentation = 9                                                //indent:1 exp:1\n+ * tabWidth = 4                                                               //indent:1 exp:1\n+ * throwsIndent = 4                                                           //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ */                                                                           //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+public class InputIndentationOddLineWrappingAndArrayInit { //indent:0 exp:0\n+    interface MyInterface { //indent:4 exp:4\n+        @interface SomeAnnotation { String[] values(); } //indent:8 exp:8\n+        interface Info { //indent:8 exp:8\n+            String A = \"a\"; //indent:12 exp:12\n+        } //indent:8 exp:8\n+        @MyInterface.SomeAnnotation(values = {       //indent:8 exp:8\n+                MyInterface.Info.A, //indent:16 exp:11,17,53,54 warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4131a8d87490060be68cfafacbc31914cb4053d1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5ODcyNA==", "bodyText": "53 is the indent level of first comment on line \"24\".\n54 is the lineWrapping + lcurly pos. (Line wrapping Indent is set to 9 in this code, so this much big value)\nHere is the logic:\n        if (firstChildPos != NOT_EXIST) {\n            expectedIndent = IndentLevel.addAcceptable(expectedIndent, firstChildPos, lcurlyPos\n                    + getLineWrappingIndentation());\n        }", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530498724", "createdAt": "2020-11-25T16:25:23Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationOddLineWrappingAndArrayInit.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/* Config:                                                                    //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration:   //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ * arrayInitIndent = 3                                                        //indent:1 exp:1\n+ * basicOffset = 4                                                            //indent:1 exp:1\n+ * braceAdjustment = 0                                                        //indent:1 exp:1\n+ * caseIndent = 4                                                             //indent:1 exp:1\n+ * forceStrictCondition = false                                               //indent:1 exp:1\n+ * lineWrappingIndentation = 9                                                //indent:1 exp:1\n+ * tabWidth = 4                                                               //indent:1 exp:1\n+ * throwsIndent = 4                                                           //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ */                                                                           //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+public class InputIndentationOddLineWrappingAndArrayInit { //indent:0 exp:0\n+    interface MyInterface { //indent:4 exp:4\n+        @interface SomeAnnotation { String[] values(); } //indent:8 exp:8\n+        interface Info { //indent:8 exp:8\n+            String A = \"a\"; //indent:12 exp:12\n+        } //indent:8 exp:8\n+        @MyInterface.SomeAnnotation(values = {       //indent:8 exp:8\n+                MyInterface.Info.A, //indent:16 exp:11,17,53,54 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0MjY1Ng=="}, "originalCommit": {"oid": "4131a8d87490060be68cfafacbc31914cb4053d1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NDU3NA==", "bodyText": "comment was unnecesarily placed too far, corrected.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530574574", "createdAt": "2020-11-25T18:35:54Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationOddLineWrappingAndArrayInit.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/* Config:                                                                    //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration:   //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ * arrayInitIndent = 3                                                        //indent:1 exp:1\n+ * basicOffset = 4                                                            //indent:1 exp:1\n+ * braceAdjustment = 0                                                        //indent:1 exp:1\n+ * caseIndent = 4                                                             //indent:1 exp:1\n+ * forceStrictCondition = false                                               //indent:1 exp:1\n+ * lineWrappingIndentation = 9                                                //indent:1 exp:1\n+ * tabWidth = 4                                                               //indent:1 exp:1\n+ * throwsIndent = 4                                                           //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ */                                                                           //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+public class InputIndentationOddLineWrappingAndArrayInit { //indent:0 exp:0\n+    interface MyInterface { //indent:4 exp:4\n+        @interface SomeAnnotation { String[] values(); } //indent:8 exp:8\n+        interface Info { //indent:8 exp:8\n+            String A = \"a\"; //indent:12 exp:12\n+        } //indent:8 exp:8\n+        @MyInterface.SomeAnnotation(values = {       //indent:8 exp:8\n+                MyInterface.Info.A, //indent:16 exp:11,17,53,54 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0MjY1Ng=="}, "originalCommit": {"oid": "4131a8d87490060be68cfafacbc31914cb4053d1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODgzMzkyOnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMzoxOToxOFrOH6Kehw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNToxMTowOVrOIALYgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ==", "bodyText": "@romani forceStrictCondition is set to false. Shouldn't there be no violation here?", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530751111", "createdAt": "2020-11-26T03:19:18Z", "author": {"login": "rnveach"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5ODIxNw==", "bodyText": "@Abhishek-kumar09 , can you explain ?\nThis option allow to use extra spaces if that visually benefitial", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530798217", "createdAt": "2020-11-26T06:29:50Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ=="}, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1MTQ1Mw==", "bodyText": "Actually it is not following forceStrictCondition.\nIf it would, then all the Indent-levels after arrayInitIndent/linewrappingIndent  is valid.\nParticularly here, the user intent is to align code with 0 lineWrapping and 0 arrayInit indent.\nFor giving some flexibility over only arrayInitIndent, the child is also allowed to have lineWrapping and lcurly+lineWrapping.\nBut, yes it feels valid to me now that the child should also follow forceStrictCondition being false/true.\nWhat's your take? Should I change the code?", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r530851453", "createdAt": "2020-11-26T08:32:11Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ=="}, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4NzExMQ==", "bodyText": "@rnveach I have applied the changes. Please have a look.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r532887111", "createdAt": "2020-11-30T20:35:47Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ=="}, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5NjE3NQ==", "bodyText": "sorry for being late on this discussion .... I needed some time to meditate on this.\nhttps://checkstyle.org/config_misc.html#Indentation\nfrom documentation\n\nforceStrictCondition | Force strict indent level in line wrapping case. If value is true, line wrap                   indent have to be same as lineWrappingIndentation parameter. If value is false,                   line wrap indent could be bigger on any value user would like.\n\nit is clearly not for arrayInitIndent. arrayInitIndent is somehow in between of basicOffset and lineWrappingIndentation. Because technically array should be in one line and we just wrap array by , in multiple line.\nBut the same is true for basicOffset, Class/block can be single line class A { int i; int j; } and we just wrap it by ; in separate lines. But we have special property for this - basicOffset. So wrapping by separator between completely independent items should follow some offset.\nLets come back to array.\nArray in very similar to blocks, as all its inner elements are independent, but not separated by ; so it has special property.\nlineWrappingIndentation is more applicable for wrapping inside statement - it wrapping in level deeper than by ;. For arrays - it is for wrapping inside array element, not between them.\n@rnveach , @Abhishek-kumar09 if you both agree ...... Please revert your implementation of lineWrappingIndentation for arrays. Sorry for being late.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534196175", "createdAt": "2020-12-02T14:12:24Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ=="}, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA1NzQwOQ==", "bodyText": "@rnveach , @Abhishek-kumar09 , please read and if you agree lets proceed in this way.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r537057409", "createdAt": "2020-12-06T15:11:09Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:0,33,35 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1MTExMQ=="}, "originalCommit": {"oid": "5665ebb71ff5f6fbf8fe74f02af0c77518c6659f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTIyMzkxOnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjozMjo0OVrOH9YzuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxNjoyMVrOH9c6zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzMTY0MA==", "bodyText": "Continuation of #8083 (comment) ,\nShould 0 really be allowed as an indentation?\nEven google style examples show some indentation in the example provided.\nhttps://google.github.io/styleguide/javaguide.html#s4.8.3.1-array-initializers", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534131640", "createdAt": "2020-12-02T12:32:49Z", "author": {"login": "rnveach"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:>=0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406bd88ea4e0e63c1fe27aefd10e7d0f174cfb96"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3MjY0MA==", "bodyText": "@rnveach\nActually it is checking against config where arrayInit = 0, lineWrapping = 0.\nand thus allowing 0 as an indentation level.\nSince google has 2 as arrayInit, and 4 as lineWrapping. It will not allow the same.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534172640", "createdAt": "2020-12-02T13:39:01Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:>=0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzMTY0MA=="}, "originalCommit": {"oid": "406bd88ea4e0e63c1fe27aefd10e7d0f174cfb96"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODQ3MQ==", "bodyText": "Thanks, sorry, I missed the config.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534198471", "createdAt": "2020-12-02T14:15:37Z", "author": {"login": "rnveach"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:>=0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzMTY0MA=="}, "originalCommit": {"oid": "406bd88ea4e0e63c1fe27aefd10e7d0f174cfb96"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODk5MA==", "bodyText": "@Abhishek-kumar09 ,\n0 is not good indentation.\nplease make code sample like this with indent:0 and should violate such code.", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534198990", "createdAt": "2020-12-02T14:16:21Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit2.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 0                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 0                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit2.Foo({ //indent:0 exp:0\n+    @InputIndentationAnnArrInit2.Bar, //indent:4 exp:>=0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzMTY0MA=="}, "originalCommit": {"oid": "406bd88ea4e0e63c1fe27aefd10e7d0f174cfb96"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTY4NDQ5OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyMjowOFrOH9dMYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyMjowOFrOH9dMYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMzQ4OQ==", "bodyText": "@Abhishek-kumar09 ,\n0 is not good indentation.\nplease make code sample like this with indent:0 and should violate such code.\n\nIts already here. Indent:0 exp:>=4", "url": "https://github.com/checkstyle/checkstyle/pull/8083#discussion_r534203489", "createdAt": "2020-12-02T14:22:08Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationAnnArrInit.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/* Config:                                                                  //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration: //indent:1 exp:1\n+ *                                                                          //indent:1 exp:1\n+ * arrayInitIndent = 6                                                      //indent:1 exp:1\n+ * basicOffset = 2                                                          //indent:1 exp:1\n+ * braceAdjustment = 0                                                      //indent:1 exp:1\n+ * caseIndent = 4                                                           //indent:1 exp:1\n+ * forceStrictCondition = false                                             //indent:1 exp:1\n+ * lineWrappingIndentation = 4                                              //indent:1 exp:1\n+ * tabWidth = 8                                                             //indent:1 exp:1\n+ * throwsIndent = 4                                                         //indent:1 exp:1\n+ */                                                                         //indent:1 exp:1\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+@InputIndentationAnnArrInit.Foo({ @InputIndentationAnnArrInit.Bar, //indent:0 exp:0\n+    @InputIndentationAnnArrInit.Bar, //indent:4 exp:4\n+@InputIndentationAnnArrInit.Bar, //indent:0 exp:>=4 warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c882a937b98229872583988ae8c3747a05a5582"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1111, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}