{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NDY2NjUx", "number": 8920, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxODo1Nzo1NFrOExlbxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0MjoyN1rOE0ivvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDI4OTk3OnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxODo1Nzo1NFrOHnzqsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxODo1Nzo1NFrOHnzqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUwMzAyNw==", "bodyText": "Remaining travis failure is due to spellcheck failing on \"nmancus\", which will be removed after checkstyle/contribution#516", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r511503027", "createdAt": "2020-10-24T18:57:54Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,35 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  # activate below line after https://github.com/checkstyle/contribution/pull/516\n+  # git clone https://github.com/checkstyle/contribution\n+  # need to remove below line after https://github.com/checkstyle/contribution/pull/516\n+  git clone https://github.com/nmancus1/contribution.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bead59275f1f0a46ae29a16e3aa97f9f10aa4b07"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU2NDIxOnYy", "diffSide": "RIGHT", "path": ".ci/openjdk-projects-to-test-on.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MTo0MVrOHpuEOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1Nzo0OVrOHreQPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODQwOA==", "bodyText": "please change extension of file to \".config\" to skip this file from any tool that try to validate it.\nI do not remember why we named it as \".properties\", probably very first version of file was based on properties.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513508408", "createdAt": "2020-10-28T14:51:41Z", "author": {"login": "romani"}, "path": ".ci/openjdk-projects-to-test-on.properties", "diffHunk": "@@ -0,0 +1,11 @@\n+# suppress inspection \"UnusedProperty\" for whole file\n+# suppress inspection \"WrongPropertyKeyValueDelimiter\" for whole file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NjQ5NQ==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515346495", "createdAt": "2020-10-30T19:57:49Z", "author": {"login": "nmancus1"}, "path": ".ci/openjdk-projects-to-test-on.properties", "diffHunk": "@@ -0,0 +1,11 @@\n+# suppress inspection \"UnusedProperty\" for whole file\n+# suppress inspection \"WrongPropertyKeyValueDelimiter\" for whole file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODQwOA=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU3MzA1OnYy", "diffSide": "RIGHT", "path": ".ci/jsoref-spellchecker/whitelist.words", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MzoyNlrOHpuJ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1Nzo1N1rOHreQgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwOTg1OQ==", "bodyText": "bunch of crappy words are leaking to our whitelist, lets exclude .ci/openjdk14-excluded.files completely from spell-checker", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513509859", "createdAt": "2020-10-28T14:53:26Z", "author": {"login": "romani"}, "path": ".ci/jsoref-spellchecker/whitelist.words", "diffHunk": "@@ -1347,6 +1348,7 @@ tt\n ttf\n ttype\n tw\n+Twr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NjU2MQ==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515346561", "createdAt": "2020-10-30T19:57:57Z", "author": {"login": "nmancus1"}, "path": ".ci/jsoref-spellchecker/whitelist.words", "diffHunk": "@@ -1347,6 +1348,7 @@ tt\n ttf\n ttype\n tw\n+Twr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwOTg1OQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU4MDExOnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1NDozNlrOHpuOOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNTozOTozOVrOHroLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDk3MQ==", "bodyText": "please move this to build line to be done before clone of contribution", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513510971", "createdAt": "2020-10-28T14:54:36Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NjYzMA==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515346630", "createdAt": "2020-10-30T19:58:05Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDk3MQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MDA4Mw==", "bodyText": "Just curious, why? In case of build failure, we don't waste resources/time to clone the contribution repo?", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515350083", "createdAt": "2020-10-30T20:05:29Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDk3MQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTAzNA==", "bodyText": "build failure is rare\nin CI we do not make waste, as whole environment is deleted after al executions, only logs are left.\non local, yes it might, but usually this command executed the last verification, so build is passing for sure.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515509034", "createdAt": "2020-10-31T15:39:39Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDk3MQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzYwMDQ0OnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1ODozMlrOHpubUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNTo0ODoyMFrOHroOLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNDMyMQ==", "bodyText": "awesome hack ! I like it.\nI would keep it in mind, it might be handy for other complicated cases also.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513514321", "createdAt": "2020-10-28T14:58:32Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU1NzA0MA==", "bodyText": "I'll leave this here for the future then...\nRan from Checkstyle root:\n#!/bin/bash\nOUTPUT=\"test\"\nwhile  [ -n \"$OUTPUT\" ]\ndo\n    OUTPUT=$(.ci/no-exception-test.sh openjdk14-checkstyle-checks-no-exception | grep \"Caused by: \" | grep -oh '/.*.java' | sed 's|.*/||' | cut -f 1 -d '.' | uniq)\n    echo \"$OUTPUT\"\n    echo -e \"<module name=\\\"BeforeExecutionExclusionFileFilter\\\">\\n  <property name=\\\"fileNamePattern\\\" value=\\\"/$OUTPUT\\.java\\$\\\"/>\\n</module>\" >> config/openjdk14-excluded.files\n    rm -rf .ci-temp/contribution\ndone", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513557040", "createdAt": "2020-10-28T15:51:11Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNDMyMQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NzAyOA==", "bodyText": "I've linked to the above script from the generated file in this PR, in case we should need to create such a file in the future.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515347028", "createdAt": "2020-10-30T19:58:59Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNDMyMQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTgwNQ==", "bodyText": "@nmancus1 , see my comment below on how to improve.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515509805", "createdAt": "2020-10-31T15:48:20Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  mvn -e clean install -Pno-validations\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNDMyMQ=="}, "originalCommit": {"oid": "c1500c828b3a32d4f0a45f444a9d698f1f8eb4fd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDIwMzQ3OnYy", "diffSide": "RIGHT", "path": ".ci/openjdk14-excluded.files", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNTo0MzowNVrOHroMTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzoxMDoxMlrOHsNvHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTMyNg==", "bodyText": "please make it as comment in issue, it is more visible area.\nall PR conversations become resolved \"collabsed\".", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515509326", "createdAt": "2020-10-31T15:43:05Z", "author": {"login": "romani"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513557040 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyNDQ0Ng==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516124446", "createdAt": "2020-11-02T17:10:12Z", "author": {"login": "nmancus1"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/pull/8920#discussion_r513557040 -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTMyNg=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDIwNTg5OnYy", "diffSide": "RIGHT", "path": ".semaphore/semaphore.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNTo0NjowNlrOHroNZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxMTozMToyOVrOHruV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTYwNA==", "bodyText": "@pbludov , this is not very good approach for CI config.\nit should be:\n.ci/no-exception-test.sh openjdk14-with-checks-nonjavadoc-error\nand in comamnds we do eval $COMMAND\none day this execution will fail in CI in PR, contributor might not be very experienced in CI to figureout how to reproduce it on local, so we will share with him link to single line in config for simple copy and paste in terminal, and it works.\nif no objections, lets make issue on this and improve separately.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515509604", "createdAt": "2020-10-31T15:46:06Z", "author": {"login": "romani"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -84,6 +84,7 @@ blocks:\n               values:\n                 - guava-with-google-checks\n                 - guava-with-sun-checks\n+                - openjdk14-with-checks-nonjavadoc-error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxMDA2NQ==", "bodyText": "done in #8950", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515610065", "createdAt": "2020-11-01T11:31:29Z", "author": {"login": "pbludov"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -84,6 +84,7 @@ blocks:\n               values:\n                 - guava-with-google-checks\n                 - guava-with-sun-checks\n+                - openjdk14-with-checks-nonjavadoc-error", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwOTYwNA=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTA4MzY4OnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxMjoyMTo0NlrOHruqSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNDoxODo1OVrOHrvblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTMwNg==", "bodyText": "Checkstyle is built already: https://github.com/checkstyle/checkstyle/blob/master/.semaphore/semaphore.yml#L88", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515615306", "createdAt": "2020-11-01T12:21:46Z", "author": {"login": "pbludov"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTgxNQ==", "bodyText": "i'll remove duplicate from semaphore.yml", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515615815", "createdAt": "2020-11-01T12:26:26Z", "author": {"login": "pbludov"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTMwNg=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyMzg3MA==", "bodyText": "this is a prat I still do not have strong position, where to keep build of checkstyle in validation commands or in CI config (presumably it is \"given\").\nSome CI reuse the same host for all executions (wercker for example).\nprobably we can have shells like:\nci.yml -> your-ci.sh TASK_NAME -> \"mvn install ....\"  && validation.sh TASKNAME \nplease share ideas, I open for better way to do this.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515623870", "createdAt": "2020-11-01T13:42:13Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTMwNg=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyNjIwMg==", "bodyText": "From #8950 (review):\nmvn -e clean install -Pno-validations && .ci/validation.sh all-sevntu-checks\nThis is a good idea; when I am working on these CI builds, I always comment out the checkstyle build so that I don't have to waste time building Checkstyle over and over again locally.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515626202", "createdAt": "2020-11-01T14:04:01Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTMwNg=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyNzkyNA==", "bodyText": "in my case it is simple copy-paste with presumption that sources are built.\nif no built done, failure is obvious\nwhen  no re-build is done, significant execution time reduction.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r515627924", "createdAt": "2020-11-01T14:18:59Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,28 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mvn -e clean install -Pno-validations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYxNTMwNg=="}, "originalCommit": {"oid": "08717bf5a949bc89a7bf291d215af1798aca258a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDQxODE2OnYy", "diffSide": "RIGHT", "path": ".semaphore/semaphore.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0MTozNVrOHsMfGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowOTowOFrOHsNsUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwMzk2MQ==", "bodyText": "please add indentation for easy reading", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516103961", "createdAt": "2020-11-02T16:41:35Z", "author": {"login": "pbludov"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -73,6 +73,8 @@ blocks:\n                     && .ci/validation.sh no-error-pmd\n                 - mvn -e clean install -Pno-validations\n                     && .ci/validation.sh no-violation-test-configurate\n+                - mvn -e clean install -Pno-validations\n+                  && .ci/no-exception-test.sh openjdk14-with-checks-nonjavadoc-error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c631fe1da6edb6d6788b536ab25d763ed443de"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMzczMA==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516123730", "createdAt": "2020-11-02T17:09:08Z", "author": {"login": "nmancus1"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -73,6 +73,8 @@ blocks:\n                     && .ci/validation.sh no-error-pmd\n                 - mvn -e clean install -Pno-validations\n                     && .ci/validation.sh no-violation-test-configurate\n+                - mvn -e clean install -Pno-validations\n+                  && .ci/no-exception-test.sh openjdk14-with-checks-nonjavadoc-error", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwMzk2MQ=="}, "originalCommit": {"oid": "b5c631fe1da6edb6d6788b536ab25d763ed443de"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTI5NDYxOnYy", "diffSide": "RIGHT", "path": ".ci/openjdk14-excluded.files", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozODo0MFrOHsU0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToxMToyOVrOHtcgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ==", "bodyText": "Is there a reason these files do not have any reference to an exact or matching folder path?\nBy specifying a file only, it means we will exclude any file matching that name, especially if there are 2 or more in different folders.\nFurthermore why do some have / and others don't? For Windows compatibility folder paths should be [\\\\/]", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516240425", "createdAt": "2020-11-02T20:38:40Z", "author": {"login": "rnveach"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQxODYyNw==", "bodyText": "#8901 (comment)\nIt was easier to catch files and generate this file.\nChange to match different files is very low. We can improve this late on ones it become proven way for jdk validation.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516418627", "createdAt": "2020-11-03T04:08:32Z", "author": {"login": "romani"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxOTIzOA==", "bodyText": "I understand this file is generated, but I am seeing anything that says why folders were removed. If this is to be done later ok, but we could be missing overlapping files.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516719238", "createdAt": "2020-11-03T14:43:50Z", "author": {"login": "rnveach"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcyMDk5NQ==", "bodyText": "Is there a reason these files do not have any reference to an exact or matching folder path?\n\nA good question. There were quite a few duplicates of identical/ nearly identical files with the same name that kept failing with NPE, so in order to generate this list of\nBeforeExecutionExclusionFileFilter modules in a reasonable amount of time (it still took over three days),  I had the script eliminate the path.\nAlso, since I semi-manually verified non-compilable files, this allowed me to get it done in less time. Additionally, I have had issues line-wrapping XML reliably, so another reason to omit the paths was to keep lines under 100 chars.\n\nBy specifying a file only, it means we will exclude any file matching that name, especially if there are 2 or more in different folders.\n\nI felt that losing some granularity in the BeforeExecutionExclusionFileFilter modules was a fair trade to be able to increase our testing on openjdk14 from around 2,000 files to more than 40,000.  In retrospect, I should have discussed this in issue and got feedback before proceeding.\n\nFurthermore why do some have / and others don't?\n\nThat's a good question; I didn't catch that.  The file names that are not preceded with '/' were the ones that I added manually that we were already aware of issues with.  I can fix that.\n\nFor Windows compatibility folder paths should be [\\\\/]\n\nWe only have a Linux build on Semaphore, so I hadn't considered Windows compatibility, honestly.  I can fix this so that windows users can run locally.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516720995", "createdAt": "2020-11-03T14:45:59Z", "author": {"login": "nmancus1"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2MzE3Mw==", "bodyText": "Please fix windows compatibility.\nAnother issue can be postponed.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516763173", "createdAt": "2020-11-03T15:41:46Z", "author": {"login": "romani"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NjUyMw==", "bodyText": "Yea, please fix Windows directories so it can be run by those users locally.\nI am ok to skip adding any type of folder paths.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516876523", "createdAt": "2020-11-03T18:35:32Z", "author": {"login": "rnveach"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNDMxMA==", "bodyText": "To be clear, I need to change all the preceding / to \\\\/, right?", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r517304310", "createdAt": "2020-11-04T12:20:58Z", "author": {"login": "nmancus1"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwNDMwNw==", "bodyText": "you have single , so need to change single.\nexample of how it will looks like:\n\n  \n    \n      checkstyle/config/suppressions.xml\n    \n    \n         Line 67\n      in\n      3fc9dd9\n    \n    \n    \n    \n\n        \n          \n           <suppress checks=\"MethodCount\" files=\"[\\\\/]JavadocMethodCheck.java$\"/>", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r517404307", "createdAt": "2020-11-04T14:57:05Z", "author": {"login": "romani"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxNTAwOA==", "bodyText": "Fixed.  I've also removed to escapes from the \\. in file names to be consistent with your example.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r517415008", "createdAt": "2020-11-04T15:11:29Z", "author": {"login": "nmancus1"}, "path": ".ci/openjdk14-excluded.files", "diffHunk": "@@ -0,0 +1,514 @@\n+<!-- This file generated by script at -->\n+<!--     https://github.com/checkstyle/checkstyle/issues/8901#issuecomment-712939037 -->\n+\n+<!-- Excluded due to exception; issues opened -->\n+\n+<!-- until https://github.com/checkstyle/checkstyle/issues/8945 -->\n+<module name=\"BeforeExecutionExclusionFileFilter\">\n+  <property name=\"fileNamePattern\" value=\"/NestedTypes\\.java$\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDQyNQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTMwMDE0OnYy", "diffSide": "RIGHT", "path": ".ci/openjdk-projects-to-test-on.config", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0MDoyMFrOHsU3Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDo0NTowOFrOHsyGqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTIzOQ==", "bodyText": "Why is this file needed? Why can't we use contribution's file and tell it to target openjdk14 only?", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516241239", "createdAt": "2020-11-02T20:40:20Z", "author": {"login": "rnveach"}, "path": ".ci/openjdk-projects-to-test-on.config", "diffHunk": "@@ -0,0 +1,8 @@\n+# List of GIT repositories to clone / pull for checking with Checkstyle\n+# File format: REPO_NAME|[local|git|hg]|URL|[COMMIT_ID]|[EXCLUDE FOLDERS]\n+# Please note that bash comments works in this file\n+#\n+# This file has been created to alleviate confusion in the contribution\n+# repository's projects-to-test-on.properties file; these projects\n+# must be used with special configurations.\n+openjdk14|git|https://github.com/openjdk/jdk14|master||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQxNjQ5Mw==", "bodyText": "It is very special line, it  is not usable for regular groovy files.\nI even removed openjfk from contribution repo, as it caused too much confusion to contributors.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516416493", "createdAt": "2020-11-03T03:58:11Z", "author": {"login": "romani"}, "path": ".ci/openjdk-projects-to-test-on.config", "diffHunk": "@@ -0,0 +1,8 @@\n+# List of GIT repositories to clone / pull for checking with Checkstyle\n+# File format: REPO_NAME|[local|git|hg]|URL|[COMMIT_ID]|[EXCLUDE FOLDERS]\n+# Please note that bash comments works in this file\n+#\n+# This file has been created to alleviate confusion in the contribution\n+# repository's projects-to-test-on.properties file; these projects\n+# must be used with special configurations.\n+openjdk14|git|https://github.com/openjdk/jdk14|master||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTIzOQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcyMDI5Nw==", "bodyText": "I am resolving this. I thought the line was still in contribution.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516720297", "createdAt": "2020-11-03T14:45:08Z", "author": {"login": "rnveach"}, "path": ".ci/openjdk-projects-to-test-on.config", "diffHunk": "@@ -0,0 +1,8 @@\n+# List of GIT repositories to clone / pull for checking with Checkstyle\n+# File format: REPO_NAME|[local|git|hg]|URL|[COMMIT_ID]|[EXCLUDE FOLDERS]\n+# Please note that bash comments works in this file\n+#\n+# This file has been created to alleviate confusion in the contribution\n+# repository's projects-to-test-on.properties file; these projects\n+# must be used with special configurations.\n+openjdk14|git|https://github.com/openjdk/jdk14|master||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTIzOQ=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTMwNjg3OnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0MjoyN1rOHsU7Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjo0MzoyNlrOHtWeFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA==", "bodyText": "@romani Note this is using launch and not diff.\nNot expecting a change here.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516242270", "createdAt": "2020-11-02T20:42:27Z", "author": {"login": "rnveach"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQxOTIxMA==", "bodyText": "@nmancus1 , can we use diff.grovy here ?", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516419210", "createdAt": "2020-11-03T04:11:18Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNDcwOA==", "bodyText": "I can add the same extraMvnOptions command line arg to to diff.groovy, but since diff.groovy uses launch.groovy anyway, why not keep it as is and not have another utility to deal with?  Just curious.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516704708", "createdAt": "2020-11-03T14:25:52Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcyMjA0Ng==", "bodyText": "This goes back to discussion in main issue, ending with #8901 (comment) .\nIf we are to remove JXR from tester's POM to avoid telling it not to run anyways, we need to remove uses of launch as I think we are still relying on it generating HTML files since diff-report-tool is what generates the final HTML when diff is launched. It was never confirmed on this aspect so I don't know what effect it will have on jobs running launch and if they will be \"broken\".\nI am fine with delaying it if we want to, but its just going to be an on-going issue. We need to trim back on JXR and maven-checkstyle-plugin which just hold us back.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516722046", "createdAt": "2020-11-03T14:47:27Z", "author": {"login": "rnveach"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczMTkwNA==", "bodyText": "So,  I should submit a PR to contribution to add extraMvnOptions to diff.groovy, then use that in this PR, right?", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516731904", "createdAt": "2020-11-03T15:00:27Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2Mzg0Mw==", "bodyText": "I recommend to merge now and improve to use diff.groovy in next iteration/PR.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516763843", "createdAt": "2020-11-03T15:42:41Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NzA3MA==", "bodyText": "Then this is resolved for this PR, I will just leave this open for follow up.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r516877070", "createdAt": "2020-11-03T18:36:34Z", "author": {"login": "rnveach"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNTEzOQ==", "bodyText": "@nmancus1 , please create issue on this , one day we will address it.", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r517035139", "createdAt": "2020-11-04T00:38:59Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxNjExNg==", "bodyText": "#8960\ncheckstyle/contribution#523", "url": "https://github.com/checkstyle/checkstyle/pull/8920#discussion_r517316116", "createdAt": "2020-11-04T12:43:26Z", "author": {"login": "nmancus1"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -53,6 +53,27 @@ guava-with-sun-checks)\n   rm sun_checks.*\n   ;;\n \n+openjdk14-with-checks-nonjavadoc-error)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd ..\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' \\\n+        .ci-temp/contribution/checkstyle-tester/checks-nonjavadoc-error.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  sed -i '/  <!-- Filters -->/r ../../../.ci/openjdk14-excluded.files' checks-nonjavadoc-error.xml\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects ../../../.ci/openjdk-projects-to-test-on.config \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MjI3MA=="}, "originalCommit": {"oid": "c0f66cd64481452aaeb1d315deea71ca4e198c8e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1644, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}