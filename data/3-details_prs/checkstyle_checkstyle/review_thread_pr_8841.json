{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5OTA2MDcx", "number": 8841, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNTo0NDo1MFrOElggYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoxMzo1NVrOElpuZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzY1MzQ3OnYy", "diffSide": "RIGHT", "path": ".semaphore/semaphore.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNTo0NDo1MFrOHVBSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOTozOToyMFrOHVHx1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMzIxNA==", "bodyText": "As we started moving execution,\nIt makes sense to do\n./no-exception-test.sh alot-of-project1\nAnd any CI can execute such command, even user ecute validation command.\nAnd we can easily move commands between CI without modification of she'll files.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r491803214", "createdAt": "2020-09-21T05:44:50Z", "author": {"login": "romani"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -0,0 +1,58 @@\n+version: v1.0\n+name: \"Checkstyle CI pipeline on Semaphore\"\n+agent:\n+  machine:\n+    type: e1-standard-2\n+    os_image: ubuntu1804\n+auto_cancel:\n+  running:\n+    when: \"branch != 'master'\"\n+blocks:\n+  - name: \"Linux openjdk 11 build\"\n+    task:\n+      prologue:\n+        commands:\n+          - checkout\n+          - cache restore m2\n+          - eval \"export M2_CACHE_SIZE=$(du -s $HOME/.m2 | cut -f1)\"\n+          - sudo apt-get update\n+          - sudo apt-get install -y ant groovy xsltproc xmlstarlet\n+          - sem-version java 11\n+      epilogue:\n+        commands:\n+          - |\n+            if [[ ${M2_CACHE_SIZE} -ne $(du -s $HOME/.m2 | cut -f1) ]]\n+            then\n+              cache delete m2\n+              cache store m2 $HOME/.m2\n+            fi\n+      jobs:\n+        - name: Ensure that all Sevntu check are used\n+          commands:\n+            - .ci/semaphore.sh all-sevntu-checks\n+\n+        - name: No error test on pmd\n+          commands:\n+            - .ci/semaphore.sh no-error-pmd\n+\n+        #  Disabled due to instability\n+        #  - name: No violation testing on josm\n+        #    commands:\n+        #      - .ci/semaphore.sh no-violation-test-josm\n+\n+        - name: No exception test\n+          matrix:\n+            - env_var: PROJECT\n+              values:\n+                - checkstyle-sevntu-checkstyle\n+                - guava\n+                - guava-with-google-checks\n+                - guava-with-sun-checks\n+                - hibernate\n+                - spotbugs\n+                - spring-framework\n+                - hbase\n+                - pmd-elasticsearch-lombok-ast\n+                - alot-of-project1\n+          commands:\n+            - .ci/semaphore.sh no-exception-test-$PROJECT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8e966532991e76f55aabe8df5c12d217768d918"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwOTU4OA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r491909588", "createdAt": "2020-09-21T09:39:20Z", "author": {"login": "pbludov"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -0,0 +1,58 @@\n+version: v1.0\n+name: \"Checkstyle CI pipeline on Semaphore\"\n+agent:\n+  machine:\n+    type: e1-standard-2\n+    os_image: ubuntu1804\n+auto_cancel:\n+  running:\n+    when: \"branch != 'master'\"\n+blocks:\n+  - name: \"Linux openjdk 11 build\"\n+    task:\n+      prologue:\n+        commands:\n+          - checkout\n+          - cache restore m2\n+          - eval \"export M2_CACHE_SIZE=$(du -s $HOME/.m2 | cut -f1)\"\n+          - sudo apt-get update\n+          - sudo apt-get install -y ant groovy xsltproc xmlstarlet\n+          - sem-version java 11\n+      epilogue:\n+        commands:\n+          - |\n+            if [[ ${M2_CACHE_SIZE} -ne $(du -s $HOME/.m2 | cut -f1) ]]\n+            then\n+              cache delete m2\n+              cache store m2 $HOME/.m2\n+            fi\n+      jobs:\n+        - name: Ensure that all Sevntu check are used\n+          commands:\n+            - .ci/semaphore.sh all-sevntu-checks\n+\n+        - name: No error test on pmd\n+          commands:\n+            - .ci/semaphore.sh no-error-pmd\n+\n+        #  Disabled due to instability\n+        #  - name: No violation testing on josm\n+        #    commands:\n+        #      - .ci/semaphore.sh no-violation-test-josm\n+\n+        - name: No exception test\n+          matrix:\n+            - env_var: PROJECT\n+              values:\n+                - checkstyle-sevntu-checkstyle\n+                - guava\n+                - guava-with-google-checks\n+                - guava-with-sun-checks\n+                - hibernate\n+                - spotbugs\n+                - spring-framework\n+                - hbase\n+                - pmd-elasticsearch-lombok-ast\n+                - alot-of-project1\n+          commands:\n+            - .ci/semaphore.sh no-exception-test-$PROJECT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMzIxNA=="}, "originalCommit": {"oid": "b8e966532991e76f55aabe8df5c12d217768d918"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAzMTQ0OnYy", "diffSide": "RIGHT", "path": ".ci/eclipse-compiler-javac.sh", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0MzowNFrOHVOHVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDoxOToyMFrOHVShgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA==", "bodyText": "please remove this update from this commit.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492013398", "createdAt": "2020-09-21T12:43:04Z", "author": {"login": "romani"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0MzA0NA==", "bodyText": "The build will fail as R-4.11-201903070500 was removed from the repo:\nhttp://ftp-stud.fht-esslingen.de/pub/Mirrors/eclipse/eclipse/downloads/drops4/\n  | R-4.15-202003050155/ | 2020-03-18 14:29 | - |  \n\u00a0 | R-4.16-202006040540/ | 2020-08-06 09:42 | - | \u00a0\n\u00a0 | R-4.17-202009021800/ | 2020-09-16 16:00 | - | \u00a0\n\u00a0 | index.html | 2015-03-16 23:21 | 60 | \u00a0", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492043044", "createdAt": "2020-09-21T13:27:06Z", "author": {"login": "pbludov"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0NjA0OA==", "bodyText": "ok, lets keep it", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492046048", "createdAt": "2020-09-21T13:31:19Z", "author": {"login": "romani"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MzkyNA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492053924", "createdAt": "2020-09-21T13:41:44Z", "author": {"login": "pbludov"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1NzQ1NQ==", "bodyText": "Build log: https://checkstyle.semaphoreci.com/jobs/ee2aa9b3-6c6e-479a-a9a1-0bee0431808e#L458", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492057455", "createdAt": "2020-09-21T13:46:26Z", "author": {"login": "pbludov"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA2OTcwMg==", "bodyText": "@pbludov , sorry for confusion, I meant, let keep version update in this commit.\nor please keep eclipse for now in travis and we will move it separate PR.\nWe need green CI to merge this PR.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492069702", "createdAt": "2020-09-21T14:02:47Z", "author": {"login": "romani"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4NTYzMw==", "bodyText": "We can merge #8840 first and restart this build. These PR has no conflict.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492085633", "createdAt": "2020-09-21T14:19:20Z", "author": {"login": "pbludov"}, "path": ".ci/eclipse-compiler-javac.sh", "diffHunk": "@@ -7,8 +7,8 @@ if [ -z \"$1\" ]; then\n     exit 1\n fi\n \n-ECJ_JAR=\"ecj-4.11.jar\"\n-ECJ_MAVEN_VERSION=\"R-4.11-201903070500\"\n+ECJ_JAR=\"ecj-4.17.jar\"\n+ECJ_MAVEN_VERSION=\"R-4.17-202009021800\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzM5OA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTA5Nzg2OnYy", "diffSide": "RIGHT", "path": ".ci/semaphore.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo1Nzo1OFrOHVOv9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzo0MToyN1rOHVQkwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyMzc5Nw==", "bodyText": "please move this code to new file validation.sh,  lets keep all CI validations in CI agnostic files (as we can execute them in any CI and even on local manually).\nWe are historically placed commands in CI specific files like \"travis.sh, wercker.sh, ....\" it was design mistake. Only after many years of managing of this CI set I came to conclusion that it should be like:\ntravis.yml\n  -> some-cli-command argument1\n  -> some-shell-file.sh command\n  -> some-another-big-validation-task.sh \nsome-ci.yml\n  -> some-cli-command argument2\n  -> some-shell-file.sh command2\n  -> some-another-big-validation-task2.sh \n\nprobably last good example is pitest.sh (attention to name, no CI reference). We grouped all same validations in one file, but it can be executed from any CI. I did not have time to refactor all others to same model.\nEven some CI validations are specific to CI, it is probably a misdesign of validations. All commands should be executed on local, user should be able to reproduce CI failure on local.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492023797", "createdAt": "2020-09-21T12:57:58Z", "author": {"login": "romani"}, "path": ".ci/semaphore.sh", "diffHunk": "@@ -24,6 +24,66 @@ all-sevntu-checks)\n   removeFolderWithProtectedFiles $working_dir\n   ;;\n \n+check-missing-pitests)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MzY5OA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492053698", "createdAt": "2020-09-21T13:41:27Z", "author": {"login": "pbludov"}, "path": ".ci/semaphore.sh", "diffHunk": "@@ -24,6 +24,66 @@ all-sevntu-checks)\n   removeFolderWithProtectedFiles $working_dir\n   ;;\n \n+check-missing-pitests)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyMzc5Nw=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTE2MzkxOnYy", "diffSide": "RIGHT", "path": ".ci/no-exception-test.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoxMzo1NVrOHVPX9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzo0MToxOVrOHVQkbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAzNDAzOA==", "bodyText": "checkstyle/wercker.yml\n    \n    \n         Line 289\n      in\n      797642a\n    \n    \n    \n    \n\n        \n          \n           name: NoExceptiontest - pmd elasticsearch lombok-ast \n        \n    \n  \n\n\nit might be absolutely the same.\nWe should not have duplicates in CI. please remove from no-exception-test.sh  what we have in wercker.sh\nWercker was created in same style as you create semaphore now, I did a copy of commands because I was not sure about stability of wercker at that time and wanted ability to quickly restore executions in wercker, and I never came back to this. Lets not repeat my mistake.\nupdate of wercker.yml to reuse no-exception-test.sh is separate task.", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492034038", "createdAt": "2020-09-21T13:13:55Z", "author": {"login": "romani"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -0,0 +1,230 @@\n+#!/bin/bash\n+set -e\n+\n+removeFolderWithProtectedFiles() {\n+  find $1 -delete\n+}\n+\n+case $1 in\n+\n+checkstyle-sevntu-checkstyle)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#checkstyle/checkstyle/' projects-to-test-on.properties\n+  sed -i.'' 's/#sevntu-checkstyle/sevntu-checkstyle/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+guava)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+     --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+guava-with-google-checks)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cp src/main/resources/google_checks.xml .ci-temp/google_checks.xml\n+  sed -i.'' 's/warning/ignore/' .ci-temp/google_checks.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config ../../google_checks.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  rm google_checks.*\n+  ;;\n+\n+guava-with-sun-checks)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cp src/main/resources/sun_checks.xml .ci-temp/sun_checks.xml\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' .ci-temp/sun_checks.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config ../../sun_checks.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  rm sun_checks.*\n+  ;;\n+\n+hibernate)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#hibernate-orm/hibernate-orm/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+     --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+spotbugs)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#spotbugs/spotbugs/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+spring-framework)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#spring-framework/spring-framework/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+hbase)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#Hbase/Hbase/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+pmd-elasticsearch-lombok-ast)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MzYxNA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/8841#discussion_r492053614", "createdAt": "2020-09-21T13:41:19Z", "author": {"login": "pbludov"}, "path": ".ci/no-exception-test.sh", "diffHunk": "@@ -0,0 +1,230 @@\n+#!/bin/bash\n+set -e\n+\n+removeFolderWithProtectedFiles() {\n+  find $1 -delete\n+}\n+\n+case $1 in\n+\n+checkstyle-sevntu-checkstyle)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#checkstyle/checkstyle/' projects-to-test-on.properties\n+  sed -i.'' 's/#sevntu-checkstyle/sevntu-checkstyle/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+guava)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+     --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+guava-with-google-checks)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cp src/main/resources/google_checks.xml .ci-temp/google_checks.xml\n+  sed -i.'' 's/warning/ignore/' .ci-temp/google_checks.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config ../../google_checks.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  rm google_checks.*\n+  ;;\n+\n+guava-with-sun-checks)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#guava|/guava|/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cp src/main/resources/sun_checks.xml .ci-temp/sun_checks.xml\n+  sed -i.'' 's/value=\\\"error\\\"/value=\\\"ignore\\\"/' .ci-temp/sun_checks.xml\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config ../../sun_checks.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  rm sun_checks.*\n+  ;;\n+\n+hibernate)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#hibernate-orm/hibernate-orm/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+     --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+spotbugs)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#spotbugs/spotbugs/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+spring-framework)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#spring-framework/spring-framework/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+    --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+hbase)\n+  CS_POM_VERSION=$(mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' \\\n+                     --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)\n+  echo CS_version: $CS_POM_VERSION\n+  mkdir -p .ci-temp/\n+  cd .ci-temp/\n+  git clone https://github.com/checkstyle/contribution\n+  cd contribution/checkstyle-tester\n+  sed -i.'' 's/^guava/#guava/' projects-to-test-on.properties\n+  sed -i.'' 's/#Hbase/Hbase/' projects-to-test-on.properties\n+  cd ../../../\n+  mvn -e clean install -Pno-validations\n+  cd .ci-temp/contribution/checkstyle-tester\n+  export MAVEN_OPTS=\"-Xmx2048m\"\n+  groovy ./launch.groovy --listOfProjects projects-to-test-on.properties \\\n+      --config checks-nonjavadoc-error.xml --checkstyleVersion $CS_POM_VERSION\n+  cd ../..\n+  removeFolderWithProtectedFiles contribution\n+  ;;\n+\n+pmd-elasticsearch-lombok-ast)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAzNDAzOA=="}, "originalCommit": {"oid": "545c7931bbe04ed988e7c590a2bd7d6c9f082235"}, "originalPosition": 177}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 694, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}