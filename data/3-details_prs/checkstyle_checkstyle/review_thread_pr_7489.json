{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0Mjg1NjI4", "number": 7489, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTo0MTowNVrODY61Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMjoyNDozNFrODapq8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDU2MzE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTo0MTowNVrOFfDVRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNDo1ODowMlrOFhwPgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDc3Mw==", "bodyText": "@romani Does it make sense we add similar method with this parameter in addition to the other?", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r368104773", "createdAt": "2020-01-17T19:41:05Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "diffHunk": "@@ -388,10 +388,15 @@ private static boolean isExprSurrounded(DetailAST ast) {\n      */\n     private static boolean isLambdaSingleParameterSurrounded(DetailAST ast) {\n         final DetailAST firstChild = ast.getFirstChild();\n-        return firstChild.getType() == TokenTypes.LPAREN\n-                && firstChild.getNextSibling().getChildCount(TokenTypes.PARAMETER_DEF) == 1\n-                && firstChild.getNextSibling().getFirstChild().findFirstToken(TokenTypes.TYPE)\n-                        .getChildCount() == 0;\n+        boolean result = false;\n+        if (firstChild.getType() == TokenTypes.LPAREN) {\n+            final DetailAST parameters = firstChild.getNextSibling();\n+            if (parameters.getChildCount(TokenTypes.PARAMETER_DEF) == 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57eb1d9f475a6de4ca7fa560a32022a2987addb9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzUzMA==", "bodyText": "please rephase question, I do not understand question.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370907530", "createdAt": "2020-01-25T02:17:57Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "diffHunk": "@@ -388,10 +388,15 @@ private static boolean isExprSurrounded(DetailAST ast) {\n      */\n     private static boolean isLambdaSingleParameterSurrounded(DetailAST ast) {\n         final DetailAST firstChild = ast.getFirstChild();\n-        return firstChild.getType() == TokenTypes.LPAREN\n-                && firstChild.getNextSibling().getChildCount(TokenTypes.PARAMETER_DEF) == 1\n-                && firstChild.getNextSibling().getFirstChild().findFirstToken(TokenTypes.TYPE)\n-                        .getChildCount() == 0;\n+        boolean result = false;\n+        if (firstChild.getType() == TokenTypes.LPAREN) {\n+            final DetailAST parameters = firstChild.getNextSibling();\n+            if (parameters.getChildCount(TokenTypes.PARAMETER_DEF) == 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDc3Mw=="}, "originalCommit": {"oid": "57eb1d9f475a6de4ca7fa560a32022a2987addb9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMDA1NA==", "bodyText": "Should we add method hasChildren(TokenType)? We have a getChildCount(TokenType) just like we have a getChildCount().", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370910054", "createdAt": "2020-01-25T03:06:32Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "diffHunk": "@@ -388,10 +388,15 @@ private static boolean isExprSurrounded(DetailAST ast) {\n      */\n     private static boolean isLambdaSingleParameterSurrounded(DetailAST ast) {\n         final DetailAST firstChild = ast.getFirstChild();\n-        return firstChild.getType() == TokenTypes.LPAREN\n-                && firstChild.getNextSibling().getChildCount(TokenTypes.PARAMETER_DEF) == 1\n-                && firstChild.getNextSibling().getFirstChild().findFirstToken(TokenTypes.TYPE)\n-                        .getChildCount() == 0;\n+        boolean result = false;\n+        if (firstChild.getType() == TokenTypes.LPAREN) {\n+            final DetailAST parameters = firstChild.getNextSibling();\n+            if (parameters.getChildCount(TokenTypes.PARAMETER_DEF) == 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDc3Mw=="}, "originalCommit": {"oid": "57eb1d9f475a6de4ca7fa560a32022a2987addb9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMTYyMA==", "bodyText": "I would rather not extend API that much, this is good candidate for utilities. We can move this to separate issue to analyze amount or usage first.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370911620", "createdAt": "2020-01-25T03:45:10Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "diffHunk": "@@ -388,10 +388,15 @@ private static boolean isExprSurrounded(DetailAST ast) {\n      */\n     private static boolean isLambdaSingleParameterSurrounded(DetailAST ast) {\n         final DetailAST firstChild = ast.getFirstChild();\n-        return firstChild.getType() == TokenTypes.LPAREN\n-                && firstChild.getNextSibling().getChildCount(TokenTypes.PARAMETER_DEF) == 1\n-                && firstChild.getNextSibling().getFirstChild().findFirstToken(TokenTypes.TYPE)\n-                        .getChildCount() == 0;\n+        boolean result = false;\n+        if (firstChild.getType() == TokenTypes.LPAREN) {\n+            final DetailAST parameters = firstChild.getNextSibling();\n+            if (parameters.getChildCount(TokenTypes.PARAMETER_DEF) == 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDc3Mw=="}, "originalCommit": {"oid": "57eb1d9f475a6de4ca7fa560a32022a2987addb9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNzczMQ==", "bodyText": "@rnveach , please resolve this item if you are ok with my reply, if not, lets move it to separate issue", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370937731", "createdAt": "2020-01-25T14:58:02Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "diffHunk": "@@ -388,10 +388,15 @@ private static boolean isExprSurrounded(DetailAST ast) {\n      */\n     private static boolean isLambdaSingleParameterSurrounded(DetailAST ast) {\n         final DetailAST firstChild = ast.getFirstChild();\n-        return firstChild.getType() == TokenTypes.LPAREN\n-                && firstChild.getNextSibling().getChildCount(TokenTypes.PARAMETER_DEF) == 1\n-                && firstChild.getNextSibling().getFirstChild().findFirstToken(TokenTypes.TYPE)\n-                        .getChildCount() == 0;\n+        boolean result = false;\n+        if (firstChild.getType() == TokenTypes.LPAREN) {\n+            final DetailAST parameters = firstChild.getNextSibling();\n+            if (parameters.getChildCount(TokenTypes.PARAMETER_DEF) == 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDc3Mw=="}, "originalCommit": {"oid": "57eb1d9f475a6de4ca7fa560a32022a2987addb9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDk0Mjc1OnYy", "diffSide": "LEFT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjozNjozN1rOFfG-_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjozNjozN1rOFfG-_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2NDYwNw==", "bodyText": "Pitest issue should be fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r368164607", "createdAt": "2020-01-17T22:36:37Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "diffHunk": "@@ -136,7 +136,7 @@ private boolean isSuperCallInOverridingMethod(DetailAST ast) {\n      */\n     private static boolean hasArguments(DetailAST methodCallDotAst) {\n         final DetailAST argumentsList = methodCallDotAst.getNextSibling();\n-        return argumentsList.getChildCount() > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2f86e5775c29a6e037631f4969e080f0b15168"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjcyMjYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "isResolved": true, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMjoyMzoyOVrOFhua0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMjo1MDoyNVrOFhxpvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA==", "bodyText": "unfortunately I am not confident in this refactoring.\nPlease provide regression report for affected Checks that use this function.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370907858", "createdAt": "2020-01-25T02:23:29Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMTQwMQ==", "bodyText": "Regression for InvalidJavadocPositionCheck, DesignForExtensionCheck, JavadocContentLocationCheck, MissingJavadocPackageCheck (no difference):\nhttps://pbludov.github.io/issue-7487-has-children-1/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370921401", "createdAt": "2020-01-25T08:21:07Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyNDA5OA==", "bodyText": "Regression for\nAtclauseOrder, JavadocBlockTagLocation, JavadocParagraph, JavadocTagContinuationIndentation, MissingDeprecated, NonEmptyAtclauseDescription, SingleLineJavadoc, SummaryJavadoc (no real difference):\nhttps://pbludov.github.io/issue-7487-has-children-2/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370924098", "createdAt": "2020-01-25T09:38:08Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyNzk0Mw==", "bodyText": "Regression for SummaryJavadoc only (no difference):\nhttps://pbludov.github.io/issue-7487-has-children-3/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370927943", "createdAt": "2020-01-25T11:12:49Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMzAxMQ==", "bodyText": "Please pull latest contribution repo, reports are not mobile friendly, latest report generator do better reports.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370933011", "createdAt": "2020-01-25T13:14:27Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMzU2MQ==", "bodyText": "https://pbludov.github.io/issue-7487-has-children-2/\n\nis full of differences, please use filter to suppress parse violations.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370933561", "createdAt": "2020-01-25T13:28:22Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNDgzMQ==", "bodyText": "Please pull latest contribution repo, reports are not mobile friendly, latest report generator do better reports.\n\n$ git pull\nAlready up to date.\n\nI'l try to reset the repo completely.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370934831", "createdAt": "2020-01-25T13:56:11Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNTQ1OA==", "bodyText": "after generation of report, try to make browser window small ... it should render without horizontal scrolling.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370935458", "createdAt": "2020-01-25T14:08:49Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNTY3Ng==", "bodyText": "@pbludov You may have to regenerate difference jar if it doesn't do it itself as it is what creates the report.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370935676", "createdAt": "2020-01-25T14:13:49Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NjkxMA==", "bodyText": "Regression for SummaryJavadoc only (no difference):\nhttps://pbludov.github.io/issue-7487-has-children-4/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370956910", "createdAt": "2020-01-25T21:21:05Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1OTE0Nw==", "bodyText": "Regression for Javadoc checks (no difference):\nhttps://pbludov.github.io/issue-7487-has-children-5/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370959147", "createdAt": "2020-01-25T22:08:56Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MDc5NA==", "bodyText": "Regression for non-Javadoc checks (no difference):\nhttps://pbludov.github.io/issue-7487-has-children-6/", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370960794", "createdAt": "2020-01-25T22:48:45Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MDgzMA==", "bodyText": "@romani all regression reports are rebuilt.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370960830", "createdAt": "2020-01-25T22:50:25Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPosition.java", "diffHunk": "@@ -169,15 +169,21 @@ public static boolean isOnConstructor(DetailAST blockComment) {\n      * @return true if node is before enum constant\n      */\n     public static boolean isOnEnumConstant(DetailAST blockComment) {\n-        final boolean isOnPlainConst = blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ENUM_CONSTANT_DEF\n-                && getPrevSiblingSkipComments(blockComment).getType() == TokenTypes.ANNOTATIONS\n-                && getPrevSiblingSkipComments(blockComment).getChildCount() == 0;\n-        final boolean isOnConstWithAnnotation = !isOnPlainConst && blockComment.getParent() != null\n-                && blockComment.getParent().getType() == TokenTypes.ANNOTATION\n-                && blockComment.getParent().getParent().getParent().getType()\n-                    == TokenTypes.ENUM_CONSTANT_DEF;\n-        return isOnPlainConst || isOnConstWithAnnotation;\n+        final DetailAST parent = blockComment.getParent();\n+        boolean result = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzg1OA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjcyMzA0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMjoyNDozNFrOFhubDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxMzo1Mzo1N1rOFhwDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA==", "bodyText": "Do we need this test ?\nWe try to avoid pure UTs as much as possible.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370907918", "createdAt": "2020-01-25T02:24:34Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMTQyNQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370921425", "createdAt": "2020-01-25T08:21:30Z", "author": {"login": "pbludov"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzUwNA==", "bodyText": "now ./.ci/pitest.sh pitest-common-2 fails", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370923504", "createdAt": "2020-01-25T09:20:06Z", "author": {"login": "pbludov"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzkyOQ==", "bodyText": "We need this test. I think we should keep all test for API. For an utility class a pure UT test is redundant, but this is the part of our API.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370923929", "createdAt": "2020-01-25T09:32:57Z", "author": {"login": "pbludov"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMjg2MQ==", "bodyText": "As this test is for technical coverage, we need to add comment over it to explain reason.\nIt is ok to have to pure UT for API only if do not use it. In other case it is good question why our tests can not cover such mutation", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370932861", "createdAt": "2020-01-25T13:10:39Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMzk3MQ==", "bodyText": "The whole class DetailAstImplTest is for technical coverage. As many other tests. It's good to add this description to all of them, but it should be a separate issue.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370933971", "createdAt": "2020-01-25T13:37:42Z", "author": {"login": "pbludov"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMzk5MA==", "bodyText": "@romani We had a discussion about this when we created DetailASTImpl (I believe). Some random Check covered a line in the AST. It was some completely random test and it didn't make sense how it was proof the AST API method was shown to be working correctly. Thats when we said we would force API to have their own UTs.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370933990", "createdAt": "2020-01-25T13:38:11Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNDA0OQ==", "bodyText": "this happens because of very limited test execution scope .... we did this for performance reason.\nhttps://github.com/checkstyle/checkstyle/blob/master/pom.xml#L2722\nfrom pitest report:\nreturn getFirstChild() != null;\n1. replaced boolean return with true for com/puppycrawl/tools/checkstyle\n/DetailAstImpl::hasChildren \u2192 NO_COVERAGE\n2. negated conditional \u2192 NO_COVERAGE\n3. removed conditional - replaced equality check with false \u2192 NO_COVERAGE\n4. removed conditional - replaced equality check with true \u2192 NO_COVERAGE\n5. replaced return of integer sized value with (x == 0 ? 1 : 0) \u2192 NO_COVERAGE", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370934049", "createdAt": "2020-01-25T13:39:34Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNDIxNA==", "bodyText": "This test method is using reflection ... it must have comment to explain it (we agreed on this a long time ago). Please also add some sentence that it is required only because to satisfy certain pitest profile .\none day it will change so we will have details on why it is required.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370934214", "createdAt": "2020-01-25T13:43:28Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNDY4MQ==", "bodyText": "This test should not use any reflection. Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/7489#discussion_r370934681", "createdAt": "2020-01-25T13:53:57Z", "author": {"login": "pbludov"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -134,6 +135,22 @@ public void testGetChildCount() throws Exception {\n         assertEquals(firstLevelA, firstLevelB.getPreviousSibling(), \"Invalid previous sibling\");\n     }\n \n+    @Test\n+    public void testHasChildren() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzkxOA=="}, "originalCommit": {"oid": "ac3b962a7a286ad7e201dc1be5ce9954b0717cc6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1520, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}