{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzE3MTI3", "number": 7993, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNTozNTo1NlrODw9V0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNToxM1rOD71AYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjYzMjUxOnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNTozNTo1NlrOGEOCdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxODowMzoxM1rOGEO-Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3NzQ5NQ==", "bodyText": "Code may look better if it was , <a (space between command and tag).", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407077495", "createdAt": "2020-04-11T15:35:56Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                ,<a href=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f77d3c55a200d94e4ce89365f1726b7d8b79ccf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5Mjc0Mw==", "bodyText": "@rnveach Done.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407092743", "createdAt": "2020-04-11T18:03:13Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                ,<a href=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3NzQ5NQ=="}, "originalCommit": {"oid": "8f77d3c55a200d94e4ce89365f1726b7d8b79ccf"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTAyMzU4OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDozMDoxOFrOGE0LLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo0MTo1MlrOGcoDqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ==", "bodyText": "Why did we split href= from the URL?", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407702319", "createdAt": "2020-04-13T20:30:18Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNzc0OQ==", "bodyText": "Otherwise it would have crossed the lin length limit. So instead of breaking the string, I moved the whole string to a new line", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409817749", "createdAt": "2020-04-16T20:06:45Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTExNw==", "bodyText": "Did the CI or tests complain that this must be changed? We have some overrides in checkstyle to allow links to be longer than 100 characters.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424039117", "createdAt": "2020-05-12T21:17:26Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NjkyMQ==", "bodyText": "Yes, checkstyle failed.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424496921", "createdAt": "2020-05-13T14:46:58Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwMTI0OQ==", "bodyText": "@gaurabdg , please recheck this one more time. Line length violations are ignored  on lines where \"http|href\" are present.\nYou just move coma from most right to most left, it does not make big difference for LineLength.\nPlease restore all other lines.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r431901249", "createdAt": "2020-05-28T14:54:15Z", "author": {"login": "romani"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMjQ5Ng==", "bodyText": "It is indeed giving error\n               , <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r432132496", "createdAt": "2020-05-28T21:24:51Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzOTAyNw==", "bodyText": "The http|href exemption is for non_main_files_check", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r432139027", "createdAt": "2020-05-28T21:38:28Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1NzgxNQ==", "bodyText": "hmm, yes it gives violation:\n[WARNING]      [echo] Checkstyle started (checkstyle_checks.xml): 29/05/2020 08:17:18 AM\n[INFO] [checkstyle] Running Checkstyle  on 1150 files\n[ERROR] [checkstyle] [ERROR] /home/rivanov/java/github/romani/checkstyle/src/xdocs/config_annotation.xml:98: Line should not be longer than 100 symbols [RegexpSingleline]\n[WARNING]      [echo] Checkstyle finished (checkstyle_checks.xml) : 29/05/2020 08:17:51 AM\n[WARNING]      [echo] Checkstyle started (checkstyle_non_main_files_checks.xml): 29/05/2020 08:17:18 AM\n[INFO] [checkstyle] Running Checkstyle  on 2128 files\n[WARNING]      [echo] Checkstyle finished (checkstyle_non_main_files_checks.xml): 29/05/2020 08:17:51 AM\n[WARNING]      [echo] Checkstyle started (checkstyle_resources_checks.xml): 29/05/2020 08:17:18 AM\n[INFO] [checkstyle] Running Checkstyle  on 1835 files\n[WARNING]      [echo] Checkstyle finished (checkstyle_resources_checks.xml): 29/05/2020 08:17:51 AM\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n\n\u2718-1 ~/java/github/romani/checkstyle [gaurabdg/cleanup-xdocs L|\u271a 1] \n08:17 $ git diff\ndiff --git a/src/xdocs/config_annotation.xml b/src/xdocs/config_annotation.xml\nindex e879bd1..f656486 100644\n--- a/src/xdocs/config_annotation.xml\n+++ b/src/xdocs/config_annotation.xml\n@@ -95,8 +95,7 @@ public String getNameIfPresent() { ... }\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n                     CLASS_DEF</a>\n-                , <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+                , <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n                     INTERFACE_DEF</a>\n                 , <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n                     PACKAGE_DEF</a>", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r432557815", "createdAt": "2020-05-29T15:19:38Z", "author": {"login": "romani"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2MTAxNA==", "bodyText": "but it is strange ... line with ANNOTATION_FIELD_DEF before fix (of the same block ) is far more than 100, and there is no violation on it.\n@gaurabdg , please investigate.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r432561014", "createdAt": "2020-05-29T15:24:46Z", "author": {"login": "romani"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTYwOQ==", "bodyText": "line with ANNOTATION_FIELD_DEF before fix (of the same block ) is far more than 100, and there is no violation on it.\n\nThe format regex allows to, since there's no comma at the beginning. I'll fix the regex to not throw any error for the new comma placement.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r432669609", "createdAt": "2020-05-29T18:41:52Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -94,45 +94,53 @@ public String getNameIfPresent() { ... }\n               <td>tokens to check</td>\n               <td>subset of tokens\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n-                    CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n-                    INTERFACE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF\">\n-                    PACKAGE_DEF</a>,\n-                <a href=\n-                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n-                    ENUM_CONSTANT_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n-                    ENUM_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n-                    METHOD_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF\">\n-                    CTOR_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n-                    VARIABLE_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n-                    ANNOTATION_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n-                    ANNOTATION_FIELD_DEF</a>.\n+                    CLASS_DEF</a>\n+                , <a href=\n+                    \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMjMxOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA3MzI4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NToyMFrOGE0p_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowOTowN1rOGUZCsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA==", "bodyText": "Please follow other assertions with fileName + \" section '\" + sectionName first.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710204", "createdAt": "2020-04-13T20:45:20Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzUxMg==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833512", "createdAt": "2020-04-16T20:37:45Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNDk5NQ==", "bodyText": "This is not done as nothing changed. Assertion message should start with the file name and section first like the other assertions follow.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424034995", "createdAt": "2020-05-12T21:09:07Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA3NDM1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NTo0MFrOGE0qrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDozNzo1MFrOGG2QWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDM4MA==", "bodyText": "Put single quotes around , and . and write out and so it is clear.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710380", "createdAt": "2020-04-13T20:45:40Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzU2Mw==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833563", "createdAt": "2020-04-16T20:37:50Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDM4MA=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA3NTUxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NjowNVrOGE0rbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMDo0NFrOGUZF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ==", "bodyText": "same x 2.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710575", "createdAt": "2020-04-13T20:46:05Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);\n+        assertEquals(CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n                 fileName + \" section '\" + sectionName + \"' should have all the acceptable tokens\");\n-        assertEquals(\n-                CheckUtil.getTokenText(check.getDefaultTokens(), check.getRequiredTokens()),\n-                columns.get(3).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzY2NA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833664", "createdAt": "2020-04-16T20:37:55Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);\n+        assertEquals(CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n                 fileName + \" section '\" + sectionName + \"' should have all the acceptable tokens\");\n-        assertEquals(\n-                CheckUtil.getTokenText(check.getDefaultTokens(), check.getRequiredTokens()),\n-                columns.get(3).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNTgxOQ==", "bodyText": "Not completely done, see above.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424035819", "createdAt": "2020-05-12T21:10:44Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);\n+        assertEquals(CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n                 fileName + \" section '\" + sectionName + \"' should have all the acceptable tokens\");\n-        assertEquals(\n-                CheckUtil.getTokenText(check.getDefaultTokens(), check.getRequiredTokens()),\n-                columns.get(3).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA3NjQyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NjoyNFrOGE0sFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMTowMlrOGUZGrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA==", "bodyText": "same x2.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710740", "createdAt": "2020-04-13T20:46:24Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzcwNA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833704", "createdAt": "2020-04-16T20:38:01Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjAxMw==", "bodyText": "Not completely done, see above.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424036013", "createdAt": "2020-05-12T21:11:02Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA3Njk1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NjozNlrOGE0sbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo0NzozOFrOGU1RDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ==", "bodyText": "same x2.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710829", "createdAt": "2020-04-13T20:46:36Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);\n+        assertEquals(CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n+                check.getRequiredJavadocTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n+                fileName + \" section '\" + sectionName\n+                        + \"' should have all the acceptable javadoc tokens\");\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzc1NQ==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833755", "createdAt": "2020-04-16T20:38:06Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);\n+        assertEquals(CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n+                check.getRequiredJavadocTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n+                fileName + \" section '\" + sectionName\n+                        + \"' should have all the acceptable javadoc tokens\");\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjEyNA==", "bodyText": "Not completely done, see above.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424036124", "createdAt": "2020-05-12T21:11:15Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);\n+        assertEquals(CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n+                check.getRequiredJavadocTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n+                fileName + \" section '\" + sectionName\n+                        + \"' should have all the acceptable javadoc tokens\");\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NzQyMw==", "bodyText": "Sorry, for missing out, I have resolved them.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424497423", "createdAt": "2020-05-13T14:47:38Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);\n+        assertEquals(CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n+                check.getRequiredJavadocTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n+                fileName + \" section '\" + sectionName\n+                        + \"' should have all the acceptable javadoc tokens\");\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default javadoc token section: \" + sectionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA4NjQzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0OToxMlrOGE0yHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDozODo0OVrOGG2Stg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjI4Nw==", "bodyText": "Why can't we still verify the subset of javadoc tokens text in the assert equals? By splitting the string in this way, that \"subset\" text will not appear in the assertion failure which lets user know it needs to be there.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407712287", "createdAt": "2020-04-13T20:49:12Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDE2Ng==", "bodyText": "Initially I  was having some problem with regex matching. I have made the required changes now.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409834166", "createdAt": "2020-04-16T20:38:49Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjI4Nw=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTA4NzQ3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0OTozMFrOGE0yxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDozODoxN1rOGG2RfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjQ1Mw==", "bodyText": "same.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407712453", "createdAt": "2020-04-13T20:49:30Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzg1Mg==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833852", "createdAt": "2020-04-16T20:38:17Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjQ1Mw=="}, "originalCommit": {"oid": "16ba68dff825aea98555d6b76394179991c3770d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxMDI3OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_javadoc.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNToxM1rOGUZOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo0NzoyMFrOGU1QKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODA3Ng==", "bodyText": "#7993 (comment)\n\nAn UT has been provided to enforce this formatting\nsource:\n#3946 (comment)\nTOKEN1,\nTOKEN2,\nTOKEN3.\nto:\nTOKEN1\n,TOKEN2\n,TOKEN3\n.\n\nUT is not doing what is described in first post of PR or in issue. CI is passing and files are not in new described format.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424038076", "createdAt": "2020-05-12T21:15:13Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_javadoc.xml", "diffHunk": "@@ -64,7 +64,8 @@\n               <td>\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n                   CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+                <a href=\n+                   \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n                   INTERFACE_DEF</a>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "136bbc9d627043f06da64925c323e3192e1dcc39"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MTgxMg==", "bodyText": "This is not a tokens or javadocTokens property, but I believe we are still validating its contents as part of the same test.", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424041812", "createdAt": "2020-05-12T21:23:11Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_javadoc.xml", "diffHunk": "@@ -64,7 +64,8 @@\n               <td>\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n                   CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+                <a href=\n+                   \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n                   INTERFACE_DEF</a>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODA3Ng=="}, "originalCommit": {"oid": "136bbc9d627043f06da64925c323e3192e1dcc39"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NzE5Mg==", "bodyText": "Done, for all such occurences", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424497192", "createdAt": "2020-05-13T14:47:20Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_javadoc.xml", "diffHunk": "@@ -64,7 +64,8 @@\n               <td>\n                 <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n                   CLASS_DEF</a>,\n-                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+                <a href=\n+                   \"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n                   INTERFACE_DEF</a>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODA3Ng=="}, "originalCommit": {"oid": "136bbc9d627043f06da64925c323e3192e1dcc39"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1166, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}