{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTA5Nzk2", "number": 7905, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNjoxNDo0N1rODqK0Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyMjoyMFrODuGJ4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTQzOTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNjoxNDo0N1rOF5wt3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxODo0M1rOF_58IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExMTMyNw==", "bodyText": "Annotation Def is missing as a type. This should be a separate issue as the original code is like this too.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r396111327", "createdAt": "2020-03-22T16:14:47Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {\n+                    // log violation\n+                    final String typeName = currentNode\n+                            .findFirstToken(TokenTypes.IDENT).getText();\n+                    log(currentNode, MSG_KEY, typeName);\n+                }\n+                else {\n+                    // no public type found, skip the first type\n+                    firstTypeSkipped = true;\n+                }\n             }\n+            currentNode = currentNode.getNextSibling();\n         }\n     }\n \n+    /**\n+     * Checks if an AST node is a type definition.\n+     * @param node AST node to check.\n+     * @return true if the node is a type (class, enum, interface) definition.\n+     */\n+    public static boolean isTypeDef(DetailAST node) {\n+        return node.getType() == TokenTypes.CLASS_DEF\n+                || node.getType() == TokenTypes.ENUM_DEF\n+                || node.getType() == TokenTypes.INTERFACE_DEF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97255f5386aa6c9a7a15562bcc9414e42a6356b3"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4Nzg1Nw==", "bodyText": "Opened issue #7957 for this", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r397987857", "createdAt": "2020-03-25T16:21:00Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {\n+                    // log violation\n+                    final String typeName = currentNode\n+                            .findFirstToken(TokenTypes.IDENT).getText();\n+                    log(currentNode, MSG_KEY, typeName);\n+                }\n+                else {\n+                    // no public type found, skip the first type\n+                    firstTypeSkipped = true;\n+                }\n             }\n+            currentNode = currentNode.getNextSibling();\n         }\n     }\n \n+    /**\n+     * Checks if an AST node is a type definition.\n+     * @param node AST node to check.\n+     * @return true if the node is a type (class, enum, interface) definition.\n+     */\n+    public static boolean isTypeDef(DetailAST node) {\n+        return node.getType() == TokenTypes.CLASS_DEF\n+                || node.getType() == TokenTypes.ENUM_DEF\n+                || node.getType() == TokenTypes.INTERFACE_DEF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExMTMyNw=="}, "originalCommit": {"oid": "97255f5386aa6c9a7a15562bcc9414e42a6356b3"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1Mzg4OQ==", "bodyText": "actually, this method can be useful for some other checks and can be moved to some util class", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r402553889", "createdAt": "2020-04-02T19:18:43Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {\n+                    // log violation\n+                    final String typeName = currentNode\n+                            .findFirstToken(TokenTypes.IDENT).getText();\n+                    log(currentNode, MSG_KEY, typeName);\n+                }\n+                else {\n+                    // no public type found, skip the first type\n+                    firstTypeSkipped = true;\n+                }\n             }\n+            currentNode = currentNode.getNextSibling();\n         }\n     }\n \n+    /**\n+     * Checks if an AST node is a type definition.\n+     * @param node AST node to check.\n+     * @return true if the node is a type (class, enum, interface) definition.\n+     */\n+    public static boolean isTypeDef(DetailAST node) {\n+        return node.getType() == TokenTypes.CLASS_DEF\n+                || node.getType() == TokenTypes.ENUM_DEF\n+                || node.getType() == TokenTypes.INTERFACE_DEF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExMTMyNw=="}, "originalCommit": {"oid": "97255f5386aa6c9a7a15562bcc9414e42a6356b3"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUwMzIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTozODo0NlrOF7JO5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMTowNTozMFrOF7z32w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MTU3NQ==", "bodyText": "@romani\n\nChecks that each top-level class, interface or enum resides in a source file of its own.\n\nIf we have 2 public classes in the same file, shouldn't we produce a violation on one of them since there is more than 1 top level class?\n$ cat TestClass.java\npublic class TestClass1 {\n    void method() {\n    }\n}\npublic class TestClass2 {\n    void method() {\n    }\n}\n\n$ cat TestConfig.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n\n    <module name=\"TreeWalker\">\n<module name=\"OneTopLevelClassCheck\" />\n    </module>\n</module>\n\n$ java -jar checkstyle-8.30-all.jar -c TestConfig.xml TestClass.java\nStarting audit...\nAudit done.\n\nShouldn't we expect a violation on line 5?", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r397561575", "createdAt": "2020-03-25T01:38:46Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5NjAzOA==", "bodyText": ">1 public type will give a compile error, but I do agree that the current behavior is counterintuitive.\nIf you want, I can fix it here or open another issue.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r397996038", "createdAt": "2020-03-25T16:31:41Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MTU3NQ=="}, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI2MDE4Nw==", "bodyText": "Sorry, I didn't realize it is not compilable. We can ignore it for now.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r398260187", "createdAt": "2020-03-26T01:05:30Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;\n+                break;\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n     }\n \n     @Override\n     public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n+        DetailAST currentNode = rootAST;\n+        boolean firstTypeSkipped = false;\n+        while (currentNode != null) {\n+            if (isTypeDef(currentNode) && !isPublic(currentNode)) {\n+                if (publicTypeFound || firstTypeSkipped) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MTU3NQ=="}, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUwOTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo0MjoyMlrOF7JSQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozNTozOVrOF8Ew7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MjQzMg==", "bodyText": "Now the code is trimmed down to a bare 2 methods, both look like they pretty much do the same thing. beginTree only checks for a public type and finishTree does the final violations. Other than that they both do the same thing and scan all the siblings connected to the root.\nI question if we should just merge the 2 methods together and remove all the fields, and see if we can do the AST sibling scan only once. What is the benefit now of keeping them in different methods?", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r397562432", "createdAt": "2020-03-25T01:42:22Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4Njk3Mg==", "bodyText": "I've managed to squash everything into one pass, so now there's only one method and no instance fields.\nThe only side effect is that our first type is stored somewhere and we only check if it is a violation at the end of the loop. The UTs aren't affected, so it should be all good. Might do another regression report later.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r398086972", "createdAt": "2020-03-25T18:42:00Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MjQzMg=="}, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI2MTYzMw==", "bodyText": "New regression is required.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r398261633", "createdAt": "2020-03-26T01:10:49Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MjQzMg=="}, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNjk0Mw==", "bodyText": "Updated.\nNew: https://wltan.github.io/checkstyle-reports/2020-03-26/onetoplevel-detailast-regression/diff/\nOld: https://wltan.github.io/checkstyle-reports/2020-03-19/onetoplevel-detailast-regression/diff/", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r398536943", "createdAt": "2020-03-26T12:35:39Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -126,41 +113,49 @@\n     @Override\n     public void beginTree(DetailAST rootAST) {\n         publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n \n         DetailAST currentNode = rootAST;\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n-                if (isPublic(currentNode)) {\n-                    publicTypeFound = true;\n-                }\n-                else {\n-                    final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n-                }\n+            if (isTypeDef(currentNode) && isPublic(currentNode)) {\n+                publicTypeFound = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2MjQzMg=="}, "originalCommit": {"oid": "e3b038efbfd11615dc58559debe685a57429d1cc"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjYwODg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToxOToxNFrOF_59MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjo1MzoyNVrOGAHKyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NDE2MA==", "bodyText": "why public?", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r402554160", "createdAt": "2020-04-02T19:19:14Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -125,42 +106,49 @@\n \n     @Override\n     public void beginTree(DetailAST rootAST) {\n-        publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n-\n         DetailAST currentNode = rootAST;\n+        boolean publicTypeFound = false;\n+        DetailAST firstType = null;\n+\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n+            if (isTypeDef(currentNode)) {\n                 if (isPublic(currentNode)) {\n+                    // log the first type later\n                     publicTypeFound = true;\n                 }\n-                else {\n+                if (firstType == null) {\n+                    // first type is set aside\n+                    firstType = currentNode;\n+                }\n+                else if (!isPublic(currentNode)) {\n+                    // extra non-public type, log immediately\n                     final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n+                        .findFirstToken(TokenTypes.IDENT).getText();\n+                    log(currentNode, MSG_KEY, typeName);\n                 }\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n-    }\n \n-    @Override\n-    public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n-            }\n+        // if there was a public type and first type is non-public, log it\n+        if (publicTypeFound && !isPublic(firstType)) {\n+            final String typeName = firstType\n+                .findFirstToken(TokenTypes.IDENT).getText();\n+            log(firstType, MSG_KEY, typeName);\n         }\n     }\n \n+    /**\n+     * Checks if an AST node is a type definition.\n+     * @param node AST node to check.\n+     * @return true if the node is a type (class, enum, interface) definition.\n+     */\n+    public static boolean isTypeDef(DetailAST node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae3b4b0ec556ec78a11b3b5bea63801a1a1ecaf"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3MDYzNQ==", "bodyText": "Should be private, fixed", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r402770635", "createdAt": "2020-04-03T06:53:25Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -125,42 +106,49 @@\n \n     @Override\n     public void beginTree(DetailAST rootAST) {\n-        publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n-\n         DetailAST currentNode = rootAST;\n+        boolean publicTypeFound = false;\n+        DetailAST firstType = null;\n+\n         while (currentNode != null) {\n-            if (currentNode.getType() == TokenTypes.CLASS_DEF\n-                    || currentNode.getType() == TokenTypes.ENUM_DEF\n-                    || currentNode.getType() == TokenTypes.INTERFACE_DEF) {\n+            if (isTypeDef(currentNode)) {\n                 if (isPublic(currentNode)) {\n+                    // log the first type later\n                     publicTypeFound = true;\n                 }\n-                else {\n+                if (firstType == null) {\n+                    // first type is set aside\n+                    firstType = currentNode;\n+                }\n+                else if (!isPublic(currentNode)) {\n+                    // extra non-public type, log immediately\n                     final String typeName = currentNode\n-                            .findFirstToken(TokenTypes.IDENT).getText();\n-                    lineNumberTypeMap.put(currentNode, typeName);\n+                        .findFirstToken(TokenTypes.IDENT).getText();\n+                    log(currentNode, MSG_KEY, typeName);\n                 }\n             }\n             currentNode = currentNode.getNextSibling();\n         }\n-    }\n \n-    @Override\n-    public void finishTree(DetailAST rootAST) {\n-        if (!lineNumberTypeMap.isEmpty()) {\n-            if (!publicTypeFound) {\n-                // skip first top-level type.\n-                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());\n-            }\n-\n-            for (Map.Entry<DetailAST, String> entry\n-                    : lineNumberTypeMap.entrySet()) {\n-                log(entry.getKey(), MSG_KEY, entry.getValue());\n-            }\n+        // if there was a public type and first type is non-public, log it\n+        if (publicTypeFound && !isPublic(firstType)) {\n+            final String typeName = firstType\n+                .findFirstToken(TokenTypes.IDENT).getText();\n+            log(firstType, MSG_KEY, typeName);\n         }\n     }\n \n+    /**\n+     * Checks if an AST node is a type definition.\n+     * @param node AST node to check.\n+     * @return true if the node is a type (class, enum, interface) definition.\n+     */\n+    public static boolean isTypeDef(DetailAST node) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NDE2MA=="}, "originalCommit": {"oid": "0ae3b4b0ec556ec78a11b3b5bea63801a1a1ecaf"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjYxOTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyMjoyMVrOF_6ECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjo1NzoyOVrOGAHRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NTkxNQ==", "bodyText": "can it be changed to something like\nDetailAST firstType = TokenUtil.findFirstTokenByPredicate(rootAST, this::isTypeDef)\n\n?\nIt will look better as current logic", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r402555915", "createdAt": "2020-04-02T19:22:21Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -125,42 +106,49 @@\n \n     @Override\n     public void beginTree(DetailAST rootAST) {\n-        publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n-\n         DetailAST currentNode = rootAST;\n+        boolean publicTypeFound = false;\n+        DetailAST firstType = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae3b4b0ec556ec78a11b3b5bea63801a1a1ecaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3MjM4MA==", "bodyText": "We are iterating through siblings of rootAST as we are dealing with top-level declarations. findFirstTokenByPredicate will iterate through children of rootAST which is not what we want.\nTrying TokenUtil.findFirstTokenByPredicate(rootAST.getParent(), this::isTypeDef) leads to some null pointer exceptions, presumably due to how rootAST's parent is being handled.", "url": "https://github.com/checkstyle/checkstyle/pull/7905#discussion_r402772380", "createdAt": "2020-04-03T06:57:29Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -125,42 +106,49 @@\n \n     @Override\n     public void beginTree(DetailAST rootAST) {\n-        publicTypeFound = false;\n-        lineNumberTypeMap.clear();\n-\n         DetailAST currentNode = rootAST;\n+        boolean publicTypeFound = false;\n+        DetailAST firstType = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NTkxNQ=="}, "originalCommit": {"oid": "0ae3b4b0ec556ec78a11b3b5bea63801a1a1ecaf"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1234, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}