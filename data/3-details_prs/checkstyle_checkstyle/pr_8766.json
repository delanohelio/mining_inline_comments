{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NjQ4OTYx", "number": 8766, "title": "Issue #8764: Create new check IllegalIdentifierName", "bodyText": "Issue #8764: Create new check IllegalIdentifierName\nDiff Regression projects: https://gist.githubusercontent.com/nmancus1/e3988f8092d919b5cbe70f5359c4d9e8/raw/a0f6f5860f8025c19868061dee6e0e40960b992f/projects-to-test-on.properties\nDiff Regression config: https://gist.githubusercontent.com/nmancus1/a6d651fb8e00bf39244b85c05ac809b8/raw/25957bb9583e66aaa6d4849838ecfae77eac2070/Base.xml\nDiff Regression patch config: https://gist.githubusercontent.com/nmancus1/eb3dfff886148844a5b58523914109e3/raw/a20fbc07b5fd63f33c776fc20a1d2d725e86d735/IllegalIdentifierName.xml\nContribution PR: checkstyle/contribution#503\nLink to site: https://nmancus1.github.io/site_illegalidentifiername/config_naming.html#IllegalIdentifierName", "createdAt": "2020-08-27T11:54:11Z", "url": "https://github.com/checkstyle/checkstyle/pull/8766", "merged": true, "mergeCommit": {"oid": "5da263152de60e8118c40c8242c754109067f200"}, "closed": true, "closedAt": "2020-08-28T18:50:33Z", "author": {"login": "nmancus1"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDA7NkgBqjM2OTk4MDQ2ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDZoBcgFqTQ3Nzk1NDU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b6cb1bdd8aca23333f4379f78836f3f0032d23e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/3b6cb1bdd8aca23333f4379f78836f3f0032d23e", "committedDate": "2020-08-27T05:07:55Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "a44391718af16b4218804dad5034bf4461efa0d3", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a44391718af16b4218804dad5034bf4461efa0d3", "committedDate": "2020-08-27T14:03:17Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a44391718af16b4218804dad5034bf4461efa0d3", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a44391718af16b4218804dad5034bf4461efa0d3", "committedDate": "2020-08-27T14:03:17Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "4028cc2be83a8b3769a1c17452a1852181e5afff", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4028cc2be83a8b3769a1c17452a1852181e5afff", "committedDate": "2020-08-27T19:19:51Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4028cc2be83a8b3769a1c17452a1852181e5afff", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4028cc2be83a8b3769a1c17452a1852181e5afff", "committedDate": "2020-08-27T19:19:51Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "2f13ceacbe2cda9836b8398e7aa9b59272c6c42d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2f13ceacbe2cda9836b8398e7aa9b59272c6c42d", "committedDate": "2020-08-27T19:30:27Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f13ceacbe2cda9836b8398e7aa9b59272c6c42d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2f13ceacbe2cda9836b8398e7aa9b59272c6c42d", "committedDate": "2020-08-27T19:30:27Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6", "committedDate": "2020-08-27T20:22:28Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDU3NTM4", "url": "https://github.com/checkstyle/checkstyle/pull/8766#pullrequestreview-477057538", "createdAt": "2020-08-27T20:29:20Z", "commit": {"oid": "db5bd3d1e0a0cdd5f8c930f09ec4550e92d5d71f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDoyOToyMVrOHIgJKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDoyOToyMVrOHIgJKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NzI4OA==", "bodyText": "This line will not compile past Java 8, so this example is non-compilable (pre-Java 9 restrcited keyword usage, with Java 14 features). I didn't think it was reasonable to create another example just for this, but I don't like to have an example that won't compile either.  Thoughts? Should I just remove it, since I mentioned _ usage in the description?", "url": "https://github.com/checkstyle/checkstyle/pull/8766#discussion_r478677288", "createdAt": "2020-08-27T20:29:21Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.java", "diffHunk": "@@ -0,0 +1,179 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks identifiers for a set of illegal names, such as those that are restricted or contextual\n+ * keywords. Examples include \"yield\", \"record\", \"_\", and \"var\". Please read more at\n+ * <a href=\"https://docs.oracle.com/javase/specs/jls/se14/html/jls-3.html#jls-3.9\">\n+ * Java Language Specification</a> to get to know more about restricted keywords.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers.\n+ * Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"(?i)^(?!(record|yield|var|_)$).+$\"}.\n+ * </li>\n+ * <li>\n+ * Property {@code tokens} - tokens to check\n+ * Type is {@code java.lang.String[]}.\n+ * Validation type is {@code tokenSet}.\n+ * Default value is:\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n+ * CLASS_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+ * INTERFACE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n+ * ENUM_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n+ * ANNOTATION_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n+ * ANNOTATION_FIELD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PARAMETER_DEF\">\n+ * PARAMETER_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n+ * VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n+ * METHOD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n+ * ENUM_CONSTANT_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PATTERN_VARIABLE_DEF\">\n+ * PATTERN_VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF\">\n+ * RECORD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_COMPONENT_DEF\">\n+ * RECORD_COMPONENT_DEF</a>.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"IllegalIdentifierName\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class TestClass {\n+ *     public static void main(String... args) {\n+ *         var var = 4; // violation, \"var\" should not be used as an identifier.\n+ *         int record = 15; // violation, \"record\" should not be used as an identifier.\n+ *         String yield = \"yield\"; // violation, \"yield\" should not be used as an identifier.\n+ *\n+ *         record Record // violation, \"Record\" should not be used as an idenitifier.\n+ *             (Record record) { // violation, \"record\" should not be used as an identifier.\n+ *         }\n+ *\n+ *         String yieldString = \"yieldString\"; // ok, part of another word\n+ *         record MyRecord(){} // ok, part of another word\n+ *         var variable = 2; // ok, part of another word\n+ *         String _; // violation, underscore should not be used as an identifier.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5bd3d1e0a0cdd5f8c930f09ec4550e92d5d71f"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDc1MTE5", "url": "https://github.com/checkstyle/checkstyle/pull/8766#pullrequestreview-477075119", "createdAt": "2020-08-27T20:56:38Z", "commit": {"oid": "4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1NjozOFrOHIg-KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1NjozOFrOHIg-KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5MDg1Nw==", "bodyText": "Please use default", "url": "https://github.com/checkstyle/checkstyle/pull/8766#discussion_r478690857", "createdAt": "2020-08-27T20:56:38Z", "author": {"login": "romani"}, "path": "config/checkstyle_checks.xml", "diffHunk": "@@ -681,6 +681,9 @@\n     </module>\n     <module name=\"TypeName\"/>\n     <module name=\"PatternVariableName\"/>\n+    <module name=\"IllegalIdentifierName\">\n+      <property name=\"format\" value=\"(?i)^(?!(record|yield|var|open|transitive|_)$).+$\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4e3d03d4ae17f5b47d5e02acc646071e1d8d7ce6", "committedDate": "2020-08-27T20:22:28Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "2cdbb560ed3ee3db91bd69ff07857765e0e343ca", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2cdbb560ed3ee3db91bd69ff07857765e0e343ca", "committedDate": "2020-08-27T21:08:17Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTA3MDk5", "url": "https://github.com/checkstyle/checkstyle/pull/8766#pullrequestreview-477107099", "createdAt": "2020-08-27T21:46:55Z", "commit": {"oid": "2cdbb560ed3ee3db91bd69ff07857765e0e343ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cdbb560ed3ee3db91bd69ff07857765e0e343ca", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2cdbb560ed3ee3db91bd69ff07857765e0e343ca", "committedDate": "2020-08-27T21:08:17Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "cb1e15236bb19ec313d5f00c6a99b17a23d000bb", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cb1e15236bb19ec313d5f00c6a99b17a23d000bb", "committedDate": "2020-08-27T23:53:52Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Mjc0NTQ0", "url": "https://github.com/checkstyle/checkstyle/pull/8766#pullrequestreview-477274544", "createdAt": "2020-08-28T06:30:52Z", "commit": {"oid": "cb1e15236bb19ec313d5f00c6a99b17a23d000bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjozMDo1MlrOHIrNag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzozOTozMVrOHItUWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1ODYwMg==", "bodyText": "We can move this test input to the non-compilable path when we start migrating to Java11.", "url": "https://github.com/checkstyle/checkstyle/pull/8766#discussion_r478858602", "createdAt": "2020-08-28T06:30:52Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.java", "diffHunk": "@@ -0,0 +1,179 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks identifiers for a set of illegal names, such as those that are restricted or contextual\n+ * keywords. Examples include \"yield\", \"record\", \"_\", and \"var\". Please read more at\n+ * <a href=\"https://docs.oracle.com/javase/specs/jls/se14/html/jls-3.html#jls-3.9\">\n+ * Java Language Specification</a> to get to know more about restricted keywords.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers.\n+ * Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"(?i)^(?!(record|yield|var|_)$).+$\"}.\n+ * </li>\n+ * <li>\n+ * Property {@code tokens} - tokens to check\n+ * Type is {@code java.lang.String[]}.\n+ * Validation type is {@code tokenSet}.\n+ * Default value is:\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n+ * CLASS_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+ * INTERFACE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n+ * ENUM_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n+ * ANNOTATION_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n+ * ANNOTATION_FIELD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PARAMETER_DEF\">\n+ * PARAMETER_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n+ * VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n+ * METHOD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n+ * ENUM_CONSTANT_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PATTERN_VARIABLE_DEF\">\n+ * PATTERN_VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF\">\n+ * RECORD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_COMPONENT_DEF\">\n+ * RECORD_COMPONENT_DEF</a>.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"IllegalIdentifierName\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class TestClass {\n+ *     public static void main(String... args) {\n+ *         var var = 4; // violation, \"var\" should not be used as an identifier.\n+ *         int record = 15; // violation, \"record\" should not be used as an identifier.\n+ *         String yield = \"yield\"; // violation, \"yield\" should not be used as an identifier.\n+ *\n+ *         record Record // violation, \"Record\" should not be used as an idenitifier.\n+ *             (Record record) { // violation, \"record\" should not be used as an identifier.\n+ *         }\n+ *\n+ *         String yieldString = \"yieldString\"; // ok, part of another word\n+ *         record MyRecord(){} // ok, part of another word\n+ *         var variable = 2; // ok, part of another word\n+ *         String _; // violation, underscore should not be used as an identifier.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NzI4OA=="}, "originalCommit": {"oid": "db5bd3d1e0a0cdd5f8c930f09ec4550e92d5d71f"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5MTI2NQ==", "bodyText": "actually, this check can be much more. For example, prohibit the \"$\" character in identifiers. Or any non-ascii character.\nThis is a generic version of *Name check. By default, it does what you said, but please expand the description.", "url": "https://github.com/checkstyle/checkstyle/pull/8766#discussion_r478891265", "createdAt": "2020-08-28T07:37:08Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.java", "diffHunk": "@@ -0,0 +1,179 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks identifiers for a set of illegal names, such as those that are restricted or contextual", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e15236bb19ec313d5f00c6a99b17a23d000bb"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5MzE0Ng==", "bodyText": "After JEP 360 there will be more keywords in Java: permits, sealed, non-sealed.\nThe last one, non-sealed is not a valid identifier anyway, but permits, sealed should be in the list.", "url": "https://github.com/checkstyle/checkstyle/pull/8766#discussion_r478893146", "createdAt": "2020-08-28T07:39:31Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.java", "diffHunk": "@@ -0,0 +1,179 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks identifiers for a set of illegal names, such as those that are restricted or contextual\n+ * keywords. Examples include \"yield\", \"record\", \"_\", and \"var\". Please read more at\n+ * <a href=\"https://docs.oracle.com/javase/specs/jls/se14/html/jls-3.html#jls-3.9\">\n+ * Java Language Specification</a> to get to know more about restricted keywords.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers.\n+ * Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"(?i)^(?!(record|yield|var|_)$).+$\"}.\n+ * </li>\n+ * <li>\n+ * Property {@code tokens} - tokens to check\n+ * Type is {@code java.lang.String[]}.\n+ * Validation type is {@code tokenSet}.\n+ * Default value is:\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF\">\n+ * CLASS_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF\">\n+ * INTERFACE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF\">\n+ * ENUM_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF\">\n+ * ANNOTATION_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF\">\n+ * ANNOTATION_FIELD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PARAMETER_DEF\">\n+ * PARAMETER_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF\">\n+ * VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF\">\n+ * METHOD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF\">\n+ * ENUM_CONSTANT_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PATTERN_VARIABLE_DEF\">\n+ * PATTERN_VARIABLE_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF\">\n+ * RECORD_DEF</a>,\n+ * <a href=\"https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_COMPONENT_DEF\">\n+ * RECORD_COMPONENT_DEF</a>.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"IllegalIdentifierName\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class TestClass {\n+ *     public static void main(String... args) {\n+ *         var var = 4; // violation, \"var\" should not be used as an identifier.\n+ *         int record = 15; // violation, \"record\" should not be used as an identifier.\n+ *         String yield = \"yield\"; // violation, \"yield\" should not be used as an identifier.\n+ *\n+ *         record Record // violation, \"Record\" should not be used as an identifier.\n+ *             (Record record) { // violation, \"record\" should not be used as an identifier.\n+ *         }\n+ *\n+ *         String yieldString = \"yieldString\"; // ok, part of another word\n+ *         record MyRecord(){} // ok, part of another word\n+ *         var variable = 2; // ok, part of another word\n+ *         String _; // violation, underscore should not be used as an identifier.\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to include \"open\" and \"transitive\" in the set of illegal identifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"IllegalIdentifierName\"&gt;\n+ *     &lt;property name=\"format\" value=\"(?i)^(?!(record|yield|var|open|transitive|_)$).+$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class TestClass {\n+ *     public static void main(String... args) {\n+ *\n+ *         int open = 4; // violation, \"open\" should not be used as an identifier\n+ *         Object transitive = \"transitive\"; // violation, \"transitive\" should not\n+ *                                                // be used as an identifier\n+ *\n+ *         int openInt = 4; // ok, \"open\" is part of another word\n+ *         Object transitiveObject = \"transitiveObject\"; // ok, \"transitive\" is part of another word\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * Parent is {@code com.puppycrawl.tools.checkstyle.TreeWalker}\n+ * </p>\n+ * <p>\n+ * Violation Message Keys:\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * {@code name.invalidPattern}\n+ * </li>\n+ * </ul>\n+ *\n+ * @since 8.36\n+ */\n+@StatelessCheck\n+public class IllegalIdentifierNameCheck extends AbstractNameCheck {\n+\n+    /**\n+     * Creates a new {@code IllegalIdentifierNameCheck} instance.\n+     */\n+    public IllegalIdentifierNameCheck() {\n+        super(\"(?i)^(?!(record|yield|var|_)$).+$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e15236bb19ec313d5f00c6a99b17a23d000bb"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c6f983a7dbe30d686ab6141b83a7b7cc371b585", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2c6f983a7dbe30d686ab6141b83a7b7cc371b585", "committedDate": "2020-08-28T13:07:37Z", "message": "Issue #8764: Create new check IllegalIdentifierName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a02fb609b5317c1bfe2a67944d8117d9f8a97a3", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0a02fb609b5317c1bfe2a67944d8117d9f8a97a3", "committedDate": "2020-08-28T13:07:37Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb1e15236bb19ec313d5f00c6a99b17a23d000bb", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cb1e15236bb19ec313d5f00c6a99b17a23d000bb", "committedDate": "2020-08-27T23:53:52Z", "message": "minor: practice what you preach(#8764)"}, "afterCommit": {"oid": "0a02fb609b5317c1bfe2a67944d8117d9f8a97a3", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0a02fb609b5317c1bfe2a67944d8117d9f8a97a3", "committedDate": "2020-08-28T13:07:37Z", "message": "minor: practice what you preach(#8764)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTU0NTk3", "url": "https://github.com/checkstyle/checkstyle/pull/8766#pullrequestreview-477954597", "createdAt": "2020-08-28T18:50:21Z", "commit": {"oid": "0a02fb609b5317c1bfe2a67944d8117d9f8a97a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1065, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}