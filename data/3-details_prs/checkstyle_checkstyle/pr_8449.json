{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTg0MTk3", "number": 8449, "title": "Issue #6615: Add support for Java 14 switch and yield", "bodyText": "Issue #6615: Add support for Java 14 switch and yield\nThis PR will introduce support for Java 14 switch expressions, and yield statements.\n\nRelevant JLS grammar for switch expressions:\nUnaryExpression:\nPreIncrementExpression\nPreDecrementExpression\n+ UnaryExpression\n- UnaryExpression\nUnaryExpressionNotPlusMinus\nPreIncrementExpression:\n++ UnaryExpression\nPreDecrementExpression:\n-- UnaryExpression\nUnaryExpressionNotPlusMinus:\nPostfixExpression\n~ UnaryExpression\n! UnaryExpression\nCastExpression\nSwitchExpression\nSwitchExpression:\nswitch ( Expression ) SwitchBlock\nSwitchBlock:\n{ SwitchLabeledRule {SwitchLabeledRule} }\n{ {SwitchLabeledStatementGroup} {SwitchLabel :} }\nSwitchLabeledRule:\nSwitchLabeledExpression\nSwitchLabeledBlock\nSwitchLabeledThrowStatement\nSwitchLabeledExpression:\nSwitchLabel -> Expression ;\nSwitchLabeledBlock:\nSwitchLabel -> Block\nSwitchLabeledThrowStatement:\nSwitchLabel -> ThrowStatement\nSwitchLabel:\ncase CaseConstant {, CaseConstant}\ndefault\nCaseConstant:\nConditionalExpression\nSwitchLabeledStatementGroup:\nSwitchLabel : {SwitchLabel :} BlockStatements\n\nRelevant grammar for yield statements:\nYieldStatement:\nyield Expression ;\n\nI have introduced the new token, SWITCH_RULE,  for the following reasons:\n\n\nFrom JLS: When a selector expression matches a switch label for a switch labeled rule, the labeled expression or statement is executed and nothing else.\nThis means that there is no reason to check for fall-through, as in the case of switch case groups.  In checks, we can simply conclude that we are in a switch rule, and know that there will be definite assignment and no fall through.\n\n\nThe java grammar differentiates between the two, so we should also.\nThe body of both a switch statement and a switch expression (15.28) is known as a switch block. This block can consist of either:\nSwitch labeled rules, which use -> to introduce either a switch labeled expression, switch labeled block, or a switch labeled throw statement; or\nSwitch labeled statement groups, which use : to introduce switch labeled block statements.", "createdAt": "2020-07-14T16:24:09Z", "url": "https://github.com/checkstyle/checkstyle/pull/8449", "merged": true, "mergeCommit": {"oid": "5ca67a2a2f4bf984490f0089d97b56df261fae5f"}, "closed": true, "closedAt": "2020-08-11T22:18:53Z", "author": {"login": "nmancus1"}, "timelineItems": {"totalCount": 62, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc07kw9ABqjM1NDU2ODc1NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc94enNgFqTQ2NTE3NzI1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9446d5e1a423b64a866b77de7d16d9fe653a259e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9446d5e1a423b64a866b77de7d16d9fe653a259e", "committedDate": "2020-07-14T15:58:40Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "78c7001c46640f9ae51d87de9f44a213ba195e72", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/78c7001c46640f9ae51d87de9f44a213ba195e72", "committedDate": "2020-07-14T19:54:16Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78c7001c46640f9ae51d87de9f44a213ba195e72", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/78c7001c46640f9ae51d87de9f44a213ba195e72", "committedDate": "2020-07-14T19:54:16Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "ad4a24e3c0e563e4f53e00c4e8e43c1b552e5610", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ad4a24e3c0e563e4f53e00c4e8e43c1b552e5610", "committedDate": "2020-07-16T21:52:14Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad4a24e3c0e563e4f53e00c4e8e43c1b552e5610", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ad4a24e3c0e563e4f53e00c4e8e43c1b552e5610", "committedDate": "2020-07-16T21:52:14Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "f4440a0eeb03d979bce5a2310f66d62deab56d55", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f4440a0eeb03d979bce5a2310f66d62deab56d55", "committedDate": "2020-07-17T00:16:05Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4440a0eeb03d979bce5a2310f66d62deab56d55", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f4440a0eeb03d979bce5a2310f66d62deab56d55", "committedDate": "2020-07-17T00:16:05Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "78da64cc6951c2b615e9d995d20cdccfe519dd36", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/78da64cc6951c2b615e9d995d20cdccfe519dd36", "committedDate": "2020-07-17T00:29:29Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78da64cc6951c2b615e9d995d20cdccfe519dd36", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/78da64cc6951c2b615e9d995d20cdccfe519dd36", "committedDate": "2020-07-17T00:29:29Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "20a6016687b37ad53ce0fa8aca891293b1b786f6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/20a6016687b37ad53ce0fa8aca891293b1b786f6", "committedDate": "2020-07-17T02:57:42Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20a6016687b37ad53ce0fa8aca891293b1b786f6", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/20a6016687b37ad53ce0fa8aca891293b1b786f6", "committedDate": "2020-07-17T02:57:42Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "96c9237375e0338cf62c09eea9955b1b07a2ec7c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/96c9237375e0338cf62c09eea9955b1b07a2ec7c", "committedDate": "2020-07-17T03:07:49Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96c9237375e0338cf62c09eea9955b1b07a2ec7c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/96c9237375e0338cf62c09eea9955b1b07a2ec7c", "committedDate": "2020-07-17T03:07:49Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "1257317baf2c7041609e6331db3e4d6acc8d8dec", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1257317baf2c7041609e6331db3e4d6acc8d8dec", "committedDate": "2020-07-17T05:57:15Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzc2MzEw", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-450376310", "createdAt": "2020-07-17T05:11:39Z", "commit": {"oid": "96c9237375e0338cf62c09eea9955b1b07a2ec7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNToxMTo0MFrOGzFj0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNToxMTo0MFrOGzFj0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMTY1MQ==", "bodyText": "I need to delete this, but will it mess up CI since both commits are on here?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r456221651", "createdAt": "2020-07-17T05:11:40Z", "author": {"login": "nmancus1"}, "path": "config/ant-phase-verify.xml", "diffHunk": "@@ -157,6 +159,9 @@\n          <exclude name=\"**/InputJava14Records.java\"/>\n          <!-- until https://github.com/checkstyle/checkstyle/issues/7103 -->\n          <exclude name=\"**/InputJava14TextBlocks.java\"/>\n+         <!-- until https://github.com/checkstyle/checkstyle/issues/6615 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c9237375e0338cf62c09eea9955b1b07a2ec7c"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1257317baf2c7041609e6331db3e4d6acc8d8dec", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1257317baf2c7041609e6331db3e4d6acc8d8dec", "committedDate": "2020-07-17T05:57:15Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "ff0eec24145d655ea414691b12ccf0d8d0291243", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ff0eec24145d655ea414691b12ccf0d8d0291243", "committedDate": "2020-07-17T11:26:15Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff0eec24145d655ea414691b12ccf0d8d0291243", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ff0eec24145d655ea414691b12ccf0d8d0291243", "committedDate": "2020-07-17T11:26:15Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "0a2b26cfc20040745b2d221a5b801e5f210d47fc", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0a2b26cfc20040745b2d221a5b801e5f210d47fc", "committedDate": "2020-07-17T13:53:41Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a2b26cfc20040745b2d221a5b801e5f210d47fc", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0a2b26cfc20040745b2d221a5b801e5f210d47fc", "committedDate": "2020-07-17T13:53:41Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "08f32ec600614f547bd18386cb37b74f9c8976eb", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/08f32ec600614f547bd18386cb37b74f9c8976eb", "committedDate": "2020-07-17T19:58:57Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08f32ec600614f547bd18386cb37b74f9c8976eb", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/08f32ec600614f547bd18386cb37b74f9c8976eb", "committedDate": "2020-07-17T19:58:57Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "0f0f626bc8c515cc23ef32b01b9fa614d9a06665", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f0f626bc8c515cc23ef32b01b9fa614d9a06665", "committedDate": "2020-07-18T03:12:22Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f0f626bc8c515cc23ef32b01b9fa614d9a06665", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f0f626bc8c515cc23ef32b01b9fa614d9a06665", "committedDate": "2020-07-18T03:12:22Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "0f07d12491d3dc321109f1f199a64a330abfc668", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f07d12491d3dc321109f1f199a64a330abfc668", "committedDate": "2020-07-25T17:27:13Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f07d12491d3dc321109f1f199a64a330abfc668", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0f07d12491d3dc321109f1f199a64a330abfc668", "committedDate": "2020-07-25T17:27:13Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "5e4d6b5a1be4cdf06b7d5b61f3dad42c05312f2f", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5e4d6b5a1be4cdf06b7d5b61f3dad42c05312f2f", "committedDate": "2020-07-25T20:45:55Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e4d6b5a1be4cdf06b7d5b61f3dad42c05312f2f", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5e4d6b5a1be4cdf06b7d5b61f3dad42c05312f2f", "committedDate": "2020-07-25T20:45:55Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "8ccdf557954dff85f0a106d91e00069f099ef6c1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8ccdf557954dff85f0a106d91e00069f099ef6c1", "committedDate": "2020-07-26T01:17:43Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ccdf557954dff85f0a106d91e00069f099ef6c1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8ccdf557954dff85f0a106d91e00069f099ef6c1", "committedDate": "2020-07-26T01:17:43Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1", "committedDate": "2020-07-26T12:48:01Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzYyNjc4", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-455362678", "createdAt": "2020-07-26T13:03:56Z", "commit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzowMzo1NlrOG3MPVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzowNzoxN1rOG3MQsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyNTM5OA==", "bodyText": "Should we re-use CASE_GROUP, as I've done here, or make a new token? Something like SWITCH_RULE?  Reusing CASE_GROUP will make check updates simpler, but would anything be gained by creating a new token?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r460525398", "createdAt": "2020-07-26T13:03:56Z", "author": {"login": "nmancus1"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1244,6 +1268,36 @@ caseSList\n         {#caseSList = #(#[SLIST,\"SLIST\"],#caseSList);}\n     ;\n \n+switchRule\n+    :   (       (switchLabeledExpr)=>     se:switchLabeledExpr\n+        |       (switchLabeledBlk)=>      sb:switchLabeledBlk\n+        |       (switchLabeledThrow)=>    st:switchLabeledThrow\n+        )\n+        {## = #(#[CASE_GROUP, \"CASE_GROUP\"], se, sb, st);}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyNTc0NQ==", "bodyText": "Not directly related  to this line, but what should we do in the way of updating the switch statement TokenTypes.java documentation?  Have two different examples (one with case group, one with switch rules), then include a yield in each?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r460525745", "createdAt": "2020-07-26T13:07:17Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3596,6 +3597,20 @@\n     public static final int RECORD_DEF =\n             GeneratedJavaTokenTypes.RECORD_DEF;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1", "committedDate": "2020-07-26T12:48:01Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "6bbd01f2511188088a860f9620185835d09e7a09", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6bbd01f2511188088a860f9620185835d09e7a09", "committedDate": "2020-07-27T13:02:26Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6bbd01f2511188088a860f9620185835d09e7a09", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6bbd01f2511188088a860f9620185835d09e7a09", "committedDate": "2020-07-27T13:02:26Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "f9850b0e2356c7b3cf6947acd406422c74a75a59", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f9850b0e2356c7b3cf6947acd406422c74a75a59", "committedDate": "2020-07-28T12:25:25Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2ODcwMDIz", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-456870023", "createdAt": "2020-07-28T17:49:16Z", "commit": {"oid": "f9850b0e2356c7b3cf6947acd406422c74a75a59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo0OToxNlrOG4XyNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo0OToxNlrOG4XyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MzEyNA==", "bodyText": "This is a good question. I see at least a problem with FallThrough check. The Java 14 switch expression cases may not contain a break, so almost all of them will be reported by this check. And it seems that writing the utility method isItCaseGroupYouAreLookingFor will be difficult. By adding a new token instead of case group this problem goes away. Another one appears - in some cases,case_group will be skipped, but it will be easier to fix, usually by simply adding one logical or.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r461763124", "createdAt": "2020-07-28T17:49:16Z", "author": {"login": "pbludov"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1244,6 +1268,36 @@ caseSList\n         {#caseSList = #(#[SLIST,\"SLIST\"],#caseSList);}\n     ;\n \n+switchRule\n+    :   (       (switchLabeledExpr)=>     se:switchLabeledExpr\n+        |       (switchLabeledBlk)=>      sb:switchLabeledBlk\n+        |       (switchLabeledThrow)=>    st:switchLabeledThrow\n+        )\n+        {## = #(#[CASE_GROUP, \"CASE_GROUP\"], se, sb, st);}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyNTM5OA=="}, "originalCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjE3OTIx", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-457217921", "createdAt": "2020-07-29T06:05:31Z", "commit": {"oid": "f9850b0e2356c7b3cf6947acd406422c74a75a59"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjowNTozMVrOG4p0Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjowNzoyM1rOG4p2gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1ODUzMA==", "bodyText": "Would a name like \"switchBlockDepth\" make sense here?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r462058530", "createdAt": "2020-07-29T06:05:31Z", "author": {"login": "esilkensen"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -207,6 +208,15 @@ tokens {\n     {\n         return ((currentLtLevel != 0) || ltCounter == currentLtLevel);\n     }\n+\n+    /**\n+    * This int value tracks the depth of a switch expression. Along with the\n+    * IDENT to id rule at the end of the parser, this value helps us\n+    * to know if the \"yield\" we are parsing is an IDENT, method call, class,\n+    * field, etc. or if it is a java 13+ yield statement. Positive values\n+    * indicate that we are within a (possibly nested) switch expression.\n+    */\n+    private int switchRuleOrStatementDepth = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9850b0e2356c7b3cf6947acd406422c74a75a59"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1OTEzNg==", "bodyText": "Good callout @nmancus1, what you said makes sense to me @pbludov", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r462059136", "createdAt": "2020-07-29T06:07:23Z", "author": {"login": "esilkensen"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1244,6 +1268,36 @@ caseSList\n         {#caseSList = #(#[SLIST,\"SLIST\"],#caseSList);}\n     ;\n \n+switchRule\n+    :   (       (switchLabeledExpr)=>     se:switchLabeledExpr\n+        |       (switchLabeledBlk)=>      sb:switchLabeledBlk\n+        |       (switchLabeledThrow)=>    st:switchLabeledThrow\n+        )\n+        {## = #(#[CASE_GROUP, \"CASE_GROUP\"], se, sb, st);}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyNTM5OA=="}, "originalCommit": {"oid": "030137a6f17d49c9d8bfa7e7c6dcfdafdca292c1"}, "originalPosition": 100}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9850b0e2356c7b3cf6947acd406422c74a75a59", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f9850b0e2356c7b3cf6947acd406422c74a75a59", "committedDate": "2020-07-28T12:25:25Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "167ae0134db45a55a5beeec5d005e7af988b0a03", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/167ae0134db45a55a5beeec5d005e7af988b0a03", "committedDate": "2020-08-04T05:02:18Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTA0NTQ0", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-460504544", "createdAt": "2020-08-04T05:25:56Z", "commit": {"oid": "167ae0134db45a55a5beeec5d005e7af988b0a03"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "167ae0134db45a55a5beeec5d005e7af988b0a03", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/167ae0134db45a55a5beeec5d005e7af988b0a03", "committedDate": "2020-08-04T05:02:18Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "37b308042576b610f9c674dde9668e66b46a548e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/37b308042576b610f9c674dde9668e66b46a548e", "committedDate": "2020-08-04T12:40:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37b308042576b610f9c674dde9668e66b46a548e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/37b308042576b610f9c674dde9668e66b46a548e", "committedDate": "2020-08-04T12:40:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/913b06da7f4a93d4e81d322ac6ca644a4b7ff76d", "committedDate": "2020-08-04T12:48:33Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNDE4MTA2", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-461418106", "createdAt": "2020-08-05T07:45:04Z", "commit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzo0NTowNVrOG7-GVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODowMjoyNFrOG7-swQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzNjU5Ng==", "bodyText": "extra space after {", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r465536596", "createdAt": "2020-08-05T07:45:05Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,77 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * switch (day) {\n+     *     case SAT, SUN -> \"Weekend\";\n+     *     default -> \"Working day\";\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * LITERAL_SWITCH (switch)\n+     * |--LPAREN (()\n+     * |--EXPR\n+     * |   `--IDENT (day)\n+     * |--RPAREN ())\n+     * |--LCURLY ({ )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzOTQ2Ng==", "bodyText": "RCURLY ->(})  should be just RCURLY (})", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r465539466", "createdAt": "2020-08-05T07:50:13Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,77 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * switch (day) {\n+     *     case SAT, SUN -> \"Weekend\";\n+     *     default -> \"Working day\";\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * LITERAL_SWITCH (switch)\n+     * |--LPAREN (()\n+     * |--EXPR\n+     * |   `--IDENT (day)\n+     * |--RPAREN ())\n+     * |--LCURLY ({ )\n+     * |--SWITCH_RULE\n+     * |   |--LITERAL_CASE (case)\n+     * |   |   |--EXPR\n+     * |   |   |   `--IDENT (SAT)\n+     * |   |   |--COMMA (,)\n+     * |   |   `--EXPR\n+     * |   |       `--IDENT (SUN)\n+     * |   |--LAMBDA ({@code ->})\n+     * |   |--EXPR\n+     * |   |   `--STRING_LITERAL (\"Weekend\" )\n+     * |   `--SEMI (;)\n+     * |--SWITCH_RULE\n+     * |   |--LITERAL_DEFAULT (default)\n+     * |   |--LAMBDA {@code ->})\n+     * |   |--EXPR\n+     * |   |   `--STRING_LITERAL (\"Working day\")\n+     * |   `--SEMI (;)\n+     * `--RCURLY ->(})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MDE5OA==", "bodyText": "extra space after \"Weekend\"", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r465540198", "createdAt": "2020-08-05T07:51:34Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,77 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * switch (day) {\n+     *     case SAT, SUN -> \"Weekend\";\n+     *     default -> \"Working day\";\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * LITERAL_SWITCH (switch)\n+     * |--LPAREN (()\n+     * |--EXPR\n+     * |   `--IDENT (day)\n+     * |--RPAREN ())\n+     * |--LCURLY ({ )\n+     * |--SWITCH_RULE\n+     * |   |--LITERAL_CASE (case)\n+     * |   |   |--EXPR\n+     * |   |   |   `--IDENT (SAT)\n+     * |   |   |--COMMA (,)\n+     * |   |   `--EXPR\n+     * |   |       `--IDENT (SUN)\n+     * |   |--LAMBDA ({@code ->})\n+     * |   |--EXPR\n+     * |   |   `--STRING_LITERAL (\"Weekend\" )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NDA0MQ==", "bodyText": "Why not switchLabeledExpression and switchLabeledBlock ?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r465544041", "createdAt": "2020-08-05T07:58:24Z", "author": {"login": "pbludov"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1250,6 +1274,36 @@ caseSList\n         {#caseSList = #(#[SLIST,\"SLIST\"],#caseSList);}\n     ;\n \n+switchRule\n+    :   (       (switchLabeledExpr)=>     se:switchLabeledExpr\n+        |       (switchLabeledBlk)=>      sb:switchLabeledBlk", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NjQzMw==", "bodyText": "missing (", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r465546433", "createdAt": "2020-08-05T08:02:24Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,77 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * switch (day) {\n+     *     case SAT, SUN -> \"Weekend\";\n+     *     default -> \"Working day\";\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * LITERAL_SWITCH (switch)\n+     * |--LPAREN (()\n+     * |--EXPR\n+     * |   `--IDENT (day)\n+     * |--RPAREN ())\n+     * |--LCURLY ({ )\n+     * |--SWITCH_RULE\n+     * |   |--LITERAL_CASE (case)\n+     * |   |   |--EXPR\n+     * |   |   |   `--IDENT (SAT)\n+     * |   |   |--COMMA (,)\n+     * |   |   `--EXPR\n+     * |   |       `--IDENT (SUN)\n+     * |   |--LAMBDA ({@code ->})\n+     * |   |--EXPR\n+     * |   |   `--STRING_LITERAL (\"Weekend\" )\n+     * |   `--SEMI (;)\n+     * |--SWITCH_RULE\n+     * |   |--LITERAL_DEFAULT (default)\n+     * |   |--LAMBDA {@code ->})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d"}, "originalPosition": 79}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "913b06da7f4a93d4e81d322ac6ca644a4b7ff76d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/913b06da7f4a93d4e81d322ac6ca644a4b7ff76d", "committedDate": "2020-08-04T12:48:33Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "700f7119f3d844ff7791e7b54c5d7cc3036b935a", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/700f7119f3d844ff7791e7b54c5d7cc3036b935a", "committedDate": "2020-08-05T10:54:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTc0NjIy", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-461574622", "createdAt": "2020-08-05T11:26:02Z", "commit": {"oid": "700f7119f3d844ff7791e7b54c5d7cc3036b935a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "700f7119f3d844ff7791e7b54c5d7cc3036b935a", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/700f7119f3d844ff7791e7b54c5d7cc3036b935a", "committedDate": "2020-08-05T10:54:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "b63e17aa726cf310c890c5a95ecf47e9bbe95077", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b63e17aa726cf310c890c5a95ecf47e9bbe95077", "committedDate": "2020-08-06T16:38:57Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b63e17aa726cf310c890c5a95ecf47e9bbe95077", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b63e17aa726cf310c890c5a95ecf47e9bbe95077", "committedDate": "2020-08-06T16:38:57Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "b2fc09c17d95d73fe89c6e04759de00b67c61e37", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b2fc09c17d95d73fe89c6e04759de00b67c61e37", "committedDate": "2020-08-06T16:40:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2fc09c17d95d73fe89c6e04759de00b67c61e37", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/b2fc09c17d95d73fe89c6e04759de00b67c61e37", "committedDate": "2020-08-06T16:40:23Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0743a683653640eb7c9dc30b813f40f0aef15814", "committedDate": "2020-08-07T02:07:58Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzQ4ODE5", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463348819", "createdAt": "2020-08-07T14:16:14Z", "commit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDoxNjoxNFrOG9bnFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDoyMjo0N1rOG9b2iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA2ODY5NA==", "bodyText": "please move them both to new line, we try to keep  them groupped only if related.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467068694", "createdAt": "2020-08-07T14:16:14Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -121,7 +121,7 @@ tokens {\n     PATTERN_VARIABLE_DEF; RECORD_DEF; LITERAL_record=\"record\";\n     RECORD_COMPONENTS; RECORD_COMPONENT_DEF; COMPACT_CTOR_DEF;\n     TEXT_BLOCK_LITERAL_BEGIN; TEXT_BLOCK_CONTENT;\n-    TEXT_BLOCK_LITERAL_END;\n+    TEXT_BLOCK_LITERAL_END; LITERAL_yield=\"yield\"; SWITCH_RULE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3MTYxMA==", "bodyText": "how this method code is related to switch ?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467071610", "createdAt": "2020-08-07T14:21:00Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.java", "diffHunk": "@@ -1,12 +1,45 @@\n //non-compiled with javac: Compilable with Java14\n-package com.puppycrawl.tools.checkstyle.grammar;\n+package com.puppycrawl.tools.checkstyle.grammar.java14;\n \n+import static java.time.Instant.*;\n+\n+import java.time.Instant;\n+import java.util.Arrays;\n import java.util.EnumSet;\n import java.util.Set;\n+import java.util.function.IntConsumer;\n import java.util.function.Supplier;\n \n public class InputJava14SwitchExpression {\n \n+    static class HardToParse {\n+        void foo() {\n+            Instant Ascii;\n+            byte[] decodabet = new byte[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3MjY0OQ==", "bodyText": "place them both to new line.\nIt make sense to put .collect( to new line probably to reduce diff next time.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467072649", "createdAt": "2020-08-07T14:22:47Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java", "diffHunk": "@@ -133,7 +133,7 @@\n                         \"PATTERN_VARIABLE_DEF\", \"RECORD_DEF\", \"LITERAL_RECORD\",\n                         \"RECORD_COMPONENTS\", \"RECORD_COMPONENT_DEF\", \"COMPACT_CTOR_DEF\",\n                         \"TEXT_BLOCK_LITERAL_BEGIN\", \"TEXT_BLOCK_CONTENT\",\n-                        \"TEXT_BLOCK_LITERAL_END\").collect(\n+                        \"TEXT_BLOCK_LITERAL_END\", \"LITERAL_YIELD\", \"SWITCH_RULE\").collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0743a683653640eb7c9dc30b813f40f0aef15814", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0743a683653640eb7c9dc30b813f40f0aef15814", "committedDate": "2020-08-07T02:07:58Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "64c3164ddad1992076694af5bf271d8a37471b79", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/64c3164ddad1992076694af5bf271d8a37471b79", "committedDate": "2020-08-07T14:49:14Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64c3164ddad1992076694af5bf271d8a37471b79", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/64c3164ddad1992076694af5bf271d8a37471b79", "committedDate": "2020-08-07T14:49:14Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "de6be1b5ac35c7d8e49c0b80c66c107aa90f1828", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/de6be1b5ac35c7d8e49c0b80c66c107aa90f1828", "committedDate": "2020-08-08T11:22:31Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de6be1b5ac35c7d8e49c0b80c66c107aa90f1828", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/de6be1b5ac35c7d8e49c0b80c66c107aa90f1828", "committedDate": "2020-08-08T11:22:31Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "4c12c0d3d76ba4da26312a46051669f1e93c20f4", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4c12c0d3d76ba4da26312a46051669f1e93c20f4", "committedDate": "2020-08-08T14:34:34Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA2OTE3", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463806917", "createdAt": "2020-08-08T14:40:12Z", "commit": {"oid": "de6be1b5ac35c7d8e49c0b80c66c107aa90f1828"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNDo0MDoxMlrOG90LVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNDo0MDoxMlrOG90LVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3MTE4OQ==", "bodyText": "return switch (day) {\nto make it clear that it is expression like switch, not a regular switch.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467471189", "createdAt": "2020-08-08T14:40:12Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,77 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * switch (day) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6be1b5ac35c7d8e49c0b80c66c107aa90f1828"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c12c0d3d76ba4da26312a46051669f1e93c20f4", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4c12c0d3d76ba4da26312a46051669f1e93c20f4", "committedDate": "2020-08-08T14:34:34Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/47a459c79ec3db8c7307a99caaf8def933e92928", "committedDate": "2020-08-08T14:54:02Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA4MjUz", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463808253", "createdAt": "2020-08-08T15:04:11Z", "commit": {"oid": "4c12c0d3d76ba4da26312a46051669f1e93c20f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTowNzo0NlrOG90Unw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTowOToxOFrOG90VaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3MzU2Nw==", "bodyText": "please move this update to separate commit as minor refactoring before functional update.\nThere will be 3 commits in this PR.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467473567", "createdAt": "2020-08-08T15:07:46Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1166,16 +1181,11 @@ traditionalStatement\n         // Return an expression\n         |    \"return\"^ (expression)? SEMI\n \n-        // switch/case statement\n-        |    \"switch\"^ LPAREN expression RPAREN LCURLY\n-                ( casesGroup )*\n-            RCURLY\n-\n         // exception try-catch block\n         |    tryBlock\n \n         // throw an exception\n-        |    \"throw\"^ expression SEMI\n+        |    throwStatement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3MzY2Nw==", "bodyText": "if movement to line 1139 was not done on good reason, please do this update in separate commit.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467473667", "createdAt": "2020-08-08T15:08:37Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1166,16 +1181,11 @@ traditionalStatement\n         // Return an expression\n         |    \"return\"^ (expression)? SEMI\n \n-        // switch/case statement\n-        |    \"switch\"^ LPAREN expression RPAREN LCURLY\n-                ( casesGroup )*\n-            RCURLY\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3Mzc2OA==", "bodyText": "as we do this game of vertical code alignment:\n    :   (       (switchLabeledExpression)=>  se:switchLabeledExpression\n        |       (switchLabeledBlock)=>       sb:switchLabeledBlock\n        |       (switchLabeledThrow)=>       st:switchLabeledThrow", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467473768", "createdAt": "2020-08-08T15:09:18Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1250,6 +1274,36 @@ caseSList\n         {#caseSList = #(#[SLIST,\"SLIST\"],#caseSList);}\n     ;\n \n+switchRule\n+    :   (       (switchLabeledExpression)=>     se:switchLabeledExpression\n+        |       (switchLabeledBlock)=>      sb:switchLabeledBlock\n+        |       (switchLabeledThrow)=>    st:switchLabeledThrow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA5NDM5", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463809439", "createdAt": "2020-08-08T15:25:05Z", "commit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToyNTowNVrOG90a3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToyNTowNVrOG90a3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3NTE2Ng==", "bodyText": "we need AST example to show context of usage.\nas yield is very specific \"keyword\" that is activated in switch only, in comparison to other keywords that do not allow to create any identifier with same name.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467475166", "createdAt": "2020-08-08T15:25:05Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,80 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODEwNzY4", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463810768", "createdAt": "2020-08-08T15:48:19Z", "commit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTo0ODoxOVrOG90jqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTo0ODoxOVrOG90jqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3NzQxOQ==", "bodyText": "wording is very strange.\nIt looks like brief of grammar. I doubt user need it, we never did this for other tokens.\nCan we simply do ?\nSwitch Expressions as content.\nall details on what is possible should be read in java specification(that might change in future), this file is not good place for this.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467477419", "createdAt": "2020-08-08T15:48:19Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,80 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * A switch labeled rule has a switch label and either an expression,\n+     * block, or throw statement. A switch labeled statement group has one\n+     * or more switch labels and zero or more block statements. A switch label\n+     * is either a case or default label.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47a459c79ec3db8c7307a99caaf8def933e92928", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/47a459c79ec3db8c7307a99caaf8def933e92928", "committedDate": "2020-08-08T14:54:02Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9", "committedDate": "2020-08-08T17:12:39Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODI5MTI2", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463829126", "createdAt": "2020-08-08T21:54:15Z", "commit": {"oid": "cecf6420827c11edc0cc8d299c192f4e12abe652"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMTo1NDoxNVrOG92awg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMTo1NDoxNVrOG92awg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNzkwNg==", "bodyText": "it should be\n\"switch\"^ LPAREN expression RPAREN LCURLY\n                ( casesGroup )*\n            RCURLY\n\nas this commit do no functional changes. Each commit should be compilable and pass build.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467507906", "createdAt": "2020-08-08T21:54:15Z", "author": {"login": "romani"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1537,6 +1539,10 @@ castExpression\n         )\n     ;\n \n+ switchExpression\n+    :   \"switch\"^ LPAREN expression RPAREN switchBlock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cecf6420827c11edc0cc8d299c192f4e12abe652"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODI5MzAy", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463829302", "createdAt": "2020-08-08T21:58:29Z", "commit": {"oid": "5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMTo1ODozMFrOG92cAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMTo1ODozMFrOG92cAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwODIyNg==", "bodyText": "int yield = 0;\nreturn switch (mode) {\n\nto show that yield is not literal/keyword out of switch.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467508226", "createdAt": "2020-08-08T21:58:30Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,123 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * return switch (mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5cf655aee255d5a7d4885dee1616e2c3b6d8c3b9", "committedDate": "2020-08-08T17:12:39Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "5541fc10fb6257b000c48f7e926b7973feeddbfc", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5541fc10fb6257b000c48f7e926b7973feeddbfc", "committedDate": "2020-08-09T02:59:37Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5541fc10fb6257b000c48f7e926b7973feeddbfc", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5541fc10fb6257b000c48f7e926b7973feeddbfc", "committedDate": "2020-08-09T02:59:37Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "9f0f94963f2a18a1ed14934f9ff8b1a737390163", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9f0f94963f2a18a1ed14934f9ff8b1a737390163", "committedDate": "2020-08-09T15:21:27Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODgzNzg0", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463883784", "createdAt": "2020-08-09T15:40:56Z", "commit": {"oid": "9f0f94963f2a18a1ed14934f9ff8b1a737390163"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f0f94963f2a18a1ed14934f9ff8b1a737390163", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9f0f94963f2a18a1ed14934f9ff8b1a737390163", "committedDate": "2020-08-09T15:21:27Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cf3f66513dcfd96f5fc200e128dbec1ef38d67a2", "committedDate": "2020-08-09T16:21:18Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODkwMjc3", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463890277", "createdAt": "2020-08-09T17:24:11Z", "commit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTA1NzM0", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463905734", "createdAt": "2020-08-09T21:45:42Z", "commit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTMxOTI3", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463931927", "createdAt": "2020-08-10T02:24:03Z", "commit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjoyNDowM1rOG9_4JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjoyNzo1NFrOG9_6gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2Mjg4NQ==", "bodyText": "Ending javadoc usually only has 1 *.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467662885", "createdAt": "2020-08-10T02:24:03Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,133 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * int yield = 0; // not a keyword here\n+     * return switch (mode) {\n+     *    case \"a\", \"b\":\n+     *        yield 1;\n+     *    default:\n+     *        yield - 1;\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * |--VARIABLE_DEF\n+     * |   |--MODIFIERS\n+     * |   |--TYPE\n+     * |   |   `--LITERAL_INT (int)\n+     * |   |--IDENT (yield)\n+     * |   `--ASSIGN (=)\n+     * |       `--EXPR\n+     * |           `--NUM_INT (0)\n+     * |--SEMI (;)\n+     * |--LITERAL_RETURN (return)\n+     * |   |--EXPR\n+     * |   |   `--LITERAL_SWITCH (switch)\n+     * |   |       |--LPAREN (()\n+     * |   |       |--EXPR\n+     * |   |       |   `--IDENT (mode)\n+     * |   |       |--RPAREN ())\n+     * |   |       |--LCURLY ({)\n+     * |   |       |--CASE_GROUP\n+     * |   |       |   |--LITERAL_CASE (case)\n+     * |   |       |   |   |--EXPR\n+     * |   |       |   |   |   `--STRING_LITERAL (\"a\")\n+     * |   |       |   |   |--COMMA (,)\n+     * |   |       |   |   |--EXPR\n+     * |   |       |   |   |   `--STRING_LITERAL (\"b\")\n+     * |   |       |   |   `--COLON (:)\n+     * |   |       |   `--SLIST\n+     * |   |       |       `--LITERAL_YIELD (yield)\n+     * |   |       |           |--EXPR\n+     * |   |       |           |   `--NUM_INT (1)\n+     * |   |       |           `--SEMI (;)\n+     * |   |       |--CASE_GROUP\n+     * |   |       |   |--LITERAL_DEFAULT (default)\n+     * |   |       |   |   `--COLON (:)\n+     * |   |       |   `--SLIST\n+     * |   |       |       `--LITERAL_YIELD (yield)\n+     * |   |       |           |--EXPR\n+     * |   |       |           |   `--UNARY_MINUS (-)\n+     * |   |       |           |       `--NUM_INT (1)\n+     * |   |       |           `--SEMI (;)\n+     * |   |       `--RCURLY (})\n+     * |   `--SEMI (;)\n+     * </pre>\n+     *\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2MjkzNw==", "bodyText": "same.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467662937", "createdAt": "2020-08-10T02:24:20Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,133 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * int yield = 0; // not a keyword here\n+     * return switch (mode) {\n+     *    case \"a\", \"b\":\n+     *        yield 1;\n+     *    default:\n+     *        yield - 1;\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * |--VARIABLE_DEF\n+     * |   |--MODIFIERS\n+     * |   |--TYPE\n+     * |   |   `--LITERAL_INT (int)\n+     * |   |--IDENT (yield)\n+     * |   `--ASSIGN (=)\n+     * |       `--EXPR\n+     * |           `--NUM_INT (0)\n+     * |--SEMI (;)\n+     * |--LITERAL_RETURN (return)\n+     * |   |--EXPR\n+     * |   |   `--LITERAL_SWITCH (switch)\n+     * |   |       |--LPAREN (()\n+     * |   |       |--EXPR\n+     * |   |       |   `--IDENT (mode)\n+     * |   |       |--RPAREN ())\n+     * |   |       |--LCURLY ({)\n+     * |   |       |--CASE_GROUP\n+     * |   |       |   |--LITERAL_CASE (case)\n+     * |   |       |   |   |--EXPR\n+     * |   |       |   |   |   `--STRING_LITERAL (\"a\")\n+     * |   |       |   |   |--COMMA (,)\n+     * |   |       |   |   |--EXPR\n+     * |   |       |   |   |   `--STRING_LITERAL (\"b\")\n+     * |   |       |   |   `--COLON (:)\n+     * |   |       |   `--SLIST\n+     * |   |       |       `--LITERAL_YIELD (yield)\n+     * |   |       |           |--EXPR\n+     * |   |       |           |   `--NUM_INT (1)\n+     * |   |       |           `--SEMI (;)\n+     * |   |       |--CASE_GROUP\n+     * |   |       |   |--LITERAL_DEFAULT (default)\n+     * |   |       |   |   `--COLON (:)\n+     * |   |       |   `--SLIST\n+     * |   |       |       `--LITERAL_YIELD (yield)\n+     * |   |       |           |--EXPR\n+     * |   |       |           |   `--UNARY_MINUS (-)\n+     * |   |       |           |       `--NUM_INT (1)\n+     * |   |       |           `--SEMI (;)\n+     * |   |       `--RCURLY (})\n+     * |   `--SEMI (;)\n+     * </pre>\n+     *\n+     *\n+     * @see #LITERAL_SWITCH\n+     * @see #CASE_GROUP\n+     * @see #SLIST\n+     * @see #SWITCH_RULE\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/\n+    public static final int LITERAL_YIELD =\n+            GeneratedJavaTokenTypes.LITERAL_yield;\n+\n+    /**\n+     * Switch Expressions.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * return switch (day) {\n+     *     case SAT, SUN {@code ->} \"Weekend\";\n+     *     default {@code ->} \"Working day\";\n+     * };\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     *  LITERAL_RETURN (return)\n+     *   |--EXPR\n+     *   |   `--LITERAL_SWITCH (switch)\n+     *   |       |--LPAREN (()\n+     *   |       |--EXPR\n+     *   |       |   `--IDENT (day)\n+     *   |       |--RPAREN ())\n+     *   |       |--LCURLY ({)\n+     *   |       |--SWITCH_RULE\n+     *   |       |   |--LITERAL_CASE (case)\n+     *   |       |   |   |--EXPR\n+     *   |       |   |   |   `--IDENT (SAT)\n+     *   |       |   |   |--COMMA (,)\n+     *   |       |   |   `--EXPR\n+     *   |       |   |       `--IDENT (SUN)\n+     *   |       |   |--LAMBDA {@code ->}\n+     *   |       |   |--EXPR\n+     *   |       |   |   `--STRING_LITERAL (\"Weekend\")\n+     *   |       |   `--SEMI (;)\n+     *   |       |--SWITCH_RULE\n+     *   |       |   |--LITERAL_DEFAULT (default)\n+     *   |       |   |--LAMBDA {@code ->}\n+     *   |       |   |--EXPR\n+     *   |       |   |   `--STRING_LITERAL (\"Working day\")\n+     *   |       |   `--SEMI (;)\n+     *   |       `--RCURLY (})\n+     *   `--SEMI (;)\n+     * </pre>\n+     *\n+     * @see #LITERAL_CASE\n+     * @see #LITERAL_DEFAULT\n+     * @see #LITERAL_SWITCH\n+     * @see #LITERAL_YIELD\n+     *\n+     * @see <a href=\"https://docs.oracle.com/javase/specs/jls/se13/preview/switch-expressions.html\">\n+     * Java Language Specification, &sect;14.21</a>\n+     *\n+     * @since 8.36\n+     **/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2MzQ4OA==", "bodyText": "Do you have any inputs similar to this where we have a switch use a variable with the name yield to show your changes don't break existing parser with yield variables?", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467663488", "createdAt": "2020-08-10T02:27:54Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3815,6 +3818,133 @@\n     public static final int TEXT_BLOCK_LITERAL_END =\n             GeneratedJavaTokenTypes.TEXT_BLOCK_LITERAL_END;\n \n+    /**\n+     * The {@code yield} keyword.  This element appears\n+     * as part of a yield statement.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * int yield = 0; // not a keyword here\n+     * return switch (mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTM0NTc2", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-463934576", "createdAt": "2020-08-10T02:41:54Z", "commit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjo0MTo1NFrOG-ADig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjo0MTo1NFrOG-ADig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2NTgwMg==", "bodyText": "@rnveach Here are some challenging inputs, but there is quite a bit of \"yield\" as a method/ identifier in guava too.  That's where some of this code came from.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r467665802", "createdAt": "2020-08-10T02:41:54Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.java", "diffHunk": "@@ -1,12 +1,45 @@\n //non-compiled with javac: Compilable with Java14\n-package com.puppycrawl.tools.checkstyle.grammar;\n+package com.puppycrawl.tools.checkstyle.grammar.java14;\n \n+import static java.time.Instant.*;\n+\n+import java.time.Instant;\n+import java.util.Arrays;\n import java.util.EnumSet;\n import java.util.Set;\n+import java.util.function.IntConsumer;\n import java.util.function.Supplier;\n \n public class InputJava14SwitchExpression {\n \n+    static class HardToParse {\n+        void foo() {\n+            Instant Ascii;\n+            byte[] decodabet = new byte[1];\n+            Arrays.fill(decodabet, (byte) -1);\n+            char[] chars = {'c','h','a','r','s'};\n+            for (\n+                    int i = 0;\n+                    i < chars.length; i++) {\n+                char c = chars[i];\n+                decodabet[c] = (byte) i;\n+            }\n+        }\n+        IntConsumer consumer = (IntConsumer) i -> {\n+        };\n+\n+        static String yield = \"yield\";\n+\n+        class yieldClass{\n+            int yield = 6;\n+\n+            public void yield(){\n+\n+            }\n+        }\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62541965d7439361c8896676b7a57ab1059553bc", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/62541965d7439361c8896676b7a57ab1059553bc", "committedDate": "2020-08-10T17:19:01Z", "message": "minor: reformatting of grammar related to (#6615)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "770b59adab75114b3fd931498e6efdb6466bfcd5", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/770b59adab75114b3fd931498e6efdb6466bfcd5", "committedDate": "2020-08-10T17:19:01Z", "message": "minor: refactor traditionalStatement rule grammar related to (#6615)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf3f66513dcfd96f5fc200e128dbec1ef38d67a2", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cf3f66513dcfd96f5fc200e128dbec1ef38d67a2", "committedDate": "2020-08-09T16:21:18Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "8893bb824dc4a83a2c4f5df3e16c042e3f61032c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8893bb824dc4a83a2c4f5df3e16c042e3f61032c", "committedDate": "2020-08-10T17:19:01Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8893bb824dc4a83a2c4f5df3e16c042e3f61032c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8893bb824dc4a83a2c4f5df3e16c042e3f61032c", "committedDate": "2020-08-10T17:19:01Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/448217379777d109937aafc2c2b165fc0f424d8a", "committedDate": "2020-08-11T14:02:50Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTAzNjU1", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-465103655", "createdAt": "2020-08-11T14:10:16Z", "commit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDoxN1rOG-5pVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDoxN1rOG-5pVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYwOTM2Ng==", "bodyText": "Grammar correctly parses \"yield\" idenfitfier usage within switch.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r468609366", "createdAt": "2020-08-11T14:10:17Z", "author": {"login": "nmancus1"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.txt", "diffHunk": "@@ -0,0 +1,3266 @@\n+PACKAGE_DEF -> package [2:0]\n+|--ANNOTATIONS -> ANNOTATIONS [2:47]\n+|--DOT -> . [2:47]\n+|   |--DOT -> . [2:39]\n+|   |   |--DOT -> . [2:28]\n+|   |   |   |--DOT -> . [2:22]\n+|   |   |   |   |--DOT -> . [2:11]\n+|   |   |   |   |   |--IDENT -> com [2:8]\n+|   |   |   |   |   `--IDENT -> puppycrawl [2:12]\n+|   |   |   |   `--IDENT -> tools [2:23]\n+|   |   |   `--IDENT -> checkstyle [2:29]\n+|   |   `--IDENT -> grammar [2:40]\n+|   `--IDENT -> java14 [2:48]\n+`--SEMI -> ; [2:54]\n+STATIC_IMPORT -> import [4:0]\n+|--LITERAL_STATIC -> static [4:7]\n+|--DOT -> . [4:31]\n+|   |--DOT -> . [4:23]\n+|   |   |--DOT -> . [4:18]\n+|   |   |   |--IDENT -> java [4:14]\n+|   |   |   `--IDENT -> time [4:19]\n+|   |   `--IDENT -> Instant [4:24]\n+|   `--STAR -> * [4:32]\n+`--SEMI -> ; [4:33]\n+IMPORT -> import [6:0]\n+|--DOT -> . [6:16]\n+|   |--DOT -> . [6:11]\n+|   |   |--IDENT -> java [6:7]\n+|   |   `--IDENT -> time [6:12]\n+|   `--IDENT -> Instant [6:17]\n+`--SEMI -> ; [6:24]\n+IMPORT -> import [7:0]\n+|--DOT -> . [7:16]\n+|   |--DOT -> . [7:11]\n+|   |   |--IDENT -> java [7:7]\n+|   |   `--IDENT -> util [7:12]\n+|   `--IDENT -> Arrays [7:17]\n+`--SEMI -> ; [7:23]\n+IMPORT -> import [8:0]\n+|--DOT -> . [8:16]\n+|   |--DOT -> . [8:11]\n+|   |   |--IDENT -> java [8:7]\n+|   |   `--IDENT -> util [8:12]\n+|   `--IDENT -> EnumSet [8:17]\n+`--SEMI -> ; [8:24]\n+IMPORT -> import [9:0]\n+|--DOT -> . [9:16]\n+|   |--DOT -> . [9:11]\n+|   |   |--IDENT -> java [9:7]\n+|   |   `--IDENT -> util [9:12]\n+|   `--IDENT -> Set [9:17]\n+`--SEMI -> ; [9:20]\n+IMPORT -> import [10:0]\n+|--DOT -> . [10:25]\n+|   |--DOT -> . [10:16]\n+|   |   |--DOT -> . [10:11]\n+|   |   |   |--IDENT -> java [10:7]\n+|   |   |   `--IDENT -> util [10:12]\n+|   |   `--IDENT -> function [10:17]\n+|   `--IDENT -> IntConsumer [10:26]\n+`--SEMI -> ; [10:37]\n+IMPORT -> import [11:0]\n+|--DOT -> . [11:25]\n+|   |--DOT -> . [11:16]\n+|   |   |--DOT -> . [11:11]\n+|   |   |   |--IDENT -> java [11:7]\n+|   |   |   `--IDENT -> util [11:12]\n+|   |   `--IDENT -> function [11:17]\n+|   `--IDENT -> Supplier [11:26]\n+`--SEMI -> ; [11:34]\n+CLASS_DEF -> CLASS_DEF [13:0]\n+|--MODIFIERS -> MODIFIERS [13:0]\n+|   `--LITERAL_PUBLIC -> public [13:0]\n+|--LITERAL_CLASS -> class [13:7]\n+|--IDENT -> InputJava14SwitchExpression [13:13]\n+`--OBJBLOCK -> OBJBLOCK [13:41]\n+    |--LCURLY -> { [13:41]\n+    |--CLASS_DEF -> CLASS_DEF [15:4]\n+    |   |--MODIFIERS -> MODIFIERS [15:4]\n+    |   |   `--LITERAL_STATIC -> static [15:4]\n+    |   |--LITERAL_CLASS -> class [15:11]\n+    |   |--IDENT -> HardToParse [15:17]\n+    |   `--OBJBLOCK -> OBJBLOCK [15:29]\n+    |       |--LCURLY -> { [15:29]\n+    |       |--METHOD_DEF -> METHOD_DEF [16:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [16:8]\n+    |       |   |--TYPE -> TYPE [16:8]\n+    |       |   |   `--LITERAL_VOID -> void [16:8]\n+    |       |   |--IDENT -> foo [16:13]\n+    |       |   |--LPAREN -> ( [16:16]\n+    |       |   |--PARAMETERS -> PARAMETERS [16:17]\n+    |       |   |--RPAREN -> ) [16:17]\n+    |       |   `--SLIST -> { [16:19]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [17:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [17:12]\n+    |       |       |   |--TYPE -> TYPE [17:12]\n+    |       |       |   |   `--IDENT -> Instant [17:12]\n+    |       |       |   `--IDENT -> Ascii [17:20]\n+    |       |       |--SEMI -> ; [17:25]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [18:16]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [18:16]\n+    |       |       |   |--TYPE -> TYPE [18:16]\n+    |       |       |   |   `--ARRAY_DECLARATOR -> [ [18:16]\n+    |       |       |   |       |--LITERAL_BYTE -> byte [18:12]\n+    |       |       |   |       `--RBRACK -> ] [18:17]\n+    |       |       |   |--IDENT -> decodabet [18:19]\n+    |       |       |   `--ASSIGN -> = [18:29]\n+    |       |       |       `--EXPR -> EXPR [18:31]\n+    |       |       |           `--LITERAL_NEW -> new [18:31]\n+    |       |       |               |--LITERAL_BYTE -> byte [18:35]\n+    |       |       |               `--ARRAY_DECLARATOR -> [ [18:39]\n+    |       |       |                   |--EXPR -> EXPR [18:40]\n+    |       |       |                   |   `--NUM_INT -> 1 [18:40]\n+    |       |       |                   `--RBRACK -> ] [18:41]\n+    |       |       |--SEMI -> ; [18:42]\n+    |       |       |--EXPR -> EXPR [19:23]\n+    |       |       |   `--METHOD_CALL -> ( [19:23]\n+    |       |       |       |--DOT -> . [19:18]\n+    |       |       |       |   |--IDENT -> Arrays [19:12]\n+    |       |       |       |   `--IDENT -> fill [19:19]\n+    |       |       |       |--ELIST -> ELIST [19:24]\n+    |       |       |       |   |--EXPR -> EXPR [19:24]\n+    |       |       |       |   |   `--IDENT -> decodabet [19:24]\n+    |       |       |       |   |--COMMA -> , [19:33]\n+    |       |       |       |   `--EXPR -> EXPR [19:35]\n+    |       |       |       |       `--TYPECAST -> ( [19:35]\n+    |       |       |       |           |--TYPE -> TYPE [19:36]\n+    |       |       |       |           |   `--LITERAL_BYTE -> byte [19:36]\n+    |       |       |       |           |--RPAREN -> ) [19:40]\n+    |       |       |       |           `--UNARY_MINUS -> - [19:42]\n+    |       |       |       |               `--NUM_INT -> 1 [19:43]\n+    |       |       |       `--RPAREN -> ) [19:44]\n+    |       |       |--SEMI -> ; [19:45]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [20:16]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [20:16]\n+    |       |       |   |--TYPE -> TYPE [20:16]\n+    |       |       |   |   `--ARRAY_DECLARATOR -> [ [20:16]\n+    |       |       |   |       |--LITERAL_CHAR -> char [20:12]\n+    |       |       |   |       `--RBRACK -> ] [20:17]\n+    |       |       |   |--IDENT -> chars [20:19]\n+    |       |       |   `--ASSIGN -> = [20:25]\n+    |       |       |       `--ARRAY_INIT -> { [20:27]\n+    |       |       |           |--EXPR -> EXPR [20:28]\n+    |       |       |           |   `--CHAR_LITERAL -> 'c' [20:28]\n+    |       |       |           |--COMMA -> , [20:31]\n+    |       |       |           |--EXPR -> EXPR [20:32]\n+    |       |       |           |   `--CHAR_LITERAL -> 'h' [20:32]\n+    |       |       |           |--COMMA -> , [20:35]\n+    |       |       |           |--EXPR -> EXPR [20:36]\n+    |       |       |           |   `--CHAR_LITERAL -> 'a' [20:36]\n+    |       |       |           |--COMMA -> , [20:39]\n+    |       |       |           |--EXPR -> EXPR [20:40]\n+    |       |       |           |   `--CHAR_LITERAL -> 'r' [20:40]\n+    |       |       |           |--COMMA -> , [20:43]\n+    |       |       |           |--EXPR -> EXPR [20:44]\n+    |       |       |           |   `--CHAR_LITERAL -> 's' [20:44]\n+    |       |       |           `--RCURLY -> } [20:47]\n+    |       |       |--SEMI -> ; [20:48]\n+    |       |       |--LITERAL_FOR -> for [21:12]\n+    |       |       |   |--LPAREN -> ( [21:16]\n+    |       |       |   |--FOR_INIT -> FOR_INIT [22:20]\n+    |       |       |   |   `--VARIABLE_DEF -> VARIABLE_DEF [22:20]\n+    |       |       |   |       |--MODIFIERS -> MODIFIERS [22:20]\n+    |       |       |   |       |--TYPE -> TYPE [22:20]\n+    |       |       |   |       |   `--LITERAL_INT -> int [22:20]\n+    |       |       |   |       |--IDENT -> i [22:24]\n+    |       |       |   |       `--ASSIGN -> = [22:26]\n+    |       |       |   |           `--EXPR -> EXPR [22:28]\n+    |       |       |   |               `--NUM_INT -> 0 [22:28]\n+    |       |       |   |--SEMI -> ; [22:29]\n+    |       |       |   |--FOR_CONDITION -> FOR_CONDITION [23:22]\n+    |       |       |   |   `--EXPR -> EXPR [23:22]\n+    |       |       |   |       `--LT -> < [23:22]\n+    |       |       |   |           |--IDENT -> i [23:20]\n+    |       |       |   |           `--DOT -> . [23:29]\n+    |       |       |   |               |--IDENT -> chars [23:24]\n+    |       |       |   |               `--IDENT -> length [23:30]\n+    |       |       |   |--SEMI -> ; [23:36]\n+    |       |       |   |--FOR_ITERATOR -> FOR_ITERATOR [23:39]\n+    |       |       |   |   `--ELIST -> ELIST [23:39]\n+    |       |       |   |       `--EXPR -> EXPR [23:39]\n+    |       |       |   |           `--POST_INC -> ++ [23:39]\n+    |       |       |   |               `--IDENT -> i [23:38]\n+    |       |       |   |--RPAREN -> ) [23:41]\n+    |       |       |   `--SLIST -> { [23:43]\n+    |       |       |       |--VARIABLE_DEF -> VARIABLE_DEF [24:16]\n+    |       |       |       |   |--MODIFIERS -> MODIFIERS [24:16]\n+    |       |       |       |   |--TYPE -> TYPE [24:16]\n+    |       |       |       |   |   `--LITERAL_CHAR -> char [24:16]\n+    |       |       |       |   |--IDENT -> c [24:21]\n+    |       |       |       |   `--ASSIGN -> = [24:23]\n+    |       |       |       |       `--EXPR -> EXPR [24:30]\n+    |       |       |       |           `--INDEX_OP -> [ [24:30]\n+    |       |       |       |               |--IDENT -> chars [24:25]\n+    |       |       |       |               |--EXPR -> EXPR [24:31]\n+    |       |       |       |               |   `--IDENT -> i [24:31]\n+    |       |       |       |               `--RBRACK -> ] [24:32]\n+    |       |       |       |--SEMI -> ; [24:33]\n+    |       |       |       |--EXPR -> EXPR [25:29]\n+    |       |       |       |   `--ASSIGN -> = [25:29]\n+    |       |       |       |       |--INDEX_OP -> [ [25:25]\n+    |       |       |       |       |   |--IDENT -> decodabet [25:16]\n+    |       |       |       |       |   |--EXPR -> EXPR [25:26]\n+    |       |       |       |       |   |   `--IDENT -> c [25:26]\n+    |       |       |       |       |   `--RBRACK -> ] [25:27]\n+    |       |       |       |       `--TYPECAST -> ( [25:31]\n+    |       |       |       |           |--TYPE -> TYPE [25:32]\n+    |       |       |       |           |   `--LITERAL_BYTE -> byte [25:32]\n+    |       |       |       |           |--RPAREN -> ) [25:36]\n+    |       |       |       |           `--IDENT -> i [25:38]\n+    |       |       |       |--SEMI -> ; [25:39]\n+    |       |       |       `--RCURLY -> } [26:12]\n+    |       |       `--RCURLY -> } [27:8]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [28:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [28:8]\n+    |       |   |--TYPE -> TYPE [28:8]\n+    |       |   |   `--IDENT -> IntConsumer [28:8]\n+    |       |   |--IDENT -> consumer [28:20]\n+    |       |   |--ASSIGN -> = [28:29]\n+    |       |   |   `--EXPR -> EXPR [28:31]\n+    |       |   |       `--TYPECAST -> ( [28:31]\n+    |       |   |           |--TYPE -> TYPE [28:32]\n+    |       |   |           |   `--IDENT -> IntConsumer [28:32]\n+    |       |   |           |--RPAREN -> ) [28:43]\n+    |       |   |           `--LAMBDA -> -> [28:47]\n+    |       |   |               |--IDENT -> i [28:45]\n+    |       |   |               `--SLIST -> { [28:50]\n+    |       |   |                   `--RCURLY -> } [29:8]\n+    |       |   `--SEMI -> ; [29:9]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [31:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [31:8]\n+    |       |   |   `--LITERAL_STATIC -> static [31:8]\n+    |       |   |--TYPE -> TYPE [31:15]\n+    |       |   |   `--IDENT -> String [31:15]\n+    |       |   |--IDENT -> yield [31:22]\n+    |       |   |--ASSIGN -> = [31:28]\n+    |       |   |   `--EXPR -> EXPR [31:30]\n+    |       |   |       `--STRING_LITERAL -> \"yield\" [31:30]\n+    |       |   `--SEMI -> ; [31:37]\n+    |       |--CLASS_DEF -> CLASS_DEF [33:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [33:8]\n+    |       |   |--LITERAL_CLASS -> class [33:8]\n+    |       |   |--IDENT -> yieldClass [33:14]\n+    |       |   `--OBJBLOCK -> OBJBLOCK [33:24]\n+    |       |       |--LCURLY -> { [33:24]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [34:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [34:12]\n+    |       |       |   |--TYPE -> TYPE [34:12]\n+    |       |       |   |   `--LITERAL_INT -> int [34:12]\n+    |       |       |   |--IDENT -> yield [34:16]\n+    |       |       |   |--ASSIGN -> = [34:22]\n+    |       |       |   |   `--EXPR -> EXPR [34:24]\n+    |       |       |   |       `--NUM_INT -> 6 [34:24]\n+    |       |       |   `--SEMI -> ; [34:25]\n+    |       |       |--METHOD_DEF -> METHOD_DEF [36:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [36:12]\n+    |       |       |   |   `--LITERAL_PUBLIC -> public [36:12]\n+    |       |       |   |--TYPE -> TYPE [36:19]\n+    |       |       |   |   `--LITERAL_VOID -> void [36:19]\n+    |       |       |   |--IDENT -> yield [36:24]\n+    |       |       |   |--LPAREN -> ( [36:29]\n+    |       |       |   |--PARAMETERS -> PARAMETERS [36:30]\n+    |       |       |   |--RPAREN -> ) [36:30]\n+    |       |       |   `--SLIST -> { [36:31]\n+    |       |       |       `--RCURLY -> } [38:12]\n+    |       |       `--RCURLY -> } [39:8]\n+    |       `--RCURLY -> } [41:4]\n+    |--ENUM_DEF -> ENUM_DEF [43:4]\n+    |   |--MODIFIERS -> MODIFIERS [43:4]\n+    |   |--ENUM -> enum [43:4]\n+    |   |--IDENT -> Day [43:9]\n+    |   `--OBJBLOCK -> OBJBLOCK [43:13]\n+    |       |--LCURLY -> { [43:13]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [44:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [44:8]\n+    |       |   `--IDENT -> MON [44:8]\n+    |       |--COMMA -> , [44:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [45:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [45:8]\n+    |       |   `--IDENT -> TUE [45:8]\n+    |       |--COMMA -> , [45:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [46:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [46:8]\n+    |       |   `--IDENT -> WED [46:8]\n+    |       |--COMMA -> , [46:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [47:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [47:8]\n+    |       |   `--IDENT -> THU [47:8]\n+    |       |--COMMA -> , [47:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [48:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [48:8]\n+    |       |   `--IDENT -> FRI [48:8]\n+    |       |--COMMA -> , [48:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [49:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [49:8]\n+    |       |   `--IDENT -> SAT [49:8]\n+    |       |--COMMA -> , [49:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [50:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [50:8]\n+    |       |   `--IDENT -> SUN [50:8]\n+    |       |--COMMA -> , [50:11]\n+    |       `--RCURLY -> } [51:4]\n+    |--METHOD_DEF -> METHOD_DEF [53:4]\n+    |   |--MODIFIERS -> MODIFIERS [53:4]\n+    |   |--TYPE -> TYPE [53:4]\n+    |   |   `--IDENT -> String [53:4]\n+    |   |--IDENT -> whatIsToday [53:11]\n+    |   |--LPAREN -> ( [53:22]\n+    |   |--PARAMETERS -> PARAMETERS [53:23]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [53:23]\n+    |   |       |--MODIFIERS -> MODIFIERS [53:23]\n+    |   |       |--TYPE -> TYPE [53:23]\n+    |   |       |   `--IDENT -> Day [53:23]\n+    |   |       `--IDENT -> day [53:27]\n+    |   |--RPAREN -> ) [53:30]\n+    |   `--SLIST -> { [53:32]\n+    |       |--LITERAL_RETURN -> return [54:8]\n+    |       |   |--EXPR -> EXPR [54:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [54:15]\n+    |       |   |       |--LPAREN -> ( [54:22]\n+    |       |   |       |--EXPR -> EXPR [54:23]\n+    |       |   |       |   `--IDENT -> day [54:23]\n+    |       |   |       |--RPAREN -> ) [54:26]\n+    |       |   |       |--LCURLY -> { [54:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [55:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [55:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [55:17]\n+    |       |   |       |   |   |   `--IDENT -> SAT [55:17]\n+    |       |   |       |   |   |--COMMA -> , [55:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [55:22]\n+    |       |   |       |   |       `--IDENT -> SUN [55:22]\n+    |       |   |       |   |--LAMBDA -> -> [55:26]\n+    |       |   |       |   |--EXPR -> EXPR [55:29]\n+    |       |   |       |   |   `--STRING_LITERAL -> \"Weekend\" [55:29]\n+    |       |   |       |   `--SEMI -> ; [55:38]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [56:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [56:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [56:17]\n+    |       |   |       |   |   |--COMMA -> , [56:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:22]\n+    |       |   |       |   |   |   `--IDENT -> TUE [56:22]\n+    |       |   |       |   |   |--COMMA -> , [56:25]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:27]\n+    |       |   |       |   |   |   `--IDENT -> WED [56:27]\n+    |       |   |       |   |   |--COMMA -> , [56:30]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:32]\n+    |       |   |       |   |   |   `--IDENT -> THU [56:32]\n+    |       |   |       |   |   |--COMMA -> , [56:35]\n+    |       |   |       |   |   `--EXPR -> EXPR [56:37]\n+    |       |   |       |   |       `--IDENT -> FRI [56:37]\n+    |       |   |       |   |--LAMBDA -> -> [56:41]\n+    |       |   |       |   |--EXPR -> EXPR [56:44]\n+    |       |   |       |   |   `--STRING_LITERAL -> \"Working day\" [56:44]\n+    |       |   |       |   `--SEMI -> ; [56:57]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [57:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [57:12]\n+    |       |   |       |   |--LAMBDA -> -> [57:20]\n+    |       |   |       |   `--LITERAL_THROW -> throw [57:23]\n+    |       |   |       |       |--EXPR -> EXPR [57:29]\n+    |       |   |       |       |   `--LITERAL_NEW -> new [57:29]\n+    |       |   |       |       |       |--IDENT -> IllegalArgumentException [57:33]\n+    |       |   |       |       |       |--LPAREN -> ( [57:57]\n+    |       |   |       |       |       |--ELIST -> ELIST [57:74]\n+    |       |   |       |       |       |   `--EXPR -> EXPR [57:74]\n+    |       |   |       |       |       |       `--PLUS -> + [57:74]\n+    |       |   |       |       |       |           |--STRING_LITERAL -> \"Invalid day: \" [57:58]\n+    |       |   |       |       |       |           `--METHOD_CALL -> ( [57:84]\n+    |       |   |       |       |       |               |--DOT -> . [57:79]\n+    |       |   |       |       |       |               |   |--IDENT -> day [57:76]\n+    |       |   |       |       |       |               |   `--IDENT -> name [57:80]\n+    |       |   |       |       |       |               |--ELIST -> ELIST [57:85]\n+    |       |   |       |       |       |               `--RPAREN -> ) [57:85]\n+    |       |   |       |       |       `--RPAREN -> ) [57:86]\n+    |       |   |       |       `--SEMI -> ; [57:87]\n+    |       |   |       `--RCURLY -> } [58:8]\n+    |       |   `--SEMI -> ; [58:9]\n+    |       `--RCURLY -> } [59:4]\n+    |--METHOD_DEF -> METHOD_DEF [61:4]\n+    |   |--MODIFIERS -> MODIFIERS [61:4]\n+    |   |--TYPE -> TYPE [61:4]\n+    |   |   |--IDENT -> Set [61:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [61:7]\n+    |   |       |--GENERIC_START -> < [61:7]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [61:8]\n+    |   |       |   `--IDENT -> Day [61:8]\n+    |   |       `--GENERIC_END -> > [61:11]\n+    |   |--IDENT -> days [61:13]\n+    |   |--LPAREN -> ( [61:17]\n+    |   |--PARAMETERS -> PARAMETERS [61:18]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [61:18]\n+    |   |       |--MODIFIERS -> MODIFIERS [61:18]\n+    |   |       |--TYPE -> TYPE [61:18]\n+    |   |       |   `--IDENT -> String [61:18]\n+    |   |       `--IDENT -> weekPart [61:25]\n+    |   |--RPAREN -> ) [61:33]\n+    |   `--SLIST -> { [61:35]\n+    |       |--LITERAL_RETURN -> return [62:8]\n+    |       |   |--EXPR -> EXPR [62:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [62:15]\n+    |       |   |       |--LPAREN -> ( [62:22]\n+    |       |   |       |--EXPR -> EXPR [62:23]\n+    |       |   |       |   `--IDENT -> weekPart [62:23]\n+    |       |   |       |--RPAREN -> ) [62:31]\n+    |       |   |       |--LCURLY -> { [62:33]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [63:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [63:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [63:17]\n+    |       |   |       |   |       `--STRING_LITERAL -> \"Weekend\" [63:17]\n+    |       |   |       |   |--LAMBDA -> -> [63:27]\n+    |       |   |       |   |--EXPR -> EXPR [63:40]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [63:40]\n+    |       |   |       |   |       |--DOT -> . [63:37]\n+    |       |   |       |   |       |   |--IDENT -> EnumSet [63:30]\n+    |       |   |       |   |       |   `--IDENT -> of [63:38]\n+    |       |   |       |   |       |--ELIST -> ELIST [63:44]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [63:44]\n+    |       |   |       |   |       |   |   `--DOT -> . [63:44]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [63:41]\n+    |       |   |       |   |       |   |       `--IDENT -> SAT [63:45]\n+    |       |   |       |   |       |   |--COMMA -> , [63:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [63:53]\n+    |       |   |       |   |       |       `--DOT -> . [63:53]\n+    |       |   |       |   |       |           |--IDENT -> Day [63:50]\n+    |       |   |       |   |       |           `--IDENT -> SUN [63:54]\n+    |       |   |       |   |       `--RPAREN -> ) [63:57]\n+    |       |   |       |   `--SEMI -> ; [63:58]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [64:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [64:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [64:17]\n+    |       |   |       |   |       `--STRING_LITERAL -> \"Working day\" [64:17]\n+    |       |   |       |   |--LAMBDA -> -> [64:31]\n+    |       |   |       |   |--EXPR -> EXPR [64:44]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [64:44]\n+    |       |   |       |   |       |--DOT -> . [64:41]\n+    |       |   |       |   |       |   |--IDENT -> EnumSet [64:34]\n+    |       |   |       |   |       |   `--IDENT -> of [64:42]\n+    |       |   |       |   |       |--ELIST -> ELIST [64:48]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:48]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:48]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:45]\n+    |       |   |       |   |       |   |       `--IDENT -> MON [64:49]\n+    |       |   |       |   |       |   |--COMMA -> , [64:52]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:57]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:57]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:54]\n+    |       |   |       |   |       |   |       `--IDENT -> TUE [64:58]\n+    |       |   |       |   |       |   |--COMMA -> , [64:61]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:66]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:66]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:63]\n+    |       |   |       |   |       |   |       `--IDENT -> WED [64:67]\n+    |       |   |       |   |       |   |--COMMA -> , [64:70]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:75]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:75]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:72]\n+    |       |   |       |   |       |   |       `--IDENT -> THU [64:76]\n+    |       |   |       |   |       |   |--COMMA -> , [64:79]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [64:84]\n+    |       |   |       |   |       |       `--DOT -> . [64:84]\n+    |       |   |       |   |       |           |--IDENT -> Day [64:81]\n+    |       |   |       |   |       |           `--IDENT -> FRI [64:85]\n+    |       |   |       |   |       `--RPAREN -> ) [64:88]\n+    |       |   |       |   `--SEMI -> ; [64:89]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [65:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [65:12]\n+    |       |   |       |   |--LAMBDA -> -> [65:20]\n+    |       |   |       |   `--LITERAL_THROW -> throw [65:23]\n+    |       |   |       |       |--EXPR -> EXPR [65:29]\n+    |       |   |       |       |   `--LITERAL_NEW -> new [65:29]\n+    |       |   |       |       |       |--IDENT -> IllegalArgumentException [65:33]\n+    |       |   |       |       |       |--LPAREN -> ( [65:57]\n+    |       |   |       |       |       |--ELIST -> ELIST [65:79]\n+    |       |   |       |       |       |   `--EXPR -> EXPR [65:79]\n+    |       |   |       |       |       |       `--PLUS -> + [65:79]\n+    |       |   |       |       |       |           |--STRING_LITERAL -> \"Invalid weekPart: \" [65:58]\n+    |       |   |       |       |       |           `--IDENT -> weekPart [65:81]\n+    |       |   |       |       |       `--RPAREN -> ) [65:89]\n+    |       |   |       |       `--SEMI -> ; [65:90]\n+    |       |   |       `--RCURLY -> } [66:8]\n+    |       |   `--SEMI -> ; [66:9]\n+    |       `--RCURLY -> } [67:4]\n+    |--METHOD_DEF -> METHOD_DEF [69:4]\n+    |   |--MODIFIERS -> MODIFIERS [69:4]\n+    |   |--TYPE -> TYPE [69:4]\n+    |   |   `--IDENT -> String [69:4]\n+    |   |--IDENT -> isDayNameLong [69:11]\n+    |   |--LPAREN -> ( [69:24]\n+    |   |--PARAMETERS -> PARAMETERS [69:25]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [69:25]\n+    |   |       |--MODIFIERS -> MODIFIERS [69:25]\n+    |   |       |--TYPE -> TYPE [69:25]\n+    |   |       |   `--IDENT -> Day [69:25]\n+    |   |       `--IDENT -> day [69:29]\n+    |   |--RPAREN -> ) [69:32]\n+    |   `--SLIST -> { [69:34]\n+    |       |--LITERAL_RETURN -> return [70:8]\n+    |       |   |--EXPR -> EXPR [75:14]\n+    |       |   |   `--QUESTION -> ? [75:14]\n+    |       |   |       |--GT -> > [75:10]\n+    |       |   |       |   |--LITERAL_SWITCH -> switch [70:15]\n+    |       |   |       |   |   |--LPAREN -> ( [70:22]\n+    |       |   |       |   |   |--EXPR -> EXPR [70:23]\n+    |       |   |       |   |   |   `--IDENT -> day [70:23]\n+    |       |   |       |   |   |--RPAREN -> ) [70:26]\n+    |       |   |       |   |   |--LCURLY -> { [70:28]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [71:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [71:12]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [71:17]\n+    |       |   |       |   |   |   |   |   `--IDENT -> MON [71:17]\n+    |       |   |       |   |   |   |   |--COMMA -> , [71:20]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [71:22]\n+    |       |   |       |   |   |   |   |   `--IDENT -> FRI [71:22]\n+    |       |   |       |   |   |   |   |--COMMA -> , [71:25]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [71:27]\n+    |       |   |       |   |   |   |       `--IDENT -> SUN [71:27]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [71:31]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [71:34]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 6 [71:34]\n+    |       |   |       |   |   |   `--SEMI -> ; [71:35]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [72:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [72:12]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [72:17]\n+    |       |   |       |   |   |   |       `--IDENT -> TUE [72:17]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [72:21]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [72:24]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 7 [72:24]\n+    |       |   |       |   |   |   `--SEMI -> ; [72:25]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [73:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [73:12]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [73:17]\n+    |       |   |       |   |   |   |   |   `--IDENT -> THU [73:17]\n+    |       |   |       |   |   |   |   |--COMMA -> , [73:20]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [73:22]\n+    |       |   |       |   |   |   |       `--IDENT -> SAT [73:22]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [73:26]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [73:29]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 8 [73:29]\n+    |       |   |       |   |   |   `--SEMI -> ; [73:30]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [74:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [74:12]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [74:17]\n+    |       |   |       |   |   |   |       `--IDENT -> WED [74:17]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [74:21]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [74:24]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 9 [74:24]\n+    |       |   |       |   |   |   `--SEMI -> ; [74:25]\n+    |       |   |       |   |   `--RCURLY -> } [75:8]\n+    |       |   |       |   `--NUM_INT -> 7 [75:12]\n+    |       |   |       |--STRING_LITERAL -> \"long\" [75:16]\n+    |       |   |       |--COLON -> : [75:23]\n+    |       |   |       `--STRING_LITERAL -> \"short\" [75:25]\n+    |       |   `--SEMI -> ; [75:32]\n+    |       `--RCURLY -> } [76:4]\n+    |--METHOD_DEF -> METHOD_DEF [78:4]\n+    |   |--MODIFIERS -> MODIFIERS [78:4]\n+    |   |--TYPE -> TYPE [78:4]\n+    |   |   `--LITERAL_INT -> int [78:4]\n+    |   |--IDENT -> assignement [78:8]\n+    |   |--LPAREN -> ( [78:19]\n+    |   |--PARAMETERS -> PARAMETERS [78:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [78:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [78:20]\n+    |   |       |--TYPE -> TYPE [78:20]\n+    |   |       |   `--IDENT -> Day [78:20]\n+    |   |       `--IDENT -> day [78:24]\n+    |   |--RPAREN -> ) [78:27]\n+    |   `--SLIST -> { [78:29]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [79:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [79:8]\n+    |       |   |--TYPE -> TYPE [79:8]\n+    |       |   |   `--LITERAL_INT -> int [79:8]\n+    |       |   |--IDENT -> numLetters [79:12]\n+    |       |   `--ASSIGN -> = [79:23]\n+    |       |       `--EXPR -> EXPR [79:25]\n+    |       |           `--LITERAL_SWITCH -> switch [79:25]\n+    |       |               |--LPAREN -> ( [79:32]\n+    |       |               |--EXPR -> EXPR [79:33]\n+    |       |               |   `--IDENT -> day [79:33]\n+    |       |               |--RPAREN -> ) [79:36]\n+    |       |               |--LCURLY -> { [79:38]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [80:12]\n+    |       |               |   |--LITERAL_CASE -> case [80:12]\n+    |       |               |   |   |--EXPR -> EXPR [80:17]\n+    |       |               |   |   |   `--IDENT -> MON [80:17]\n+    |       |               |   |   |--COMMA -> , [80:20]\n+    |       |               |   |   |--EXPR -> EXPR [80:22]\n+    |       |               |   |   |   `--IDENT -> FRI [80:22]\n+    |       |               |   |   |--COMMA -> , [80:25]\n+    |       |               |   |   `--EXPR -> EXPR [80:27]\n+    |       |               |   |       `--IDENT -> SUN [80:27]\n+    |       |               |   |--LAMBDA -> -> [80:31]\n+    |       |               |   |--EXPR -> EXPR [80:34]\n+    |       |               |   |   `--NUM_INT -> 6 [80:34]\n+    |       |               |   `--SEMI -> ; [80:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [81:12]\n+    |       |               |   |--LITERAL_CASE -> case [81:12]\n+    |       |               |   |   `--EXPR -> EXPR [81:17]\n+    |       |               |   |       `--IDENT -> TUE [81:17]\n+    |       |               |   |--LAMBDA -> -> [81:21]\n+    |       |               |   |--EXPR -> EXPR [81:24]\n+    |       |               |   |   `--NUM_INT -> 7 [81:24]\n+    |       |               |   `--SEMI -> ; [81:25]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [82:12]\n+    |       |               |   |--LITERAL_CASE -> case [82:12]\n+    |       |               |   |   |--EXPR -> EXPR [82:17]\n+    |       |               |   |   |   `--IDENT -> THU [82:17]\n+    |       |               |   |   |--COMMA -> , [82:20]\n+    |       |               |   |   `--EXPR -> EXPR [82:22]\n+    |       |               |   |       `--IDENT -> SAT [82:22]\n+    |       |               |   |--LAMBDA -> -> [82:26]\n+    |       |               |   |--EXPR -> EXPR [82:29]\n+    |       |               |   |   `--NUM_INT -> 8 [82:29]\n+    |       |               |   `--SEMI -> ; [82:30]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [83:12]\n+    |       |               |   |--LITERAL_CASE -> case [83:12]\n+    |       |               |   |   `--EXPR -> EXPR [83:17]\n+    |       |               |   |       `--IDENT -> WED [83:17]\n+    |       |               |   |--LAMBDA -> -> [83:21]\n+    |       |               |   |--EXPR -> EXPR [83:24]\n+    |       |               |   |   `--NUM_INT -> 9 [83:24]\n+    |       |               |   `--SEMI -> ; [83:25]\n+    |       |               `--RCURLY -> } [84:8]\n+    |       |--SEMI -> ; [84:9]\n+    |       |--LITERAL_RETURN -> return [85:8]\n+    |       |   |--EXPR -> EXPR [85:15]\n+    |       |   |   `--IDENT -> numLetters [85:15]\n+    |       |   `--SEMI -> ; [85:25]\n+    |       `--RCURLY -> } [86:4]\n+    |--METHOD_DEF -> METHOD_DEF [88:4]\n+    |   |--MODIFIERS -> MODIFIERS [88:4]\n+    |   |   `--LITERAL_STATIC -> static [88:4]\n+    |   |--TYPE -> TYPE [88:11]\n+    |   |   `--LITERAL_VOID -> void [88:11]\n+    |   |--IDENT -> howMany [88:16]\n+    |   |--LPAREN -> ( [88:23]\n+    |   |--PARAMETERS -> PARAMETERS [88:24]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [88:24]\n+    |   |       |--MODIFIERS -> MODIFIERS [88:24]\n+    |   |       |--TYPE -> TYPE [88:24]\n+    |   |       |   `--LITERAL_INT -> int [88:24]\n+    |   |       `--IDENT -> k [88:28]\n+    |   |--RPAREN -> ) [88:29]\n+    |   `--SLIST -> { [88:31]\n+    |       |--LITERAL_SWITCH -> switch [89:8]\n+    |       |   |--LPAREN -> ( [89:15]\n+    |       |   |--EXPR -> EXPR [89:16]\n+    |       |   |   `--IDENT -> k [89:16]\n+    |       |   |--RPAREN -> ) [89:17]\n+    |       |   |--LCURLY -> { [89:19]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [90:12]\n+    |       |   |   |--LITERAL_CASE -> case [90:12]\n+    |       |   |   |   `--EXPR -> EXPR [90:17]\n+    |       |   |   |       `--NUM_INT -> 1 [90:17]\n+    |       |   |   |--LAMBDA -> -> [90:19]\n+    |       |   |   |--EXPR -> EXPR [90:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [90:40]\n+    |       |   |   |       |--DOT -> . [90:32]\n+    |       |   |   |       |   |--DOT -> . [90:28]\n+    |       |   |   |       |   |   |--IDENT -> System [90:22]\n+    |       |   |   |       |   |   `--IDENT -> out [90:29]\n+    |       |   |   |       |   `--IDENT -> println [90:33]\n+    |       |   |   |       |--ELIST -> ELIST [90:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [90:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"one\" [90:41]\n+    |       |   |   |       `--RPAREN -> ) [90:46]\n+    |       |   |   `--SEMI -> ; [90:47]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [91:12]\n+    |       |   |   |--LITERAL_CASE -> case [91:12]\n+    |       |   |   |   `--EXPR -> EXPR [91:17]\n+    |       |   |   |       `--NUM_INT -> 2 [91:17]\n+    |       |   |   |--LAMBDA -> -> [91:19]\n+    |       |   |   |--EXPR -> EXPR [91:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [91:40]\n+    |       |   |   |       |--DOT -> . [91:32]\n+    |       |   |   |       |   |--DOT -> . [91:28]\n+    |       |   |   |       |   |   |--IDENT -> System [91:22]\n+    |       |   |   |       |   |   `--IDENT -> out [91:29]\n+    |       |   |   |       |   `--IDENT -> println [91:33]\n+    |       |   |   |       |--ELIST -> ELIST [91:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [91:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"two\" [91:41]\n+    |       |   |   |       `--RPAREN -> ) [91:46]\n+    |       |   |   `--SEMI -> ; [91:47]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [92:12]\n+    |       |   |   |--LITERAL_CASE -> case [92:12]\n+    |       |   |   |   `--EXPR -> EXPR [92:17]\n+    |       |   |   |       `--NUM_INT -> 3 [92:17]\n+    |       |   |   |--LAMBDA -> -> [92:19]\n+    |       |   |   |--EXPR -> EXPR [92:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [92:40]\n+    |       |   |   |       |--DOT -> . [92:32]\n+    |       |   |   |       |   |--DOT -> . [92:28]\n+    |       |   |   |       |   |   |--IDENT -> System [92:22]\n+    |       |   |   |       |   |   `--IDENT -> out [92:29]\n+    |       |   |   |       |   `--IDENT -> println [92:33]\n+    |       |   |   |       |--ELIST -> ELIST [92:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [92:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"many\" [92:41]\n+    |       |   |   |       `--RPAREN -> ) [92:47]\n+    |       |   |   `--SEMI -> ; [92:48]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [93:12]\n+    |       |   |   |--LITERAL_DEFAULT -> default [93:12]\n+    |       |   |   |--LAMBDA -> -> [93:20]\n+    |       |   |   `--LITERAL_THROW -> throw [93:23]\n+    |       |   |       |--EXPR -> EXPR [93:29]\n+    |       |   |       |   `--LITERAL_NEW -> new [93:29]\n+    |       |   |       |       |--IDENT -> IllegalArgumentException [93:33]\n+    |       |   |       |       |--LPAREN -> ( [93:57]\n+    |       |   |       |       |--ELIST -> ELIST [93:58]\n+    |       |   |       |       |   `--EXPR -> EXPR [93:58]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"Unknown\" [93:58]\n+    |       |   |       |       `--RPAREN -> ) [93:67]\n+    |       |   |       `--SEMI -> ; [93:68]\n+    |       |   `--RCURLY -> } [94:8]\n+    |       `--RCURLY -> } [95:4]\n+    |--METHOD_DEF -> METHOD_DEF [97:4]\n+    |   |--MODIFIERS -> MODIFIERS [97:4]\n+    |   |--TYPE -> TYPE [97:4]\n+    |   |   `--LITERAL_INT -> int [97:4]\n+    |   |--IDENT -> methodCalls [97:8]\n+    |   |--LPAREN -> ( [97:19]\n+    |   |--PARAMETERS -> PARAMETERS [97:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [97:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [97:20]\n+    |   |       |--TYPE -> TYPE [97:20]\n+    |   |       |   `--IDENT -> Day [97:20]\n+    |   |       `--IDENT -> day [97:24]\n+    |   |--RPAREN -> ) [97:27]\n+    |   `--SLIST -> { [97:29]\n+    |       |--LITERAL_RETURN -> return [98:8]\n+    |       |   |--EXPR -> EXPR [98:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [98:15]\n+    |       |   |       |--LPAREN -> ( [98:22]\n+    |       |   |       |--EXPR -> EXPR [98:23]\n+    |       |   |       |   `--IDENT -> day [98:23]\n+    |       |   |       |--RPAREN -> ) [98:26]\n+    |       |   |       |--LCURLY -> { [98:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [99:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [99:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [99:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [99:17]\n+    |       |   |       |   |   |--COMMA -> , [99:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [99:22]\n+    |       |   |       |   |       `--IDENT -> TUE [99:22]\n+    |       |   |       |   |--LAMBDA -> -> [99:26]\n+    |       |   |       |   |--EXPR -> EXPR [99:42]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [99:42]\n+    |       |   |       |   |       |--DOT -> . [99:33]\n+    |       |   |       |   |       |   |--IDENT -> Math [99:29]\n+    |       |   |       |   |       |   `--IDENT -> addExact [99:34]\n+    |       |   |       |   |       |--ELIST -> ELIST [99:43]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [99:43]\n+    |       |   |       |   |       |   |   `--NUM_INT -> 0 [99:43]\n+    |       |   |       |   |       |   |--COMMA -> , [99:44]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [99:46]\n+    |       |   |       |   |       |       `--NUM_INT -> 1 [99:46]\n+    |       |   |       |   |       `--RPAREN -> ) [99:47]\n+    |       |   |       |   `--SEMI -> ; [99:48]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [100:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [100:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [100:17]\n+    |       |   |       |   |       `--IDENT -> WED [100:17]\n+    |       |   |       |   |--LAMBDA -> -> [100:21]\n+    |       |   |       |   |--EXPR -> EXPR [100:37]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [100:37]\n+    |       |   |       |   |       |--DOT -> . [100:28]\n+    |       |   |       |   |       |   |--IDENT -> Math [100:24]\n+    |       |   |       |   |       |   `--IDENT -> addExact [100:29]\n+    |       |   |       |   |       |--ELIST -> ELIST [100:38]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [100:38]\n+    |       |   |       |   |       |   |   `--NUM_INT -> 1 [100:38]\n+    |       |   |       |   |       |   |--COMMA -> , [100:39]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [100:41]\n+    |       |   |       |   |       |       `--NUM_INT -> 1 [100:41]\n+    |       |   |       |   |       `--RPAREN -> ) [100:42]\n+    |       |   |       |   `--SEMI -> ; [100:43]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [101:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [101:12]\n+    |       |   |       |   |--LAMBDA -> -> [101:20]\n+    |       |   |       |   `--SLIST -> { [101:23]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [102:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [102:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [102:35]\n+    |       |   |       |       |   |       |--DOT -> . [102:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [102:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [102:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [102:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [102:36]\n+    |       |   |       |       |   |       |   |   `--NUM_INT -> 2 [102:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [102:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [102:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 1 [102:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [102:40]\n+    |       |   |       |       |   `--SEMI -> ; [102:41]\n+    |       |   |       |       `--RCURLY -> } [103:12]\n+    |       |   |       `--RCURLY -> } [104:8]\n+    |       |   `--SEMI -> ; [104:9]\n+    |       `--RCURLY -> } [105:4]\n+    |--METHOD_DEF -> METHOD_DEF [107:4]\n+    |   |--MODIFIERS -> MODIFIERS [107:4]\n+    |   |--TYPE -> TYPE [107:4]\n+    |   |   `--LITERAL_INT -> int [107:4]\n+    |   |--IDENT -> yieldAcceptsExpressions [107:8]\n+    |   |--LPAREN -> ( [107:31]\n+    |   |--PARAMETERS -> PARAMETERS [107:32]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [107:32]\n+    |   |       |--MODIFIERS -> MODIFIERS [107:32]\n+    |   |       |--TYPE -> TYPE [107:32]\n+    |   |       |   `--IDENT -> Day [107:32]\n+    |   |       `--IDENT -> day [107:36]\n+    |   |--RPAREN -> ) [107:39]\n+    |   `--SLIST -> { [107:41]\n+    |       |--LITERAL_RETURN -> return [108:8]\n+    |       |   |--EXPR -> EXPR [108:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [108:15]\n+    |       |   |       |--LPAREN -> ( [108:22]\n+    |       |   |       |--EXPR -> EXPR [108:23]\n+    |       |   |       |   `--IDENT -> day [108:23]\n+    |       |   |       |--RPAREN -> ) [108:26]\n+    |       |   |       |--LCURLY -> { [108:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [109:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [109:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [109:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [109:17]\n+    |       |   |       |   |   |--COMMA -> , [109:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [109:22]\n+    |       |   |       |   |       `--IDENT -> TUE [109:22]\n+    |       |   |       |   |--LAMBDA -> -> [109:26]\n+    |       |   |       |   |--EXPR -> EXPR [109:29]\n+    |       |   |       |   |   `--NUM_INT -> 0 [109:29]\n+    |       |   |       |   `--SEMI -> ; [109:30]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [110:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [110:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [110:17]\n+    |       |   |       |   |       `--IDENT -> WED [110:17]\n+    |       |   |       |   |--LAMBDA -> -> [110:21]\n+    |       |   |       |   |--EXPR -> EXPR [110:24]\n+    |       |   |       |   |   `--NUM_INT -> 1 [110:24]\n+    |       |   |       |   `--SEMI -> ; [110:25]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [111:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [111:12]\n+    |       |   |       |   |--LAMBDA -> -> [111:20]\n+    |       |   |       |   |--EXPR -> EXPR [111:51]\n+    |       |   |       |   |   `--QUESTION -> ? [111:51]\n+    |       |   |       |   |       |--GT -> > [111:47]\n+    |       |   |       |   |       |   |--METHOD_CALL -> ( [111:44]\n+    |       |   |       |   |       |   |   |--DOT -> . [111:37]\n+    |       |   |       |   |       |   |   |   |--METHOD_CALL -> ( [111:35]\n+    |       |   |       |   |       |   |   |   |   |--DOT -> . [111:26]\n+    |       |   |       |   |       |   |   |   |   |   |--IDENT -> day [111:23]\n+    |       |   |       |   |       |   |   |   |   |   `--IDENT -> toString [111:27]\n+    |       |   |       |   |       |   |   |   |   |--ELIST -> ELIST [111:36]\n+    |       |   |       |   |       |   |   |   |   `--RPAREN -> ) [111:36]\n+    |       |   |       |   |       |   |   |   `--IDENT -> length [111:38]\n+    |       |   |       |   |       |   |   |--ELIST -> ELIST [111:45]\n+    |       |   |       |   |       |   |   `--RPAREN -> ) [111:45]\n+    |       |   |       |   |       |   `--NUM_INT -> 5 [111:49]\n+    |       |   |       |   |       |--NUM_INT -> 1 [111:53]\n+    |       |   |       |   |       |--COLON -> : [111:55]\n+    |       |   |       |   |       `--NUM_INT -> 0 [111:57]\n+    |       |   |       |   `--SEMI -> ; [111:58]\n+    |       |   |       `--RCURLY -> } [112:8]\n+    |       |   `--SEMI -> ; [112:9]\n+    |       `--RCURLY -> } [113:4]\n+    |--METHOD_DEF -> METHOD_DEF [115:4]\n+    |   |--MODIFIERS -> MODIFIERS [115:4]\n+    |   |--TYPE -> TYPE [115:4]\n+    |   |   `--LITERAL_INT -> int [115:4]\n+    |   |--IDENT -> complexCase [115:8]\n+    |   |--LPAREN -> ( [115:19]\n+    |   |--PARAMETERS -> PARAMETERS [115:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [115:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [115:20]\n+    |   |       |--TYPE -> TYPE [115:20]\n+    |   |       |   `--IDENT -> Day [115:20]\n+    |   |       `--IDENT -> day [115:24]\n+    |   |--RPAREN -> ) [115:27]\n+    |   `--SLIST -> { [115:29]\n+    |       |--LITERAL_RETURN -> return [116:8]\n+    |       |   |--EXPR -> EXPR [116:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [116:15]\n+    |       |   |       |--LPAREN -> ( [116:22]\n+    |       |   |       |--EXPR -> EXPR [116:23]\n+    |       |   |       |   `--IDENT -> day [116:23]\n+    |       |   |       |--RPAREN -> ) [116:26]\n+    |       |   |       |--LCURLY -> { [116:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [117:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [117:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [117:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [117:17]\n+    |       |   |       |   |   |--COMMA -> , [117:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [117:22]\n+    |       |   |       |   |       `--IDENT -> TUE [117:22]\n+    |       |   |       |   |--LAMBDA -> -> [117:26]\n+    |       |   |       |   `--SLIST -> { [117:29]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [118:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [118:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [118:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [118:16]\n+    |       |   |       |       |   |--IDENT -> l [118:20]\n+    |       |   |       |       |   `--ASSIGN -> = [118:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [118:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [118:45]\n+    |       |   |       |       |               |--DOT -> . [118:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [118:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [118:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [118:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [118:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [118:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [118:37]\n+    |       |   |       |       |               |   `--IDENT -> length [118:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [118:46]\n+    |       |   |       |       |               `--RPAREN -> ) [118:46]\n+    |       |   |       |       |--SEMI -> ; [118:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [119:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [119:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [119:35]\n+    |       |   |       |       |   |       |--DOT -> . [119:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [119:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [119:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [119:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [119:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [119:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [119:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [119:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 0 [119:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [119:40]\n+    |       |   |       |       |   `--SEMI -> ; [119:41]\n+    |       |   |       |       `--RCURLY -> } [120:12]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [121:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [121:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [121:17]\n+    |       |   |       |   |       `--IDENT -> WED [121:17]\n+    |       |   |       |   |--LAMBDA -> -> [121:21]\n+    |       |   |       |   `--SLIST -> { [121:24]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [122:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [122:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [122:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [122:16]\n+    |       |   |       |       |   |--IDENT -> l [122:20]\n+    |       |   |       |       |   `--ASSIGN -> = [122:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [122:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [122:45]\n+    |       |   |       |       |               |--DOT -> . [122:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [122:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [122:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [122:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [122:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [122:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [122:37]\n+    |       |   |       |       |               |   `--IDENT -> length [122:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [122:46]\n+    |       |   |       |       |               `--RPAREN -> ) [122:46]\n+    |       |   |       |       |--SEMI -> ; [122:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [123:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [123:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [123:35]\n+    |       |   |       |       |   |       |--DOT -> . [123:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [123:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [123:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [123:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [123:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [123:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [123:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [123:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 1 [123:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [123:40]\n+    |       |   |       |       |   `--SEMI -> ; [123:41]\n+    |       |   |       |       `--RCURLY -> } [124:12]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [125:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [125:12]\n+    |       |   |       |   |--LAMBDA -> -> [125:20]\n+    |       |   |       |   `--SLIST -> { [125:23]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [126:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [126:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [126:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [126:16]\n+    |       |   |       |       |   |--IDENT -> l [126:20]\n+    |       |   |       |       |   `--ASSIGN -> = [126:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [126:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [126:45]\n+    |       |   |       |       |               |--DOT -> . [126:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [126:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [126:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [126:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [126:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [126:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [126:37]\n+    |       |   |       |       |               |   `--IDENT -> length [126:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [126:46]\n+    |       |   |       |       |               `--RPAREN -> ) [126:46]\n+    |       |   |       |       |--SEMI -> ; [126:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [127:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [127:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [127:35]\n+    |       |   |       |       |   |       |--DOT -> . [127:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [127:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [127:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [127:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [127:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [127:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [127:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [127:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 2 [127:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [127:40]\n+    |       |   |       |       |   `--SEMI -> ; [127:41]\n+    |       |   |       |       `--RCURLY -> } [128:12]\n+    |       |   |       `--RCURLY -> } [129:8]\n+    |       |   `--SEMI -> ; [129:9]\n+    |       `--RCURLY -> } [130:4]\n+    |--METHOD_DEF -> METHOD_DEF [132:4]\n+    |   |--MODIFIERS -> MODIFIERS [132:4]\n+    |   |--TYPE -> TYPE [132:4]\n+    |   |   `--LITERAL_INT -> int [132:4]\n+    |   |--IDENT -> arithmetic [132:8]\n+    |   |--LPAREN -> ( [132:18]\n+    |   |--PARAMETERS -> PARAMETERS [132:19]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [132:19]\n+    |   |       |--MODIFIERS -> MODIFIERS [132:19]\n+    |   |       |--TYPE -> TYPE [132:19]\n+    |   |       |   `--IDENT -> Day [132:19]\n+    |   |       `--IDENT -> day [132:23]\n+    |   |--RPAREN -> ) [132:26]\n+    |   `--SLIST -> { [132:28]\n+    |       |--LITERAL_RETURN -> return [133:8]\n+    |       |   |--EXPR -> EXPR [138:10]\n+    |       |   |   `--MOD -> % [138:10]\n+    |       |   |       |--LITERAL_SWITCH -> switch [133:15]\n+    |       |   |       |   |--LPAREN -> ( [133:22]\n+    |       |   |       |   |--EXPR -> EXPR [133:23]\n+    |       |   |       |   |   `--IDENT -> day [133:23]\n+    |       |   |       |   |--RPAREN -> ) [133:26]\n+    |       |   |       |   |--LCURLY -> { [133:28]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [134:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [134:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [134:17]\n+    |       |   |       |   |   |   |   `--IDENT -> MON [134:17]\n+    |       |   |       |   |   |   |--COMMA -> , [134:20]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [134:22]\n+    |       |   |       |   |   |   |   `--IDENT -> FRI [134:22]\n+    |       |   |       |   |   |   |--COMMA -> , [134:25]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [134:27]\n+    |       |   |       |   |   |       `--IDENT -> SUN [134:27]\n+    |       |   |       |   |   |--LAMBDA -> -> [134:31]\n+    |       |   |       |   |   |--EXPR -> EXPR [134:34]\n+    |       |   |       |   |   |   `--NUM_INT -> 6 [134:34]\n+    |       |   |       |   |   `--SEMI -> ; [134:35]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [135:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [135:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [135:17]\n+    |       |   |       |   |   |       `--IDENT -> TUE [135:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [135:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [135:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 7 [135:24]\n+    |       |   |       |   |   `--SEMI -> ; [135:25]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [136:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [136:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [136:17]\n+    |       |   |       |   |   |   |   `--IDENT -> THU [136:17]\n+    |       |   |       |   |   |   |--COMMA -> , [136:20]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [136:22]\n+    |       |   |       |   |   |       `--IDENT -> SAT [136:22]\n+    |       |   |       |   |   |--LAMBDA -> -> [136:26]\n+    |       |   |       |   |   |--EXPR -> EXPR [136:29]\n+    |       |   |       |   |   |   `--NUM_INT -> 8 [136:29]\n+    |       |   |       |   |   `--SEMI -> ; [136:30]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [137:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [137:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [137:17]\n+    |       |   |       |   |   |       `--IDENT -> WED [137:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [137:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [137:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 9 [137:24]\n+    |       |   |       |   |   `--SEMI -> ; [137:25]\n+    |       |   |       |   `--RCURLY -> } [138:8]\n+    |       |   |       `--NUM_INT -> 2 [138:12]\n+    |       |   `--SEMI -> ; [138:13]\n+    |       `--RCURLY -> } [139:4]\n+    |--METHOD_DEF -> METHOD_DEF [141:4]\n+    |   |--MODIFIERS -> MODIFIERS [141:4]\n+    |   |--TYPE -> TYPE [141:4]\n+    |   |   `--LITERAL_INT -> int [141:4]\n+    |   |--IDENT -> signArithmetic [141:8]\n+    |   |--LPAREN -> ( [141:22]\n+    |   |--PARAMETERS -> PARAMETERS [141:23]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [141:23]\n+    |   |       |--MODIFIERS -> MODIFIERS [141:23]\n+    |   |       |--TYPE -> TYPE [141:23]\n+    |   |       |   `--IDENT -> Day [141:23]\n+    |   |       `--IDENT -> day [141:27]\n+    |   |--RPAREN -> ) [141:30]\n+    |   `--SLIST -> { [141:32]\n+    |       |--LITERAL_RETURN -> return [142:8]\n+    |       |   |--EXPR -> EXPR [142:15]\n+    |       |   |   `--UNARY_MINUS -> - [142:15]\n+    |       |   |       `--LITERAL_SWITCH -> switch [142:16]\n+    |       |   |           |--LPAREN -> ( [142:23]\n+    |       |   |           |--EXPR -> EXPR [142:24]\n+    |       |   |           |   `--IDENT -> day [142:24]\n+    |       |   |           |--RPAREN -> ) [142:27]\n+    |       |   |           |--LCURLY -> { [142:29]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [143:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [143:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [143:17]\n+    |       |   |           |   |   |   `--IDENT -> MON [143:17]\n+    |       |   |           |   |   |--COMMA -> , [143:20]\n+    |       |   |           |   |   |--EXPR -> EXPR [143:22]\n+    |       |   |           |   |   |   `--IDENT -> FRI [143:22]\n+    |       |   |           |   |   |--COMMA -> , [143:25]\n+    |       |   |           |   |   `--EXPR -> EXPR [143:27]\n+    |       |   |           |   |       `--IDENT -> SUN [143:27]\n+    |       |   |           |   |--LAMBDA -> -> [143:31]\n+    |       |   |           |   |--EXPR -> EXPR [143:34]\n+    |       |   |           |   |   `--NUM_INT -> 6 [143:34]\n+    |       |   |           |   `--SEMI -> ; [143:35]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [144:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [144:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [144:17]\n+    |       |   |           |   |       `--IDENT -> TUE [144:17]\n+    |       |   |           |   |--LAMBDA -> -> [144:21]\n+    |       |   |           |   |--EXPR -> EXPR [144:24]\n+    |       |   |           |   |   `--NUM_INT -> 7 [144:24]\n+    |       |   |           |   `--SEMI -> ; [144:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [145:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [145:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [145:17]\n+    |       |   |           |   |   |   `--IDENT -> THU [145:17]\n+    |       |   |           |   |   |--COMMA -> , [145:20]\n+    |       |   |           |   |   `--EXPR -> EXPR [145:22]\n+    |       |   |           |   |       `--IDENT -> SAT [145:22]\n+    |       |   |           |   |--LAMBDA -> -> [145:26]\n+    |       |   |           |   |--EXPR -> EXPR [145:29]\n+    |       |   |           |   |   `--NUM_INT -> 8 [145:29]\n+    |       |   |           |   `--SEMI -> ; [145:30]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [146:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [146:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [146:17]\n+    |       |   |           |   |       `--IDENT -> WED [146:17]\n+    |       |   |           |   |--LAMBDA -> -> [146:21]\n+    |       |   |           |   |--EXPR -> EXPR [146:24]\n+    |       |   |           |   |   `--NUM_INT -> 9 [146:24]\n+    |       |   |           |   `--SEMI -> ; [146:25]\n+    |       |   |           `--RCURLY -> } [147:8]\n+    |       |   `--SEMI -> ; [147:9]\n+    |       `--RCURLY -> } [148:4]\n+    |--METHOD_DEF -> METHOD_DEF [150:4]\n+    |   |--MODIFIERS -> MODIFIERS [150:4]\n+    |   |--TYPE -> TYPE [150:4]\n+    |   |   `--LITERAL_INT -> int [150:4]\n+    |   |--IDENT -> usedOnBothSidesOfArithmeticExpression [150:8]\n+    |   |--LPAREN -> ( [150:45]\n+    |   |--PARAMETERS -> PARAMETERS [150:46]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [150:46]\n+    |   |       |--MODIFIERS -> MODIFIERS [150:46]\n+    |   |       |--TYPE -> TYPE [150:46]\n+    |   |       |   `--IDENT -> Day [150:46]\n+    |   |       `--IDENT -> day [150:50]\n+    |   |--RPAREN -> ) [150:53]\n+    |   `--SLIST -> { [150:55]\n+    |       |--LITERAL_RETURN -> return [151:8]\n+    |       |   |--EXPR -> EXPR [155:10]\n+    |       |   |   `--STAR -> * [155:10]\n+    |       |   |       |--LITERAL_SWITCH -> switch [151:15]\n+    |       |   |       |   |--LPAREN -> ( [151:22]\n+    |       |   |       |   |--EXPR -> EXPR [151:23]\n+    |       |   |       |   |   `--IDENT -> day [151:23]\n+    |       |   |       |   |--RPAREN -> ) [151:26]\n+    |       |   |       |   |--LCURLY -> { [151:28]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [152:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [152:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [152:17]\n+    |       |   |       |   |   |   |   `--IDENT -> MON [152:17]\n+    |       |   |       |   |   |   |--COMMA -> , [152:20]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [152:22]\n+    |       |   |       |   |   |       `--IDENT -> TUE [152:22]\n+    |       |   |       |   |   |--LAMBDA -> -> [152:26]\n+    |       |   |       |   |   |--EXPR -> EXPR [152:29]\n+    |       |   |       |   |   |   `--NUM_INT -> 0 [152:29]\n+    |       |   |       |   |   `--SEMI -> ; [152:30]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [153:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [153:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [153:17]\n+    |       |   |       |   |   |       `--IDENT -> WED [153:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [153:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [153:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 1 [153:24]\n+    |       |   |       |   |   `--SEMI -> ; [153:25]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [154:12]\n+    |       |   |       |   |   |--LITERAL_DEFAULT -> default [154:12]\n+    |       |   |       |   |   |--LAMBDA -> -> [154:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [154:23]\n+    |       |   |       |   |   |   `--NUM_INT -> 2 [154:23]\n+    |       |   |       |   |   `--SEMI -> ; [154:24]\n+    |       |   |       |   `--RCURLY -> } [155:8]\n+    |       |   |       `--LITERAL_SWITCH -> switch [155:12]\n+    |       |   |           |--LPAREN -> ( [155:19]\n+    |       |   |           |--EXPR -> EXPR [155:20]\n+    |       |   |           |   `--IDENT -> day [155:20]\n+    |       |   |           |--RPAREN -> ) [155:23]\n+    |       |   |           |--LCURLY -> { [155:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [156:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [156:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [156:17]\n+    |       |   |           |   |   |   `--IDENT -> WED [156:17]\n+    |       |   |           |   |   |--COMMA -> , [156:20]\n+    |       |   |           |   |   `--EXPR -> EXPR [156:22]\n+    |       |   |           |   |       `--IDENT -> THU [156:22]\n+    |       |   |           |   |--LAMBDA -> -> [156:26]\n+    |       |   |           |   |--EXPR -> EXPR [156:29]\n+    |       |   |           |   |   `--NUM_INT -> 3 [156:29]\n+    |       |   |           |   `--SEMI -> ; [156:30]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [157:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [157:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [157:17]\n+    |       |   |           |   |       `--IDENT -> FRI [157:17]\n+    |       |   |           |   |--LAMBDA -> -> [157:21]\n+    |       |   |           |   |--EXPR -> EXPR [157:24]\n+    |       |   |           |   |   `--NUM_INT -> 4 [157:24]\n+    |       |   |           |   `--SEMI -> ; [157:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [158:12]\n+    |       |   |           |   |--LITERAL_DEFAULT -> default [158:12]\n+    |       |   |           |   |--LAMBDA -> -> [158:20]\n+    |       |   |           |   |--EXPR -> EXPR [158:23]\n+    |       |   |           |   |   `--NUM_INT -> 5 [158:23]\n+    |       |   |           |   `--SEMI -> ; [158:24]\n+    |       |   |           `--RCURLY -> } [159:8]\n+    |       |   `--SEMI -> ; [159:9]\n+    |       `--RCURLY -> } [160:4]\n+    |--INSTANCE_INIT -> INSTANCE_INIT [162:4]\n+    |   `--SLIST -> { [162:4]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [163:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [163:8]\n+    |       |   |--TYPE -> TYPE [163:8]\n+    |       |   |   `--IDENT -> Integer [163:8]\n+    |       |   |--IDENT -> i [163:16]\n+    |       |   `--ASSIGN -> = [163:18]\n+    |       |       `--EXPR -> EXPR [163:20]\n+    |       |           `--NUM_INT -> 0 [163:20]\n+    |       |--SEMI -> ; [163:21]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [164:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [164:8]\n+    |       |   |--TYPE -> TYPE [164:8]\n+    |       |   |   `--IDENT -> Object [164:8]\n+    |       |   |--IDENT -> o1 [164:15]\n+    |       |   `--ASSIGN -> = [164:18]\n+    |       |       `--EXPR -> EXPR [164:20]\n+    |       |           `--STRING_LITERAL -> \"o1\" [164:20]\n+    |       |--SEMI -> ; [164:24]\n+    |       |--LITERAL_IF -> if [166:8]\n+    |       |   |--LPAREN -> ( [166:11]\n+    |       |   |--EXPR -> EXPR [166:12]\n+    |       |   |   `--LNOT -> ! [166:12]\n+    |       |   |       `--LITERAL_SWITCH -> switch [166:13]\n+    |       |   |           |--LPAREN -> ( [166:20]\n+    |       |   |           |--EXPR -> EXPR [166:21]\n+    |       |   |           |   `--IDENT -> i [166:21]\n+    |       |   |           |--RPAREN -> ) [166:22]\n+    |       |   |           |--LCURLY -> { [166:24]\n+    |       |   |           |--CASE_GROUP -> CASE_GROUP [167:12]\n+    |       |   |           |   |--LITERAL_DEFAULT -> default [167:12]\n+    |       |   |           |   |   `--COLON -> : [167:19]\n+    |       |   |           |   `--SLIST -> SLIST [168:16]\n+    |       |   |           |       |--LITERAL_IF -> if [168:16]\n+    |       |   |           |       |   |--LPAREN -> ( [168:19]\n+    |       |   |           |       |   |--EXPR -> EXPR [168:20]\n+    |       |   |           |       |   |   `--LNOT -> ! [168:20]\n+    |       |   |           |       |   |       |--LPAREN -> ( [168:21]\n+    |       |   |           |       |   |       |--LITERAL_INSTANCEOF -> instanceof [168:25]\n+    |       |   |           |       |   |       |   |--IDENT -> o1 [168:22]\n+    |       |   |           |       |   |       |   `--PATTERN_VARIABLE_DEF -> PATTERN_VARIABLE_DEF [168:36]\n+    |       |   |           |       |   |       |       |--TYPE -> TYPE [168:36]\n+    |       |   |           |       |   |       |       |   `--IDENT -> String [168:36]\n+    |       |   |           |       |   |       |       `--IDENT -> str [168:43]\n+    |       |   |           |       |   |       `--RPAREN -> ) [168:46]\n+    |       |   |           |       |   |--RPAREN -> ) [168:47]\n+    |       |   |           |       |   `--SLIST -> { [168:49]\n+    |       |   |           |       |       |--LITERAL_YIELD -> yield [169:20]\n+    |       |   |           |       |       |   |--EXPR -> EXPR [169:26]\n+    |       |   |           |       |       |   |   `--LITERAL_FALSE -> false [169:26]\n+    |       |   |           |       |       |   `--SEMI -> ; [169:31]\n+    |       |   |           |       |       `--RCURLY -> } [170:16]\n+    |       |   |           |       |--LITERAL_IF -> if [171:16]\n+    |       |   |           |       |   |--LPAREN -> ( [171:19]\n+    |       |   |           |       |   |--EXPR -> EXPR [171:31]\n+    |       |   |           |       |   |   `--METHOD_CALL -> ( [171:31]\n+    |       |   |           |       |   |       |--DOT -> . [171:23]\n+    |       |   |           |       |   |       |   |--IDENT -> str [171:20]\n+    |       |   |           |       |   |       |   `--IDENT -> isEmpty [171:24]\n+    |       |   |           |       |   |       |--ELIST -> ELIST [171:32]\n+    |       |   |           |       |   |       `--RPAREN -> ) [171:32]\n+    |       |   |           |       |   |--RPAREN -> ) [171:33]\n+    |       |   |           |       |   `--SLIST -> { [171:35]\n+    |       |   |           |       |       |--LITERAL_YIELD -> yield [172:20]\n+    |       |   |           |       |       |   |--EXPR -> EXPR [172:26]\n+    |       |   |           |       |       |   |   `--LITERAL_TRUE -> true [172:26]\n+    |       |   |           |       |       |   `--SEMI -> ; [172:30]\n+    |       |   |           |       |       `--RCURLY -> } [173:16]\n+    |       |   |           |       `--LITERAL_YIELD -> yield [174:16]\n+    |       |   |           |           |--EXPR -> EXPR [174:22]\n+    |       |   |           |           |   `--LITERAL_TRUE -> true [174:22]\n+    |       |   |           |           `--SEMI -> ; [174:26]\n+    |       |   |           `--RCURLY -> } [175:8]\n+    |       |   |--RPAREN -> ) [175:9]\n+    |       |   `--SLIST -> { [175:11]\n+    |       |       |--LITERAL_THROW -> throw [176:12]\n+    |       |       |   |--EXPR -> EXPR [176:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [176:18]\n+    |       |       |   |       |--IDENT -> AssertionError [176:22]\n+    |       |       |   |       |--LPAREN -> ( [176:36]\n+    |       |       |   |       |--ELIST -> ELIST [176:37]\n+    |       |       |   |       `--RPAREN -> ) [176:37]\n+    |       |       |   `--SEMI -> ; [176:38]\n+    |       |       `--RCURLY -> } [177:8]\n+    |       `--RCURLY -> } [178:4]\n+    |--METHOD_DEF -> METHOD_DEF [180:4]\n+    |   |--MODIFIERS -> MODIFIERS [180:4]\n+    |   |   |--LITERAL_PUBLIC -> public [180:4]\n+    |   |   `--LITERAL_STATIC -> static [180:11]\n+    |   |--TYPE -> TYPE [180:18]\n+    |   |   `--LITERAL_VOID -> void [180:18]\n+    |   |--IDENT -> main [180:23]\n+    |   |--LPAREN -> ( [180:27]\n+    |   |--PARAMETERS -> PARAMETERS [180:28]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [180:28]\n+    |   |       |--MODIFIERS -> MODIFIERS [180:28]\n+    |   |       |--TYPE -> TYPE [180:28]\n+    |   |       |   `--IDENT -> String [180:28]\n+    |   |       |--ELLIPSIS -> ... [180:34]\n+    |   |       `--IDENT -> args [180:38]\n+    |   |--RPAREN -> ) [180:42]\n+    |   `--SLIST -> { [180:44]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [181:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [181:8]\n+    |       |   |--TYPE -> TYPE [181:8]\n+    |       |   |   `--IDENT -> T [181:8]\n+    |       |   |--IDENT -> t [181:10]\n+    |       |   `--ASSIGN -> = [181:12]\n+    |       |       `--EXPR -> EXPR [181:15]\n+    |       |           `--DOT -> . [181:15]\n+    |       |               |--IDENT -> T [181:14]\n+    |       |               `--IDENT -> B [181:16]\n+    |       |--SEMI -> ; [181:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [182:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [182:8]\n+    |       |   |--TYPE -> TYPE [182:8]\n+    |       |   |   `--LITERAL_INT -> int [182:8]\n+    |       |   |--IDENT -> a [182:12]\n+    |       |   `--ASSIGN -> = [182:14]\n+    |       |       `--EXPR -> EXPR [182:16]\n+    |       |           `--NUM_INT -> 8 [182:16]\n+    |       |--SEMI -> ; [182:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [183:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [183:8]\n+    |       |   |--TYPE -> TYPE [183:8]\n+    |       |   |   `--LITERAL_INT -> int [183:8]\n+    |       |   `--IDENT -> x [183:12]\n+    |       |--SEMI -> ; [183:13]\n+    |       |--EXPR -> EXPR [185:26]\n+    |       |   `--METHOD_CALL -> ( [185:26]\n+    |       |       |--DOT -> . [185:18]\n+    |       |       |   |--DOT -> . [185:14]\n+    |       |       |   |   |--IDENT -> System [185:8]\n+    |       |       |   |   `--IDENT -> out [185:15]\n+    |       |       |   `--IDENT -> println [185:19]\n+    |       |       |--ELIST -> ELIST [185:27]\n+    |       |       |   `--EXPR -> EXPR [185:27]\n+    |       |       |       `--STRING_LITERAL -> \"works!\" [185:27]\n+    |       |       `--RPAREN -> ) [185:35]\n+    |       |--SEMI -> ; [185:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [186:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [186:8]\n+    |       |   |--TYPE -> TYPE [186:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [186:8]\n+    |       |   |--IDENT -> t1b [186:16]\n+    |       |   `--ASSIGN -> = [186:20]\n+    |       |       `--EXPR -> EXPR [191:11]\n+    |       |           `--LAND -> && [191:11]\n+    |       |               |--LPAREN -> ( [186:22]\n+    |       |               |--LITERAL_SWITCH -> switch [186:23]\n+    |       |               |   |--LPAREN -> ( [186:30]\n+    |       |               |   |--EXPR -> EXPR [186:31]\n+    |       |               |   |   `--IDENT -> a [186:31]\n+    |       |               |   |--RPAREN -> ) [186:32]\n+    |       |               |   |--LCURLY -> { [186:34]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [187:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [187:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [187:17]\n+    |       |               |   |   |   |   `--NUM_INT -> 0 [187:17]\n+    |       |               |   |   |   `--COLON -> : [187:18]\n+    |       |               |   |   `--SLIST -> SLIST [188:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [188:16]\n+    |       |               |   |           |--EXPR -> EXPR [188:30]\n+    |       |               |   |           |   `--EQUAL -> == [188:30]\n+    |       |               |   |           |       |--LPAREN -> ( [188:22]\n+    |       |               |   |           |       |--ASSIGN -> = [188:25]\n+    |       |               |   |           |       |   |--IDENT -> x [188:23]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [188:27]\n+    |       |               |   |           |       |--RPAREN -> ) [188:28]\n+    |       |               |   |           |       `--NUM_INT -> 1 [188:33]\n+    |       |               |   |           `--SEMI -> ; [188:34]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [189:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [189:12]\n+    |       |               |   |   |   `--COLON -> : [189:19]\n+    |       |               |   |   `--SLIST -> SLIST [190:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [190:16]\n+    |       |               |   |           |--EXPR -> EXPR [190:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [190:22]\n+    |       |               |   |           `--SEMI -> ; [190:27]\n+    |       |               |   `--RCURLY -> } [191:8]\n+    |       |               |--RPAREN -> ) [191:9]\n+    |       |               `--EQUAL -> == [191:16]\n+    |       |                   |--IDENT -> x [191:14]\n+    |       |                   `--NUM_INT -> 1 [191:19]\n+    |       |--SEMI -> ; [191:20]\n+    |       |--LITERAL_TRY -> try [193:8]\n+    |       |   |--SLIST -> { [193:12]\n+    |       |   |   |--VARIABLE_DEF -> VARIABLE_DEF [194:12]\n+    |       |   |   |   |--MODIFIERS -> MODIFIERS [194:12]\n+    |       |   |   |   |--TYPE -> TYPE [194:12]\n+    |       |   |   |   |   `--LITERAL_INT -> int [194:12]\n+    |       |   |   |   |--IDENT -> ii [194:16]\n+    |       |   |   |   `--ASSIGN -> = [194:19]\n+    |       |   |   |       `--EXPR -> EXPR [194:21]\n+    |       |   |   |           `--LITERAL_SWITCH -> switch [194:21]\n+    |       |   |   |               |--LPAREN -> ( [194:28]\n+    |       |   |   |               |--EXPR -> EXPR [194:29]\n+    |       |   |   |               |   `--IDENT -> t [194:29]\n+    |       |   |   |               |--RPAREN -> ) [194:30]\n+    |       |   |   |               |--LCURLY -> { [194:32]\n+    |       |   |   |               |--SWITCH_RULE -> SWITCH_RULE [195:16]\n+    |       |   |   |               |   |--LITERAL_CASE -> case [195:16]\n+    |       |   |   |               |   |   `--EXPR -> EXPR [195:21]\n+    |       |   |   |               |   |       `--IDENT -> A [195:21]\n+    |       |   |   |               |   |--LAMBDA -> -> [195:23]\n+    |       |   |   |               |   |--EXPR -> EXPR [195:26]\n+    |       |   |   |               |   |   `--NUM_INT -> 0 [195:26]\n+    |       |   |   |               |   `--SEMI -> ; [195:27]\n+    |       |   |   |               |--SWITCH_RULE -> SWITCH_RULE [196:16]\n+    |       |   |   |               |   |--LITERAL_DEFAULT -> default [196:16]\n+    |       |   |   |               |   |--LAMBDA -> -> [196:24]\n+    |       |   |   |               |   `--LITERAL_THROW -> throw [196:27]\n+    |       |   |   |               |       |--EXPR -> EXPR [196:33]\n+    |       |   |   |               |       |   `--LITERAL_NEW -> new [196:33]\n+    |       |   |   |               |       |       |--IDENT -> IllegalStateException [196:37]\n+    |       |   |   |               |       |       |--LPAREN -> ( [196:58]\n+    |       |   |   |               |       |       |--ELIST -> ELIST [196:59]\n+    |       |   |   |               |       |       `--RPAREN -> ) [196:59]\n+    |       |   |   |               |       `--SEMI -> ; [196:60]\n+    |       |   |   |               `--RCURLY -> } [197:12]\n+    |       |   |   |--SEMI -> ; [197:13]\n+    |       |   |   |--LITERAL_THROW -> throw [198:12]\n+    |       |   |   |   |--EXPR -> EXPR [198:18]\n+    |       |   |   |   |   `--LITERAL_NEW -> new [198:18]\n+    |       |   |   |   |       |--IDENT -> AssertionError [198:22]\n+    |       |   |   |   |       |--LPAREN -> ( [198:36]\n+    |       |   |   |   |       |--ELIST -> ELIST [198:37]\n+    |       |   |   |   |       |   `--EXPR -> EXPR [198:37]\n+    |       |   |   |   |       |       `--STRING_LITERAL -> \"Expected exception not thrown.\" [198:37]\n+    |       |   |   |   |       `--RPAREN -> ) [198:69]\n+    |       |   |   |   `--SEMI -> ; [198:70]\n+    |       |   |   `--RCURLY -> } [199:8]\n+    |       |   `--LITERAL_CATCH -> catch [199:10]\n+    |       |       |--LPAREN -> ( [199:16]\n+    |       |       |--PARAMETER_DEF -> PARAMETER_DEF [199:17]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [199:17]\n+    |       |       |   |--TYPE -> TYPE [199:17]\n+    |       |       |   |   `--IDENT -> IllegalStateException [199:17]\n+    |       |       |   `--IDENT -> ex [199:39]\n+    |       |       |--RPAREN -> ) [199:41]\n+    |       |       `--SLIST -> { [199:43]\n+    |       |           `--RCURLY -> } [201:8]\n+    |       `--RCURLY -> } [202:4]\n+    |--ENUM_DEF -> ENUM_DEF [204:4]\n+    |   |--MODIFIERS -> MODIFIERS [204:4]\n+    |   |--ENUM -> enum [204:4]\n+    |   |--IDENT -> T [204:9]\n+    |   `--OBJBLOCK -> OBJBLOCK [204:11]\n+    |       |--LCURLY -> { [204:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:8]\n+    |       |   `--IDENT -> A [205:8]\n+    |       |--COMMA -> , [205:9]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:11]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:11]\n+    |       |   `--IDENT -> B [205:11]\n+    |       |--COMMA -> , [205:12]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:14]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:14]\n+    |       |   `--IDENT -> C [205:14]\n+    |       |--SEMI -> ; [205:15]\n+    |       `--RCURLY -> } [206:4]\n+    |--METHOD_DEF -> METHOD_DEF [208:4]\n+    |   |--MODIFIERS -> MODIFIERS [208:4]\n+    |   |   |--LITERAL_PRIVATE -> private [208:4]\n+    |   |   `--LITERAL_STATIC -> static [208:12]\n+    |   |--TYPE -> TYPE [208:19]\n+    |   |   `--LITERAL_BOOLEAN -> boolean [208:19]\n+    |   |--IDENT -> isTrue [208:27]\n+    |   |--LPAREN -> ( [208:33]\n+    |   |--PARAMETERS -> PARAMETERS [208:34]\n+    |   |--RPAREN -> ) [208:34]\n+    |   `--SLIST -> { [208:36]\n+    |       |--LITERAL_RETURN -> return [209:8]\n+    |       |   |--EXPR -> EXPR [209:15]\n+    |       |   |   `--LITERAL_TRUE -> true [209:15]\n+    |       |   `--SEMI -> ; [209:19]\n+    |       `--RCURLY -> } [210:4]\n+    |--STATIC_INIT -> STATIC_INIT [212:4]\n+    |   `--SLIST -> { [212:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [213:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [213:8]\n+    |       |   |--TYPE -> TYPE [213:8]\n+    |       |   |   `--LITERAL_INT -> int [213:8]\n+    |       |   `--IDENT -> x [213:12]\n+    |       |--SEMI -> ; [213:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [215:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [215:8]\n+    |       |   |--TYPE -> TYPE [215:8]\n+    |       |   |   `--LITERAL_INT -> int [215:8]\n+    |       |   |--IDENT -> t7 [215:12]\n+    |       |   `--ASSIGN -> = [215:15]\n+    |       |       `--EXPR -> EXPR [215:45]\n+    |       |           `--METHOD_CALL -> ( [215:45]\n+    |       |               |--DOT -> . [215:42]\n+    |       |               |   |--LITERAL_NEW -> new [215:17]\n+    |       |               |   |   |--IDENT -> DefiniteAssignment1 [215:21]\n+    |       |               |   |   |--LPAREN -> ( [215:40]\n+    |       |               |   |   |--ELIST -> ELIST [215:41]\n+    |       |               |   |   `--RPAREN -> ) [215:41]\n+    |       |               |   `--IDENT -> id [215:43]\n+    |       |               |--ELIST -> ELIST [217:36]\n+    |       |               |   `--EXPR -> EXPR [217:36]\n+    |       |               |       `--QUESTION -> ? [217:36]\n+    |       |               |           |--LAND -> && [217:26]\n+    |       |               |           |   |--LAND -> && [217:10]\n+    |       |               |           |   |   |--LITERAL_SWITCH -> switch [215:46]\n+    |       |               |           |   |   |   |--LPAREN -> ( [215:53]\n+    |       |               |           |   |   |   |--EXPR -> EXPR [215:54]\n+    |       |               |           |   |   |   |   `--NUM_INT -> 0 [215:54]\n+    |       |               |           |   |   |   |--RPAREN -> ) [215:55]\n+    |       |               |           |   |   |   |--LCURLY -> { [215:57]\n+    |       |               |           |   |   |   |--SWITCH_RULE -> SWITCH_RULE [216:12]\n+    |       |               |           |   |   |   |   |--LITERAL_DEFAULT -> default [216:12]\n+    |       |               |           |   |   |   |   |--LAMBDA -> -> [216:20]\n+    |       |               |           |   |   |   |   |--EXPR -> EXPR [216:29]\n+    |       |               |           |   |   |   |   |   `--METHOD_CALL -> ( [216:29]\n+    |       |               |           |   |   |   |   |       |--IDENT -> isTrue [216:23]\n+    |       |               |           |   |   |   |   |       |--ELIST -> ELIST [216:30]\n+    |       |               |           |   |   |   |   |       `--RPAREN -> ) [216:30]\n+    |       |               |           |   |   |   |   `--SEMI -> ; [216:31]\n+    |       |               |           |   |   |   `--RCURLY -> } [217:8]\n+    |       |               |           |   |   `--EQUAL -> == [217:21]\n+    |       |               |           |   |       |--LPAREN -> ( [217:13]\n+    |       |               |           |   |       |--ASSIGN -> = [217:16]\n+    |       |               |           |   |       |   |--IDENT -> x [217:14]\n+    |       |               |           |   |       |   `--NUM_INT -> 1 [217:18]\n+    |       |               |           |   |       |--RPAREN -> ) [217:19]\n+    |       |               |           |   |       `--NUM_INT -> 1 [217:24]\n+    |       |               |           |   `--EQUAL -> == [217:31]\n+    |       |               |           |       |--IDENT -> x [217:29]\n+    |       |               |           |       `--NUM_INT -> 1 [217:34]\n+    |       |               |           |--NUM_INT -> 2 [217:38]\n+    |       |               |           |--COLON -> : [217:40]\n+    |       |               |           `--UNARY_MINUS -> - [217:42]\n+    |       |               |               `--NUM_INT -> 1 [217:43]\n+    |       |               `--RPAREN -> ) [217:44]\n+    |       |--SEMI -> ; [217:45]\n+    |       |--LITERAL_IF -> if [219:8]\n+    |       |   |--LPAREN -> ( [219:11]\n+    |       |   |--EXPR -> EXPR [219:15]\n+    |       |   |   `--NOT_EQUAL -> != [219:15]\n+    |       |   |       |--IDENT -> t7 [219:12]\n+    |       |   |       `--NUM_INT -> 2 [219:18]\n+    |       |   |--RPAREN -> ) [219:19]\n+    |       |   `--SLIST -> { [219:21]\n+    |       |       |--LITERAL_THROW -> throw [220:12]\n+    |       |       |   |--EXPR -> EXPR [220:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [220:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [220:22]\n+    |       |       |   |       |--LPAREN -> ( [220:43]\n+    |       |       |   |       |--ELIST -> ELIST [220:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [220:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [220:44]\n+    |       |       |   |       `--RPAREN -> ) [220:64]\n+    |       |       |   `--SEMI -> ; [220:65]\n+    |       |       `--RCURLY -> } [221:8]\n+    |       `--RCURLY -> } [222:4]\n+    |--STATIC_INIT -> STATIC_INIT [224:4]\n+    |   `--SLIST -> { [224:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [225:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [225:8]\n+    |       |   |--TYPE -> TYPE [225:8]\n+    |       |   |   `--LITERAL_INT -> int [225:8]\n+    |       |   `--IDENT -> x [225:12]\n+    |       |--SEMI -> ; [225:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [226:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [226:8]\n+    |       |   |--TYPE -> TYPE [226:8]\n+    |       |   |   `--IDENT -> T [226:8]\n+    |       |   |--IDENT -> e [226:10]\n+    |       |   `--ASSIGN -> = [226:12]\n+    |       |       `--EXPR -> EXPR [226:15]\n+    |       |           `--DOT -> . [226:15]\n+    |       |               |--IDENT -> T [226:14]\n+    |       |               `--IDENT -> B [226:16]\n+    |       |--SEMI -> ; [226:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [228:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [228:8]\n+    |       |   |--TYPE -> TYPE [228:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [228:8]\n+    |       |   |--IDENT -> t8 [228:16]\n+    |       |   `--ASSIGN -> = [228:19]\n+    |       |       `--EXPR -> EXPR [236:11]\n+    |       |           `--LAND -> && [236:11]\n+    |       |               |--LPAREN -> ( [228:21]\n+    |       |               |--LITERAL_SWITCH -> switch [228:22]\n+    |       |               |   |--LPAREN -> ( [228:29]\n+    |       |               |   |--EXPR -> EXPR [228:30]\n+    |       |               |   |   `--IDENT -> e [228:30]\n+    |       |               |   |--RPAREN -> ) [228:31]\n+    |       |               |   |--LCURLY -> { [228:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [229:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [229:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [229:17]\n+    |       |               |   |   |   |   `--IDENT -> A [229:17]\n+    |       |               |   |   |   `--COLON -> : [229:18]\n+    |       |               |   |   `--SLIST -> SLIST [230:18]\n+    |       |               |   |       |--EXPR -> EXPR [230:18]\n+    |       |               |   |       |   `--ASSIGN -> = [230:18]\n+    |       |               |   |       |       |--IDENT -> x [230:16]\n+    |       |               |   |       |       `--NUM_INT -> 1 [230:20]\n+    |       |               |   |       |--SEMI -> ; [230:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [231:16]\n+    |       |               |   |           |--EXPR -> EXPR [231:22]\n+    |       |               |   |           |   `--LITERAL_TRUE -> true [231:22]\n+    |       |               |   |           `--SEMI -> ; [231:26]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [232:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [232:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [232:17]\n+    |       |               |   |   |   |   `--IDENT -> B [232:17]\n+    |       |               |   |   |   `--COLON -> : [232:18]\n+    |       |               |   |   `--SLIST -> SLIST [233:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [233:16]\n+    |       |               |   |           |--EXPR -> EXPR [233:35]\n+    |       |               |   |           |   `--LOR -> || [233:35]\n+    |       |               |   |           |       |--EQUAL -> == [233:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [233:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [233:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [233:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [233:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [233:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [233:33]\n+    |       |               |   |           |       `--LITERAL_TRUE -> true [233:38]\n+    |       |               |   |           `--SEMI -> ; [233:42]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [234:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [234:12]\n+    |       |               |   |   |   `--COLON -> : [234:19]\n+    |       |               |   |   `--SLIST -> SLIST [235:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [235:16]\n+    |       |               |   |           |--EXPR -> EXPR [235:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [235:22]\n+    |       |               |   |           `--SEMI -> ; [235:27]\n+    |       |               |   `--RCURLY -> } [236:8]\n+    |       |               |--RPAREN -> ) [236:9]\n+    |       |               `--EQUAL -> == [236:16]\n+    |       |                   |--IDENT -> x [236:14]\n+    |       |                   `--NUM_INT -> 1 [236:19]\n+    |       |--SEMI -> ; [236:20]\n+    |       |--LITERAL_IF -> if [238:8]\n+    |       |   |--LPAREN -> ( [238:11]\n+    |       |   |--EXPR -> EXPR [238:12]\n+    |       |   |   `--LNOT -> ! [238:12]\n+    |       |   |       `--IDENT -> t8 [238:13]\n+    |       |   |--RPAREN -> ) [238:15]\n+    |       |   `--SLIST -> { [238:17]\n+    |       |       |--LITERAL_THROW -> throw [239:12]\n+    |       |       |   |--EXPR -> EXPR [239:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [239:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [239:22]\n+    |       |       |   |       |--LPAREN -> ( [239:43]\n+    |       |       |   |       |--ELIST -> ELIST [239:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [239:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [239:44]\n+    |       |       |   |       `--RPAREN -> ) [239:64]\n+    |       |       |   `--SEMI -> ; [239:65]\n+    |       |       `--RCURLY -> } [240:8]\n+    |       `--RCURLY -> } [241:4]\n+    |--STATIC_INIT -> STATIC_INIT [243:4]\n+    |   `--SLIST -> { [243:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [244:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [244:8]\n+    |       |   |--TYPE -> TYPE [244:8]\n+    |       |   |   `--LITERAL_INT -> int [244:8]\n+    |       |   `--IDENT -> x [244:12]\n+    |       |--SEMI -> ; [244:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [245:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [245:8]\n+    |       |   |--TYPE -> TYPE [245:8]\n+    |       |   |   `--IDENT -> T [245:8]\n+    |       |   |--IDENT -> e [245:10]\n+    |       |   `--ASSIGN -> = [245:12]\n+    |       |       `--EXPR -> EXPR [245:15]\n+    |       |           `--DOT -> . [245:15]\n+    |       |               |--IDENT -> T [245:14]\n+    |       |               `--IDENT -> B [245:16]\n+    |       |--SEMI -> ; [245:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [247:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [247:8]\n+    |       |   |--TYPE -> TYPE [247:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [247:8]\n+    |       |   |--IDENT -> t8 [247:16]\n+    |       |   `--ASSIGN -> = [247:19]\n+    |       |       `--EXPR -> EXPR [255:11]\n+    |       |           `--LAND -> && [255:11]\n+    |       |               |--LPAREN -> ( [247:21]\n+    |       |               |--LITERAL_SWITCH -> switch [247:22]\n+    |       |               |   |--LPAREN -> ( [247:29]\n+    |       |               |   |--EXPR -> EXPR [247:30]\n+    |       |               |   |   `--IDENT -> e [247:30]\n+    |       |               |   |--RPAREN -> ) [247:31]\n+    |       |               |   |--LCURLY -> { [247:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [248:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [248:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [248:17]\n+    |       |               |   |   |   |   `--IDENT -> A [248:17]\n+    |       |               |   |   |   `--COLON -> : [248:18]\n+    |       |               |   |   `--SLIST -> SLIST [249:18]\n+    |       |               |   |       |--EXPR -> EXPR [249:18]\n+    |       |               |   |       |   `--ASSIGN -> = [249:18]\n+    |       |               |   |       |       |--IDENT -> x [249:16]\n+    |       |               |   |       |       `--NUM_INT -> 1 [249:20]\n+    |       |               |   |       |--SEMI -> ; [249:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [250:16]\n+    |       |               |   |           |--EXPR -> EXPR [250:28]\n+    |       |               |   |           |   `--METHOD_CALL -> ( [250:28]\n+    |       |               |   |           |       |--IDENT -> isTrue [250:22]\n+    |       |               |   |           |       |--ELIST -> ELIST [250:29]\n+    |       |               |   |           |       `--RPAREN -> ) [250:29]\n+    |       |               |   |           `--SEMI -> ; [250:30]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [251:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [251:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [251:17]\n+    |       |               |   |   |   |   `--IDENT -> B [251:17]\n+    |       |               |   |   |   `--COLON -> : [251:18]\n+    |       |               |   |   `--SLIST -> SLIST [252:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [252:16]\n+    |       |               |   |           |--EXPR -> EXPR [252:35]\n+    |       |               |   |           |   `--LOR -> || [252:35]\n+    |       |               |   |           |       |--EQUAL -> == [252:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [252:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [252:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [252:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [252:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [252:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [252:33]\n+    |       |               |   |           |       `--METHOD_CALL -> ( [252:44]\n+    |       |               |   |           |           |--IDENT -> isTrue [252:38]\n+    |       |               |   |           |           |--ELIST -> ELIST [252:45]\n+    |       |               |   |           |           `--RPAREN -> ) [252:45]\n+    |       |               |   |           `--SEMI -> ; [252:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [253:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [253:12]\n+    |       |               |   |   |   `--COLON -> : [253:19]\n+    |       |               |   |   `--SLIST -> SLIST [254:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [254:16]\n+    |       |               |   |           |--EXPR -> EXPR [254:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [254:22]\n+    |       |               |   |           `--SEMI -> ; [254:27]\n+    |       |               |   `--RCURLY -> } [255:8]\n+    |       |               |--RPAREN -> ) [255:9]\n+    |       |               `--EQUAL -> == [255:16]\n+    |       |                   |--IDENT -> x [255:14]\n+    |       |                   `--NUM_INT -> 1 [255:19]\n+    |       |--SEMI -> ; [255:20]\n+    |       |--LITERAL_IF -> if [257:8]\n+    |       |   |--LPAREN -> ( [257:11]\n+    |       |   |--EXPR -> EXPR [257:12]\n+    |       |   |   `--LNOT -> ! [257:12]\n+    |       |   |       `--IDENT -> t8 [257:13]\n+    |       |   |--RPAREN -> ) [257:15]\n+    |       |   `--SLIST -> { [257:17]\n+    |       |       |--LITERAL_THROW -> throw [258:12]\n+    |       |       |   |--EXPR -> EXPR [258:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [258:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [258:22]\n+    |       |       |   |       |--LPAREN -> ( [258:43]\n+    |       |       |   |       |--ELIST -> ELIST [258:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [258:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [258:44]\n+    |       |       |   |       `--RPAREN -> ) [258:64]\n+    |       |       |   `--SEMI -> ; [258:65]\n+    |       |       `--RCURLY -> } [259:8]\n+    |       |--SLIST -> { [261:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [262:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [262:12]\n+    |       |   |   |--TYPE -> TYPE [262:12]\n+    |       |   |   |   `--IDENT -> T [262:12]\n+    |       |   |   |--IDENT -> y [262:14]\n+    |       |   |   `--ASSIGN -> = [262:16]\n+    |       |   |       `--EXPR -> EXPR [262:19]\n+    |       |   |           `--DOT -> . [262:19]\n+    |       |   |               |--IDENT -> T [262:18]\n+    |       |   |               `--IDENT -> A [262:20]\n+    |       |   |--SEMI -> ; [262:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [264:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [264:12]\n+    |       |   |   |--TYPE -> TYPE [264:12]\n+    |       |   |   |   `--LITERAL_BOOLEAN -> boolean [264:12]\n+    |       |   |   |--IDENT -> t9 [264:20]\n+    |       |   |   `--ASSIGN -> = [264:23]\n+    |       |   |       `--EXPR -> EXPR [272:15]\n+    |       |   |           `--LAND -> && [272:15]\n+    |       |   |               |--LPAREN -> ( [264:25]\n+    |       |   |               |--LITERAL_SWITCH -> switch [264:26]\n+    |       |   |               |   |--LPAREN -> ( [264:33]\n+    |       |   |               |   |--EXPR -> EXPR [264:34]\n+    |       |   |               |   |   `--IDENT -> y [264:34]\n+    |       |   |               |   |--RPAREN -> ) [264:35]\n+    |       |   |               |   |--LCURLY -> { [264:37]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [265:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [265:16]\n+    |       |   |               |   |   |   |--EXPR -> EXPR [265:21]\n+    |       |   |               |   |   |   |   `--IDENT -> A [265:21]\n+    |       |   |               |   |   |   `--COLON -> : [265:22]\n+    |       |   |               |   |   `--SLIST -> SLIST [266:22]\n+    |       |   |               |   |       |--EXPR -> EXPR [266:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [266:22]\n+    |       |   |               |   |       |       |--IDENT -> x [266:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [266:24]\n+    |       |   |               |   |       |--SEMI -> ; [266:25]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [267:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [267:26]\n+    |       |   |               |   |           |   `--LITERAL_TRUE -> true [267:26]\n+    |       |   |               |   |           `--SEMI -> ; [267:30]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [268:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [268:16]\n+    |       |   |               |   |   |   |--EXPR -> EXPR [268:21]\n+    |       |   |               |   |   |   |   `--IDENT -> B [268:21]\n+    |       |   |               |   |   |   `--COLON -> : [268:22]\n+    |       |   |               |   |   `--SLIST -> SLIST [269:20]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [269:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [269:39]\n+    |       |   |               |   |           |   `--LOR -> || [269:39]\n+    |       |   |               |   |           |       |--EQUAL -> == [269:34]\n+    |       |   |               |   |           |       |   |--LPAREN -> ( [269:26]\n+    |       |   |               |   |           |       |   |--ASSIGN -> = [269:29]\n+    |       |   |               |   |           |       |   |   |--IDENT -> x [269:27]\n+    |       |   |               |   |           |       |   |   `--NUM_INT -> 1 [269:31]\n+    |       |   |               |   |           |       |   |--RPAREN -> ) [269:32]\n+    |       |   |               |   |           |       |   `--NUM_INT -> 1 [269:37]\n+    |       |   |               |   |           |       `--LITERAL_TRUE -> true [269:42]\n+    |       |   |               |   |           `--SEMI -> ; [269:46]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [270:16]\n+    |       |   |               |   |   |--LITERAL_DEFAULT -> default [270:16]\n+    |       |   |               |   |   |   `--COLON -> : [270:23]\n+    |       |   |               |   |   `--SLIST -> SLIST [271:20]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [271:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [271:26]\n+    |       |   |               |   |           |   `--LITERAL_FALSE -> false [271:26]\n+    |       |   |               |   |           `--SEMI -> ; [271:31]\n+    |       |   |               |   `--RCURLY -> } [272:12]\n+    |       |   |               |--RPAREN -> ) [272:13]\n+    |       |   |               `--EQUAL -> == [272:20]\n+    |       |   |                   |--IDENT -> x [272:18]\n+    |       |   |                   `--NUM_INT -> 1 [272:23]\n+    |       |   |--SEMI -> ; [272:24]\n+    |       |   |--LITERAL_IF -> if [274:12]\n+    |       |   |   |--LPAREN -> ( [274:15]\n+    |       |   |   |--EXPR -> EXPR [274:16]\n+    |       |   |   |   `--LNOT -> ! [274:16]\n+    |       |   |   |       `--IDENT -> t9 [274:17]\n+    |       |   |   |--RPAREN -> ) [274:19]\n+    |       |   |   `--SLIST -> { [274:21]\n+    |       |   |       |--LITERAL_THROW -> throw [275:16]\n+    |       |   |       |   |--EXPR -> EXPR [275:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [275:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [275:26]\n+    |       |   |       |   |       |--LPAREN -> ( [275:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [275:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [275:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [275:48]\n+    |       |   |       |   |       `--RPAREN -> ) [275:68]\n+    |       |   |       |   `--SEMI -> ; [275:69]\n+    |       |   |       `--RCURLY -> } [276:12]\n+    |       |   `--RCURLY -> } [277:8]\n+    |       |--SLIST -> { [280:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [281:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [281:12]\n+    |       |   |   |--TYPE -> TYPE [281:12]\n+    |       |   |   |   `--IDENT -> T [281:12]\n+    |       |   |   |--IDENT -> y [281:14]\n+    |       |   |   `--ASSIGN -> = [281:16]\n+    |       |   |       `--EXPR -> EXPR [281:19]\n+    |       |   |           `--DOT -> . [281:19]\n+    |       |   |               |--IDENT -> T [281:18]\n+    |       |   |               `--IDENT -> A [281:20]\n+    |       |   |--SEMI -> ; [281:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [283:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [283:12]\n+    |       |   |   |--TYPE -> TYPE [283:12]\n+    |       |   |   |   `--LITERAL_INT -> int [283:12]\n+    |       |   |   |--IDENT -> v [283:16]\n+    |       |   |   `--ASSIGN -> = [283:18]\n+    |       |   |       `--EXPR -> EXPR [283:20]\n+    |       |   |           `--LITERAL_SWITCH -> switch [283:20]\n+    |       |   |               |--LPAREN -> ( [283:27]\n+    |       |   |               |--EXPR -> EXPR [283:28]\n+    |       |   |               |   `--IDENT -> y [283:28]\n+    |       |   |               |--RPAREN -> ) [283:29]\n+    |       |   |               |--LCURLY -> { [283:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [284:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [284:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [284:21]\n+    |       |   |               |   |       `--IDENT -> A [284:21]\n+    |       |   |               |   |--LAMBDA -> -> [284:23]\n+    |       |   |               |   |--EXPR -> EXPR [284:28]\n+    |       |   |               |   |   `--ASSIGN -> = [284:28]\n+    |       |   |               |   |       |--IDENT -> x [284:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [284:30]\n+    |       |   |               |   `--SEMI -> ; [284:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [285:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [285:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [285:21]\n+    |       |   |               |   |       `--IDENT -> B [285:21]\n+    |       |   |               |   |--LAMBDA -> -> [285:23]\n+    |       |   |               |   |--EXPR -> EXPR [285:28]\n+    |       |   |               |   |   `--ASSIGN -> = [285:28]\n+    |       |   |               |   |       |--IDENT -> x [285:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [285:30]\n+    |       |   |               |   `--SEMI -> ; [285:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [286:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [286:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [286:21]\n+    |       |   |               |   |       `--IDENT -> C [286:21]\n+    |       |   |               |   |--LAMBDA -> -> [286:23]\n+    |       |   |               |   |--EXPR -> EXPR [286:28]\n+    |       |   |               |   |   `--ASSIGN -> = [286:28]\n+    |       |   |               |   |       |--IDENT -> x [286:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [286:30]\n+    |       |   |               |   `--SEMI -> ; [286:31]\n+    |       |   |               `--RCURLY -> } [287:12]\n+    |       |   |--SEMI -> ; [287:13]\n+    |       |   |--LITERAL_IF -> if [289:12]\n+    |       |   |   |--LPAREN -> ( [289:15]\n+    |       |   |   |--EXPR -> EXPR [289:23]\n+    |       |   |   |   `--LOR -> || [289:23]\n+    |       |   |   |       |--NOT_EQUAL -> != [289:18]\n+    |       |   |   |       |   |--IDENT -> x [289:16]\n+    |       |   |   |       |   `--NUM_INT -> 0 [289:21]\n+    |       |   |   |       `--NOT_EQUAL -> != [289:28]\n+    |       |   |   |           |--IDENT -> v [289:26]\n+    |       |   |   |           `--NUM_INT -> 0 [289:31]\n+    |       |   |   |--RPAREN -> ) [289:32]\n+    |       |   |   `--SLIST -> { [289:34]\n+    |       |   |       |--LITERAL_THROW -> throw [290:16]\n+    |       |   |       |   |--EXPR -> EXPR [290:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [290:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [290:26]\n+    |       |   |       |   |       |--LPAREN -> ( [290:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [290:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [290:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [290:48]\n+    |       |   |       |   |       `--RPAREN -> ) [290:68]\n+    |       |   |       |   `--SEMI -> ; [290:69]\n+    |       |   |       `--RCURLY -> } [291:12]\n+    |       |   `--RCURLY -> } [292:8]\n+    |       |--SLIST -> { [294:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [295:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [295:12]\n+    |       |   |   |--TYPE -> TYPE [295:12]\n+    |       |   |   |   `--IDENT -> T [295:12]\n+    |       |   |   |--IDENT -> y [295:14]\n+    |       |   |   `--ASSIGN -> = [295:16]\n+    |       |   |       `--EXPR -> EXPR [295:19]\n+    |       |   |           `--DOT -> . [295:19]\n+    |       |   |               |--IDENT -> T [295:18]\n+    |       |   |               `--IDENT -> A [295:20]\n+    |       |   |--SEMI -> ; [295:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [297:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [297:12]\n+    |       |   |   |--TYPE -> TYPE [297:12]\n+    |       |   |   |   `--LITERAL_BOOLEAN -> boolean [297:12]\n+    |       |   |   |--IDENT -> tA [297:20]\n+    |       |   |   `--ASSIGN -> = [297:23]\n+    |       |   |       `--EXPR -> EXPR [310:15]\n+    |       |   |           `--LAND -> && [310:15]\n+    |       |   |               |--LPAREN -> ( [297:25]\n+    |       |   |               |--LITERAL_SWITCH -> switch [297:26]\n+    |       |   |               |   |--LPAREN -> ( [297:33]\n+    |       |   |               |   |--EXPR -> EXPR [297:34]\n+    |       |   |               |   |   `--IDENT -> y [297:34]\n+    |       |   |               |   |--RPAREN -> ) [297:35]\n+    |       |   |               |   |--LCURLY -> { [297:37]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [298:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [298:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [298:21]\n+    |       |   |               |   |   |       `--IDENT -> A [298:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [298:23]\n+    |       |   |               |   |   `--SLIST -> { [298:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [299:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [299:22]\n+    |       |   |               |   |       |       |--IDENT -> x [299:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [299:24]\n+    |       |   |               |   |       |--SEMI -> ; [299:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [300:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [300:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [300:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [300:30]\n+    |       |   |               |   |       `--RCURLY -> } [301:16]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [302:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [302:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [302:21]\n+    |       |   |               |   |   |       `--IDENT -> B [302:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [302:23]\n+    |       |   |               |   |   `--SLIST -> { [302:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [303:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [303:22]\n+    |       |   |               |   |       |       |--IDENT -> x [303:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [303:24]\n+    |       |   |               |   |       |--SEMI -> ; [303:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [304:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [304:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [304:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [304:30]\n+    |       |   |               |   |       `--RCURLY -> } [305:16]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [306:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [306:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [306:21]\n+    |       |   |               |   |   |       `--IDENT -> C [306:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [306:23]\n+    |       |   |               |   |   `--SLIST -> { [306:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [307:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [307:22]\n+    |       |   |               |   |       |       |--IDENT -> x [307:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [307:24]\n+    |       |   |               |   |       |--SEMI -> ; [307:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [308:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [308:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [308:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [308:30]\n+    |       |   |               |   |       `--RCURLY -> } [309:16]\n+    |       |   |               |   `--RCURLY -> } [310:12]\n+    |       |   |               |--RPAREN -> ) [310:13]\n+    |       |   |               `--EQUAL -> == [310:20]\n+    |       |   |                   |--IDENT -> x [310:18]\n+    |       |   |                   `--NUM_INT -> 1 [310:23]\n+    |       |   |--SEMI -> ; [310:24]\n+    |       |   |--LITERAL_IF -> if [312:12]\n+    |       |   |   |--LPAREN -> ( [312:15]\n+    |       |   |   |--EXPR -> EXPR [312:16]\n+    |       |   |   |   `--LNOT -> ! [312:16]\n+    |       |   |   |       `--IDENT -> tA [312:17]\n+    |       |   |   |--RPAREN -> ) [312:19]\n+    |       |   |   `--SLIST -> { [312:21]\n+    |       |   |       |--LITERAL_THROW -> throw [313:16]\n+    |       |   |       |   |--EXPR -> EXPR [313:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [313:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [313:26]\n+    |       |   |       |   |       |--LPAREN -> ( [313:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [313:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [313:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [313:48]\n+    |       |   |       |   |       `--RPAREN -> ) [313:68]\n+    |       |   |       |   `--SEMI -> ; [313:69]\n+    |       |   |       `--RCURLY -> } [314:12]\n+    |       |   `--RCURLY -> } [315:8]\n+    |       `--RCURLY -> } [316:4]\n+    |--STATIC_INIT -> STATIC_INIT [317:4]\n+    |   `--SLIST -> { [317:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [318:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [318:8]\n+    |       |   |   `--FINAL -> final [318:8]\n+    |       |   |--TYPE -> TYPE [318:14]\n+    |       |   |   `--LITERAL_INT -> int [318:14]\n+    |       |   `--IDENT -> x [318:18]\n+    |       |--SEMI -> ; [318:19]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [319:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [319:8]\n+    |       |   |--TYPE -> TYPE [319:8]\n+    |       |   |   `--IDENT -> T [319:8]\n+    |       |   |--IDENT -> e [319:10]\n+    |       |   `--ASSIGN -> = [319:12]\n+    |       |       `--EXPR -> EXPR [319:15]\n+    |       |           `--DOT -> . [319:15]\n+    |       |               |--IDENT -> T [319:14]\n+    |       |               `--IDENT -> C [319:16]\n+    |       |--SEMI -> ; [319:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [321:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [321:8]\n+    |       |   |--TYPE -> TYPE [321:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [321:8]\n+    |       |   |--IDENT -> tA [321:16]\n+    |       |   `--ASSIGN -> = [321:19]\n+    |       |       `--EXPR -> EXPR [325:11]\n+    |       |           `--LOR -> || [325:11]\n+    |       |               |--LPAREN -> ( [321:21]\n+    |       |               |--LITERAL_SWITCH -> switch [321:22]\n+    |       |               |   |--LPAREN -> ( [321:28]\n+    |       |               |   |--EXPR -> EXPR [321:29]\n+    |       |               |   |   `--IDENT -> e [321:29]\n+    |       |               |   |--RPAREN -> ) [321:30]\n+    |       |               |   |--LCURLY -> { [321:32]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [322:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [322:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [322:17]\n+    |       |               |   |   |   |   `--IDENT -> A [322:17]\n+    |       |               |   |   |   `--COLON -> : [322:18]\n+    |       |               |   |   `--SLIST -> SLIST [322:22]\n+    |       |               |   |       |--EXPR -> EXPR [322:22]\n+    |       |               |   |       |   `--ASSIGN -> = [322:22]\n+    |       |               |   |       |       |--IDENT -> x [322:20]\n+    |       |               |   |       |       `--NUM_INT -> 1 [322:24]\n+    |       |               |   |       |--SEMI -> ; [322:25]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [322:27]\n+    |       |               |   |           |--EXPR -> EXPR [322:33]\n+    |       |               |   |           |   `--LITERAL_TRUE -> true [322:33]\n+    |       |               |   |           `--SEMI -> ; [322:37]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [323:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [323:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [323:17]\n+    |       |               |   |   |   |   `--IDENT -> B [323:17]\n+    |       |               |   |   |   `--COLON -> : [323:18]\n+    |       |               |   |   `--SLIST -> SLIST [323:20]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [323:20]\n+    |       |               |   |           |--EXPR -> EXPR [323:39]\n+    |       |               |   |           |   `--LOR -> || [323:39]\n+    |       |               |   |           |       |--EQUAL -> == [323:34]\n+    |       |               |   |           |       |   |--LPAREN -> ( [323:26]\n+    |       |               |   |           |       |   |--ASSIGN -> = [323:29]\n+    |       |               |   |           |       |   |   |--IDENT -> x [323:27]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 2 [323:31]\n+    |       |               |   |           |       |   |--RPAREN -> ) [323:32]\n+    |       |               |   |           |       |   `--NUM_INT -> 2 [323:37]\n+    |       |               |   |           |       `--LITERAL_TRUE -> true [323:42]\n+    |       |               |   |           `--SEMI -> ; [323:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [324:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [324:12]\n+    |       |               |   |   |   `--COLON -> : [324:19]\n+    |       |               |   |   `--SLIST -> SLIST [324:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [324:21]\n+    |       |               |   |           |--EXPR -> EXPR [324:27]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [324:27]\n+    |       |               |   |           `--SEMI -> ; [324:32]\n+    |       |               |   `--RCURLY -> } [325:8]\n+    |       |               |--RPAREN -> ) [325:9]\n+    |       |               `--EQUAL -> == [325:22]\n+    |       |                   |--LPAREN -> ( [325:14]\n+    |       |                   |--ASSIGN -> = [325:17]\n+    |       |                   |   |--IDENT -> x [325:15]\n+    |       |                   |   `--NUM_INT -> 3 [325:19]\n+    |       |                   |--RPAREN -> ) [325:20]\n+    |       |                   `--NUM_INT -> 3 [325:25]\n+    |       |--SEMI -> ; [325:26]\n+    |       |--LITERAL_IF -> if [327:8]\n+    |       |   |--LPAREN -> ( [327:11]\n+    |       |   |--EXPR -> EXPR [327:14]\n+    |       |   |   `--NOT_EQUAL -> != [327:14]\n+    |       |   |       |--IDENT -> x [327:12]\n+    |       |   |       `--NUM_INT -> 3 [327:17]\n+    |       |   |--RPAREN -> ) [327:18]\n+    |       |   `--SLIST -> { [327:20]\n+    |       |       |--LITERAL_THROW -> throw [328:12]\n+    |       |       |   |--EXPR -> EXPR [328:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [328:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [328:22]\n+    |       |       |   |       |--LPAREN -> ( [328:43]\n+    |       |       |   |       |--ELIST -> ELIST [328:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [328:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [328:44]\n+    |       |       |   |       `--RPAREN -> ) [328:64]\n+    |       |       |   `--SEMI -> ; [328:65]\n+    |       |       `--RCURLY -> } [329:8]\n+    |       `--RCURLY -> } [330:4]\n+    |--STATIC_INIT -> STATIC_INIT [332:4]\n+    |   `--SLIST -> { [332:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [333:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [333:8]\n+    |       |   |--TYPE -> TYPE [333:8]\n+    |       |   |   `--LITERAL_INT -> int [333:8]\n+    |       |   `--IDENT -> x [333:12]\n+    |       |--SEMI -> ; [333:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [334:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [334:8]\n+    |       |   |--TYPE -> TYPE [334:8]\n+    |       |   |   `--IDENT -> T [334:8]\n+    |       |   |--IDENT -> e [334:10]\n+    |       |   `--ASSIGN -> = [334:12]\n+    |       |       `--EXPR -> EXPR [334:15]\n+    |       |           `--DOT -> . [334:15]\n+    |       |               |--IDENT -> T [334:14]\n+    |       |               `--IDENT -> A [334:16]\n+    |       |--SEMI -> ; [334:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [336:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [336:8]\n+    |       |   |--TYPE -> TYPE [336:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [336:8]\n+    |       |   |--IDENT -> tA [336:16]\n+    |       |   `--ASSIGN -> = [336:19]\n+    |       |       `--EXPR -> EXPR [343:11]\n+    |       |           `--LAND -> && [343:11]\n+    |       |               |--LPAREN -> ( [336:21]\n+    |       |               |--LITERAL_SWITCH -> switch [336:22]\n+    |       |               |   |--LPAREN -> ( [336:29]\n+    |       |               |   |--EXPR -> EXPR [336:30]\n+    |       |               |   |   `--IDENT -> e [336:30]\n+    |       |               |   |--RPAREN -> ) [336:31]\n+    |       |               |   |--LCURLY -> { [336:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [337:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [337:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [337:17]\n+    |       |               |   |   |   |   `--IDENT -> A [337:17]\n+    |       |               |   |   |   `--COLON -> : [337:18]\n+    |       |               |   |   `--SLIST -> SLIST [338:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [338:16]\n+    |       |               |   |           |--EXPR -> EXPR [338:43]\n+    |       |               |   |           |   `--QUESTION -> ? [338:43]\n+    |       |               |   |           |       |--LAND -> && [338:31]\n+    |       |               |   |           |       |   |--METHOD_CALL -> ( [338:28]\n+    |       |               |   |           |       |   |   |--IDENT -> isTrue [338:22]\n+    |       |               |   |           |       |   |   |--ELIST -> ELIST [338:29]\n+    |       |               |   |           |       |   |   `--RPAREN -> ) [338:29]\n+    |       |               |   |           |       |   `--NOT_EQUAL -> != [338:36]\n+    |       |               |   |           |       |       |--IDENT -> e [338:34]\n+    |       |               |   |           |       |       `--DOT -> . [338:40]\n+    |       |               |   |           |       |           |--IDENT -> T [338:39]\n+    |       |               |   |           |       |           `--IDENT -> C [338:41]\n+    |       |               |   |           |       |--LAND -> && [338:58]\n+    |       |               |   |           |       |   |--EQUAL -> == [338:53]\n+    |       |               |   |           |       |   |   |--LPAREN -> ( [338:45]\n+    |       |               |   |           |       |   |   |--ASSIGN -> = [338:48]\n+    |       |               |   |           |       |   |   |   |--IDENT -> x [338:46]\n+    |       |               |   |           |       |   |   |   `--NUM_INT -> 1 [338:50]\n+    |       |               |   |           |       |   |   |--RPAREN -> ) [338:51]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [338:56]\n+    |       |               |   |           |       |   `--NOT_EQUAL -> != [338:63]\n+    |       |               |   |           |       |       |--IDENT -> e [338:61]\n+    |       |               |   |           |       |       `--DOT -> . [338:67]\n+    |       |               |   |           |       |           |--IDENT -> T [338:66]\n+    |       |               |   |           |       |           `--IDENT -> B [338:68]\n+    |       |               |   |           |       |--COLON -> : [338:70]\n+    |       |               |   |           |       `--LITERAL_FALSE -> false [338:72]\n+    |       |               |   |           `--SEMI -> ; [338:77]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [339:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [339:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [339:17]\n+    |       |               |   |   |   |   `--IDENT -> B [339:17]\n+    |       |               |   |   |   `--COLON -> : [339:18]\n+    |       |               |   |   `--SLIST -> SLIST [340:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [340:16]\n+    |       |               |   |           |--EXPR -> EXPR [340:35]\n+    |       |               |   |           |   `--LOR -> || [340:35]\n+    |       |               |   |           |       |--EQUAL -> == [340:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [340:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [340:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [340:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [340:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [340:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [340:33]\n+    |       |               |   |           |       `--METHOD_CALL -> ( [340:44]\n+    |       |               |   |           |           |--IDENT -> isTrue [340:38]\n+    |       |               |   |           |           |--ELIST -> ELIST [340:45]\n+    |       |               |   |           |           `--RPAREN -> ) [340:45]\n+    |       |               |   |           `--SEMI -> ; [340:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [341:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [341:12]\n+    |       |               |   |   |   `--COLON -> : [341:19]\n+    |       |               |   |   `--SLIST -> SLIST [342:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [342:16]\n+    |       |               |   |           |--EXPR -> EXPR [342:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [342:22]\n+    |       |               |   |           `--SEMI -> ; [342:27]\n+    |       |               |   `--RCURLY -> } [343:8]\n+    |       |               |--RPAREN -> ) [343:9]\n+    |       |               `--EQUAL -> == [343:16]\n+    |       |                   |--IDENT -> x [343:14]\n+    |       |                   `--NUM_INT -> 1 [343:19]\n+    |       |--SEMI -> ; [343:20]\n+    |       |--LITERAL_IF -> if [345:8]\n+    |       |   |--LPAREN -> ( [345:11]\n+    |       |   |--EXPR -> EXPR [345:12]\n+    |       |   |   `--LNOT -> ! [345:12]\n+    |       |   |       `--IDENT -> tA [345:13]\n+    |       |   |--RPAREN -> ) [345:15]\n+    |       |   `--SLIST -> { [345:17]\n+    |       |       |--LITERAL_THROW -> throw [346:12]\n+    |       |       |   |--EXPR -> EXPR [346:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [346:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [346:22]\n+    |       |       |   |       |--LPAREN -> ( [346:43]\n+    |       |       |   |       |--ELIST -> ELIST [346:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [346:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [346:44]\n+    |       |       |   |       `--RPAREN -> ) [346:64]\n+    |       |       |   `--SEMI -> ; [346:65]\n+    |       |       `--RCURLY -> } [347:8]\n+    |       `--RCURLY -> } [348:4]\n+    |--STATIC_INIT -> STATIC_INIT [350:4]\n+    |   `--SLIST -> { [350:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [351:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [351:8]\n+    |       |   |--TYPE -> TYPE [351:8]\n+    |       |   |   `--LITERAL_INT -> int [351:8]\n+    |       |   `--IDENT -> x [351:12]\n+    |       |--SEMI -> ; [351:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [352:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [352:8]\n+    |       |   |--TYPE -> TYPE [352:8]\n+    |       |   |   `--IDENT -> T [352:8]\n+    |       |   |--IDENT -> e [352:10]\n+    |       |   `--ASSIGN -> = [352:12]\n+    |       |       `--EXPR -> EXPR [352:15]\n+    |       |           `--DOT -> . [352:15]\n+    |       |               |--IDENT -> T [352:14]\n+    |       |               `--IDENT -> A [352:16]\n+    |       |--SEMI -> ; [352:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [354:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [354:8]\n+    |       |   |--TYPE -> TYPE [354:8]\n+    |       |   |   `--LITERAL_INT -> int [354:8]\n+    |       |   |--IDENT -> v [354:12]\n+    |       |   `--ASSIGN -> = [354:14]\n+    |       |       `--EXPR -> EXPR [354:16]\n+    |       |           |--LPAREN -> ( [354:16]\n+    |       |           |--LITERAL_SWITCH -> switch [354:17]\n+    |       |           |   |--LPAREN -> ( [354:23]\n+    |       |           |   |--EXPR -> EXPR [354:24]\n+    |       |           |   |   `--IDENT -> e [354:24]\n+    |       |           |   |--RPAREN -> ) [354:25]\n+    |       |           |   |--LCURLY -> { [354:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [355:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [355:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [355:17]\n+    |       |           |   |   |       `--IDENT -> A [355:17]\n+    |       |           |   |   |--LAMBDA -> -> [355:19]\n+    |       |           |   |   |--EXPR -> EXPR [355:24]\n+    |       |           |   |   |   `--ASSIGN -> = [355:24]\n+    |       |           |   |   |       |--IDENT -> x [355:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [355:26]\n+    |       |           |   |   `--SEMI -> ; [355:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [356:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [356:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [356:17]\n+    |       |           |   |   |       `--IDENT -> B [356:17]\n+    |       |           |   |   |--LAMBDA -> -> [356:19]\n+    |       |           |   |   |--EXPR -> EXPR [356:24]\n+    |       |           |   |   |   `--ASSIGN -> = [356:24]\n+    |       |           |   |   |       |--IDENT -> x [356:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [356:26]\n+    |       |           |   |   `--SEMI -> ; [356:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [357:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [357:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [357:17]\n+    |       |           |   |   |       `--IDENT -> C [357:17]\n+    |       |           |   |   |--LAMBDA -> -> [357:19]\n+    |       |           |   |   |--EXPR -> EXPR [357:24]\n+    |       |           |   |   |   `--ASSIGN -> = [357:24]\n+    |       |           |   |   |       |--IDENT -> x [357:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [357:26]\n+    |       |           |   |   `--SEMI -> ; [357:27]\n+    |       |           |   `--RCURLY -> } [358:8]\n+    |       |           `--RPAREN -> ) [358:9]\n+    |       |--SEMI -> ; [358:10]\n+    |       |--LITERAL_IF -> if [360:8]\n+    |       |   |--LPAREN -> ( [360:11]\n+    |       |   |--EXPR -> EXPR [360:19]\n+    |       |   |   `--LOR -> || [360:19]\n+    |       |   |       |--NOT_EQUAL -> != [360:14]\n+    |       |   |       |   |--IDENT -> x [360:12]\n+    |       |   |       |   `--NUM_INT -> 0 [360:17]\n+    |       |   |       `--NOT_EQUAL -> != [360:24]\n+    |       |   |           |--IDENT -> v [360:22]\n+    |       |   |           `--NUM_INT -> 0 [360:27]\n+    |       |   |--RPAREN -> ) [360:28]\n+    |       |   `--SLIST -> { [360:30]\n+    |       |       |--LITERAL_THROW -> throw [361:12]\n+    |       |       |   |--EXPR -> EXPR [361:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [361:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [361:22]\n+    |       |       |   |       |--LPAREN -> ( [361:43]\n+    |       |       |   |       |--ELIST -> ELIST [361:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [361:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [361:44]\n+    |       |       |   |       `--RPAREN -> ) [361:64]\n+    |       |       |   `--SEMI -> ; [361:65]\n+    |       |       `--RCURLY -> } [362:8]\n+    |       `--RCURLY -> } [363:4]\n+    |--INSTANCE_INIT -> INSTANCE_INIT [365:4]\n+    |   `--SLIST -> { [365:4]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [366:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [366:8]\n+    |       |   |--TYPE -> TYPE [366:8]\n+    |       |   |   `--LITERAL_INT -> int [366:8]\n+    |       |   `--IDENT -> x [366:12]\n+    |       |--SEMI -> ; [366:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [367:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [367:8]\n+    |       |   |--TYPE -> TYPE [367:8]\n+    |       |   |   `--IDENT -> T [367:8]\n+    |       |   |--IDENT -> e [367:10]\n+    |       |   `--ASSIGN -> = [367:12]\n+    |       |       `--EXPR -> EXPR [367:15]\n+    |       |           `--DOT -> . [367:15]\n+    |       |               |--IDENT -> T [367:14]\n+    |       |               `--IDENT -> A [367:16]\n+    |       |--SEMI -> ; [367:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [369:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [369:8]\n+    |       |   |--TYPE -> TYPE [369:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [369:8]\n+    |       |   |--IDENT -> tA [369:16]\n+    |       |   `--ASSIGN -> = [369:19]\n+    |       |       `--EXPR -> EXPR [373:11]\n+    |       |           `--LAND -> && [373:11]\n+    |       |               |--LPAREN -> ( [369:21]\n+    |       |               |--LITERAL_SWITCH -> switch [369:22]\n+    |       |               |   |--LPAREN -> ( [369:28]\n+    |       |               |   |--EXPR -> EXPR [369:29]\n+    |       |               |   |   `--IDENT -> e [369:29]\n+    |       |               |   |--RPAREN -> ) [369:30]\n+    |       |               |   |--LCURLY -> { [369:32]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [370:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [370:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [370:17]\n+    |       |               |   |   |       `--IDENT -> A [370:17]\n+    |       |               |   |   |--LAMBDA -> -> [370:19]\n+    |       |               |   |   `--SLIST -> { [370:22]\n+    |       |               |   |       |--EXPR -> EXPR [370:26]\n+    |       |               |   |       |   `--ASSIGN -> = [370:26]\n+    |       |               |   |       |       |--IDENT -> x [370:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [370:28]\n+    |       |               |   |       |--SEMI -> ; [370:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [370:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [370:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [370:37]\n+    |       |               |   |       |   `--SEMI -> ; [370:41]\n+    |       |               |   |       `--RCURLY -> } [370:43]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [371:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [371:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [371:17]\n+    |       |               |   |   |       `--IDENT -> B [371:17]\n+    |       |               |   |   |--LAMBDA -> -> [371:19]\n+    |       |               |   |   `--SLIST -> { [371:22]\n+    |       |               |   |       |--EXPR -> EXPR [371:26]\n+    |       |               |   |       |   `--ASSIGN -> = [371:26]\n+    |       |               |   |       |       |--IDENT -> x [371:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [371:28]\n+    |       |               |   |       |--SEMI -> ; [371:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [371:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [371:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [371:37]\n+    |       |               |   |       |   `--SEMI -> ; [371:41]\n+    |       |               |   |       `--RCURLY -> } [371:43]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [372:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [372:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [372:17]\n+    |       |               |   |   |       `--IDENT -> C [372:17]\n+    |       |               |   |   |--LAMBDA -> -> [372:19]\n+    |       |               |   |   `--SLIST -> { [372:22]\n+    |       |               |   |       |--EXPR -> EXPR [372:26]\n+    |       |               |   |       |   `--ASSIGN -> = [372:26]\n+    |       |               |   |       |       |--IDENT -> x [372:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [372:28]\n+    |       |               |   |       |--SEMI -> ; [372:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [372:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [372:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [372:37]\n+    |       |               |   |       |   `--SEMI -> ; [372:41]\n+    |       |               |   |       `--RCURLY -> } [372:43]\n+    |       |               |   `--RCURLY -> } [373:8]\n+    |       |               |--RPAREN -> ) [373:9]\n+    |       |               `--EQUAL -> == [373:16]\n+    |       |                   |--IDENT -> x [373:14]\n+    |       |                   `--NUM_INT -> 1 [373:19]\n+    |       |--SEMI -> ; [373:20]\n+    |       |--LITERAL_IF -> if [375:8]\n+    |       |   |--LPAREN -> ( [375:11]\n+    |       |   |--EXPR -> EXPR [375:12]\n+    |       |   |   `--LNOT -> ! [375:12]\n+    |       |   |       `--IDENT -> tA [375:13]\n+    |       |   |--RPAREN -> ) [375:15]\n+    |       |   `--SLIST -> { [375:17]\n+    |       |       |--LITERAL_THROW -> throw [376:12]\n+    |       |       |   |--EXPR -> EXPR [376:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [376:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [376:22]\n+    |       |       |   |       |--LPAREN -> ( [376:43]\n+    |       |       |   |       |--ELIST -> ELIST [376:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [376:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [376:44]\n+    |       |       |   |       `--RPAREN -> ) [376:64]\n+    |       |       |   `--SEMI -> ; [376:65]\n+    |       |       `--RCURLY -> } [377:8]\n+    |       `--RCURLY -> } [378:4]\n+    |--RECORD_DEF -> RECORD_DEF [380:4]\n+    |   |--MODIFIERS -> MODIFIERS [380:4]\n+    |   |   `--LITERAL_PRIVATE -> private [380:4]\n+    |   |--LITERAL_RECORD -> record [380:12]\n+    |   |--IDENT -> DefiniteAssignment1 [380:19]\n+    |   |--LPAREN -> ( [380:38]\n+    |   |--RECORD_COMPONENTS -> RECORD_COMPONENTS [380:39]\n+    |   |--RPAREN -> ) [380:39]\n+    |   `--OBJBLOCK -> OBJBLOCK [380:41]\n+    |       |--LCURLY -> { [380:41]\n+    |       |--METHOD_DEF -> METHOD_DEF [381:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [381:8]\n+    |       |   |   `--LITERAL_STATIC -> static [381:8]\n+    |       |   |--TYPE -> TYPE [381:15]\n+    |       |   |   `--LITERAL_INT -> int [381:15]\n+    |       |   |--IDENT -> id [381:19]\n+    |       |   |--LPAREN -> ( [381:21]\n+    |       |   |--PARAMETERS -> PARAMETERS [381:22]\n+    |       |   |   `--PARAMETER_DEF -> PARAMETER_DEF [381:22]\n+    |       |   |       |--MODIFIERS -> MODIFIERS [381:22]\n+    |       |   |       |--TYPE -> TYPE [381:22]\n+    |       |   |       |   `--LITERAL_INT -> int [381:22]\n+    |       |   |       `--IDENT -> id [381:26]\n+    |       |   |--RPAREN -> ) [381:28]\n+    |       |   `--SLIST -> { [381:29]\n+    |       |       |--LITERAL_RETURN -> return [381:30]\n+    |       |       |   |--EXPR -> EXPR [381:37]\n+    |       |       |   |   `--IDENT -> id [381:37]\n+    |       |       |   `--SEMI -> ; [381:39]\n+    |       |       `--RCURLY -> } [381:40]\n+    |       `--RCURLY -> } [382:4]\n+    |--METHOD_DEF -> METHOD_DEF [384:4]\n+    |   |--MODIFIERS -> MODIFIERS [384:4]\n+    |   |   `--LITERAL_PRIVATE -> private [384:4]\n+    |   |--TYPE -> TYPE [384:12]\n+    |   |   `--IDENT -> String [384:12]\n+    |   |--IDENT -> print2 [384:19]\n+    |   |--LPAREN -> ( [384:25]\n+    |   |--PARAMETERS -> PARAMETERS [384:26]\n+    |   |   |--PARAMETER_DEF -> PARAMETER_DEF [384:26]\n+    |   |   |   |--MODIFIERS -> MODIFIERS [384:26]\n+    |   |   |   |--TYPE -> TYPE [384:26]\n+    |   |   |   |   `--LITERAL_INT -> int [384:26]\n+    |   |   |   `--IDENT -> i [384:30]\n+    |   |   |--COMMA -> , [384:31]\n+    |   |   |--PARAMETER_DEF -> PARAMETER_DEF [384:33]\n+    |   |   |   |--MODIFIERS -> MODIFIERS [384:33]\n+    |   |   |   |--TYPE -> TYPE [384:33]\n+    |   |   |   |   `--LITERAL_INT -> int [384:33]\n+    |   |   |   `--IDENT -> j [384:37]\n+    |   |   |--COMMA -> , [384:38]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [384:40]\n+    |   |       |--MODIFIERS -> MODIFIERS [384:40]\n+    |   |       |--TYPE -> TYPE [384:40]\n+    |   |       |   `--LITERAL_INT -> int [384:40]\n+    |   |       `--IDENT -> k [384:44]\n+    |   |--RPAREN -> ) [384:45]\n+    |   `--SLIST -> { [384:47]\n+    |       |--LITERAL_RETURN -> return [385:8]\n+    |       |   |--EXPR -> EXPR [385:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [385:15]\n+    |       |   |       |--LPAREN -> ( [385:22]\n+    |       |   |       |--EXPR -> EXPR [385:23]\n+    |       |   |       |   `--IDENT -> i [385:23]\n+    |       |   |       |--RPAREN -> ) [385:24]\n+    |       |   |       |--LCURLY -> { [385:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [386:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [386:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [386:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 0 [386:17]\n+    |       |   |       |   |   `--COLON -> : [386:18]\n+    |       |   |       |   `--SLIST -> SLIST [387:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [387:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [387:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [387:16]\n+    |       |   |       |       |   |   `--IDENT -> String [387:16]\n+    |       |   |       |       |   `--IDENT -> r [387:23]\n+    |       |   |       |       |--SEMI -> ; [387:24]\n+    |       |   |       |       |--LABELED_STAT -> : [388:21]\n+    |       |   |       |       |   |--IDENT -> OUTER [388:16]\n+    |       |   |       |       |   `--LITERAL_SWITCH -> switch [388:23]\n+    |       |   |       |       |       |--LPAREN -> ( [388:30]\n+    |       |   |       |       |       |--EXPR -> EXPR [388:31]\n+    |       |   |       |       |       |   `--IDENT -> j [388:31]\n+    |       |   |       |       |       |--RPAREN -> ) [388:32]\n+    |       |   |       |       |       |--LCURLY -> { [388:34]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [389:20]\n+    |       |   |       |       |       |   |--LITERAL_CASE -> case [389:20]\n+    |       |   |       |       |       |   |   |--EXPR -> EXPR [389:25]\n+    |       |   |       |       |       |   |   |   `--NUM_INT -> 0 [389:25]\n+    |       |   |       |       |       |   |   `--COLON -> : [389:26]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [390:24]\n+    |       |   |       |       |       |       |--VARIABLE_DEF -> VARIABLE_DEF [390:24]\n+    |       |   |       |       |       |       |   |--MODIFIERS -> MODIFIERS [390:24]\n+    |       |   |       |       |       |       |   |--TYPE -> TYPE [390:24]\n+    |       |   |       |       |       |       |   |   `--IDENT -> String [390:24]\n+    |       |   |       |       |       |       |   `--IDENT -> res [390:31]\n+    |       |   |       |       |       |       |--SEMI -> ; [390:34]\n+    |       |   |       |       |       |       |--LABELED_STAT -> : [391:29]\n+    |       |   |       |       |       |       |   |--IDENT -> INNER [391:24]\n+    |       |   |       |       |       |       |   `--LITERAL_SWITCH -> switch [391:31]\n+    |       |   |       |       |       |       |       |--LPAREN -> ( [391:38]\n+    |       |   |       |       |       |       |       |--EXPR -> EXPR [391:39]\n+    |       |   |       |       |       |       |       |   `--IDENT -> k [391:39]\n+    |       |   |       |       |       |       |       |--RPAREN -> ) [391:40]\n+    |       |   |       |       |       |       |       |--LCURLY -> { [391:42]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [392:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [392:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [392:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 0 [392:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [392:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [392:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [392:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [392:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [392:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-0\" [392:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [392:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [392:51]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [392:56]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [393:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [393:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [393:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 1 [393:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [393:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [393:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [393:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [393:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [393:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-1\" [393:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [393:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [393:51]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [393:56]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [394:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [394:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [394:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 2 [394:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [394:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [394:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [394:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [394:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [394:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-2\" [394:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [394:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [394:51]\n+    |       |   |       |       |       |       |       |           |--IDENT -> INNER [394:57]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [394:62]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [395:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_DEFAULT -> default [395:28]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [395:35]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [395:39]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [395:39]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [395:39]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> r [395:37]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-X\" [395:41]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [395:48]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [395:50]\n+    |       |   |       |       |       |       |       |           |--IDENT -> OUTER [395:56]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [395:61]\n+    |       |   |       |       |       |       |       `--RCURLY -> } [396:24]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [397:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [397:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [397:24]\n+    |       |   |       |       |       |       |       `--IDENT -> res [397:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [397:31]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [398:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [398:29]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [399:20]\n+    |       |   |       |       |       |   |--LITERAL_CASE -> case [399:20]\n+    |       |   |       |       |       |   |   |--EXPR -> EXPR [399:25]\n+    |       |   |       |       |       |   |   |   `--NUM_INT -> 1 [399:25]\n+    |       |   |       |       |       |   |   `--COLON -> : [399:26]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [400:26]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [400:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [400:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [400:24]\n+    |       |   |       |       |       |       |       `--STRING_LITERAL -> \"0-1\" [400:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [400:33]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [401:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [401:29]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [402:20]\n+    |       |   |       |       |       |   |--LITERAL_DEFAULT -> default [402:20]\n+    |       |   |       |       |       |   |   `--COLON -> : [402:27]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [403:26]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [403:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [403:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [403:24]\n+    |       |   |       |       |       |       |       `--STRING_LITERAL -> \"0-X\" [403:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [403:33]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [404:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [404:29]\n+    |       |   |       |       |       `--RCURLY -> } [405:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [406:16]\n+    |       |   |       |           |--EXPR -> EXPR [406:22]\n+    |       |   |       |           |   `--IDENT -> r [406:22]\n+    |       |   |       |           `--SEMI -> ; [406:23]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [407:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [407:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [407:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 1 [407:17]\n+    |       |   |       |   |   `--COLON -> : [407:18]\n+    |       |   |       |   `--SLIST -> SLIST [408:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [408:16]\n+    |       |   |       |           |--EXPR -> EXPR [408:22]\n+    |       |   |       |           |   `--STRING_LITERAL -> \"1\" [408:22]\n+    |       |   |       |           `--SEMI -> ; [408:25]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [409:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [409:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [409:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 2 [409:17]\n+    |       |   |       |   |   `--COLON -> : [409:18]\n+    |       |   |       |   `--SLIST -> SLIST [410:19]\n+    |       |   |       |       |--LABELED_STAT -> : [410:19]\n+    |       |   |       |       |   |--IDENT -> LOP [410:16]\n+    |       |   |       |       |   `--LITERAL_WHILE -> while [410:21]\n+    |       |   |       |       |       |--LPAREN -> ( [410:27]\n+    |       |   |       |       |       |--EXPR -> EXPR [410:32]\n+    |       |   |       |       |       |   `--GT -> > [410:32]\n+    |       |   |       |       |       |       |--POST_DEC -> -- [410:29]\n+    |       |   |       |       |       |       |   `--IDENT -> j [410:28]\n+    |       |   |       |       |       |       `--NUM_INT -> 0 [410:34]\n+    |       |   |       |       |       |--RPAREN -> ) [410:35]\n+    |       |   |       |       |       `--SLIST -> { [410:37]\n+    |       |   |       |       |           |--LITERAL_IF -> if [411:20]\n+    |       |   |       |       |           |   |--LPAREN -> ( [411:23]\n+    |       |   |       |       |           |   |--EXPR -> EXPR [411:26]\n+    |       |   |       |       |           |   |   `--EQUAL -> == [411:26]\n+    |       |   |       |       |           |   |       |--IDENT -> k [411:24]\n+    |       |   |       |       |           |   |       `--NUM_INT -> 5 [411:29]\n+    |       |   |       |       |           |   |--RPAREN -> ) [411:30]\n+    |       |   |       |       |           |   `--SLIST -> { [411:32]\n+    |       |   |       |       |           |       |--EXPR -> EXPR [412:25]\n+    |       |   |       |       |           |       |   `--POST_DEC -> -- [412:25]\n+    |       |   |       |       |           |       |       `--IDENT -> k [412:24]\n+    |       |   |       |       |           |       |--SEMI -> ; [412:27]\n+    |       |   |       |       |           |       |--LITERAL_CONTINUE -> continue [413:24]\n+    |       |   |       |       |           |       |   `--SEMI -> ; [413:32]\n+    |       |   |       |       |           |       `--RCURLY -> } [414:20]\n+    |       |   |       |       |           |--LITERAL_BREAK -> break [415:20]\n+    |       |   |       |       |           |   |--IDENT -> LOP [415:26]\n+    |       |   |       |       |           |   `--SEMI -> ; [415:29]\n+    |       |   |       |       |           `--RCURLY -> } [416:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [417:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [417:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [417:16]\n+    |       |   |       |       |   |   |--IDENT -> Supplier [417:16]\n+    |       |   |       |       |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [417:24]\n+    |       |   |       |       |   |       |--GENERIC_START -> < [417:24]\n+    |       |   |       |       |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [417:25]\n+    |       |   |       |       |   |       |   `--IDENT -> String [417:25]\n+    |       |   |       |       |   |       `--GENERIC_END -> > [417:31]\n+    |       |   |       |       |   |--IDENT -> getter [417:33]\n+    |       |   |       |       |   `--ASSIGN -> = [417:40]\n+    |       |   |       |       |       `--LAMBDA -> -> [417:45]\n+    |       |   |       |       |           |--LPAREN -> ( [417:42]\n+    |       |   |       |       |           |--PARAMETERS -> PARAMETERS [417:43]\n+    |       |   |       |       |           |--RPAREN -> ) [417:43]\n+    |       |   |       |       |           `--SLIST -> { [417:48]\n+    |       |   |       |       |               |--LITERAL_RETURN -> return [417:50]\n+    |       |   |       |       |               |   |--EXPR -> EXPR [417:57]\n+    |       |   |       |       |               |   |   `--STRING_LITERAL -> \"2-X-5\" [417:57]\n+    |       |   |       |       |               |   `--SEMI -> ; [417:64]\n+    |       |   |       |       |               `--RCURLY -> } [417:66]\n+    |       |   |       |       |--SEMI -> ; [417:67]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [418:16]\n+    |       |   |       |           |--EXPR -> EXPR [418:32]\n+    |       |   |       |           |   `--METHOD_CALL -> ( [418:32]\n+    |       |   |       |           |       |--DOT -> . [418:28]\n+    |       |   |       |           |       |   |--IDENT -> getter [418:22]\n+    |       |   |       |           |       |   `--IDENT -> get [418:29]\n+    |       |   |       |           |       |--ELIST -> ELIST [418:33]\n+    |       |   |       |           |       `--RPAREN -> ) [418:33]\n+    |       |   |       |           `--SEMI -> ; [418:34]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [419:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [419:12]\n+    |       |   |       |   |   `--COLON -> : [419:19]\n+    |       |   |       |   `--SLIST -> SLIST [420:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [420:16]\n+    |       |   |       |           |--EXPR -> EXPR [420:22]\n+    |       |   |       |           |   `--STRING_LITERAL -> \"X\" [420:22]\n+    |       |   |       |           `--SEMI -> ; [420:25]\n+    |       |   |       `--RCURLY -> } [421:8]\n+    |       |   `--SEMI -> ; [421:9]\n+    |       `--RCURLY -> } [422:4]\n+    |--METHOD_DEF -> METHOD_DEF [424:4]\n+    |   |--MODIFIERS -> MODIFIERS [424:4]\n+    |   |   `--LITERAL_PRIVATE -> private [424:4]\n+    |   |--TYPE -> TYPE [424:12]\n+    |   |   `--IDENT -> String [424:12]\n+    |   |--IDENT -> expression1 [424:19]\n+    |   |--LPAREN -> ( [424:30]\n+    |   |--PARAMETERS -> PARAMETERS [424:31]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [424:31]\n+    |   |       |--MODIFIERS -> MODIFIERS [424:31]\n+    |   |       |--TYPE -> TYPE [424:31]\n+    |   |       |   `--IDENT -> T [424:31]\n+    |   |       `--IDENT -> t [424:33]\n+    |   |--RPAREN -> ) [424:34]\n+    |   `--SLIST -> { [424:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [425:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [425:8]\n+    |       |   |--TYPE -> TYPE [425:8]\n+    |       |   |   `--IDENT -> String [425:8]\n+    |       |   |--IDENT -> help [425:15]\n+    |       |   `--ASSIGN -> = [425:20]\n+    |       |       `--EXPR -> EXPR [425:22]\n+    |       |           `--STRING_LITERAL -> \"\" [425:22]\n+    |       |--SEMI -> ; [425:24]\n+    |       |--LITERAL_RETURN -> return [426:8]\n+    |       |   |--EXPR -> EXPR [426:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [426:15]\n+    |       |   |       |--LPAREN -> ( [426:22]\n+    |       |   |       |--EXPR -> EXPR [426:23]\n+    |       |   |       |   `--IDENT -> t [426:23]\n+    |       |   |       |--RPAREN -> ) [426:24]\n+    |       |   |       |--LCURLY -> { [426:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [427:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [427:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [427:17]\n+    |       |   |       |   |   |   `--IDENT -> A [427:17]\n+    |       |   |       |   |   `--COLON -> : [427:18]\n+    |       |   |       |   `--SLIST -> SLIST [427:25]\n+    |       |   |       |       |--EXPR -> EXPR [427:25]\n+    |       |   |       |       |   `--ASSIGN -> = [427:25]\n+    |       |   |       |       |       |--IDENT -> help [427:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"a\" [427:27]\n+    |       |   |       |       `--SEMI -> ; [427:30]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [428:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [428:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [428:17]\n+    |       |   |       |   |   |   `--IDENT -> B [428:17]\n+    |       |   |       |   |   `--COLON -> : [428:18]\n+    |       |   |       |   `--SLIST -> SLIST [428:25]\n+    |       |   |       |       |--EXPR -> EXPR [428:25]\n+    |       |   |       |       |   `--PLUS_ASSIGN -> += [428:25]\n+    |       |   |       |       |       |--IDENT -> help [428:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"b\" [428:28]\n+    |       |   |       |       `--SEMI -> ; [428:31]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [429:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [429:12]\n+    |       |   |       |   |   `--COLON -> : [429:19]\n+    |       |   |       |   `--SLIST -> SLIST [429:21]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [429:21]\n+    |       |   |       |           |--EXPR -> EXPR [429:27]\n+    |       |   |       |           |   `--IDENT -> help [429:27]\n+    |       |   |       |           `--SEMI -> ; [429:31]\n+    |       |   |       `--RCURLY -> } [430:8]\n+    |       |   `--SEMI -> ; [430:9]\n+    |       `--RCURLY -> } [431:4]\n+    |--METHOD_DEF -> METHOD_DEF [433:4]\n+    |   |--MODIFIERS -> MODIFIERS [433:4]\n+    |   |   `--LITERAL_PRIVATE -> private [433:4]\n+    |   |--TYPE -> TYPE [433:12]\n+    |   |   `--IDENT -> String [433:12]\n+    |   |--IDENT -> expression2 [433:19]\n+    |   |--LPAREN -> ( [433:30]\n+    |   |--PARAMETERS -> PARAMETERS [433:31]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [433:31]\n+    |   |       |--MODIFIERS -> MODIFIERS [433:31]\n+    |   |       |--TYPE -> TYPE [433:31]\n+    |   |       |   `--IDENT -> T [433:31]\n+    |   |       `--IDENT -> t [433:33]\n+    |   |--RPAREN -> ) [433:34]\n+    |   `--SLIST -> { [433:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [434:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [434:8]\n+    |       |   |--TYPE -> TYPE [434:8]\n+    |       |   |   `--IDENT -> String [434:8]\n+    |       |   |--IDENT -> help [434:15]\n+    |       |   `--ASSIGN -> = [434:20]\n+    |       |       `--EXPR -> EXPR [434:22]\n+    |       |           `--STRING_LITERAL -> \"\" [434:22]\n+    |       |--SEMI -> ; [434:24]\n+    |       |--LITERAL_RETURN -> return [435:8]\n+    |       |   |--EXPR -> EXPR [435:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [435:15]\n+    |       |   |       |--LPAREN -> ( [435:22]\n+    |       |   |       |--EXPR -> EXPR [435:23]\n+    |       |   |       |   `--IDENT -> t [435:23]\n+    |       |   |       |--RPAREN -> ) [435:24]\n+    |       |   |       |--LCURLY -> { [435:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [436:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [436:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [436:17]\n+    |       |   |       |   |   |   `--IDENT -> A [436:17]\n+    |       |   |       |   |   `--COLON -> : [436:18]\n+    |       |   |       |   `--SLIST -> SLIST [436:25]\n+    |       |   |       |       |--EXPR -> EXPR [436:25]\n+    |       |   |       |       |   `--ASSIGN -> = [436:25]\n+    |       |   |       |       |       |--IDENT -> help [436:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"a\" [436:27]\n+    |       |   |       |       `--SEMI -> ; [436:30]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [437:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [437:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [437:17]\n+    |       |   |       |   |   |   `--IDENT -> B [437:17]\n+    |       |   |       |   |   `--COLON -> : [437:18]\n+    |       |   |       |   `--SLIST -> SLIST [437:25]\n+    |       |   |       |       |--EXPR -> EXPR [437:25]\n+    |       |   |       |       |   `--PLUS_ASSIGN -> += [437:25]\n+    |       |   |       |       |       |--IDENT -> help [437:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"b\" [437:28]\n+    |       |   |       |       `--SEMI -> ; [437:31]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [438:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [438:12]\n+    |       |   |       |   |   `--COLON -> : [438:19]\n+    |       |   |       |   `--SLIST -> SLIST [438:21]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [438:21]\n+    |       |   |       |           |--EXPR -> EXPR [438:27]\n+    |       |   |       |           |   `--IDENT -> help [438:27]\n+    |       |   |       |           `--SEMI -> ; [438:31]\n+    |       |   |       `--RCURLY -> } [439:8]\n+    |       |   `--SEMI -> ; [439:9]\n+    |       `--RCURLY -> } [440:4]\n+    |--METHOD_DEF -> METHOD_DEF [442:4]\n+    |   |--MODIFIERS -> MODIFIERS [442:4]\n+    |   |--TYPE -> TYPE [442:4]\n+    |   |   |--IDENT -> I [442:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [442:5]\n+    |   |       |--GENERIC_START -> < [442:5]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [442:6]\n+    |   |       |   `--IDENT -> String [442:6]\n+    |   |       `--GENERIC_END -> > [442:12]\n+    |   |--IDENT -> lambdaCapture1 [442:14]\n+    |   |--LPAREN -> ( [442:28]\n+    |   |--PARAMETERS -> PARAMETERS [442:29]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [442:29]\n+    |   |       |--MODIFIERS -> MODIFIERS [442:29]\n+    |   |       |--TYPE -> TYPE [442:29]\n+    |   |       |   `--LITERAL_INT -> int [442:29]\n+    |   |       `--IDENT -> i [442:33]\n+    |   |--RPAREN -> ) [442:34]\n+    |   `--SLIST -> { [442:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [443:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [443:8]\n+    |       |   |--TYPE -> TYPE [443:8]\n+    |       |   |   `--LITERAL_INT -> int [443:8]\n+    |       |   |--IDENT -> j [443:12]\n+    |       |   `--ASSIGN -> = [443:14]\n+    |       |       `--EXPR -> EXPR [443:18]\n+    |       |           `--PLUS -> + [443:18]\n+    |       |               |--IDENT -> i [443:16]\n+    |       |               `--NUM_INT -> 1 [443:20]\n+    |       |--SEMI -> ; [443:21]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [444:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [444:8]\n+    |       |   |--TYPE -> TYPE [444:8]\n+    |       |   |   |--IDENT -> I [444:8]\n+    |       |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [444:9]\n+    |       |   |       |--GENERIC_START -> < [444:9]\n+    |       |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [444:10]\n+    |       |   |       |   `--IDENT -> String [444:10]\n+    |       |   |       `--GENERIC_END -> > [444:16]\n+    |       |   |--IDENT -> r [444:18]\n+    |       |   `--ASSIGN -> = [444:20]\n+    |       |       `--EXPR -> EXPR [444:22]\n+    |       |           `--LITERAL_SWITCH -> switch [444:22]\n+    |       |               |--LPAREN -> ( [444:29]\n+    |       |               |--EXPR -> EXPR [444:30]\n+    |       |               |   `--IDENT -> i [444:30]\n+    |       |               |--RPAREN -> ) [444:31]\n+    |       |               |--LCURLY -> { [444:33]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [445:12]\n+    |       |               |   |--LITERAL_CASE -> case [445:12]\n+    |       |               |   |   `--EXPR -> EXPR [445:17]\n+    |       |               |   |       `--NUM_INT -> 0 [445:17]\n+    |       |               |   |--LAMBDA -> -> [445:19]\n+    |       |               |   |--LAMBDA -> -> [445:25]\n+    |       |               |   |   |--LPAREN -> ( [445:22]\n+    |       |               |   |   |--PARAMETERS -> PARAMETERS [445:23]\n+    |       |               |   |   |--RPAREN -> ) [445:23]\n+    |       |               |   |   `--EXPR -> EXPR [445:32]\n+    |       |               |   |       `--PLUS -> + [445:32]\n+    |       |               |   |           |--STRING_LITERAL -> \"0\" [445:28]\n+    |       |               |   |           `--IDENT -> i [445:34]\n+    |       |               |   `--SEMI -> ; [445:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [446:12]\n+    |       |               |   |--LITERAL_CASE -> case [446:12]\n+    |       |               |   |   `--EXPR -> EXPR [446:17]\n+    |       |               |   |       `--NUM_INT -> 1 [446:17]\n+    |       |               |   |--LAMBDA -> -> [446:19]\n+    |       |               |   |--LAMBDA -> -> [446:25]\n+    |       |               |   |   |--LPAREN -> ( [446:22]\n+    |       |               |   |   |--PARAMETERS -> PARAMETERS [446:23]\n+    |       |               |   |   |--RPAREN -> ) [446:23]\n+    |       |               |   |   `--EXPR -> EXPR [446:32]\n+    |       |               |   |       `--PLUS -> + [446:32]\n+    |       |               |   |           |--STRING_LITERAL -> \"1\" [446:28]\n+    |       |               |   |           `--IDENT -> j [446:34]\n+    |       |               |   `--SEMI -> ; [446:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [447:12]\n+    |       |               |   |--LITERAL_DEFAULT -> default [447:12]\n+    |       |               |   |--LAMBDA -> -> [447:20]\n+    |       |               |   `--SLIST -> { [447:23]\n+    |       |               |       |--VARIABLE_DEF -> VARIABLE_DEF [448:16]\n+    |       |               |       |   |--MODIFIERS -> MODIFIERS [448:16]\n+    |       |               |       |   |--TYPE -> TYPE [448:16]\n+    |       |               |       |   |   `--IDENT -> String [448:16]\n+    |       |               |       |   |--IDENT -> k [448:23]\n+    |       |               |       |   `--ASSIGN -> = [448:25]\n+    |       |               |       |       `--EXPR -> EXPR [448:27]\n+    |       |               |       |           `--STRING_LITERAL -> \"D\" [448:27]\n+    |       |               |       |--SEMI -> ; [448:30]\n+    |       |               |       |--LITERAL_YIELD -> yield [449:16]\n+    |       |               |       |   |--LAMBDA -> -> [449:25]\n+    |       |               |       |   |   |--LPAREN -> ( [449:22]\n+    |       |               |       |   |   |--PARAMETERS -> PARAMETERS [449:23]\n+    |       |               |       |   |   |--RPAREN -> ) [449:23]\n+    |       |               |       |   |   `--EXPR -> EXPR [449:28]\n+    |       |               |       |   |       `--IDENT -> k [449:28]\n+    |       |               |       |   `--SEMI -> ; [449:29]\n+    |       |               |       `--RCURLY -> } [450:12]\n+    |       |               `--RCURLY -> } [451:8]\n+    |       |--SEMI -> ; [451:9]\n+    |       |--LITERAL_RETURN -> return [453:8]\n+    |       |   |--EXPR -> EXPR [453:15]\n+    |       |   |   `--IDENT -> r [453:15]\n+    |       |   `--SEMI -> ; [453:16]\n+    |       `--RCURLY -> } [454:4]\n+    |--METHOD_DEF -> METHOD_DEF [456:4]\n+    |   |--MODIFIERS -> MODIFIERS [456:4]\n+    |   |--TYPE -> TYPE [456:4]\n+    |   |   |--IDENT -> I [456:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [456:5]\n+    |   |       |--GENERIC_START -> < [456:5]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [456:6]\n+    |   |       |   `--IDENT -> String [456:6]\n+    |   |       `--GENERIC_END -> > [456:12]\n+    |   |--IDENT -> lambdaCapture2 [456:14]\n+    |   |--LPAREN -> ( [456:28]\n+    |   |--PARAMETERS -> PARAMETERS [456:29]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [456:29]\n+    |   |       |--MODIFIERS -> MODIFIERS [456:29]\n+    |   |       |--TYPE -> TYPE [456:29]\n+    |   |       |   `--LITERAL_INT -> int [456:29]\n+    |   |       `--IDENT -> i [456:33]\n+    |   |--RPAREN -> ) [456:34]\n+    |   `--SLIST -> { [456:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [457:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [457:8]\n+    |       |   |--TYPE -> TYPE [457:8]\n+    |       |   |   `--LITERAL_INT -> int [457:8]\n+    |       |   |--IDENT -> j [457:12]\n+    |       |   `--ASSIGN -> = [457:14]\n+    |       |       `--EXPR -> EXPR [457:18]\n+    |       |           `--PLUS -> + [457:18]\n+    |       |               |--IDENT -> i [457:16]\n+    |       |               `--NUM_INT -> 1 [457:20]\n+    |       |--SEMI -> ; [457:21]\n+    |       |--LITERAL_RETURN -> return [459:8]\n+    |       |   |--EXPR -> EXPR [459:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [459:15]\n+    |       |   |       |--LPAREN -> ( [459:22]\n+    |       |   |       |--EXPR -> EXPR [459:23]\n+    |       |   |       |   `--IDENT -> i [459:23]\n+    |       |   |       |--RPAREN -> ) [459:24]\n+    |       |   |       |--LCURLY -> { [459:26]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [460:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [460:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [460:17]\n+    |       |   |       |   |       `--NUM_INT -> 0 [460:17]\n+    |       |   |       |   |--LAMBDA -> -> [460:19]\n+    |       |   |       |   |--LAMBDA -> -> [460:25]\n+    |       |   |       |   |   |--LPAREN -> ( [460:22]\n+    |       |   |       |   |   |--PARAMETERS -> PARAMETERS [460:23]\n+    |       |   |       |   |   |--RPAREN -> ) [460:23]\n+    |       |   |       |   |   `--EXPR -> EXPR [460:32]\n+    |       |   |       |   |       `--PLUS -> + [460:32]\n+    |       |   |       |   |           |--STRING_LITERAL -> \"0\" [460:28]\n+    |       |   |       |   |           `--IDENT -> i [460:34]\n+    |       |   |       |   `--SEMI -> ; [460:35]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [461:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [461:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [461:17]\n+    |       |   |       |   |       `--NUM_INT -> 1 [461:17]\n+    |       |   |       |   |--LAMBDA -> -> [461:19]\n+    |       |   |       |   |--LAMBDA -> -> [461:25]\n+    |       |   |       |   |   |--LPAREN -> ( [461:22]\n+    |       |   |       |   |   |--PARAMETERS -> PARAMETERS [461:23]\n+    |       |   |       |   |   |--RPAREN -> ) [461:23]\n+    |       |   |       |   |   `--EXPR -> EXPR [461:32]\n+    |       |   |       |   |       `--PLUS -> + [461:32]\n+    |       |   |       |   |           |--STRING_LITERAL -> \"1\" [461:28]\n+    |       |   |       |   |           `--IDENT -> j [461:34]\n+    |       |   |       |   `--SEMI -> ; [461:35]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [462:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [462:12]\n+    |       |   |       |   |--LAMBDA -> -> [462:20]\n+    |       |   |       |   `--SLIST -> { [462:23]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [463:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [463:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [463:16]\n+    |       |   |       |       |   |   `--IDENT -> String [463:16]\n+    |       |   |       |       |   |--IDENT -> k [463:23]\n+    |       |   |       |       |   `--ASSIGN -> = [463:25]\n+    |       |   |       |       |       `--EXPR -> EXPR [463:27]\n+    |       |   |       |       |           `--STRING_LITERAL -> \"D\" [463:27]\n+    |       |   |       |       |--SEMI -> ; [463:30]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [464:16]\n+    |       |   |       |       |   |--LAMBDA -> -> [464:25]\n+    |       |   |       |       |   |   |--LPAREN -> ( [464:22]\n+    |       |   |       |       |   |   |--PARAMETERS -> PARAMETERS [464:23]\n+    |       |   |       |       |   |   |--RPAREN -> ) [464:23]\n+    |       |   |       |       |   |   `--EXPR -> EXPR [464:28]\n+    |       |   |       |       |   |       `--IDENT -> k [464:28]\n+    |       |   |       |       |   `--SEMI -> ; [464:29]\n+    |       |   |       |       `--RCURLY -> } [465:12]\n+    |       |   |       `--RCURLY -> } [466:8]\n+    |       |   `--SEMI -> ; [466:9]\n+    |       `--RCURLY -> } [467:4]\n+    |--INTERFACE_DEF -> INTERFACE_DEF [469:4]\n+    |   |--MODIFIERS -> MODIFIERS [469:4]\n+    |   |--LITERAL_INTERFACE -> interface [469:4]\n+    |   |--IDENT -> I [469:14]\n+    |   |--TYPE_PARAMETERS -> TYPE_PARAMETERS [469:15]\n+    |   |   |--GENERIC_START -> < [469:15]\n+    |   |   |--TYPE_PARAMETER -> TYPE_PARAMETER [469:16]\n+    |   |   |   `--IDENT -> T [469:16]\n+    |   |   `--GENERIC_END -> > [469:17]\n+    |   `--OBJBLOCK -> OBJBLOCK [469:19]\n+    |       |--LCURLY -> { [469:19]\n+    |       |--METHOD_DEF -> METHOD_DEF [470:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [470:8]\n+    |       |   |   `--LITERAL_PUBLIC -> public [470:8]\n+    |       |   |--TYPE -> TYPE [470:15]\n+    |       |   |   `--IDENT -> T [470:15]\n+    |       |   |--IDENT -> t [470:17]\n+    |       |   |--LPAREN -> ( [470:18]\n+    |       |   |--PARAMETERS -> PARAMETERS [470:19]\n+    |       |   |--RPAREN -> ) [470:19]\n+    |       |   `--SEMI -> ; [470:20]\n+    |       `--RCURLY -> } [471:4]\n+    |--STATIC_INIT -> STATIC_INIT [473:4]\n+    |   `--SLIST -> { [473:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [474:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [474:8]\n+    |       |   |--TYPE -> TYPE [474:8]\n+    |       |   |   `--LITERAL_INT -> int [474:8]\n+    |       |   |--IDENT -> i [474:12]\n+    |       |   `--ASSIGN -> = [474:14]\n+    |       |       `--EXPR -> EXPR [474:16]\n+    |       |           `--NUM_INT -> 0 [474:16]\n+    |       |--SEMI -> ; [474:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [475:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [475:8]\n+    |       |   |--TYPE -> TYPE [475:8]\n+    |       |   |   `--LITERAL_INT -> int [475:8]\n+    |       |   |--IDENT -> dummy [475:12]\n+    |       |   `--ASSIGN -> = [475:18]\n+    |       |       `--EXPR -> EXPR [475:22]\n+    |       |           `--PLUS -> + [475:22]\n+    |       |               |--NUM_INT -> 1 [475:20]\n+    |       |               `--LITERAL_SWITCH -> switch [475:24]\n+    |       |                   |--LPAREN -> ( [475:31]\n+    |       |                   |--EXPR -> EXPR [475:32]\n+    |       |                   |   `--IDENT -> i [475:32]\n+    |       |                   |--RPAREN -> ) [475:33]\n+    |       |                   |--LCURLY -> { [475:35]\n+    |       |                   |--CASE_GROUP -> CASE_GROUP [476:12]\n+    |       |                   |   |--LITERAL_CASE -> case [476:12]\n+    |       |                   |   |   |--EXPR -> EXPR [476:17]\n+    |       |                   |   |   |   `--UNARY_MINUS -> - [476:17]\n+    |       |                   |   |   |       `--NUM_INT -> 1 [476:18]\n+    |       |                   |   |   `--COLON -> : [476:19]\n+    |       |                   |   `--SLIST -> SLIST [476:21]\n+    |       |                   |       `--LITERAL_YIELD -> yield [476:21]\n+    |       |                   |           |--EXPR -> EXPR [476:27]\n+    |       |                   |           |   `--NUM_INT -> 1 [476:27]\n+    |       |                   |           `--SEMI -> ; [476:28]\n+    |       |                   |--CASE_GROUP -> CASE_GROUP [477:12]\n+    |       |                   |   |--LITERAL_DEFAULT -> default [477:12]\n+    |       |                   |   |   `--COLON -> : [477:19]\n+    |       |                   |   `--SLIST -> SLIST [478:17]\n+    |       |                   |       |--EXPR -> EXPR [478:17]\n+    |       |                   |       |   `--POST_INC -> ++ [478:17]\n+    |       |                   |       |       `--IDENT -> i [478:16]\n+    |       |                   |       |--SEMI -> ; [478:19]\n+    |       |                   |       `--LITERAL_YIELD -> yield [479:16]\n+    |       |                   |           |--EXPR -> EXPR [479:22]\n+    |       |                   |           |   `--NUM_INT -> 1 [479:22]\n+    |       |                   |           `--SEMI -> ; [479:23]\n+    |       |                   `--RCURLY -> } [480:8]\n+    |       |--SEMI -> ; [480:9]\n+    |       |--LITERAL_IF -> if [481:8]\n+    |       |   |--LPAREN -> ( [481:11]\n+    |       |   |--EXPR -> EXPR [481:14]\n+    |       |   |   `--NOT_EQUAL -> != [481:14]\n+    |       |   |       |--IDENT -> i [481:12]\n+    |       |   |       `--NUM_INT -> 1 [481:17]\n+    |       |   |--RPAREN -> ) [481:18]\n+    |       |   `--SLIST -> { [481:20]\n+    |       |       |--LITERAL_THROW -> throw [482:12]\n+    |       |       |   |--EXPR -> EXPR [482:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [482:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [482:22]\n+    |       |       |   |       |--LPAREN -> ( [482:43]\n+    |       |       |   |       |--ELIST -> ELIST [482:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [482:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Side effects missing.\" [482:44]\n+    |       |       |   |       `--RPAREN -> ) [482:67]\n+    |       |       |   `--SEMI -> ; [482:68]\n+    |       |       `--RCURLY -> } [483:8]\n+    |       `--RCURLY -> } [484:4]\n+    |--METHOD_DEF -> METHOD_DEF [486:4]\n+    |   |--MODIFIERS -> MODIFIERS [486:4]\n+    |   |   |--LITERAL_PRIVATE -> private [486:4]\n+    |   |   `--LITERAL_STATIC -> static [486:12]\n+    |   |--TYPE -> TYPE [486:19]\n+    |   |   `--LITERAL_INT -> int [486:19]\n+    |   |--IDENT -> getValueViaYield [486:23]\n+    |   |--LPAREN -> ( [486:39]\n+    |   |--PARAMETERS -> PARAMETERS [486:40]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [486:40]\n+    |   |       |--MODIFIERS -> MODIFIERS [486:40]\n+    |   |       |--TYPE -> TYPE [486:40]\n+    |   |       |   `--IDENT -> String [486:40]\n+    |   |       `--IDENT -> mode [486:47]\n+    |   |--RPAREN -> ) [486:51]\n+    |   `--SLIST -> { [486:53]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [487:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [487:8]\n+    |       |   |--TYPE -> TYPE [487:8]\n+    |       |   |   `--LITERAL_INT -> int [487:8]\n+    |       |   |--IDENT -> yield [487:12]\n+    |       |   `--ASSIGN -> = [487:18]\n+    |       |       `--EXPR -> EXPR [487:20]\n+    |       |           `--NUM_INT -> 0 [487:20]\n+    |       |--SEMI -> ; [487:21]\n+    |       |--LITERAL_RETURN -> return [488:8]\n+    |       |   |--EXPR -> EXPR [488:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [488:15]\n+    |       |   |       |--LPAREN -> ( [488:22]\n+    |       |   |       |--EXPR -> EXPR [488:23]\n+    |       |   |       |   `--IDENT -> mode [488:23]\n+    |       |   |       |--RPAREN -> ) [488:27]\n+    |       |   |       |--LCURLY -> { [488:29]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [489:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [489:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [489:17]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"a\" [489:17]\n+    |       |   |       |   |   |--COMMA -> , [489:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [489:22]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"b\" [489:22]\n+    |       |   |       |   |   `--COLON -> : [489:25]\n+    |       |   |       |   `--SLIST -> SLIST [490:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [490:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [490:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [490:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [490:16]\n+    |       |   |       |       |   |--IDENT -> x [490:20]\n+    |       |   |       |       |   `--ASSIGN -> = [490:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [490:30]\n+    |       |   |       |       |           `--PLUS -> + [490:30]\n+    |       |   |       |       |               |--IDENT -> yield [490:24]\n+    |       |   |       |       |               `--NUM_INT -> 2 [490:32]\n+    |       |   |       |       |--SEMI -> ; [490:33]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [491:16]\n+    |       |   |       |           |--EXPR -> EXPR [491:22]\n+    |       |   |       |           |   `--IDENT -> x [491:22]\n+    |       |   |       |           `--SEMI -> ; [491:23]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [492:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [492:12]\n+    |       |   |       |   |   `--COLON -> : [492:19]\n+    |       |   |       |   `--SLIST -> SLIST [493:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [493:16]\n+    |       |   |       |           |--EXPR -> EXPR [493:22]\n+    |       |   |       |           |   `--UNARY_MINUS -> - [493:22]\n+    |       |   |       |           |       `--NUM_INT -> 1 [493:24]\n+    |       |   |       |           `--SEMI -> ; [493:25]\n+    |       |   |       `--RCURLY -> } [494:8]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a"}, "originalPosition": 3263}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTA0MTE0", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-465104114", "createdAt": "2020-08-11T14:10:43Z", "commit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDo0M1rOG-5qsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDo0M1rOG-5qsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYwOTcxNQ==", "bodyText": "@rnveach Please see https://github.com/checkstyle/checkstyle/pull/8449/files#r468609366", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r468609715", "createdAt": "2020-08-11T14:10:43Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.java", "diffHunk": "@@ -449,4 +482,15 @@ private String expression2(T t) {\n             throw new IllegalStateException(\"Side effects missing.\");\n         }\n     }\n+\n+    private static int getValueViaYield(String mode) {\n+        int yield = 0;\n+        return switch (mode) {\n+            case \"a\", \"b\":\n+                int x = yield + 2;\n+                yield x;\n+            default:\n+                yield - 1;\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ea441e3d355c5bbe328bbb98fc138b31456ccc18", "committedDate": "2020-08-11T14:14:28Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "448217379777d109937aafc2c2b165fc0f424d8a", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/448217379777d109937aafc2c2b165fc0f424d8a", "committedDate": "2020-08-11T14:02:50Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}, "afterCommit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ea441e3d355c5bbe328bbb98fc138b31456ccc18", "committedDate": "2020-08-11T14:14:28Z", "message": "Issue #6615: Add support for Java 14 switch and yield"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTEyMTI3", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-465112127", "createdAt": "2020-08-11T14:16:32Z", "commit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxNjozMlrOG-6B6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxNjozMlrOG-6B6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYxNTY1OQ==", "bodyText": "Correctly parsed here, too.", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r468615659", "createdAt": "2020-08-11T14:16:32Z", "author": {"login": "nmancus1"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.txt", "diffHunk": "@@ -0,0 +1,3324 @@\n+PACKAGE_DEF -> package [2:0]\n+|--ANNOTATIONS -> ANNOTATIONS [2:47]\n+|--DOT -> . [2:47]\n+|   |--DOT -> . [2:39]\n+|   |   |--DOT -> . [2:28]\n+|   |   |   |--DOT -> . [2:22]\n+|   |   |   |   |--DOT -> . [2:11]\n+|   |   |   |   |   |--IDENT -> com [2:8]\n+|   |   |   |   |   `--IDENT -> puppycrawl [2:12]\n+|   |   |   |   `--IDENT -> tools [2:23]\n+|   |   |   `--IDENT -> checkstyle [2:29]\n+|   |   `--IDENT -> grammar [2:40]\n+|   `--IDENT -> java14 [2:48]\n+`--SEMI -> ; [2:54]\n+STATIC_IMPORT -> import [4:0]\n+|--LITERAL_STATIC -> static [4:7]\n+|--DOT -> . [4:31]\n+|   |--DOT -> . [4:23]\n+|   |   |--DOT -> . [4:18]\n+|   |   |   |--IDENT -> java [4:14]\n+|   |   |   `--IDENT -> time [4:19]\n+|   |   `--IDENT -> Instant [4:24]\n+|   `--STAR -> * [4:32]\n+`--SEMI -> ; [4:33]\n+IMPORT -> import [6:0]\n+|--DOT -> . [6:16]\n+|   |--DOT -> . [6:11]\n+|   |   |--IDENT -> java [6:7]\n+|   |   `--IDENT -> time [6:12]\n+|   `--IDENT -> Instant [6:17]\n+`--SEMI -> ; [6:24]\n+IMPORT -> import [7:0]\n+|--DOT -> . [7:16]\n+|   |--DOT -> . [7:11]\n+|   |   |--IDENT -> java [7:7]\n+|   |   `--IDENT -> util [7:12]\n+|   `--IDENT -> Arrays [7:17]\n+`--SEMI -> ; [7:23]\n+IMPORT -> import [8:0]\n+|--DOT -> . [8:16]\n+|   |--DOT -> . [8:11]\n+|   |   |--IDENT -> java [8:7]\n+|   |   `--IDENT -> util [8:12]\n+|   `--IDENT -> EnumSet [8:17]\n+`--SEMI -> ; [8:24]\n+IMPORT -> import [9:0]\n+|--DOT -> . [9:16]\n+|   |--DOT -> . [9:11]\n+|   |   |--IDENT -> java [9:7]\n+|   |   `--IDENT -> util [9:12]\n+|   `--IDENT -> Set [9:17]\n+`--SEMI -> ; [9:20]\n+IMPORT -> import [10:0]\n+|--DOT -> . [10:25]\n+|   |--DOT -> . [10:16]\n+|   |   |--DOT -> . [10:11]\n+|   |   |   |--IDENT -> java [10:7]\n+|   |   |   `--IDENT -> util [10:12]\n+|   |   `--IDENT -> function [10:17]\n+|   `--IDENT -> IntConsumer [10:26]\n+`--SEMI -> ; [10:37]\n+IMPORT -> import [11:0]\n+|--DOT -> . [11:25]\n+|   |--DOT -> . [11:16]\n+|   |   |--DOT -> . [11:11]\n+|   |   |   |--IDENT -> java [11:7]\n+|   |   |   `--IDENT -> util [11:12]\n+|   |   `--IDENT -> function [11:17]\n+|   `--IDENT -> Supplier [11:26]\n+`--SEMI -> ; [11:34]\n+CLASS_DEF -> CLASS_DEF [13:0]\n+|--MODIFIERS -> MODIFIERS [13:0]\n+|   `--LITERAL_PUBLIC -> public [13:0]\n+|--LITERAL_CLASS -> class [13:7]\n+|--IDENT -> InputJava14SwitchExpression [13:13]\n+`--OBJBLOCK -> OBJBLOCK [13:41]\n+    |--LCURLY -> { [13:41]\n+    |--CLASS_DEF -> CLASS_DEF [15:4]\n+    |   |--MODIFIERS -> MODIFIERS [15:4]\n+    |   |   `--LITERAL_STATIC -> static [15:4]\n+    |   |--LITERAL_CLASS -> class [15:11]\n+    |   |--IDENT -> HardToParse [15:17]\n+    |   `--OBJBLOCK -> OBJBLOCK [15:29]\n+    |       |--LCURLY -> { [15:29]\n+    |       |--METHOD_DEF -> METHOD_DEF [16:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [16:8]\n+    |       |   |--TYPE -> TYPE [16:8]\n+    |       |   |   `--LITERAL_VOID -> void [16:8]\n+    |       |   |--IDENT -> foo [16:13]\n+    |       |   |--LPAREN -> ( [16:16]\n+    |       |   |--PARAMETERS -> PARAMETERS [16:17]\n+    |       |   |--RPAREN -> ) [16:17]\n+    |       |   `--SLIST -> { [16:19]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [17:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [17:12]\n+    |       |       |   |--TYPE -> TYPE [17:12]\n+    |       |       |   |   `--IDENT -> Instant [17:12]\n+    |       |       |   `--IDENT -> Ascii [17:20]\n+    |       |       |--SEMI -> ; [17:25]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [18:16]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [18:16]\n+    |       |       |   |--TYPE -> TYPE [18:16]\n+    |       |       |   |   `--ARRAY_DECLARATOR -> [ [18:16]\n+    |       |       |   |       |--LITERAL_BYTE -> byte [18:12]\n+    |       |       |   |       `--RBRACK -> ] [18:17]\n+    |       |       |   |--IDENT -> decodabet [18:19]\n+    |       |       |   `--ASSIGN -> = [18:29]\n+    |       |       |       `--EXPR -> EXPR [18:31]\n+    |       |       |           `--LITERAL_NEW -> new [18:31]\n+    |       |       |               |--LITERAL_BYTE -> byte [18:35]\n+    |       |       |               `--ARRAY_DECLARATOR -> [ [18:39]\n+    |       |       |                   |--EXPR -> EXPR [18:40]\n+    |       |       |                   |   `--NUM_INT -> 1 [18:40]\n+    |       |       |                   `--RBRACK -> ] [18:41]\n+    |       |       |--SEMI -> ; [18:42]\n+    |       |       |--EXPR -> EXPR [19:23]\n+    |       |       |   `--METHOD_CALL -> ( [19:23]\n+    |       |       |       |--DOT -> . [19:18]\n+    |       |       |       |   |--IDENT -> Arrays [19:12]\n+    |       |       |       |   `--IDENT -> fill [19:19]\n+    |       |       |       |--ELIST -> ELIST [19:24]\n+    |       |       |       |   |--EXPR -> EXPR [19:24]\n+    |       |       |       |   |   `--IDENT -> decodabet [19:24]\n+    |       |       |       |   |--COMMA -> , [19:33]\n+    |       |       |       |   `--EXPR -> EXPR [19:35]\n+    |       |       |       |       `--TYPECAST -> ( [19:35]\n+    |       |       |       |           |--TYPE -> TYPE [19:36]\n+    |       |       |       |           |   `--LITERAL_BYTE -> byte [19:36]\n+    |       |       |       |           |--RPAREN -> ) [19:40]\n+    |       |       |       |           `--UNARY_MINUS -> - [19:42]\n+    |       |       |       |               `--NUM_INT -> 1 [19:43]\n+    |       |       |       `--RPAREN -> ) [19:44]\n+    |       |       |--SEMI -> ; [19:45]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [20:16]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [20:16]\n+    |       |       |   |--TYPE -> TYPE [20:16]\n+    |       |       |   |   `--ARRAY_DECLARATOR -> [ [20:16]\n+    |       |       |   |       |--LITERAL_CHAR -> char [20:12]\n+    |       |       |   |       `--RBRACK -> ] [20:17]\n+    |       |       |   |--IDENT -> chars [20:19]\n+    |       |       |   `--ASSIGN -> = [20:25]\n+    |       |       |       `--ARRAY_INIT -> { [20:27]\n+    |       |       |           |--EXPR -> EXPR [20:28]\n+    |       |       |           |   `--CHAR_LITERAL -> 'c' [20:28]\n+    |       |       |           |--COMMA -> , [20:31]\n+    |       |       |           |--EXPR -> EXPR [20:32]\n+    |       |       |           |   `--CHAR_LITERAL -> 'h' [20:32]\n+    |       |       |           |--COMMA -> , [20:35]\n+    |       |       |           |--EXPR -> EXPR [20:36]\n+    |       |       |           |   `--CHAR_LITERAL -> 'a' [20:36]\n+    |       |       |           |--COMMA -> , [20:39]\n+    |       |       |           |--EXPR -> EXPR [20:40]\n+    |       |       |           |   `--CHAR_LITERAL -> 'r' [20:40]\n+    |       |       |           |--COMMA -> , [20:43]\n+    |       |       |           |--EXPR -> EXPR [20:44]\n+    |       |       |           |   `--CHAR_LITERAL -> 's' [20:44]\n+    |       |       |           `--RCURLY -> } [20:47]\n+    |       |       |--SEMI -> ; [20:48]\n+    |       |       |--LITERAL_FOR -> for [21:12]\n+    |       |       |   |--LPAREN -> ( [21:16]\n+    |       |       |   |--FOR_INIT -> FOR_INIT [22:20]\n+    |       |       |   |   `--VARIABLE_DEF -> VARIABLE_DEF [22:20]\n+    |       |       |   |       |--MODIFIERS -> MODIFIERS [22:20]\n+    |       |       |   |       |--TYPE -> TYPE [22:20]\n+    |       |       |   |       |   `--LITERAL_INT -> int [22:20]\n+    |       |       |   |       |--IDENT -> i [22:24]\n+    |       |       |   |       `--ASSIGN -> = [22:26]\n+    |       |       |   |           `--EXPR -> EXPR [22:28]\n+    |       |       |   |               `--NUM_INT -> 0 [22:28]\n+    |       |       |   |--SEMI -> ; [22:29]\n+    |       |       |   |--FOR_CONDITION -> FOR_CONDITION [23:22]\n+    |       |       |   |   `--EXPR -> EXPR [23:22]\n+    |       |       |   |       `--LT -> < [23:22]\n+    |       |       |   |           |--IDENT -> i [23:20]\n+    |       |       |   |           `--DOT -> . [23:29]\n+    |       |       |   |               |--IDENT -> chars [23:24]\n+    |       |       |   |               `--IDENT -> length [23:30]\n+    |       |       |   |--SEMI -> ; [23:36]\n+    |       |       |   |--FOR_ITERATOR -> FOR_ITERATOR [23:39]\n+    |       |       |   |   `--ELIST -> ELIST [23:39]\n+    |       |       |   |       `--EXPR -> EXPR [23:39]\n+    |       |       |   |           `--POST_INC -> ++ [23:39]\n+    |       |       |   |               `--IDENT -> i [23:38]\n+    |       |       |   |--RPAREN -> ) [23:41]\n+    |       |       |   `--SLIST -> { [23:43]\n+    |       |       |       |--VARIABLE_DEF -> VARIABLE_DEF [24:16]\n+    |       |       |       |   |--MODIFIERS -> MODIFIERS [24:16]\n+    |       |       |       |   |--TYPE -> TYPE [24:16]\n+    |       |       |       |   |   `--LITERAL_CHAR -> char [24:16]\n+    |       |       |       |   |--IDENT -> c [24:21]\n+    |       |       |       |   `--ASSIGN -> = [24:23]\n+    |       |       |       |       `--EXPR -> EXPR [24:30]\n+    |       |       |       |           `--INDEX_OP -> [ [24:30]\n+    |       |       |       |               |--IDENT -> chars [24:25]\n+    |       |       |       |               |--EXPR -> EXPR [24:31]\n+    |       |       |       |               |   `--IDENT -> i [24:31]\n+    |       |       |       |               `--RBRACK -> ] [24:32]\n+    |       |       |       |--SEMI -> ; [24:33]\n+    |       |       |       |--EXPR -> EXPR [25:29]\n+    |       |       |       |   `--ASSIGN -> = [25:29]\n+    |       |       |       |       |--INDEX_OP -> [ [25:25]\n+    |       |       |       |       |   |--IDENT -> decodabet [25:16]\n+    |       |       |       |       |   |--EXPR -> EXPR [25:26]\n+    |       |       |       |       |   |   `--IDENT -> c [25:26]\n+    |       |       |       |       |   `--RBRACK -> ] [25:27]\n+    |       |       |       |       `--TYPECAST -> ( [25:31]\n+    |       |       |       |           |--TYPE -> TYPE [25:32]\n+    |       |       |       |           |   `--LITERAL_BYTE -> byte [25:32]\n+    |       |       |       |           |--RPAREN -> ) [25:36]\n+    |       |       |       |           `--IDENT -> i [25:38]\n+    |       |       |       |--SEMI -> ; [25:39]\n+    |       |       |       `--RCURLY -> } [26:12]\n+    |       |       `--RCURLY -> } [27:8]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [28:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [28:8]\n+    |       |   |--TYPE -> TYPE [28:8]\n+    |       |   |   `--IDENT -> IntConsumer [28:8]\n+    |       |   |--IDENT -> consumer [28:20]\n+    |       |   |--ASSIGN -> = [28:29]\n+    |       |   |   `--EXPR -> EXPR [28:31]\n+    |       |   |       `--TYPECAST -> ( [28:31]\n+    |       |   |           |--TYPE -> TYPE [28:32]\n+    |       |   |           |   `--IDENT -> IntConsumer [28:32]\n+    |       |   |           |--RPAREN -> ) [28:43]\n+    |       |   |           `--LAMBDA -> -> [28:47]\n+    |       |   |               |--IDENT -> i [28:45]\n+    |       |   |               `--SLIST -> { [28:50]\n+    |       |   |                   `--RCURLY -> } [29:8]\n+    |       |   `--SEMI -> ; [29:9]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [31:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [31:8]\n+    |       |   |   `--LITERAL_STATIC -> static [31:8]\n+    |       |   |--TYPE -> TYPE [31:15]\n+    |       |   |   `--IDENT -> String [31:15]\n+    |       |   |--IDENT -> yield [31:22]\n+    |       |   |--ASSIGN -> = [31:28]\n+    |       |   |   `--EXPR -> EXPR [31:30]\n+    |       |   |       `--STRING_LITERAL -> \"yield\" [31:30]\n+    |       |   `--SEMI -> ; [31:37]\n+    |       |--CLASS_DEF -> CLASS_DEF [33:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [33:8]\n+    |       |   |--LITERAL_CLASS -> class [33:8]\n+    |       |   |--IDENT -> yieldClass [33:14]\n+    |       |   `--OBJBLOCK -> OBJBLOCK [33:24]\n+    |       |       |--LCURLY -> { [33:24]\n+    |       |       |--VARIABLE_DEF -> VARIABLE_DEF [34:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [34:12]\n+    |       |       |   |--TYPE -> TYPE [34:12]\n+    |       |       |   |   `--LITERAL_INT -> int [34:12]\n+    |       |       |   |--IDENT -> yield [34:16]\n+    |       |       |   |--ASSIGN -> = [34:22]\n+    |       |       |   |   `--EXPR -> EXPR [34:24]\n+    |       |       |   |       `--NUM_INT -> 6 [34:24]\n+    |       |       |   `--SEMI -> ; [34:25]\n+    |       |       |--METHOD_DEF -> METHOD_DEF [36:12]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [36:12]\n+    |       |       |   |   `--LITERAL_PUBLIC -> public [36:12]\n+    |       |       |   |--TYPE -> TYPE [36:19]\n+    |       |       |   |   `--LITERAL_VOID -> void [36:19]\n+    |       |       |   |--IDENT -> yield [36:24]\n+    |       |       |   |--LPAREN -> ( [36:29]\n+    |       |       |   |--PARAMETERS -> PARAMETERS [36:30]\n+    |       |       |   |--RPAREN -> ) [36:30]\n+    |       |       |   `--SLIST -> { [36:31]\n+    |       |       |       `--RCURLY -> } [38:12]\n+    |       |       `--RCURLY -> } [39:8]\n+    |       `--RCURLY -> } [41:4]\n+    |--ENUM_DEF -> ENUM_DEF [43:4]\n+    |   |--MODIFIERS -> MODIFIERS [43:4]\n+    |   |--ENUM -> enum [43:4]\n+    |   |--IDENT -> Day [43:9]\n+    |   `--OBJBLOCK -> OBJBLOCK [43:13]\n+    |       |--LCURLY -> { [43:13]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [44:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [44:8]\n+    |       |   `--IDENT -> MON [44:8]\n+    |       |--COMMA -> , [44:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [45:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [45:8]\n+    |       |   `--IDENT -> TUE [45:8]\n+    |       |--COMMA -> , [45:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [46:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [46:8]\n+    |       |   `--IDENT -> WED [46:8]\n+    |       |--COMMA -> , [46:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [47:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [47:8]\n+    |       |   `--IDENT -> THU [47:8]\n+    |       |--COMMA -> , [47:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [48:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [48:8]\n+    |       |   `--IDENT -> FRI [48:8]\n+    |       |--COMMA -> , [48:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [49:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [49:8]\n+    |       |   `--IDENT -> SAT [49:8]\n+    |       |--COMMA -> , [49:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [50:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [50:8]\n+    |       |   `--IDENT -> SUN [50:8]\n+    |       |--COMMA -> , [50:11]\n+    |       `--RCURLY -> } [51:4]\n+    |--METHOD_DEF -> METHOD_DEF [53:4]\n+    |   |--MODIFIERS -> MODIFIERS [53:4]\n+    |   |--TYPE -> TYPE [53:4]\n+    |   |   `--IDENT -> String [53:4]\n+    |   |--IDENT -> whatIsToday [53:11]\n+    |   |--LPAREN -> ( [53:22]\n+    |   |--PARAMETERS -> PARAMETERS [53:23]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [53:23]\n+    |   |       |--MODIFIERS -> MODIFIERS [53:23]\n+    |   |       |--TYPE -> TYPE [53:23]\n+    |   |       |   `--IDENT -> Day [53:23]\n+    |   |       `--IDENT -> day [53:27]\n+    |   |--RPAREN -> ) [53:30]\n+    |   `--SLIST -> { [53:32]\n+    |       |--LITERAL_RETURN -> return [54:8]\n+    |       |   |--EXPR -> EXPR [54:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [54:15]\n+    |       |   |       |--LPAREN -> ( [54:22]\n+    |       |   |       |--EXPR -> EXPR [54:23]\n+    |       |   |       |   `--IDENT -> day [54:23]\n+    |       |   |       |--RPAREN -> ) [54:26]\n+    |       |   |       |--LCURLY -> { [54:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [55:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [55:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [55:17]\n+    |       |   |       |   |   |   `--IDENT -> SAT [55:17]\n+    |       |   |       |   |   |--COMMA -> , [55:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [55:22]\n+    |       |   |       |   |       `--IDENT -> SUN [55:22]\n+    |       |   |       |   |--LAMBDA -> -> [55:26]\n+    |       |   |       |   |--EXPR -> EXPR [55:29]\n+    |       |   |       |   |   `--STRING_LITERAL -> \"Weekend\" [55:29]\n+    |       |   |       |   `--SEMI -> ; [55:38]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [56:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [56:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [56:17]\n+    |       |   |       |   |   |--COMMA -> , [56:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:22]\n+    |       |   |       |   |   |   `--IDENT -> TUE [56:22]\n+    |       |   |       |   |   |--COMMA -> , [56:25]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:27]\n+    |       |   |       |   |   |   `--IDENT -> WED [56:27]\n+    |       |   |       |   |   |--COMMA -> , [56:30]\n+    |       |   |       |   |   |--EXPR -> EXPR [56:32]\n+    |       |   |       |   |   |   `--IDENT -> THU [56:32]\n+    |       |   |       |   |   |--COMMA -> , [56:35]\n+    |       |   |       |   |   `--EXPR -> EXPR [56:37]\n+    |       |   |       |   |       `--IDENT -> FRI [56:37]\n+    |       |   |       |   |--LAMBDA -> -> [56:41]\n+    |       |   |       |   |--EXPR -> EXPR [56:44]\n+    |       |   |       |   |   `--STRING_LITERAL -> \"Working day\" [56:44]\n+    |       |   |       |   `--SEMI -> ; [56:57]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [57:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [57:12]\n+    |       |   |       |   |--LAMBDA -> -> [57:20]\n+    |       |   |       |   `--LITERAL_THROW -> throw [57:23]\n+    |       |   |       |       |--EXPR -> EXPR [57:29]\n+    |       |   |       |       |   `--LITERAL_NEW -> new [57:29]\n+    |       |   |       |       |       |--IDENT -> IllegalArgumentException [57:33]\n+    |       |   |       |       |       |--LPAREN -> ( [57:57]\n+    |       |   |       |       |       |--ELIST -> ELIST [57:74]\n+    |       |   |       |       |       |   `--EXPR -> EXPR [57:74]\n+    |       |   |       |       |       |       `--PLUS -> + [57:74]\n+    |       |   |       |       |       |           |--STRING_LITERAL -> \"Invalid day: \" [57:58]\n+    |       |   |       |       |       |           `--METHOD_CALL -> ( [57:84]\n+    |       |   |       |       |       |               |--DOT -> . [57:79]\n+    |       |   |       |       |       |               |   |--IDENT -> day [57:76]\n+    |       |   |       |       |       |               |   `--IDENT -> name [57:80]\n+    |       |   |       |       |       |               |--ELIST -> ELIST [57:85]\n+    |       |   |       |       |       |               `--RPAREN -> ) [57:85]\n+    |       |   |       |       |       `--RPAREN -> ) [57:86]\n+    |       |   |       |       `--SEMI -> ; [57:87]\n+    |       |   |       `--RCURLY -> } [58:8]\n+    |       |   `--SEMI -> ; [58:9]\n+    |       `--RCURLY -> } [59:4]\n+    |--METHOD_DEF -> METHOD_DEF [61:4]\n+    |   |--MODIFIERS -> MODIFIERS [61:4]\n+    |   |--TYPE -> TYPE [61:4]\n+    |   |   |--IDENT -> Set [61:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [61:7]\n+    |   |       |--GENERIC_START -> < [61:7]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [61:8]\n+    |   |       |   `--IDENT -> Day [61:8]\n+    |   |       `--GENERIC_END -> > [61:11]\n+    |   |--IDENT -> days [61:13]\n+    |   |--LPAREN -> ( [61:17]\n+    |   |--PARAMETERS -> PARAMETERS [61:18]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [61:18]\n+    |   |       |--MODIFIERS -> MODIFIERS [61:18]\n+    |   |       |--TYPE -> TYPE [61:18]\n+    |   |       |   `--IDENT -> String [61:18]\n+    |   |       `--IDENT -> weekPart [61:25]\n+    |   |--RPAREN -> ) [61:33]\n+    |   `--SLIST -> { [61:35]\n+    |       |--LITERAL_RETURN -> return [62:8]\n+    |       |   |--EXPR -> EXPR [62:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [62:15]\n+    |       |   |       |--LPAREN -> ( [62:22]\n+    |       |   |       |--EXPR -> EXPR [62:23]\n+    |       |   |       |   `--IDENT -> weekPart [62:23]\n+    |       |   |       |--RPAREN -> ) [62:31]\n+    |       |   |       |--LCURLY -> { [62:33]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [63:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [63:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [63:17]\n+    |       |   |       |   |       `--STRING_LITERAL -> \"Weekend\" [63:17]\n+    |       |   |       |   |--LAMBDA -> -> [63:27]\n+    |       |   |       |   |--EXPR -> EXPR [63:40]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [63:40]\n+    |       |   |       |   |       |--DOT -> . [63:37]\n+    |       |   |       |   |       |   |--IDENT -> EnumSet [63:30]\n+    |       |   |       |   |       |   `--IDENT -> of [63:38]\n+    |       |   |       |   |       |--ELIST -> ELIST [63:44]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [63:44]\n+    |       |   |       |   |       |   |   `--DOT -> . [63:44]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [63:41]\n+    |       |   |       |   |       |   |       `--IDENT -> SAT [63:45]\n+    |       |   |       |   |       |   |--COMMA -> , [63:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [63:53]\n+    |       |   |       |   |       |       `--DOT -> . [63:53]\n+    |       |   |       |   |       |           |--IDENT -> Day [63:50]\n+    |       |   |       |   |       |           `--IDENT -> SUN [63:54]\n+    |       |   |       |   |       `--RPAREN -> ) [63:57]\n+    |       |   |       |   `--SEMI -> ; [63:58]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [64:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [64:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [64:17]\n+    |       |   |       |   |       `--STRING_LITERAL -> \"Working day\" [64:17]\n+    |       |   |       |   |--LAMBDA -> -> [64:31]\n+    |       |   |       |   |--EXPR -> EXPR [64:44]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [64:44]\n+    |       |   |       |   |       |--DOT -> . [64:41]\n+    |       |   |       |   |       |   |--IDENT -> EnumSet [64:34]\n+    |       |   |       |   |       |   `--IDENT -> of [64:42]\n+    |       |   |       |   |       |--ELIST -> ELIST [64:48]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:48]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:48]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:45]\n+    |       |   |       |   |       |   |       `--IDENT -> MON [64:49]\n+    |       |   |       |   |       |   |--COMMA -> , [64:52]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:57]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:57]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:54]\n+    |       |   |       |   |       |   |       `--IDENT -> TUE [64:58]\n+    |       |   |       |   |       |   |--COMMA -> , [64:61]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:66]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:66]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:63]\n+    |       |   |       |   |       |   |       `--IDENT -> WED [64:67]\n+    |       |   |       |   |       |   |--COMMA -> , [64:70]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [64:75]\n+    |       |   |       |   |       |   |   `--DOT -> . [64:75]\n+    |       |   |       |   |       |   |       |--IDENT -> Day [64:72]\n+    |       |   |       |   |       |   |       `--IDENT -> THU [64:76]\n+    |       |   |       |   |       |   |--COMMA -> , [64:79]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [64:84]\n+    |       |   |       |   |       |       `--DOT -> . [64:84]\n+    |       |   |       |   |       |           |--IDENT -> Day [64:81]\n+    |       |   |       |   |       |           `--IDENT -> FRI [64:85]\n+    |       |   |       |   |       `--RPAREN -> ) [64:88]\n+    |       |   |       |   `--SEMI -> ; [64:89]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [65:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [65:12]\n+    |       |   |       |   |--LAMBDA -> -> [65:20]\n+    |       |   |       |   `--LITERAL_THROW -> throw [65:23]\n+    |       |   |       |       |--EXPR -> EXPR [65:29]\n+    |       |   |       |       |   `--LITERAL_NEW -> new [65:29]\n+    |       |   |       |       |       |--IDENT -> IllegalArgumentException [65:33]\n+    |       |   |       |       |       |--LPAREN -> ( [65:57]\n+    |       |   |       |       |       |--ELIST -> ELIST [65:79]\n+    |       |   |       |       |       |   `--EXPR -> EXPR [65:79]\n+    |       |   |       |       |       |       `--PLUS -> + [65:79]\n+    |       |   |       |       |       |           |--STRING_LITERAL -> \"Invalid weekPart: \" [65:58]\n+    |       |   |       |       |       |           `--IDENT -> weekPart [65:81]\n+    |       |   |       |       |       `--RPAREN -> ) [65:89]\n+    |       |   |       |       `--SEMI -> ; [65:90]\n+    |       |   |       `--RCURLY -> } [66:8]\n+    |       |   `--SEMI -> ; [66:9]\n+    |       `--RCURLY -> } [67:4]\n+    |--METHOD_DEF -> METHOD_DEF [69:4]\n+    |   |--MODIFIERS -> MODIFIERS [69:4]\n+    |   |--TYPE -> TYPE [69:4]\n+    |   |   `--IDENT -> String [69:4]\n+    |   |--IDENT -> isDayNameLong [69:11]\n+    |   |--LPAREN -> ( [69:24]\n+    |   |--PARAMETERS -> PARAMETERS [69:25]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [69:25]\n+    |   |       |--MODIFIERS -> MODIFIERS [69:25]\n+    |   |       |--TYPE -> TYPE [69:25]\n+    |   |       |   `--IDENT -> Day [69:25]\n+    |   |       `--IDENT -> day [69:29]\n+    |   |--RPAREN -> ) [69:32]\n+    |   `--SLIST -> { [69:34]\n+    |       |--LITERAL_RETURN -> return [70:8]\n+    |       |   |--EXPR -> EXPR [75:14]\n+    |       |   |   `--QUESTION -> ? [75:14]\n+    |       |   |       |--GT -> > [75:10]\n+    |       |   |       |   |--LITERAL_SWITCH -> switch [70:15]\n+    |       |   |       |   |   |--LPAREN -> ( [70:22]\n+    |       |   |       |   |   |--EXPR -> EXPR [70:23]\n+    |       |   |       |   |   |   `--IDENT -> day [70:23]\n+    |       |   |       |   |   |--RPAREN -> ) [70:26]\n+    |       |   |       |   |   |--LCURLY -> { [70:28]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [71:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [71:12]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [71:17]\n+    |       |   |       |   |   |   |   |   `--IDENT -> MON [71:17]\n+    |       |   |       |   |   |   |   |--COMMA -> , [71:20]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [71:22]\n+    |       |   |       |   |   |   |   |   `--IDENT -> FRI [71:22]\n+    |       |   |       |   |   |   |   |--COMMA -> , [71:25]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [71:27]\n+    |       |   |       |   |   |   |       `--IDENT -> SUN [71:27]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [71:31]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [71:34]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 6 [71:34]\n+    |       |   |       |   |   |   `--SEMI -> ; [71:35]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [72:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [72:12]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [72:17]\n+    |       |   |       |   |   |   |       `--IDENT -> TUE [72:17]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [72:21]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [72:24]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 7 [72:24]\n+    |       |   |       |   |   |   `--SEMI -> ; [72:25]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [73:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [73:12]\n+    |       |   |       |   |   |   |   |--EXPR -> EXPR [73:17]\n+    |       |   |       |   |   |   |   |   `--IDENT -> THU [73:17]\n+    |       |   |       |   |   |   |   |--COMMA -> , [73:20]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [73:22]\n+    |       |   |       |   |   |   |       `--IDENT -> SAT [73:22]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [73:26]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [73:29]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 8 [73:29]\n+    |       |   |       |   |   |   `--SEMI -> ; [73:30]\n+    |       |   |       |   |   |--SWITCH_RULE -> SWITCH_RULE [74:12]\n+    |       |   |       |   |   |   |--LITERAL_CASE -> case [74:12]\n+    |       |   |       |   |   |   |   `--EXPR -> EXPR [74:17]\n+    |       |   |       |   |   |   |       `--IDENT -> WED [74:17]\n+    |       |   |       |   |   |   |--LAMBDA -> -> [74:21]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [74:24]\n+    |       |   |       |   |   |   |   `--NUM_INT -> 9 [74:24]\n+    |       |   |       |   |   |   `--SEMI -> ; [74:25]\n+    |       |   |       |   |   `--RCURLY -> } [75:8]\n+    |       |   |       |   `--NUM_INT -> 7 [75:12]\n+    |       |   |       |--STRING_LITERAL -> \"long\" [75:16]\n+    |       |   |       |--COLON -> : [75:23]\n+    |       |   |       `--STRING_LITERAL -> \"short\" [75:25]\n+    |       |   `--SEMI -> ; [75:32]\n+    |       `--RCURLY -> } [76:4]\n+    |--METHOD_DEF -> METHOD_DEF [78:4]\n+    |   |--MODIFIERS -> MODIFIERS [78:4]\n+    |   |--TYPE -> TYPE [78:4]\n+    |   |   `--LITERAL_INT -> int [78:4]\n+    |   |--IDENT -> assignement [78:8]\n+    |   |--LPAREN -> ( [78:19]\n+    |   |--PARAMETERS -> PARAMETERS [78:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [78:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [78:20]\n+    |   |       |--TYPE -> TYPE [78:20]\n+    |   |       |   `--IDENT -> Day [78:20]\n+    |   |       `--IDENT -> day [78:24]\n+    |   |--RPAREN -> ) [78:27]\n+    |   `--SLIST -> { [78:29]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [79:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [79:8]\n+    |       |   |--TYPE -> TYPE [79:8]\n+    |       |   |   `--LITERAL_INT -> int [79:8]\n+    |       |   |--IDENT -> numLetters [79:12]\n+    |       |   `--ASSIGN -> = [79:23]\n+    |       |       `--EXPR -> EXPR [79:25]\n+    |       |           `--LITERAL_SWITCH -> switch [79:25]\n+    |       |               |--LPAREN -> ( [79:32]\n+    |       |               |--EXPR -> EXPR [79:33]\n+    |       |               |   `--IDENT -> day [79:33]\n+    |       |               |--RPAREN -> ) [79:36]\n+    |       |               |--LCURLY -> { [79:38]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [80:12]\n+    |       |               |   |--LITERAL_CASE -> case [80:12]\n+    |       |               |   |   |--EXPR -> EXPR [80:17]\n+    |       |               |   |   |   `--IDENT -> MON [80:17]\n+    |       |               |   |   |--COMMA -> , [80:20]\n+    |       |               |   |   |--EXPR -> EXPR [80:22]\n+    |       |               |   |   |   `--IDENT -> FRI [80:22]\n+    |       |               |   |   |--COMMA -> , [80:25]\n+    |       |               |   |   `--EXPR -> EXPR [80:27]\n+    |       |               |   |       `--IDENT -> SUN [80:27]\n+    |       |               |   |--LAMBDA -> -> [80:31]\n+    |       |               |   |--EXPR -> EXPR [80:34]\n+    |       |               |   |   `--NUM_INT -> 6 [80:34]\n+    |       |               |   `--SEMI -> ; [80:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [81:12]\n+    |       |               |   |--LITERAL_CASE -> case [81:12]\n+    |       |               |   |   `--EXPR -> EXPR [81:17]\n+    |       |               |   |       `--IDENT -> TUE [81:17]\n+    |       |               |   |--LAMBDA -> -> [81:21]\n+    |       |               |   |--EXPR -> EXPR [81:24]\n+    |       |               |   |   `--NUM_INT -> 7 [81:24]\n+    |       |               |   `--SEMI -> ; [81:25]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [82:12]\n+    |       |               |   |--LITERAL_CASE -> case [82:12]\n+    |       |               |   |   |--EXPR -> EXPR [82:17]\n+    |       |               |   |   |   `--IDENT -> THU [82:17]\n+    |       |               |   |   |--COMMA -> , [82:20]\n+    |       |               |   |   `--EXPR -> EXPR [82:22]\n+    |       |               |   |       `--IDENT -> SAT [82:22]\n+    |       |               |   |--LAMBDA -> -> [82:26]\n+    |       |               |   |--EXPR -> EXPR [82:29]\n+    |       |               |   |   `--NUM_INT -> 8 [82:29]\n+    |       |               |   `--SEMI -> ; [82:30]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [83:12]\n+    |       |               |   |--LITERAL_CASE -> case [83:12]\n+    |       |               |   |   `--EXPR -> EXPR [83:17]\n+    |       |               |   |       `--IDENT -> WED [83:17]\n+    |       |               |   |--LAMBDA -> -> [83:21]\n+    |       |               |   |--EXPR -> EXPR [83:24]\n+    |       |               |   |   `--NUM_INT -> 9 [83:24]\n+    |       |               |   `--SEMI -> ; [83:25]\n+    |       |               `--RCURLY -> } [84:8]\n+    |       |--SEMI -> ; [84:9]\n+    |       |--LITERAL_RETURN -> return [85:8]\n+    |       |   |--EXPR -> EXPR [85:15]\n+    |       |   |   `--IDENT -> numLetters [85:15]\n+    |       |   `--SEMI -> ; [85:25]\n+    |       `--RCURLY -> } [86:4]\n+    |--METHOD_DEF -> METHOD_DEF [88:4]\n+    |   |--MODIFIERS -> MODIFIERS [88:4]\n+    |   |   `--LITERAL_STATIC -> static [88:4]\n+    |   |--TYPE -> TYPE [88:11]\n+    |   |   `--LITERAL_VOID -> void [88:11]\n+    |   |--IDENT -> howMany [88:16]\n+    |   |--LPAREN -> ( [88:23]\n+    |   |--PARAMETERS -> PARAMETERS [88:24]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [88:24]\n+    |   |       |--MODIFIERS -> MODIFIERS [88:24]\n+    |   |       |--TYPE -> TYPE [88:24]\n+    |   |       |   `--LITERAL_INT -> int [88:24]\n+    |   |       `--IDENT -> k [88:28]\n+    |   |--RPAREN -> ) [88:29]\n+    |   `--SLIST -> { [88:31]\n+    |       |--LITERAL_SWITCH -> switch [89:8]\n+    |       |   |--LPAREN -> ( [89:15]\n+    |       |   |--EXPR -> EXPR [89:16]\n+    |       |   |   `--IDENT -> k [89:16]\n+    |       |   |--RPAREN -> ) [89:17]\n+    |       |   |--LCURLY -> { [89:19]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [90:12]\n+    |       |   |   |--LITERAL_CASE -> case [90:12]\n+    |       |   |   |   `--EXPR -> EXPR [90:17]\n+    |       |   |   |       `--NUM_INT -> 1 [90:17]\n+    |       |   |   |--LAMBDA -> -> [90:19]\n+    |       |   |   |--EXPR -> EXPR [90:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [90:40]\n+    |       |   |   |       |--DOT -> . [90:32]\n+    |       |   |   |       |   |--DOT -> . [90:28]\n+    |       |   |   |       |   |   |--IDENT -> System [90:22]\n+    |       |   |   |       |   |   `--IDENT -> out [90:29]\n+    |       |   |   |       |   `--IDENT -> println [90:33]\n+    |       |   |   |       |--ELIST -> ELIST [90:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [90:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"one\" [90:41]\n+    |       |   |   |       `--RPAREN -> ) [90:46]\n+    |       |   |   `--SEMI -> ; [90:47]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [91:12]\n+    |       |   |   |--LITERAL_CASE -> case [91:12]\n+    |       |   |   |   `--EXPR -> EXPR [91:17]\n+    |       |   |   |       `--NUM_INT -> 2 [91:17]\n+    |       |   |   |--LAMBDA -> -> [91:19]\n+    |       |   |   |--EXPR -> EXPR [91:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [91:40]\n+    |       |   |   |       |--DOT -> . [91:32]\n+    |       |   |   |       |   |--DOT -> . [91:28]\n+    |       |   |   |       |   |   |--IDENT -> System [91:22]\n+    |       |   |   |       |   |   `--IDENT -> out [91:29]\n+    |       |   |   |       |   `--IDENT -> println [91:33]\n+    |       |   |   |       |--ELIST -> ELIST [91:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [91:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"two\" [91:41]\n+    |       |   |   |       `--RPAREN -> ) [91:46]\n+    |       |   |   `--SEMI -> ; [91:47]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [92:12]\n+    |       |   |   |--LITERAL_CASE -> case [92:12]\n+    |       |   |   |   `--EXPR -> EXPR [92:17]\n+    |       |   |   |       `--NUM_INT -> 3 [92:17]\n+    |       |   |   |--LAMBDA -> -> [92:19]\n+    |       |   |   |--EXPR -> EXPR [92:40]\n+    |       |   |   |   `--METHOD_CALL -> ( [92:40]\n+    |       |   |   |       |--DOT -> . [92:32]\n+    |       |   |   |       |   |--DOT -> . [92:28]\n+    |       |   |   |       |   |   |--IDENT -> System [92:22]\n+    |       |   |   |       |   |   `--IDENT -> out [92:29]\n+    |       |   |   |       |   `--IDENT -> println [92:33]\n+    |       |   |   |       |--ELIST -> ELIST [92:41]\n+    |       |   |   |       |   `--EXPR -> EXPR [92:41]\n+    |       |   |   |       |       `--STRING_LITERAL -> \"many\" [92:41]\n+    |       |   |   |       `--RPAREN -> ) [92:47]\n+    |       |   |   `--SEMI -> ; [92:48]\n+    |       |   |--SWITCH_RULE -> SWITCH_RULE [93:12]\n+    |       |   |   |--LITERAL_DEFAULT -> default [93:12]\n+    |       |   |   |--LAMBDA -> -> [93:20]\n+    |       |   |   `--LITERAL_THROW -> throw [93:23]\n+    |       |   |       |--EXPR -> EXPR [93:29]\n+    |       |   |       |   `--LITERAL_NEW -> new [93:29]\n+    |       |   |       |       |--IDENT -> IllegalArgumentException [93:33]\n+    |       |   |       |       |--LPAREN -> ( [93:57]\n+    |       |   |       |       |--ELIST -> ELIST [93:58]\n+    |       |   |       |       |   `--EXPR -> EXPR [93:58]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"Unknown\" [93:58]\n+    |       |   |       |       `--RPAREN -> ) [93:67]\n+    |       |   |       `--SEMI -> ; [93:68]\n+    |       |   `--RCURLY -> } [94:8]\n+    |       `--RCURLY -> } [95:4]\n+    |--METHOD_DEF -> METHOD_DEF [97:4]\n+    |   |--MODIFIERS -> MODIFIERS [97:4]\n+    |   |--TYPE -> TYPE [97:4]\n+    |   |   `--LITERAL_INT -> int [97:4]\n+    |   |--IDENT -> methodCalls [97:8]\n+    |   |--LPAREN -> ( [97:19]\n+    |   |--PARAMETERS -> PARAMETERS [97:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [97:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [97:20]\n+    |   |       |--TYPE -> TYPE [97:20]\n+    |   |       |   `--IDENT -> Day [97:20]\n+    |   |       `--IDENT -> day [97:24]\n+    |   |--RPAREN -> ) [97:27]\n+    |   `--SLIST -> { [97:29]\n+    |       |--LITERAL_RETURN -> return [98:8]\n+    |       |   |--EXPR -> EXPR [98:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [98:15]\n+    |       |   |       |--LPAREN -> ( [98:22]\n+    |       |   |       |--EXPR -> EXPR [98:23]\n+    |       |   |       |   `--IDENT -> day [98:23]\n+    |       |   |       |--RPAREN -> ) [98:26]\n+    |       |   |       |--LCURLY -> { [98:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [99:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [99:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [99:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [99:17]\n+    |       |   |       |   |   |--COMMA -> , [99:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [99:22]\n+    |       |   |       |   |       `--IDENT -> TUE [99:22]\n+    |       |   |       |   |--LAMBDA -> -> [99:26]\n+    |       |   |       |   |--EXPR -> EXPR [99:42]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [99:42]\n+    |       |   |       |   |       |--DOT -> . [99:33]\n+    |       |   |       |   |       |   |--IDENT -> Math [99:29]\n+    |       |   |       |   |       |   `--IDENT -> addExact [99:34]\n+    |       |   |       |   |       |--ELIST -> ELIST [99:43]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [99:43]\n+    |       |   |       |   |       |   |   `--NUM_INT -> 0 [99:43]\n+    |       |   |       |   |       |   |--COMMA -> , [99:44]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [99:46]\n+    |       |   |       |   |       |       `--NUM_INT -> 1 [99:46]\n+    |       |   |       |   |       `--RPAREN -> ) [99:47]\n+    |       |   |       |   `--SEMI -> ; [99:48]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [100:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [100:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [100:17]\n+    |       |   |       |   |       `--IDENT -> WED [100:17]\n+    |       |   |       |   |--LAMBDA -> -> [100:21]\n+    |       |   |       |   |--EXPR -> EXPR [100:37]\n+    |       |   |       |   |   `--METHOD_CALL -> ( [100:37]\n+    |       |   |       |   |       |--DOT -> . [100:28]\n+    |       |   |       |   |       |   |--IDENT -> Math [100:24]\n+    |       |   |       |   |       |   `--IDENT -> addExact [100:29]\n+    |       |   |       |   |       |--ELIST -> ELIST [100:38]\n+    |       |   |       |   |       |   |--EXPR -> EXPR [100:38]\n+    |       |   |       |   |       |   |   `--NUM_INT -> 1 [100:38]\n+    |       |   |       |   |       |   |--COMMA -> , [100:39]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [100:41]\n+    |       |   |       |   |       |       `--NUM_INT -> 1 [100:41]\n+    |       |   |       |   |       `--RPAREN -> ) [100:42]\n+    |       |   |       |   `--SEMI -> ; [100:43]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [101:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [101:12]\n+    |       |   |       |   |--LAMBDA -> -> [101:20]\n+    |       |   |       |   `--SLIST -> { [101:23]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [102:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [102:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [102:35]\n+    |       |   |       |       |   |       |--DOT -> . [102:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [102:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [102:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [102:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [102:36]\n+    |       |   |       |       |   |       |   |   `--NUM_INT -> 2 [102:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [102:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [102:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 1 [102:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [102:40]\n+    |       |   |       |       |   `--SEMI -> ; [102:41]\n+    |       |   |       |       `--RCURLY -> } [103:12]\n+    |       |   |       `--RCURLY -> } [104:8]\n+    |       |   `--SEMI -> ; [104:9]\n+    |       `--RCURLY -> } [105:4]\n+    |--METHOD_DEF -> METHOD_DEF [107:4]\n+    |   |--MODIFIERS -> MODIFIERS [107:4]\n+    |   |--TYPE -> TYPE [107:4]\n+    |   |   `--LITERAL_INT -> int [107:4]\n+    |   |--IDENT -> yieldAcceptsExpressions [107:8]\n+    |   |--LPAREN -> ( [107:31]\n+    |   |--PARAMETERS -> PARAMETERS [107:32]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [107:32]\n+    |   |       |--MODIFIERS -> MODIFIERS [107:32]\n+    |   |       |--TYPE -> TYPE [107:32]\n+    |   |       |   `--IDENT -> Day [107:32]\n+    |   |       `--IDENT -> day [107:36]\n+    |   |--RPAREN -> ) [107:39]\n+    |   `--SLIST -> { [107:41]\n+    |       |--LITERAL_RETURN -> return [108:8]\n+    |       |   |--EXPR -> EXPR [108:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [108:15]\n+    |       |   |       |--LPAREN -> ( [108:22]\n+    |       |   |       |--EXPR -> EXPR [108:23]\n+    |       |   |       |   `--IDENT -> day [108:23]\n+    |       |   |       |--RPAREN -> ) [108:26]\n+    |       |   |       |--LCURLY -> { [108:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [109:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [109:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [109:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [109:17]\n+    |       |   |       |   |   |--COMMA -> , [109:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [109:22]\n+    |       |   |       |   |       `--IDENT -> TUE [109:22]\n+    |       |   |       |   |--LAMBDA -> -> [109:26]\n+    |       |   |       |   |--EXPR -> EXPR [109:29]\n+    |       |   |       |   |   `--NUM_INT -> 0 [109:29]\n+    |       |   |       |   `--SEMI -> ; [109:30]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [110:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [110:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [110:17]\n+    |       |   |       |   |       `--IDENT -> WED [110:17]\n+    |       |   |       |   |--LAMBDA -> -> [110:21]\n+    |       |   |       |   |--EXPR -> EXPR [110:24]\n+    |       |   |       |   |   `--NUM_INT -> 1 [110:24]\n+    |       |   |       |   `--SEMI -> ; [110:25]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [111:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [111:12]\n+    |       |   |       |   |--LAMBDA -> -> [111:20]\n+    |       |   |       |   |--EXPR -> EXPR [111:51]\n+    |       |   |       |   |   `--QUESTION -> ? [111:51]\n+    |       |   |       |   |       |--GT -> > [111:47]\n+    |       |   |       |   |       |   |--METHOD_CALL -> ( [111:44]\n+    |       |   |       |   |       |   |   |--DOT -> . [111:37]\n+    |       |   |       |   |       |   |   |   |--METHOD_CALL -> ( [111:35]\n+    |       |   |       |   |       |   |   |   |   |--DOT -> . [111:26]\n+    |       |   |       |   |       |   |   |   |   |   |--IDENT -> day [111:23]\n+    |       |   |       |   |       |   |   |   |   |   `--IDENT -> toString [111:27]\n+    |       |   |       |   |       |   |   |   |   |--ELIST -> ELIST [111:36]\n+    |       |   |       |   |       |   |   |   |   `--RPAREN -> ) [111:36]\n+    |       |   |       |   |       |   |   |   `--IDENT -> length [111:38]\n+    |       |   |       |   |       |   |   |--ELIST -> ELIST [111:45]\n+    |       |   |       |   |       |   |   `--RPAREN -> ) [111:45]\n+    |       |   |       |   |       |   `--NUM_INT -> 5 [111:49]\n+    |       |   |       |   |       |--NUM_INT -> 1 [111:53]\n+    |       |   |       |   |       |--COLON -> : [111:55]\n+    |       |   |       |   |       `--NUM_INT -> 0 [111:57]\n+    |       |   |       |   `--SEMI -> ; [111:58]\n+    |       |   |       `--RCURLY -> } [112:8]\n+    |       |   `--SEMI -> ; [112:9]\n+    |       `--RCURLY -> } [113:4]\n+    |--METHOD_DEF -> METHOD_DEF [115:4]\n+    |   |--MODIFIERS -> MODIFIERS [115:4]\n+    |   |--TYPE -> TYPE [115:4]\n+    |   |   `--LITERAL_INT -> int [115:4]\n+    |   |--IDENT -> complexCase [115:8]\n+    |   |--LPAREN -> ( [115:19]\n+    |   |--PARAMETERS -> PARAMETERS [115:20]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [115:20]\n+    |   |       |--MODIFIERS -> MODIFIERS [115:20]\n+    |   |       |--TYPE -> TYPE [115:20]\n+    |   |       |   `--IDENT -> Day [115:20]\n+    |   |       `--IDENT -> day [115:24]\n+    |   |--RPAREN -> ) [115:27]\n+    |   `--SLIST -> { [115:29]\n+    |       |--LITERAL_RETURN -> return [116:8]\n+    |       |   |--EXPR -> EXPR [116:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [116:15]\n+    |       |   |       |--LPAREN -> ( [116:22]\n+    |       |   |       |--EXPR -> EXPR [116:23]\n+    |       |   |       |   `--IDENT -> day [116:23]\n+    |       |   |       |--RPAREN -> ) [116:26]\n+    |       |   |       |--LCURLY -> { [116:28]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [117:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [117:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [117:17]\n+    |       |   |       |   |   |   `--IDENT -> MON [117:17]\n+    |       |   |       |   |   |--COMMA -> , [117:20]\n+    |       |   |       |   |   `--EXPR -> EXPR [117:22]\n+    |       |   |       |   |       `--IDENT -> TUE [117:22]\n+    |       |   |       |   |--LAMBDA -> -> [117:26]\n+    |       |   |       |   `--SLIST -> { [117:29]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [118:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [118:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [118:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [118:16]\n+    |       |   |       |       |   |--IDENT -> l [118:20]\n+    |       |   |       |       |   `--ASSIGN -> = [118:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [118:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [118:45]\n+    |       |   |       |       |               |--DOT -> . [118:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [118:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [118:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [118:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [118:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [118:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [118:37]\n+    |       |   |       |       |               |   `--IDENT -> length [118:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [118:46]\n+    |       |   |       |       |               `--RPAREN -> ) [118:46]\n+    |       |   |       |       |--SEMI -> ; [118:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [119:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [119:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [119:35]\n+    |       |   |       |       |   |       |--DOT -> . [119:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [119:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [119:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [119:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [119:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [119:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [119:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [119:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 0 [119:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [119:40]\n+    |       |   |       |       |   `--SEMI -> ; [119:41]\n+    |       |   |       |       `--RCURLY -> } [120:12]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [121:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [121:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [121:17]\n+    |       |   |       |   |       `--IDENT -> WED [121:17]\n+    |       |   |       |   |--LAMBDA -> -> [121:21]\n+    |       |   |       |   `--SLIST -> { [121:24]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [122:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [122:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [122:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [122:16]\n+    |       |   |       |       |   |--IDENT -> l [122:20]\n+    |       |   |       |       |   `--ASSIGN -> = [122:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [122:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [122:45]\n+    |       |   |       |       |               |--DOT -> . [122:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [122:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [122:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [122:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [122:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [122:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [122:37]\n+    |       |   |       |       |               |   `--IDENT -> length [122:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [122:46]\n+    |       |   |       |       |               `--RPAREN -> ) [122:46]\n+    |       |   |       |       |--SEMI -> ; [122:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [123:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [123:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [123:35]\n+    |       |   |       |       |   |       |--DOT -> . [123:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [123:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [123:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [123:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [123:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [123:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [123:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [123:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 1 [123:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [123:40]\n+    |       |   |       |       |   `--SEMI -> ; [123:41]\n+    |       |   |       |       `--RCURLY -> } [124:12]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [125:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [125:12]\n+    |       |   |       |   |--LAMBDA -> -> [125:20]\n+    |       |   |       |   `--SLIST -> { [125:23]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [126:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [126:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [126:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [126:16]\n+    |       |   |       |       |   |--IDENT -> l [126:20]\n+    |       |   |       |       |   `--ASSIGN -> = [126:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [126:45]\n+    |       |   |       |       |           `--METHOD_CALL -> ( [126:45]\n+    |       |   |       |       |               |--DOT -> . [126:38]\n+    |       |   |       |       |               |   |--METHOD_CALL -> ( [126:36]\n+    |       |   |       |       |               |   |   |--DOT -> . [126:27]\n+    |       |   |       |       |               |   |   |   |--IDENT -> day [126:24]\n+    |       |   |       |       |               |   |   |   `--IDENT -> toString [126:28]\n+    |       |   |       |       |               |   |   |--ELIST -> ELIST [126:37]\n+    |       |   |       |       |               |   |   `--RPAREN -> ) [126:37]\n+    |       |   |       |       |               |   `--IDENT -> length [126:39]\n+    |       |   |       |       |               |--ELIST -> ELIST [126:46]\n+    |       |   |       |       |               `--RPAREN -> ) [126:46]\n+    |       |   |       |       |--SEMI -> ; [126:47]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [127:16]\n+    |       |   |       |       |   |--EXPR -> EXPR [127:35]\n+    |       |   |       |       |   |   `--METHOD_CALL -> ( [127:35]\n+    |       |   |       |       |   |       |--DOT -> . [127:26]\n+    |       |   |       |       |   |       |   |--IDENT -> Math [127:22]\n+    |       |   |       |       |   |       |   `--IDENT -> addExact [127:27]\n+    |       |   |       |       |   |       |--ELIST -> ELIST [127:36]\n+    |       |   |       |       |   |       |   |--EXPR -> EXPR [127:36]\n+    |       |   |       |       |   |       |   |   `--IDENT -> l [127:36]\n+    |       |   |       |       |   |       |   |--COMMA -> , [127:37]\n+    |       |   |       |       |   |       |   `--EXPR -> EXPR [127:39]\n+    |       |   |       |       |   |       |       `--NUM_INT -> 2 [127:39]\n+    |       |   |       |       |   |       `--RPAREN -> ) [127:40]\n+    |       |   |       |       |   `--SEMI -> ; [127:41]\n+    |       |   |       |       `--RCURLY -> } [128:12]\n+    |       |   |       `--RCURLY -> } [129:8]\n+    |       |   `--SEMI -> ; [129:9]\n+    |       `--RCURLY -> } [130:4]\n+    |--METHOD_DEF -> METHOD_DEF [132:4]\n+    |   |--MODIFIERS -> MODIFIERS [132:4]\n+    |   |--TYPE -> TYPE [132:4]\n+    |   |   `--LITERAL_INT -> int [132:4]\n+    |   |--IDENT -> arithmetic [132:8]\n+    |   |--LPAREN -> ( [132:18]\n+    |   |--PARAMETERS -> PARAMETERS [132:19]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [132:19]\n+    |   |       |--MODIFIERS -> MODIFIERS [132:19]\n+    |   |       |--TYPE -> TYPE [132:19]\n+    |   |       |   `--IDENT -> Day [132:19]\n+    |   |       `--IDENT -> day [132:23]\n+    |   |--RPAREN -> ) [132:26]\n+    |   `--SLIST -> { [132:28]\n+    |       |--LITERAL_RETURN -> return [133:8]\n+    |       |   |--EXPR -> EXPR [138:10]\n+    |       |   |   `--MOD -> % [138:10]\n+    |       |   |       |--LITERAL_SWITCH -> switch [133:15]\n+    |       |   |       |   |--LPAREN -> ( [133:22]\n+    |       |   |       |   |--EXPR -> EXPR [133:23]\n+    |       |   |       |   |   `--IDENT -> day [133:23]\n+    |       |   |       |   |--RPAREN -> ) [133:26]\n+    |       |   |       |   |--LCURLY -> { [133:28]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [134:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [134:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [134:17]\n+    |       |   |       |   |   |   |   `--IDENT -> MON [134:17]\n+    |       |   |       |   |   |   |--COMMA -> , [134:20]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [134:22]\n+    |       |   |       |   |   |   |   `--IDENT -> FRI [134:22]\n+    |       |   |       |   |   |   |--COMMA -> , [134:25]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [134:27]\n+    |       |   |       |   |   |       `--IDENT -> SUN [134:27]\n+    |       |   |       |   |   |--LAMBDA -> -> [134:31]\n+    |       |   |       |   |   |--EXPR -> EXPR [134:34]\n+    |       |   |       |   |   |   `--NUM_INT -> 6 [134:34]\n+    |       |   |       |   |   `--SEMI -> ; [134:35]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [135:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [135:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [135:17]\n+    |       |   |       |   |   |       `--IDENT -> TUE [135:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [135:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [135:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 7 [135:24]\n+    |       |   |       |   |   `--SEMI -> ; [135:25]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [136:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [136:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [136:17]\n+    |       |   |       |   |   |   |   `--IDENT -> THU [136:17]\n+    |       |   |       |   |   |   |--COMMA -> , [136:20]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [136:22]\n+    |       |   |       |   |   |       `--IDENT -> SAT [136:22]\n+    |       |   |       |   |   |--LAMBDA -> -> [136:26]\n+    |       |   |       |   |   |--EXPR -> EXPR [136:29]\n+    |       |   |       |   |   |   `--NUM_INT -> 8 [136:29]\n+    |       |   |       |   |   `--SEMI -> ; [136:30]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [137:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [137:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [137:17]\n+    |       |   |       |   |   |       `--IDENT -> WED [137:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [137:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [137:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 9 [137:24]\n+    |       |   |       |   |   `--SEMI -> ; [137:25]\n+    |       |   |       |   `--RCURLY -> } [138:8]\n+    |       |   |       `--NUM_INT -> 2 [138:12]\n+    |       |   `--SEMI -> ; [138:13]\n+    |       `--RCURLY -> } [139:4]\n+    |--METHOD_DEF -> METHOD_DEF [141:4]\n+    |   |--MODIFIERS -> MODIFIERS [141:4]\n+    |   |--TYPE -> TYPE [141:4]\n+    |   |   `--LITERAL_INT -> int [141:4]\n+    |   |--IDENT -> signArithmetic [141:8]\n+    |   |--LPAREN -> ( [141:22]\n+    |   |--PARAMETERS -> PARAMETERS [141:23]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [141:23]\n+    |   |       |--MODIFIERS -> MODIFIERS [141:23]\n+    |   |       |--TYPE -> TYPE [141:23]\n+    |   |       |   `--IDENT -> Day [141:23]\n+    |   |       `--IDENT -> day [141:27]\n+    |   |--RPAREN -> ) [141:30]\n+    |   `--SLIST -> { [141:32]\n+    |       |--LITERAL_RETURN -> return [142:8]\n+    |       |   |--EXPR -> EXPR [142:15]\n+    |       |   |   `--UNARY_MINUS -> - [142:15]\n+    |       |   |       `--LITERAL_SWITCH -> switch [142:16]\n+    |       |   |           |--LPAREN -> ( [142:23]\n+    |       |   |           |--EXPR -> EXPR [142:24]\n+    |       |   |           |   `--IDENT -> day [142:24]\n+    |       |   |           |--RPAREN -> ) [142:27]\n+    |       |   |           |--LCURLY -> { [142:29]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [143:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [143:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [143:17]\n+    |       |   |           |   |   |   `--IDENT -> MON [143:17]\n+    |       |   |           |   |   |--COMMA -> , [143:20]\n+    |       |   |           |   |   |--EXPR -> EXPR [143:22]\n+    |       |   |           |   |   |   `--IDENT -> FRI [143:22]\n+    |       |   |           |   |   |--COMMA -> , [143:25]\n+    |       |   |           |   |   `--EXPR -> EXPR [143:27]\n+    |       |   |           |   |       `--IDENT -> SUN [143:27]\n+    |       |   |           |   |--LAMBDA -> -> [143:31]\n+    |       |   |           |   |--EXPR -> EXPR [143:34]\n+    |       |   |           |   |   `--NUM_INT -> 6 [143:34]\n+    |       |   |           |   `--SEMI -> ; [143:35]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [144:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [144:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [144:17]\n+    |       |   |           |   |       `--IDENT -> TUE [144:17]\n+    |       |   |           |   |--LAMBDA -> -> [144:21]\n+    |       |   |           |   |--EXPR -> EXPR [144:24]\n+    |       |   |           |   |   `--NUM_INT -> 7 [144:24]\n+    |       |   |           |   `--SEMI -> ; [144:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [145:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [145:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [145:17]\n+    |       |   |           |   |   |   `--IDENT -> THU [145:17]\n+    |       |   |           |   |   |--COMMA -> , [145:20]\n+    |       |   |           |   |   `--EXPR -> EXPR [145:22]\n+    |       |   |           |   |       `--IDENT -> SAT [145:22]\n+    |       |   |           |   |--LAMBDA -> -> [145:26]\n+    |       |   |           |   |--EXPR -> EXPR [145:29]\n+    |       |   |           |   |   `--NUM_INT -> 8 [145:29]\n+    |       |   |           |   `--SEMI -> ; [145:30]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [146:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [146:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [146:17]\n+    |       |   |           |   |       `--IDENT -> WED [146:17]\n+    |       |   |           |   |--LAMBDA -> -> [146:21]\n+    |       |   |           |   |--EXPR -> EXPR [146:24]\n+    |       |   |           |   |   `--NUM_INT -> 9 [146:24]\n+    |       |   |           |   `--SEMI -> ; [146:25]\n+    |       |   |           `--RCURLY -> } [147:8]\n+    |       |   `--SEMI -> ; [147:9]\n+    |       `--RCURLY -> } [148:4]\n+    |--METHOD_DEF -> METHOD_DEF [150:4]\n+    |   |--MODIFIERS -> MODIFIERS [150:4]\n+    |   |--TYPE -> TYPE [150:4]\n+    |   |   `--LITERAL_INT -> int [150:4]\n+    |   |--IDENT -> usedOnBothSidesOfArithmeticExpression [150:8]\n+    |   |--LPAREN -> ( [150:45]\n+    |   |--PARAMETERS -> PARAMETERS [150:46]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [150:46]\n+    |   |       |--MODIFIERS -> MODIFIERS [150:46]\n+    |   |       |--TYPE -> TYPE [150:46]\n+    |   |       |   `--IDENT -> Day [150:46]\n+    |   |       `--IDENT -> day [150:50]\n+    |   |--RPAREN -> ) [150:53]\n+    |   `--SLIST -> { [150:55]\n+    |       |--LITERAL_RETURN -> return [151:8]\n+    |       |   |--EXPR -> EXPR [155:10]\n+    |       |   |   `--STAR -> * [155:10]\n+    |       |   |       |--LITERAL_SWITCH -> switch [151:15]\n+    |       |   |       |   |--LPAREN -> ( [151:22]\n+    |       |   |       |   |--EXPR -> EXPR [151:23]\n+    |       |   |       |   |   `--IDENT -> day [151:23]\n+    |       |   |       |   |--RPAREN -> ) [151:26]\n+    |       |   |       |   |--LCURLY -> { [151:28]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [152:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [152:12]\n+    |       |   |       |   |   |   |--EXPR -> EXPR [152:17]\n+    |       |   |       |   |   |   |   `--IDENT -> MON [152:17]\n+    |       |   |       |   |   |   |--COMMA -> , [152:20]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [152:22]\n+    |       |   |       |   |   |       `--IDENT -> TUE [152:22]\n+    |       |   |       |   |   |--LAMBDA -> -> [152:26]\n+    |       |   |       |   |   |--EXPR -> EXPR [152:29]\n+    |       |   |       |   |   |   `--NUM_INT -> 0 [152:29]\n+    |       |   |       |   |   `--SEMI -> ; [152:30]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [153:12]\n+    |       |   |       |   |   |--LITERAL_CASE -> case [153:12]\n+    |       |   |       |   |   |   `--EXPR -> EXPR [153:17]\n+    |       |   |       |   |   |       `--IDENT -> WED [153:17]\n+    |       |   |       |   |   |--LAMBDA -> -> [153:21]\n+    |       |   |       |   |   |--EXPR -> EXPR [153:24]\n+    |       |   |       |   |   |   `--NUM_INT -> 1 [153:24]\n+    |       |   |       |   |   `--SEMI -> ; [153:25]\n+    |       |   |       |   |--SWITCH_RULE -> SWITCH_RULE [154:12]\n+    |       |   |       |   |   |--LITERAL_DEFAULT -> default [154:12]\n+    |       |   |       |   |   |--LAMBDA -> -> [154:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [154:23]\n+    |       |   |       |   |   |   `--NUM_INT -> 2 [154:23]\n+    |       |   |       |   |   `--SEMI -> ; [154:24]\n+    |       |   |       |   `--RCURLY -> } [155:8]\n+    |       |   |       `--LITERAL_SWITCH -> switch [155:12]\n+    |       |   |           |--LPAREN -> ( [155:19]\n+    |       |   |           |--EXPR -> EXPR [155:20]\n+    |       |   |           |   `--IDENT -> day [155:20]\n+    |       |   |           |--RPAREN -> ) [155:23]\n+    |       |   |           |--LCURLY -> { [155:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [156:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [156:12]\n+    |       |   |           |   |   |--EXPR -> EXPR [156:17]\n+    |       |   |           |   |   |   `--IDENT -> WED [156:17]\n+    |       |   |           |   |   |--COMMA -> , [156:20]\n+    |       |   |           |   |   `--EXPR -> EXPR [156:22]\n+    |       |   |           |   |       `--IDENT -> THU [156:22]\n+    |       |   |           |   |--LAMBDA -> -> [156:26]\n+    |       |   |           |   |--EXPR -> EXPR [156:29]\n+    |       |   |           |   |   `--NUM_INT -> 3 [156:29]\n+    |       |   |           |   `--SEMI -> ; [156:30]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [157:12]\n+    |       |   |           |   |--LITERAL_CASE -> case [157:12]\n+    |       |   |           |   |   `--EXPR -> EXPR [157:17]\n+    |       |   |           |   |       `--IDENT -> FRI [157:17]\n+    |       |   |           |   |--LAMBDA -> -> [157:21]\n+    |       |   |           |   |--EXPR -> EXPR [157:24]\n+    |       |   |           |   |   `--NUM_INT -> 4 [157:24]\n+    |       |   |           |   `--SEMI -> ; [157:25]\n+    |       |   |           |--SWITCH_RULE -> SWITCH_RULE [158:12]\n+    |       |   |           |   |--LITERAL_DEFAULT -> default [158:12]\n+    |       |   |           |   |--LAMBDA -> -> [158:20]\n+    |       |   |           |   |--EXPR -> EXPR [158:23]\n+    |       |   |           |   |   `--NUM_INT -> 5 [158:23]\n+    |       |   |           |   `--SEMI -> ; [158:24]\n+    |       |   |           `--RCURLY -> } [159:8]\n+    |       |   `--SEMI -> ; [159:9]\n+    |       `--RCURLY -> } [160:4]\n+    |--INSTANCE_INIT -> INSTANCE_INIT [162:4]\n+    |   `--SLIST -> { [162:4]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [163:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [163:8]\n+    |       |   |--TYPE -> TYPE [163:8]\n+    |       |   |   `--IDENT -> Integer [163:8]\n+    |       |   |--IDENT -> i [163:16]\n+    |       |   `--ASSIGN -> = [163:18]\n+    |       |       `--EXPR -> EXPR [163:20]\n+    |       |           `--NUM_INT -> 0 [163:20]\n+    |       |--SEMI -> ; [163:21]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [164:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [164:8]\n+    |       |   |--TYPE -> TYPE [164:8]\n+    |       |   |   `--IDENT -> Object [164:8]\n+    |       |   |--IDENT -> o1 [164:15]\n+    |       |   `--ASSIGN -> = [164:18]\n+    |       |       `--EXPR -> EXPR [164:20]\n+    |       |           `--STRING_LITERAL -> \"o1\" [164:20]\n+    |       |--SEMI -> ; [164:24]\n+    |       |--LITERAL_IF -> if [166:8]\n+    |       |   |--LPAREN -> ( [166:11]\n+    |       |   |--EXPR -> EXPR [166:12]\n+    |       |   |   `--LNOT -> ! [166:12]\n+    |       |   |       `--LITERAL_SWITCH -> switch [166:13]\n+    |       |   |           |--LPAREN -> ( [166:20]\n+    |       |   |           |--EXPR -> EXPR [166:21]\n+    |       |   |           |   `--IDENT -> i [166:21]\n+    |       |   |           |--RPAREN -> ) [166:22]\n+    |       |   |           |--LCURLY -> { [166:24]\n+    |       |   |           |--CASE_GROUP -> CASE_GROUP [167:12]\n+    |       |   |           |   |--LITERAL_DEFAULT -> default [167:12]\n+    |       |   |           |   |   `--COLON -> : [167:19]\n+    |       |   |           |   `--SLIST -> SLIST [168:16]\n+    |       |   |           |       |--LITERAL_IF -> if [168:16]\n+    |       |   |           |       |   |--LPAREN -> ( [168:19]\n+    |       |   |           |       |   |--EXPR -> EXPR [168:20]\n+    |       |   |           |       |   |   `--LNOT -> ! [168:20]\n+    |       |   |           |       |   |       |--LPAREN -> ( [168:21]\n+    |       |   |           |       |   |       |--LITERAL_INSTANCEOF -> instanceof [168:25]\n+    |       |   |           |       |   |       |   |--IDENT -> o1 [168:22]\n+    |       |   |           |       |   |       |   `--PATTERN_VARIABLE_DEF -> PATTERN_VARIABLE_DEF [168:36]\n+    |       |   |           |       |   |       |       |--TYPE -> TYPE [168:36]\n+    |       |   |           |       |   |       |       |   `--IDENT -> String [168:36]\n+    |       |   |           |       |   |       |       `--IDENT -> str [168:43]\n+    |       |   |           |       |   |       `--RPAREN -> ) [168:46]\n+    |       |   |           |       |   |--RPAREN -> ) [168:47]\n+    |       |   |           |       |   `--SLIST -> { [168:49]\n+    |       |   |           |       |       |--LITERAL_YIELD -> yield [169:20]\n+    |       |   |           |       |       |   |--EXPR -> EXPR [169:26]\n+    |       |   |           |       |       |   |   `--LITERAL_FALSE -> false [169:26]\n+    |       |   |           |       |       |   `--SEMI -> ; [169:31]\n+    |       |   |           |       |       `--RCURLY -> } [170:16]\n+    |       |   |           |       |--LITERAL_IF -> if [171:16]\n+    |       |   |           |       |   |--LPAREN -> ( [171:19]\n+    |       |   |           |       |   |--EXPR -> EXPR [171:31]\n+    |       |   |           |       |   |   `--METHOD_CALL -> ( [171:31]\n+    |       |   |           |       |   |       |--DOT -> . [171:23]\n+    |       |   |           |       |   |       |   |--IDENT -> str [171:20]\n+    |       |   |           |       |   |       |   `--IDENT -> isEmpty [171:24]\n+    |       |   |           |       |   |       |--ELIST -> ELIST [171:32]\n+    |       |   |           |       |   |       `--RPAREN -> ) [171:32]\n+    |       |   |           |       |   |--RPAREN -> ) [171:33]\n+    |       |   |           |       |   `--SLIST -> { [171:35]\n+    |       |   |           |       |       |--LITERAL_YIELD -> yield [172:20]\n+    |       |   |           |       |       |   |--EXPR -> EXPR [172:26]\n+    |       |   |           |       |       |   |   `--LITERAL_TRUE -> true [172:26]\n+    |       |   |           |       |       |   `--SEMI -> ; [172:30]\n+    |       |   |           |       |       `--RCURLY -> } [173:16]\n+    |       |   |           |       `--LITERAL_YIELD -> yield [174:16]\n+    |       |   |           |           |--EXPR -> EXPR [174:22]\n+    |       |   |           |           |   `--LITERAL_TRUE -> true [174:22]\n+    |       |   |           |           `--SEMI -> ; [174:26]\n+    |       |   |           `--RCURLY -> } [175:8]\n+    |       |   |--RPAREN -> ) [175:9]\n+    |       |   `--SLIST -> { [175:11]\n+    |       |       |--LITERAL_THROW -> throw [176:12]\n+    |       |       |   |--EXPR -> EXPR [176:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [176:18]\n+    |       |       |   |       |--IDENT -> AssertionError [176:22]\n+    |       |       |   |       |--LPAREN -> ( [176:36]\n+    |       |       |   |       |--ELIST -> ELIST [176:37]\n+    |       |       |   |       `--RPAREN -> ) [176:37]\n+    |       |       |   `--SEMI -> ; [176:38]\n+    |       |       `--RCURLY -> } [177:8]\n+    |       `--RCURLY -> } [178:4]\n+    |--METHOD_DEF -> METHOD_DEF [180:4]\n+    |   |--MODIFIERS -> MODIFIERS [180:4]\n+    |   |   |--LITERAL_PUBLIC -> public [180:4]\n+    |   |   `--LITERAL_STATIC -> static [180:11]\n+    |   |--TYPE -> TYPE [180:18]\n+    |   |   `--LITERAL_VOID -> void [180:18]\n+    |   |--IDENT -> main [180:23]\n+    |   |--LPAREN -> ( [180:27]\n+    |   |--PARAMETERS -> PARAMETERS [180:28]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [180:28]\n+    |   |       |--MODIFIERS -> MODIFIERS [180:28]\n+    |   |       |--TYPE -> TYPE [180:28]\n+    |   |       |   `--IDENT -> String [180:28]\n+    |   |       |--ELLIPSIS -> ... [180:34]\n+    |   |       `--IDENT -> args [180:38]\n+    |   |--RPAREN -> ) [180:42]\n+    |   `--SLIST -> { [180:44]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [181:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [181:8]\n+    |       |   |--TYPE -> TYPE [181:8]\n+    |       |   |   `--IDENT -> T [181:8]\n+    |       |   |--IDENT -> t [181:10]\n+    |       |   `--ASSIGN -> = [181:12]\n+    |       |       `--EXPR -> EXPR [181:15]\n+    |       |           `--DOT -> . [181:15]\n+    |       |               |--IDENT -> T [181:14]\n+    |       |               `--IDENT -> B [181:16]\n+    |       |--SEMI -> ; [181:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [182:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [182:8]\n+    |       |   |--TYPE -> TYPE [182:8]\n+    |       |   |   `--LITERAL_INT -> int [182:8]\n+    |       |   |--IDENT -> a [182:12]\n+    |       |   `--ASSIGN -> = [182:14]\n+    |       |       `--EXPR -> EXPR [182:16]\n+    |       |           `--NUM_INT -> 8 [182:16]\n+    |       |--SEMI -> ; [182:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [183:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [183:8]\n+    |       |   |--TYPE -> TYPE [183:8]\n+    |       |   |   `--LITERAL_INT -> int [183:8]\n+    |       |   `--IDENT -> x [183:12]\n+    |       |--SEMI -> ; [183:13]\n+    |       |--EXPR -> EXPR [185:26]\n+    |       |   `--METHOD_CALL -> ( [185:26]\n+    |       |       |--DOT -> . [185:18]\n+    |       |       |   |--DOT -> . [185:14]\n+    |       |       |   |   |--IDENT -> System [185:8]\n+    |       |       |   |   `--IDENT -> out [185:15]\n+    |       |       |   `--IDENT -> println [185:19]\n+    |       |       |--ELIST -> ELIST [185:27]\n+    |       |       |   `--EXPR -> EXPR [185:27]\n+    |       |       |       `--STRING_LITERAL -> \"works!\" [185:27]\n+    |       |       `--RPAREN -> ) [185:35]\n+    |       |--SEMI -> ; [185:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [186:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [186:8]\n+    |       |   |--TYPE -> TYPE [186:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [186:8]\n+    |       |   |--IDENT -> t1b [186:16]\n+    |       |   `--ASSIGN -> = [186:20]\n+    |       |       `--EXPR -> EXPR [191:11]\n+    |       |           `--LAND -> && [191:11]\n+    |       |               |--LPAREN -> ( [186:22]\n+    |       |               |--LITERAL_SWITCH -> switch [186:23]\n+    |       |               |   |--LPAREN -> ( [186:30]\n+    |       |               |   |--EXPR -> EXPR [186:31]\n+    |       |               |   |   `--IDENT -> a [186:31]\n+    |       |               |   |--RPAREN -> ) [186:32]\n+    |       |               |   |--LCURLY -> { [186:34]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [187:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [187:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [187:17]\n+    |       |               |   |   |   |   `--NUM_INT -> 0 [187:17]\n+    |       |               |   |   |   `--COLON -> : [187:18]\n+    |       |               |   |   `--SLIST -> SLIST [188:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [188:16]\n+    |       |               |   |           |--EXPR -> EXPR [188:30]\n+    |       |               |   |           |   `--EQUAL -> == [188:30]\n+    |       |               |   |           |       |--LPAREN -> ( [188:22]\n+    |       |               |   |           |       |--ASSIGN -> = [188:25]\n+    |       |               |   |           |       |   |--IDENT -> x [188:23]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [188:27]\n+    |       |               |   |           |       |--RPAREN -> ) [188:28]\n+    |       |               |   |           |       `--NUM_INT -> 1 [188:33]\n+    |       |               |   |           `--SEMI -> ; [188:34]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [189:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [189:12]\n+    |       |               |   |   |   `--COLON -> : [189:19]\n+    |       |               |   |   `--SLIST -> SLIST [190:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [190:16]\n+    |       |               |   |           |--EXPR -> EXPR [190:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [190:22]\n+    |       |               |   |           `--SEMI -> ; [190:27]\n+    |       |               |   `--RCURLY -> } [191:8]\n+    |       |               |--RPAREN -> ) [191:9]\n+    |       |               `--EQUAL -> == [191:16]\n+    |       |                   |--IDENT -> x [191:14]\n+    |       |                   `--NUM_INT -> 1 [191:19]\n+    |       |--SEMI -> ; [191:20]\n+    |       |--LITERAL_TRY -> try [193:8]\n+    |       |   |--SLIST -> { [193:12]\n+    |       |   |   |--VARIABLE_DEF -> VARIABLE_DEF [194:12]\n+    |       |   |   |   |--MODIFIERS -> MODIFIERS [194:12]\n+    |       |   |   |   |--TYPE -> TYPE [194:12]\n+    |       |   |   |   |   `--LITERAL_INT -> int [194:12]\n+    |       |   |   |   |--IDENT -> ii [194:16]\n+    |       |   |   |   `--ASSIGN -> = [194:19]\n+    |       |   |   |       `--EXPR -> EXPR [194:21]\n+    |       |   |   |           `--LITERAL_SWITCH -> switch [194:21]\n+    |       |   |   |               |--LPAREN -> ( [194:28]\n+    |       |   |   |               |--EXPR -> EXPR [194:29]\n+    |       |   |   |               |   `--IDENT -> t [194:29]\n+    |       |   |   |               |--RPAREN -> ) [194:30]\n+    |       |   |   |               |--LCURLY -> { [194:32]\n+    |       |   |   |               |--SWITCH_RULE -> SWITCH_RULE [195:16]\n+    |       |   |   |               |   |--LITERAL_CASE -> case [195:16]\n+    |       |   |   |               |   |   `--EXPR -> EXPR [195:21]\n+    |       |   |   |               |   |       `--IDENT -> A [195:21]\n+    |       |   |   |               |   |--LAMBDA -> -> [195:23]\n+    |       |   |   |               |   |--EXPR -> EXPR [195:26]\n+    |       |   |   |               |   |   `--NUM_INT -> 0 [195:26]\n+    |       |   |   |               |   `--SEMI -> ; [195:27]\n+    |       |   |   |               |--SWITCH_RULE -> SWITCH_RULE [196:16]\n+    |       |   |   |               |   |--LITERAL_DEFAULT -> default [196:16]\n+    |       |   |   |               |   |--LAMBDA -> -> [196:24]\n+    |       |   |   |               |   `--LITERAL_THROW -> throw [196:27]\n+    |       |   |   |               |       |--EXPR -> EXPR [196:33]\n+    |       |   |   |               |       |   `--LITERAL_NEW -> new [196:33]\n+    |       |   |   |               |       |       |--IDENT -> IllegalStateException [196:37]\n+    |       |   |   |               |       |       |--LPAREN -> ( [196:58]\n+    |       |   |   |               |       |       |--ELIST -> ELIST [196:59]\n+    |       |   |   |               |       |       `--RPAREN -> ) [196:59]\n+    |       |   |   |               |       `--SEMI -> ; [196:60]\n+    |       |   |   |               `--RCURLY -> } [197:12]\n+    |       |   |   |--SEMI -> ; [197:13]\n+    |       |   |   |--LITERAL_THROW -> throw [198:12]\n+    |       |   |   |   |--EXPR -> EXPR [198:18]\n+    |       |   |   |   |   `--LITERAL_NEW -> new [198:18]\n+    |       |   |   |   |       |--IDENT -> AssertionError [198:22]\n+    |       |   |   |   |       |--LPAREN -> ( [198:36]\n+    |       |   |   |   |       |--ELIST -> ELIST [198:37]\n+    |       |   |   |   |       |   `--EXPR -> EXPR [198:37]\n+    |       |   |   |   |       |       `--STRING_LITERAL -> \"Expected exception not thrown.\" [198:37]\n+    |       |   |   |   |       `--RPAREN -> ) [198:69]\n+    |       |   |   |   `--SEMI -> ; [198:70]\n+    |       |   |   `--RCURLY -> } [199:8]\n+    |       |   `--LITERAL_CATCH -> catch [199:10]\n+    |       |       |--LPAREN -> ( [199:16]\n+    |       |       |--PARAMETER_DEF -> PARAMETER_DEF [199:17]\n+    |       |       |   |--MODIFIERS -> MODIFIERS [199:17]\n+    |       |       |   |--TYPE -> TYPE [199:17]\n+    |       |       |   |   `--IDENT -> IllegalStateException [199:17]\n+    |       |       |   `--IDENT -> ex [199:39]\n+    |       |       |--RPAREN -> ) [199:41]\n+    |       |       `--SLIST -> { [199:43]\n+    |       |           `--RCURLY -> } [201:8]\n+    |       `--RCURLY -> } [202:4]\n+    |--ENUM_DEF -> ENUM_DEF [204:4]\n+    |   |--MODIFIERS -> MODIFIERS [204:4]\n+    |   |--ENUM -> enum [204:4]\n+    |   |--IDENT -> T [204:9]\n+    |   `--OBJBLOCK -> OBJBLOCK [204:11]\n+    |       |--LCURLY -> { [204:11]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:8]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:8]\n+    |       |   `--IDENT -> A [205:8]\n+    |       |--COMMA -> , [205:9]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:11]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:11]\n+    |       |   `--IDENT -> B [205:11]\n+    |       |--COMMA -> , [205:12]\n+    |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [205:14]\n+    |       |   |--ANNOTATIONS -> ANNOTATIONS [205:14]\n+    |       |   `--IDENT -> C [205:14]\n+    |       |--SEMI -> ; [205:15]\n+    |       `--RCURLY -> } [206:4]\n+    |--METHOD_DEF -> METHOD_DEF [208:4]\n+    |   |--MODIFIERS -> MODIFIERS [208:4]\n+    |   |   |--LITERAL_PRIVATE -> private [208:4]\n+    |   |   `--LITERAL_STATIC -> static [208:12]\n+    |   |--TYPE -> TYPE [208:19]\n+    |   |   `--LITERAL_BOOLEAN -> boolean [208:19]\n+    |   |--IDENT -> isTrue [208:27]\n+    |   |--LPAREN -> ( [208:33]\n+    |   |--PARAMETERS -> PARAMETERS [208:34]\n+    |   |--RPAREN -> ) [208:34]\n+    |   `--SLIST -> { [208:36]\n+    |       |--LITERAL_RETURN -> return [209:8]\n+    |       |   |--EXPR -> EXPR [209:15]\n+    |       |   |   `--LITERAL_TRUE -> true [209:15]\n+    |       |   `--SEMI -> ; [209:19]\n+    |       `--RCURLY -> } [210:4]\n+    |--STATIC_INIT -> STATIC_INIT [212:4]\n+    |   `--SLIST -> { [212:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [213:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [213:8]\n+    |       |   |--TYPE -> TYPE [213:8]\n+    |       |   |   `--LITERAL_INT -> int [213:8]\n+    |       |   `--IDENT -> x [213:12]\n+    |       |--SEMI -> ; [213:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [215:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [215:8]\n+    |       |   |--TYPE -> TYPE [215:8]\n+    |       |   |   `--LITERAL_INT -> int [215:8]\n+    |       |   |--IDENT -> t7 [215:12]\n+    |       |   `--ASSIGN -> = [215:15]\n+    |       |       `--EXPR -> EXPR [215:45]\n+    |       |           `--METHOD_CALL -> ( [215:45]\n+    |       |               |--DOT -> . [215:42]\n+    |       |               |   |--LITERAL_NEW -> new [215:17]\n+    |       |               |   |   |--IDENT -> DefiniteAssignment1 [215:21]\n+    |       |               |   |   |--LPAREN -> ( [215:40]\n+    |       |               |   |   |--ELIST -> ELIST [215:41]\n+    |       |               |   |   `--RPAREN -> ) [215:41]\n+    |       |               |   `--IDENT -> id [215:43]\n+    |       |               |--ELIST -> ELIST [217:36]\n+    |       |               |   `--EXPR -> EXPR [217:36]\n+    |       |               |       `--QUESTION -> ? [217:36]\n+    |       |               |           |--LAND -> && [217:26]\n+    |       |               |           |   |--LAND -> && [217:10]\n+    |       |               |           |   |   |--LITERAL_SWITCH -> switch [215:46]\n+    |       |               |           |   |   |   |--LPAREN -> ( [215:53]\n+    |       |               |           |   |   |   |--EXPR -> EXPR [215:54]\n+    |       |               |           |   |   |   |   `--NUM_INT -> 0 [215:54]\n+    |       |               |           |   |   |   |--RPAREN -> ) [215:55]\n+    |       |               |           |   |   |   |--LCURLY -> { [215:57]\n+    |       |               |           |   |   |   |--SWITCH_RULE -> SWITCH_RULE [216:12]\n+    |       |               |           |   |   |   |   |--LITERAL_DEFAULT -> default [216:12]\n+    |       |               |           |   |   |   |   |--LAMBDA -> -> [216:20]\n+    |       |               |           |   |   |   |   |--EXPR -> EXPR [216:29]\n+    |       |               |           |   |   |   |   |   `--METHOD_CALL -> ( [216:29]\n+    |       |               |           |   |   |   |   |       |--IDENT -> isTrue [216:23]\n+    |       |               |           |   |   |   |   |       |--ELIST -> ELIST [216:30]\n+    |       |               |           |   |   |   |   |       `--RPAREN -> ) [216:30]\n+    |       |               |           |   |   |   |   `--SEMI -> ; [216:31]\n+    |       |               |           |   |   |   `--RCURLY -> } [217:8]\n+    |       |               |           |   |   `--EQUAL -> == [217:21]\n+    |       |               |           |   |       |--LPAREN -> ( [217:13]\n+    |       |               |           |   |       |--ASSIGN -> = [217:16]\n+    |       |               |           |   |       |   |--IDENT -> x [217:14]\n+    |       |               |           |   |       |   `--NUM_INT -> 1 [217:18]\n+    |       |               |           |   |       |--RPAREN -> ) [217:19]\n+    |       |               |           |   |       `--NUM_INT -> 1 [217:24]\n+    |       |               |           |   `--EQUAL -> == [217:31]\n+    |       |               |           |       |--IDENT -> x [217:29]\n+    |       |               |           |       `--NUM_INT -> 1 [217:34]\n+    |       |               |           |--NUM_INT -> 2 [217:38]\n+    |       |               |           |--COLON -> : [217:40]\n+    |       |               |           `--UNARY_MINUS -> - [217:42]\n+    |       |               |               `--NUM_INT -> 1 [217:43]\n+    |       |               `--RPAREN -> ) [217:44]\n+    |       |--SEMI -> ; [217:45]\n+    |       |--LITERAL_IF -> if [219:8]\n+    |       |   |--LPAREN -> ( [219:11]\n+    |       |   |--EXPR -> EXPR [219:15]\n+    |       |   |   `--NOT_EQUAL -> != [219:15]\n+    |       |   |       |--IDENT -> t7 [219:12]\n+    |       |   |       `--NUM_INT -> 2 [219:18]\n+    |       |   |--RPAREN -> ) [219:19]\n+    |       |   `--SLIST -> { [219:21]\n+    |       |       |--LITERAL_THROW -> throw [220:12]\n+    |       |       |   |--EXPR -> EXPR [220:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [220:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [220:22]\n+    |       |       |   |       |--LPAREN -> ( [220:43]\n+    |       |       |   |       |--ELIST -> ELIST [220:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [220:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [220:44]\n+    |       |       |   |       `--RPAREN -> ) [220:64]\n+    |       |       |   `--SEMI -> ; [220:65]\n+    |       |       `--RCURLY -> } [221:8]\n+    |       `--RCURLY -> } [222:4]\n+    |--STATIC_INIT -> STATIC_INIT [224:4]\n+    |   `--SLIST -> { [224:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [225:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [225:8]\n+    |       |   |--TYPE -> TYPE [225:8]\n+    |       |   |   `--LITERAL_INT -> int [225:8]\n+    |       |   `--IDENT -> x [225:12]\n+    |       |--SEMI -> ; [225:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [226:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [226:8]\n+    |       |   |--TYPE -> TYPE [226:8]\n+    |       |   |   `--IDENT -> T [226:8]\n+    |       |   |--IDENT -> e [226:10]\n+    |       |   `--ASSIGN -> = [226:12]\n+    |       |       `--EXPR -> EXPR [226:15]\n+    |       |           `--DOT -> . [226:15]\n+    |       |               |--IDENT -> T [226:14]\n+    |       |               `--IDENT -> B [226:16]\n+    |       |--SEMI -> ; [226:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [228:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [228:8]\n+    |       |   |--TYPE -> TYPE [228:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [228:8]\n+    |       |   |--IDENT -> t8 [228:16]\n+    |       |   `--ASSIGN -> = [228:19]\n+    |       |       `--EXPR -> EXPR [236:11]\n+    |       |           `--LAND -> && [236:11]\n+    |       |               |--LPAREN -> ( [228:21]\n+    |       |               |--LITERAL_SWITCH -> switch [228:22]\n+    |       |               |   |--LPAREN -> ( [228:29]\n+    |       |               |   |--EXPR -> EXPR [228:30]\n+    |       |               |   |   `--IDENT -> e [228:30]\n+    |       |               |   |--RPAREN -> ) [228:31]\n+    |       |               |   |--LCURLY -> { [228:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [229:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [229:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [229:17]\n+    |       |               |   |   |   |   `--IDENT -> A [229:17]\n+    |       |               |   |   |   `--COLON -> : [229:18]\n+    |       |               |   |   `--SLIST -> SLIST [230:18]\n+    |       |               |   |       |--EXPR -> EXPR [230:18]\n+    |       |               |   |       |   `--ASSIGN -> = [230:18]\n+    |       |               |   |       |       |--IDENT -> x [230:16]\n+    |       |               |   |       |       `--NUM_INT -> 1 [230:20]\n+    |       |               |   |       |--SEMI -> ; [230:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [231:16]\n+    |       |               |   |           |--EXPR -> EXPR [231:22]\n+    |       |               |   |           |   `--LITERAL_TRUE -> true [231:22]\n+    |       |               |   |           `--SEMI -> ; [231:26]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [232:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [232:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [232:17]\n+    |       |               |   |   |   |   `--IDENT -> B [232:17]\n+    |       |               |   |   |   `--COLON -> : [232:18]\n+    |       |               |   |   `--SLIST -> SLIST [233:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [233:16]\n+    |       |               |   |           |--EXPR -> EXPR [233:35]\n+    |       |               |   |           |   `--LOR -> || [233:35]\n+    |       |               |   |           |       |--EQUAL -> == [233:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [233:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [233:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [233:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [233:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [233:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [233:33]\n+    |       |               |   |           |       `--LITERAL_TRUE -> true [233:38]\n+    |       |               |   |           `--SEMI -> ; [233:42]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [234:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [234:12]\n+    |       |               |   |   |   `--COLON -> : [234:19]\n+    |       |               |   |   `--SLIST -> SLIST [235:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [235:16]\n+    |       |               |   |           |--EXPR -> EXPR [235:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [235:22]\n+    |       |               |   |           `--SEMI -> ; [235:27]\n+    |       |               |   `--RCURLY -> } [236:8]\n+    |       |               |--RPAREN -> ) [236:9]\n+    |       |               `--EQUAL -> == [236:16]\n+    |       |                   |--IDENT -> x [236:14]\n+    |       |                   `--NUM_INT -> 1 [236:19]\n+    |       |--SEMI -> ; [236:20]\n+    |       |--LITERAL_IF -> if [238:8]\n+    |       |   |--LPAREN -> ( [238:11]\n+    |       |   |--EXPR -> EXPR [238:12]\n+    |       |   |   `--LNOT -> ! [238:12]\n+    |       |   |       `--IDENT -> t8 [238:13]\n+    |       |   |--RPAREN -> ) [238:15]\n+    |       |   `--SLIST -> { [238:17]\n+    |       |       |--LITERAL_THROW -> throw [239:12]\n+    |       |       |   |--EXPR -> EXPR [239:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [239:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [239:22]\n+    |       |       |   |       |--LPAREN -> ( [239:43]\n+    |       |       |   |       |--ELIST -> ELIST [239:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [239:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [239:44]\n+    |       |       |   |       `--RPAREN -> ) [239:64]\n+    |       |       |   `--SEMI -> ; [239:65]\n+    |       |       `--RCURLY -> } [240:8]\n+    |       `--RCURLY -> } [241:4]\n+    |--STATIC_INIT -> STATIC_INIT [243:4]\n+    |   `--SLIST -> { [243:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [244:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [244:8]\n+    |       |   |--TYPE -> TYPE [244:8]\n+    |       |   |   `--LITERAL_INT -> int [244:8]\n+    |       |   `--IDENT -> x [244:12]\n+    |       |--SEMI -> ; [244:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [245:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [245:8]\n+    |       |   |--TYPE -> TYPE [245:8]\n+    |       |   |   `--IDENT -> T [245:8]\n+    |       |   |--IDENT -> e [245:10]\n+    |       |   `--ASSIGN -> = [245:12]\n+    |       |       `--EXPR -> EXPR [245:15]\n+    |       |           `--DOT -> . [245:15]\n+    |       |               |--IDENT -> T [245:14]\n+    |       |               `--IDENT -> B [245:16]\n+    |       |--SEMI -> ; [245:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [247:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [247:8]\n+    |       |   |--TYPE -> TYPE [247:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [247:8]\n+    |       |   |--IDENT -> t8 [247:16]\n+    |       |   `--ASSIGN -> = [247:19]\n+    |       |       `--EXPR -> EXPR [255:11]\n+    |       |           `--LAND -> && [255:11]\n+    |       |               |--LPAREN -> ( [247:21]\n+    |       |               |--LITERAL_SWITCH -> switch [247:22]\n+    |       |               |   |--LPAREN -> ( [247:29]\n+    |       |               |   |--EXPR -> EXPR [247:30]\n+    |       |               |   |   `--IDENT -> e [247:30]\n+    |       |               |   |--RPAREN -> ) [247:31]\n+    |       |               |   |--LCURLY -> { [247:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [248:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [248:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [248:17]\n+    |       |               |   |   |   |   `--IDENT -> A [248:17]\n+    |       |               |   |   |   `--COLON -> : [248:18]\n+    |       |               |   |   `--SLIST -> SLIST [249:18]\n+    |       |               |   |       |--EXPR -> EXPR [249:18]\n+    |       |               |   |       |   `--ASSIGN -> = [249:18]\n+    |       |               |   |       |       |--IDENT -> x [249:16]\n+    |       |               |   |       |       `--NUM_INT -> 1 [249:20]\n+    |       |               |   |       |--SEMI -> ; [249:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [250:16]\n+    |       |               |   |           |--EXPR -> EXPR [250:28]\n+    |       |               |   |           |   `--METHOD_CALL -> ( [250:28]\n+    |       |               |   |           |       |--IDENT -> isTrue [250:22]\n+    |       |               |   |           |       |--ELIST -> ELIST [250:29]\n+    |       |               |   |           |       `--RPAREN -> ) [250:29]\n+    |       |               |   |           `--SEMI -> ; [250:30]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [251:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [251:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [251:17]\n+    |       |               |   |   |   |   `--IDENT -> B [251:17]\n+    |       |               |   |   |   `--COLON -> : [251:18]\n+    |       |               |   |   `--SLIST -> SLIST [252:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [252:16]\n+    |       |               |   |           |--EXPR -> EXPR [252:35]\n+    |       |               |   |           |   `--LOR -> || [252:35]\n+    |       |               |   |           |       |--EQUAL -> == [252:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [252:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [252:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [252:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [252:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [252:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [252:33]\n+    |       |               |   |           |       `--METHOD_CALL -> ( [252:44]\n+    |       |               |   |           |           |--IDENT -> isTrue [252:38]\n+    |       |               |   |           |           |--ELIST -> ELIST [252:45]\n+    |       |               |   |           |           `--RPAREN -> ) [252:45]\n+    |       |               |   |           `--SEMI -> ; [252:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [253:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [253:12]\n+    |       |               |   |   |   `--COLON -> : [253:19]\n+    |       |               |   |   `--SLIST -> SLIST [254:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [254:16]\n+    |       |               |   |           |--EXPR -> EXPR [254:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [254:22]\n+    |       |               |   |           `--SEMI -> ; [254:27]\n+    |       |               |   `--RCURLY -> } [255:8]\n+    |       |               |--RPAREN -> ) [255:9]\n+    |       |               `--EQUAL -> == [255:16]\n+    |       |                   |--IDENT -> x [255:14]\n+    |       |                   `--NUM_INT -> 1 [255:19]\n+    |       |--SEMI -> ; [255:20]\n+    |       |--LITERAL_IF -> if [257:8]\n+    |       |   |--LPAREN -> ( [257:11]\n+    |       |   |--EXPR -> EXPR [257:12]\n+    |       |   |   `--LNOT -> ! [257:12]\n+    |       |   |       `--IDENT -> t8 [257:13]\n+    |       |   |--RPAREN -> ) [257:15]\n+    |       |   `--SLIST -> { [257:17]\n+    |       |       |--LITERAL_THROW -> throw [258:12]\n+    |       |       |   |--EXPR -> EXPR [258:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [258:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [258:22]\n+    |       |       |   |       |--LPAREN -> ( [258:43]\n+    |       |       |   |       |--ELIST -> ELIST [258:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [258:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [258:44]\n+    |       |       |   |       `--RPAREN -> ) [258:64]\n+    |       |       |   `--SEMI -> ; [258:65]\n+    |       |       `--RCURLY -> } [259:8]\n+    |       |--SLIST -> { [261:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [262:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [262:12]\n+    |       |   |   |--TYPE -> TYPE [262:12]\n+    |       |   |   |   `--IDENT -> T [262:12]\n+    |       |   |   |--IDENT -> y [262:14]\n+    |       |   |   `--ASSIGN -> = [262:16]\n+    |       |   |       `--EXPR -> EXPR [262:19]\n+    |       |   |           `--DOT -> . [262:19]\n+    |       |   |               |--IDENT -> T [262:18]\n+    |       |   |               `--IDENT -> A [262:20]\n+    |       |   |--SEMI -> ; [262:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [264:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [264:12]\n+    |       |   |   |--TYPE -> TYPE [264:12]\n+    |       |   |   |   `--LITERAL_BOOLEAN -> boolean [264:12]\n+    |       |   |   |--IDENT -> t9 [264:20]\n+    |       |   |   `--ASSIGN -> = [264:23]\n+    |       |   |       `--EXPR -> EXPR [272:15]\n+    |       |   |           `--LAND -> && [272:15]\n+    |       |   |               |--LPAREN -> ( [264:25]\n+    |       |   |               |--LITERAL_SWITCH -> switch [264:26]\n+    |       |   |               |   |--LPAREN -> ( [264:33]\n+    |       |   |               |   |--EXPR -> EXPR [264:34]\n+    |       |   |               |   |   `--IDENT -> y [264:34]\n+    |       |   |               |   |--RPAREN -> ) [264:35]\n+    |       |   |               |   |--LCURLY -> { [264:37]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [265:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [265:16]\n+    |       |   |               |   |   |   |--EXPR -> EXPR [265:21]\n+    |       |   |               |   |   |   |   `--IDENT -> A [265:21]\n+    |       |   |               |   |   |   `--COLON -> : [265:22]\n+    |       |   |               |   |   `--SLIST -> SLIST [266:22]\n+    |       |   |               |   |       |--EXPR -> EXPR [266:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [266:22]\n+    |       |   |               |   |       |       |--IDENT -> x [266:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [266:24]\n+    |       |   |               |   |       |--SEMI -> ; [266:25]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [267:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [267:26]\n+    |       |   |               |   |           |   `--LITERAL_TRUE -> true [267:26]\n+    |       |   |               |   |           `--SEMI -> ; [267:30]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [268:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [268:16]\n+    |       |   |               |   |   |   |--EXPR -> EXPR [268:21]\n+    |       |   |               |   |   |   |   `--IDENT -> B [268:21]\n+    |       |   |               |   |   |   `--COLON -> : [268:22]\n+    |       |   |               |   |   `--SLIST -> SLIST [269:20]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [269:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [269:39]\n+    |       |   |               |   |           |   `--LOR -> || [269:39]\n+    |       |   |               |   |           |       |--EQUAL -> == [269:34]\n+    |       |   |               |   |           |       |   |--LPAREN -> ( [269:26]\n+    |       |   |               |   |           |       |   |--ASSIGN -> = [269:29]\n+    |       |   |               |   |           |       |   |   |--IDENT -> x [269:27]\n+    |       |   |               |   |           |       |   |   `--NUM_INT -> 1 [269:31]\n+    |       |   |               |   |           |       |   |--RPAREN -> ) [269:32]\n+    |       |   |               |   |           |       |   `--NUM_INT -> 1 [269:37]\n+    |       |   |               |   |           |       `--LITERAL_TRUE -> true [269:42]\n+    |       |   |               |   |           `--SEMI -> ; [269:46]\n+    |       |   |               |   |--CASE_GROUP -> CASE_GROUP [270:16]\n+    |       |   |               |   |   |--LITERAL_DEFAULT -> default [270:16]\n+    |       |   |               |   |   |   `--COLON -> : [270:23]\n+    |       |   |               |   |   `--SLIST -> SLIST [271:20]\n+    |       |   |               |   |       `--LITERAL_YIELD -> yield [271:20]\n+    |       |   |               |   |           |--EXPR -> EXPR [271:26]\n+    |       |   |               |   |           |   `--LITERAL_FALSE -> false [271:26]\n+    |       |   |               |   |           `--SEMI -> ; [271:31]\n+    |       |   |               |   `--RCURLY -> } [272:12]\n+    |       |   |               |--RPAREN -> ) [272:13]\n+    |       |   |               `--EQUAL -> == [272:20]\n+    |       |   |                   |--IDENT -> x [272:18]\n+    |       |   |                   `--NUM_INT -> 1 [272:23]\n+    |       |   |--SEMI -> ; [272:24]\n+    |       |   |--LITERAL_IF -> if [274:12]\n+    |       |   |   |--LPAREN -> ( [274:15]\n+    |       |   |   |--EXPR -> EXPR [274:16]\n+    |       |   |   |   `--LNOT -> ! [274:16]\n+    |       |   |   |       `--IDENT -> t9 [274:17]\n+    |       |   |   |--RPAREN -> ) [274:19]\n+    |       |   |   `--SLIST -> { [274:21]\n+    |       |   |       |--LITERAL_THROW -> throw [275:16]\n+    |       |   |       |   |--EXPR -> EXPR [275:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [275:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [275:26]\n+    |       |   |       |   |       |--LPAREN -> ( [275:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [275:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [275:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [275:48]\n+    |       |   |       |   |       `--RPAREN -> ) [275:68]\n+    |       |   |       |   `--SEMI -> ; [275:69]\n+    |       |   |       `--RCURLY -> } [276:12]\n+    |       |   `--RCURLY -> } [277:8]\n+    |       |--SLIST -> { [280:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [281:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [281:12]\n+    |       |   |   |--TYPE -> TYPE [281:12]\n+    |       |   |   |   `--IDENT -> T [281:12]\n+    |       |   |   |--IDENT -> y [281:14]\n+    |       |   |   `--ASSIGN -> = [281:16]\n+    |       |   |       `--EXPR -> EXPR [281:19]\n+    |       |   |           `--DOT -> . [281:19]\n+    |       |   |               |--IDENT -> T [281:18]\n+    |       |   |               `--IDENT -> A [281:20]\n+    |       |   |--SEMI -> ; [281:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [283:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [283:12]\n+    |       |   |   |--TYPE -> TYPE [283:12]\n+    |       |   |   |   `--LITERAL_INT -> int [283:12]\n+    |       |   |   |--IDENT -> v [283:16]\n+    |       |   |   `--ASSIGN -> = [283:18]\n+    |       |   |       `--EXPR -> EXPR [283:20]\n+    |       |   |           `--LITERAL_SWITCH -> switch [283:20]\n+    |       |   |               |--LPAREN -> ( [283:27]\n+    |       |   |               |--EXPR -> EXPR [283:28]\n+    |       |   |               |   `--IDENT -> y [283:28]\n+    |       |   |               |--RPAREN -> ) [283:29]\n+    |       |   |               |--LCURLY -> { [283:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [284:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [284:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [284:21]\n+    |       |   |               |   |       `--IDENT -> A [284:21]\n+    |       |   |               |   |--LAMBDA -> -> [284:23]\n+    |       |   |               |   |--EXPR -> EXPR [284:28]\n+    |       |   |               |   |   `--ASSIGN -> = [284:28]\n+    |       |   |               |   |       |--IDENT -> x [284:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [284:30]\n+    |       |   |               |   `--SEMI -> ; [284:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [285:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [285:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [285:21]\n+    |       |   |               |   |       `--IDENT -> B [285:21]\n+    |       |   |               |   |--LAMBDA -> -> [285:23]\n+    |       |   |               |   |--EXPR -> EXPR [285:28]\n+    |       |   |               |   |   `--ASSIGN -> = [285:28]\n+    |       |   |               |   |       |--IDENT -> x [285:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [285:30]\n+    |       |   |               |   `--SEMI -> ; [285:31]\n+    |       |   |               |--SWITCH_RULE -> SWITCH_RULE [286:16]\n+    |       |   |               |   |--LITERAL_CASE -> case [286:16]\n+    |       |   |               |   |   `--EXPR -> EXPR [286:21]\n+    |       |   |               |   |       `--IDENT -> C [286:21]\n+    |       |   |               |   |--LAMBDA -> -> [286:23]\n+    |       |   |               |   |--EXPR -> EXPR [286:28]\n+    |       |   |               |   |   `--ASSIGN -> = [286:28]\n+    |       |   |               |   |       |--IDENT -> x [286:26]\n+    |       |   |               |   |       `--NUM_INT -> 0 [286:30]\n+    |       |   |               |   `--SEMI -> ; [286:31]\n+    |       |   |               `--RCURLY -> } [287:12]\n+    |       |   |--SEMI -> ; [287:13]\n+    |       |   |--LITERAL_IF -> if [289:12]\n+    |       |   |   |--LPAREN -> ( [289:15]\n+    |       |   |   |--EXPR -> EXPR [289:23]\n+    |       |   |   |   `--LOR -> || [289:23]\n+    |       |   |   |       |--NOT_EQUAL -> != [289:18]\n+    |       |   |   |       |   |--IDENT -> x [289:16]\n+    |       |   |   |       |   `--NUM_INT -> 0 [289:21]\n+    |       |   |   |       `--NOT_EQUAL -> != [289:28]\n+    |       |   |   |           |--IDENT -> v [289:26]\n+    |       |   |   |           `--NUM_INT -> 0 [289:31]\n+    |       |   |   |--RPAREN -> ) [289:32]\n+    |       |   |   `--SLIST -> { [289:34]\n+    |       |   |       |--LITERAL_THROW -> throw [290:16]\n+    |       |   |       |   |--EXPR -> EXPR [290:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [290:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [290:26]\n+    |       |   |       |   |       |--LPAREN -> ( [290:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [290:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [290:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [290:48]\n+    |       |   |       |   |       `--RPAREN -> ) [290:68]\n+    |       |   |       |   `--SEMI -> ; [290:69]\n+    |       |   |       `--RCURLY -> } [291:12]\n+    |       |   `--RCURLY -> } [292:8]\n+    |       |--SLIST -> { [294:8]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [295:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [295:12]\n+    |       |   |   |--TYPE -> TYPE [295:12]\n+    |       |   |   |   `--IDENT -> T [295:12]\n+    |       |   |   |--IDENT -> y [295:14]\n+    |       |   |   `--ASSIGN -> = [295:16]\n+    |       |   |       `--EXPR -> EXPR [295:19]\n+    |       |   |           `--DOT -> . [295:19]\n+    |       |   |               |--IDENT -> T [295:18]\n+    |       |   |               `--IDENT -> A [295:20]\n+    |       |   |--SEMI -> ; [295:21]\n+    |       |   |--VARIABLE_DEF -> VARIABLE_DEF [297:12]\n+    |       |   |   |--MODIFIERS -> MODIFIERS [297:12]\n+    |       |   |   |--TYPE -> TYPE [297:12]\n+    |       |   |   |   `--LITERAL_BOOLEAN -> boolean [297:12]\n+    |       |   |   |--IDENT -> tA [297:20]\n+    |       |   |   `--ASSIGN -> = [297:23]\n+    |       |   |       `--EXPR -> EXPR [310:15]\n+    |       |   |           `--LAND -> && [310:15]\n+    |       |   |               |--LPAREN -> ( [297:25]\n+    |       |   |               |--LITERAL_SWITCH -> switch [297:26]\n+    |       |   |               |   |--LPAREN -> ( [297:33]\n+    |       |   |               |   |--EXPR -> EXPR [297:34]\n+    |       |   |               |   |   `--IDENT -> y [297:34]\n+    |       |   |               |   |--RPAREN -> ) [297:35]\n+    |       |   |               |   |--LCURLY -> { [297:37]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [298:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [298:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [298:21]\n+    |       |   |               |   |   |       `--IDENT -> A [298:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [298:23]\n+    |       |   |               |   |   `--SLIST -> { [298:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [299:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [299:22]\n+    |       |   |               |   |       |       |--IDENT -> x [299:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [299:24]\n+    |       |   |               |   |       |--SEMI -> ; [299:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [300:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [300:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [300:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [300:30]\n+    |       |   |               |   |       `--RCURLY -> } [301:16]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [302:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [302:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [302:21]\n+    |       |   |               |   |   |       `--IDENT -> B [302:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [302:23]\n+    |       |   |               |   |   `--SLIST -> { [302:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [303:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [303:22]\n+    |       |   |               |   |       |       |--IDENT -> x [303:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [303:24]\n+    |       |   |               |   |       |--SEMI -> ; [303:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [304:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [304:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [304:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [304:30]\n+    |       |   |               |   |       `--RCURLY -> } [305:16]\n+    |       |   |               |   |--SWITCH_RULE -> SWITCH_RULE [306:16]\n+    |       |   |               |   |   |--LITERAL_CASE -> case [306:16]\n+    |       |   |               |   |   |   `--EXPR -> EXPR [306:21]\n+    |       |   |               |   |   |       `--IDENT -> C [306:21]\n+    |       |   |               |   |   |--LAMBDA -> -> [306:23]\n+    |       |   |               |   |   `--SLIST -> { [306:26]\n+    |       |   |               |   |       |--EXPR -> EXPR [307:22]\n+    |       |   |               |   |       |   `--ASSIGN -> = [307:22]\n+    |       |   |               |   |       |       |--IDENT -> x [307:20]\n+    |       |   |               |   |       |       `--NUM_INT -> 1 [307:24]\n+    |       |   |               |   |       |--SEMI -> ; [307:25]\n+    |       |   |               |   |       |--LITERAL_YIELD -> yield [308:20]\n+    |       |   |               |   |       |   |--EXPR -> EXPR [308:26]\n+    |       |   |               |   |       |   |   `--LITERAL_TRUE -> true [308:26]\n+    |       |   |               |   |       |   `--SEMI -> ; [308:30]\n+    |       |   |               |   |       `--RCURLY -> } [309:16]\n+    |       |   |               |   `--RCURLY -> } [310:12]\n+    |       |   |               |--RPAREN -> ) [310:13]\n+    |       |   |               `--EQUAL -> == [310:20]\n+    |       |   |                   |--IDENT -> x [310:18]\n+    |       |   |                   `--NUM_INT -> 1 [310:23]\n+    |       |   |--SEMI -> ; [310:24]\n+    |       |   |--LITERAL_IF -> if [312:12]\n+    |       |   |   |--LPAREN -> ( [312:15]\n+    |       |   |   |--EXPR -> EXPR [312:16]\n+    |       |   |   |   `--LNOT -> ! [312:16]\n+    |       |   |   |       `--IDENT -> tA [312:17]\n+    |       |   |   |--RPAREN -> ) [312:19]\n+    |       |   |   `--SLIST -> { [312:21]\n+    |       |   |       |--LITERAL_THROW -> throw [313:16]\n+    |       |   |       |   |--EXPR -> EXPR [313:22]\n+    |       |   |       |   |   `--LITERAL_NEW -> new [313:22]\n+    |       |   |       |   |       |--IDENT -> IllegalStateException [313:26]\n+    |       |   |       |   |       |--LPAREN -> ( [313:47]\n+    |       |   |       |   |       |--ELIST -> ELIST [313:48]\n+    |       |   |       |   |       |   `--EXPR -> EXPR [313:48]\n+    |       |   |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [313:48]\n+    |       |   |       |   |       `--RPAREN -> ) [313:68]\n+    |       |   |       |   `--SEMI -> ; [313:69]\n+    |       |   |       `--RCURLY -> } [314:12]\n+    |       |   `--RCURLY -> } [315:8]\n+    |       `--RCURLY -> } [316:4]\n+    |--STATIC_INIT -> STATIC_INIT [317:4]\n+    |   `--SLIST -> { [317:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [318:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [318:8]\n+    |       |   |   `--FINAL -> final [318:8]\n+    |       |   |--TYPE -> TYPE [318:14]\n+    |       |   |   `--LITERAL_INT -> int [318:14]\n+    |       |   `--IDENT -> x [318:18]\n+    |       |--SEMI -> ; [318:19]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [319:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [319:8]\n+    |       |   |--TYPE -> TYPE [319:8]\n+    |       |   |   `--IDENT -> T [319:8]\n+    |       |   |--IDENT -> e [319:10]\n+    |       |   `--ASSIGN -> = [319:12]\n+    |       |       `--EXPR -> EXPR [319:15]\n+    |       |           `--DOT -> . [319:15]\n+    |       |               |--IDENT -> T [319:14]\n+    |       |               `--IDENT -> C [319:16]\n+    |       |--SEMI -> ; [319:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [321:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [321:8]\n+    |       |   |--TYPE -> TYPE [321:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [321:8]\n+    |       |   |--IDENT -> tA [321:16]\n+    |       |   `--ASSIGN -> = [321:19]\n+    |       |       `--EXPR -> EXPR [325:11]\n+    |       |           `--LOR -> || [325:11]\n+    |       |               |--LPAREN -> ( [321:21]\n+    |       |               |--LITERAL_SWITCH -> switch [321:22]\n+    |       |               |   |--LPAREN -> ( [321:28]\n+    |       |               |   |--EXPR -> EXPR [321:29]\n+    |       |               |   |   `--IDENT -> e [321:29]\n+    |       |               |   |--RPAREN -> ) [321:30]\n+    |       |               |   |--LCURLY -> { [321:32]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [322:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [322:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [322:17]\n+    |       |               |   |   |   |   `--IDENT -> A [322:17]\n+    |       |               |   |   |   `--COLON -> : [322:18]\n+    |       |               |   |   `--SLIST -> SLIST [322:22]\n+    |       |               |   |       |--EXPR -> EXPR [322:22]\n+    |       |               |   |       |   `--ASSIGN -> = [322:22]\n+    |       |               |   |       |       |--IDENT -> x [322:20]\n+    |       |               |   |       |       `--NUM_INT -> 1 [322:24]\n+    |       |               |   |       |--SEMI -> ; [322:25]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [322:27]\n+    |       |               |   |           |--EXPR -> EXPR [322:33]\n+    |       |               |   |           |   `--LITERAL_TRUE -> true [322:33]\n+    |       |               |   |           `--SEMI -> ; [322:37]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [323:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [323:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [323:17]\n+    |       |               |   |   |   |   `--IDENT -> B [323:17]\n+    |       |               |   |   |   `--COLON -> : [323:18]\n+    |       |               |   |   `--SLIST -> SLIST [323:20]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [323:20]\n+    |       |               |   |           |--EXPR -> EXPR [323:39]\n+    |       |               |   |           |   `--LOR -> || [323:39]\n+    |       |               |   |           |       |--EQUAL -> == [323:34]\n+    |       |               |   |           |       |   |--LPAREN -> ( [323:26]\n+    |       |               |   |           |       |   |--ASSIGN -> = [323:29]\n+    |       |               |   |           |       |   |   |--IDENT -> x [323:27]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 2 [323:31]\n+    |       |               |   |           |       |   |--RPAREN -> ) [323:32]\n+    |       |               |   |           |       |   `--NUM_INT -> 2 [323:37]\n+    |       |               |   |           |       `--LITERAL_TRUE -> true [323:42]\n+    |       |               |   |           `--SEMI -> ; [323:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [324:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [324:12]\n+    |       |               |   |   |   `--COLON -> : [324:19]\n+    |       |               |   |   `--SLIST -> SLIST [324:21]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [324:21]\n+    |       |               |   |           |--EXPR -> EXPR [324:27]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [324:27]\n+    |       |               |   |           `--SEMI -> ; [324:32]\n+    |       |               |   `--RCURLY -> } [325:8]\n+    |       |               |--RPAREN -> ) [325:9]\n+    |       |               `--EQUAL -> == [325:22]\n+    |       |                   |--LPAREN -> ( [325:14]\n+    |       |                   |--ASSIGN -> = [325:17]\n+    |       |                   |   |--IDENT -> x [325:15]\n+    |       |                   |   `--NUM_INT -> 3 [325:19]\n+    |       |                   |--RPAREN -> ) [325:20]\n+    |       |                   `--NUM_INT -> 3 [325:25]\n+    |       |--SEMI -> ; [325:26]\n+    |       |--LITERAL_IF -> if [327:8]\n+    |       |   |--LPAREN -> ( [327:11]\n+    |       |   |--EXPR -> EXPR [327:14]\n+    |       |   |   `--NOT_EQUAL -> != [327:14]\n+    |       |   |       |--IDENT -> x [327:12]\n+    |       |   |       `--NUM_INT -> 3 [327:17]\n+    |       |   |--RPAREN -> ) [327:18]\n+    |       |   `--SLIST -> { [327:20]\n+    |       |       |--LITERAL_THROW -> throw [328:12]\n+    |       |       |   |--EXPR -> EXPR [328:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [328:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [328:22]\n+    |       |       |   |       |--LPAREN -> ( [328:43]\n+    |       |       |   |       |--ELIST -> ELIST [328:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [328:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [328:44]\n+    |       |       |   |       `--RPAREN -> ) [328:64]\n+    |       |       |   `--SEMI -> ; [328:65]\n+    |       |       `--RCURLY -> } [329:8]\n+    |       `--RCURLY -> } [330:4]\n+    |--STATIC_INIT -> STATIC_INIT [332:4]\n+    |   `--SLIST -> { [332:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [333:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [333:8]\n+    |       |   |--TYPE -> TYPE [333:8]\n+    |       |   |   `--LITERAL_INT -> int [333:8]\n+    |       |   `--IDENT -> x [333:12]\n+    |       |--SEMI -> ; [333:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [334:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [334:8]\n+    |       |   |--TYPE -> TYPE [334:8]\n+    |       |   |   `--IDENT -> T [334:8]\n+    |       |   |--IDENT -> e [334:10]\n+    |       |   `--ASSIGN -> = [334:12]\n+    |       |       `--EXPR -> EXPR [334:15]\n+    |       |           `--DOT -> . [334:15]\n+    |       |               |--IDENT -> T [334:14]\n+    |       |               `--IDENT -> A [334:16]\n+    |       |--SEMI -> ; [334:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [336:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [336:8]\n+    |       |   |--TYPE -> TYPE [336:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [336:8]\n+    |       |   |--IDENT -> tA [336:16]\n+    |       |   `--ASSIGN -> = [336:19]\n+    |       |       `--EXPR -> EXPR [343:11]\n+    |       |           `--LAND -> && [343:11]\n+    |       |               |--LPAREN -> ( [336:21]\n+    |       |               |--LITERAL_SWITCH -> switch [336:22]\n+    |       |               |   |--LPAREN -> ( [336:29]\n+    |       |               |   |--EXPR -> EXPR [336:30]\n+    |       |               |   |   `--IDENT -> e [336:30]\n+    |       |               |   |--RPAREN -> ) [336:31]\n+    |       |               |   |--LCURLY -> { [336:33]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [337:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [337:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [337:17]\n+    |       |               |   |   |   |   `--IDENT -> A [337:17]\n+    |       |               |   |   |   `--COLON -> : [337:18]\n+    |       |               |   |   `--SLIST -> SLIST [338:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [338:16]\n+    |       |               |   |           |--EXPR -> EXPR [338:43]\n+    |       |               |   |           |   `--QUESTION -> ? [338:43]\n+    |       |               |   |           |       |--LAND -> && [338:31]\n+    |       |               |   |           |       |   |--METHOD_CALL -> ( [338:28]\n+    |       |               |   |           |       |   |   |--IDENT -> isTrue [338:22]\n+    |       |               |   |           |       |   |   |--ELIST -> ELIST [338:29]\n+    |       |               |   |           |       |   |   `--RPAREN -> ) [338:29]\n+    |       |               |   |           |       |   `--NOT_EQUAL -> != [338:36]\n+    |       |               |   |           |       |       |--IDENT -> e [338:34]\n+    |       |               |   |           |       |       `--DOT -> . [338:40]\n+    |       |               |   |           |       |           |--IDENT -> T [338:39]\n+    |       |               |   |           |       |           `--IDENT -> C [338:41]\n+    |       |               |   |           |       |--LAND -> && [338:58]\n+    |       |               |   |           |       |   |--EQUAL -> == [338:53]\n+    |       |               |   |           |       |   |   |--LPAREN -> ( [338:45]\n+    |       |               |   |           |       |   |   |--ASSIGN -> = [338:48]\n+    |       |               |   |           |       |   |   |   |--IDENT -> x [338:46]\n+    |       |               |   |           |       |   |   |   `--NUM_INT -> 1 [338:50]\n+    |       |               |   |           |       |   |   |--RPAREN -> ) [338:51]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [338:56]\n+    |       |               |   |           |       |   `--NOT_EQUAL -> != [338:63]\n+    |       |               |   |           |       |       |--IDENT -> e [338:61]\n+    |       |               |   |           |       |       `--DOT -> . [338:67]\n+    |       |               |   |           |       |           |--IDENT -> T [338:66]\n+    |       |               |   |           |       |           `--IDENT -> B [338:68]\n+    |       |               |   |           |       |--COLON -> : [338:70]\n+    |       |               |   |           |       `--LITERAL_FALSE -> false [338:72]\n+    |       |               |   |           `--SEMI -> ; [338:77]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [339:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [339:12]\n+    |       |               |   |   |   |--EXPR -> EXPR [339:17]\n+    |       |               |   |   |   |   `--IDENT -> B [339:17]\n+    |       |               |   |   |   `--COLON -> : [339:18]\n+    |       |               |   |   `--SLIST -> SLIST [340:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [340:16]\n+    |       |               |   |           |--EXPR -> EXPR [340:35]\n+    |       |               |   |           |   `--LOR -> || [340:35]\n+    |       |               |   |           |       |--EQUAL -> == [340:30]\n+    |       |               |   |           |       |   |--LPAREN -> ( [340:22]\n+    |       |               |   |           |       |   |--ASSIGN -> = [340:25]\n+    |       |               |   |           |       |   |   |--IDENT -> x [340:23]\n+    |       |               |   |           |       |   |   `--NUM_INT -> 1 [340:27]\n+    |       |               |   |           |       |   |--RPAREN -> ) [340:28]\n+    |       |               |   |           |       |   `--NUM_INT -> 1 [340:33]\n+    |       |               |   |           |       `--METHOD_CALL -> ( [340:44]\n+    |       |               |   |           |           |--IDENT -> isTrue [340:38]\n+    |       |               |   |           |           |--ELIST -> ELIST [340:45]\n+    |       |               |   |           |           `--RPAREN -> ) [340:45]\n+    |       |               |   |           `--SEMI -> ; [340:46]\n+    |       |               |   |--CASE_GROUP -> CASE_GROUP [341:12]\n+    |       |               |   |   |--LITERAL_DEFAULT -> default [341:12]\n+    |       |               |   |   |   `--COLON -> : [341:19]\n+    |       |               |   |   `--SLIST -> SLIST [342:16]\n+    |       |               |   |       `--LITERAL_YIELD -> yield [342:16]\n+    |       |               |   |           |--EXPR -> EXPR [342:22]\n+    |       |               |   |           |   `--LITERAL_FALSE -> false [342:22]\n+    |       |               |   |           `--SEMI -> ; [342:27]\n+    |       |               |   `--RCURLY -> } [343:8]\n+    |       |               |--RPAREN -> ) [343:9]\n+    |       |               `--EQUAL -> == [343:16]\n+    |       |                   |--IDENT -> x [343:14]\n+    |       |                   `--NUM_INT -> 1 [343:19]\n+    |       |--SEMI -> ; [343:20]\n+    |       |--LITERAL_IF -> if [345:8]\n+    |       |   |--LPAREN -> ( [345:11]\n+    |       |   |--EXPR -> EXPR [345:12]\n+    |       |   |   `--LNOT -> ! [345:12]\n+    |       |   |       `--IDENT -> tA [345:13]\n+    |       |   |--RPAREN -> ) [345:15]\n+    |       |   `--SLIST -> { [345:17]\n+    |       |       |--LITERAL_THROW -> throw [346:12]\n+    |       |       |   |--EXPR -> EXPR [346:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [346:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [346:22]\n+    |       |       |   |       |--LPAREN -> ( [346:43]\n+    |       |       |   |       |--ELIST -> ELIST [346:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [346:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [346:44]\n+    |       |       |   |       `--RPAREN -> ) [346:64]\n+    |       |       |   `--SEMI -> ; [346:65]\n+    |       |       `--RCURLY -> } [347:8]\n+    |       `--RCURLY -> } [348:4]\n+    |--STATIC_INIT -> STATIC_INIT [350:4]\n+    |   `--SLIST -> { [350:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [351:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [351:8]\n+    |       |   |--TYPE -> TYPE [351:8]\n+    |       |   |   `--LITERAL_INT -> int [351:8]\n+    |       |   `--IDENT -> x [351:12]\n+    |       |--SEMI -> ; [351:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [352:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [352:8]\n+    |       |   |--TYPE -> TYPE [352:8]\n+    |       |   |   `--IDENT -> T [352:8]\n+    |       |   |--IDENT -> e [352:10]\n+    |       |   `--ASSIGN -> = [352:12]\n+    |       |       `--EXPR -> EXPR [352:15]\n+    |       |           `--DOT -> . [352:15]\n+    |       |               |--IDENT -> T [352:14]\n+    |       |               `--IDENT -> A [352:16]\n+    |       |--SEMI -> ; [352:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [354:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [354:8]\n+    |       |   |--TYPE -> TYPE [354:8]\n+    |       |   |   `--LITERAL_INT -> int [354:8]\n+    |       |   |--IDENT -> v [354:12]\n+    |       |   `--ASSIGN -> = [354:14]\n+    |       |       `--EXPR -> EXPR [354:16]\n+    |       |           |--LPAREN -> ( [354:16]\n+    |       |           |--LITERAL_SWITCH -> switch [354:17]\n+    |       |           |   |--LPAREN -> ( [354:23]\n+    |       |           |   |--EXPR -> EXPR [354:24]\n+    |       |           |   |   `--IDENT -> e [354:24]\n+    |       |           |   |--RPAREN -> ) [354:25]\n+    |       |           |   |--LCURLY -> { [354:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [355:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [355:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [355:17]\n+    |       |           |   |   |       `--IDENT -> A [355:17]\n+    |       |           |   |   |--LAMBDA -> -> [355:19]\n+    |       |           |   |   |--EXPR -> EXPR [355:24]\n+    |       |           |   |   |   `--ASSIGN -> = [355:24]\n+    |       |           |   |   |       |--IDENT -> x [355:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [355:26]\n+    |       |           |   |   `--SEMI -> ; [355:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [356:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [356:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [356:17]\n+    |       |           |   |   |       `--IDENT -> B [356:17]\n+    |       |           |   |   |--LAMBDA -> -> [356:19]\n+    |       |           |   |   |--EXPR -> EXPR [356:24]\n+    |       |           |   |   |   `--ASSIGN -> = [356:24]\n+    |       |           |   |   |       |--IDENT -> x [356:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [356:26]\n+    |       |           |   |   `--SEMI -> ; [356:27]\n+    |       |           |   |--SWITCH_RULE -> SWITCH_RULE [357:12]\n+    |       |           |   |   |--LITERAL_CASE -> case [357:12]\n+    |       |           |   |   |   `--EXPR -> EXPR [357:17]\n+    |       |           |   |   |       `--IDENT -> C [357:17]\n+    |       |           |   |   |--LAMBDA -> -> [357:19]\n+    |       |           |   |   |--EXPR -> EXPR [357:24]\n+    |       |           |   |   |   `--ASSIGN -> = [357:24]\n+    |       |           |   |   |       |--IDENT -> x [357:22]\n+    |       |           |   |   |       `--NUM_INT -> 0 [357:26]\n+    |       |           |   |   `--SEMI -> ; [357:27]\n+    |       |           |   `--RCURLY -> } [358:8]\n+    |       |           `--RPAREN -> ) [358:9]\n+    |       |--SEMI -> ; [358:10]\n+    |       |--LITERAL_IF -> if [360:8]\n+    |       |   |--LPAREN -> ( [360:11]\n+    |       |   |--EXPR -> EXPR [360:19]\n+    |       |   |   `--LOR -> || [360:19]\n+    |       |   |       |--NOT_EQUAL -> != [360:14]\n+    |       |   |       |   |--IDENT -> x [360:12]\n+    |       |   |       |   `--NUM_INT -> 0 [360:17]\n+    |       |   |       `--NOT_EQUAL -> != [360:24]\n+    |       |   |           |--IDENT -> v [360:22]\n+    |       |   |           `--NUM_INT -> 0 [360:27]\n+    |       |   |--RPAREN -> ) [360:28]\n+    |       |   `--SLIST -> { [360:30]\n+    |       |       |--LITERAL_THROW -> throw [361:12]\n+    |       |       |   |--EXPR -> EXPR [361:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [361:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [361:22]\n+    |       |       |   |       |--LPAREN -> ( [361:43]\n+    |       |       |   |       |--ELIST -> ELIST [361:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [361:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [361:44]\n+    |       |       |   |       `--RPAREN -> ) [361:64]\n+    |       |       |   `--SEMI -> ; [361:65]\n+    |       |       `--RCURLY -> } [362:8]\n+    |       `--RCURLY -> } [363:4]\n+    |--INSTANCE_INIT -> INSTANCE_INIT [365:4]\n+    |   `--SLIST -> { [365:4]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [366:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [366:8]\n+    |       |   |--TYPE -> TYPE [366:8]\n+    |       |   |   `--LITERAL_INT -> int [366:8]\n+    |       |   `--IDENT -> x [366:12]\n+    |       |--SEMI -> ; [366:13]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [367:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [367:8]\n+    |       |   |--TYPE -> TYPE [367:8]\n+    |       |   |   `--IDENT -> T [367:8]\n+    |       |   |--IDENT -> e [367:10]\n+    |       |   `--ASSIGN -> = [367:12]\n+    |       |       `--EXPR -> EXPR [367:15]\n+    |       |           `--DOT -> . [367:15]\n+    |       |               |--IDENT -> T [367:14]\n+    |       |               `--IDENT -> A [367:16]\n+    |       |--SEMI -> ; [367:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [369:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [369:8]\n+    |       |   |--TYPE -> TYPE [369:8]\n+    |       |   |   `--LITERAL_BOOLEAN -> boolean [369:8]\n+    |       |   |--IDENT -> tA [369:16]\n+    |       |   `--ASSIGN -> = [369:19]\n+    |       |       `--EXPR -> EXPR [373:11]\n+    |       |           `--LAND -> && [373:11]\n+    |       |               |--LPAREN -> ( [369:21]\n+    |       |               |--LITERAL_SWITCH -> switch [369:22]\n+    |       |               |   |--LPAREN -> ( [369:28]\n+    |       |               |   |--EXPR -> EXPR [369:29]\n+    |       |               |   |   `--IDENT -> e [369:29]\n+    |       |               |   |--RPAREN -> ) [369:30]\n+    |       |               |   |--LCURLY -> { [369:32]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [370:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [370:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [370:17]\n+    |       |               |   |   |       `--IDENT -> A [370:17]\n+    |       |               |   |   |--LAMBDA -> -> [370:19]\n+    |       |               |   |   `--SLIST -> { [370:22]\n+    |       |               |   |       |--EXPR -> EXPR [370:26]\n+    |       |               |   |       |   `--ASSIGN -> = [370:26]\n+    |       |               |   |       |       |--IDENT -> x [370:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [370:28]\n+    |       |               |   |       |--SEMI -> ; [370:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [370:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [370:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [370:37]\n+    |       |               |   |       |   `--SEMI -> ; [370:41]\n+    |       |               |   |       `--RCURLY -> } [370:43]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [371:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [371:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [371:17]\n+    |       |               |   |   |       `--IDENT -> B [371:17]\n+    |       |               |   |   |--LAMBDA -> -> [371:19]\n+    |       |               |   |   `--SLIST -> { [371:22]\n+    |       |               |   |       |--EXPR -> EXPR [371:26]\n+    |       |               |   |       |   `--ASSIGN -> = [371:26]\n+    |       |               |   |       |       |--IDENT -> x [371:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [371:28]\n+    |       |               |   |       |--SEMI -> ; [371:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [371:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [371:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [371:37]\n+    |       |               |   |       |   `--SEMI -> ; [371:41]\n+    |       |               |   |       `--RCURLY -> } [371:43]\n+    |       |               |   |--SWITCH_RULE -> SWITCH_RULE [372:12]\n+    |       |               |   |   |--LITERAL_CASE -> case [372:12]\n+    |       |               |   |   |   `--EXPR -> EXPR [372:17]\n+    |       |               |   |   |       `--IDENT -> C [372:17]\n+    |       |               |   |   |--LAMBDA -> -> [372:19]\n+    |       |               |   |   `--SLIST -> { [372:22]\n+    |       |               |   |       |--EXPR -> EXPR [372:26]\n+    |       |               |   |       |   `--ASSIGN -> = [372:26]\n+    |       |               |   |       |       |--IDENT -> x [372:24]\n+    |       |               |   |       |       `--NUM_INT -> 1 [372:28]\n+    |       |               |   |       |--SEMI -> ; [372:29]\n+    |       |               |   |       |--LITERAL_YIELD -> yield [372:31]\n+    |       |               |   |       |   |--EXPR -> EXPR [372:37]\n+    |       |               |   |       |   |   `--LITERAL_TRUE -> true [372:37]\n+    |       |               |   |       |   `--SEMI -> ; [372:41]\n+    |       |               |   |       `--RCURLY -> } [372:43]\n+    |       |               |   `--RCURLY -> } [373:8]\n+    |       |               |--RPAREN -> ) [373:9]\n+    |       |               `--EQUAL -> == [373:16]\n+    |       |                   |--IDENT -> x [373:14]\n+    |       |                   `--NUM_INT -> 1 [373:19]\n+    |       |--SEMI -> ; [373:20]\n+    |       |--LITERAL_IF -> if [375:8]\n+    |       |   |--LPAREN -> ( [375:11]\n+    |       |   |--EXPR -> EXPR [375:12]\n+    |       |   |   `--LNOT -> ! [375:12]\n+    |       |   |       `--IDENT -> tA [375:13]\n+    |       |   |--RPAREN -> ) [375:15]\n+    |       |   `--SLIST -> { [375:17]\n+    |       |       |--LITERAL_THROW -> throw [376:12]\n+    |       |       |   |--EXPR -> EXPR [376:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [376:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [376:22]\n+    |       |       |   |       |--LPAREN -> ( [376:43]\n+    |       |       |   |       |--ELIST -> ELIST [376:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [376:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Unexpected result.\" [376:44]\n+    |       |       |   |       `--RPAREN -> ) [376:64]\n+    |       |       |   `--SEMI -> ; [376:65]\n+    |       |       `--RCURLY -> } [377:8]\n+    |       `--RCURLY -> } [378:4]\n+    |--RECORD_DEF -> RECORD_DEF [380:4]\n+    |   |--MODIFIERS -> MODIFIERS [380:4]\n+    |   |   `--LITERAL_PRIVATE -> private [380:4]\n+    |   |--LITERAL_RECORD -> record [380:12]\n+    |   |--IDENT -> DefiniteAssignment1 [380:19]\n+    |   |--LPAREN -> ( [380:38]\n+    |   |--RECORD_COMPONENTS -> RECORD_COMPONENTS [380:39]\n+    |   |--RPAREN -> ) [380:39]\n+    |   `--OBJBLOCK -> OBJBLOCK [380:41]\n+    |       |--LCURLY -> { [380:41]\n+    |       |--METHOD_DEF -> METHOD_DEF [381:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [381:8]\n+    |       |   |   `--LITERAL_STATIC -> static [381:8]\n+    |       |   |--TYPE -> TYPE [381:15]\n+    |       |   |   `--LITERAL_INT -> int [381:15]\n+    |       |   |--IDENT -> id [381:19]\n+    |       |   |--LPAREN -> ( [381:21]\n+    |       |   |--PARAMETERS -> PARAMETERS [381:22]\n+    |       |   |   `--PARAMETER_DEF -> PARAMETER_DEF [381:22]\n+    |       |   |       |--MODIFIERS -> MODIFIERS [381:22]\n+    |       |   |       |--TYPE -> TYPE [381:22]\n+    |       |   |       |   `--LITERAL_INT -> int [381:22]\n+    |       |   |       `--IDENT -> id [381:26]\n+    |       |   |--RPAREN -> ) [381:28]\n+    |       |   `--SLIST -> { [381:29]\n+    |       |       |--LITERAL_RETURN -> return [381:30]\n+    |       |       |   |--EXPR -> EXPR [381:37]\n+    |       |       |   |   `--IDENT -> id [381:37]\n+    |       |       |   `--SEMI -> ; [381:39]\n+    |       |       `--RCURLY -> } [381:40]\n+    |       `--RCURLY -> } [382:4]\n+    |--METHOD_DEF -> METHOD_DEF [384:4]\n+    |   |--MODIFIERS -> MODIFIERS [384:4]\n+    |   |   `--LITERAL_PRIVATE -> private [384:4]\n+    |   |--TYPE -> TYPE [384:12]\n+    |   |   `--IDENT -> String [384:12]\n+    |   |--IDENT -> print2 [384:19]\n+    |   |--LPAREN -> ( [384:25]\n+    |   |--PARAMETERS -> PARAMETERS [384:26]\n+    |   |   |--PARAMETER_DEF -> PARAMETER_DEF [384:26]\n+    |   |   |   |--MODIFIERS -> MODIFIERS [384:26]\n+    |   |   |   |--TYPE -> TYPE [384:26]\n+    |   |   |   |   `--LITERAL_INT -> int [384:26]\n+    |   |   |   `--IDENT -> i [384:30]\n+    |   |   |--COMMA -> , [384:31]\n+    |   |   |--PARAMETER_DEF -> PARAMETER_DEF [384:33]\n+    |   |   |   |--MODIFIERS -> MODIFIERS [384:33]\n+    |   |   |   |--TYPE -> TYPE [384:33]\n+    |   |   |   |   `--LITERAL_INT -> int [384:33]\n+    |   |   |   `--IDENT -> j [384:37]\n+    |   |   |--COMMA -> , [384:38]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [384:40]\n+    |   |       |--MODIFIERS -> MODIFIERS [384:40]\n+    |   |       |--TYPE -> TYPE [384:40]\n+    |   |       |   `--LITERAL_INT -> int [384:40]\n+    |   |       `--IDENT -> k [384:44]\n+    |   |--RPAREN -> ) [384:45]\n+    |   `--SLIST -> { [384:47]\n+    |       |--LITERAL_RETURN -> return [385:8]\n+    |       |   |--EXPR -> EXPR [385:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [385:15]\n+    |       |   |       |--LPAREN -> ( [385:22]\n+    |       |   |       |--EXPR -> EXPR [385:23]\n+    |       |   |       |   `--IDENT -> i [385:23]\n+    |       |   |       |--RPAREN -> ) [385:24]\n+    |       |   |       |--LCURLY -> { [385:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [386:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [386:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [386:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 0 [386:17]\n+    |       |   |       |   |   `--COLON -> : [386:18]\n+    |       |   |       |   `--SLIST -> SLIST [387:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [387:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [387:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [387:16]\n+    |       |   |       |       |   |   `--IDENT -> String [387:16]\n+    |       |   |       |       |   `--IDENT -> r [387:23]\n+    |       |   |       |       |--SEMI -> ; [387:24]\n+    |       |   |       |       |--LABELED_STAT -> : [388:21]\n+    |       |   |       |       |   |--IDENT -> OUTER [388:16]\n+    |       |   |       |       |   `--LITERAL_SWITCH -> switch [388:23]\n+    |       |   |       |       |       |--LPAREN -> ( [388:30]\n+    |       |   |       |       |       |--EXPR -> EXPR [388:31]\n+    |       |   |       |       |       |   `--IDENT -> j [388:31]\n+    |       |   |       |       |       |--RPAREN -> ) [388:32]\n+    |       |   |       |       |       |--LCURLY -> { [388:34]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [389:20]\n+    |       |   |       |       |       |   |--LITERAL_CASE -> case [389:20]\n+    |       |   |       |       |       |   |   |--EXPR -> EXPR [389:25]\n+    |       |   |       |       |       |   |   |   `--NUM_INT -> 0 [389:25]\n+    |       |   |       |       |       |   |   `--COLON -> : [389:26]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [390:24]\n+    |       |   |       |       |       |       |--VARIABLE_DEF -> VARIABLE_DEF [390:24]\n+    |       |   |       |       |       |       |   |--MODIFIERS -> MODIFIERS [390:24]\n+    |       |   |       |       |       |       |   |--TYPE -> TYPE [390:24]\n+    |       |   |       |       |       |       |   |   `--IDENT -> String [390:24]\n+    |       |   |       |       |       |       |   `--IDENT -> res [390:31]\n+    |       |   |       |       |       |       |--SEMI -> ; [390:34]\n+    |       |   |       |       |       |       |--LABELED_STAT -> : [391:29]\n+    |       |   |       |       |       |       |   |--IDENT -> INNER [391:24]\n+    |       |   |       |       |       |       |   `--LITERAL_SWITCH -> switch [391:31]\n+    |       |   |       |       |       |       |       |--LPAREN -> ( [391:38]\n+    |       |   |       |       |       |       |       |--EXPR -> EXPR [391:39]\n+    |       |   |       |       |       |       |       |   `--IDENT -> k [391:39]\n+    |       |   |       |       |       |       |       |--RPAREN -> ) [391:40]\n+    |       |   |       |       |       |       |       |--LCURLY -> { [391:42]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [392:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [392:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [392:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 0 [392:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [392:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [392:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [392:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [392:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [392:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-0\" [392:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [392:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [392:51]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [392:56]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [393:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [393:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [393:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 1 [393:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [393:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [393:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [393:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [393:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [393:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-1\" [393:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [393:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [393:51]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [393:56]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [394:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_CASE -> case [394:28]\n+    |       |   |       |       |       |       |       |   |   |--EXPR -> EXPR [394:33]\n+    |       |   |       |       |       |       |       |   |   |   `--NUM_INT -> 2 [394:33]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [394:34]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [394:40]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [394:40]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [394:40]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> res [394:36]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-2\" [394:42]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [394:49]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [394:51]\n+    |       |   |       |       |       |       |       |           |--IDENT -> INNER [394:57]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [394:62]\n+    |       |   |       |       |       |       |       |--CASE_GROUP -> CASE_GROUP [395:28]\n+    |       |   |       |       |       |       |       |   |--LITERAL_DEFAULT -> default [395:28]\n+    |       |   |       |       |       |       |       |   |   `--COLON -> : [395:35]\n+    |       |   |       |       |       |       |       |   `--SLIST -> SLIST [395:39]\n+    |       |   |       |       |       |       |       |       |--EXPR -> EXPR [395:39]\n+    |       |   |       |       |       |       |       |       |   `--ASSIGN -> = [395:39]\n+    |       |   |       |       |       |       |       |       |       |--IDENT -> r [395:37]\n+    |       |   |       |       |       |       |       |       |       `--STRING_LITERAL -> \"0-0-X\" [395:41]\n+    |       |   |       |       |       |       |       |       |--SEMI -> ; [395:48]\n+    |       |   |       |       |       |       |       |       `--LITERAL_BREAK -> break [395:50]\n+    |       |   |       |       |       |       |       |           |--IDENT -> OUTER [395:56]\n+    |       |   |       |       |       |       |       |           `--SEMI -> ; [395:61]\n+    |       |   |       |       |       |       |       `--RCURLY -> } [396:24]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [397:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [397:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [397:24]\n+    |       |   |       |       |       |       |       `--IDENT -> res [397:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [397:31]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [398:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [398:29]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [399:20]\n+    |       |   |       |       |       |   |--LITERAL_CASE -> case [399:20]\n+    |       |   |       |       |       |   |   |--EXPR -> EXPR [399:25]\n+    |       |   |       |       |       |   |   |   `--NUM_INT -> 1 [399:25]\n+    |       |   |       |       |       |   |   `--COLON -> : [399:26]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [400:26]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [400:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [400:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [400:24]\n+    |       |   |       |       |       |       |       `--STRING_LITERAL -> \"0-1\" [400:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [400:33]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [401:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [401:29]\n+    |       |   |       |       |       |--CASE_GROUP -> CASE_GROUP [402:20]\n+    |       |   |       |       |       |   |--LITERAL_DEFAULT -> default [402:20]\n+    |       |   |       |       |       |   |   `--COLON -> : [402:27]\n+    |       |   |       |       |       |   `--SLIST -> SLIST [403:26]\n+    |       |   |       |       |       |       |--EXPR -> EXPR [403:26]\n+    |       |   |       |       |       |       |   `--ASSIGN -> = [403:26]\n+    |       |   |       |       |       |       |       |--IDENT -> r [403:24]\n+    |       |   |       |       |       |       |       `--STRING_LITERAL -> \"0-X\" [403:28]\n+    |       |   |       |       |       |       |--SEMI -> ; [403:33]\n+    |       |   |       |       |       |       `--LITERAL_BREAK -> break [404:24]\n+    |       |   |       |       |       |           `--SEMI -> ; [404:29]\n+    |       |   |       |       |       `--RCURLY -> } [405:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [406:16]\n+    |       |   |       |           |--EXPR -> EXPR [406:22]\n+    |       |   |       |           |   `--IDENT -> r [406:22]\n+    |       |   |       |           `--SEMI -> ; [406:23]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [407:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [407:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [407:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 1 [407:17]\n+    |       |   |       |   |   `--COLON -> : [407:18]\n+    |       |   |       |   `--SLIST -> SLIST [408:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [408:16]\n+    |       |   |       |           |--EXPR -> EXPR [408:22]\n+    |       |   |       |           |   `--STRING_LITERAL -> \"1\" [408:22]\n+    |       |   |       |           `--SEMI -> ; [408:25]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [409:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [409:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [409:17]\n+    |       |   |       |   |   |   `--NUM_INT -> 2 [409:17]\n+    |       |   |       |   |   `--COLON -> : [409:18]\n+    |       |   |       |   `--SLIST -> SLIST [410:19]\n+    |       |   |       |       |--LABELED_STAT -> : [410:19]\n+    |       |   |       |       |   |--IDENT -> LOP [410:16]\n+    |       |   |       |       |   `--LITERAL_WHILE -> while [410:21]\n+    |       |   |       |       |       |--LPAREN -> ( [410:27]\n+    |       |   |       |       |       |--EXPR -> EXPR [410:32]\n+    |       |   |       |       |       |   `--GT -> > [410:32]\n+    |       |   |       |       |       |       |--POST_DEC -> -- [410:29]\n+    |       |   |       |       |       |       |   `--IDENT -> j [410:28]\n+    |       |   |       |       |       |       `--NUM_INT -> 0 [410:34]\n+    |       |   |       |       |       |--RPAREN -> ) [410:35]\n+    |       |   |       |       |       `--SLIST -> { [410:37]\n+    |       |   |       |       |           |--LITERAL_IF -> if [411:20]\n+    |       |   |       |       |           |   |--LPAREN -> ( [411:23]\n+    |       |   |       |       |           |   |--EXPR -> EXPR [411:26]\n+    |       |   |       |       |           |   |   `--EQUAL -> == [411:26]\n+    |       |   |       |       |           |   |       |--IDENT -> k [411:24]\n+    |       |   |       |       |           |   |       `--NUM_INT -> 5 [411:29]\n+    |       |   |       |       |           |   |--RPAREN -> ) [411:30]\n+    |       |   |       |       |           |   `--SLIST -> { [411:32]\n+    |       |   |       |       |           |       |--EXPR -> EXPR [412:25]\n+    |       |   |       |       |           |       |   `--POST_DEC -> -- [412:25]\n+    |       |   |       |       |           |       |       `--IDENT -> k [412:24]\n+    |       |   |       |       |           |       |--SEMI -> ; [412:27]\n+    |       |   |       |       |           |       |--LITERAL_CONTINUE -> continue [413:24]\n+    |       |   |       |       |           |       |   `--SEMI -> ; [413:32]\n+    |       |   |       |       |           |       `--RCURLY -> } [414:20]\n+    |       |   |       |       |           |--LITERAL_BREAK -> break [415:20]\n+    |       |   |       |       |           |   |--IDENT -> LOP [415:26]\n+    |       |   |       |       |           |   `--SEMI -> ; [415:29]\n+    |       |   |       |       |           `--RCURLY -> } [416:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [417:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [417:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [417:16]\n+    |       |   |       |       |   |   |--IDENT -> Supplier [417:16]\n+    |       |   |       |       |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [417:24]\n+    |       |   |       |       |   |       |--GENERIC_START -> < [417:24]\n+    |       |   |       |       |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [417:25]\n+    |       |   |       |       |   |       |   `--IDENT -> String [417:25]\n+    |       |   |       |       |   |       `--GENERIC_END -> > [417:31]\n+    |       |   |       |       |   |--IDENT -> getter [417:33]\n+    |       |   |       |       |   `--ASSIGN -> = [417:40]\n+    |       |   |       |       |       `--LAMBDA -> -> [417:45]\n+    |       |   |       |       |           |--LPAREN -> ( [417:42]\n+    |       |   |       |       |           |--PARAMETERS -> PARAMETERS [417:43]\n+    |       |   |       |       |           |--RPAREN -> ) [417:43]\n+    |       |   |       |       |           `--SLIST -> { [417:48]\n+    |       |   |       |       |               |--LITERAL_RETURN -> return [417:50]\n+    |       |   |       |       |               |   |--EXPR -> EXPR [417:57]\n+    |       |   |       |       |               |   |   `--STRING_LITERAL -> \"2-X-5\" [417:57]\n+    |       |   |       |       |               |   `--SEMI -> ; [417:64]\n+    |       |   |       |       |               `--RCURLY -> } [417:66]\n+    |       |   |       |       |--SEMI -> ; [417:67]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [418:16]\n+    |       |   |       |           |--EXPR -> EXPR [418:32]\n+    |       |   |       |           |   `--METHOD_CALL -> ( [418:32]\n+    |       |   |       |           |       |--DOT -> . [418:28]\n+    |       |   |       |           |       |   |--IDENT -> getter [418:22]\n+    |       |   |       |           |       |   `--IDENT -> get [418:29]\n+    |       |   |       |           |       |--ELIST -> ELIST [418:33]\n+    |       |   |       |           |       `--RPAREN -> ) [418:33]\n+    |       |   |       |           `--SEMI -> ; [418:34]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [419:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [419:12]\n+    |       |   |       |   |   `--COLON -> : [419:19]\n+    |       |   |       |   `--SLIST -> SLIST [420:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [420:16]\n+    |       |   |       |           |--EXPR -> EXPR [420:22]\n+    |       |   |       |           |   `--STRING_LITERAL -> \"X\" [420:22]\n+    |       |   |       |           `--SEMI -> ; [420:25]\n+    |       |   |       `--RCURLY -> } [421:8]\n+    |       |   `--SEMI -> ; [421:9]\n+    |       `--RCURLY -> } [422:4]\n+    |--METHOD_DEF -> METHOD_DEF [424:4]\n+    |   |--MODIFIERS -> MODIFIERS [424:4]\n+    |   |   `--LITERAL_PRIVATE -> private [424:4]\n+    |   |--TYPE -> TYPE [424:12]\n+    |   |   `--IDENT -> String [424:12]\n+    |   |--IDENT -> expression1 [424:19]\n+    |   |--LPAREN -> ( [424:30]\n+    |   |--PARAMETERS -> PARAMETERS [424:31]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [424:31]\n+    |   |       |--MODIFIERS -> MODIFIERS [424:31]\n+    |   |       |--TYPE -> TYPE [424:31]\n+    |   |       |   `--IDENT -> T [424:31]\n+    |   |       `--IDENT -> t [424:33]\n+    |   |--RPAREN -> ) [424:34]\n+    |   `--SLIST -> { [424:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [425:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [425:8]\n+    |       |   |--TYPE -> TYPE [425:8]\n+    |       |   |   `--IDENT -> String [425:8]\n+    |       |   |--IDENT -> help [425:15]\n+    |       |   `--ASSIGN -> = [425:20]\n+    |       |       `--EXPR -> EXPR [425:22]\n+    |       |           `--STRING_LITERAL -> \"\" [425:22]\n+    |       |--SEMI -> ; [425:24]\n+    |       |--LITERAL_RETURN -> return [426:8]\n+    |       |   |--EXPR -> EXPR [426:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [426:15]\n+    |       |   |       |--LPAREN -> ( [426:22]\n+    |       |   |       |--EXPR -> EXPR [426:23]\n+    |       |   |       |   `--IDENT -> t [426:23]\n+    |       |   |       |--RPAREN -> ) [426:24]\n+    |       |   |       |--LCURLY -> { [426:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [427:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [427:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [427:17]\n+    |       |   |       |   |   |   `--IDENT -> A [427:17]\n+    |       |   |       |   |   `--COLON -> : [427:18]\n+    |       |   |       |   `--SLIST -> SLIST [427:25]\n+    |       |   |       |       |--EXPR -> EXPR [427:25]\n+    |       |   |       |       |   `--ASSIGN -> = [427:25]\n+    |       |   |       |       |       |--IDENT -> help [427:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"a\" [427:27]\n+    |       |   |       |       `--SEMI -> ; [427:30]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [428:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [428:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [428:17]\n+    |       |   |       |   |   |   `--IDENT -> B [428:17]\n+    |       |   |       |   |   `--COLON -> : [428:18]\n+    |       |   |       |   `--SLIST -> SLIST [428:25]\n+    |       |   |       |       |--EXPR -> EXPR [428:25]\n+    |       |   |       |       |   `--PLUS_ASSIGN -> += [428:25]\n+    |       |   |       |       |       |--IDENT -> help [428:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"b\" [428:28]\n+    |       |   |       |       `--SEMI -> ; [428:31]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [429:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [429:12]\n+    |       |   |       |   |   `--COLON -> : [429:19]\n+    |       |   |       |   `--SLIST -> SLIST [429:21]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [429:21]\n+    |       |   |       |           |--EXPR -> EXPR [429:27]\n+    |       |   |       |           |   `--IDENT -> help [429:27]\n+    |       |   |       |           `--SEMI -> ; [429:31]\n+    |       |   |       `--RCURLY -> } [430:8]\n+    |       |   `--SEMI -> ; [430:9]\n+    |       `--RCURLY -> } [431:4]\n+    |--METHOD_DEF -> METHOD_DEF [433:4]\n+    |   |--MODIFIERS -> MODIFIERS [433:4]\n+    |   |   `--LITERAL_PRIVATE -> private [433:4]\n+    |   |--TYPE -> TYPE [433:12]\n+    |   |   `--IDENT -> String [433:12]\n+    |   |--IDENT -> expression2 [433:19]\n+    |   |--LPAREN -> ( [433:30]\n+    |   |--PARAMETERS -> PARAMETERS [433:31]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [433:31]\n+    |   |       |--MODIFIERS -> MODIFIERS [433:31]\n+    |   |       |--TYPE -> TYPE [433:31]\n+    |   |       |   `--IDENT -> T [433:31]\n+    |   |       `--IDENT -> t [433:33]\n+    |   |--RPAREN -> ) [433:34]\n+    |   `--SLIST -> { [433:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [434:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [434:8]\n+    |       |   |--TYPE -> TYPE [434:8]\n+    |       |   |   `--IDENT -> String [434:8]\n+    |       |   |--IDENT -> help [434:15]\n+    |       |   `--ASSIGN -> = [434:20]\n+    |       |       `--EXPR -> EXPR [434:22]\n+    |       |           `--STRING_LITERAL -> \"\" [434:22]\n+    |       |--SEMI -> ; [434:24]\n+    |       |--LITERAL_RETURN -> return [435:8]\n+    |       |   |--EXPR -> EXPR [435:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [435:15]\n+    |       |   |       |--LPAREN -> ( [435:22]\n+    |       |   |       |--EXPR -> EXPR [435:23]\n+    |       |   |       |   `--IDENT -> t [435:23]\n+    |       |   |       |--RPAREN -> ) [435:24]\n+    |       |   |       |--LCURLY -> { [435:26]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [436:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [436:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [436:17]\n+    |       |   |       |   |   |   `--IDENT -> A [436:17]\n+    |       |   |       |   |   `--COLON -> : [436:18]\n+    |       |   |       |   `--SLIST -> SLIST [436:25]\n+    |       |   |       |       |--EXPR -> EXPR [436:25]\n+    |       |   |       |       |   `--ASSIGN -> = [436:25]\n+    |       |   |       |       |       |--IDENT -> help [436:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"a\" [436:27]\n+    |       |   |       |       `--SEMI -> ; [436:30]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [437:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [437:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [437:17]\n+    |       |   |       |   |   |   `--IDENT -> B [437:17]\n+    |       |   |       |   |   `--COLON -> : [437:18]\n+    |       |   |       |   `--SLIST -> SLIST [437:25]\n+    |       |   |       |       |--EXPR -> EXPR [437:25]\n+    |       |   |       |       |   `--PLUS_ASSIGN -> += [437:25]\n+    |       |   |       |       |       |--IDENT -> help [437:20]\n+    |       |   |       |       |       `--STRING_LITERAL -> \"b\" [437:28]\n+    |       |   |       |       `--SEMI -> ; [437:31]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [438:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [438:12]\n+    |       |   |       |   |   `--COLON -> : [438:19]\n+    |       |   |       |   `--SLIST -> SLIST [438:21]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [438:21]\n+    |       |   |       |           |--EXPR -> EXPR [438:27]\n+    |       |   |       |           |   `--IDENT -> help [438:27]\n+    |       |   |       |           `--SEMI -> ; [438:31]\n+    |       |   |       `--RCURLY -> } [439:8]\n+    |       |   `--SEMI -> ; [439:9]\n+    |       `--RCURLY -> } [440:4]\n+    |--METHOD_DEF -> METHOD_DEF [442:4]\n+    |   |--MODIFIERS -> MODIFIERS [442:4]\n+    |   |--TYPE -> TYPE [442:4]\n+    |   |   |--IDENT -> I [442:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [442:5]\n+    |   |       |--GENERIC_START -> < [442:5]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [442:6]\n+    |   |       |   `--IDENT -> String [442:6]\n+    |   |       `--GENERIC_END -> > [442:12]\n+    |   |--IDENT -> lambdaCapture1 [442:14]\n+    |   |--LPAREN -> ( [442:28]\n+    |   |--PARAMETERS -> PARAMETERS [442:29]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [442:29]\n+    |   |       |--MODIFIERS -> MODIFIERS [442:29]\n+    |   |       |--TYPE -> TYPE [442:29]\n+    |   |       |   `--LITERAL_INT -> int [442:29]\n+    |   |       `--IDENT -> i [442:33]\n+    |   |--RPAREN -> ) [442:34]\n+    |   `--SLIST -> { [442:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [443:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [443:8]\n+    |       |   |--TYPE -> TYPE [443:8]\n+    |       |   |   `--LITERAL_INT -> int [443:8]\n+    |       |   |--IDENT -> j [443:12]\n+    |       |   `--ASSIGN -> = [443:14]\n+    |       |       `--EXPR -> EXPR [443:18]\n+    |       |           `--PLUS -> + [443:18]\n+    |       |               |--IDENT -> i [443:16]\n+    |       |               `--NUM_INT -> 1 [443:20]\n+    |       |--SEMI -> ; [443:21]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [444:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [444:8]\n+    |       |   |--TYPE -> TYPE [444:8]\n+    |       |   |   |--IDENT -> I [444:8]\n+    |       |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [444:9]\n+    |       |   |       |--GENERIC_START -> < [444:9]\n+    |       |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [444:10]\n+    |       |   |       |   `--IDENT -> String [444:10]\n+    |       |   |       `--GENERIC_END -> > [444:16]\n+    |       |   |--IDENT -> r [444:18]\n+    |       |   `--ASSIGN -> = [444:20]\n+    |       |       `--EXPR -> EXPR [444:22]\n+    |       |           `--LITERAL_SWITCH -> switch [444:22]\n+    |       |               |--LPAREN -> ( [444:29]\n+    |       |               |--EXPR -> EXPR [444:30]\n+    |       |               |   `--IDENT -> i [444:30]\n+    |       |               |--RPAREN -> ) [444:31]\n+    |       |               |--LCURLY -> { [444:33]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [445:12]\n+    |       |               |   |--LITERAL_CASE -> case [445:12]\n+    |       |               |   |   `--EXPR -> EXPR [445:17]\n+    |       |               |   |       `--NUM_INT -> 0 [445:17]\n+    |       |               |   |--LAMBDA -> -> [445:19]\n+    |       |               |   |--LAMBDA -> -> [445:25]\n+    |       |               |   |   |--LPAREN -> ( [445:22]\n+    |       |               |   |   |--PARAMETERS -> PARAMETERS [445:23]\n+    |       |               |   |   |--RPAREN -> ) [445:23]\n+    |       |               |   |   `--EXPR -> EXPR [445:32]\n+    |       |               |   |       `--PLUS -> + [445:32]\n+    |       |               |   |           |--STRING_LITERAL -> \"0\" [445:28]\n+    |       |               |   |           `--IDENT -> i [445:34]\n+    |       |               |   `--SEMI -> ; [445:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [446:12]\n+    |       |               |   |--LITERAL_CASE -> case [446:12]\n+    |       |               |   |   `--EXPR -> EXPR [446:17]\n+    |       |               |   |       `--NUM_INT -> 1 [446:17]\n+    |       |               |   |--LAMBDA -> -> [446:19]\n+    |       |               |   |--LAMBDA -> -> [446:25]\n+    |       |               |   |   |--LPAREN -> ( [446:22]\n+    |       |               |   |   |--PARAMETERS -> PARAMETERS [446:23]\n+    |       |               |   |   |--RPAREN -> ) [446:23]\n+    |       |               |   |   `--EXPR -> EXPR [446:32]\n+    |       |               |   |       `--PLUS -> + [446:32]\n+    |       |               |   |           |--STRING_LITERAL -> \"1\" [446:28]\n+    |       |               |   |           `--IDENT -> j [446:34]\n+    |       |               |   `--SEMI -> ; [446:35]\n+    |       |               |--SWITCH_RULE -> SWITCH_RULE [447:12]\n+    |       |               |   |--LITERAL_DEFAULT -> default [447:12]\n+    |       |               |   |--LAMBDA -> -> [447:20]\n+    |       |               |   `--SLIST -> { [447:23]\n+    |       |               |       |--VARIABLE_DEF -> VARIABLE_DEF [448:16]\n+    |       |               |       |   |--MODIFIERS -> MODIFIERS [448:16]\n+    |       |               |       |   |--TYPE -> TYPE [448:16]\n+    |       |               |       |   |   `--IDENT -> String [448:16]\n+    |       |               |       |   |--IDENT -> k [448:23]\n+    |       |               |       |   `--ASSIGN -> = [448:25]\n+    |       |               |       |       `--EXPR -> EXPR [448:27]\n+    |       |               |       |           `--STRING_LITERAL -> \"D\" [448:27]\n+    |       |               |       |--SEMI -> ; [448:30]\n+    |       |               |       |--LITERAL_YIELD -> yield [449:16]\n+    |       |               |       |   |--LAMBDA -> -> [449:25]\n+    |       |               |       |   |   |--LPAREN -> ( [449:22]\n+    |       |               |       |   |   |--PARAMETERS -> PARAMETERS [449:23]\n+    |       |               |       |   |   |--RPAREN -> ) [449:23]\n+    |       |               |       |   |   `--EXPR -> EXPR [449:28]\n+    |       |               |       |   |       `--IDENT -> k [449:28]\n+    |       |               |       |   `--SEMI -> ; [449:29]\n+    |       |               |       `--RCURLY -> } [450:12]\n+    |       |               `--RCURLY -> } [451:8]\n+    |       |--SEMI -> ; [451:9]\n+    |       |--LITERAL_RETURN -> return [453:8]\n+    |       |   |--EXPR -> EXPR [453:15]\n+    |       |   |   `--IDENT -> r [453:15]\n+    |       |   `--SEMI -> ; [453:16]\n+    |       `--RCURLY -> } [454:4]\n+    |--METHOD_DEF -> METHOD_DEF [456:4]\n+    |   |--MODIFIERS -> MODIFIERS [456:4]\n+    |   |--TYPE -> TYPE [456:4]\n+    |   |   |--IDENT -> I [456:4]\n+    |   |   `--TYPE_ARGUMENTS -> TYPE_ARGUMENTS [456:5]\n+    |   |       |--GENERIC_START -> < [456:5]\n+    |   |       |--TYPE_ARGUMENT -> TYPE_ARGUMENT [456:6]\n+    |   |       |   `--IDENT -> String [456:6]\n+    |   |       `--GENERIC_END -> > [456:12]\n+    |   |--IDENT -> lambdaCapture2 [456:14]\n+    |   |--LPAREN -> ( [456:28]\n+    |   |--PARAMETERS -> PARAMETERS [456:29]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [456:29]\n+    |   |       |--MODIFIERS -> MODIFIERS [456:29]\n+    |   |       |--TYPE -> TYPE [456:29]\n+    |   |       |   `--LITERAL_INT -> int [456:29]\n+    |   |       `--IDENT -> i [456:33]\n+    |   |--RPAREN -> ) [456:34]\n+    |   `--SLIST -> { [456:36]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [457:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [457:8]\n+    |       |   |--TYPE -> TYPE [457:8]\n+    |       |   |   `--LITERAL_INT -> int [457:8]\n+    |       |   |--IDENT -> j [457:12]\n+    |       |   `--ASSIGN -> = [457:14]\n+    |       |       `--EXPR -> EXPR [457:18]\n+    |       |           `--PLUS -> + [457:18]\n+    |       |               |--IDENT -> i [457:16]\n+    |       |               `--NUM_INT -> 1 [457:20]\n+    |       |--SEMI -> ; [457:21]\n+    |       |--LITERAL_RETURN -> return [459:8]\n+    |       |   |--EXPR -> EXPR [459:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [459:15]\n+    |       |   |       |--LPAREN -> ( [459:22]\n+    |       |   |       |--EXPR -> EXPR [459:23]\n+    |       |   |       |   `--IDENT -> i [459:23]\n+    |       |   |       |--RPAREN -> ) [459:24]\n+    |       |   |       |--LCURLY -> { [459:26]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [460:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [460:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [460:17]\n+    |       |   |       |   |       `--NUM_INT -> 0 [460:17]\n+    |       |   |       |   |--LAMBDA -> -> [460:19]\n+    |       |   |       |   |--LAMBDA -> -> [460:25]\n+    |       |   |       |   |   |--LPAREN -> ( [460:22]\n+    |       |   |       |   |   |--PARAMETERS -> PARAMETERS [460:23]\n+    |       |   |       |   |   |--RPAREN -> ) [460:23]\n+    |       |   |       |   |   `--EXPR -> EXPR [460:32]\n+    |       |   |       |   |       `--PLUS -> + [460:32]\n+    |       |   |       |   |           |--STRING_LITERAL -> \"0\" [460:28]\n+    |       |   |       |   |           `--IDENT -> i [460:34]\n+    |       |   |       |   `--SEMI -> ; [460:35]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [461:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [461:12]\n+    |       |   |       |   |   `--EXPR -> EXPR [461:17]\n+    |       |   |       |   |       `--NUM_INT -> 1 [461:17]\n+    |       |   |       |   |--LAMBDA -> -> [461:19]\n+    |       |   |       |   |--LAMBDA -> -> [461:25]\n+    |       |   |       |   |   |--LPAREN -> ( [461:22]\n+    |       |   |       |   |   |--PARAMETERS -> PARAMETERS [461:23]\n+    |       |   |       |   |   |--RPAREN -> ) [461:23]\n+    |       |   |       |   |   `--EXPR -> EXPR [461:32]\n+    |       |   |       |   |       `--PLUS -> + [461:32]\n+    |       |   |       |   |           |--STRING_LITERAL -> \"1\" [461:28]\n+    |       |   |       |   |           `--IDENT -> j [461:34]\n+    |       |   |       |   `--SEMI -> ; [461:35]\n+    |       |   |       |--SWITCH_RULE -> SWITCH_RULE [462:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [462:12]\n+    |       |   |       |   |--LAMBDA -> -> [462:20]\n+    |       |   |       |   `--SLIST -> { [462:23]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [463:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [463:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [463:16]\n+    |       |   |       |       |   |   `--IDENT -> String [463:16]\n+    |       |   |       |       |   |--IDENT -> k [463:23]\n+    |       |   |       |       |   `--ASSIGN -> = [463:25]\n+    |       |   |       |       |       `--EXPR -> EXPR [463:27]\n+    |       |   |       |       |           `--STRING_LITERAL -> \"D\" [463:27]\n+    |       |   |       |       |--SEMI -> ; [463:30]\n+    |       |   |       |       |--LITERAL_YIELD -> yield [464:16]\n+    |       |   |       |       |   |--LAMBDA -> -> [464:25]\n+    |       |   |       |       |   |   |--LPAREN -> ( [464:22]\n+    |       |   |       |       |   |   |--PARAMETERS -> PARAMETERS [464:23]\n+    |       |   |       |       |   |   |--RPAREN -> ) [464:23]\n+    |       |   |       |       |   |   `--EXPR -> EXPR [464:28]\n+    |       |   |       |       |   |       `--IDENT -> k [464:28]\n+    |       |   |       |       |   `--SEMI -> ; [464:29]\n+    |       |   |       |       `--RCURLY -> } [465:12]\n+    |       |   |       `--RCURLY -> } [466:8]\n+    |       |   `--SEMI -> ; [466:9]\n+    |       `--RCURLY -> } [467:4]\n+    |--INTERFACE_DEF -> INTERFACE_DEF [469:4]\n+    |   |--MODIFIERS -> MODIFIERS [469:4]\n+    |   |--LITERAL_INTERFACE -> interface [469:4]\n+    |   |--IDENT -> I [469:14]\n+    |   |--TYPE_PARAMETERS -> TYPE_PARAMETERS [469:15]\n+    |   |   |--GENERIC_START -> < [469:15]\n+    |   |   |--TYPE_PARAMETER -> TYPE_PARAMETER [469:16]\n+    |   |   |   `--IDENT -> T [469:16]\n+    |   |   `--GENERIC_END -> > [469:17]\n+    |   `--OBJBLOCK -> OBJBLOCK [469:19]\n+    |       |--LCURLY -> { [469:19]\n+    |       |--METHOD_DEF -> METHOD_DEF [470:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [470:8]\n+    |       |   |   `--LITERAL_PUBLIC -> public [470:8]\n+    |       |   |--TYPE -> TYPE [470:15]\n+    |       |   |   `--IDENT -> T [470:15]\n+    |       |   |--IDENT -> t [470:17]\n+    |       |   |--LPAREN -> ( [470:18]\n+    |       |   |--PARAMETERS -> PARAMETERS [470:19]\n+    |       |   |--RPAREN -> ) [470:19]\n+    |       |   `--SEMI -> ; [470:20]\n+    |       `--RCURLY -> } [471:4]\n+    |--STATIC_INIT -> STATIC_INIT [473:4]\n+    |   `--SLIST -> { [473:11]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [474:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [474:8]\n+    |       |   |--TYPE -> TYPE [474:8]\n+    |       |   |   `--LITERAL_INT -> int [474:8]\n+    |       |   |--IDENT -> i [474:12]\n+    |       |   `--ASSIGN -> = [474:14]\n+    |       |       `--EXPR -> EXPR [474:16]\n+    |       |           `--NUM_INT -> 0 [474:16]\n+    |       |--SEMI -> ; [474:17]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [475:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [475:8]\n+    |       |   |--TYPE -> TYPE [475:8]\n+    |       |   |   `--LITERAL_INT -> int [475:8]\n+    |       |   |--IDENT -> dummy [475:12]\n+    |       |   `--ASSIGN -> = [475:18]\n+    |       |       `--EXPR -> EXPR [475:22]\n+    |       |           `--PLUS -> + [475:22]\n+    |       |               |--NUM_INT -> 1 [475:20]\n+    |       |               `--LITERAL_SWITCH -> switch [475:24]\n+    |       |                   |--LPAREN -> ( [475:31]\n+    |       |                   |--EXPR -> EXPR [475:32]\n+    |       |                   |   `--IDENT -> i [475:32]\n+    |       |                   |--RPAREN -> ) [475:33]\n+    |       |                   |--LCURLY -> { [475:35]\n+    |       |                   |--CASE_GROUP -> CASE_GROUP [476:12]\n+    |       |                   |   |--LITERAL_CASE -> case [476:12]\n+    |       |                   |   |   |--EXPR -> EXPR [476:17]\n+    |       |                   |   |   |   `--UNARY_MINUS -> - [476:17]\n+    |       |                   |   |   |       `--NUM_INT -> 1 [476:18]\n+    |       |                   |   |   `--COLON -> : [476:19]\n+    |       |                   |   `--SLIST -> SLIST [476:21]\n+    |       |                   |       `--LITERAL_YIELD -> yield [476:21]\n+    |       |                   |           |--EXPR -> EXPR [476:27]\n+    |       |                   |           |   `--NUM_INT -> 1 [476:27]\n+    |       |                   |           `--SEMI -> ; [476:28]\n+    |       |                   |--CASE_GROUP -> CASE_GROUP [477:12]\n+    |       |                   |   |--LITERAL_DEFAULT -> default [477:12]\n+    |       |                   |   |   `--COLON -> : [477:19]\n+    |       |                   |   `--SLIST -> SLIST [478:17]\n+    |       |                   |       |--EXPR -> EXPR [478:17]\n+    |       |                   |       |   `--POST_INC -> ++ [478:17]\n+    |       |                   |       |       `--IDENT -> i [478:16]\n+    |       |                   |       |--SEMI -> ; [478:19]\n+    |       |                   |       `--LITERAL_YIELD -> yield [479:16]\n+    |       |                   |           |--EXPR -> EXPR [479:22]\n+    |       |                   |           |   `--NUM_INT -> 1 [479:22]\n+    |       |                   |           `--SEMI -> ; [479:23]\n+    |       |                   `--RCURLY -> } [480:8]\n+    |       |--SEMI -> ; [480:9]\n+    |       |--LITERAL_IF -> if [481:8]\n+    |       |   |--LPAREN -> ( [481:11]\n+    |       |   |--EXPR -> EXPR [481:14]\n+    |       |   |   `--NOT_EQUAL -> != [481:14]\n+    |       |   |       |--IDENT -> i [481:12]\n+    |       |   |       `--NUM_INT -> 1 [481:17]\n+    |       |   |--RPAREN -> ) [481:18]\n+    |       |   `--SLIST -> { [481:20]\n+    |       |       |--LITERAL_THROW -> throw [482:12]\n+    |       |       |   |--EXPR -> EXPR [482:18]\n+    |       |       |   |   `--LITERAL_NEW -> new [482:18]\n+    |       |       |   |       |--IDENT -> IllegalStateException [482:22]\n+    |       |       |   |       |--LPAREN -> ( [482:43]\n+    |       |       |   |       |--ELIST -> ELIST [482:44]\n+    |       |       |   |       |   `--EXPR -> EXPR [482:44]\n+    |       |       |   |       |       `--STRING_LITERAL -> \"Side effects missing.\" [482:44]\n+    |       |       |   |       `--RPAREN -> ) [482:67]\n+    |       |       |   `--SEMI -> ; [482:68]\n+    |       |       `--RCURLY -> } [483:8]\n+    |       `--RCURLY -> } [484:4]\n+    |--METHOD_DEF -> METHOD_DEF [486:4]\n+    |   |--MODIFIERS -> MODIFIERS [486:4]\n+    |   |   |--LITERAL_PRIVATE -> private [486:4]\n+    |   |   `--LITERAL_STATIC -> static [486:12]\n+    |   |--TYPE -> TYPE [486:19]\n+    |   |   `--LITERAL_INT -> int [486:19]\n+    |   |--IDENT -> getValueViaYield [486:23]\n+    |   |--LPAREN -> ( [486:39]\n+    |   |--PARAMETERS -> PARAMETERS [486:40]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [486:40]\n+    |   |       |--MODIFIERS -> MODIFIERS [486:40]\n+    |   |       |--TYPE -> TYPE [486:40]\n+    |   |       |   `--IDENT -> String [486:40]\n+    |   |       `--IDENT -> mode [486:47]\n+    |   |--RPAREN -> ) [486:51]\n+    |   `--SLIST -> { [486:53]\n+    |       |--VARIABLE_DEF -> VARIABLE_DEF [487:8]\n+    |       |   |--MODIFIERS -> MODIFIERS [487:8]\n+    |       |   |--TYPE -> TYPE [487:8]\n+    |       |   |   `--LITERAL_INT -> int [487:8]\n+    |       |   |--IDENT -> yield [487:12]\n+    |       |   `--ASSIGN -> = [487:18]\n+    |       |       `--EXPR -> EXPR [487:20]\n+    |       |           `--NUM_INT -> 0 [487:20]\n+    |       |--SEMI -> ; [487:21]\n+    |       |--LITERAL_RETURN -> return [488:8]\n+    |       |   |--EXPR -> EXPR [488:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [488:15]\n+    |       |   |       |--LPAREN -> ( [488:22]\n+    |       |   |       |--EXPR -> EXPR [488:23]\n+    |       |   |       |   `--IDENT -> mode [488:23]\n+    |       |   |       |--RPAREN -> ) [488:27]\n+    |       |   |       |--LCURLY -> { [488:29]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [489:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [489:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [489:17]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"a\" [489:17]\n+    |       |   |       |   |   |--COMMA -> , [489:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [489:22]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"b\" [489:22]\n+    |       |   |       |   |   `--COLON -> : [489:25]\n+    |       |   |       |   `--SLIST -> SLIST [490:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [490:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [490:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [490:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [490:16]\n+    |       |   |       |       |   |--IDENT -> x [490:20]\n+    |       |   |       |       |   `--ASSIGN -> = [490:22]\n+    |       |   |       |       |       `--EXPR -> EXPR [490:30]\n+    |       |   |       |       |           `--PLUS -> + [490:30]\n+    |       |   |       |       |               |--IDENT -> yield [490:24]\n+    |       |   |       |       |               `--NUM_INT -> 2 [490:32]\n+    |       |   |       |       |--SEMI -> ; [490:33]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [491:16]\n+    |       |   |       |           |--EXPR -> EXPR [491:22]\n+    |       |   |       |           |   `--IDENT -> x [491:22]\n+    |       |   |       |           `--SEMI -> ; [491:23]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [492:12]\n+    |       |   |       |   |--LITERAL_DEFAULT -> default [492:12]\n+    |       |   |       |   |   `--COLON -> : [492:19]\n+    |       |   |       |   `--SLIST -> SLIST [493:16]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [493:16]\n+    |       |   |       |           |--EXPR -> EXPR [493:22]\n+    |       |   |       |           |   `--UNARY_MINUS -> - [493:22]\n+    |       |   |       |           |       `--NUM_INT -> 1 [493:24]\n+    |       |   |       |           `--SEMI -> ; [493:25]\n+    |       |   |       `--RCURLY -> } [494:8]\n+    |       |   `--SEMI -> ; [494:9]\n+    |       `--RCURLY -> } [495:4]\n+    |--METHOD_DEF -> METHOD_DEF [497:4]\n+    |   |--MODIFIERS -> MODIFIERS [497:4]\n+    |   |   |--LITERAL_PRIVATE -> private [497:4]\n+    |   |   `--LITERAL_STATIC -> static [497:12]\n+    |   |--TYPE -> TYPE [497:19]\n+    |   |   `--LITERAL_INT -> int [497:19]\n+    |   |--IDENT -> getValueViaYield2 [497:23]\n+    |   |--LPAREN -> ( [497:40]\n+    |   |--PARAMETERS -> PARAMETERS [497:41]\n+    |   |   `--PARAMETER_DEF -> PARAMETER_DEF [497:41]\n+    |   |       |--MODIFIERS -> MODIFIERS [497:41]\n+    |   |       |--TYPE -> TYPE [497:41]\n+    |   |       |   `--IDENT -> String [497:41]\n+    |   |       `--IDENT -> mode [497:48]\n+    |   |--RPAREN -> ) [497:52]\n+    |   `--SLIST -> { [497:54]\n+    |       |--LITERAL_RETURN -> return [498:8]\n+    |       |   |--EXPR -> EXPR [498:15]\n+    |       |   |   `--LITERAL_SWITCH -> switch [498:15]\n+    |       |   |       |--LPAREN -> ( [498:22]\n+    |       |   |       |--EXPR -> EXPR [498:23]\n+    |       |   |       |   `--IDENT -> mode [498:23]\n+    |       |   |       |--RPAREN -> ) [498:27]\n+    |       |   |       |--LCURLY -> { [498:29]\n+    |       |   |       |--CASE_GROUP -> CASE_GROUP [499:12]\n+    |       |   |       |   |--LITERAL_CASE -> case [499:12]\n+    |       |   |       |   |   |--EXPR -> EXPR [499:17]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"a\" [499:17]\n+    |       |   |       |   |   |--COMMA -> , [499:20]\n+    |       |   |       |   |   |--EXPR -> EXPR [499:22]\n+    |       |   |       |   |   |   `--STRING_LITERAL -> \"b\" [499:22]\n+    |       |   |       |   |   `--COLON -> : [499:25]\n+    |       |   |       |   `--SLIST -> SLIST [500:16]\n+    |       |   |       |       |--VARIABLE_DEF -> VARIABLE_DEF [500:16]\n+    |       |   |       |       |   |--MODIFIERS -> MODIFIERS [500:16]\n+    |       |   |       |       |   |--TYPE -> TYPE [500:16]\n+    |       |   |       |       |   |   `--LITERAL_INT -> int [500:16]\n+    |       |   |       |       |   |--IDENT -> yield [500:20]\n+    |       |   |       |       |   `--ASSIGN -> = [500:26]\n+    |       |   |       |       |       `--EXPR -> EXPR [500:28]\n+    |       |   |       |       |           `--NUM_INT -> 42 [500:28]\n+    |       |   |       |       |--SEMI -> ; [500:30]\n+    |       |   |       |       `--LITERAL_YIELD -> yield [501:16]\n+    |       |   |       |           |--EXPR -> EXPR [501:22]\n+    |       |   |       |           |   `--IDENT -> yield [501:22]\n+    |       |   |       |           `--SEMI -> ; [501:27]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18"}, "originalPosition": 3311}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTEyMjg0", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-465112284", "createdAt": "2020-08-11T14:16:42Z", "commit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxNjo0MlrOG-6C7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxNjo0MlrOG-6C7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYxNTkxNw==", "bodyText": "@rnveach here also: https://github.com/checkstyle/checkstyle/pull/8449/files#r468615659", "url": "https://github.com/checkstyle/checkstyle/pull/8449#discussion_r468615917", "createdAt": "2020-08-11T14:16:42Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14SwitchExpression.java", "diffHunk": "@@ -449,4 +482,25 @@ private String expression2(T t) {\n             throw new IllegalStateException(\"Side effects missing.\");\n         }\n     }\n+\n+    private static int getValueViaYield(String mode) {\n+        int yield = 0;\n+        return switch (mode) {\n+            case \"a\", \"b\":\n+                int x = yield + 2;\n+                yield x;\n+            default:\n+                yield - 1;\n+        };\n+    }\n+\n+    private static int getValueViaYield2(String mode) {\n+        return switch (mode) {\n+            case \"a\", \"b\":\n+                int yield = 42;\n+                yield yield;\n+            default:\n+                yield - 1;\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTc3MjUx", "url": "https://github.com/checkstyle/checkstyle/pull/8449#pullrequestreview-465177251", "createdAt": "2020-08-11T15:23:35Z", "commit": {"oid": "ea441e3d355c5bbe328bbb98fc138b31456ccc18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 479, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}