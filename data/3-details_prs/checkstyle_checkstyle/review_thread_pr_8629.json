{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0OTEzOTE4", "number": 8629, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNjozNzo1MVrOEWbAww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNjozNzo1OFrOEWbAxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTQ2NjkxOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNjozNzo1MVrOG9uBXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxMToxNjoxOFrOG9zL4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MDMzNQ==", "bodyText": "Please remove should be", "url": "https://github.com/checkstyle/checkstyle/pull/8629#discussion_r467370335", "createdAt": "2020-08-08T06:37:51Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "diffHunk": "@@ -0,0 +1,46 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.metrics.booleanexpressioncomplexity;\n+\n+/* Config:\n+ * max = 3\n+ * tokens = {LAND , BAND , LOR , BOR , BXOR}\n+ *\n+ */\n+public class InputBooleanExpressionComplexityRecordsAndCompactCtors {\n+\n+    record MyRecord1(boolean a, boolean b) {\n+        private boolean myBool() {\n+           return  (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord2(String myString, boolean a, boolean b) {\n+\n+        // in compact ctor\n+        public MyRecord2{\n+            boolean d = (a & b) ^ (a || b) | a; // should be violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baefebfb2b663f7373740a15371e3c161832a463"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NDk0Nw==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8629#discussion_r467454947", "createdAt": "2020-08-08T11:16:18Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "diffHunk": "@@ -0,0 +1,46 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.metrics.booleanexpressioncomplexity;\n+\n+/* Config:\n+ * max = 3\n+ * tokens = {LAND , BAND , LOR , BOR , BXOR}\n+ *\n+ */\n+public class InputBooleanExpressionComplexityRecordsAndCompactCtors {\n+\n+    record MyRecord1(boolean a, boolean b) {\n+        private boolean myBool() {\n+           return  (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord2(String myString, boolean a, boolean b) {\n+\n+        // in compact ctor\n+        public MyRecord2{\n+            boolean d = (a & b) ^ (a || b) | a; // should be violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MDMzNQ=="}, "originalCommit": {"oid": "baefebfb2b663f7373740a15371e3c161832a463"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTQ2Njk0OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNjozNzo1OFrOG9uBYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxMToxNjoyNVrOG9zL6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MDMzOQ==", "bodyText": "Please remove should be", "url": "https://github.com/checkstyle/checkstyle/pull/8629#discussion_r467370339", "createdAt": "2020-08-08T06:37:58Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "diffHunk": "@@ -0,0 +1,46 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.metrics.booleanexpressioncomplexity;\n+\n+/* Config:\n+ * max = 3\n+ * tokens = {LAND , BAND , LOR , BOR , BXOR}\n+ *\n+ */\n+public class InputBooleanExpressionComplexityRecordsAndCompactCtors {\n+\n+    record MyRecord1(boolean a, boolean b) {\n+        private boolean myBool() {\n+           return  (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord2(String myString, boolean a, boolean b) {\n+\n+        // in compact ctor\n+        public MyRecord2{\n+            boolean d = (a & b) ^ (a || b) | a; // should be violation\n+        }\n+    }\n+\n+    record MyRecord3(int x) {\n+\n+        // in ctor\n+        MyRecord3(){\n+            this(3);\n+            boolean b = true;\n+            boolean a = true;\n+            boolean d = (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord4(int y) {\n+        private record MyRecord5(int z) {\n+            // in nested record in compact ctor\n+            public MyRecord5{\n+                boolean b = false;\n+                boolean a = true;\n+                boolean d = (a & b) ^ (a || b) | a; // should be violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baefebfb2b663f7373740a15371e3c161832a463"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NDk1Mw==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8629#discussion_r467454953", "createdAt": "2020-08-08T11:16:25Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/metrics/booleanexpressioncomplexity/InputBooleanExpressionComplexityRecordsAndCompactCtors.java", "diffHunk": "@@ -0,0 +1,46 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.metrics.booleanexpressioncomplexity;\n+\n+/* Config:\n+ * max = 3\n+ * tokens = {LAND , BAND , LOR , BOR , BXOR}\n+ *\n+ */\n+public class InputBooleanExpressionComplexityRecordsAndCompactCtors {\n+\n+    record MyRecord1(boolean a, boolean b) {\n+        private boolean myBool() {\n+           return  (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord2(String myString, boolean a, boolean b) {\n+\n+        // in compact ctor\n+        public MyRecord2{\n+            boolean d = (a & b) ^ (a || b) | a; // should be violation\n+        }\n+    }\n+\n+    record MyRecord3(int x) {\n+\n+        // in ctor\n+        MyRecord3(){\n+            this(3);\n+            boolean b = true;\n+            boolean a = true;\n+            boolean d = (a & b) ^ (a || b) | a; // violation\n+        }\n+    }\n+\n+    record MyRecord4(int y) {\n+        private record MyRecord5(int z) {\n+            // in nested record in compact ctor\n+            public MyRecord5{\n+                boolean b = false;\n+                boolean a = true;\n+                boolean d = (a & b) ^ (a || b) | a; // should be violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MDMzOQ=="}, "originalCommit": {"oid": "baefebfb2b663f7373740a15371e3c161832a463"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 771, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}