{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2Mzg4ODIz", "number": 8297, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzozNjoyNVrOECCVPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo1NzoxMFrOECCwhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTcwODEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzozNjoyNVrOGePrSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjo0MDozOVrOGfiKZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw==", "bodyText": "Please clarify why did you move it here?", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434367307", "createdAt": "2020-06-03T07:36:25Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -90,6 +87,9 @@\n  * JavadocBlockTagLocation\n  * </li>\n  * <li>\n+ * JavadocMethod\n+ * </li>\n+ * <li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE4ODc5Ng==", "bodyText": "reasons are the 1. I refer to PR #8214 which add it here. 2. As mentioned in #7739 (comment) the 1,3,6th log within the check is logging the tags inside the javadoc block comment. It is not accessible using DetailAST. Maybe this is reason to add to here.\n\n  \n    \n      checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java\n    \n    \n        Lines 74 to 114\n      in\n      d48b815\n    \n    \n    \n    \n\n        \n          \n            * Also, the filter does not support suppressions inside javadoc reported by Javadoc checks: \n        \n\n        \n          \n            * </p> \n        \n\n        \n          \n            * <ul id=\"SuppressionXpathFilter_JavadocChecks\"> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * AtclauseOrder \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocBlockTagLocation \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocMissingWhitespaceAfterAsterisk \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocParagraph \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocStyle \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocTagContinuationIndentation \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocType \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * MissingDeprecated \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * NonEmptyAtclauseDescription \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * SingleLineJavadoc \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * SummaryJavadoc \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * WriteTag \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * </ul> \n        \n\n        \n          \n            * <p>", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435188796", "createdAt": "2020-06-04T11:39:23Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -90,6 +87,9 @@\n  * JavadocBlockTagLocation\n  * </li>\n  * <li>\n+ * JavadocMethod\n+ * </li>\n+ * <li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTQzMg==", "bodyText": "I don't understand your response. Here, you put <li>JavadocMethod</li> after <li>JavadocBlockTagLocation</li>. But before your changes the <li>JavadocMethod</li> was few lines upper, after <li>Indentation</li>. So, what's the reason for this movement?", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435715432", "createdAt": "2020-06-05T06:31:19Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -90,6 +87,9 @@\n  * JavadocBlockTagLocation\n  * </li>\n  * <li>\n+ * JavadocMethod\n+ * </li>\n+ * <li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxODc1OQ==", "bodyText": "Ok, I got it. The <ul> element is now different.", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435718759", "createdAt": "2020-06-05T06:40:39Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -90,6 +87,9 @@\n  * JavadocBlockTagLocation\n  * </li>\n  * <li>\n+ * JavadocMethod\n+ * </li>\n+ * <li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTc3MjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo1NToyOVrOGeQT5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMDozMTo0NlrOGfpQaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NzcwMw==", "bodyText": "Please explain why do you need this logic?", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434377703", "createdAt": "2020-06-03T07:55:29Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();\n+            while (exception != null) {\n+                if (exception.getType() == TokenTypes.IDENT\n+                        || exception.getType() == TokenTypes.DOT) {\n+                    DetailAST child = exception;\n                     final FullIdent ident = FullIdent.createFullIdent(child);\n-                    final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                    while (child.getType() == TokenTypes.DOT) {\n+                        child = child.getFirstChild();\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzNDk4Nw==", "bodyText": "this is because there is some special cases:\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java\n    \n    \n        Lines 77 to 82\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void doSomething5(String properties) { \n        \n\n        \n          \n               // here is NPE possible \n        \n\n        \n          \n               if (properties.charAt(0) == 0) { \n        \n\n        \n          \n                   throw new java.lang.IllegalArgumentException(\"cannot have char with code 0\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java\n    \n    \n        Lines 43 to 46\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void method1() throws RuntimeException, RE, \n        \n\n        \n          \n               java.lang.RuntimeException \n        \n\n        \n          \n           { \n        \n\n        \n          \n           }", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435834987", "createdAt": "2020-06-05T10:31:46Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();\n+            while (exception != null) {\n+                if (exception.getType() == TokenTypes.IDENT\n+                        || exception.getType() == TokenTypes.DOT) {\n+                    DetailAST child = exception;\n                     final FullIdent ident = FullIdent.createFullIdent(child);\n-                    final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                    while (child.getType() == TokenTypes.DOT) {\n+                        child = child.getFirstChild();\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NzcwMw=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTc3NTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo1NjozOFrOGeQWUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMDo0ODoyN1rOGfptpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODMyMQ==", "bodyText": "Please don't rename variables in scope of one update, it is hard to see what was actually changed/added.", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434378321", "createdAt": "2020-06-03T07:56:38Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg0MjQ3MQ==", "bodyText": "done, recover to original name", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435842471", "createdAt": "2020-06-05T10:48:27Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODMyMQ=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTc3Nzk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo1NzoxMFrOGeQXlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjo1MzoxNlrOGgBbsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ==", "bodyText": "Same question as above, what's the purpose of this while?", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434378645", "createdAt": "2020-06-03T07:57:10Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzNzU4MA==", "bodyText": "same special case mentioned above~\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java\n    \n    \n        Lines 77 to 82\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void doSomething5(String properties) { \n        \n\n        \n          \n               // here is NPE possible \n        \n\n        \n          \n               if (properties.charAt(0) == 0) { \n        \n\n        \n          \n                   throw new java.lang.IllegalArgumentException(\"cannot have char with code 0\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java\n    \n    \n        Lines 43 to 46\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void method1() throws RuntimeException, RE, \n        \n\n        \n          \n               java.lang.RuntimeException \n        \n\n        \n          \n           { \n        \n\n        \n          \n           }", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435837580", "createdAt": "2020-06-05T10:37:21Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNzY0NQ==", "bodyText": "It looks like desire to keep the same column for violation.\n$ cat Test.java \nclass Test {\n    public void bar() {\n        throw new org.apache.tools.ant.BuildException(\"\"); //warn\n    }\n}\n\n$java -jar /var/tmp/checkstyle-8.32-all.jar -t Test.java \nCLASS_DEF -> CLASS_DEF [1:0]\n|--MODIFIERS -> MODIFIERS [1:0]\n|--LITERAL_CLASS -> class [1:0]\n|--IDENT -> Test [1:6]\n`--OBJBLOCK -> OBJBLOCK [1:11]\n    |--LCURLY -> { [1:11]\n    |--METHOD_DEF -> METHOD_DEF [2:4]\n    |   |--MODIFIERS -> MODIFIERS [2:4]\n    |   |   `--LITERAL_PUBLIC -> public [2:4]\n    |   |--TYPE -> TYPE [2:11]\n    |   |   `--LITERAL_VOID -> void [2:11]\n    |   |--IDENT -> bar [2:16]\n    |   |--LPAREN -> ( [2:19]\n    |   |--PARAMETERS -> PARAMETERS [2:20]\n    |   |--RPAREN -> ) [2:20]\n    |   `--SLIST -> { [2:22]\n    |       |--LITERAL_THROW -> throw [3:8]\n    |       |   |--EXPR -> EXPR [3:14]\n    |       |   |   `--LITERAL_NEW -> new [3:14]\n    |       |   |       |--DOT -> . [3:38]\n    |       |   |       |   |--DOT -> . [3:34]\n    |       |   |       |   |   |--DOT -> . [3:28]\n    |       |   |       |   |   |   |--DOT -> . [3:21]\n    |       |   |       |   |   |   |   |--IDENT -> org [3:18]\n    |       |   |       |   |   |   |   `--IDENT -> apache [3:22]\n    |       |   |       |   |   |   `--IDENT -> tools [3:29]\n    |       |   |       |   |   `--IDENT -> ant [3:35]\n    |       |   |       |   `--IDENT -> BuildException [3:39]\n    |       |   |       |--LPAREN -> ( [3:53]\n    |       |   |       |--ELIST -> ELIST [3:54]\n    |       |   |       |   `--EXPR -> EXPR [3:54]\n    |       |   |       |       `--STRING_LITERAL -> \"\" [3:54]\n    |       |   |       `--RPAREN -> ) [3:56]\n    |       |   `--SEMI -> ; [3:57]\n    |       `--RCURLY -> } [4:4]\n    `--RCURLY -> } [5:0]\n\n@rdiachenko ,  it is hard choice on where to put violation org [3:18] vs BuildException [3:39]\nIntend is too keep the same column of violation, as you can see that your UT did report change in column - \n  \n    \n      checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n    \n    \n        Lines 83 to 94\n      in\n      3c0595f\n    \n    \n    \n    \n\n        \n          \n           public void testExtraThrows() throws Exception { \n        \n\n        \n          \n               final DefaultConfiguration config = createModuleConfig(JavadocMethodCheck.class); \n        \n\n        \n          \n               config.addAttribute(\"validateThrows\", \"true\"); \n        \n\n        \n          \n               final String[] expected = { \n        \n\n        \n          \n                   \"41:56: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalStateException\"), \n        \n\n        \n          \n                   \"56:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalArgumentException\"), \n        \n\n        \n          \n                   \"68:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalArgumentException\"), \n        \n\n        \n          \n                   \"80:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \n        \n\n        \n          \n                           \"java.lang.IllegalArgumentException\"), \n        \n\n        \n          \n                   \"119:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"FileNotFoundException\"), \n        \n\n        \n          \n               }; \n        \n\n        \n          \n               verify(config, getPath(\"InputJavadocMethodExtraThrows.java\"), expected);", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435917645", "createdAt": "2020-06-05T13:23:54Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkyNTExNA==", "bodyText": "I agree to keep column unchanged.\n@HuGanghui , please make a static private method to get node where class name starts. Please generate diff regression report, as code change is significant.", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435925114", "createdAt": "2020-06-05T13:35:56Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMTA4OQ==", "bodyText": "done, diff report:  https://huganghui.github.io/7739-JavadocMethod//diff/", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r436231089", "createdAt": "2020-06-06T02:53:16Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, "originalCommit": {"oid": "39e3443150532b99d46264b84958d1f54e31a3de"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 827, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}