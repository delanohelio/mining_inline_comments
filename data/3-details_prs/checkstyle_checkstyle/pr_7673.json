{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzQ2MzQx", "number": 7673, "title": "Issue #7660: Add code example for StringLiteralEquality", "bodyText": "Fixes #7660", "createdAt": "2020-02-25T19:00:00Z", "url": "https://github.com/checkstyle/checkstyle/pull/7673", "merged": true, "mergeCommit": {"oid": "a3d6c201c8e3f91f0a277e8a6a2f7ac2edeefe9b"}, "closed": true, "closedAt": "2020-02-29T13:56:11Z", "author": {"login": "gaurabdg"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIA-UsgFqTM2NDY1MzA2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJE7gWgFqTM2Njc5OTM1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NjUzMDYy", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-364653062", "createdAt": "2020-02-26T06:43:40Z", "commit": {"oid": "0149270db409ce322c8017badd327be48653b9c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNjo0Mzo0MFrOFufykA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNjo0NToyOFrOFuf0fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI5OTY2NA==", "bodyText": "accepted -> OK\nclosing parentheses is missing", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384299664", "createdAt": "2020-02-26T06:43:40Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") // violation\n+ * System.out.println(\"success!\")\n+ * if (status.equals(\"done\") // accepted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0149270db409ce322c8017badd327be48653b9c4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDA1Nw==", "bodyText": "Examples of violations is enough", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384300057", "createdAt": "2020-02-26T06:45:07Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0149270db409ce322c8017badd327be48653b9c4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDE1Nw==", "bodyText": "indentation", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384300157", "createdAt": "2020-02-26T06:45:28Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") // violation\n+ * System.out.println(\"success!\")\n+ * if (status.equals(\"done\") // accepted\n+ * System.out.println(\"success!\")\n+ * if (status != \"done\") // violation\n+ * System.out.println(\"wait\")\n+ * if (!status.equals(\"done\")) // accepted\n+ * System.out.println(\"wait\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0149270db409ce322c8017badd327be48653b9c4"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NjY0NjE1", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-364664615", "createdAt": "2020-02-26T07:16:00Z", "commit": {"oid": "aee31f9741be29f559f855c36d92b79e00e2aa4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoxNjowMFrOFugWFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoxNzowN1rOFugXdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODc1Nw==", "bodyText": "no semicolon here and in statements above", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384308757", "createdAt": "2020-02-26T07:16:00Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,20 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\")            // violation\n+ *   System.out.println(\"success!\")\n+ * if (status.equals(\"done\"))       // OK\n+ *   System.out.println(\"success!\")\n  *\n+ * if (status != \"done\")            // violation\n+ *   System.out.println(\"wait\")\n+ * if (!status.equals(\"done\"))      // OK\n+ *   System.out.println(\"wait\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aee31f9741be29f559f855c36d92b79e00e2aa4f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwOTExMA==", "bodyText": "please make this and other comments like if (status == \"done\") // violation, with only one white space separation", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384309110", "createdAt": "2020-02-26T07:17:07Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,20 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\")            // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aee31f9741be29f559f855c36d92b79e00e2aa4f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NzE2NzEx", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-364716711", "createdAt": "2020-02-26T08:57:23Z", "commit": {"oid": "c37b2d0941c5134949fd4ba7271ed8666d8b01a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODMxMDE3", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-364831017", "createdAt": "2020-02-26T11:42:27Z", "commit": {"oid": "1028d4593a84913b87430691002a5fddbd5ca115"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTc2OTAz", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-364976903", "createdAt": "2020-02-26T15:08:15Z", "commit": {"oid": "1028d4593a84913b87430691002a5fddbd5ca115"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjYwODA2", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-365260806", "createdAt": "2020-02-26T21:36:46Z", "commit": {"oid": "1028d4593a84913b87430691002a5fddbd5ca115"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjA1MDc3", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-365605077", "createdAt": "2020-02-27T11:25:48Z", "commit": {"oid": "ca8a3aadc79a428b45710937c160a0ac66c8cc07"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToyNTo0OVrOFvOqcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToyNTo0OVrOFvOqcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NzYzMw==", "bodyText": "addresses -> references", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385067633", "createdAt": "2020-02-27T11:25:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -25,8 +25,13 @@\n import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n \n /**\n- * <p>Checks that string literals are not used with\n- * {@code ==} or <code>&#33;=</code>.\n+ * <p>\n+ * Checks that string literals are not used with <code>==</code> or <code>&#33;=</code>.\n+ * Since <code>==</code> will compare the object addresses, not the actual value of the strings,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca8a3aadc79a428b45710937c160a0ac66c8cc07"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODc5NjI3", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-365879627", "createdAt": "2020-02-27T18:03:01Z", "commit": {"oid": "956f1df311ddad6093b069038ffd6905a301caec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODowMzowMlrOFvbh7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODowMzo1NFrOFvbjqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3ODQ0Nw==", "bodyText": "It is not clear what \"OK\" means here as user sees no string except in the method parameter. I would remove the parameter to not confuse the user, keep the method call and name, and add to \"OK\"\nlimitation that check cannot tell runtime type returned from method call.", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385278447", "createdAt": "2020-02-27T18:03:02Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +51,18 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") {} // violation\n  *\n+ * boolean flag = (status == \"done\") // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")) // OK\n+ *\n+ * if (name == getName(\"x\")) {} // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956f1df311ddad6093b069038ffd6905a301caec"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3ODg5MQ==", "bodyText": "Add 1 more example of != that will cause a violation. Something distinct from the others like a loop.", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385278891", "createdAt": "2020-02-27T18:03:54Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +51,18 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") {} // violation\n  *\n+ * boolean flag = (status == \"done\") // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956f1df311ddad6093b069038ffd6905a301caec"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDIyNzUy", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-366022752", "createdAt": "2020-02-27T21:47:30Z", "commit": {"oid": "956f1df311ddad6093b069038ffd6905a301caec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzUwNjcw", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-366750670", "createdAt": "2020-02-29T00:01:38Z", "commit": {"oid": "7e46b080d1cba7f7b2ed62ff446a5e4aab11529a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMDowMTozOFrOFwGDJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMDowMTozOFrOFwGDJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk3NTA3Nw==", "bodyText": "this isn't valid java code. Its a comment so to continue on the next line you have to start with //.\nCan you move the whole comment to the next line so it takes up only 1 line?", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385975077", "createdAt": "2020-02-29T00:01:38Z", "author": {"login": "rnveach"}, "path": "src/xdocs/config_coding.xml", "diffHunk": "@@ -4993,6 +4999,24 @@ if (&quot;something&quot;.equals(x))\n         <source>\n &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n         </source>\n+        <p>\n+          Examples of violations:\n+        </p>\n+        <source>\n+String status = \"pending\";\n+\n+if (status == \"done\") {} // violation\n+\n+while (status != \"done\") {} // violation\n+\n+boolean flag = (status == \"done\"); // violation\n+\n+boolean flag = (status.equals(\"done\")); // OK\n+\n+String name = \"X\";\n+if (name == getName()) {} // OK, limitation that check cannot tell runtime type returned\n+from method call", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e46b080d1cba7f7b2ed62ff446a5e4aab11529a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "author": {"user": {"login": "gaurabdg", "name": "Gaurab Dasgupta"}}, "url": "https://github.com/checkstyle/checkstyle/commit/7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "committedDate": "2020-02-29T06:32:40Z", "message": "Issue #7660: Add code example for StringLiteralEquality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Nzk5MzUy", "url": "https://github.com/checkstyle/checkstyle/pull/7673#pullrequestreview-366799352", "createdAt": "2020-02-29T13:56:01Z", "commit": {"oid": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1033, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}