{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTMwNjcz", "number": 8319, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMTowMlrOEFlVAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMTowMlrOEFlVAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mjg5OTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToyMTowMlrOGj3BSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMzo1NDozMFrOGqBTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDc5Mw==", "bodyText": "I can't say for sure, but I don't like this. I would like to see the closing parenthesis on the previous line. There is a chain, but no indentation.", "url": "https://github.com/checkstyle/checkstyle/pull/8319#discussion_r440254793", "createdAt": "2020-06-15T15:21:02Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "diffHunk": "@@ -270,27 +270,9 @@ private void checkInterfaceModifiers(DetailAST ast) {\n      */\n     private void checkEnumConstructorModifiers(DetailAST ast) {\n         final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final DetailAST modifier = getFirstModifierAst(modifiers);\n-\n-        if (modifier != null) {\n-            log(modifier, MSG_KEY, modifier.getText());\n-        }\n-    }\n-\n-    /**\n-     * Retrieves the first modifier that is not an annotation.\n-     *\n-     * @param modifiers The ast to examine.\n-     * @return The first modifier or {@code null} if none found.\n-     */\n-    private static DetailAST getFirstModifierAst(DetailAST modifiers) {\n-        DetailAST modifier = modifiers.getFirstChild();\n-\n-        while (modifier != null && modifier.getType() == TokenTypes.ANNOTATION) {\n-            modifier = modifier.getNextSibling();\n-        }\n-\n-        return modifier;\n+        TokenUtil.findFirstTokenByPredicate(\n+            modifiers, mod -> mod.getType() != TokenTypes.ANNOTATION\n+        ).ifPresent(modifier -> log(modifier, MSG_KEY, modifier.getText()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1431edffc65d3ff95133ee8872b112188c36b9b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNDc1NQ==", "bodyText": "TokenUtil.findFirstTokenByPredicate(\n                modifiers, mod -> mod.getType() != TokenTypes.ANNOTATION)\n            .ifPresent(modifier -> log(modifier, MSG_KEY, modifier.getText()));\n\nI do not have strong opinion on this for now.", "url": "https://github.com/checkstyle/checkstyle/pull/8319#discussion_r446714755", "createdAt": "2020-06-28T23:54:30Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "diffHunk": "@@ -270,27 +270,9 @@ private void checkInterfaceModifiers(DetailAST ast) {\n      */\n     private void checkEnumConstructorModifiers(DetailAST ast) {\n         final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);\n-        final DetailAST modifier = getFirstModifierAst(modifiers);\n-\n-        if (modifier != null) {\n-            log(modifier, MSG_KEY, modifier.getText());\n-        }\n-    }\n-\n-    /**\n-     * Retrieves the first modifier that is not an annotation.\n-     *\n-     * @param modifiers The ast to examine.\n-     * @return The first modifier or {@code null} if none found.\n-     */\n-    private static DetailAST getFirstModifierAst(DetailAST modifiers) {\n-        DetailAST modifier = modifiers.getFirstChild();\n-\n-        while (modifier != null && modifier.getType() == TokenTypes.ANNOTATION) {\n-            modifier = modifier.getNextSibling();\n-        }\n-\n-        return modifier;\n+        TokenUtil.findFirstTokenByPredicate(\n+            modifiers, mod -> mod.getType() != TokenTypes.ANNOTATION\n+        ).ifPresent(modifier -> log(modifier, MSG_KEY, modifier.getText()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDc5Mw=="}, "originalCommit": {"oid": "d1431edffc65d3ff95133ee8872b112188c36b9b"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 836, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}