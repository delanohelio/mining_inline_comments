{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzMwMjc5", "number": 7995, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzoxM1rODtsgyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyOToxNlrODuGTFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQxODAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzoxM1rOF_Rinw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyODoxNVrOF_6QsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ==", "bodyText": "// violation, '+' should be on new line violation is reported on '+' token. Violation comment should be on same line as violation reported", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401891999", "createdAt": "2020-04-01T20:33:13Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5NzIxMQ==", "bodyText": "I cannot put th comment  on the above line because there will be a comment node ahead which will not violate the rule @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401897211", "createdAt": "2020-04-01T20:43:13Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNTIzNw==", "bodyText": "I do not understand. I mean to do it like\nString s = \"Hello\" + // violation, '+' should be on new line\n         \"World\";", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401915237", "createdAt": "2020-04-01T21:18:01Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNTkxNw==", "bodyText": "Yes if i do that there no violation i tries this @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401915917", "createdAt": "2020-04-01T21:19:19Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2ODUwMw==", "bodyText": "it looks like a bug to me.\n@romani @rnveach @pbludov\nIs OperatorWrapCheck should work like this? I mean, do not report violation in case where there is a trailing comment after operator, like\nString s = \"Hello\" + // should be violation, but not\n         \"World\"; \n\nseems weird.\nCheck only checks if rest of line after operator is blank, but single comments should be ignored as well.", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402168503", "createdAt": "2020-04-02T09:16:24Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTY3MQ==", "bodyText": "@harsh-kukreja anyway, then please ignore items about moving this comment.", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402169671", "createdAt": "2020-04-02T09:18:15Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwNDA0NA==", "bodyText": "Should i create a issue regarding this? @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402404044", "createdAt": "2020-04-02T15:27:57Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTE1Mg==", "bodyText": "@harsh-kukreja yes, please. It is a good catch.", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402559152", "createdAt": "2020-04-02T19:28:15Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQxODY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzoyN1rOF_RjCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzoyN1rOF_RjCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjEwNw==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892107", "createdAt": "2020-04-01T20:33:27Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyMDM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzo1N1rOF_RkEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozMzo1N1rOF_RkEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjM2OQ==", "bodyText": "please use common formatting and move rcurly to previous line", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892369", "createdAt": "2020-04-01T20:33:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyMDkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDowN1rOF_RkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDowN1rOF_RkYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjQ1MA==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892450", "createdAt": "2020-04-01T20:34:07Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyMTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDoxM1rOF_Rkow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDoxM1rOF_Rkow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjUxNQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892515", "createdAt": "2020-04-01T20:34:13Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyMTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDoxOVrOF_Rk4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNDoxOVrOF_Rk4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjU3OQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892579", "createdAt": "2020-04-01T20:34:19Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyNDQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNTowOFrOF_RmiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDowMjowOVrOGAO3Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA==", "bodyText": "there is no need for so many examples, 2-3 is enough", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401893000", "createdAt": "2020-04-01T20:35:08Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5MDQ4Nw==", "bodyText": "@strkkk  we need to show users case of every tokens which are there in the congif this is the reason i showed all the example as i did in #7831", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402390487", "createdAt": "2020-04-02T15:10:12Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NzEzNw==", "bodyText": "As for me, there is too much examples.\nOk, lets remove ok code examples and keep only 2 or 3 at the top.", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402397137", "createdAt": "2020-04-02T15:18:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MDEzMQ==", "bodyText": "this item is not corrected", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402560131", "createdAt": "2020-04-02T19:29:55Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxOTc1Mg==", "bodyText": "What do u mean by it is not corrected @strkkk ?", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402619752", "createdAt": "2020-04-02T21:57:58Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMDA2OA==", "bodyText": "I have kept 4 Ok message code and remove rest of them is it fine @strkkk ?", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402620068", "createdAt": "2020-04-02T21:58:36Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NjY0Nw==", "bodyText": "@harsh-kukreja yes it is ok", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402896647", "createdAt": "2020-04-03T10:02:09Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyODYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNjoyOVrOF_RpJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNjoyOVrOF_RpJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzY2OQ==", "bodyText": "this wont compile because of duplicated variable", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401893669", "createdAt": "2020-04-01T20:36:29Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.\n+ *\n+ *         int c = c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68224ad86f427a926c3731fedfcc58d4d1c828b4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY0Mjc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyOToxNlrOF_6TEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDowMzo0NVrOGAO6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTc2Mw==", "bodyText": "can be moved to previous line", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402559763", "createdAt": "2020-04-02T19:29:16Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,35 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) { // violation, '==' should be on new line.\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) { // ok\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.\n+ *\n+ *         int d = c\n+ *                 +\n+ *                 10; // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27de0deadf9fef5c76efd3e38b4dad45585e03db"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NzQ3NA==", "bodyText": "Done with the changes @strkkk", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402897474", "createdAt": "2020-04-03T10:03:45Z", "author": {"login": "harsh-kukreja"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,35 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) { // violation, '==' should be on new line.\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) { // ok\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.\n+ *\n+ *         int d = c\n+ *                 +\n+ *                 10; // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTc2Mw=="}, "originalCommit": {"oid": "27de0deadf9fef5c76efd3e38b4dad45585e03db"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1169, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}