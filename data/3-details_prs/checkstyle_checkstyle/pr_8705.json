{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDI3NDYx", "number": 8705, "title": "Issue #8616: Text Blocks syntax check update for MultipleStringLiterals", "bodyText": "Issue #8616: Text Blocks syntax check update for MultipleStringLiterals\nDiff Regression projects: https://gist.githubusercontent.com/nmancus1/e3988f8092d919b5cbe70f5359c4d9e8/raw/a0f6f5860f8025c19868061dee6e0e40960b992f/projects-to-test-on.properties\nDiff Regression config: https://gist.githubusercontent.com/nmancus1/9e0d7214e926d73067bfc456e5d6ec71/raw/584f0319f0615ca7f2ffffc1585b53a2ef8db88a/MultipleStringLiterals.xml", "createdAt": "2020-08-17T19:29:56Z", "url": "https://github.com/checkstyle/checkstyle/pull/8705", "merged": true, "mergeCommit": {"oid": "668fa97efbc8a81b5448f7457b47cfb01cc32907"}, "closed": true, "closedAt": "2020-08-21T15:25:20Z", "author": {"login": "nmancus1"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_5vvrgBqjM2NjM3NjU3MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBFgDrAFqTQ3MjUyNzMzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "883dfb0d56bf92e0d91ed64095facbfe3517adff", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/883dfb0d56bf92e0d91ed64095facbfe3517adff", "committedDate": "2020-08-17T19:28:00Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1337c992456b5b01a6a56397bfb6682eccfeae8b", "committedDate": "2020-08-17T21:59:46Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTg1MTE0", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-468985114", "createdAt": "2020-08-18T04:38:27Z", "commit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNDozODoyN1rOHCDCYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNDo0MTo1N1rOHCDGMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwODk2Mw==", "bodyText": "Remove \"is\"?", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r471908963", "createdAt": "2020-08-18T04:38:27Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "diffHunk": "@@ -116,6 +119,17 @@\n      */\n     public static final String MSG_KEY = \"multiple.string.literal\";\n \n+    /**\n+     * A key is pointing to the warning message text in \"messages.properties\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwOTkzOQ==", "bodyText": "Looks like this one is different than the others: \\\" vs. \\\\\", is that intentional?", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r471909939", "createdAt": "2020-08-18T04:41:57Z", "author": {"login": "esilkensen"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/checks/coding/messages.properties", "diffHunk": "@@ -36,6 +36,7 @@ missing.switch.default=switch without \\\"default\\\" clause.\n modified.control.variable=Control variable ''{0}'' is modified.\n multiple.statements.line=Only one statement per line allowed.\n multiple.string.literal=The String {0} appears {1} times in the file.\n+multiple.string.literal.text.block=The String \\\"{0}\\\" appears {1} times in the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTE5Mzk0", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-469119394", "createdAt": "2020-08-18T08:46:48Z", "commit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODo0Njo0OFrOHCJv0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODo1MDowNlrOHCJ3JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAxODg5OQ==", "bodyText": "Why new message? For this check, the lines and text blocks must be equal:\nString str1 = \"foo\";\nString str2 = \"\"\"\n                     foo\n                     \"\"\"; // violation\nNow it turns out that the message is different depending on the order of the variables.", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472018899", "createdAt": "2020-08-18T08:46:48Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "diffHunk": "@@ -116,6 +119,17 @@\n      */\n     public static final String MSG_KEY = \"multiple.string.literal\";\n \n+    /**\n+     * A key is pointing to the warning message text in \"messages.properties\"\n+     * file.\n+     */\n+    public static final String MSG_KEY_TEXT_BLOCK = \"multiple.string.literal.text.block\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAyMDc3Mg==", "bodyText": "and there is another case for the method to extract the body of a text block, see #8703 (comment)", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472020772", "createdAt": "2020-08-18T08:50:06Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "diffHunk": "@@ -116,6 +119,17 @@\n      */\n     public static final String MSG_KEY = \"multiple.string.literal\";\n \n+    /**\n+     * A key is pointing to the warning message text in \"messages.properties\"\n+     * file.\n+     */\n+    public static final String MSG_KEY_TEXT_BLOCK = \"multiple.string.literal.text.block\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAxODg5OQ=="}, "originalCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1337c992456b5b01a6a56397bfb6682eccfeae8b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1337c992456b5b01a6a56397bfb6682eccfeae8b", "committedDate": "2020-08-17T21:59:46Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "cc0d0a3cab62b6e90ea93c3ea56314fa04839552", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cc0d0a3cab62b6e90ea93c3ea56314fa04839552", "committedDate": "2020-08-18T18:01:36Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc0d0a3cab62b6e90ea93c3ea56314fa04839552", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/cc0d0a3cab62b6e90ea93c3ea56314fa04839552", "committedDate": "2020-08-18T18:01:36Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "a1aa8f2c304b7b78dd458ba15994118cc17ed74b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a1aa8f2c304b7b78dd458ba15994118cc17ed74b", "committedDate": "2020-08-18T18:06:42Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1aa8f2c304b7b78dd458ba15994118cc17ed74b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a1aa8f2c304b7b78dd458ba15994118cc17ed74b", "committedDate": "2020-08-18T18:06:42Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "745df908b403ddf5220399b48c1b01d3c4e4d473", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/745df908b403ddf5220399b48c1b01d3c4e4d473", "committedDate": "2020-08-18T18:18:31Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "745df908b403ddf5220399b48c1b01d3c4e4d473", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/745df908b403ddf5220399b48c1b01d3c4e4d473", "committedDate": "2020-08-18T18:18:31Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "2bbd4bfc2f0659d0a910a5397469d2c011055608", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2bbd4bfc2f0659d0a910a5397469d2c011055608", "committedDate": "2020-08-18T20:21:04Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2bbd4bfc2f0659d0a910a5397469d2c011055608", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2bbd4bfc2f0659d0a910a5397469d2c011055608", "committedDate": "2020-08-18T20:21:04Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "f57dbb2fe058e8cf29091c1987de79b0478132d1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f57dbb2fe058e8cf29091c1987de79b0478132d1", "committedDate": "2020-08-18T20:30:02Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f57dbb2fe058e8cf29091c1987de79b0478132d1", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f57dbb2fe058e8cf29091c1987de79b0478132d1", "committedDate": "2020-08-18T20:30:02Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "46b096c8c00074de3e5890ea5f62fce712324b19", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/46b096c8c00074de3e5890ea5f62fce712324b19", "committedDate": "2020-08-18T20:31:47Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46b096c8c00074de3e5890ea5f62fce712324b19", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/46b096c8c00074de3e5890ea5f62fce712324b19", "committedDate": "2020-08-18T20:31:47Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "fa6089c7f4ccd9e3c142fbe259a09eee7988a82c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fa6089c7f4ccd9e3c142fbe259a09eee7988a82c", "committedDate": "2020-08-18T20:45:11Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODIxNzI5", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-469821729", "createdAt": "2020-08-18T20:51:48Z", "commit": {"oid": "fa6089c7f4ccd9e3c142fbe259a09eee7988a82c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDo1MTo0OVrOHCmPfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDo1MTo0OVrOHCmPfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4NTc1Ng==", "bodyText": "Needed to add this here so that we have coverage for stripIndentAndInitialNewLineFromTextBlock() . I didn't want to add artificial test input in CheckUtilTest.java,  since we should be testing on real code.", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472485756", "createdAt": "2020-08-18T20:51:49Z", "author": {"login": "nmancus1"}, "path": "pom.xml", "diffHunk": "@@ -3115,6 +3115,9 @@\n                 <param>\n                   com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest\n                 </param>\n+                <param>\n+                  com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest\n+                </param>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa6089c7f4ccd9e3c142fbe259a09eee7988a82c"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa6089c7f4ccd9e3c142fbe259a09eee7988a82c", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fa6089c7f4ccd9e3c142fbe259a09eee7988a82c", "committedDate": "2020-08-18T20:45:11Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/463214278e6fe5f0769617777f433bfaec8c912b", "committedDate": "2020-08-18T21:11:08Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMTM2NzQx", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-470136741", "createdAt": "2020-08-19T05:34:50Z", "commit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNTozNDo1MVrOHC0dgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNTozNDo1MVrOHC0dgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxODcyMQ==", "bodyText": "nit: is this name accurate? (can the string end in whitespace?)", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472718721", "createdAt": "2020-08-19T05:34:51Z", "author": {"login": "esilkensen"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,76 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent, or empty string.\n+     */\n+    private static String stripIndentFromLine(String line, int indent) {\n+        final int firstNonWhitespace = indexOfNonWhitespace(line);\n+        final int lastNonWhitespace = line.length();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMTUzMDMy", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-470153032", "createdAt": "2020-08-19T06:16:49Z", "commit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNjoxNjo0OVrOHC2MPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNjozMDo0MlrOHC20iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc0NzA2OQ==", "bodyText": "return the index of the first non-whitespace character, or line.length if no such character found?\nI don't like this behavior. Let's return -1 if it fails to find any non-whitespace character.\nIn this case, the method getSmallestIndent can be\n        return lines.stream()\n                .mapToInt(CheckUtil::indexOfNonWhitespace)\n                .filter(value -> value >= 0)\n                .min()\n                .orElse(0);", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472747069", "createdAt": "2020-08-19T06:16:49Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,76 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent, or empty string.\n+     */\n+    private static String stripIndentFromLine(String line, int indent) {\n+        final int firstNonWhitespace = indexOfNonWhitespace(line);\n+        final int lastNonWhitespace = line.length();\n+        final int incidentalWhitespace = Math.min(indent, firstNonWhitespace);\n+\n+        return line.substring(incidentalWhitespace, lastNonWhitespace);\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, to determine the smallest\n+     * indent in a text block string literal.\n+     *\n+     * @param lines list of actual text block content, split by line.\n+     * @return number of spaces representing the smallest indent in this text block.\n+     */\n+    private static int getSmallestIndent(List<String> lines) {\n+        int indent = Integer.MAX_VALUE;\n+        for (String line : lines) {\n+            final int leadingWhitespace = indexOfNonWhitespace(line);\n+            indent = Integer.min(indent, leadingWhitespace);\n+        }\n+        return indent;\n+    }\n+\n+    /**\n+     * Helper method to find the index of the first non-whitespace character in a string.\n+     *\n+     * @param line the string to find the first index of a non-whitespace character for.\n+     * @return the index of the first non-whitespace character.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1MDU4Nw==", "bodyText": "This method is similar to CommonUtil::isBlank. May be it should be rewritten as\n    public static boolean isBlank(String value) {\n        return indexOfNonWhitespace(value) < 0;\n    }\n?", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472750587", "createdAt": "2020-08-19T06:21:37Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,76 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent, or empty string.\n+     */\n+    private static String stripIndentFromLine(String line, int indent) {\n+        final int firstNonWhitespace = indexOfNonWhitespace(line);\n+        final int lastNonWhitespace = line.length();\n+        final int incidentalWhitespace = Math.min(indent, firstNonWhitespace);\n+\n+        return line.substring(incidentalWhitespace, lastNonWhitespace);\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, to determine the smallest\n+     * indent in a text block string literal.\n+     *\n+     * @param lines list of actual text block content, split by line.\n+     * @return number of spaces representing the smallest indent in this text block.\n+     */\n+    private static int getSmallestIndent(List<String> lines) {\n+        int indent = Integer.MAX_VALUE;\n+        for (String line : lines) {\n+            final int leadingWhitespace = indexOfNonWhitespace(line);\n+            indent = Integer.min(indent, leadingWhitespace);\n+        }\n+        return indent;\n+    }\n+\n+    /**\n+     * Helper method to find the index of the first non-whitespace character in a string.\n+     *\n+     * @param line the string to find the first index of a non-whitespace character for.\n+     * @return the index of the first non-whitespace character.\n+     */\n+    private static int indexOfNonWhitespace(String line) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NzM4Nw==", "bodyText": "Please add some uncommon Unicode whitespaces like \\u2000\n\u200b", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r472757387", "createdAt": "2020-08-19T06:30:42Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/multiplestringliterals/InputMultipleStringLiteralsTextBlocks.java", "diffHunk": "@@ -0,0 +1,89 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.coding.multiplestringliterals;\n+\n+/* Config:\n+ *\n+ * allowedDuplicates = 1\n+ * ignoreStringsRegexp = null\n+ * ignoreOccurrenceContext = ANNOTATION\n+ */\n+public class InputMultipleStringLiteralsTextBlocks {\n+    String string1 = \"string\";\n+    String string2a = \"string\"; // violation\n+    String string2b = \"\"\"\n+            string\"\"\"; // violation #1\n+\n+    String string3 = \"\"\"\n+            other string\"\"\";\n+    String string4 = \"\"\"\n+            other string\"\"\"; // violation #1\n+    String string5 = \"\"\"\n+            other string\n+            \"\"\"; // occurrence #1\n+    String string6 = \"\"\"\n+            other string\n+            \"\"\"; // violation #1\n+\n+    String escape1 = \"\"\"\n+            <html>\\u000D\\u000A\\n\n+                <body>\\u000D\\u000A\\n\n+                    <p>Hello, world</p>\\u000D\\u000A\\n\n+                </body>\\u000D\\u000A\\n", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/463214278e6fe5f0769617777f433bfaec8c912b", "committedDate": "2020-08-18T21:11:08Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "9aec4105baeeaa2134ca7e0a8540d0bdd3f9013e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9aec4105baeeaa2134ca7e0a8540d0bdd3f9013e", "committedDate": "2020-08-19T12:27:56Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aec4105baeeaa2134ca7e0a8540d0bdd3f9013e", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9aec4105baeeaa2134ca7e0a8540d0bdd3f9013e", "committedDate": "2020-08-19T12:27:56Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "a5696379aca48459c259e28d0a8384d7e9facb06", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a5696379aca48459c259e28d0a8384d7e9facb06", "committedDate": "2020-08-19T12:50:10Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5696379aca48459c259e28d0a8384d7e9facb06", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a5696379aca48459c259e28d0a8384d7e9facb06", "committedDate": "2020-08-19T12:50:10Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "ac210211923bf776a214945259bd63e501b363cd", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ac210211923bf776a214945259bd63e501b363cd", "committedDate": "2020-08-19T14:38:02Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjI5NjMw", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-471229630", "createdAt": "2020-08-20T04:48:34Z", "commit": {"oid": "ac210211923bf776a214945259bd63e501b363cd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDo0ODozNFrOHDpajg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTowODozOVrOHDp5-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NjMxOA==", "bodyText": "I think this replacement should be done for all types of strings.\nNow it turns out that if the second occurrence is a text block, the ends of the lines are replaced. But if there is another occurrence of an ordinary string, the result will be as it is.", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r473586318", "createdAt": "2020-08-20T04:48:34Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "diffHunk": "@@ -244,9 +268,20 @@ public void finishTree(DetailAST rootAST) {\n             final List<DetailAST> hits = stringListEntry.getValue();\n             if (hits.size() > allowedDuplicates) {\n                 final DetailAST firstFinding = hits.get(0);\n-                log(firstFinding, MSG_KEY, stringListEntry.getKey(), hits.size());\n+                final String recurringString;\n+                if (firstFinding.getType() == TokenTypes.TEXT_BLOCK_CONTENT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac210211923bf776a214945259bd63e501b363cd"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4ODE2NA==", "bodyText": "This is because there are no test cases with blank lines.\nString str = \"\"\"\n         foo\n\n\n    bar\"\"\";\nThe base indent is 4, not 0, although there are two blank lines.", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r473588164", "createdAt": "2020-08-20T04:55:48Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,76 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent, or empty string.\n+     */\n+    private static String stripIndentFromLine(String line, int indent) {\n+        final int firstNonWhitespace = indexOfNonWhitespace(line);\n+        final int lastNonWhitespace = line.length();\n+        final int incidentalWhitespace = Math.min(indent, firstNonWhitespace);\n+\n+        return line.substring(incidentalWhitespace, lastNonWhitespace);\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, to determine the smallest\n+     * indent in a text block string literal.\n+     *\n+     * @param lines list of actual text block content, split by line.\n+     * @return number of spaces representing the smallest indent in this text block.\n+     */\n+    private static int getSmallestIndent(List<String> lines) {\n+        int indent = Integer.MAX_VALUE;\n+        for (String line : lines) {\n+            final int leadingWhitespace = indexOfNonWhitespace(line);\n+            indent = Integer.min(indent, leadingWhitespace);\n+        }\n+        return indent;\n+    }\n+\n+    /**\n+     * Helper method to find the index of the first non-whitespace character in a string.\n+     *\n+     * @param line the string to find the first index of a non-whitespace character for.\n+     * @return the index of the first non-whitespace character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc0NzA2OQ=="}, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5MjE4Mg==", "bodyText": "There should be else return \"\"'; as the compiler threats whitespace-only lines as empty:\nstatic String str = \"\"\"\n          \n   foo\"\"\";\n   System.out.println(\"'\" + str + \"'\");\n\n(there is 10 spaces in the line 2) becomes\n'\nfoo'", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r473592182", "createdAt": "2020-08-20T05:04:43Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,95 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentAndTrailingWhitespaceFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, and trailing whitespace, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent and trailing whitespace from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent and trailing whitespace, or empty string.\n+     */\n+    private static String stripIndentAndTrailingWhitespaceFromLine(String line, int indent) {\n+        final int lastNonWhitespace = lastIndexOfNonWhitespace(line);\n+        String returnString = \"\";\n+\n+        if (lastNonWhitespace > 0) {\n+            final int firstNonWhitespace = indexOfNonWhitespace(line);\n+            final int incidentalWhitespace = Math.min(indent, firstNonWhitespace);\n+            returnString = line.substring(incidentalWhitespace, lastNonWhitespace);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac210211923bf776a214945259bd63e501b363cd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5NDM2MQ==", "bodyText": "Just take a look at isBlank method. It is almost same as the new method indexOfNonWhitespace.  I want to get rid of duplication.", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r473594361", "createdAt": "2020-08-20T05:08:39Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,76 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent, or empty string.\n+     */\n+    private static String stripIndentFromLine(String line, int indent) {\n+        final int firstNonWhitespace = indexOfNonWhitespace(line);\n+        final int lastNonWhitespace = line.length();\n+        final int incidentalWhitespace = Math.min(indent, firstNonWhitespace);\n+\n+        return line.substring(incidentalWhitespace, lastNonWhitespace);\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, to determine the smallest\n+     * indent in a text block string literal.\n+     *\n+     * @param lines list of actual text block content, split by line.\n+     * @return number of spaces representing the smallest indent in this text block.\n+     */\n+    private static int getSmallestIndent(List<String> lines) {\n+        int indent = Integer.MAX_VALUE;\n+        for (String line : lines) {\n+            final int leadingWhitespace = indexOfNonWhitespace(line);\n+            indent = Integer.min(indent, leadingWhitespace);\n+        }\n+        return indent;\n+    }\n+\n+    /**\n+     * Helper method to find the index of the first non-whitespace character in a string.\n+     *\n+     * @param line the string to find the first index of a non-whitespace character for.\n+     * @return the index of the first non-whitespace character.\n+     */\n+    private static int indexOfNonWhitespace(String line) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1MDU4Nw=="}, "originalCommit": {"oid": "463214278e6fe5f0769617777f433bfaec8c912b"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjU2NTYw", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-471256560", "createdAt": "2020-08-20T05:27:38Z", "commit": {"oid": "ac210211923bf776a214945259bd63e501b363cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNToyNzozOFrOHDqmfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNToyNzozOFrOHDqmfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTc1OQ==", "bodyText": "@pbludov we are returning \"\"", "url": "https://github.com/checkstyle/checkstyle/pull/8705#discussion_r473605759", "createdAt": "2020-08-20T05:27:38Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java", "diffHunk": "@@ -484,4 +489,95 @@ else if (tokenType == TokenTypes.LITERAL_PRIVATE) {\n         return illegalClassNames;\n     }\n \n+    /**\n+     * Strip initial newline and preceding whitespace on each line from text block content.\n+     * In order to be consistent with how javac handles this task, we have modeled this\n+     * implementation after the code from:\n+     * github.com/openjdk/jdk14u/blob/master/src/java.base/share/classes/java/lang/String.java\n+     *\n+     * @param textBlockContent the actual content of the text block.\n+     * @return string consistent with javac representation.\n+     */\n+    public static String stripIndentAndInitialNewLineFromTextBlock(String textBlockContent) {\n+        final String contentWithInitialNewLineRemoved =\n+            ALL_NEW_LINES.matcher(textBlockContent).replaceFirst(\"\");\n+        final List<String> lines =\n+            Arrays.asList(ALL_NEW_LINES.split(contentWithInitialNewLineRemoved));\n+        final int indent = getSmallestIndent(lines);\n+        final String suffix = \"\";\n+\n+        return lines.stream()\n+                .map(line -> stripIndentAndTrailingWhitespaceFromLine(line, indent))\n+                .collect(Collectors.joining(System.lineSeparator(), \"\", suffix));\n+    }\n+\n+    /**\n+     * Helper method for stripIndentAndInitialNewLineFromTextBlock, strips correct indent\n+     * from string, and trailing whitespace, or returns empty string if no text.\n+     *\n+     * @param line the string to strip indent and trailing whitespace from\n+     * @param indent the amount of indent to remove\n+     * @return modified string with removed indent and trailing whitespace, or empty string.\n+     */\n+    private static String stripIndentAndTrailingWhitespaceFromLine(String line, int indent) {\n+        final int lastNonWhitespace = lastIndexOfNonWhitespace(line);\n+        String returnString = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac210211923bf776a214945259bd63e501b363cd"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1080aa68c804f2997fae2f5e8ae089f8e90a8b3d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1080aa68c804f2997fae2f5e8ae089f8e90a8b3d", "committedDate": "2020-08-20T11:52:10Z", "message": "minor: create utility to extract content consistent with javac from text blocks(#8616)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac210211923bf776a214945259bd63e501b363cd", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ac210211923bf776a214945259bd63e501b363cd", "committedDate": "2020-08-19T14:38:02Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "af05003be1cc0523fc9627ea014e45a87ebed9e4", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/af05003be1cc0523fc9627ea014e45a87ebed9e4", "committedDate": "2020-08-20T11:52:10Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "748e25543e5fb6d421b9e40a2ac58d725fe54d06", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/748e25543e5fb6d421b9e40a2ac58d725fe54d06", "committedDate": "2020-08-20T12:11:12Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af05003be1cc0523fc9627ea014e45a87ebed9e4", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/af05003be1cc0523fc9627ea014e45a87ebed9e4", "committedDate": "2020-08-20T11:52:10Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}, "afterCommit": {"oid": "748e25543e5fb6d421b9e40a2ac58d725fe54d06", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/748e25543e5fb6d421b9e40a2ac58d725fe54d06", "committedDate": "2020-08-20T12:11:12Z", "message": "Issue #8616: Text Blocks syntax check update for MultipleStringLiteralsCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTg2MTQ3", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-471986147", "createdAt": "2020-08-20T21:06:38Z", "commit": {"oid": "748e25543e5fb6d421b9e40a2ac58d725fe54d06"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTI3MzMw", "url": "https://github.com/checkstyle/checkstyle/pull/8705#pullrequestreview-472527330", "createdAt": "2020-08-21T14:15:42Z", "commit": {"oid": "748e25543e5fb6d421b9e40a2ac58d725fe54d06"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1027, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}