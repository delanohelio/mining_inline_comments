{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTAwOTcz", "number": 7933, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxMTowN1rODxzflw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoyMjoyOVrODxzu6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUwNDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxMTowN1rOGFfFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo0NTo1MlrOGIECVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNTM1NA==", "bodyText": "Please change to Example:", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408405354", "createdAt": "2020-04-14T20:11:07Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNzkyNA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r411107924", "createdAt": "2020-04-20T05:45:52Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNTM1NA=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUwOTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxMjoyNlrOGFfISQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo1MDowNlrOGHuiKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNjA4OQ==", "bodyText": "This is redundant, please remove.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408406089", "createdAt": "2020-04-14T20:12:26Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NTYyNw==", "bodyText": "No need, keeping consistent with ClassFanOutComplexityCheck", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r410755627", "createdAt": "2020-04-18T21:50:06Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNjA4OQ=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUxNDU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxMzo1NlrOGFfLaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo0OTowOFrOGHuh0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNjg4OQ==", "bodyText": "This example should contain violation for default configuration. Please update it accordingly.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408406889", "createdAt": "2020-04-14T20:13:56Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NTUzNg==", "bodyText": "No need anymore. There is a violation case below.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r410755536", "createdAt": "2020-04-18T21:49:08Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNjg4OQ=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUyMDIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxNTozNlrOGFfOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo0NzozNFrOGHug8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNzc1NQ==", "bodyText": "Please remove and update the above example. There should be a single example for default configuration with a violation for default values.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408407755", "createdAt": "2020-04-14T20:15:36Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzODYzNg==", "bodyText": "checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java\n    \n    \n         Line 97\n      in\n      a231f52\n    \n    \n    \n    \n\n        \n          \n            * The check results in a violation in the following: \n        \n    \n  \n\n\nThe default config had 2 examples in this, one with and one without violations.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408538636", "createdAt": "2020-04-15T02:06:47Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNzc1NQ=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NTMxMg==", "bodyText": "Good point. Thanks for the link. Let is keep consistent.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r410755312", "createdAt": "2020-04-18T21:47:34Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNzc1NQ=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUyMzgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxNjozOFrOGFfREQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo0NjowMlrOGIEChg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODMzNw==", "bodyText": "Code examples: -> Example:", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408408337", "createdAt": "2020-04-14T20:16:38Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // instantiation of 5 other user defined classes\n+ *   // Counted, 7\n+ *   Place place = new Place(); // Violation\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two regular expressions {@code ^Array.*} and {@code .*Exception$}:\n+ * To configure the check with a threshold of 2:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludeClassesRegexps\"\n- *     value=\"^Array.*, .*Exception$\"/&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * The following example demonstrates usage of <b>excludedClasses</b> and\n- * <b>excludeClassesRegexps</b> properties\n+ * Code examples:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNzk3NA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r411107974", "createdAt": "2020-04-20T05:46:02Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // instantiation of 5 other user defined classes\n+ *   // Counted, 7\n+ *   Place place = new Place(); // Violation\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two regular expressions {@code ^Array.*} and {@code .*Exception$}:\n+ * To configure the check with a threshold of 2:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludeClassesRegexps\"\n- *     value=\"^Array.*, .*Exception$\"/&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * The following example demonstrates usage of <b>excludedClasses</b> and\n- * <b>excludeClassesRegexps</b> properties\n+ * Code examples:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODMzNw=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTUyNTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxNzoyMFrOGFfSfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo0Nzo0N1rOGHuhEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODcwMw==", "bodyText": "Please make one code example for each config. Review and update other examples in the same way.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408408703", "createdAt": "2020-04-14T20:17:20Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // instantiation of 5 other user defined classes\n+ *   // Counted, 7\n+ *   Place place = new Place(); // Violation\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two regular expressions {@code ^Array.*} and {@code .*Exception$}:\n+ * To configure the check with a threshold of 2:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludeClassesRegexps\"\n- *     value=\"^Array.*, .*Exception$\"/&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * The following example demonstrates usage of <b>excludedClasses</b> and\n- * <b>excludeClassesRegexps</b> properties\n+ * Code examples:\n  * </p>\n  * <p>\n- * Expected result is one class {@code Date}\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"ArrayList\"/&gt;\n- *   &lt;property name=\"excludeClassesRegexps\" value=\"^Hash.*\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzODk5OQ==", "bodyText": "Same confusion.\nhttps://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheck.java", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408538999", "createdAt": "2020-04-15T02:08:08Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // instantiation of 5 other user defined classes\n+ *   // Counted, 7\n+ *   Place place = new Place(); // Violation\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two regular expressions {@code ^Array.*} and {@code .*Exception$}:\n+ * To configure the check with a threshold of 2:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludeClassesRegexps\"\n- *     value=\"^Array.*, .*Exception$\"/&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * The following example demonstrates usage of <b>excludedClasses</b> and\n- * <b>excludeClassesRegexps</b> properties\n+ * Code examples:\n  * </p>\n  * <p>\n- * Expected result is one class {@code Date}\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"ArrayList\"/&gt;\n- *   &lt;property name=\"excludeClassesRegexps\" value=\"^Hash.*\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODcwMw=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NTM0NQ==", "bodyText": "Thanks for the link. Let is keep consistent.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r410755345", "createdAt": "2020-04-18T21:47:47Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -107,86 +107,189 @@\n  * &lt;module name=\"ClassDataAbstractionCoupling\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 5:\n+ * Code examples:\n+ * </p>\n+ * <p>\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"max\" value=\"5\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   Place place = new Place(); // Counted, 3\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two excluded classes {@code HashMap} and {@code HashSet}:\n+ * The check results in a violation in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"HashMap, HashSet\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {\n+ *   Set set = new HashSet(); // Ignored due to default excludedClasses property\n+ *   Map map = new HashMap(); // Ignored due to default excludedClasses property\n+ *   Date date = new Date(); // Counted, 1\n+ *   Time time = new Time(); // Counted, 2\n+ *   // instantiation of 5 other user defined classes\n+ *   // Counted, 7\n+ *   Place place = new Place(); // Violation\n+ * }\n  * </pre>\n  * <p>\n- * To configure the check with two regular expressions {@code ^Array.*} and {@code .*Exception$}:\n+ * To configure the check with a threshold of 2:\n  * </p>\n  * <pre>\n  * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludeClassesRegexps\"\n- *     value=\"^Array.*, .*Exception$\"/&gt;\n+ *   &lt;property name=\"max\" value=\"2\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * The following example demonstrates usage of <b>excludedClasses</b> and\n- * <b>excludeClassesRegexps</b> properties\n+ * Code examples:\n  * </p>\n  * <p>\n- * Expected result is one class {@code Date}\n+ * The check passes without violations in the following.\n  * </p>\n  * <pre>\n- * &lt;module name=\"ClassDataAbstractionCoupling\"&gt;\n- *   &lt;property name=\"excludedClasses\" value=\"ArrayList\"/&gt;\n- *   &lt;property name=\"excludeClassesRegexps\" value=\"^Hash.*\"/&gt;\n- * &lt;/module&gt;\n+ * class InputClassCoupling {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODcwMw=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTU0MDkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoyMTo0MlrOGFfb_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo1MDo1OVrOGIEJSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTEzNQ==", "bodyText": "Looks like code formatting. Please revert.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408411135", "createdAt": "2020-04-14T20:21:42Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -216,8 +319,8 @@\n  * you should use direct import (e.g. {@code import java.math.BigDecimal}).\n  * </p>\n  * <p>\n- * Also note, that checkstyle will not exclude classes within the same file\n- * even if it was listed in the {@code excludedPackages} parameter.\n+ * Also note, that checkstyle will not exclude classes within the same file even", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwOTcwNA==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r411109704", "createdAt": "2020-04-20T05:50:59Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -216,8 +319,8 @@\n  * you should use direct import (e.g. {@code import java.math.BigDecimal}).\n  * </p>\n  * <p>\n- * Also note, that checkstyle will not exclude classes within the same file\n- * even if it was listed in the {@code excludedPackages} parameter.\n+ * Also note, that checkstyle will not exclude classes within the same file even", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTEzNQ=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 233}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTU0NDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoyMjoyOVrOGFfdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo0NjowNVrOGHugSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTU5NA==", "bodyText": "What is the reason of this refactoring? Please revert if not needed.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408411594", "createdAt": "2020-04-14T20:22:29Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -234,30 +337,22 @@\n  * import a.b.Bar;\n  * import a.b.c.Baz;\n  *\n- * public class Foo {\n- *   public Bar bar; // Will be ignored, located inside ignored a.b package\n- *   public Baz baz; // Will not be ignored, located inside a.b.c package\n- *   public Data data; // Will not be ignored, same file\n+ * class Foo {\n+ *   Bar bar; // Will be ignored, located inside ignored a.b package\n+ *   Baz baz; // Will not be ignored, located inside a.b.c package\n+ *   Data data; // Will not be ignored, same file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 249}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzOTMyMw==", "bodyText": "#7906 (comment)\nPlease clarify.", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r408539323", "createdAt": "2020-04-15T02:09:15Z", "author": {"login": "shashwatj07"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -234,30 +337,22 @@\n  * import a.b.Bar;\n  * import a.b.c.Baz;\n  *\n- * public class Foo {\n- *   public Bar bar; // Will be ignored, located inside ignored a.b package\n- *   public Baz baz; // Will not be ignored, located inside a.b.c package\n- *   public Data data; // Will not be ignored, same file\n+ * class Foo {\n+ *   Bar bar; // Will be ignored, located inside ignored a.b package\n+ *   Baz baz; // Will not be ignored, located inside a.b.c package\n+ *   Data data; // Will not be ignored, same file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTU5NA=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 249}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NTE0NQ==", "bodyText": "Ok, thanks for clarifying", "url": "https://github.com/checkstyle/checkstyle/pull/7933#discussion_r410755145", "createdAt": "2020-04-18T21:46:05Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheck.java", "diffHunk": "@@ -234,30 +337,22 @@\n  * import a.b.Bar;\n  * import a.b.c.Baz;\n  *\n- * public class Foo {\n- *   public Bar bar; // Will be ignored, located inside ignored a.b package\n- *   public Baz baz; // Will not be ignored, located inside a.b.c package\n- *   public Data data; // Will not be ignored, same file\n+ * class Foo {\n+ *   Bar bar; // Will be ignored, located inside ignored a.b package\n+ *   Baz baz; // Will not be ignored, located inside a.b.c package\n+ *   Data data; // Will not be ignored, same file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTU5NA=="}, "originalCommit": {"oid": "8a48f39bee0e2d82106a8b66d01bfc888a9ab4d8"}, "originalPosition": 249}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1262, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}