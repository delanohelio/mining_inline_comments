{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTEyMTgy", "number": 7790, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODoyODoxNVrODmFFBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMToxODoyMlrODmI5eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU1Njg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODoyODoxNVrOFzT3yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMDo1MTozNlrOFzUfTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NzI3NA==", "bodyText": "I doubt it should be like this. In very rare case, e.g.\nenum A {}; enum B{} no violation will be reported.\nPlease change it.", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389347274", "createdAt": "2020-03-08T08:28:15Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -98,8 +99,9 @@\n      */\n     private boolean publicTypeFound;\n \n-    /** Mapping between type names and line numbers of the type declarations.*/\n-    private final SortedMap<Integer, String> lineNumberTypeMap = new TreeMap<>();\n+    /** Mapping between type names and DetailAST nodes of the type declarations.*/\n+    private final SortedMap<DetailAST, String> lineNumberTypeMap =\n+            new TreeMap<>(Comparator.comparingInt(DetailAST::getLineNo));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a07e276750ba1d83fa95c6ef63e7348ee305099"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NzM5MQ==", "bodyText": "I changed the comparator to also check the column number if the line number is equal. That should be good enough to ensure the nodes are unique and still in order.", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389357391", "createdAt": "2020-03-08T10:51:36Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -98,8 +99,9 @@\n      */\n     private boolean publicTypeFound;\n \n-    /** Mapping between type names and line numbers of the type declarations.*/\n-    private final SortedMap<Integer, String> lineNumberTypeMap = new TreeMap<>();\n+    /** Mapping between type names and DetailAST nodes of the type declarations.*/\n+    private final SortedMap<DetailAST, String> lineNumberTypeMap =\n+            new TreeMap<>(Comparator.comparingInt(DetailAST::getLineNo));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NzI3NA=="}, "originalCommit": {"oid": "3a07e276750ba1d83fa95c6ef63e7348ee305099"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE4MjAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMToxNzozNlrOFzYz_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMjozOToyMVrOFzZlVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODIyMg==", "bodyText": "I am lost where the unique ordering is needed. Checkstyle will drop violations for the same line/column/message/check. It also already sorts violations on line/column. Can you explain what I am missing?", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389428222", "createdAt": "2020-03-09T01:17:36Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -92,14 +93,19 @@\n      */\n     public static final String MSG_KEY = \"one.top.level.class\";\n \n+    /** Compare DetailAST nodes by line and then column number to make a unique ordering. */\n+    private static final Comparator<DetailAST> LINE_AND_COL_COMPARATOR =\n+            Comparator.comparingInt(DetailAST::getLineNo).thenComparingInt(DetailAST::getColumnNo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b8f440c6d52f73e7f9fa63c01856de19f35ef5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzOTA4MQ==", "bodyText": "The sorting is not so much for the order of the violations, but for this rule:\n\nIf file doesn't contains public class, enum or interface, top-level type is the first type in file.\n\nDetailAST on its own is not comparable, so we have to apply our own comparator to determine which is the first type in the file. This comes from extending the existing TreeMap to remember not just the line number, but the whole DetailAST node as well.\nIn hindsight, traversing the AST in beginTree should already visit the nodes in order. Maybe we can use a more efficient data structure instead? I'm thinking of using some sort of List; I just need a List<DetailAST> that stores the nodes in the traversed (sorted) order and I can get the individual type name from the node itself later.", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389439081", "createdAt": "2020-03-09T02:28:33Z", "author": {"login": "wltan"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -92,14 +93,19 @@\n      */\n     public static final String MSG_KEY = \"one.top.level.class\";\n \n+    /** Compare DetailAST nodes by line and then column number to make a unique ordering. */\n+    private static final Comparator<DetailAST> LINE_AND_COL_COMPARATOR =\n+            Comparator.comparingInt(DetailAST::getLineNo).thenComparingInt(DetailAST::getColumnNo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODIyMg=="}, "originalCommit": {"oid": "c1b8f440c6d52f73e7f9fa63c01856de19f35ef5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ0MDg1NA==", "bodyText": "Thanks. I see now. Original map sorted on integer which is the key.\n\nMaybe we can use a more efficient data structure instead\n\nFeel free to create a new issue and PR for this change.", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389440854", "createdAt": "2020-03-09T02:39:21Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "diffHunk": "@@ -92,14 +93,19 @@\n      */\n     public static final String MSG_KEY = \"one.top.level.class\";\n \n+    /** Compare DetailAST nodes by line and then column number to make a unique ordering. */\n+    private static final Comparator<DetailAST> LINE_AND_COL_COMPARATOR =\n+            Comparator.comparingInt(DetailAST::getLineNo).thenComparingInt(DetailAST::getColumnNo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODIyMg=="}, "originalCommit": {"oid": "c1b8f440c6d52f73e7f9fa63c01856de19f35ef5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE4MjY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheckTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMToxODoyMlrOFzY0Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMjoyOToyMlrOFzZe6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODMxNA==", "bodyText": "Undo unnecessary changes like this. I see others in the same diff.", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389428314", "createdAt": "2020-03-09T01:18:22Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheckTest.java", "diffHunk": "@@ -132,43 +132,66 @@ public void testFileWithThreeTopLevelEnum() throws Exception {\n         final DefaultConfiguration checkConfig =\n                 createModuleConfig(OneTopLevelClassCheck.class);\n         final String[] expected = {\n-            \"3: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner1\"),\n-            \"11: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner2\"),\n+            \"3:1: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner1\"),\n+            \"11:1: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner2\"),\n         };\n         verify(checkConfig, getPath(\"InputOneTopLevelClassEnum2.java\"), expected);\n     }\n \n     @Test\n     public void testFileWithFewTopLevelClasses() throws Exception {\n         final DefaultConfiguration checkConfig =\n-            createModuleConfig(OneTopLevelClassCheck.class);\n+                createModuleConfig(OneTopLevelClassCheck.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b8f440c6d52f73e7f9fa63c01856de19f35ef5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzOTIwOA==", "bodyText": "Fixed (I think I got all of them)", "url": "https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389439208", "createdAt": "2020-03-09T02:29:22Z", "author": {"login": "wltan"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheckTest.java", "diffHunk": "@@ -132,43 +132,66 @@ public void testFileWithThreeTopLevelEnum() throws Exception {\n         final DefaultConfiguration checkConfig =\n                 createModuleConfig(OneTopLevelClassCheck.class);\n         final String[] expected = {\n-            \"3: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner1\"),\n-            \"11: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner2\"),\n+            \"3:1: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner1\"),\n+            \"11:1: \" + getCheckMessage(MSG_KEY, \"InputOneTopLevelClassEnum2inner2\"),\n         };\n         verify(checkConfig, getPath(\"InputOneTopLevelClassEnum2.java\"), expected);\n     }\n \n     @Test\n     public void testFileWithFewTopLevelClasses() throws Exception {\n         final DefaultConfiguration checkConfig =\n-            createModuleConfig(OneTopLevelClassCheck.class);\n+                createModuleConfig(OneTopLevelClassCheck.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODMxNA=="}, "originalCommit": {"oid": "c1b8f440c6d52f73e7f9fa63c01856de19f35ef5"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1435, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}