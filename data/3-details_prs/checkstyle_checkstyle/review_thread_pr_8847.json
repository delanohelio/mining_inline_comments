{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTU3MDgz", "number": 8847, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0MToyNVrOEmgpkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNjo0NlrOEokqzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE2MjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0MToyNVrOHWk5ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxOToxNVrOHW67jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNTMzMQ==", "bodyText": "violation, case 1 contains code but lacks break, return, throw or continue statement\n\ncontinue cannot be in switch, please correct description as well.\nviolation, case 1  -> violation, previous case ...", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493435331", "createdAt": "2020-09-23T10:41:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2ODIxNQ==", "bodyText": "In my code, I have a while loop, so continue is possible. I leave the while loop out to focus on switch.\nwhile (i >= 0) {\n    switch(i) {\n        case 1:\n            i++;\n            continue;\n        ...\n    }\n}", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493668215", "createdAt": "2020-09-23T15:04:30Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNTMzMQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4NjQwMA==", "bodyText": "Then you example should have loop outside of it, because continue wont work without a loop and it is confusing", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493686400", "createdAt": "2020-09-23T15:28:07Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNTMzMQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NjIzOA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796238", "createdAt": "2020-09-23T18:19:15Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNTMzMQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE2NzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0MjoyMFrOHWk8yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxOTozN1rOHW68Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNjEwNg==", "bodyText": "that wont compile", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493436106", "createdAt": "2020-09-23T10:42:20Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3MDYzMQ==", "bodyText": "You mean throw new Exception()? My code has\n    public void foo() throws Exception{}\n\nBut I left it out to focus on the switch. Should I put it in?\nIf you mean continue, I wrapped a while loop outside the switch as commented above", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493670631", "createdAt": "2020-09-23T15:07:36Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNjEwNg=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NjQzMA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796430", "createdAt": "2020-09-23T18:19:37Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNjEwNg=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE3MzA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0MzoyM1rOHWlAog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxOTo0NlrOHW68rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzA5MA==", "bodyText": "case 6 -> previous case", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493437090", "createdAt": "2020-09-23T10:43:23Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3MTA4OQ==", "bodyText": "Sorry I don't understand what you meant", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493671089", "createdAt": "2020-09-23T15:08:13Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzA5MA=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4NTMzMQ==", "bodyText": "I mean that do not write case <the number>, just write previous case instead of case 6, in next modifications it is easier to support it in case number is changed.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493685331", "createdAt": "2020-09-23T15:26:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzA5MA=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NjUyNA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796524", "createdAt": "2020-09-23T18:19:46Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzA5MA=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE4MjExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0NDo1OVrOHWlGew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODozNTozMFrOHW7gaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzODU4Nw==", "bodyText": "please remove this section and its example, please address only properties and things mentioned in description.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493438587", "createdAt": "2020-09-23T10:44:59Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3MjQwMQ==", "bodyText": "There is a Note: The check assumes that there is no unreachable code in the case in the description.\nShould I still remove this section?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493672401", "createdAt": "2020-09-23T15:09:57Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzODU4Nw=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5MjYxMQ==", "bodyText": "I think yes, it is a rare case.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493792611", "createdAt": "2020-09-23T18:12:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzODU4Nw=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwNTY3Mg==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493805672", "createdAt": "2020-09-23T18:35:30Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzODU4Nw=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIwMjcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0ODo1MVrOHWlUEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMDoxM1rOHW69lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjA2Ng==", "bodyText": "Example how to suppress violations by comment:", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442066", "createdAt": "2020-09-23T10:48:51Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5Njc1OQ==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796759", "createdAt": "2020-09-23T18:20:13Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjA2Ng=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIwNTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0OToyNVrOHWlVyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxMzoyNlrOHW6uaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ==", "bodyText": "there is no comment, why it is ok?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442505", "createdAt": "2020-09-23T10:49:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4MDgwOA==", "bodyText": "There is a comment // fall through in case 1, // fallthru in case 2, and /* fall-through */ in case 3.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493680808", "createdAt": "2020-09-23T15:20:42Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4NzQ2Nw==", "bodyText": "then it is not clear about case 4 in this example. There is a comment, but it is outside case block", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493687467", "createdAt": "2020-09-23T15:29:30Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcxMzI3MA==", "bodyText": "Do you mean this\n    case 3: {\n        i++;\n    }\n        /* fall-through*/\n    case ...\n\nIt is ok because the comment doesn't have to be in the case block. It must be on the last non-empty line before the case triggering the warning.\nI ran checkstyle and there is no violation here.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493713270", "createdAt": "2020-09-23T16:05:18Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5Mjg3Mw==", "bodyText": "ok", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493792873", "createdAt": "2020-09-23T18:13:26Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjUwNQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIwNjQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0OTo0MVrOHWlWyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMDoyMFrOHW692g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mjc2Mw==", "bodyText": "indentation", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493442763", "createdAt": "2020-09-23T10:49:41Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NjgyNg==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796826", "createdAt": "2020-09-23T18:20:20Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mjc2Mw=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIxMzU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1MDo1OFrOHWlbkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMDoyNlrOHW6-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mzk4NQ==", "bodyText": "so that it checks last case group - > to enable check for last case group\nAdd colon at the end", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493443985", "createdAt": "2020-09-23T10:50:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5Njg4MA==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796880", "createdAt": "2020-09-23T18:20:26Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0Mzk4NQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIxODAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": false, "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1MTo1MlrOHWlemQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0NzozM1rOHahTDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ==", "bodyText": "why ok if you have violation comment 2 lines below?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493444761", "createdAt": "2020-09-23T10:51:52Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3NzUzNg==", "bodyText": "I write OK or violation after each case because that's where the error appears. So OK in case 2 is actually from case 1.\nI just realized it's kind of hard to understand. Do you want me to change that?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493677536", "createdAt": "2020-09-23T15:16:27Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3OTI2MA==", "bodyText": "It is best to write violation comment on line where it is reported, same for ok comments (where violation would be if it wasn't ok)", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493679260", "createdAt": "2020-09-23T15:18:43Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcxNDEyNA==", "bodyText": "Ok. So the way I'm writing right now follows that rule.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493714124", "createdAt": "2020-09-23T16:06:34Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NTk4OA==", "bodyText": "from CLI in PR:\ncat Test.java\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        break;\n      case 2: // OK // line 7 // violation comment should be there!!!! \n        i++;\n        // violation, last case group is checked\n    }\n  }\n}\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:7:7: Fall through f", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495575988", "createdAt": "2020-09-27T13:58:28Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1Njg5Mw==", "bodyText": "@anhminhtran235, please address this", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495656893", "createdAt": "2020-09-28T02:13:40Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3NjEwMA==", "bodyText": "@romani So 'OK' and 'violation' will be on the same line?\nCan I write like this?\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        break;\n      case 2: // Previous case: OK \n              // This case: violation, last case must have statement that transfer control\n        i++;\n    }\n  }\n}", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495676100", "createdAt": "2020-09-28T03:52:15Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1MjI5MA==", "bodyText": "violation MUST be on same line a it CLI report it (there are some exceptions from this rule, but this case is not exception).\nok should be on line where violation might occur.\n$ cat config.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n           <module name=\"FallThrough\">\n             <property name=\"checkLastCaseGroup\" value=\"true\"/>\n           </module>\n    </module>\n</module>\n\n$ cat Test.java \npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1: // OK\n        break;\n      case 2: // violation, last case must have statement that transfer control\n        i++;\n    }\n  }\n}\n\n$ java -jar checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /var/tmp/Test.java:7:7: Fall through from the last branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r496752290", "createdAt": "2020-09-29T14:13:59Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3MDY4MA==", "bodyText": "@romani  violation occurs at line 7 twice. 1 for the previous case and 1 for the last case. That means if violation occurs, it occurs at line 7. So should OK be on line 7 too?\nSorry for the trouble. I just want to make sure I understand this one.\ncat config.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n           <module name=\"FallThrough\">\n             <property name=\"checkLastCaseGroup\" value=\"true\"/>\n           </module>\n    </module>\n</module>\n\ncat Test.java\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1:\n        i++;\n      case 2: // violation happens at this line TWICE!\n        i++;\n    }\n  }\n}\n\njava -jar .\\checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] E:\\checkstyle-playground\\Test.java:7:7: Fall through from previous branch of the switch statement. [FallThrough]\n[ERROR] E:\\checkstyle-playground\\Test.java:7:7: Fall through from the last branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 2 errors.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r496970680", "createdAt": "2020-09-29T19:03:35Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwODgxMA==", "bodyText": "// violations. ... Some words...", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497008810", "createdAt": "2020-09-29T19:59:41Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxNTYxNw==", "bodyText": "No. What I mean is because case 1 and case 2's violations will occur at the same line, so I should write like this\npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1: // <- OK should not be here because this is not where the error is\n        break;\n      case 2: // Previous case: OK <- OK should be here\n              // This case: violation, last case must have statement that transfer control\n        i++;\n    }\n  }\n}\n\nDo you see what I mean?", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497015617", "createdAt": "2020-09-29T20:12:50Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0NzcwMQ==", "bodyText": "Please share exact config for this java file and CLI output. Violation comment should be on same line number as CLI report.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497247701", "createdAt": "2020-09-30T05:15:36Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODY4NA==", "bodyText": "It's right above. I substitute break with i++ to generate an error.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497248684", "createdAt": "2020-09-30T05:19:44Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI1NDY2MA==", "bodyText": "And I already provided expected comment :)\n\nI substitute break with i++ to generate an error.\n\nAnd share all and exact outputs.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497254660", "createdAt": "2020-09-30T05:41:51Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI1OTc5MA==", "bodyText": "You mean this reply?\nYou said 'ok should be on line where violation might occur.' But in the code you share, it's not:\n$ cat Test.java \npublic class Test {\n  public void foo() {\n    int i = 0;\n    switch (i) {\n      case 1: // OK <- I don't know why OK should be here. If there is any violation, it does not occur here.\n                 // The program needs to reach `case 2` to know something went wrong.\n        break;\n      case 2: // violation, last case must have statement that transfer control\n        i++;\n    }\n  }\n}", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497259790", "createdAt": "2020-09-30T05:58:40Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2MDg3Ng==", "bodyText": "switch (i) {\n      case 1: // Case 1 has Fall through violation\n        i++;\n      case 2: // But it is reported at this line. So `OK` and `violation` should be here\n        ...\n    }", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497260876", "createdAt": "2020-09-30T06:01:57Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ5NTA4Nw==", "bodyText": "if you showed work as following, we would resolve issue much quicker:\n$ cat config.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n  \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n  \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n           <module name=\"FallThrough\">\n             <property name=\"checkLastCaseGroup\" value=\"true\"/>\n           </module>\n    </module>\n</module>\n \n$ cat -n Test.java \n     1  public class Test {\n     2    public void foo() {\n     3      int i = 0;\n     4      switch (i) {\n     5        case 1: // OK <- I don't know why OK should be here. \n     6                   // The program needs to reach `case 2` to know something went wrong.\n     7          break;\n     8        case 2: // violation, last case must have statement that transfer control\n     9          i++;\n    10      }\n    11    }\n    12  }\n\n$ java -jar checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /var/tmp/Test.java:8:7: Fall through from the last branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 1 errors.\n\n$ cat -n Test.java \n     1  public class Test {\n     2    public void foo() {\n     3      int i = 0;\n     4      switch (i) {\n     5        case 1: // OK <- I don't know why OK should be here. \n     6                   // The program needs to reach `case 2` to know something went wrong.\n     7          i--;\n     8        case 2: // violation, last case must have statement that transfer control\n     9          i++;\n    10      }\n    11    }\n    12  }\n\n$ java -jar checkstyle-8.36.1-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /var/tmp/Test.java:8:7: Fall through from previous branch of the switch statement. [FallThrough]\n[ERROR] /var/tmp/Test.java:8:7: Fall through from the last branch of the switch statement. [FallThrough]\nAudit done.\nCheckstyle ends with 2 errors.\n\nYes, \"//ok\" should not be on case that we discuss in this review thread.\nBut please fix example in code, and place violation on line with case , not a separate line.\nPlease fix code and please regenerate html website, lets do final review.", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497495087", "createdAt": "2020-09-30T13:08:41Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3MDU3Mg==", "bodyText": "@romani Code fixed and images fixed :)", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497570572", "createdAt": "2020-09-30T14:47:33Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDc2MQ=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIxOTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1MjowNFrOHWlfQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMDozNVrOHW6-hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDkzMA==", "bodyText": "colon at the end", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493444930", "createdAt": "2020-09-23T10:52:04Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with custom relief pattern", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5Njk5Ng==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r493796996", "createdAt": "2020-09-23T18:20:35Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,118 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++;\n+ *   case 2: // violation, case 1 contains code but lacks break, return, throw or continue statement\n+ *     i++;\n+ *     break;\n+ *   case 3: // OK\n+ *     i++;\n+ *     return;\n+ *   case 4: // OK\n+ *     i++;\n+ *     throw new Exception();\n+ *   case 5: // OK\n+ *     i++;\n+ *     continue;\n+ *   case 6: // OK\n+ *   case 7: // OK, case 6 does not contain code\n+ *     i++;\n+ *   // OK, by default the last case is not checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * Unreachable code still causes violation:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   default:\n+ *     return;\n+ *   case 1:\n+ *     i++; // unreachable\n+ *   case 2: // violation\n+ *     return;\n+ * }\n  * </pre>\n  * <p>\n- * or\n+ * Add special comments to suppress the warning:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *   i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check so that it checks last case group\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;FallThrough&quot;&gt;\n- *   &lt;property name=&quot;reliefPattern&quot; value=&quot;continue in next case&quot;/&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with custom relief pattern", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NDkzMA=="}, "originalCommit": {"oid": "53612949481b24f727f49f1a6825cbdd920f0eae"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjExNzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDowMDoxNFrOHYnkdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMDoxMjo1OFrOHYrRuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjE4Mg==", "bodyText": "OK, by default the last case might not have 'break'", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495576182", "createdAt": "2020-09-27T14:00:14Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTQ3MA==", "bodyText": "Besides 'break', it can also have 'return', 'throw', 'continue'. Should I put those in too?\nLike this?\nOK, by default the last case might not have 'break', 'return', 'throw' or 'continue'", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495581470", "createdAt": "2020-09-27T14:58:26Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjE4Mg=="}, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4NTg1OA==", "bodyText": "https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.15\n\nA break statement with no label attempts to transfer control to the innermost enclosing switch, while, do, or for statement of the immediately enclosing method or initializer; this statement, which is called the break target, then immediately completes normally.\nTo be precise, a break statement with no label always completes abruptly, the reason being a break with no label.\n\nmain part is transfer control to the innermost enclosing statement\nlets do wording like:\nOK, by default the last case might not have statement that transfer control", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495585858", "createdAt": "2020-09-27T15:46:34Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjE4Mg=="}, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzNjkyMQ==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495636921", "createdAt": "2020-09-28T00:12:58Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjE4Mg=="}, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjExODMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDowMDo1MFrOHYnkrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMDoxMzowNlrOHYrRvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjIzOQ==", "bodyText": "` // violation , last case must have statement that transfer control", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495576239", "createdAt": "2020-09-27T14:00:50Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * Example how to suppress violations by comment:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *     i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to enable check for last case group:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;FallThrough&quot;&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzNjkyNw==", "bodyText": "fixed", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r495636927", "createdAt": "2020-09-28T00:13:06Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case is not checked\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * Example how to suppress violations by comment:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     i++; // fall through\n+ *\n+ *   case 2: // OK\n+ *     i++;\n+ *     // fallthru\n+ *   case 3: { // OK\n+ *     i++;\n+ *   }\n+ *   &#47;* fall-thru *&#47;\n+ *   case 4: // OK\n+ *     i++;\n+ *     // Fallthru\n+ *   case 5: // violation, \"Fallthru\" in case 4 should be \"fallthru\"\n+ *     i++;\n+ *     // fall through\n+ *     i++;\n+ *   case 6: // violation, the comment must be on the last non-empty line before 'case'\n+ *     i++;\n+ *   &#47;* fall through *&#47;case 7: // OK, comment can appear on the same line but before 'case'\n+ *     i++;\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to enable check for last case group:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;FallThrough&quot;&gt;\n+ *    &lt;property name=&quot;checkLastCaseGroup&quot; value=&quot;true&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * switch (i) {\n+ *   case 1:\n+ *     break;\n+ *   case 2: // OK\n+ *     i++;\n+ *     // violation, last case group is checked", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NjIzOQ=="}, "originalCommit": {"oid": "113921987181d0a3471ad2edd5608278c09f5084"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTc5Mjc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNjo0NlrOHZvf5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0ODo1MVrOHahW4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NDY2MA==", "bodyText": "*       case 6: // OK case does not contain code\n *       case 7: // OK, by default the last case might not have statement that transfer control\n *         i++;\n *", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r496754660", "createdAt": "2020-09-29T14:16:46Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case might not have statement that transfer control", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3MzIxOA==", "bodyText": "Similar to what I just said in this comment:\n    case 6:\n        i++;\n    case 7: // violation for case 6 AND case 7 occurs here!\n        i++;", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r496973218", "createdAt": "2020-09-29T19:08:14Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case might not have statement that transfer control", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NDY2MA=="}, "originalCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwOTI3Mw==", "bodyText": "Just use plural form\n // violations .....", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497009273", "createdAt": "2020-09-29T20:00:33Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case might not have statement that transfer control", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NDY2MA=="}, "originalCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3MTU1Mg==", "bodyText": "Code fixed and images fixed according to this", "url": "https://github.com/checkstyle/checkstyle/pull/8847#discussion_r497571552", "createdAt": "2020-09-30T14:48:51Z", "author": {"login": "anhminhtran235"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "diffHunk": "@@ -102,17 +64,111 @@\n  * To configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=&quot;FallThrough&quot;/&gt;\n+ * &lt;module name=\"FallThrough\"/&gt;\n  * </pre>\n  * <p>\n- * or\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() throws Exception {\n+ *   int i = 0;\n+ *   while (i &gt;= 0) {\n+ *     switch (i) {\n+ *       case 1:\n+ *         i++;\n+ *       case 2: // violation, previous case contains code but lacks\n+ *               // break, return, throw or continue statement\n+ *         i++;\n+ *         break;\n+ *       case 3: // OK\n+ *         i++;\n+ *         return;\n+ *       case 4: // OK\n+ *         i++;\n+ *         throw new Exception();\n+ *       case 5: // OK\n+ *         i++;\n+ *         continue;\n+ *       case 6: // OK\n+ *       case 7: // OK, previous case does not contain code\n+ *         i++;\n+ *         // OK, by default the last case might not have statement that transfer control", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NDY2MA=="}, "originalCommit": {"oid": "f0c6aba0849457a188026c74b4ab56c6e866abfe"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 698, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}