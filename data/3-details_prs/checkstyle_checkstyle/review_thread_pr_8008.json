{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTQzNjcz", "number": 8008, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzowNjo0MFrODthe_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToxMToyNVrOD8M4sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDYxMTE3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzowNjo0MFrOF-_skw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDozNjozM1rOF_Ds5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5OTYzNQ==", "bodyText": "Concern at #7980 (comment)", "url": "https://github.com/checkstyle/checkstyle/pull/8008#discussion_r401599635", "createdAt": "2020-04-01T13:06:40Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "diffHunk": "@@ -581,4 +584,32 @@ public void testWithoutLogErrors() throws Exception {\n                 CommonUtil.EMPTY_STRING_ARRAY);\n     }\n \n+    @Test\n+    public void testClassAliasResolving() throws Exception {\n+        final File file = new File(getPath(\"InputJavadocMethodClassAliasTest.java\"));\n+        final DetailAST rootAst = JavaParser.parseFile(file, JavaParser.Options.WITHOUT_COMMENTS);\n+        final DetailAST classAst = rootAst.getNextSibling().getNextSibling();\n+\n+        final JavadocMethodCheck obj = new JavadocMethodCheck();\n+        obj.beginTree(rootAst);\n+        obj.visitToken(classAst);\n+\n+        final Class<?> clazz = Class.forName(\"com.puppycrawl.tools.checkstyle.checks.javadoc.\"\n+                + \"JavadocMethodCheck\");\n+        final Class<?> tokenClazz = Class.forName(\"com.puppycrawl.tools.checkstyle.checks.javadoc.\"\n+                + \"JavadocMethodCheck$Token\");\n+        final Constructor<?> tokenConstructor = tokenClazz.getDeclaredConstructor(String.class,\n+                int.class, int.class);\n+        final Object token = tokenConstructor.newInstance(\"B1\", 21, 22);\n+\n+        final Method createClassInfo = clazz.getDeclaredMethod(\"createClassInfo\", tokenClazz,\n+                String.class);\n+        createClassInfo.setAccessible(true);\n+        final Object instanceResult = createClassInfo.invoke(obj, token,\n+                \"InputJavadocMethodClassAliasTest\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afef3994531309b4e61fbc4f68df352b8aa66eec"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NTI1NQ==", "bodyText": "@rnveach Replied in the issue comment thread.", "url": "https://github.com/checkstyle/checkstyle/pull/8008#discussion_r401665255", "createdAt": "2020-04-01T14:36:33Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "diffHunk": "@@ -581,4 +584,32 @@ public void testWithoutLogErrors() throws Exception {\n                 CommonUtil.EMPTY_STRING_ARRAY);\n     }\n \n+    @Test\n+    public void testClassAliasResolving() throws Exception {\n+        final File file = new File(getPath(\"InputJavadocMethodClassAliasTest.java\"));\n+        final DetailAST rootAst = JavaParser.parseFile(file, JavaParser.Options.WITHOUT_COMMENTS);\n+        final DetailAST classAst = rootAst.getNextSibling().getNextSibling();\n+\n+        final JavadocMethodCheck obj = new JavadocMethodCheck();\n+        obj.beginTree(rootAst);\n+        obj.visitToken(classAst);\n+\n+        final Class<?> clazz = Class.forName(\"com.puppycrawl.tools.checkstyle.checks.javadoc.\"\n+                + \"JavadocMethodCheck\");\n+        final Class<?> tokenClazz = Class.forName(\"com.puppycrawl.tools.checkstyle.checks.javadoc.\"\n+                + \"JavadocMethodCheck$Token\");\n+        final Constructor<?> tokenConstructor = tokenClazz.getDeclaredConstructor(String.class,\n+                int.class, int.class);\n+        final Object token = tokenConstructor.newInstance(\"B1\", 21, 22);\n+\n+        final Method createClassInfo = clazz.getDeclaredMethod(\"createClassInfo\", tokenClazz,\n+                String.class);\n+        createClassInfo.setAccessible(true);\n+        final Object instanceResult = createClassInfo.invoke(obj, token,\n+                \"InputJavadocMethodClassAliasTest\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5OTYzNQ=="}, "originalCommit": {"oid": "afef3994531309b4e61fbc4f68df352b8aa66eec"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDUyMjc0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToxMToyNVrOGU_03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToxMToyNVrOGU_03A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3MDQyOA==", "bodyText": "I am still looking over all discussions but I wanted to point to #7980 (comment) . If reflection stays, we need javadoc on why reflection is needed.\nThis can wait until a decision is made.", "url": "https://github.com/checkstyle/checkstyle/pull/8008#discussion_r424670428", "createdAt": "2020-05-13T19:11:25Z", "author": {"login": "rnveach"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "diffHunk": "@@ -595,4 +598,32 @@ public void testWithoutLogErrors() throws Exception {\n                 CommonUtil.EMPTY_STRING_ARRAY);\n     }\n \n+    @Test\n+    public void testClassAliasResolving() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27134634cd935bd2c0ab2f60ca2ce2628445ede6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1026, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}