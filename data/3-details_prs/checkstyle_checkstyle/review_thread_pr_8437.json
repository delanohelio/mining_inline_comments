{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjYxNjUz", "number": 8437, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjowODoyMlrOENiVEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoyMzoyMVrOENiY8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjI5Mzk1OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjowODoyMlrOGwPkYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNToyMDozM1rOGwbzCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTkwNA==", "bodyText": "multiline comment please as in other files.", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453239904", "createdAt": "2020-07-11T22:08:22Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MDI2Ng==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453440266", "createdAt": "2020-07-13T05:20:33Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzOTkwNA=="}, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjI5NTEyOnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoxMDowOVrOGwPk6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNToyMTo1M1rOGwb0Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDA0Mg==", "bodyText": "why no violation ?", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453240042", "createdAt": "2020-07-11T22:10:09Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {\n \n     public void t(Object o1, Object o2) {\n         // Should cause two violations, STRING and INTEGER, capital letter count > allowed\n-        if (!(o1 instanceof String STRING) && (o2 instanceof Integer INTEGER)) {}\n+        if (!(o1 instanceof String STRING) // violation\n+                && (o2 instanceof Integer INTEGER)) {} // violation\n \n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n-        if (arrayList instanceof ArrayList<Integer> aXML) { // ok when allowed \"XML\" abbreviation\n+        if (arrayList instanceof ArrayList<Integer> aXML) { // ok\n             System.out.println(\"Blah\");\n         }\n \n         boolean result = (o1 instanceof String a1) ?\n-                (o1 instanceof String aTXT) :   // violation, capital letter count > allowed\n+                (o1 instanceof String aTXT) :   // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDk0MQ==", "bodyText": "It looks like this file is now being checked with the default configuration with allowedAbbreviationLength=3", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453240941", "createdAt": "2020-07-11T22:21:55Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {\n \n     public void t(Object o1, Object o2) {\n         // Should cause two violations, STRING and INTEGER, capital letter count > allowed\n-        if (!(o1 instanceof String STRING) && (o2 instanceof Integer INTEGER)) {}\n+        if (!(o1 instanceof String STRING) // violation\n+                && (o2 instanceof Integer INTEGER)) {} // violation\n \n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n-        if (arrayList instanceof ArrayList<Integer> aXML) { // ok when allowed \"XML\" abbreviation\n+        if (arrayList instanceof ArrayList<Integer> aXML) { // ok\n             System.out.println(\"Blah\");\n         }\n \n         boolean result = (o1 instanceof String a1) ?\n-                (o1 instanceof String aTXT) :   // violation, capital letter count > allowed\n+                (o1 instanceof String aTXT) :   // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDA0Mg=="}, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MDU4Mw==", "bodyText": "All comments should be correct now.", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453440583", "createdAt": "2020-07-13T05:21:53Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {\n \n     public void t(Object o1, Object o2) {\n         // Should cause two violations, STRING and INTEGER, capital letter count > allowed\n-        if (!(o1 instanceof String STRING) && (o2 instanceof Integer INTEGER)) {}\n+        if (!(o1 instanceof String STRING) // violation\n+                && (o2 instanceof Integer INTEGER)) {} // violation\n \n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n-        if (arrayList instanceof ArrayList<Integer> aXML) { // ok when allowed \"XML\" abbreviation\n+        if (arrayList instanceof ArrayList<Integer> aXML) { // ok\n             System.out.println(\"Blah\");\n         }\n \n         boolean result = (o1 instanceof String a1) ?\n-                (o1 instanceof String aTXT) :   // violation, capital letter count > allowed\n+                (o1 instanceof String aTXT) :   // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDA0Mg=="}, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjI5NzE1OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoxMjo1NVrOGwPlzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNToyMjoyNVrOGwb0uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDI3MQ==", "bodyText": "allowedAbbreviationLength=\"1\" should not allow this", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453240271", "createdAt": "2020-07-11T22:12:55Z", "author": {"login": "romani"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {\n \n     public void t(Object o1, Object o2) {\n         // Should cause two violations, STRING and INTEGER, capital letter count > allowed\n-        if (!(o1 instanceof String STRING) && (o2 instanceof Integer INTEGER)) {}\n+        if (!(o1 instanceof String STRING) // violation\n+                && (o2 instanceof Integer INTEGER)) {} // violation\n \n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n-        if (arrayList instanceof ArrayList<Integer> aXML) { // ok when allowed \"XML\" abbreviation\n+        if (arrayList instanceof ArrayList<Integer> aXML) { // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MDY5OQ==", "bodyText": "XML is an allowed abbreviation in this UT, I've separated the files now.", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453440699", "createdAt": "2020-07-13T05:22:25Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"\n \n public class InputAbbreviationAsWordInNameCheckEnhancedInstanceof {\n \n     public void t(Object o1, Object o2) {\n         // Should cause two violations, STRING and INTEGER, capital letter count > allowed\n-        if (!(o1 instanceof String STRING) && (o2 instanceof Integer INTEGER)) {}\n+        if (!(o1 instanceof String STRING) // violation\n+                && (o2 instanceof Integer INTEGER)) {} // violation\n \n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n-        if (arrayList instanceof ArrayList<Integer> aXML) { // ok when allowed \"XML\" abbreviation\n+        if (arrayList instanceof ArrayList<Integer> aXML) { // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MDI3MQ=="}, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjMwMzg0OnYy", "diffSide": "RIGHT", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMjoyMzoyMVrOGwPozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNToyMjo0MFrOGwb07A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTAzOA==", "bodyText": "Should this be 3, since testAbbreviationAsWordInNameCheckEnhancedInstanceof uses the default config?", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453241038", "createdAt": "2020-07-11T22:23:21Z", "author": {"login": "esilkensen"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MDc0OA==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8437#discussion_r453440748", "createdAt": "2020-07-13T05:22:40Z", "author": {"login": "nmancus1"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameCheckEnhancedInstanceof.java", "diffHunk": "@@ -3,25 +3,29 @@\n \n import java.util.ArrayList;\n import java.util.Locale;\n+// config:\n+// allowedAbbreviationLength=\"1\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTAzOA=="}, "originalCommit": {"oid": "28edfdaad438c8dc01b5fb755f1d6b108903bf0b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 895, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}