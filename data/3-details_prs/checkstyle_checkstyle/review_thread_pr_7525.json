{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjQwMjgw", "number": 7525, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMTo0NzozNlrODcZYGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMTo0M1rODcbqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTAyNDg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMTo0NzozNlrOFkbz_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzo0NToyOFrOFkcyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODczNQ==", "bodyText": "4thName\nThis class name is invalid and won't compile, should be changed.", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373748735", "createdAt": "2020-02-01T01:47:36Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,53 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class 4thName {} // violation, name '4thName' must match pattern '^[A-Z][a-zA-Z0-9]*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7385ff335a08625334101bf3ae1f6b89fe9d300f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NDgwNw==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373764807", "createdAt": "2020-02-01T07:45:28Z", "author": {"login": "0blivious"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,53 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class 4thName {} // violation, name '4thName' must match pattern '^[A-Z][a-zA-Z0-9]*$'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODczNQ=="}, "originalCommit": {"oid": "7385ff335a08625334101bf3ae1f6b89fe9d300f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTIyOTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxMTozNzo0NlrOFkdb2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNTowMjowN1rOFkd_Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NTMyMw==", "bodyText": "Regex in comment is different from one in config example", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373775323", "createdAt": "2020-02-01T11:37:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,54 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class FourthName_ {} // violation, name 'FourthName_'\n+ *                              // must match pattern '^[A-Z][a-zA-Z0-9]*$'\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n- * a lower case letter, followed by letters, digits, and underscores is:\n+ * a lower case letter, followed by letters, digits, and underscores.\n+ * Also, suppress the check from being applied to protected and private type:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z](_?[a-zA-Z0-9]+)*$&quot;/&gt;\n+ *   &lt;property name=&quot;applyToProtected&quot; value=&quot;false&quot;/&gt;\n+ *   &lt;property name=&quot;applyToPrivate&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface firstName {} // OK\n+ * public class SecondName {} // violation, name 'Second_Name'\n+ *                            // must match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'\n+ * protected class ThirdName {} // OK\n+ * private class FourthName {} // OK\n+ * </pre>\n  * <p>\n  * The following configuration element ensures that interface names begin with {@code \"I_\"},\n  * followed by letters and digits:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\"\n- *     value=\"^I_[a-zA-Z0-9]*$\"/&gt;\n- *   &lt;property name=\"tokens\"\n- *     value=\"INTERFACE_DEF\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot;\n+ *     value=&quot;^I_[a-zA-Z0-9]*$&quot;/&gt;\n+ *   &lt;property name=&quot;tokens&quot;\n+ *     value=&quot;INTERFACE_DEF&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface I_firstName {} // OK\n+ * interface SecondName {} // violation, name 'SecondName'\n+ *                         // must match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034b1b1ad01d07beadbc09b141630d637379f6a7"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NDMyNw==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373784327", "createdAt": "2020-02-01T15:02:07Z", "author": {"login": "0blivious"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,54 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class FourthName_ {} // violation, name 'FourthName_'\n+ *                              // must match pattern '^[A-Z][a-zA-Z0-9]*$'\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n- * a lower case letter, followed by letters, digits, and underscores is:\n+ * a lower case letter, followed by letters, digits, and underscores.\n+ * Also, suppress the check from being applied to protected and private type:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z](_?[a-zA-Z0-9]+)*$&quot;/&gt;\n+ *   &lt;property name=&quot;applyToProtected&quot; value=&quot;false&quot;/&gt;\n+ *   &lt;property name=&quot;applyToPrivate&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface firstName {} // OK\n+ * public class SecondName {} // violation, name 'Second_Name'\n+ *                            // must match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'\n+ * protected class ThirdName {} // OK\n+ * private class FourthName {} // OK\n+ * </pre>\n  * <p>\n  * The following configuration element ensures that interface names begin with {@code \"I_\"},\n  * followed by letters and digits:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\"\n- *     value=\"^I_[a-zA-Z0-9]*$\"/&gt;\n- *   &lt;property name=\"tokens\"\n- *     value=\"INTERFACE_DEF\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot;\n+ *     value=&quot;^I_[a-zA-Z0-9]*$&quot;/&gt;\n+ *   &lt;property name=&quot;tokens&quot;\n+ *     value=&quot;INTERFACE_DEF&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface I_firstName {} // OK\n+ * interface SecondName {} // violation, name 'SecondName'\n+ *                         // must match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NTMyMw=="}, "originalCommit": {"oid": "034b1b1ad01d07beadbc09b141630d637379f6a7"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMTo0M1rOFkey-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwNTowNjowNVrOFkgJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzYyNg==", "bodyText": "SecondName vs Second_Name", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373797626", "createdAt": "2020-02-01T19:31:43Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,54 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class FourthName_ {} // violation, name 'FourthName_'\n+ *                              // must match pattern '^[A-Z][a-zA-Z0-9]*$'\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n- * a lower case letter, followed by letters, digits, and underscores is:\n+ * a lower case letter, followed by letters, digits, and underscores.\n+ * Also, suppress the check from being applied to protected and private type:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z](_?[a-zA-Z0-9]+)*$&quot;/&gt;\n+ *   &lt;property name=&quot;applyToProtected&quot; value=&quot;false&quot;/&gt;\n+ *   &lt;property name=&quot;applyToPrivate&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface firstName {} // OK\n+ * public class SecondName {} // violation, name 'Second_Name'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6cab8035917fda426ebf44ce85c97577f7c4c21"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxOTc0MQ==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/7525#discussion_r373819741", "createdAt": "2020-02-02T05:06:05Z", "author": {"login": "0blivious"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "diffHunk": "@@ -63,29 +63,54 @@\n  * An example of how to configure the check is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface FirstName {} // OK\n+ * protected class SecondName {} // OK\n+ * enum Third_Name {} // violation, name 'Third_Name' must match pattern '^[A-Z][a-zA-Z0-9]*$'\n+ * private class FourthName_ {} // violation, name 'FourthName_'\n+ *                              // must match pattern '^[A-Z][a-zA-Z0-9]*$'\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n- * a lower case letter, followed by letters, digits, and underscores is:\n+ * a lower case letter, followed by letters, digits, and underscores.\n+ * Also, suppress the check from being applied to protected and private type:\n  * </p>\n  * <pre>\n- * &lt;module name=\"TypeName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;module name=&quot;TypeName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z](_?[a-zA-Z0-9]+)*$&quot;/&gt;\n+ *   &lt;property name=&quot;applyToProtected&quot; value=&quot;false&quot;/&gt;\n+ *   &lt;property name=&quot;applyToPrivate&quot; value=&quot;false&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * public interface firstName {} // OK\n+ * public class SecondName {} // violation, name 'Second_Name'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzYyNg=="}, "originalCommit": {"oid": "e6cab8035917fda426ebf44ce85c97577f7c4c21"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1534, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}