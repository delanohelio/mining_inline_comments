{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDg2MTgw", "number": 8401, "title": "Issue #7290: Add support for enhanced instanceof", "bodyText": "Issue #7290: Add support for \"enhanced instanceof with pattern matching\" grammar\nReferences:\nhttps://docs.oracle.com/en/java/javase/14/docs/specs/patterns-instanceof-jls.html#jls-6.3.1\nhttps://openjdk.java.net/jeps/305\nhttp://cr.openjdk.java.net/~gbierman/jep305/jep305-20191021/specs/patterns-instanceof-jls.html#jls-14\nJava grammar per JEP:\nRelationalExpression:\n...\nRelationalExpression instanceof ReferenceType\nRelationalExpression instanceof Pattern\nPattern:\nReferenceType Identifier\nRationale:\nWe cannot reuse Checkstyle's VARIABLE_DEF node here; since a pattern variable has no modifiers, we must create a new token and node in the AST.  So, we have decided on PATERN_VARIABLE_DEF.", "createdAt": "2020-07-06T00:49:04Z", "url": "https://github.com/checkstyle/checkstyle/pull/8401", "merged": true, "mergeCommit": {"oid": "7d4cb0da6268d4ee7bc6ab94728b114316eefc3e"}, "closed": true, "closedAt": "2020-07-07T20:32:34Z", "author": {"login": "nmancus1"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyH3bBABqjM1MTM5ODU1ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyr6v9gFqTQ0NDIyODIyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d1b1e46e67bc76a32ad80215697a3761454aac4", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9d1b1e46e67bc76a32ad80215697a3761454aac4", "committedDate": "2020-07-06T00:42:53Z", "message": "Issue #7290: Add support for enhanced instanceof"}, "afterCommit": {"oid": "9635860cd2edd8e45eef73d16e8549af66fc5daa", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9635860cd2edd8e45eef73d16e8549af66fc5daa", "committedDate": "2020-07-06T02:31:49Z", "message": "Issue #7290: Add support for enhanced instanceof"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzQ3NjA4", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-442747608", "createdAt": "2020-07-06T02:55:24Z", "commit": {"oid": "9635860cd2edd8e45eef73d16e8549af66fc5daa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDU0MjI2", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-443454226", "createdAt": "2020-07-06T22:49:39Z", "commit": {"oid": "9635860cd2edd8e45eef73d16e8549af66fc5daa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjo0OTo0MFrOGtpd7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjo0OTo0MFrOGtpd7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxODUwOA==", "bodyText": "Alignment issue.", "url": "https://github.com/checkstyle/checkstyle/pull/8401#discussion_r450518508", "createdAt": "2020-07-06T22:49:40Z", "author": {"login": "rnveach"}, "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -1378,18 +1380,36 @@ equalityExpression\n \n // boolean relational expressions (level 5)\n relationalExpression\n-    :    shiftExpression ( \"instanceof\"^ typeSpec[true])?\n+    :    shiftExpression\n+        ( \"instanceof\"^\n+            (   (typeSpec[true] IDENT)=> patternDefinition\n+            |   instanceofTypeSpec\n+            )\n+        )?\n         (    (options{warnWhenFollowAmbig=false;} :     (    LT^\n                 |    GT^\n                 |    LE^\n                 |    GE^\n                 )\n                 shiftExpression\n-            )*\n-\n+             )*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9635860cd2edd8e45eef73d16e8549af66fc5daa"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9635860cd2edd8e45eef73d16e8549af66fc5daa", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/9635860cd2edd8e45eef73d16e8549af66fc5daa", "committedDate": "2020-07-06T02:31:49Z", "message": "Issue #7290: Add support for enhanced instanceof"}, "afterCommit": {"oid": "8b0a24c5349bfe72716dba3dbfcb289985aa9b0d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8b0a24c5349bfe72716dba3dbfcb289985aa9b0d", "committedDate": "2020-07-06T23:04:04Z", "message": "Issue #7290: Add support for enhanced instanceof"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODQ4NjQ4", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-443848648", "createdAt": "2020-07-07T12:39:30Z", "commit": {"oid": "8b0a24c5349bfe72716dba3dbfcb289985aa9b0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjozOTozMFrOGt8nHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjozOTozMFrOGt8nHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMjE1OA==", "bodyText": "I do not understand why PATTERN appear under IDENT, it should be sibling.\n$ cat Test.java \npublic class Test {\n void foo() {\n  String s = \"\";\n  boolean b = s instanceof String;\n }\n}\n\n$ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.33-all.jar -t Test.java | grep -C 3 instanceof | sed \"s/    |       |   //\"\n|--IDENT -> b [4:10]\n`--ASSIGN -> = [4:12]\n    `--EXPR -> EXPR [4:16]\n        `--LITERAL_INSTANCEOF -> instanceof [4:16]\n            |--IDENT -> s [4:14]\n            `--TYPE -> TYPE [4:27]\n                `--IDENT -> String [4:27]\n\neven in txt inputs you have them as sibling.", "url": "https://github.com/checkstyle/checkstyle/pull/8401#discussion_r450832158", "createdAt": "2020-07-07T12:39:30Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "diffHunk": "@@ -3540,6 +3540,34 @@\n     public static final int COMMENT_CONTENT =\n             GeneratedJavaTokenTypes.COMMENT_CONTENT;\n \n+    /**\n+     * A pattern variable definition; when conditionally matched,\n+     * this variable is assigned with the defined type.\n+     *\n+     * <p>For example:</p>\n+     * <pre>\n+     * if (obj instanceof String str) { }\n+     * </pre>\n+     * <p>parses as:</p>\n+     * <pre>\n+     * LITERAL_IF (if)\n+     *  |--LPAREN (()\n+     *  |--EXPR\n+     *  |   `--LITERAL_INSTANCEOF (instanceof)\n+     *  |       `--IDENT (obj)\n+     *  |           `--PATTERN_VARIABLE_DEF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b0a24c5349bfe72716dba3dbfcb289985aa9b0d"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b0a24c5349bfe72716dba3dbfcb289985aa9b0d", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8b0a24c5349bfe72716dba3dbfcb289985aa9b0d", "committedDate": "2020-07-06T23:04:04Z", "message": "Issue #7290: Add support for enhanced instanceof"}, "afterCommit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ab164222dfa78dcda338650aae67cd4b1f0243df", "committedDate": "2020-07-07T12:48:03Z", "message": "Issue #7290: Add support for enhanced instanceof"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODYxMTEw", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-443861110", "createdAt": "2020-07-07T12:55:33Z", "commit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTA3NDkw", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-443907490", "createdAt": "2020-07-07T13:48:07Z", "commit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzo0ODowN1rOGt_Yxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzo1Mjo0NFrOGt_mTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3NzYzOA==", "bodyText": "This import is not used. What is it for?", "url": "https://github.com/checkstyle/checkstyle/pull/8401#discussion_r450877638", "createdAt": "2020-07-07T13:48:07Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14InstanceofWithPatternMatching.java", "diffHunk": "@@ -1,9 +1,13 @@\n //non-compiled with javac: Compilable with Java14\n package com.puppycrawl.tools.checkstyle.grammar.java14;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.List;\n import java.util.Locale;\n \n+import org.w3c.dom.ls.LSOutput;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3OTQ4Mg==", "bodyText": "java.util.List is also not used.", "url": "https://github.com/checkstyle/checkstyle/pull/8401#discussion_r450879482", "createdAt": "2020-07-07T13:50:35Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14InstanceofWithPatternMatching.java", "diffHunk": "@@ -1,9 +1,13 @@\n //non-compiled with javac: Compilable with Java14\n package com.puppycrawl.tools.checkstyle.grammar.java14;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.List;\n import java.util.Locale;\n \n+import org.w3c.dom.ls.LSOutput;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3NzYzOA=="}, "originalCommit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4MTEwMg==", "bodyText": "Please add a code snippet with the full class name, something like\nif (o instanceof org.example.Foo foo)", "url": "https://github.com/checkstyle/checkstyle/pull/8401#discussion_r450881102", "createdAt": "2020-07-07T13:52:44Z", "author": {"login": "pbludov"}, "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java14/InputJava14InstanceofWithPatternMatching.java", "diffHunk": "@@ -59,18 +63,154 @@ public void setModel(String model) {\n         }\n \n         String[] someString1 = {\"some string\"};\n-        if(someString1 instanceof Object  []) {\n+        if (someString1 instanceof Object[]) {\n             System.out.println(Arrays.toString(someString1));\n         }\n \n         String[][] someString2 = new String[2][3];\n-        if(someString2 instanceof Object[]  []) {\n+        if (someString2 instanceof Object[][]) {\n             System.out.println(Arrays.toString(someString2));\n         }\n \n         String[][][] someString3 = new String[3][4][5];\n-        if(someString3 instanceof Object[][]) {\n+        if (someString3 instanceof Object[][]) {\n             System.out.println(Arrays.toString(someString3));\n         }\n     }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        if (!(o1 instanceof String s) && (o2 instanceof String s)) {} //ok\n+        if (o1 instanceof String s || !(o2 instanceof String s)) {} //ok\n+        b = ((VoidPredicate) () -> o1 instanceof String s).get();\n+\n+        ArrayList<Integer> arrayList = new ArrayList<Integer>();\n+        if (arrayList instanceof ArrayList<Integer> ai) {\n+            System.out.println(\"Blah\");\n+        }\n+\n+        if (!(o1 instanceof String k)) {\n+            return ;\n+        }\n+\n+        if (o1 instanceof String s2) {}\n+\n+\n+        if (!(o1 instanceof String s4)) {\n+            return ;\n+        }\n+\n+        boolean result = (o1 instanceof String a1) ?\n+                (o1 instanceof String a2) : (!(o1 instanceof String a3));\n+\n+        if (!(o1 instanceof String s) ? false : s.length()>0){\n+            System.out.println(\"done\");\n+        }\n+\n+        if ((o1 instanceof String s) ? s.length()>0 : false){\n+            System.out.println(\"done\");\n+        }\n+\n+        if (!(o1 instanceof String s) || !(o2 instanceof Integer i)){\n+        } else {\n+            s.length();\n+            i.intValue();\n+        }\n+\n+        if (!(o1 instanceof String s) || !(o2 instanceof Integer i)){\n+        } else {\n+            s.length();\n+            i.intValue();\n+        }\n+\n+        if (o1 instanceof String s && o2 instanceof Integer in) {\n+            s.length();\n+            in.intValue();\n+        }\n+\n+        L1: {\n+            if (o1 instanceof String s) {\n+                s.length();\n+            } else {\n+                break L1;\n+            }\n+            s.length();\n+        }\n+\n+        {\n+            L2: for ( ;!(o1 instanceof String s); ) {\n+\n+            }\n+\n+            s.length();\n+        }\n+\n+        {\n+            while (!(o1 instanceof String s)) {\n+                L3: break L3;\n+            }\n+\n+            while(o1 instanceof String str) {\n+                str.length();\n+            }\n+        }\n+\n+        if (!new VoidPredicate() { public boolean get() { return o1 instanceof String str\n+                && !str.isEmpty();} }.get()) {\n+            throw new AssertionError();\n+        }\n+\n+        if (!((VoidPredicate) () -> o1 instanceof String str && !str.isEmpty()).get()) {\n+            throw new AssertionError();\n+        }\n+\n+        if (o1 instanceof String j && j.length() == 5 && o2 instanceof Integer z && z == 42) {\n+            System.out.println(j);\n+            System.out.println(z);\n+        } else {\n+        }\n+\n+        int x = o1 instanceof String j ? j.length() : 2;\n+\n+        x = !(o1 instanceof String j) ? 2 : j.length();\n+\n+        Object ch = null;\n+\n+        for (; o1 instanceof String j; j.length()) {\n+            System.out.println(j);\n+        }\n+\n+        String formatted;\n+        if (o1 instanceof Integer i) formatted = String.format(\"int %d\", i);\n+        else if (o1 instanceof Byte by) formatted = String.format(\"byte %d\", by);\n+        else if (o1 instanceof Long l) formatted = String.format(\"long %d\", l);\n+        else if (o1 instanceof Double d) formatted = String.format(\"double %f\", d);\n+        else if (o1 instanceof String s) formatted = String.format(\"String %s\", s);\n+        else formatted = String.format(\"Something else \"+ o1.toString());\n+\n+        do {\n+            L4: break L4;\n+        } while (!(o1 instanceof String s));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893bcc865eda349955bdc1771b98e90e7beb1072", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/893bcc865eda349955bdc1771b98e90e7beb1072", "committedDate": "2020-07-07T15:54:52Z", "message": "Issue #7290: Add support for enhanced instanceof"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab164222dfa78dcda338650aae67cd4b1f0243df", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ab164222dfa78dcda338650aae67cd4b1f0243df", "committedDate": "2020-07-07T12:48:03Z", "message": "Issue #7290: Add support for enhanced instanceof"}, "afterCommit": {"oid": "893bcc865eda349955bdc1771b98e90e7beb1072", "author": {"user": {"login": "nmancus1", "name": "Nick Mancuso"}}, "url": "https://github.com/checkstyle/checkstyle/commit/893bcc865eda349955bdc1771b98e90e7beb1072", "committedDate": "2020-07-07T15:54:52Z", "message": "Issue #7290: Add support for enhanced instanceof"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjI4MjI2", "url": "https://github.com/checkstyle/checkstyle/pull/8401#pullrequestreview-444228226", "createdAt": "2020-07-07T20:32:23Z", "commit": {"oid": "893bcc865eda349955bdc1771b98e90e7beb1072"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 430, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}