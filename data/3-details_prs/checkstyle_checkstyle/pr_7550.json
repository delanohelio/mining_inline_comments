{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODEwOTc5", "number": 7550, "title": "Issue #5832: add javadoc and xdoc example for LambdaParameterName", "bodyText": "#5832", "createdAt": "2020-02-16T10:44:39Z", "url": "https://github.com/checkstyle/checkstyle/pull/7550", "merged": true, "mergeCommit": {"oid": "f390b2e1faa75407284dc7315b96a20550f0c7b7"}, "closed": true, "closedAt": "2020-02-18T12:02:30Z", "author": {"login": "0blivious"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcE-2tXgFqTM1OTQyNzQzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFgjENAFqTM2MDI3NjU3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDI3NDM2", "url": "https://github.com/checkstyle/checkstyle/pull/7550#pullrequestreview-359427436", "createdAt": "2020-02-16T20:35:39Z", "commit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDI5Nzg0", "url": "https://github.com/checkstyle/checkstyle/pull/7550#pullrequestreview-359429784", "createdAt": "2020-02-16T21:17:49Z", "commit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxNzo0OVrOFqVVfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxOTowMVrOFqVVxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDA3OA==", "bodyText": "name of the parameter in error message is incorrect, looks like it was copypastedfrom previous example.", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934078", "createdAt": "2020-02-16T21:17:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -48,21 +54,20 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * Example of checking with this config:\n+ * Code Example:\n  * </p>\n  * <pre>\n- * public class TestClass {\n- *\n- *     Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim();\n- *\n- *     Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase(); // violation\n- *\n- *     public boolean testMethod(String sentence) {\n- *         return Stream.of(sentence.split(\" \"))\n- *             .map(word -&gt; word.trim())\n- *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation\n- *     }\n+ * class MyClass {\n+ *   Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim(); // OK\n+ *   Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase();\n+ *           // violation, name '_s' must match pattern '^[a-z]([a-zA-Z]+)*$'\n  *\n+ *   public boolean myMethod(String sentence) {\n+ *     return Stream.of(sentence.split(\" \"))\n+ *             .map(word -&gt; word.trim()) // OK\n+ *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation, name '_s'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDEyNg==", "bodyText": "It is better to put comment on the line where violation is, now it looks weird", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934126", "createdAt": "2020-02-16T21:18:40Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -38,6 +38,12 @@\n  * <pre>\n  * &lt;module name=\"LambdaParameterName\"/&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * Function&lt;String, String&gt; function1 = s -&gt; s.toLowerCase(); // OK\n+ * Function&lt;String, String&gt; function2 = S -&gt; S.toLowerCase();\n+ *         // violation, name 'S' must match pattern '^[a-z][a-zA-Z0-9]*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDE0OQ==", "bodyText": "Same here, violation on empty line", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934149", "createdAt": "2020-02-16T21:19:01Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -48,21 +54,20 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * Example of checking with this config:\n+ * Code Example:\n  * </p>\n  * <pre>\n- * public class TestClass {\n- *\n- *     Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim();\n- *\n- *     Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase(); // violation\n- *\n- *     public boolean testMethod(String sentence) {\n- *         return Stream.of(sentence.split(\" \"))\n- *             .map(word -&gt; word.trim())\n- *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation\n- *     }\n+ * class MyClass {\n+ *   Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim(); // OK\n+ *   Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase();\n+ *           // violation, name '_s' must match pattern '^[a-z]([a-zA-Z]+)*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1", "author": {"user": null}, "url": "https://github.com/checkstyle/checkstyle/commit/54eb32273eadb42c75fea173432d9ccd81c35ac1", "committedDate": "2020-02-16T10:17:24Z", "message": "Issue #5832: add javadoc and xdoc example for LambdaParameterName"}, "afterCommit": {"oid": "f5a333b392ac52f8547f693dc2cbb513c60d82ad", "author": {"user": null}, "url": "https://github.com/checkstyle/checkstyle/commit/f5a333b392ac52f8547f693dc2cbb513c60d82ad", "committedDate": "2020-02-17T14:37:42Z", "message": "Issue #5832: add javadoc and xdoc example for LambdaParameterName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5381149a66dcec98630d3399fcf3a7e5ea54e47", "author": {"user": null}, "url": "https://github.com/checkstyle/checkstyle/commit/a5381149a66dcec98630d3399fcf3a7e5ea54e47", "committedDate": "2020-02-17T14:47:14Z", "message": "Issue #5832: add javadoc and xdoc example for LambdaParameterName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5a333b392ac52f8547f693dc2cbb513c60d82ad", "author": {"user": null}, "url": "https://github.com/checkstyle/checkstyle/commit/f5a333b392ac52f8547f693dc2cbb513c60d82ad", "committedDate": "2020-02-17T14:37:42Z", "message": "Issue #5832: add javadoc and xdoc example for LambdaParameterName"}, "afterCommit": {"oid": "a5381149a66dcec98630d3399fcf3a7e5ea54e47", "author": {"user": null}, "url": "https://github.com/checkstyle/checkstyle/commit/a5381149a66dcec98630d3399fcf3a7e5ea54e47", "committedDate": "2020-02-17T14:47:14Z", "message": "Issue #5832: add javadoc and xdoc example for LambdaParameterName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5ODAwNTU1", "url": "https://github.com/checkstyle/checkstyle/pull/7550#pullrequestreview-359800555", "createdAt": "2020-02-17T15:06:23Z", "commit": {"oid": "a5381149a66dcec98630d3399fcf3a7e5ea54e47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjQ4ODUy", "url": "https://github.com/checkstyle/checkstyle/pull/7550#pullrequestreview-360248852", "createdAt": "2020-02-18T11:02:56Z", "commit": {"oid": "a5381149a66dcec98630d3399fcf3a7e5ea54e47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjc2NTc0", "url": "https://github.com/checkstyle/checkstyle/pull/7550#pullrequestreview-360276574", "createdAt": "2020-02-18T11:50:58Z", "commit": {"oid": "a5381149a66dcec98630d3399fcf3a7e5ea54e47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1005, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}