{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MzIwNzAy", "number": 8696, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwODo1NTo1NlrOEYyJEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwOTowNTozMFrOEYyMFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDIyODAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwODo1NTo1NlrOHBQzug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMToyNjowMFrOHBRuGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NjAxMA==", "bodyText": "Extra space before .", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471086010", "createdAt": "2020-08-16T08:55:56Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -476,26 +492,115 @@ private static DetailAST getLastLambdaToken(DetailAST lambda) {\n     }\n \n     /**\n-     * Checks if switch member (case or default statement) is single-line statement, e.g.:\n+     * Checks if current lambda belongs to a switch rule, e.g.:\n      * <p>\n      * {@code\n-     * case 1: doSomeStuff(); break;\n-     * case 2: doSomeStuff(); break;\n+     * case 1 ->  monthString = \"January\";\n+     * }\n+     * </p>\n+     *\n+     * @param lambda {@link TokenTypes#LAMBDA}.\n+     * @return true if current lambda belongs to a switch rule.\n+     */\n+    private static boolean isSwitchRuleLambda(DetailAST lambda) {\n+        return lambda.getParent().getType() == TokenTypes.SWITCH_RULE;\n+    }\n+\n+    /**\n+     * Checks if current expression is a switch labeled expression . If so,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwMDk1Mw==", "bodyText": "Fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471100953", "createdAt": "2020-08-16T11:26:00Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -476,26 +492,115 @@ private static DetailAST getLastLambdaToken(DetailAST lambda) {\n     }\n \n     /**\n-     * Checks if switch member (case or default statement) is single-line statement, e.g.:\n+     * Checks if current lambda belongs to a switch rule, e.g.:\n      * <p>\n      * {@code\n-     * case 1: doSomeStuff(); break;\n-     * case 2: doSomeStuff(); break;\n+     * case 1 ->  monthString = \"January\";\n+     * }\n+     * </p>\n+     *\n+     * @param lambda {@link TokenTypes#LAMBDA}.\n+     * @return true if current lambda belongs to a switch rule.\n+     */\n+    private static boolean isSwitchRuleLambda(DetailAST lambda) {\n+        return lambda.getParent().getType() == TokenTypes.SWITCH_RULE;\n+    }\n+\n+    /**\n+     * Checks if current expression is a switch labeled expression . If so,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NjAxMA=="}, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDIzMTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwOTowMDozOFrOHBQ1pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMToyNTo1NVrOHBRuCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NjUwMg==", "bodyText": "This code duplicates method isSwitchRuleLambda. Should this method be used here?", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471086502", "createdAt": "2020-08-16T09:00:38Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -476,26 +492,115 @@ private static DetailAST getLastLambdaToken(DetailAST lambda) {\n     }\n \n     /**\n-     * Checks if switch member (case or default statement) is single-line statement, e.g.:\n+     * Checks if current lambda belongs to a switch rule, e.g.:\n      * <p>\n      * {@code\n-     * case 1: doSomeStuff(); break;\n-     * case 2: doSomeStuff(); break;\n+     * case 1 ->  monthString = \"January\";\n+     * }\n+     * </p>\n+     *\n+     * @param lambda {@link TokenTypes#LAMBDA}.\n+     * @return true if current lambda belongs to a switch rule.\n+     */\n+    private static boolean isSwitchRuleLambda(DetailAST lambda) {\n+        return lambda.getParent().getType() == TokenTypes.SWITCH_RULE;\n+    }\n+\n+    /**\n+     * Checks if current expression is a switch labeled expression . If so,\n+     * braces are not allowed e.g.:\n+     * <p>\n+     * {@code\n+     * case 1 -> 4;\n+     * }\n+     * </p>\n+     *\n+     * @param ast the ast to check\n+     * @return true if current expression is a switch labeled expression.\n+     */\n+    private static boolean isSwitchLabeledExpression(DetailAST ast) {\n+        final DetailAST parent = ast.getParent();\n+        return switchRuleHasSingleExpression(parent);\n+    }\n+\n+    /**\n+     * Checks if current switch labeled expression contains only a single expression.\n+     *\n+     * @param switchRule {@link TokenTypes#SWITCH_RULE}.\n+     * @return true if current switch rule has a single expression.\n+     */\n+    private static boolean switchRuleHasSingleExpression(DetailAST switchRule) {\n+        final DetailAST possibleExpression = switchRule.findFirstToken(TokenTypes.EXPR);\n+        return possibleExpression != null\n+                && possibleExpression.getFirstChild().getFirstChild() == null;\n+    }\n+\n+    /**\n+     * Checks if switch member (case or default statement) in a switch rule or\n+     * case group is on a single line.\n+     *\n+     * @param statement {@link TokenTypes#LITERAL_CASE case statement} or\n+     * {@link TokenTypes#LITERAL_DEFAULT default statement}.\n+     * @return true if current switch member is single-line statement.\n+     */\n+    private static boolean isSingleLineSwitchMember(DetailAST statement) {\n+        final boolean isInSwitchRule =\n+            statement.getParent().getType() == TokenTypes.SWITCH_RULE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwMDkzOA==", "bodyText": "I've changed the method's name to  isInSwitchRule(), and I've used it in three more places.  Thanks for the recommendation.", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471100938", "createdAt": "2020-08-16T11:25:55Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -476,26 +492,115 @@ private static DetailAST getLastLambdaToken(DetailAST lambda) {\n     }\n \n     /**\n-     * Checks if switch member (case or default statement) is single-line statement, e.g.:\n+     * Checks if current lambda belongs to a switch rule, e.g.:\n      * <p>\n      * {@code\n-     * case 1: doSomeStuff(); break;\n-     * case 2: doSomeStuff(); break;\n+     * case 1 ->  monthString = \"January\";\n+     * }\n+     * </p>\n+     *\n+     * @param lambda {@link TokenTypes#LAMBDA}.\n+     * @return true if current lambda belongs to a switch rule.\n+     */\n+    private static boolean isSwitchRuleLambda(DetailAST lambda) {\n+        return lambda.getParent().getType() == TokenTypes.SWITCH_RULE;\n+    }\n+\n+    /**\n+     * Checks if current expression is a switch labeled expression . If so,\n+     * braces are not allowed e.g.:\n+     * <p>\n+     * {@code\n+     * case 1 -> 4;\n+     * }\n+     * </p>\n+     *\n+     * @param ast the ast to check\n+     * @return true if current expression is a switch labeled expression.\n+     */\n+    private static boolean isSwitchLabeledExpression(DetailAST ast) {\n+        final DetailAST parent = ast.getParent();\n+        return switchRuleHasSingleExpression(parent);\n+    }\n+\n+    /**\n+     * Checks if current switch labeled expression contains only a single expression.\n+     *\n+     * @param switchRule {@link TokenTypes#SWITCH_RULE}.\n+     * @return true if current switch rule has a single expression.\n+     */\n+    private static boolean switchRuleHasSingleExpression(DetailAST switchRule) {\n+        final DetailAST possibleExpression = switchRule.findFirstToken(TokenTypes.EXPR);\n+        return possibleExpression != null\n+                && possibleExpression.getFirstChild().getFirstChild() == null;\n+    }\n+\n+    /**\n+     * Checks if switch member (case or default statement) in a switch rule or\n+     * case group is on a single line.\n+     *\n+     * @param statement {@link TokenTypes#LITERAL_CASE case statement} or\n+     * {@link TokenTypes#LITERAL_DEFAULT default statement}.\n+     * @return true if current switch member is single-line statement.\n+     */\n+    private static boolean isSingleLineSwitchMember(DetailAST statement) {\n+        final boolean isInSwitchRule =\n+            statement.getParent().getType() == TokenTypes.SWITCH_RULE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NjUwMg=="}, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDIzNTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwOTowNTozMFrOHBQ3nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMToyNjowOVrOHBRuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NzAwNQ==", "bodyText": "getLastSibling == parent.getLastChild(), no reason for new method here.", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471087005", "createdAt": "2020-08-16T09:05:30Z", "author": {"login": "pbludov"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -293,9 +298,19 @@ private boolean isEmptyLoopBodyAllowed(DetailAST ast) {\n      */\n     private static boolean hasUnbracedStatements(DetailAST ast) {\n         final DetailAST nextSibling = ast.getNextSibling();\n-        return nextSibling != null\n+        final DetailAST parent = ast.getParent();\n+        boolean result = false;\n+\n+        if (parent.getType() == TokenTypes.SWITCH_RULE) {\n+            final DetailAST lastSibling = getLastSibling(ast);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwMDk1OA==", "bodyText": "Done.", "url": "https://github.com/checkstyle/checkstyle/pull/8696#discussion_r471100958", "createdAt": "2020-08-16T11:26:09Z", "author": {"login": "nmancus1"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "diffHunk": "@@ -293,9 +298,19 @@ private boolean isEmptyLoopBodyAllowed(DetailAST ast) {\n      */\n     private static boolean hasUnbracedStatements(DetailAST ast) {\n         final DetailAST nextSibling = ast.getNextSibling();\n-        return nextSibling != null\n+        final DetailAST parent = ast.getParent();\n+        boolean result = false;\n+\n+        if (parent.getType() == TokenTypes.SWITCH_RULE) {\n+            final DetailAST lastSibling = getLastSibling(ast);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NzAwNQ=="}, "originalCommit": {"oid": "a5aec537228b464ae9c8753a5cd24fdaef8f097a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 803, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}