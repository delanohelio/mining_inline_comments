{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODEwOTc5", "number": 7550, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxNzo0OVrODgPDJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxOTowMVrODgPDXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTI3NTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxNzo0OVrOFqVVfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0Nzo0OFrOFqm9jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDA3OA==", "bodyText": "name of the parameter in error message is incorrect, looks like it was copypastedfrom previous example.", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934078", "createdAt": "2020-02-16T21:17:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -48,21 +54,20 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * Example of checking with this config:\n+ * Code Example:\n  * </p>\n  * <pre>\n- * public class TestClass {\n- *\n- *     Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim();\n- *\n- *     Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase(); // violation\n- *\n- *     public boolean testMethod(String sentence) {\n- *         return Stream.of(sentence.split(\" \"))\n- *             .map(word -&gt; word.trim())\n- *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation\n- *     }\n+ * class MyClass {\n+ *   Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim(); // OK\n+ *   Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase();\n+ *           // violation, name '_s' must match pattern '^[a-z]([a-zA-Z]+)*$'\n  *\n+ *   public boolean myMethod(String sentence) {\n+ *     return Stream.of(sentence.split(\" \"))\n+ *             .map(word -&gt; word.trim()) // OK\n+ *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation, name '_s'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMjg2MA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r380222860", "createdAt": "2020-02-17T14:47:48Z", "author": {"login": "0blivious"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -48,21 +54,20 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * Example of checking with this config:\n+ * Code Example:\n  * </p>\n  * <pre>\n- * public class TestClass {\n- *\n- *     Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim();\n- *\n- *     Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase(); // violation\n- *\n- *     public boolean testMethod(String sentence) {\n- *         return Stream.of(sentence.split(\" \"))\n- *             .map(word -&gt; word.trim())\n- *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation\n- *     }\n+ * class MyClass {\n+ *   Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim(); // OK\n+ *   Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase();\n+ *           // violation, name '_s' must match pattern '^[a-z]([a-zA-Z]+)*$'\n  *\n+ *   public boolean myMethod(String sentence) {\n+ *     return Stream.of(sentence.split(\" \"))\n+ *             .map(word -&gt; word.trim()) // OK\n+ *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation, name '_s'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDA3OA=="}, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTI3NjI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxODo0MFrOFqVVrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0Nzo1MlrOFqm9sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDEyNg==", "bodyText": "It is better to put comment on the line where violation is, now it looks weird", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934126", "createdAt": "2020-02-16T21:18:40Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -38,6 +38,12 @@\n  * <pre>\n  * &lt;module name=\"LambdaParameterName\"/&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * Function&lt;String, String&gt; function1 = s -&gt; s.toLowerCase(); // OK\n+ * Function&lt;String, String&gt; function2 = S -&gt; S.toLowerCase();\n+ *         // violation, name 'S' must match pattern '^[a-z][a-zA-Z0-9]*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMjg5Ng==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r380222896", "createdAt": "2020-02-17T14:47:52Z", "author": {"login": "0blivious"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -38,6 +38,12 @@\n  * <pre>\n  * &lt;module name=\"LambdaParameterName\"/&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * Function&lt;String, String&gt; function1 = s -&gt; s.toLowerCase(); // OK\n+ * Function&lt;String, String&gt; function2 = S -&gt; S.toLowerCase();\n+ *         // violation, name 'S' must match pattern '^[a-z][a-zA-Z0-9]*$'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDEyNg=="}, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTI3NjQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxOTowMVrOFqVVxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToxOTowMVrOFqVVxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDE0OQ==", "bodyText": "Same here, violation on empty line", "url": "https://github.com/checkstyle/checkstyle/pull/7550#discussion_r379934149", "createdAt": "2020-02-16T21:19:01Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -48,21 +54,20 @@\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n- * Example of checking with this config:\n+ * Code Example:\n  * </p>\n  * <pre>\n- * public class TestClass {\n- *\n- *     Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim();\n- *\n- *     Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase(); // violation\n- *\n- *     public boolean testMethod(String sentence) {\n- *         return Stream.of(sentence.split(\" \"))\n- *             .map(word -&gt; word.trim())\n- *             .anyMatch(Word -&gt; \"in\".equals(Word)); // violation\n- *     }\n+ * class MyClass {\n+ *   Function&lt;String, String&gt; function1 = str -&gt; str.toUpperCase().trim(); // OK\n+ *   Function&lt;String, String&gt; function2 = _s -&gt; _s.trim().toUpperCase();\n+ *           // violation, name '_s' must match pattern '^[a-z]([a-zA-Z]+)*$'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54eb32273eadb42c75fea173432d9ccd81c35ac1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1320, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}