{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTI5Mjkw", "number": 7789, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozNzoyNlrODmFHEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTo1ODowMlrODm8mJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU2MjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozNzoyNlrOFzT6Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMTowNjowOVrOFzUjMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk0Mg==", "bodyText": "add space between ) and {", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389347942", "createdAt": "2020-03-08T08:37:26Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1(){ // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODM4Nw==", "bodyText": "I am done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358387", "createdAt": "2020-03-08T11:06:09Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1(){ // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk0Mg=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU2MjEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozNzozNVrOFzT6bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMTowNjoxNVrOFzUjNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk0OA==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389347948", "createdAt": "2020-03-08T08:37:35Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1(){ // ok\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2(){ // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODM5MA==", "bodyText": "I am done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358390", "createdAt": "2020-03-08T11:06:15Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1(){ // ok\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2(){ // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk0OA=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU2MjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozNzo0NlrOFzT6eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMTowNjoyMFrOFzUjOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk2MA==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389347960", "createdAt": "2020-03-08T08:37:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +98,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODM5Mw==", "bodyText": "I am done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358393", "createdAt": "2020-03-08T11:06:20Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +98,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk2MA=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU2MjM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozNzo1NVrOFzT6hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMTowNjoyOVrOFzUjRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk3Mw==", "bodyText": "and here", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389347973", "createdAt": "2020-03-08T08:37:55Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +98,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // violation\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // ok", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODQwNg==", "bodyText": "I am done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358406", "createdAt": "2020-03-08T11:06:29Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +98,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // violation\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test(){ // ok", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Nzk3Mw=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU2MzAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODozOTowMVrOFzT62A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMToxMDowOVrOFzUkHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0ODA1Ng==", "bodyText": "From check description\nThis check will log a violation if using the @inheritDoc tag on a method that is not valid (ex: private, or static method).\nPlease add examples to show this", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389348056", "createdAt": "2020-03-08T08:39:01Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODQyMQ==", "bodyText": "I am done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358421", "createdAt": "2020-03-08T11:06:36Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0ODA1Ng=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1ODYyMQ==", "bodyText": "and update the first post~", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389358621", "createdAt": "2020-03-08T11:10:09Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,23 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0ODA1Ng=="}, "originalCommit": {"oid": "77aae36ff06631c475bf356aaf86b0d2516b2cee"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjkxOTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxODozNTozOVrOFzWvAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzowNzo0NVrOFzmM-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NDE3OA==", "bodyText": "Violation for test2 is \"no override\", but for private and static methods violation will be different. Please add violation comments to show it for all examples above.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389394178", "createdAt": "2020-03-08T18:35:39Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public static void test4() { // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69b9dc5deafdd926e253dd8e084077d16699e77a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0NzYwOQ==", "bodyText": "I am done.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389647609", "createdAt": "2020-03-09T13:07:45Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public static void test4() { // violation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NDE3OA=="}, "originalCommit": {"oid": "69b9dc5deafdd926e253dd8e084077d16699e77a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjkyMTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxODozOTozNVrOFzWwOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzowNzo1MVrOFzmNJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NDQ5MQ==", "bodyText": "Doc for this property says that\nThis property will only check classes, interfaces, etc. that do not contain the extends or implements keyword or are not anonymous classes.\nplease add here comment why this is not cause violation", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389394491", "createdAt": "2020-03-08T18:39:35Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // violation\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69b9dc5deafdd926e253dd8e084077d16699e77a"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0NzY1Mw==", "bodyText": "I am done.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r389647653", "createdAt": "2020-03-09T13:07:51Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // violation\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NDQ5MQ=="}, "originalCommit": {"oid": "69b9dc5deafdd926e253dd8e084077d16699e77a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzY5ODYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzozMjo1NVrOF0D1mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTowMToxNFrOF0KMrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzMzE0Ng==", "bodyText": "not be I guess it should be should not be", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390133146", "createdAt": "2020-03-10T07:32:55Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,33 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, not be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzNzM1OA==", "bodyText": "sorry, not be is incorrect, which causes a mistake. I think should be annotated with &#64;Override is correct and is what I want to express", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390237358", "createdAt": "2020-03-10T11:01:14Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,33 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, not be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzMzE0Ng=="}, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzcwMzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzozNToxOFrOF0D4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjowMzowMlrOF0L8jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzMzk0Mg==", "bodyText": "only checks methods overridden from java.lang.Object\nIt is not clear.\nThis is ignored because class extends other class", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390133942", "createdAt": "2020-03-10T07:35:18Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, only checks methods overridden from java.lang.Object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2NTk5OQ==", "bodyText": "ok, I correct this.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390265999", "createdAt": "2020-03-10T12:03:02Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, only checks methods overridden from java.lang.Object", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzMzk0Mg=="}, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzcwNTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzozNjowOVrOF0D56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTowMjozM1rOF0KPXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNDI1MA==", "bodyText": "should not be here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390134250", "createdAt": "2020-03-10T07:36:09Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzODA0NQ==", "bodyText": "should be annotated with &#64;Override  here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390238045", "createdAt": "2020-03-10T11:02:33Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNDI1MA=="}, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzcwNzM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNzozNjo1MFrOF0D62A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjowMzoxNFrOF0L88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNDQ4OA==", "bodyText": "This property will only check classes, interfaces, etc. that do not contain the extends or implements keyword or are not anonymous classes.\nPlease add example for interface and anonymous class", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390134488", "createdAt": "2020-03-10T07:36:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2NjA5Ng==", "bodyText": "ok , I add these.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390266096", "createdAt": "2020-03-10T12:03:14Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +108,24 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, not be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test extends SuperClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEzNDQ4OA=="}, "originalCommit": {"oid": "30f779a6c2fda5c58cdbdbca51af7ae6c87f91fa"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODU3MjExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoxMjo0NFrOF0MO-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo0OToxM1rOF0SVaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MDcxNQ==", "bodyText": "Please change class/interface names in this example, they all are \"Test\".\nPlease make them different", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390270715", "createdAt": "2020-03-10T12:12:44Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,48 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      public abstract void test(); // violation, should be annotated with &#64;Override\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, is ignored because class extends other class\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test implements SuperInterface {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, is ignored because class implements interface\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3MDY2NQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390370665", "createdAt": "2020-03-10T14:49:13Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,48 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      public abstract void test(); // violation, should be annotated with &#64;Override\n+ * }\n+ *\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, is ignored because class extends other class\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test implements SuperInterface {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test() { // OK, is ignored because class implements interface\n+ *\n+ *     }\n+ * }\n+ *\n+ * class Test {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MDcxNQ=="}, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODU3NDc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoxMzozN1rOF0MQoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo0ODo1OFrOF0SUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MTEzNw==", "bodyText": "// that is not valid I think this can be removed", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390271137", "createdAt": "2020-03-10T12:13:37Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation, using the &#64;inheritDoc tag on private method\n+ *                            // that is not valid\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public static void test4() { // violation, using the &#64;inheritDoc tag on static method\n+ *                                  // that is not valid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3MDQ1OQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390370459", "createdAt": "2020-03-10T14:48:58Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation, using the &#64;inheritDoc tag on private method\n+ *                            // that is not valid\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public static void test4() { // violation, using the &#64;inheritDoc tag on static method\n+ *                                  // that is not valid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MTEzNw=="}, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODU3NTg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoxNDowMFrOF0MRVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo0ODo1M1rOF0SUQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MTMxNw==", "bodyText": "// that is not valid can be removed here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390271317", "createdAt": "2020-03-10T12:14:00Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation, using the &#64;inheritDoc tag on private method\n+ *                            // that is not valid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3MDM3MQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390370371", "createdAt": "2020-03-10T14:48:53Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -72,6 +72,32 @@\n  * <pre>\n  * &lt;module name=&quot;MissingOverride&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test extends SuperClass {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     &#64;Override\n+ *     public void test1() { // OK\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void test2() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     private void test3() { // violation, using the &#64;inheritDoc tag on private method\n+ *                            // that is not valid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MTMxNw=="}, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODU4MjgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoxNjoyNVrOF0MVrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDo0ODoxMlrOF0SSCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MjQyOQ==", "bodyText": "public abstract please remove these redundant modifiers, it is public and abstract by default", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390272429", "createdAt": "2020-03-10T12:16:25Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,48 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      public abstract void test(); // violation, should be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2OTgwMQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390369801", "createdAt": "2020-03-10T14:48:12Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,48 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      public abstract void test(); // violation, should be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MjQyOQ=="}, "originalCommit": {"oid": "dceb8c8eca673db9b94472ae96c82eaf173ba72d"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTQ4ODAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo0NzozMVrOF0VFrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjoxODo0N1rOF0WfVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxNTc5MQ==", "bodyText": "there is an extra space in indentation", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390415791", "createdAt": "2020-03-10T15:47:31Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,47 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test1 {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test2 {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      void test(); // violation, should be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6b35014fe7ff5bfc9e0fb4bf37b04e41b25e436"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzODc0MA==", "bodyText": "done and have updated first post~", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390438740", "createdAt": "2020-03-10T16:18:47Z", "author": {"login": "HuGanghui"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "diffHunk": "@@ -81,6 +107,47 @@\n  *       value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * class Test1 {\n+ *\n+ *     &#47;** {&#64;inheritDoc} *&#47;\n+ *     public void equals() { // violation, should be annotated with &#64;Override\n+ *\n+ *     }\n+ * }\n+ *\n+ * interface Test2 {\n+ *\n+ *      &#47;** {&#64;inheritDoc} *&#47;\n+ *      void test(); // violation, should be annotated with &#64;Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxNTc5MQ=="}, "originalCommit": {"oid": "a6b35014fe7ff5bfc9e0fb4bf37b04e41b25e436"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTY1MTMxOnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTo1Njo1N1rOF0qC9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNjo1OTo0NVrOF0rEfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTE1Ng==", "bodyText": "Please fix indentation for 2 lines above - it should not be indented from previous tag, they should be on same indentation level.", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390759156", "createdAt": "2020-03-11T05:56:57Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -738,7 +738,32 @@ public static final int COUNTER = 10; // violation\n         <source>\n &lt;module name=&quot;MissingOverride&quot;/&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NTkzMw==", "bodyText": "ok, done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390775933", "createdAt": "2020-03-11T06:59:45Z", "author": {"login": "HuGanghui"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -738,7 +738,32 @@ public static final int COUNTER = 10; // violation\n         <source>\n &lt;module name=&quot;MissingOverride&quot;/&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTE1Ng=="}, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTY1MTU4OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTo1NzoxMVrOF0qDGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNjo1OTo1MVrOF0rEmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTE5NQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390759195", "createdAt": "2020-03-11T05:57:11Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -738,7 +738,32 @@ public static final int COUNTER = 10; // violation\n         <source>\n &lt;module name=&quot;MissingOverride&quot;/&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>\n+class Test extends SuperClass {\n \n+    /** {@inheritDoc} */\n+    @Override\n+    public void test1() { // OK\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void test2() { // violation, should be annotated with @Override\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    private void test3() { // violation, using the @inheritDoc tag on private method\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    public static void test4() { // violation, using the @inheritDoc tag on static method\n+\n+    }\n+}\n+          </source>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NTk2Mg==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390775962", "createdAt": "2020-03-11T06:59:51Z", "author": {"login": "HuGanghui"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -738,7 +738,32 @@ public static final int COUNTER = 10; // violation\n         <source>\n &lt;module name=&quot;MissingOverride&quot;/&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>\n+class Test extends SuperClass {\n \n+    /** {@inheritDoc} */\n+    @Override\n+    public void test1() { // OK\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void test2() { // violation, should be annotated with @Override\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    private void test3() { // violation, using the @inheritDoc tag on private method\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    public static void test4() { // violation, using the @inheritDoc tag on static method\n+\n+    }\n+}\n+          </source>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTE5NQ=="}, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTY1MjY1OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTo1Nzo1MlrOF0qDvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNjo1OTo1NlrOF0rEsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTM1OA==", "bodyText": "same here - 2 lines with indentation", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390759358", "createdAt": "2020-03-11T05:57:52Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -749,6 +774,48 @@ public static final int COUNTER = 10; // violation\n       value=&quot;true&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NTk4Nw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390775987", "createdAt": "2020-03-11T06:59:56Z", "author": {"login": "HuGanghui"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -749,6 +774,48 @@ public static final int COUNTER = 10; // violation\n       value=&quot;true&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTM1OA=="}, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTY1Mjg0OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_annotation.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTo1ODowMlrOF0qD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzowMDowMFrOF0rExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTQwMg==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390759402", "createdAt": "2020-03-11T05:58:02Z", "author": {"login": "strkkk"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -749,6 +774,48 @@ public static final int COUNTER = 10; // violation\n       value=&quot;true&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>\n+class Test1 {\n+\n+    /** {@inheritDoc} */\n+    public void equals() { // violation, should be annotated with @Override\n+\n+    }\n+}\n+\n+interface Test2 {\n+\n+    /** {@inheritDoc} */\n+    void test(); // violation, should be annotated with @Override\n+}\n+\n+class Test3 extends SuperClass {\n+\n+    /** {@inheritDoc} */\n+    public void test() { // OK, is ignored because class extends other class\n+\n+    }\n+}\n+\n+class Test4 implements SuperInterface {\n+\n+    /** {@inheritDoc} */\n+    public void test() { // OK, is ignored because class implements interface\n+\n+    }\n+}\n+\n+class Test5 {\n+    Runnable r = new Runnable() {\n+\n+        /** {@inheritDoc} */\n+        public void run() { // OK, is ignored because class is anonymous class\n+\n+        }\n+    };\n+}\n+          </source>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NjAwNw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7789#discussion_r390776007", "createdAt": "2020-03-11T07:00:00Z", "author": {"login": "HuGanghui"}, "path": "src/xdocs/config_annotation.xml", "diffHunk": "@@ -749,6 +774,48 @@ public static final int COUNTER = 10; // violation\n       value=&quot;true&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+          <p>Example:</p>\n+          <source>\n+class Test1 {\n+\n+    /** {@inheritDoc} */\n+    public void equals() { // violation, should be annotated with @Override\n+\n+    }\n+}\n+\n+interface Test2 {\n+\n+    /** {@inheritDoc} */\n+    void test(); // violation, should be annotated with @Override\n+}\n+\n+class Test3 extends SuperClass {\n+\n+    /** {@inheritDoc} */\n+    public void test() { // OK, is ignored because class extends other class\n+\n+    }\n+}\n+\n+class Test4 implements SuperInterface {\n+\n+    /** {@inheritDoc} */\n+    public void test() { // OK, is ignored because class implements interface\n+\n+    }\n+}\n+\n+class Test5 {\n+    Runnable r = new Runnable() {\n+\n+        /** {@inheritDoc} */\n+        public void run() { // OK, is ignored because class is anonymous class\n+\n+        }\n+    };\n+}\n+          </source>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc1OTQwMg=="}, "originalCommit": {"oid": "7f4015096fcdf115ebac0f27d3930df7b4df3ba9"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1433, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}