{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDQ1NjQx", "number": 8017, "title": "Issue #6582: static final option for AbbreviationAsWordInName", "bodyText": "Issue #6582: static final option for AbbreviationAsWordInName\nCurrently, we are able to ignore static fields and final fields separately, but have no way to ignore only variables that are both static and final, which are usually (but not necessarily) constants.\nI have added a new property ignoreStaticFinal to the check. The default value is true so that anyone running the default configuration (i.e. ignoreStatic and ignoreFinal both true) will not notice any difference in violations as a result of this change.\nNote however that a static final variable will only respect ignoreStaticFinal and not ignoreStatic or ignoreFinal. For example, if ignoreStatic is false but ignoreStaticFinal remains true, only static and non-final variables will be ignored.\nAn alternative implementation is to have ignoreStaticFinal be overshadowed by ignoreStatic and ignoreFinal if either is true. This is what I came up with originally, but it felt less intuitive as we would want ignoreStaticFinal to be respected when it is explicitly set to false.\nRegression (for default configuration): https://wltan.github.io/checkstyle-reports/2020-04-05/abbrword-staticfinal/\nRegression for all other cases - #8017 (comment)\nA potential problem is that if existing projects do not want ignores at all, they will have configured ignoreStatic and ignoreFinal to false but ignoreStaticFinal comes with a default value of true, so there will be a lot of missing violations until the config is updated to make ignoreStaticFinal false as well.\nSample run:\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n\n    <module name=\"TreeWalker\">\n        <module name=\"AbbreviationAsWordInName\">\n            <property name=\"ignoreFinal\" value=\"false\"/>\n            <property name=\"ignoreStatic\" value=\"false\"/>\n            <property name=\"ignoreStaticFinal\" value=\"true\"/>\n            <property name=\"allowedAbbreviationLength\" value=\"0\"/>\n        </module>\n    </module>\n</module>\n\nD:\\checkstyletest>type test\\*.java\n\ntest\\Test.java\n\n\npublic class MyClass {\n    public int AAAA = 1;              // violation, not ignored\n    public final int BBBB = 2;        // violation, not ignored\n    public static int CCCC = 3;       // violation, not ignored\n    public static final int DDDD = 4; // OK, ignored\n}\n\nD:\\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.32-SNAPSHOT-all.jar -c config.xml test\\*.java\nStarting audit...\n[ERROR] D:\\checkstyletest\\test\\Test.java:2:16: Abbreviation in name 'AAAA' must contain no more than '1' consecutive capital letters. [AbbreviationAsWordInName]\n[ERROR] D:\\checkstyletest\\test\\Test.java:3:22: Abbreviation in name 'BBBB' must contain no more than '1' consecutive capital letters. [AbbreviationAsWordInName]\n[ERROR] D:\\checkstyletest\\test\\Test.java:4:23: Abbreviation in name 'CCCC' must contain no more than '1' consecutive capital letters. [AbbreviationAsWordInName]\nAudit done.\nCheckstyle ends with 3 errors.\n\nDocumentation has been updated as follows:", "createdAt": "2020-04-03T08:50:58Z", "url": "https://github.com/checkstyle/checkstyle/pull/8017", "merged": true, "mergeCommit": {"oid": "e73b827248212018a7ca5591053774056f94675e"}, "closed": true, "closedAt": "2020-04-18T19:33:51Z", "author": {"login": "wltan"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcT9nyvgBqjMxOTU2Mjk3OTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcY3Zx0AFqTM5NTkyMjI0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ea0ca7438c3dc14f5d50e75fc05d024637324b5", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/1ea0ca7438c3dc14f5d50e75fc05d024637324b5", "committedDate": "2020-04-03T08:20:59Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fc75c38c09203f96dc46c7960af3ed10d6cdb869", "committedDate": "2020-04-03T09:37:50Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjgyMjQ4", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-387682248", "createdAt": "2020-04-04T09:05:33Z", "commit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwOTowNTozNFrOGAwZlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwOToyMDo1N1rOGAwfQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NjE2Nw==", "bodyText": "modifier -> modifiers", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403446167", "createdAt": "2020-04-04T09:05:34Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -190,6 +217,9 @@\n     /** Allow to skip variables with {@code static} modifier. */\n     private boolean ignoreStatic = true;\n \n+    /** Allow to skip variables with both {@code static} and {@code final} modifier. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NjE4MQ==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403446181", "createdAt": "2020-04-04T09:05:47Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -214,6 +244,15 @@ public void setIgnoreStatic(boolean ignoreStatic) {\n         this.ignoreStatic = ignoreStatic;\n     }\n \n+    /**\n+     * Setter to allow to skip variables with both {@code static} and {@code final} modifier.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NjE5NA==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403446194", "createdAt": "2020-04-04T09:05:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -214,6 +244,15 @@ public void setIgnoreStatic(boolean ignoreStatic) {\n         this.ignoreStatic = ignoreStatic;\n     }\n \n+    /**\n+     * Setter to allow to skip variables with both {@code static} and {@code final} modifier.\n+     * @param ignoreStaticFinal\n+     *        Defines if ignore variables with both 'static' and 'final' modifier or not.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NjkyMg==", "bodyText": "please make separate test inputs for each configuration with configuration explanation comment before type definition, e.g.\n/* \n* Config:\n*  prop1 = true\n* prop2 = false\n*/\npublic class MyTestInput {}   \n\n. It will be easier to understand and to mantain it.", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403446922", "createdAt": "2020-04-04T09:13:31Z", "author": {"login": "strkkk"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "diffHunk": "@@ -226,12 +227,169 @@ public void testTypeAndVariablesAndMethodNamesWithIgnoresStatic() throws Excepti\n             + \",METHOD_DEF,ENUM_DEF,ENUM_CONSTANT_DEF\"\n             + \",PARAMETER_DEF,INTERFACE_DEF,ANNOTATION_DEF\");\n         checkConfig.addAttribute(\"ignoreOverriddenMethods\", \"true\");\n-        final int expectedCapitalCount = 6;\n+        final int expectedCapitalCount = 5;\n+\n+        final String[] expected = {\n+            \"12:16: \" + getWarningMessage(\"AbstractCLASSName\", expectedCapitalCount),\n+            \"32:11: \" + getWarningMessage(\"AbstractINNERRClass\", expectedCapitalCount),\n+            \"37:11: \" + getWarningMessage(\"WellNamedFACTORY\", expectedCapitalCount),\n+            \"38:21: \" + getWarningMessage(\"marazmaticMETHODName\", expectedCapitalCount),\n+            \"58:20: \"\n+                + getWarningMessage(\"serialNUMBER\", expectedCapitalCount), // not in ignore list\n+            \"59:26: \"\n+                + getWarningMessage(\"s1erialNUMBER\", expectedCapitalCount), // no ignore for final\n+        };\n+\n+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInNameType.java\"), expected);\n+    }\n+\n+    @Test\n+    public void testTypeAndVariablesAndMethodNamesWithIgnoresStaticFinal() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NzI2Mw==", "bodyText": "not sure why this logic is removed. In hasIgnoredModifiers method if ignoreStaticFinal is true, we still ignore items if either static or final present, but for interface declaration it removed. Why?", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403447263", "createdAt": "2020-04-04T09:17:08Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -300,23 +339,18 @@ public void visitToken(DetailAST ast) {\n      * @param ast input DetailAST node.\n      * @return true if it is an ignore situation found for given input DetailAST\n      *         node.\n-     * @noinspection SimplifiableIfStatement\n      */\n     private boolean isIgnoreSituation(DetailAST ast) {\n         final DetailAST modifiers = ast.getFirstChild();\n \n         final boolean result;\n         if (ast.getType() == TokenTypes.VARIABLE_DEF) {\n-            if ((ignoreFinal || ignoreStatic)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NzQyNQ==", "bodyText": "please simplify boolean expressions above. Here ignoredStatic and ignoredFinal contain isStatic and isFinal in their initialization.", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403447425", "createdAt": "2020-04-04T09:18:42Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -328,6 +362,29 @@ else if (ast.getType() == TokenTypes.METHOD_DEF) {\n         return result;\n     }\n \n+    /**\n+     * Checks if a variable is to be ignored based on its modifiers.\n+     * @param modifiers modifiers of the variable to be checked\n+     * @return true if there is a modifier to be ignored\n+     */\n+    private boolean hasIgnoredModifiers(DetailAST modifiers) {\n+        final boolean isStatic = modifiers.findFirstToken(TokenTypes.LITERAL_STATIC) != null;\n+        final boolean isFinal = modifiers.findFirstToken(TokenTypes.FINAL) != null;\n+        final boolean ignoredStatic = ignoreStatic && isStatic;\n+        final boolean ignoredFinal = ignoreFinal && isFinal;\n+        final boolean result;\n+        if (ignoreStaticFinal) {\n+            result = isStatic && isFinal\n+                || ignoredFinal\n+                || ignoredStatic;\n+        }\n+        else {\n+            result = ignoredFinal && !isStatic\n+                || ignoredStatic && !isFinal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NzU0MA==", "bodyText": "violation, not ignored -> just violation for all 3 lines above", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403447540", "createdAt": "2020-04-04T09:19:53Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -154,6 +158,29 @@\n  *   String firstXML; // violation, XML abbreviation is not allowed\n  * }\n  * </pre>\n+ * <p>\n+ * To configure to check variables, enforcing no abbreviations\n+ * except for variables that are both static and final (e.g. constants).\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbbreviationAsWordInName\"&gt;\n+ *     &lt;property name=\"tokens\" value=\"VARIABLE_DEF\"/&gt;\n+ *     &lt;property name=\"ignoreFinal\" value=\"false\"/&gt;\n+ *     &lt;property name=\"ignoreStatic\" value=\"false\"/&gt;\n+ *     &lt;property name=\"ignoreStaticFinal\" value=\"true\"/&gt;\n+ *     &lt;property name=\"allowedAbbreviationLength\" value=\"0\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class MyClass {\n+ *     public int AAAA = 1;              // violation, not ignored\n+ *     public final int BBBB = 2;        // violation, not ignored\n+ *     public static int CCCC = 3;       // violation, not ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NzU4OQ==", "bodyText": "(e.g. constants) I think this is redundant, there are no other options :)", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403447589", "createdAt": "2020-04-04T09:20:35Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -154,6 +158,29 @@\n  *   String firstXML; // violation, XML abbreviation is not allowed\n  * }\n  * </pre>\n+ * <p>\n+ * To configure to check variables, enforcing no abbreviations\n+ * except for variables that are both static and final (e.g. constants).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NzYxOQ==", "bodyText": "modifierS", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403447619", "createdAt": "2020-04-04T09:20:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -69,6 +69,10 @@\n  * value is {@code true}.\n  * </li>\n  * <li>\n+ * Property {@code ignoreStaticFinal} - Allow to skip variables with both {@code static} and\n+ * {@code final} modifier. Default value is {@code true}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc75c38c09203f96dc46c7960af3ed10d6cdb869", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/fc75c38c09203f96dc46c7960af3ed10d6cdb869", "committedDate": "2020-04-03T09:37:50Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "5dd01f9b1ec57a4b9cc1ffaccea02828afae6991", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5dd01f9b1ec57a4b9cc1ffaccea02828afae6991", "committedDate": "2020-04-04T10:37:05Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dd01f9b1ec57a4b9cc1ffaccea02828afae6991", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5dd01f9b1ec57a4b9cc1ffaccea02828afae6991", "committedDate": "2020-04-04T10:37:05Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "ce4633bfa4c6a6eb0a816990dd81de89ef509e64", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ce4633bfa4c6a6eb0a816990dd81de89ef509e64", "committedDate": "2020-04-04T12:39:20Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce4633bfa4c6a6eb0a816990dd81de89ef509e64", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/ce4633bfa4c6a6eb0a816990dd81de89ef509e64", "committedDate": "2020-04-04T12:39:20Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "2eadd9af37430efa46a11a8394068cbaee7a9b1b", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2eadd9af37430efa46a11a8394068cbaee7a9b1b", "committedDate": "2020-04-04T12:53:33Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzMzMTY3", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-387733167", "createdAt": "2020-04-04T20:42:49Z", "commit": {"oid": "2eadd9af37430efa46a11a8394068cbaee7a9b1b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDo0Mjo0OVrOGA0lOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDo0Mjo0OVrOGA0lOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDY4Mg==", "bodyText": "it is better now. The only thing missing is // violation comments at lines with violations.", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r403514682", "createdAt": "2020-04-04T20:42:49Z", "author": {"login": "strkkk"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameNoIgnore.java", "diffHunk": "@@ -0,0 +1,134 @@\n+package com.puppycrawl.tools.checkstyle.checks.naming.abbreviationaswordinname;\n+\n+/*\n+ * Config:\n+ * allowedAbbreviationLength = 5\n+ * allowedAbbreviations = NUMBER,MARAZMATIC,VARIABLE\n+ * tokens = CLASS_DEF,VARIABLE_DEF,METHOD_DEF,ENUM_DEF,ENUM_CONSTANT_DEF,\n+ *      PARAMETER_DEF,INTERFACE_DEF,ANNOTATION_DEF\n+ * ignoreStatic = false\n+ * ignoreFinal = false\n+ * ignoreStaticFinal = false\n+ */\n+public class InputAbbreviationAsWordInNameNoIgnore {\n+\n+    abstract class InputAbbreviationAsWordInNameType {\n+    }\n+\n+    abstract class NonAAAAbstractClassName {\n+    }\n+\n+    abstract class FactoryWithBADNAme {\n+    }\n+\n+    abstract class AbstractCLASSName {\n+        abstract class NonAbstractInnerClass {\n+        }\n+    }\n+\n+    abstract class ClassFactory1 {\n+        abstract class WellNamedFactory {\n+        }\n+    }\n+\n+    class NonAbstractClass1 {\n+    }\n+\n+    class AbstractClass1 {\n+    }\n+\n+    class Class1Factory1 {\n+    }\n+\n+    abstract class AbstractClassName3 {\n+        class AbstractINNERRClass {\n+        }\n+    }\n+\n+    abstract class Class3Factory {\n+        class WellNamedFACTORY {\n+            public void marazmaticMETHODName() {\n+                int marazmaticVARIABLEName = 2;\n+                int MARAZMATICVariableName = 1;\n+            }\n+        }\n+    }\n+\n+    interface Directions {\n+      int RIGHT=1;\n+      int LEFT=2;\n+      int UP=3;\n+      int DOWN=4;\n+    }\n+\n+    interface BadNameForInterface\n+    {\n+       void interfaceMethod();\n+    }\n+\n+    abstract static class NonAAAAbstractClassName2 {\n+        public int serialNUMBER = 6;\n+        public final int s1erialNUMBER = 6;\n+        private static int s2erialNUMBER = 6;\n+        private static final int s3erialNUMBER = 6;\n+    }\n+\n+    interface Interface1 {\n+\n+        String VALUEEEE = \"value\"; // in interface this is final/static\n+\n+    }\n+\n+    interface Interface2 {\n+\n+        static String VALUEEEE = \"value\"; // in interface this is final/static\n+\n+    }\n+\n+    interface Interface3 {\n+\n+        final String VALUEEEE = \"value\"; // in interface this is final/static\n+\n+    }\n+\n+    interface Interface4 {\n+\n+        final static String VALUEEEE = \"value\"; // in interface this is final/static\n+\n+    }\n+\n+    class FIleNameFormatException extends Exception {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        public FIleNameFormatException(Exception e) {\n+            super(e);\n+        }\n+    }\n+\n+    class StateX {\n+        int userID;\n+        int scaleX, scaleY, scaleZ;\n+\n+        int getScaleX() {\n+            return this.scaleX;\n+        }\n+    }\n+\n+    @interface Annotation1 {\n+        String VALUE = \"value\"; // in @interface this is final/static\n+    }\n+\n+    @interface Annotation2 {\n+        static String VALUE = \"value\"; // in @interface this is final/static\n+    }\n+\n+    @interface Annotation3 {\n+        final String VALUE = \"value\"; // in @interface this is final/static\n+    }\n+\n+    @interface Annotation4 {\n+        final static String VALUE = \"value\"; // in @interface this is final/static\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eadd9af37430efa46a11a8394068cbaee7a9b1b"}, "originalPosition": 132}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2eadd9af37430efa46a11a8394068cbaee7a9b1b", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2eadd9af37430efa46a11a8394068cbaee7a9b1b", "committedDate": "2020-04-04T12:53:33Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "d238574fb9ddca045d0c4cf31d9d48262497c67e", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d238574fb9ddca045d0c4cf31d9d48262497c67e", "committedDate": "2020-04-05T04:47:27Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d238574fb9ddca045d0c4cf31d9d48262497c67e", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/d238574fb9ddca045d0c4cf31d9d48262497c67e", "committedDate": "2020-04-05T04:47:27Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "2db01eefbba3d40086c3f04b0655f014fdadbffb", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2db01eefbba3d40086c3f04b0655f014fdadbffb", "committedDate": "2020-04-05T11:17:34Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MjU3MTYy", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-388257162", "createdAt": "2020-04-06T13:38:38Z", "commit": {"oid": "2db01eefbba3d40086c3f04b0655f014fdadbffb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2db01eefbba3d40086c3f04b0655f014fdadbffb", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/2db01eefbba3d40086c3f04b0655f014fdadbffb", "committedDate": "2020-04-05T11:17:34Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "97b722137dcaf266788b6c7f0fbc1c20828fcd39", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/97b722137dcaf266788b6c7f0fbc1c20828fcd39", "committedDate": "2020-04-08T12:04:30Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTI4MjY0", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-389928264", "createdAt": "2020-04-08T12:32:26Z", "commit": {"oid": "97b722137dcaf266788b6c7f0fbc1c20828fcd39"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97b722137dcaf266788b6c7f0fbc1c20828fcd39", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/97b722137dcaf266788b6c7f0fbc1c20828fcd39", "committedDate": "2020-04-08T12:04:30Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/e8e64b7125c196bd63cdffae0c51a0341cb975cf", "committedDate": "2020-04-11T13:00:35Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODY2ODMz", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-391866833", "createdAt": "2020-04-12T15:08:57Z", "commit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTowODo1N1rOGEWMyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTowODo1N1rOGEWMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMTIwOA==", "bodyText": "please update some previous example to show user that public static final ..... is ignored if any other property ignore... are true.\nPlease use look at previous examples they try to use real-life usecases in names, please do the same.\nUser need to see the same code line to be with and without violation to see how property works.", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r407211208", "createdAt": "2020-04-12T15:08:57Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -154,6 +158,29 @@\n  *   String firstXML; // violation, XML abbreviation is not allowed\n  * }\n  * </pre>\n+ * <p>\n+ * To configure to check variables, enforcing no abbreviations\n+ * except for variables that are both static and final.\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbbreviationAsWordInName\"&gt;\n+ *     &lt;property name=\"tokens\" value=\"VARIABLE_DEF\"/&gt;\n+ *     &lt;property name=\"ignoreFinal\" value=\"false\"/&gt;\n+ *     &lt;property name=\"ignoreStatic\" value=\"false\"/&gt;\n+ *     &lt;property name=\"ignoreStaticFinal\" value=\"true\"/&gt;\n+ *     &lt;property name=\"allowedAbbreviationLength\" value=\"0\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class MyClass {\n+ *     public int AAAA = 1;              // violation\n+ *     public final int BBBB = 2;        // violation\n+ *     public static int CCCC = 3;       // violation\n+ *     public static final int DDDD = 4; // OK, ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODY3OTA4", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-391867908", "createdAt": "2020-04-12T15:21:25Z", "commit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMToyNVrOGEWTXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNToyMToyNVrOGEWTXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjg5NQ==", "bodyText": "we need to explain users how this property value will affect values ignoreStatic and ignoreFinal.\nthis property in value false make conflicts with previous behavior and it affects other properties values (other properties are ignored if this property found match in code)", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r407212895", "createdAt": "2020-04-12T15:21:25Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "diffHunk": "@@ -190,6 +217,9 @@\n     /** Allow to skip variables with {@code static} modifier. */\n     private boolean ignoreStatic = true;\n \n+    /** Allow to skip variables with both {@code static} and {@code final} modifiers. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8e64b7125c196bd63cdffae0c51a0341cb975cf", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/e8e64b7125c196bd63cdffae0c51a0341cb975cf", "committedDate": "2020-04-11T13:00:35Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "8685dc920ad9bcf5454d092afb9c252e46b5f6cb", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8685dc920ad9bcf5454d092afb9c252e46b5f6cb", "committedDate": "2020-04-13T12:06:53Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjcwMTkz", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-394670193", "createdAt": "2020-04-16T14:08:42Z", "commit": {"oid": "8685dc920ad9bcf5454d092afb9c252e46b5f6cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowODo0MlrOGGnJIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowODo0MlrOGGnJIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4NTk1Mw==", "bodyText": "please in inputs static-final classes to make it clear that we ignore modifiers on types.\n/var/tmp$ cat Test.java \nclass Test {\n  static final class Inner {}\n\n}\n/var/tmp$ javac Test.java \n/var/tmp$ echo $?\n0", "url": "https://github.com/checkstyle/checkstyle/pull/8017#discussion_r409585953", "createdAt": "2020-04-16T14:08:42Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/naming/abbreviationaswordinname/InputAbbreviationAsWordInNameIgnore.java", "diffHunk": "@@ -0,0 +1,134 @@\n+package com.puppycrawl.tools.checkstyle.checks.naming.abbreviationaswordinname;\n+\n+/*\n+ * Config:\n+ * allowedAbbreviationLength = 5\n+ * allowedAbbreviations = NUMBER,MARAZMATIC,VARIABLE\n+ * tokens = CLASS_DEF,VARIABLE_DEF,METHOD_DEF,ENUM_DEF,ENUM_CONSTANT_DEF,\n+ *      PARAMETER_DEF,INTERFACE_DEF,ANNOTATION_DEF\n+ * ignoreStatic = true\n+ * ignoreFinal = true\n+ * ignoreStaticFinal = true\n+ */\n+public class InputAbbreviationAsWordInNameIgnore {\n+\n+    abstract class InputAbbreviationAsWordInNameType {\n+    }\n+\n+    abstract class NonAAAAbstractClassName {\n+    }\n+\n+    abstract class FactoryWithBADNAme {\n+    }\n+\n+    abstract class AbstractCLASSName {\n+        abstract class NonAbstractInnerClass {\n+        }\n+    }\n+\n+    abstract class ClassFactory1 {\n+        abstract class WellNamedFactory {\n+        }\n+    }\n+\n+    class NonAbstractClass1 {\n+    }\n+\n+    class AbstractClass1 {\n+    }\n+\n+    class Class1Factory1 {\n+    }\n+\n+    abstract class AbstractClassName3 {\n+        class AbstractINNERRClass { // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8685dc920ad9bcf5454d092afb9c252e46b5f6cb"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb3b4eee943ec05e85e5d6bf10564e946fa9df5", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8cb3b4eee943ec05e85e5d6bf10564e946fa9df5", "committedDate": "2020-04-18T05:20:42Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8685dc920ad9bcf5454d092afb9c252e46b5f6cb", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8685dc920ad9bcf5454d092afb9c252e46b5f6cb", "committedDate": "2020-04-13T12:06:53Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}, "afterCommit": {"oid": "8cb3b4eee943ec05e85e5d6bf10564e946fa9df5", "author": {"user": {"login": "wltan", "name": "Tan Wei Liang"}}, "url": "https://github.com/checkstyle/checkstyle/commit/8cb3b4eee943ec05e85e5d6bf10564e946fa9df5", "committedDate": "2020-04-18T05:20:42Z", "message": "Issue #6582: static final option for AbbreviationAsWordInName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTIyMjQ1", "url": "https://github.com/checkstyle/checkstyle/pull/8017#pullrequestreview-395922245", "createdAt": "2020-04-18T15:13:12Z", "commit": {"oid": "8cb3b4eee943ec05e85e5d6bf10564e946fa9df5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 640, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}