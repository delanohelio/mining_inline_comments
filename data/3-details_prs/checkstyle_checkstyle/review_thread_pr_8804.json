{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNTI3MDY0", "number": 8804, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyOTo0MlrOEg_POw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMDoxMTowNlrOEhCqQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDI1OTc5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyOTo0MlrOHOEdFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyOTo0MlrOHOEdFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxNTA5Mg==", "bodyText": "please review PR one more time, and remove all unrelated changes.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484515092", "createdAt": "2020-09-07T16:29:42Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java", "diffHunk": "@@ -170,30 +170,32 @@ private static void verifyInputFile(Map<String, List<String>> allTests, File fil\n \n     private static void verifyInputFile(Map<String, List<String>> allTests, boolean skipFileNaming,\n             String path, String fileName) {\n-        List<String> classes;\n-        int slash = path.lastIndexOf(File.separatorChar);\n-        String packge = path.substring(0, slash);\n-        boolean found = false;\n-\n-        for (int depth = 0; depth < 4; depth++) {\n-            // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n-            // moved\n-            final String folderPath = packge;\n-            slash = packge.lastIndexOf(File.separatorChar);\n-            packge = path.substring(0, slash);\n-            classes = allTests.get(packge);\n-\n-            if (classes != null\n-                    && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n-                            fileName)) {\n-                found = true;\n-                break;\n+        if (!skipFileNaming) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39247ff3af2419ce301d9be161725d05319279f5"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDgwNjE1OnYy", "diffSide": "RIGHT", "path": "src/xdocs/config_misc.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QyMzo1Njo0OVrOHOI9vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoyNjowM1rOHOs0zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU4ODk4OQ==", "bodyText": "set of any supported <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html\">tokens</a>", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484588989", "createdAt": "2020-09-07T23:56:49Z", "author": {"login": "romani"}, "path": "src/xdocs/config_misc.xml", "diffHunk": "@@ -673,6 +673,16 @@ String unitAbbrev = \"\\u03bc\\u03bc\\u03bc\";\n               <td><code>null</code></td>\n               <td>3.2</td>\n             </tr>\n+            <tr>\n+              <td>tokens</td>\n+              <td>tokens to check</td>\n+              <td>all tokens\n+                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html\">\n+                    allTokenTypes</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3NjUyNQ==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485176525", "createdAt": "2020-09-08T20:26:03Z", "author": {"login": "gaurabdg"}, "path": "src/xdocs/config_misc.xml", "diffHunk": "@@ -673,6 +673,16 @@ String unitAbbrev = \"\\u03bc\\u03bc\\u03bc\";\n               <td><code>null</code></td>\n               <td>3.2</td>\n             </tr>\n+            <tr>\n+              <td>tokens</td>\n+              <td>tokens to check</td>\n+              <td>all tokens\n+                <a href=\"apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html\">\n+                    allTokenTypes</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU4ODk4OQ=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDgxNDE3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMDowNDo1OFrOHOJB6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozOToyMFrOHPKqXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng==", "bodyText": "tokens  = CheckUtil.getTokenText(check.getAcceptableTokens(),\n                check.getRequiredTokens())\nif (tokens.size() == TOKEN_TYPE_TOTAL_COUNT) {\n expectedAcceptableTokenText = \"all tokens allTokenTypes\";\n} else {\n expectedAcceptableTokenText = \"subset of tokens \"\n                + tokens;\n}", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590056", "createdAt": "2020-09-08T00:04:58Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -877,10 +878,13 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n                         + \"' should have the basic token description\");\n \n         final String acceptableTokenText = columns.get(2).getTextContent().trim();\n-        assertEquals(\"subset of tokens \"\n-                        + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                acceptableTokenText\n+        String expectedAcceptableTokenText = \"subset of tokens \"\n+                + CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens());\n+        if (\"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTAxOQ==", "bodyText": "But DescendantTokenCheck will satisfy that tokens.size() != TokenUtil.getAllTokenIds().length, and the test will fail. tokens.size() is zero.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485169019", "createdAt": "2020-09-08T20:10:56Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -877,10 +878,13 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n                         + \"' should have the basic token description\");\n \n         final String acceptableTokenText = columns.get(2).getTextContent().trim();\n-        assertEquals(\"subset of tokens \"\n-                        + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                acceptableTokenText\n+        String expectedAcceptableTokenText = \"subset of tokens \"\n+                + CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens());\n+        if (\"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTU3Nw==", "bodyText": "check.getRequiredTokens() is empty for Check. getAcceptableTokens are all tokens. So tokens will be all tokens.\nAm I miss something?", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485345577", "createdAt": "2020-09-09T05:24:17Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -877,10 +878,13 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n                         + \"' should have the basic token description\");\n \n         final String acceptableTokenText = columns.get(2).getTextContent().trim();\n-        assertEquals(\"subset of tokens \"\n-                        + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                acceptableTokenText\n+        String expectedAcceptableTokenText = \"subset of tokens \"\n+                + CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens());\n+        if (\"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NTM3Mg==", "bodyText": "fixed.\nOne logic miss hardcode ... new problem was found and fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485665372", "createdAt": "2020-09-09T14:39:20Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -877,10 +878,13 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n                         + \"' should have the basic token description\");\n \n         final String acceptableTokenText = columns.get(2).getTextContent().trim();\n-        assertEquals(\"subset of tokens \"\n-                        + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                acceptableTokenText\n+        String expectedAcceptableTokenText = \"subset of tokens \"\n+                + CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens());\n+        if (\"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDgxNzYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMDowODoxMFrOHOJDoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozOTozMFrOHPKq0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw==", "bodyText": "|| acceptableTokens.size() == TOKEN_TYPE_TOTAL_COUNT)\nbut why we need this condition, Arrays.equals will never be true.\nPlease remove.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590497", "createdAt": "2020-09-08T00:08:10Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -745,7 +745,8 @@ else if (AbstractCheck.class.isAssignableFrom(clss)) {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)\n+                    || \"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3MDU1MA==", "bodyText": "Why not? both acceptableTokens and defaultTokens is empty for DescendantTokenCheck, it is an exception for all the cases.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485170550", "createdAt": "2020-09-08T20:14:05Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -745,7 +745,8 @@ else if (AbstractCheck.class.isAssignableFrom(clss)) {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)\n+                    || \"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NDMyNA==", "bodyText": "checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java\n    \n    \n         Line 477\n      in\n      3686c0f\n    \n    \n    \n    \n\n        \n          \n           public int[] getAcceptableTokens() { \n        \n    \n  \n\n\nacceptableTokens is not empty.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485344324", "createdAt": "2020-09-09T05:20:00Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -745,7 +745,8 @@ else if (AbstractCheck.class.isAssignableFrom(clss)) {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)\n+                    || \"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NTQ5MQ==", "bodyText": "fixed.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485665491", "createdAt": "2020-09-09T14:39:30Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -745,7 +745,8 @@ else if (AbstractCheck.class.isAssignableFrom(clss)) {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)\n+                    || \"DescendantToken\".equals(sectionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDgxODM1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMDowOToxMlrOHOJECg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoyNjozM1rOHOs1pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDYwMg==", "bodyText": "set of any tokens is more logical, sorry for confusion from the beginning.", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590602", "createdAt": "2020-09-08T00:09:12Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3Njc0Mg==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485176742", "createdAt": "2020-09-08T20:26:33Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDYwMg=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDgyMDQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMDoxMTowNlrOHOJFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoyNjo0MFrOHOs11Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDg4Mg==", "bodyText": "anyTokenTypesSet", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590882", "createdAt": "2020-09-08T00:11:06Z", "author": {"login": "romani"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");\n+            final boolean isPropertyTokenType = isSpecialAllTokensType\n+                    || propertyType.contains(\"subset of tokens\")\n                     || propertyType.contains(\"subset of javadoc tokens\");\n             if (!isPropertyTokenType) {\n-                final Node typeNode;\n-                if (property.get(2).getFirstChild().getFirstChild() == null) {\n-                    typeNode = property.get(2).getFirstChild().getNextSibling();\n-                }\n-                else {\n-                    typeNode = property.get(2).getFirstChild().getFirstChild();\n-                }\n-                final String typeName = typeNode.getTextContent().trim();\n+                final String typeName =\n+                        getCorrectNodeBasedOnPropertyType(property).getTextContent().trim();\n                 typeText = FULLY_QUALIFIED_CLASS_NAMES.get(typeName).getTypeName();\n             }\n+            if (isSpecialAllTokensType) {\n+                typeText = \"allTokenTypes\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3Njc4OQ==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485176789", "createdAt": "2020-09-08T20:26:40Z", "author": {"login": "gaurabdg"}, "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");\n+            final boolean isPropertyTokenType = isSpecialAllTokensType\n+                    || propertyType.contains(\"subset of tokens\")\n                     || propertyType.contains(\"subset of javadoc tokens\");\n             if (!isPropertyTokenType) {\n-                final Node typeNode;\n-                if (property.get(2).getFirstChild().getFirstChild() == null) {\n-                    typeNode = property.get(2).getFirstChild().getNextSibling();\n-                }\n-                else {\n-                    typeNode = property.get(2).getFirstChild().getFirstChild();\n-                }\n-                final String typeName = typeNode.getTextContent().trim();\n+                final String typeName =\n+                        getCorrectNodeBasedOnPropertyType(property).getTextContent().trim();\n                 typeText = FULLY_QUALIFIED_CLASS_NAMES.get(typeName).getTypeName();\n             }\n+            if (isSpecialAllTokensType) {\n+                typeText = \"allTokenTypes\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDg4Mg=="}, "originalCommit": {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 681, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}