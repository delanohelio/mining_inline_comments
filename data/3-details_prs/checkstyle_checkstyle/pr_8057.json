{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDE0NTMz", "number": 8057, "title": "Issue #7692: Update doc for CyclomaticComplexity", "bodyText": "Fixes #7692\n\n\n\nDefault Example:\n$ cat config.xml\n<!DOCTYPE module PUBLIC\n  \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n  \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n    <module name=\"CyclomaticComplexity\">\n    </module>\n  </module>\n</module>\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ cat test.java\nclass CyclomaticComplexity {\n  // Cyclomatic Complexity = 11\n  int a, b, c, d, n;\n  public void foo() { // 1, function declaration\n    if (a == 1) { // 2, if\n      fun1();\n    } else if (a == b // 3, if\n      && a == c) { // 4, && operator\n      if (c == 2) { // 5, if\n        fun2();\n      }\n    } else if (a == d) { // 6, if\n      try {\n        fun4();\n      } catch (Exception e) { // 7, catch\n      }\n    } else {\n      switch(n) {\n        case 1: // 8, case\n          fun1();\n          break;\n        case 2: // 9, case\n          fun2();\n          break;\n        case 3: // 10, case\n          fun3();\n          break;\n        default:\n          break;\n      }\n    }\n    d = a < 0 ? -1 : 1; // 11, ternary operator\n  }\n}\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ java -jar checkstyle-8.30-all.jar -c config.xml test.java\nStarting audit...\n[ERROR] C:\\Users\\Shrey\\Desktop\\Checkstyle jar\\test.java:4:3: Cyclomatic Complexity is 11 (max allowed is 10). [CyclomaticComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nNon-Default Example 1:\n$ cat config2.xml\n<!DOCTYPE module PUBLIC\n  \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n  \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n    <module name=\"CyclomaticComplexity\">\n        <property name=\"max\" value=\"4\"/>\n        <property name=\"tokens\" value=\"LITERAL_WHILE, LITERAL_DO\"/>\n    </module>\n  </module>\n</module>\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ cat test2.java\nclass CyclomaticComplexity {\n  // Cyclomatic Complexity = 5\n  int a, b, c, d;\n  public void foo() { // 1, function declaration\n    while (a < b // 2, while\n      && a > c) {\n      fun();\n    }\n    if (a == b) {\n      do { // 3, do\n        fun();\n      } while (d);\n    } else if (c == d) {\n      while (c > 0) { // 4, while\n        fun();\n      }\n      do { // 5, while\n        fun();\n      } while (a);\n    }\n  }\n}\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ java -jar checkstyle-8.30-all.jar -c config2.xml test2.java\nStarting audit...\n[ERROR] C:\\Users\\Shrey\\Desktop\\Checkstyle jar\\test2.java:4:3: Cyclomatic Complexity is 5 (max allowed is 4). [CyclomaticComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\nNon-Default Example 2:\n$ cat config3.xml\n<!DOCTYPE module PUBLIC\n  \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n  \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <module name=\"TreeWalker\">\n    <module name=\"CyclomaticComplexity\">\n        <property name=\"switchBlockAsSingleDecisionPoint\" value=\"true\"/>\n    </module>\n  </module>\n</module>\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ cat test3.java\nclass CyclomaticComplexity {\n  // Cyclomatic Complexity = 11\n  int a, b, c, d, e, n;\n  public void foo() { // 1, function declaration\n    if (a == b) { // 2, if\n      fun1();\n    } else if (a == 0 // 3, if\n      && b == c) { // 4, && operator\n      if (c == -1) { // 5, if\n        fun2();\n      }\n    } else if (a == c // 6, if\n      || a == d) { // 7, || operator\n      fun3();\n    } else if (d == e) { // 8, if\n      try {\n        fun4();\n      } catch (Exception e) { // 9, catch\n      }\n    } else {\n      switch(n) { // 10, switch\n        case 1:\n          fun1();\n          break;\n        case 2:\n          fun2();\n          break;\n        default:\n          break;\n      }\n    }\n    a = a > 0 ? b : c; // 11, ternary operator\n  }\n}\nShrey@PREDATOR-PH315-51 MINGW64 ~/Desktop/Checkstyle jar\n$ java -jar checkstyle-8.30-all.jar -c config3.xml test3.java\nStarting audit...\n[ERROR] C:\\Users\\Shrey\\Desktop\\Checkstyle jar\\test3.java:4:3: Cyclomatic Complexity is 11 (max allowed is 10). [CyclomaticComplexity]\nAudit done.\nCheckstyle ends with 1 errors.", "createdAt": "2020-04-09T13:10:20Z", "url": "https://github.com/checkstyle/checkstyle/pull/8057", "merged": true, "mergeCommit": {"oid": "5a87cb59188b2e6e334b8787f5a878ddf2b29c0d"}, "closed": true, "closedAt": "2020-04-12T10:07:48Z", "author": {"login": "sulkykookie"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV8TNvgBqjMyMTgyNDE2NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcW3alfAFqTM5MTg0MTM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "783d2cacad9d08625682509cdb0cd3e5b368b2e0", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/783d2cacad9d08625682509cdb0cd3e5b368b2e0", "committedDate": "2020-04-09T13:05:17Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "4641b7155a6458d271a6d13580b587949c505e18", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4641b7155a6458d271a6d13580b587949c505e18", "committedDate": "2020-04-09T13:13:14Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4641b7155a6458d271a6d13580b587949c505e18", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4641b7155a6458d271a6d13580b587949c505e18", "committedDate": "2020-04-09T13:13:14Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "265fe119b5aa322f1f124344a39d5d7c59c4ca3e", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/265fe119b5aa322f1f124344a39d5d7c59c4ca3e", "committedDate": "2020-04-09T14:37:36Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "265fe119b5aa322f1f124344a39d5d7c59c4ca3e", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/265fe119b5aa322f1f124344a39d5d7c59c4ca3e", "committedDate": "2020-04-09T14:37:36Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/029ffebf76590c0f73af2e315365b66639b8d765", "committedDate": "2020-04-09T17:12:54Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzcyMDc3", "url": "https://github.com/checkstyle/checkstyle/pull/8057#pullrequestreview-391772077", "createdAt": "2020-04-11T14:44:20Z", "commit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNDo0NDoyMFrOGENsyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNDo1MzowNVrOGENwVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MTk0NQ==", "bodyText": "this example looks redundant", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407071945", "createdAt": "2020-04-11T14:44:20Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // switch is not considered when switchBlockAsSingleDecisionPoint is false\n+ *         case 1: // 10, case\n+ *           fun1();\n+ *           break;\n+ *         case 2: // 11, case\n+ *           fun2();\n+ *           break;\n+ *         case 3: // 12, case\n+ *           fun3();\n+ *           break;\n+ *         default:\n+ *           break;\n+ *       }\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 4 and check only for while and do-while loops:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"CyclomaticComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"4\"/&gt;\n+ *   &lt;property name=\"tokens\" value=\"LITERAL_WHILE, LITERAL_DO\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 5\n+ *   public void foo() { // 1, function declaration\n+ *     while (a &lt; b // 2, while\n+ *       &amp;&amp; a &gt; c) {\n+ *       fun();\n+ *     }\n+ *     if (a == b) {\n+ *       if (a &lt; c) {\n+ *       } else {\n+ *         do { // 3, do\n+ *           fun();\n+ *         } while (d);\n+ *       }\n+ *     } else if (c == d) {\n+ *       while (c &gt; 0) { // 4, while\n+ *         fun();\n+ *       }\n+ *       do { // 5, do-while\n+ *         fun();\n+ *       } while (e);\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to consider switch-case block as one decision point.\n  * </p>\n  * <pre>\n  * &lt;module name=\"CyclomaticComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"15\"/&gt;\n+ *   &lt;property name=\"switchBlockAsSingleDecisionPoint\" value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 11\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // 10, switch\n+ *         case 1:\n+ *           fun1();\n+ *           break;\n+ *         case 2:\n+ *           fun2();\n+ *           break;\n+ *         default:\n+ *           break;\n+ *       }\n+ *     }\n+ *     j = a &gt; k ? b : c; // 11, ?\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * Explanation on how complexity is calculated (switchBlockAsSingleDecisionPoint is set to false):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjIwNA==", "bodyText": "please add \"operator\" to just operator signs, I mean to make it like \"|| operator\"", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072204", "createdAt": "2020-04-11T14:46:47Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjM3MA==", "bodyText": "switch is not considered when switchBlockAsSingleDecisionPoint is false\nThis is confusing. Why it is not considered when below you show that every case statement adds +1 to complexity?", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072370", "createdAt": "2020-04-11T14:48:20Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // switch is not considered when switchBlockAsSingleDecisionPoint is false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjUzMw==", "bodyText": "please change one of else ifs to ternar operator example.", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072533", "createdAt": "2020-04-11T14:49:56Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjU2OQ==", "bodyText": "please add necessary fields to make it compilable.\nAlso, there is no need to compare variables, it can be int variables compared with literals, like a == 1", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072569", "createdAt": "2020-04-11T14:50:30Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjczNA==", "bodyText": "no need for double if", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072734", "createdAt": "2020-04-11T14:51:58Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // switch is not considered when switchBlockAsSingleDecisionPoint is false\n+ *         case 1: // 10, case\n+ *           fun1();\n+ *           break;\n+ *         case 2: // 11, case\n+ *           fun2();\n+ *           break;\n+ *         case 3: // 12, case\n+ *           fun3();\n+ *           break;\n+ *         default:\n+ *           break;\n+ *       }\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 4 and check only for while and do-while loops:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"CyclomaticComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"4\"/&gt;\n+ *   &lt;property name=\"tokens\" value=\"LITERAL_WHILE, LITERAL_DO\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 5\n+ *   public void foo() { // 1, function declaration\n+ *     while (a &lt; b // 2, while\n+ *       &amp;&amp; a &gt; c) {\n+ *       fun();\n+ *     }\n+ *     if (a == b) {\n+ *       if (a &lt; c) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3Mjg1Mg==", "bodyText": "? -> ternary  operator", "url": "https://github.com/checkstyle/checkstyle/pull/8057#discussion_r407072852", "createdAt": "2020-04-11T14:53:05Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "diffHunk": "@@ -99,50 +99,166 @@\n  * &lt;module name=\"CyclomaticComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 15:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 12\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // switch is not considered when switchBlockAsSingleDecisionPoint is false\n+ *         case 1: // 10, case\n+ *           fun1();\n+ *           break;\n+ *         case 2: // 11, case\n+ *           fun2();\n+ *           break;\n+ *         case 3: // 12, case\n+ *           fun3();\n+ *           break;\n+ *         default:\n+ *           break;\n+ *       }\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 4 and check only for while and do-while loops:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"CyclomaticComplexity\"&gt;\n+ *   &lt;property name=\"max\" value=\"4\"/&gt;\n+ *   &lt;property name=\"tokens\" value=\"LITERAL_WHILE, LITERAL_DO\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 5\n+ *   public void foo() { // 1, function declaration\n+ *     while (a &lt; b // 2, while\n+ *       &amp;&amp; a &gt; c) {\n+ *       fun();\n+ *     }\n+ *     if (a == b) {\n+ *       if (a &lt; c) {\n+ *       } else {\n+ *         do { // 3, do\n+ *           fun();\n+ *         } while (d);\n+ *       }\n+ *     } else if (c == d) {\n+ *       while (c &gt; 0) { // 4, while\n+ *         fun();\n+ *       }\n+ *       do { // 5, do-while\n+ *         fun();\n+ *       } while (e);\n+ *     }\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to consider switch-case block as one decision point.\n  * </p>\n  * <pre>\n  * &lt;module name=\"CyclomaticComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"15\"/&gt;\n+ *   &lt;property name=\"switchBlockAsSingleDecisionPoint\" value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class CyclomaticComplexity {\n+ *   // Cyclomatic Complexity = 11\n+ *   public void foo() { // 1, function declaration\n+ *     if (a == b) { // 2, if\n+ *       fun1();\n+ *     } else if (a == c // 3, if\n+ *       &amp;&amp; a == d) { // 4, &amp;&amp;\n+ *       if (c == e) { // 5, if\n+ *         fun2();\n+ *       }\n+ *     } else if (a == c // 6, if\n+ *       || a == g) { // 7, ||\n+ *       fun3();\n+ *     } else if (g == h) { // 8, if\n+ *       try {\n+ *         fun4();\n+ *       } catch (Exception e) { // 9, catch\n+ *       }\n+ *     } else {\n+ *       switch(n) { // 10, switch\n+ *         case 1:\n+ *           fun1();\n+ *           break;\n+ *         case 2:\n+ *           fun2();\n+ *           break;\n+ *         default:\n+ *           break;\n+ *       }\n+ *     }\n+ *     j = a &gt; k ? b : c; // 11, ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765"}, "originalPosition": 125}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "029ffebf76590c0f73af2e315365b66639b8d765", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/029ffebf76590c0f73af2e315365b66639b8d765", "committedDate": "2020-04-09T17:12:54Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "4a797bc5348679d2b475c3c4ec631317601c8f08", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4a797bc5348679d2b475c3c4ec631317601c8f08", "committedDate": "2020-04-11T17:02:05Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a797bc5348679d2b475c3c4ec631317601c8f08", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/4a797bc5348679d2b475c3c4ec631317601c8f08", "committedDate": "2020-04-11T17:02:05Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "6f99ad1b673b5427c16b2bbeb46d226b882f21de", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6f99ad1b673b5427c16b2bbeb46d226b882f21de", "committedDate": "2020-04-12T04:43:34Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f99ad1b673b5427c16b2bbeb46d226b882f21de", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/6f99ad1b673b5427c16b2bbeb46d226b882f21de", "committedDate": "2020-04-12T04:43:34Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "95628180f7068eff7d5f704fbc094d751df69071", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/95628180f7068eff7d5f704fbc094d751df69071", "committedDate": "2020-04-12T04:45:24Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0128453e9731ec878f7217e4403227b8c73f871e", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0128453e9731ec878f7217e4403227b8c73f871e", "committedDate": "2020-04-12T08:12:17Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95628180f7068eff7d5f704fbc094d751df69071", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/95628180f7068eff7d5f704fbc094d751df69071", "committedDate": "2020-04-12T04:45:24Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}, "afterCommit": {"oid": "0128453e9731ec878f7217e4403227b8c73f871e", "author": {"user": {"login": "sulkykookie", "name": "Shrey Kumar Singh"}}, "url": "https://github.com/checkstyle/checkstyle/commit/0128453e9731ec878f7217e4403227b8c73f871e", "committedDate": "2020-04-12T08:12:17Z", "message": "Issue #7692: Update doc for CyclomaticComplexity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODQxMzQz", "url": "https://github.com/checkstyle/checkstyle/pull/8057#pullrequestreview-391841343", "createdAt": "2020-04-12T10:06:14Z", "commit": {"oid": "0128453e9731ec878f7217e4403227b8c73f871e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 690, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}