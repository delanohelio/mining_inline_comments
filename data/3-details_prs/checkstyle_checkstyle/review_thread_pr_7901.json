{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwODQwNjI4", "number": 7901, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMjoyMTowOFrODqFGWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjo1Njo1NFrODr8c3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDUwMzMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMjoyMTowOFrOF5pMlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDoyNlrOF6PARQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODExNg==", "bodyText": "Please change to  // OK, NPath complexity is less than default threshold", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r395988116", "createdAt": "2020-03-21T12:21:08Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzU1Nw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607557", "createdAt": "2020-03-23T17:00:26Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODExNg=="}, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDUwNTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMjoyNDoyMVrOF5pNkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDozMVrOF6PAhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODM3MA==", "bodyText": "Please update // + 1 comments. It is not clear what do they mean.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r395988370", "createdAt": "2020-03-21T12:24:21Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzYyMw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607623", "createdAt": "2020-03-23T17:00:31Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODM3MA=="}, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDUwNjQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMjoyNzozOFrOF5pOQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDozNVrOF6PAuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODU0NQ==", "bodyText": "Please change it to  // violation, NPath complexity is 1,024 (max allowed is 1,000) and put it into the line where violation occurs.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r395988545", "createdAt": "2020-03-21T12:27:38Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1\n+ *       baz();\n+ *     }\n+ *     else {  // +1\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // +1\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 2^10 = 1024 (violation, function exceeds 1000 paths)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzY3Mg==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607672", "createdAt": "2020-03-23T17:00:35Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1\n+ *       baz();\n+ *     }\n+ *     else {  // +1\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // +1\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 2^10 = 1024 (violation, function exceeds 1000 paths)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODU0NQ=="}, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDUwNzA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMjoyODoxN1rOF5pOjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDozOVrOF6PA6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODYyMA==", "bodyText": "Please update // * 2 comments. It is not clear what do they mean.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r395988620", "createdAt": "2020-03-21T12:28:17Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1\n+ *       baz();\n+ *     }\n+ *     else {  // +1\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // +1\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 2^10 = 1024 (violation, function exceeds 1000 paths)\n+ *   if (a &gt; b) { // *2\n+ *     bar();\n+ *   }\n+ *   else {\n+ *     baz();\n+ *   }\n+ *   // 8 more if-else statements\n+ *   if (s &gt; t) { // *2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzcyMQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607721", "createdAt": "2020-03-23T17:00:39Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,51 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 3 (OK)\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // +1\n+ *       baz();\n+ *     }\n+ *     else {  // +1\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // +1\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // NPath Complexity = 2^10 = 1024 (violation, function exceeds 1000 paths)\n+ *   if (a &gt; b) { // *2\n+ *     bar();\n+ *   }\n+ *   else {\n+ *     baz();\n+ *   }\n+ *   // 8 more if-else statements\n+ *   if (s &gt; t) { // *2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4ODYyMA=="}, "originalCommit": {"oid": "cfbd5b199161e0ce8c06dc745d6184e0cd5e221f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjMzNzM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzowNjowN1rOF543Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDo1M1rOF6PBnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NDc3MQ==", "bodyText": "Please put else on the same line with the if closing bracket:\nif (...) {\n  ...\n} else {\n  ...\n}", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396244771", "createdAt": "2020-03-23T07:06:07Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,53 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     }\n+ *     else {\n+ *       bar();\n+ *     }\n+ *   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3c4ac2b520a46601229121f22124e8ceee0068"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzkwMw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607903", "createdAt": "2020-03-23T17:00:53Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,53 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     }\n+ *     else {\n+ *       bar();\n+ *     }\n+ *   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NDc3MQ=="}, "originalCommit": {"oid": "5e3c4ac2b520a46601229121f22124e8ceee0068"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjM0MTUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzowODoxMVrOF545rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMDo1OVrOF6PB1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NTQyMg==", "bodyText": "Please put real code here with ternary operator, according to your input file it shouldn't take much space.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396245422", "createdAt": "2020-03-23T07:08:11Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,53 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     }\n+ *     else {\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // violation, NPath complexity is 1,024 (max allowed is 1,000)\n+ *   // choosing from 2 options, 10 separate times produces 2^10 (1,024) possible outcomes\n+ *   if (a &gt; b) { // non-nested if-else decision tree multiplies complexity by 2\n+ *     bar();\n+ *   }\n+ *   else {\n+ *     baz();\n+ *   }\n+ *   // 8 more if-else statements, collectively multiplies complexity by 2^8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3c4ac2b520a46601229121f22124e8ceee0068"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzk1Nw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r396607957", "createdAt": "2020-03-23T17:00:59Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,53 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     }\n+ *     else {\n+ *       bar();\n+ *     }\n+ *   }\n+ *   else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // violation, NPath complexity is 1,024 (max allowed is 1,000)\n+ *   // choosing from 2 options, 10 separate times produces 2^10 (1,024) possible outcomes\n+ *   if (a &gt; b) { // non-nested if-else decision tree multiplies complexity by 2\n+ *     bar();\n+ *   }\n+ *   else {\n+ *     baz();\n+ *   }\n+ *   // 8 more if-else statements, collectively multiplies complexity by 2^8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NTQyMg=="}, "originalCommit": {"oid": "5e3c4ac2b520a46601229121f22124e8ceee0068"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTM2MDQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDozOTo1MlrOF6qSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjoxOTo0NFrOF7NZbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NDYzNw==", "bodyText": "Please update 2 options, 10 separate times to 2 options 10 times", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r397054637", "createdAt": "2020-03-24T10:39:52Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     } else {\n+ *       bar();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // violation, NPath complexity is 1,024 (max allowed is 1,000)\n+ *   // choosing from 2 options, 10 separate times produces 2^10 (1,024) possible outcomes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyOTgwNA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r397629804", "createdAt": "2020-03-25T06:19:44Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       baz();\n+ *     } else {\n+ *       bar();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // violation, NPath complexity is 1,024 (max allowed is 1,000)\n+ *   // choosing from 2 options, 10 separate times produces 2^10 (1,024) possible outcomes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NDYzNw=="}, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTM2ODY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDo0MjowNVrOF6qXfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTowMzozMFrOF7qG0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NTg2OA==", "bodyText": "Please add a violation case as well. E.g. use a for loop which violates default threshold.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r397055868", "createdAt": "2020-03-24T10:42:05Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyOTgzMQ==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r397629831", "createdAt": "2020-03-25T06:19:49Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NTg2OA=="}, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4MzU1Ng==", "bodyText": "Why did you add a violation case in the second example? It should belong to the first example.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r397683556", "createdAt": "2020-03-25T08:38:27Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NTg2OA=="}, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEwMDE3Ng==", "bodyText": "I see my mistake. done.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398100176", "createdAt": "2020-03-25T19:03:30Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,58 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public void foo() { // OK, NPath complexity is less than default threshold", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1NTg2OA=="}, "originalCommit": {"oid": "f8d39ef59dfd6b341e77400b3f2d65883879c5c0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDgxMTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzo0MlrOF8F02w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODowMjo0MFrOF8Tq9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDMzMQ==", "bodyText": "){ space required", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398554331", "createdAt": "2020-03-26T13:03:42Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4MTE3NA==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398781174", "createdAt": "2020-03-26T18:02:40Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDMzMQ=="}, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDgxMTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzo0N1rOF8F1Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODowMjoyMVrOF8TqJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDM5OA==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398554398", "createdAt": "2020-03-26T13:03:47Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4MDk2Ng==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398780966", "createdAt": "2020-03-26T18:02:21Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDM5OA=="}, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDgxMjE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowMzo1NVrOF8F1gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODowMjoyNFrOF8TqRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDQ5OQ==", "bodyText": "here too", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398554499", "createdAt": "2020-03-26T13:03:55Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1){ // multiplies complexity by 6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4MDk5Nw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398780997", "createdAt": "2020-03-26T18:02:24Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1){ // multiplies complexity by 6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDQ5OQ=="}, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDgxNTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzowNDo0NlrOF8F3ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODowMjozMFrOF8Tqdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NTAxOA==", "bodyText": "it will be easier to set limit to 100 and make example simpler", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398555018", "createdAt": "2020-03-26T13:04:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4MTA0Nw==", "bodyText": "done", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r398781047", "createdAt": "2020-03-26T18:02:30Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,106 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo(){ // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i){ // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1){ // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n  * To configure the check with a threshold of 1000:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n  *   &lt;property name=\"max\" value=\"1000\"/&gt;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NTAxOA=="}, "originalCommit": {"oid": "acb27bfe2419940fb63c0dc154239137c8483479"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDA1NTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjo1NTo0NVrOF8lGSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNToyMlrOF86oaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NjY5Nw==", "bodyText": "this comment looks like redundant or misplaced", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399066697", "createdAt": "2020-03-27T06:55:45Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjY1Mg==", "bodyText": "I think it is good to have this comment as it shows how complexity of 128 was achieved.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399122652", "createdAt": "2020-03-27T09:07:24Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NjY5Nw=="}, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxMDk5Mw==", "bodyText": "I agree, but it is placed before field declarations. It should be closer to the code with this complexity", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399210993", "createdAt": "2020-03-27T11:52:24Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NjY5Nw=="}, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTExMg==", "bodyText": "It should be closer to the code with this complexity\n\nThe code with this complexity is below.\nI think this is actually a good place for this clarification as it adds more details to the violation description itself and belongs to it. Probably, rephrasing it like 128 complexity is achieved by choosing from 2 options 7 times which produces 2^7 (128) possible outcomes will suit better. What do you think?", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399245112", "createdAt": "2020-03-27T12:58:25Z", "author": {"login": "rdiachenko"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NjY5Nw=="}, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTQ5Ng==", "bodyText": "agreed with @strkkk and swung that comment beneath my variable declarations.", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399419496", "createdAt": "2020-03-27T17:15:22Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NjY5Nw=="}, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDA1NzkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjo1Njo1NFrOF8lH3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxNjo1MVrOF86r3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NzEwMg==", "bodyText": "can we reduce number of variables here?In ternary operators it can be compared with just int, isn't it?", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399067102", "createdAt": "2020-03-27T06:56:54Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes\n+ *\n+ *   int a,b,c,d,e,f,g,h,i,j,k,l,m,n;\n+ *   a=b=c=d=e=f=g=h=i=j=k=l=m=n = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMDM4Mw==", "bodyText": "good insight. I originally did that to preserve the number of actually \"possible\" unique outcomes, but for a demo example, I agree, comparing integers should suffice", "url": "https://github.com/checkstyle/checkstyle/pull/7901#discussion_r399420383", "createdAt": "2020-03-27T17:16:51Z", "author": {"login": "edwardlee"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -119,14 +119,103 @@\n  * &lt;module name=\"NPathComplexity\"/&gt;\n  * </pre>\n  * <p>\n- * To configure the check with a threshold of 1000:\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ *\n+ * final int a = 0;\n+ * int b = 0;\n+ *\n+ * public void foo() { // OK, NPath complexity is less than default threshold\n+ *   // function consists of one if-else block with an NPath Complexity of 3\n+ *   if (a &gt; 10) {\n+ *     if (a &gt; b) { // nested if-else decision tree adds 2 to the complexity count\n+ *       buzz();\n+ *     } else {\n+ *       fizz();\n+ *     }\n+ *   } else { // last possible outcome of the main if-else block, adds 1 to complexity\n+ *     buzz();\n+ *   }\n+ * }\n+ *\n+ * public void boo() { // violation, NPath complexity is 217 (max allowed is 200)\n+ *   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes\n+ *   for(int i = 0; i &lt; b; i++) { // for statement adds 1 to final complexity\n+ *     switch(i) { // each independent switch statement multiplies complexity by 6\n+ *       case a:\n+ *         // ternary with &amp;&amp; adds 3 to switch's complexity\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         // ternary with || adds 3 to switch's complexity\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i - 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *     switch(i + 1) { // multiplies complexity by 6\n+ *       case a:\n+ *         print(f(i) &amp;&amp; g(i) ? fizz() : buzz());\n+ *       default:\n+ *         print(f(i) || g(i) ? fizz() : buzz());\n+ *     }\n+ *   }\n+ * }\n+ *\n+ * public abstract boolean f(int x);\n+ * public abstract boolean g(int x);\n+ * public abstract String fizz();\n+ * public abstract String buzz();\n+ * public abstract void print(String str);\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check with a threshold of 100:\n  * </p>\n  * <pre>\n  * &lt;module name=\"NPathComplexity\"&gt;\n- *   &lt;property name=\"max\" value=\"1000\"/&gt;\n+ *   &lt;property name=\"max\" value=\"100\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public abstract class Test {\n+ * public void foo() { // violation, NPath complexity is 128 (max allowed is 100)\n+ *   // choosing from 2 options 7 times produces 2^7 (128) possible outcomes\n+ *\n+ *   int a,b,c,d,e,f,g,h,i,j,k,l,m,n;\n+ *   a=b=c=d=e=f=g=h=i=j=k=l=m=n = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NzEwMg=="}, "originalCommit": {"oid": "ff8672f4c200f307b2d6c4cc9d606dbb50c927aa"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1229, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}