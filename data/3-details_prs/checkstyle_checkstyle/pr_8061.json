{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjAwODU4", "number": 8061, "title": "Issue #7639: updates docs for ExplicitInitialization", "bodyText": "Issue #7639: update doc for ExplicitInitialization\n\nOutput of default example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n      <module name=\"ExplicitInitialization\"/>\n    </module>\n</module>\n\n$ cat Test.java\npublic class Test {\n  private int a_int = 0; // violation\n  private int b_int = 1;\n  private int c_int;\n\n  private char a_char = '\\0'; // violation\n  private char b_char = 'b';\n  private char c_char;\n\n  private boolean a_bool = false; // violation\n  private boolean b_bool = true;\n  private boolean c_bool;\n\n  private Obj a_O = null; // violation\n  private Obj b_O = new Obj();\n  private Obj c_O;\n\n  private int ar1[] = null; // violation\n  private int ar2[] = new int[];\n  private int ar3[];\n}\n\n$ java -jar checkstyle/target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml java_sandbox/src/com/codestyle/sandbox/Test.java\nStarting audit...\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:4:17: Variable 'a' explicitly initialized to '0' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:8:18: Variable 'a' explicitly initialized to '\\0' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:13:21: Variable 'b' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:15:21: Variable 'd' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:16:21: Variable 'e' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:19:15: Variable 'b' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:20:15: Variable 'c' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:23:9: Variable 'ar1' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:27:25: Variable 'bar' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:28:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\nAudit done.\n\n\nOutput of default example:\n$ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n        <module name=\"ExplicitInitialization\">\n           <property name=\"onlyObjectReferences\" value=\"true\"/>\n        </module>\n     </module>\n</module>\n\n$ cat Test.java\npublic class Test {\n  private int a_int = 0;\n  private int b_int = 1;\n  private int c_int;\n\n  private char a_char = '\\0';\n  private char b_char = 'b';\n  private char c_char;\n\n  private boolean a_bool = false;\n  private boolean b_bool = true;\n  private boolean c_bool;\n\n  private Obj a_O = null; // violation\n  private Obj b_O = new Obj();\n  private Obj c_O;\n\n  private int ar1[] = null; // violation\n  private int ar2[] = new int[];\n  private int ar3[];\n}\n\n$ java -jar checkstyle/target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml java_sandbox/src/com/codestyle/sandbox/Test.java\nStarting audit...\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:19:15: Variable 'b' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:20:15: Variable 'c' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:23:9: Variable 'ar1' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:27:25: Variable 'bar' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\n[ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:28:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization]\nAudit done.", "createdAt": "2020-04-09T19:21:38Z", "url": "https://github.com/checkstyle/checkstyle/pull/8061", "merged": true, "mergeCommit": {"oid": "b0f53228e4aeedc1c08aae220dc881b01a478037"}, "closed": true, "closedAt": "2020-09-07T08:39:46Z", "author": {"login": "ImmortalRabbit"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWMH1XAFqTM5MTMwOTYwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchfBhRAFqTQxMjUwNzgxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzA5NjA4", "url": "https://github.com/checkstyle/checkstyle/pull/8061#pullrequestreview-391309608", "createdAt": "2020-04-10T07:37:21Z", "commit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzoyMVrOGDzfIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozOTo0NlrOGDzihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjQ2Ng==", "bodyText": "third example should be without initialization at all\nprivate int c", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642466", "createdAt": "2020-04-10T07:37:21Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjUwNg==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642506", "createdAt": "2020-04-10T07:37:28Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjU2Mg==", "bodyText": "same here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642562", "createdAt": "2020-04-10T07:37:39Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjYyMg==", "bodyText": "duplicated example", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642622", "createdAt": "2020-04-10T07:37:48Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjcwNQ==", "bodyText": "duplicated", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642705", "createdAt": "2020-04-10T07:37:59Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0Mjc5OA==", "bodyText": "should be private D d", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642798", "createdAt": "2020-04-10T07:38:14Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0Mjg3OA==", "bodyText": "no need for main method here", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406642878", "createdAt": "2020-04-10T07:38:28Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();\n+ *\n+ *   int ar1[] = null; // violation\n+ *   int ar2[] = new int[];\n+ *   int ar3[];\n+ *   private Bar&lt;String&gt; bar = null; // violation\n+ *   private Bar&lt;String&gt;[] barArray = null; // violation\n+ *   public static void main( String [] args ) {\n+ *   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MzA1NA==", "bodyText": "private Bar&lt;String&gt;[] looks weird, example looks duplicated", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406643054", "createdAt": "2020-04-10T07:38:57Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation\n+ *   private int b = 1;\n+ *   private int c = 2;\n+ *\n+ *   private char a = '\\0'; // violation\n+ *   private char b = 'b';\n+ *   private char c = 'c';\n+ *\n+ *   private boolean a = true;\n+ *   private boolean b = false; // violation\n+ *   private boolean c = true;\n+ *   private boolean d = false; // violation\n+ *   private boolean e = false; // violation\n+ *\n+ *   private A a = new A();\n+ *   private A b = null; // violation\n+ *   private C c = null; // violation\n+ *   private D d = new D();\n+ *\n+ *   int ar1[] = null; // violation\n+ *   int ar2[] = new int[];\n+ *   int ar3[];\n+ *   private Bar&lt;String&gt; bar = null; // violation\n+ *   private Bar&lt;String&gt;[] barArray = null; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MzMzNA==", "bodyText": "please change field names to make them distinct and make example compilable.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r406643334", "createdAt": "2020-04-10T07:39:46Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,39 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a = 0; // violation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c5bb5f4269d287077d9c80d8ef7556f6ffb1ea"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MzUwMjg3", "url": "https://github.com/checkstyle/checkstyle/pull/8061#pullrequestreview-394350287", "createdAt": "2020-04-16T07:04:49Z", "commit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNDo1MFrOGGXVAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzowNTo0OVrOGGXW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNjg0OQ==", "bodyText": "new int[] this wont compile as well.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r409326849", "createdAt": "2020-04-16T07:04:50Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -55,6 +55,32 @@\n  * &lt;module name=&quot;ExplicitInitialization&quot;/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * public class Test {\n+ *   private int a_int = 0; // violation\n+ *   private int b_int = 1;\n+ *   private int c_int;\n+ *\n+ *   private char a_char = '\\0'; // violation\n+ *   private char b_char = 'b';\n+ *   private char c_char;\n+ *\n+ *   private boolean a_bool = false; // violation\n+ *   private boolean b_bool = true;\n+ *   private boolean c_bool;\n+ *\n+ *   private Obj a_O = null; // violation\n+ *   private Obj b_O = new Obj();\n+ *   private Obj c_O;\n+ *\n+ *   private int ar1[] = null; // violation\n+ *   private int ar2[] = new int[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNzMzNw==", "bodyText": "please add // ignored to ignored cases", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r409327337", "createdAt": "2020-04-16T07:05:49Z", "author": {"login": "strkkk"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int a_int = 0;\n+ *   private int b_int = 1;\n+ *   private int c_int;\n  *\n- *   private boolean a = true;\n- *   private boolean b = false;\n- *   private boolean c = true;\n- *   private boolean d = false;\n- *   private boolean e = false;\n+ *   private char a_char = '\\0';\n+ *   private char b_char = 'b';\n+ *   private char c_char;\n  *\n- *   private A a = new A();\n- *   private A b = null; // violation\n- *   private C c = null; // violation\n- *   private D d = new D();\n+ *   private boolean a_bool = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6fa3b61350edaee4facd07f1f10283364d4fe22", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/f6fa3b61350edaee4facd07f1f10283364d4fe22", "committedDate": "2020-04-16T04:41:24Z", "message": "Issue #7606: requested changes are applied"}, "afterCommit": {"oid": "a27fec8367fd583b55bd6bc225d719bbd49f05eb", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a27fec8367fd583b55bd6bc225d719bbd49f05eb", "committedDate": "2020-04-17T20:27:00Z", "message": "Issue #7606: new requested changes are applied"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a27fec8367fd583b55bd6bc225d719bbd49f05eb", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a27fec8367fd583b55bd6bc225d719bbd49f05eb", "committedDate": "2020-04-17T20:27:00Z", "message": "Issue #7606: new requested changes are applied"}, "afterCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a9477f736e8d2179a39bff1779ad8f7d9af824e1", "committedDate": "2020-04-18T08:10:32Z", "message": "Issue #7639: updates docs for ExplicitInitialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTkwMzY4", "url": "https://github.com/checkstyle/checkstyle/pull/8061#pullrequestreview-395990368", "createdAt": "2020-04-19T08:20:12Z", "commit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODoyMDoxMlrOGH0Prw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODoyMDoxMlrOGH0Prw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTE5OQ==", "bodyText": "usually, an OK case is marked as such:\n// OK, those references are ignored\n(applies to entire example)\n@strkkk please correct, if ignored is good here.", "url": "https://github.com/checkstyle/checkstyle/pull/8061#discussion_r410849199", "createdAt": "2020-04-19T08:20:12Z", "author": {"login": "muhlba91"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "diffHunk": "@@ -67,29 +93,25 @@\n  * </p>\n  * <pre>\n  * public class Test {\n- *   private int a = 0;\n- *   private int b = 1;\n- *   private int c = 2;\n+ *   private int intField1 = 0; // ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5db0e51a548c4c3bf31f848aff15b1ac19b50e55", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5db0e51a548c4c3bf31f848aff15b1ac19b50e55", "committedDate": "2020-04-19T09:10:47Z", "message": "Issue #7639: updates docs for ExplicitInitialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9477f736e8d2179a39bff1779ad8f7d9af824e1", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/a9477f736e8d2179a39bff1779ad8f7d9af824e1", "committedDate": "2020-04-18T08:10:32Z", "message": "Issue #7639: updates docs for ExplicitInitialization"}, "afterCommit": {"oid": "5db0e51a548c4c3bf31f848aff15b1ac19b50e55", "author": {"user": {"login": "ImmortalRabbit", "name": "Demezhan Marikov"}}, "url": "https://github.com/checkstyle/checkstyle/commit/5db0e51a548c4c3bf31f848aff15b1ac19b50e55", "committedDate": "2020-04-19T09:10:47Z", "message": "Issue #7639: updates docs for ExplicitInitialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTk1NjAy", "url": "https://github.com/checkstyle/checkstyle/pull/8061#pullrequestreview-395995602", "createdAt": "2020-04-19T09:24:41Z", "commit": {"oid": "5db0e51a548c4c3bf31f848aff15b1ac19b50e55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTA3ODEy", "url": "https://github.com/checkstyle/checkstyle/pull/8061#pullrequestreview-412507812", "createdAt": "2020-05-15T09:54:18Z", "commit": {"oid": "5db0e51a548c4c3bf31f848aff15b1ac19b50e55"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 700, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}