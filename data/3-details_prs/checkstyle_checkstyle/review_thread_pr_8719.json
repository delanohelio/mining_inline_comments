{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNDUzNjU3", "number": 8719, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0OTowMFrOEiJ-gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxMjoxM1rOEjXrOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjUwNDk4OnYy", "diffSide": "RIGHT", "path": "config/checkstyle_input_suppressions.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0OTowMFrOHP301g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNDo0NTowMlrOHQ1i4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNTMzNA==", "bodyText": "please remove this suppressions and please place comments with config in Input files.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r486405334", "createdAt": "2020-09-10T14:49:00Z", "author": {"login": "romani"}, "path": "config/checkstyle_input_suppressions.xml", "diffHunk": "@@ -524,6 +524,9 @@\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda3.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda4.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda5.java\"/>\n+  <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda6.java\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMjI4OA==", "bodyText": "Yes I had already placed config with the required format in all the Input files.\nActually the comment rule (in indentation every line should end with comment of exp and actual) and the new rule for all input files(every file should end with //ok or //violation) is conflicting with each other. That's why I have to push it under suppression file. I think it need to be fixed.\nSee: #8725", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487002288", "createdAt": "2020-09-11T12:10:06Z", "author": {"login": "Abhishek-kumar09"}, "path": "config/checkstyle_input_suppressions.xml", "diffHunk": "@@ -524,6 +524,9 @@\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda3.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda4.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda5.java\"/>\n+  <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda6.java\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNTMzNA=="}, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQxNjU0Nw==", "bodyText": "ok, got it, very confusing - our bad.\nI reopened #8725 and provided instruction on what to do.\nplease do me a favor and send separate PR to fix it.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487416547", "createdAt": "2020-09-12T14:45:02Z", "author": {"login": "romani"}, "path": "config/checkstyle_input_suppressions.xml", "diffHunk": "@@ -524,6 +524,9 @@\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda3.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda4.java\"/>\n   <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda5.java\"/>\n+  <suppress checks=\"Regexp\" files=\"indentation[\\\\/]indentation[\\\\/]InputIndentationLambda6.java\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNTMzNA=="}, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjUxMTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1MDoxM1rOHP34uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxMzo0OFrOHQcXgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNjMyOA==", "bodyText": "isAcceptableIndent", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r486406328", "createdAt": "2020-09-10T14:50:13Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -27,6 +27,12 @@\n  *\n  */\n public class LambdaHandler extends AbstractExpressionHandler {\n+    /**\n+     * Checks whether the lambda is correctly indented, this variable get its value from checking\n+     * the lambda handler's indentation, and it is being used in aligning the lambda's children.\n+     * A true value depicts lambda is correctly aligned without giving any errors.\n+     */\n+    private boolean isIdealIndent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwNDAzNQ==", "bodyText": "isAcceptableIndent is already the name of a method. Thus renaming it is creating pmd violation that no same name for method and variable is allowed.\nThough I have changed it to something more accurate about what it actually does.\nThis variable checks if the lamda expression is indented properly, and thus upon yes/no it states its children expected indent.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487004035", "createdAt": "2020-09-11T12:13:48Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -27,6 +27,12 @@\n  *\n  */\n public class LambdaHandler extends AbstractExpressionHandler {\n+    /**\n+     * Checks whether the lambda is correctly indented, this variable get its value from checking\n+     * the lambda handler's indentation, and it is being used in aligning the lambda's children.\n+     * A true value depicts lambda is correctly aligned without giving any errors.\n+     */\n+    private boolean isIdealIndent;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNjMyOA=="}, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjUxMjUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1MDoyN1rOHP35jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxNDowNFrOHQcX6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNjU0MA==", "bodyText": "revert this change", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r486406540", "createdAt": "2020-09-10T14:50:27Z", "author": {"login": "romani"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -36,14 +42,22 @@\n      * @param ast the abstract syntax tree\n      * @param parent the parent handler\n      */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwNDEzNg==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487004136", "createdAt": "2020-09-11T12:14:04Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -36,14 +42,22 @@\n      * @param ast the abstract syntax tree\n      * @param parent the parent handler\n      */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNjU0MA=="}, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjUxNjc1OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationCtorCall.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1MToyMFrOHP38Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxNDoyMFrOHQcYZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNzIyMw==", "bodyText": "please keep existing cases as is, and create new one is required", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r486407223", "createdAt": "2020-09-10T14:51:20Z", "author": {"login": "romani"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationCtorCall.java", "diffHunk": "@@ -115,7 +115,7 @@ public Valid(InputIndentationCtorCall obj, float arg) { //indent:4 exp:4\n     public Valid(InputIndentationCtorCall obj, double arg) { //indent:4 exp:4\n       obj. //indent:6 exp:6\n           super( //indent:10 exp:10\n-            x -> arg); //indent:12 exp:12\n+          x -> arg); //indent:10 exp:12,14 warn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwNDI2Mg==", "bodyText": "Done", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487004262", "createdAt": "2020-09-11T12:14:20Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationCtorCall.java", "diffHunk": "@@ -115,7 +115,7 @@ public Valid(InputIndentationCtorCall obj, float arg) { //indent:4 exp:4\n     public Valid(InputIndentationCtorCall obj, double arg) { //indent:4 exp:4\n       obj. //indent:6 exp:6\n           super( //indent:10 exp:10\n-            x -> arg); //indent:12 exp:12\n+          x -> arg); //indent:10 exp:12,14 warn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNzIyMw=="}, "originalCommit": {"oid": "4c9eb9b2e4d9be83db695d7ef2275beab8286f57"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTIwNDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNzoyMjoxMFrOHQ2YHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDowMjowN1rOHRrqsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMDE3Mw==", "bodyText": "This new field isn't final after it is first assigned in the constructor. That means its possible the value can flip after the constructor, and it looks like it can be flipped in multiple areas.\nIs it possible usage of this field in one method can go down the true path and then another method could use it as the false path, and then re-calling the old method we first mentioned will then go down the false path the 2nd time through?\nIf this is possible it would lead to some randomness issues in the check throughout a run.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487430173", "createdAt": "2020-09-12T17:22:10Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -59,6 +73,7 @@ protected IndentLevel getIndentImpl() {\n \n         DetailAST parent = getMainAst().getParent();\n         if (getParent() instanceof NewHandler) {\n+            isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMjQyMQ==", "bodyText": "@rnveach ,\nThe value of this variable is used only once for suggesting the children's expected indent at line 55\nThis method is generally executed after running all the methods regarding checking the Lambda's indent.\nThe main purpose of this variable is checking if there are indentation error logs for Lamda expression.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487432421", "createdAt": "2020-09-12T17:48:16Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -59,6 +73,7 @@ protected IndentLevel getIndentImpl() {\n \n         DetailAST parent = getMainAst().getParent();\n         if (getParent() instanceof NewHandler) {\n+            isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMDE3Mw=="}, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMzI4MQ==", "bodyText": "I looked into my concerns with a custom branch and regression. See #8719 (comment) .\nNo exceptions were thrown that would mean we assigning the field 2 different values. So that alleviates my main concern.\nSo I am marking this resolved.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r488303281", "createdAt": "2020-09-15T00:02:07Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -59,6 +73,7 @@ protected IndentLevel getIndentImpl() {\n \n         DetailAST parent = getMainAst().getParent();\n         if (getParent() instanceof NewHandler) {\n+            isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMDE3Mw=="}, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTIxMjMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNzozMjo0N1rOHQ2byA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxOToyNTo1NlrOHQ3Adw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMTExMg==", "bodyText": "Field name also doesn't make sense to me.\nYou set lambda to not be correctly idented when the indent is acceptable... I see other instances where it is set to false just because of the parent and nothing to do with the indentation.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487431112", "createdAt": "2020-09-12T17:32:47Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -83,7 +98,8 @@ public void checkIndentation() {\n         if (parent.getType() != TokenTypes.SWITCH_RULE\n                 && getLineStart(firstChild) == expandedTabsColumnNo(firstChild)) {\n             final IndentLevel level = getIndent();\n-            if (!level.isAcceptable(expandedTabsColumnNo(firstChild))) {\n+            if (isAcceptableIndent(firstChild, level)) {\n+                isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMTg3OA==", "bodyText": "@rnveach  Yes, there is really a blunder in the naming... It is flipping actual logic...\nThe method name should be ifNonAcceptableIndent.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487431878", "createdAt": "2020-09-12T17:41:34Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -83,7 +98,8 @@ public void checkIndentation() {\n         if (parent.getType() != TokenTypes.SWITCH_RULE\n                 && getLineStart(firstChild) == expandedTabsColumnNo(firstChild)) {\n             final IndentLevel level = getIndent();\n-            if (!level.isAcceptable(expandedTabsColumnNo(firstChild))) {\n+            if (isAcceptableIndent(firstChild, level)) {\n+                isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMTExMg=="}, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MDUwMw==", "bodyText": "changes made.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r487440503", "createdAt": "2020-09-12T19:25:56Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -83,7 +98,8 @@ public void checkIndentation() {\n         if (parent.getType() != TokenTypes.SWITCH_RULE\n                 && getLineStart(firstChild) == expandedTabsColumnNo(firstChild)) {\n             final IndentLevel level = getIndent();\n-            if (!level.isAcceptable(expandedTabsColumnNo(firstChild))) {\n+            if (isAcceptableIndent(firstChild, level)) {\n+                isLambdaCorrectlyIndented = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMTExMg=="}, "originalCommit": {"oid": "90fa8b8b6f4a8fcea8e63f17de5663852e66c67f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTIzNTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxMjoxM1rOHRr1xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTozMzozOFrOHSskmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjExNg==", "bodyText": "Minor thing, since expandedTabsColumnNo(firstChild) is used twice, you could save the value to a variable.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r488306116", "createdAt": "2020-09-15T00:12:13Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -92,10 +106,17 @@ public void checkIndentation() {\n         if (getLineStart(getMainAst()) == expandedTabsColumnNo(getMainAst())) {\n             final IndentLevel level =\n                 new IndentLevel(getIndent(), getIndentCheck().getLineWrappingIndentation());\n-            if (!level.isAcceptable(expandedTabsColumnNo(getMainAst()))) {\n+            if (isNonAcceptableIndent(getMainAst(), level)) {\n+                isLambdaCorrectlyIndented = false;\n                 logError(getMainAst(), \"\", expandedTabsColumnNo(getMainAst()), level);\n             }\n         }\n     }\n \n+    private boolean isNonAcceptableIndent(DetailAST firstChild, IndentLevel level) {\n+        return expandedTabsColumnNo(firstChild) < level.getFirstIndentLevel()\n+            || getIndentCheck().isForceStrictCondition()\n+               && !level.isAcceptable(expandedTabsColumnNo(firstChild));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce4ed2ff72d860b334926bae5053685a3dd18d32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0MjY4NA==", "bodyText": "I have tried to do the same but got unusual error: https://github.com/Abhishek-kumar09/checkstyle/pull/16/files", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r488742684", "createdAt": "2020-09-15T15:05:40Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -92,10 +106,17 @@ public void checkIndentation() {\n         if (getLineStart(getMainAst()) == expandedTabsColumnNo(getMainAst())) {\n             final IndentLevel level =\n                 new IndentLevel(getIndent(), getIndentCheck().getLineWrappingIndentation());\n-            if (!level.isAcceptable(expandedTabsColumnNo(getMainAst()))) {\n+            if (isNonAcceptableIndent(getMainAst(), level)) {\n+                isLambdaCorrectlyIndented = false;\n                 logError(getMainAst(), \"\", expandedTabsColumnNo(getMainAst()), level);\n             }\n         }\n     }\n \n+    private boolean isNonAcceptableIndent(DetailAST firstChild, IndentLevel level) {\n+        return expandedTabsColumnNo(firstChild) < level.getFirstIndentLevel()\n+            || getIndentCheck().isForceStrictCondition()\n+               && !level.isAcceptable(expandedTabsColumnNo(firstChild));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjExNg=="}, "originalCommit": {"oid": "ce4ed2ff72d860b334926bae5053685a3dd18d32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA3NDQwMg==", "bodyText": "I took a look at the previous changes. The exception isn't fully clear what it was, but I am going to assume you got an NPE because you were trying to use firstChild in areas where it was most likely null.\nThat can't be the case here, since you use it for both sides of the || condition.\nBtw, now that I am looking at this a second time, should the first of the || have the following !getIndentCheck().isForceStrictCondition() ? Force strict should require that exact tab placement, and it can't be anything besides it.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r489074402", "createdAt": "2020-09-15T23:30:12Z", "author": {"login": "rnveach"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -92,10 +106,17 @@ public void checkIndentation() {\n         if (getLineStart(getMainAst()) == expandedTabsColumnNo(getMainAst())) {\n             final IndentLevel level =\n                 new IndentLevel(getIndent(), getIndentCheck().getLineWrappingIndentation());\n-            if (!level.isAcceptable(expandedTabsColumnNo(getMainAst()))) {\n+            if (isNonAcceptableIndent(getMainAst(), level)) {\n+                isLambdaCorrectlyIndented = false;\n                 logError(getMainAst(), \"\", expandedTabsColumnNo(getMainAst()), level);\n             }\n         }\n     }\n \n+    private boolean isNonAcceptableIndent(DetailAST firstChild, IndentLevel level) {\n+        return expandedTabsColumnNo(firstChild) < level.getFirstIndentLevel()\n+            || getIndentCheck().isForceStrictCondition()\n+               && !level.isAcceptable(expandedTabsColumnNo(firstChild));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjExNg=="}, "originalCommit": {"oid": "ce4ed2ff72d860b334926bae5053685a3dd18d32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMTg0MQ==", "bodyText": "I think this logic is fine.\nThe Indentation is NonAcceptable if:\neither the child is less than the minimum acceptable indent.\nOR\nstrictCondition is true  and the child is not in the acceptable indent.\n\nshould the first of the || have the following !getIndentCheck().isForceStrictCondition()\n\nIf the indent is less than minimum of acceptable indent, then doesnt matter if strict condition is true or false, It should  not be accepted...That's why I think this logic is not required.\n\nForce strict should require that exact tab placement, and it can't be anything besides it.\n\nCurrently It is following all the indent which is a part of accetable indent and nothing more or less that, only discrete acceptable values. I think it is still following the strictlyTrue condition.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r489301841", "createdAt": "2020-09-16T09:35:50Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -92,10 +106,17 @@ public void checkIndentation() {\n         if (getLineStart(getMainAst()) == expandedTabsColumnNo(getMainAst())) {\n             final IndentLevel level =\n                 new IndentLevel(getIndent(), getIndentCheck().getLineWrappingIndentation());\n-            if (!level.isAcceptable(expandedTabsColumnNo(getMainAst()))) {\n+            if (isNonAcceptableIndent(getMainAst(), level)) {\n+                isLambdaCorrectlyIndented = false;\n                 logError(getMainAst(), \"\", expandedTabsColumnNo(getMainAst()), level);\n             }\n         }\n     }\n \n+    private boolean isNonAcceptableIndent(DetailAST firstChild, IndentLevel level) {\n+        return expandedTabsColumnNo(firstChild) < level.getFirstIndentLevel()\n+            || getIndentCheck().isForceStrictCondition()\n+               && !level.isAcceptable(expandedTabsColumnNo(firstChild));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjExNg=="}, "originalCommit": {"oid": "ce4ed2ff72d860b334926bae5053685a3dd18d32"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NjY4MA==", "bodyText": "@rnveach\nDiff report with force strict condition true: https://abhishek-kumar09.github.io/github-actions-report-fetch/\nIs it good, We can see here that there are more than 1 acceptable indents in some rare cases with true strict condition....\nIf it defeats the purpose of trueForceStrictCondition then I will change it.", "url": "https://github.com/checkstyle/checkstyle/pull/8719#discussion_r489366680", "createdAt": "2020-09-16T11:33:38Z", "author": {"login": "Abhishek-kumar09"}, "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LambdaHandler.java", "diffHunk": "@@ -92,10 +106,17 @@ public void checkIndentation() {\n         if (getLineStart(getMainAst()) == expandedTabsColumnNo(getMainAst())) {\n             final IndentLevel level =\n                 new IndentLevel(getIndent(), getIndentCheck().getLineWrappingIndentation());\n-            if (!level.isAcceptable(expandedTabsColumnNo(getMainAst()))) {\n+            if (isNonAcceptableIndent(getMainAst(), level)) {\n+                isLambdaCorrectlyIndented = false;\n                 logError(getMainAst(), \"\", expandedTabsColumnNo(getMainAst()), level);\n             }\n         }\n     }\n \n+    private boolean isNonAcceptableIndent(DetailAST firstChild, IndentLevel level) {\n+        return expandedTabsColumnNo(firstChild) < level.getFirstIndentLevel()\n+            || getIndentCheck().isForceStrictCondition()\n+               && !level.isAcceptable(expandedTabsColumnNo(firstChild));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjExNg=="}, "originalCommit": {"oid": "ce4ed2ff72d860b334926bae5053685a3dd18d32"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 635, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}