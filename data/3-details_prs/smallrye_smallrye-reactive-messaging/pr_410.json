{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjQzNzQ2", "number": 410, "title": "AMQP connector: configuration via global AmqpClientOptions bean", "bodyText": "This PR adds on top of the feature to configure the amqp connector via CDI using AmqpClientOptions beans.\nWith this PR will be possible to configure the amqp clients for all amqp channels at once specifiying one env var amqp-client-options-name which have to have the name of an AmqpClientOptions bean.\nThis change is backwards compatible and the usage of this new env var is not mandatory, however if used must contain the name of an existing AmqpClientOptions bean (which makes total sense)", "createdAt": "2020-02-10T16:53:22Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/410", "merged": true, "mergeCommit": {"oid": "a7f7f515a45725dbb0a47d1a61544a76e33936cb"}, "closed": true, "closedAt": "2020-02-29T07:58:38Z", "author": {"login": "famartinrh"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDQUEBgH2gAyMzczMjQzNzQ2OjY1NDFiM2JjMWE1OGZmMzgzMDQwYThiYzMzODA0NDVhYzJmYTVkYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI_0MHAFqTM2Njc4NDUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6541b3bc1a58ff383040a8bc3380445ac2fa5dbc", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6541b3bc1a58ff383040a8bc3380445ac2fa5dbc", "committedDate": "2020-02-11T11:48:15Z", "message": "amqp connector: configuration via global AmqpClientOptions bean"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f26794c5c67e4cb6c7655ef7d67bd419b71d2ac1", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/f26794c5c67e4cb6c7655ef7d67bd419b71d2ac1", "committedDate": "2020-02-10T16:43:12Z", "message": "amqp connector: configuration via global AmqpClientOptions bean"}, "afterCommit": {"oid": "6541b3bc1a58ff383040a8bc3380445ac2fa5dbc", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6541b3bc1a58ff383040a8bc3380445ac2fa5dbc", "committedDate": "2020-02-11T11:48:15Z", "message": "amqp connector: configuration via global AmqpClientOptions bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTgwNjEz", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/410#pullrequestreview-359580613", "createdAt": "2020-02-17T09:12:07Z", "commit": {"oid": "6541b3bc1a58ff383040a8bc3380445ac2fa5dbc"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOToxMjowOFrOFqc-Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOToxMjowOFrOFqc-Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1OTE5OQ==", "bodyText": "Wondering about the case of amqp? But you know better than me on this.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/410#discussion_r380059199", "createdAt": "2020-02-17T09:12:08Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/AmqpConnector.java", "diffHunk": "@@ -114,21 +118,26 @@ private AmqpClient createClient(Config config) {\n         AmqpClient client;\n         Optional<String> clientOptionsName = config.getOptionalValue(\"client-options-name\", String.class);\n         if (clientOptionsName.isPresent()) {\n-            String optionsName = clientOptionsName.get();\n-            Instance<AmqpClientOptions> options = clientOptions.select(NamedLiteral.of(optionsName));\n-            if (options.isUnsatisfied()) {\n-                throw new IllegalStateException(\n-                        \"Cannot find a \" + AmqpClientOptions.class.getName() + \" bean named \" + optionsName);\n-            }\n-            LOGGER.debug(\"Creating amqp client from bean named '{}'\", optionsName);\n-            client = AmqpClient.create(new io.vertx.axle.core.Vertx(vertx.getDelegate()), options.get());\n+            client = createClientFromClientOptionsBean(clientOptionsName.get());\n+        } else if (this.defaultClientOptionsName != null && this.defaultClientOptionsName.isPresent()) {\n+            client = createClientFromClientOptionsBean(this.defaultClientOptionsName.get());\n         } else {\n             client = getClient(config);\n         }\n         clients.add(client);\n         return client;\n     }\n \n+    private AmqpClient createClientFromClientOptionsBean(String optionsBeanName) {\n+        Instance<AmqpClientOptions> options = clientOptions.select(NamedLiteral.of(optionsBeanName));\n+        if (options.isUnsatisfied()) {\n+            throw new IllegalStateException(\n+                    \"Cannot find a \" + AmqpClientOptions.class.getName() + \" bean named \" + optionsBeanName);\n+        }\n+        LOGGER.debug(\"Creating amqp client from bean named '{}'\", optionsBeanName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6541b3bc1a58ff383040a8bc3380445ac2fa5dbc"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43f6e31a68f483befb8cdf0fe0adc2207d9969f3", "author": {"user": {"login": "famartinrh", "name": "Fabian Martinez"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/43f6e31a68f483befb8cdf0fe0adc2207d9969f3", "committedDate": "2020-02-17T11:18:16Z", "message": "add documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Nzg0NTA4", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/410#pullrequestreview-366784508", "createdAt": "2020-02-29T07:58:30Z", "commit": {"oid": "43f6e31a68f483befb8cdf0fe0adc2207d9969f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}