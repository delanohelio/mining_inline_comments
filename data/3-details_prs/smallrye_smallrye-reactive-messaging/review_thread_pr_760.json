{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NzM2NzM3", "number": 760, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDozNDo0M1rOElbdKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDozNTo0OFrOElbdhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgyNjAwOnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDozNDo0M1rOHU61Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0Njo0MVrOHU76bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NzQyMw==", "bodyText": "It looks like enable.auto.commit will always have a value now, no need for getOrDefault on line 96.\nAlso , why not use the defined constant ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG instead of the literal enable.auto.commit on line 91?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/760#discussion_r491697423", "createdAt": "2020-09-20T14:34:43Z", "author": {"login": "pcasaes"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -86,9 +86,14 @@ public KafkaSource(Vertx vertx,\n             kafkaConfiguration.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, config.getKeyDeserializer());\n         }\n \n+        if (!kafkaConfiguration.containsKey(\"enable.auto.commit\")) {\n+            log.disableAutoCommit(config.getChannel());\n+            kafkaConfiguration.put(\"enable.auto.commit\", \"false\");\n+        }\n+\n         String commitStrategy = config\n                 .getCommitStrategy()\n-                .orElse(Boolean.parseBoolean(kafkaConfiguration.getOrDefault(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, \"true\"))\n+                .orElse(Boolean.parseBoolean(kafkaConfiguration.getOrDefault(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, \"false\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ae4fa6e77e8ea29a19a9a63eb69a8db29ca28b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNTE4Mw==", "bodyText": "Done!", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/760#discussion_r491715183", "createdAt": "2020-09-20T17:46:41Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -86,9 +86,14 @@ public KafkaSource(Vertx vertx,\n             kafkaConfiguration.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, config.getKeyDeserializer());\n         }\n \n+        if (!kafkaConfiguration.containsKey(\"enable.auto.commit\")) {\n+            log.disableAutoCommit(config.getChannel());\n+            kafkaConfiguration.put(\"enable.auto.commit\", \"false\");\n+        }\n+\n         String commitStrategy = config\n                 .getCommitStrategy()\n-                .orElse(Boolean.parseBoolean(kafkaConfiguration.getOrDefault(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, \"true\"))\n+                .orElse(Boolean.parseBoolean(kafkaConfiguration.getOrDefault(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, \"false\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NzQyMw=="}, "originalCommit": {"oid": "49ae4fa6e77e8ea29a19a9a63eb69a8db29ca28b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgyNjk1OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaConnector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDozNTo0OFrOHU61hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNzo0ODoxMFrOHU768w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NzU0Mg==", "bodyText": "Might be worded a bit better:\n\nIt's recommended to NOT use auto-commit and let the connector handle commits", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/760#discussion_r491697542", "createdAt": "2020-09-20T14:35:48Z", "author": {"login": "pcasaes"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaConnector.java", "diffHunk": "@@ -57,6 +57,7 @@\n @ConnectorAttribute(name = \"value.deserializer\", type = \"string\", direction = Direction.INCOMING, description = \"The deserializer classname used to deserialize the record's value\", mandatory = true)\n @ConnectorAttribute(name = \"fetch.min.bytes\", type = \"int\", direction = Direction.INCOMING, description = \"The minimum amount of data the server should return for a fetch request. The default setting of 1 byte means that fetch requests are answered as soon as a single byte of data is available or the fetch request times out waiting for data to arrive.\", defaultValue = \"1\")\n @ConnectorAttribute(name = \"group.id\", type = \"string\", direction = Direction.INCOMING, description = \"A unique string that identifies the consumer group the application belongs to. If not set, a unique, generated id is used\")\n+@ConnectorAttribute(name = \"enable.auto.commit\", type = \"boolean\", direction = Direction.INCOMING, description = \"Whether or not auto-commit is enabled. It's recommended to NOT use auto-commit and let's the connector handle commit\", defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ae4fa6e77e8ea29a19a9a63eb69a8db29ca28b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcxNTMxNQ==", "bodyText": "Fixed !", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/760#discussion_r491715315", "createdAt": "2020-09-20T17:48:10Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaConnector.java", "diffHunk": "@@ -57,6 +57,7 @@\n @ConnectorAttribute(name = \"value.deserializer\", type = \"string\", direction = Direction.INCOMING, description = \"The deserializer classname used to deserialize the record's value\", mandatory = true)\n @ConnectorAttribute(name = \"fetch.min.bytes\", type = \"int\", direction = Direction.INCOMING, description = \"The minimum amount of data the server should return for a fetch request. The default setting of 1 byte means that fetch requests are answered as soon as a single byte of data is available or the fetch request times out waiting for data to arrive.\", defaultValue = \"1\")\n @ConnectorAttribute(name = \"group.id\", type = \"string\", direction = Direction.INCOMING, description = \"A unique string that identifies the consumer group the application belongs to. If not set, a unique, generated id is used\")\n+@ConnectorAttribute(name = \"enable.auto.commit\", type = \"boolean\", direction = Direction.INCOMING, description = \"Whether or not auto-commit is enabled. It's recommended to NOT use auto-commit and let's the connector handle commit\", defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NzU0Mg=="}, "originalCommit": {"oid": "49ae4fa6e77e8ea29a19a9a63eb69a8db29ca28b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 38, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}