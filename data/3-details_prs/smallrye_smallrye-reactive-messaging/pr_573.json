{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTg4OTY0", "number": 573, "title": "Implement new fault-tolerance model based on Message negative acknowledgement", "bodyText": "This PR adds support for nack and update connector to handle failure on nacks.\nFor example, the Kafka connector handles nacks by either using a fail-stop, continuing the processing or writing the failing record to a dead letter queue.\nThe AMQP, MQTT and Camel connectors have been updated too.\nWith nack, the emitter can also report processing failure.\nThis PR also implement the possibility to skip messages (#566)", "createdAt": "2020-06-01T13:45:57Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573", "merged": true, "mergeCommit": {"oid": "fa9c5ed81e9f8b26ecfef38d75a3f2fd44617253"}, "closed": true, "closedAt": "2020-06-03T13:27:28Z", "author": {"login": "cescoffier"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnBKluAFqTQyMTg4Mjg5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnmAungBqjM0MDEyNjk2NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODgyODk4", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#pullrequestreview-421882898", "createdAt": "2020-06-01T14:19:25Z", "commit": {"oid": "f4c491567015f74e8c0bbf368a700e0cd466fda0"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoxOToyNVrOGdMO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDoyMjowMlrOGdMUkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2MjI5Mw==", "bodyText": "What's the purpose of this extra assignment?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#discussion_r433262293", "createdAt": "2020-06-01T14:19:25Z", "author": {"login": "kenfinnigan"}, "path": "api/src/main/java/org/eclipse/microprofile/reactive/messaging/Message.java", "diffHunk": "@@ -201,49 +210,179 @@ public Metadata getMetadata() {\n         };\n     }\n \n+    /**\n+     * Create a message with the given payload, ack and nack functions.\n+     *\n+     * @param payload The payload.\n+     * @param ack The ack function, this will be invoked when the returned messages {@link #ack()} method is invoked.\n+     * @param nack The negative-ack function, this will be invoked when the returned messages {@link #nack(Throwable)}\n+     *        method is invoked.\n+     * @param <T> the type of payload\n+     * @return A message with the given payload, metadata, ack and nack functions.\n+     */\n+    @Experimental(\"nack support is a SmallRye-only feature\")\n+    static <T> Message<T> of(T payload,\n+            Supplier<CompletionStage<Void>> ack, Function<Throwable, CompletionStage<Void>> nack) {\n+        return new Message<T>() {\n+            @Override\n+            public T getPayload() {\n+                return payload;\n+            }\n+\n+            @Override\n+            public Metadata getMetadata() {\n+                return Metadata.empty();\n+            }\n+\n+            @Override\n+            public Supplier<CompletionStage<Void>> getAck() {\n+                return ack;\n+            }\n+\n+            @Override\n+            public Function<Throwable, CompletionStage<Void>> getNack() {\n+                return nack;\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Create a message with the given payload, metadata and ack and nack functions.\n+     *\n+     * @param payload The payload.\n+     * @param metadata the metadata, must not be {@code null}, must not contain {@code null} values.\n+     * @param ack The ack function, this will be invoked when the returned messages {@link #ack()} method is invoked.\n+     * @param nack The negative-ack function, this will be invoked when the returned messages {@link #nack(Throwable)}\n+     *        method is invoked.\n+     * @param <T> the type of payload\n+     * @return A message with the given payload, metadata, ack and nack functions.\n+     */\n+    @Experimental(\"nack support is a SmallRye-only feature\")\n+    static <T> Message<T> of(T payload, Iterable<Object> metadata,\n+            Supplier<CompletionStage<Void>> ack, Function<Throwable, CompletionStage<Void>> nack) {\n+        Metadata validated = Metadata.from(metadata);\n+        return new Message<T>() {\n+            @Override\n+            public T getPayload() {\n+                return payload;\n+            }\n+\n+            @Override\n+            public Metadata getMetadata() {\n+                return validated;\n+            }\n+\n+            @Override\n+            public Supplier<CompletionStage<Void>> getAck() {\n+                return ack;\n+            }\n+\n+            @Override\n+            public Function<Throwable, CompletionStage<Void>> getNack() {\n+                return nack;\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Create a message with the given payload, metadata and ack and nack functions.\n+     *\n+     * @param payload The payload.\n+     * @param metadata the metadata, must not be {@code null}, must not contain {@code null} values.\n+     * @param ack The ack function, this will be invoked when the returned messages {@link #ack()} method is invoked.\n+     * @param nack The negative-ack function, this will be invoked when the returned messages {@link #nack(Throwable)}\n+     *        method is invoked.\n+     * @param <T> the type of payload\n+     * @return A message with the given payload, metadata, ack and nack functions.\n+     */\n+    @Experimental(\"nack support is a SmallRye-only feature\")\n+    static <T> Message<T> of(T payload, Metadata metadata,\n+            Supplier<CompletionStage<Void>> ack, Function<Throwable, CompletionStage<Void>> nack) {\n+        if (payload == null) {\n+            throw new IllegalArgumentException(\"`payload` must not be `null`\");\n+        }\n+        if (metadata == null) {\n+            metadata = Metadata.empty();\n+        }\n+        Metadata actual = metadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c491567015f74e8c0bbf368a700e0cd466fda0"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2Mzc2MA==", "bodyText": "Has the throwable been logged anywhere prior to this point?\nWould it be beneficial to log out the throwable as we're swallowing it? How would a developer know something went wrong without a configured nack?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#discussion_r433263760", "createdAt": "2020-06-01T14:22:02Z", "author": {"login": "kenfinnigan"}, "path": "api/src/main/java/org/eclipse/microprofile/reactive/messaging/Message.java", "diffHunk": "@@ -297,6 +444,24 @@ default Metadata getMetadata() {\n         }\n     }\n \n+    /**\n+     * Acknowledge negatively this message.\n+     * <code>nack</code> is used to indicate that the processing of a message failed. The reason is passed as parameter.\n+     *\n+     * @param reason the reason of the nack, must not be {@code null}\n+     * @return a completion stage completed when the message is negative-acknowledgement has completed. If the\n+     *         negative acknowledgement fails, the completion stage propagates the failure.\n+     */\n+    @Experimental(\"nack support is a SmallRye-only feature\")\n+    default CompletionStage<Void> nack(Throwable reason) {\n+        Function<Throwable, CompletionStage<Void>> nack = getNack();\n+        if (nack == null) {\n+            return CompletableFuture.completedFuture(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c491567015f74e8c0bbf368a700e0cd466fda0"}, "originalPosition": 310}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4c491567015f74e8c0bbf368a700e0cd466fda0", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/f4c491567015f74e8c0bbf368a700e0cd466fda0", "committedDate": "2020-06-01T13:43:08Z", "message": "Document failure management"}, "afterCommit": {"oid": "6d7781fe15ce60c23df10417f0095088ab0b5e2f", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6d7781fe15ce60c23df10417f0095088ab0b5e2f", "committedDate": "2020-06-01T16:29:51Z", "message": "Document failure management"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDQ1MjA4", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#pullrequestreview-422045208", "createdAt": "2020-06-01T17:37:32Z", "commit": {"oid": "6d7781fe15ce60c23df10417f0095088ab0b5e2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozNzozMlrOGdTstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozNzozMlrOGdTstQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NDYyOQ==", "bodyText": "Does {} bring in the message? Thought the format was %s or the like?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#discussion_r433384629", "createdAt": "2020-06-01T17:37:32Z", "author": {"login": "kenfinnigan"}, "path": "api/src/main/java/org/eclipse/microprofile/reactive/messaging/Message.java", "diffHunk": "@@ -297,6 +449,32 @@ default Metadata getMetadata() {\n         }\n     }\n \n+    /**\n+     * Acknowledge negatively this message.\n+     * <code>nack</code> is used to indicate that the processing of a message failed. The reason is passed as parameter.\n+     *\n+     * @param reason the reason of the nack, must not be {@code null}\n+     * @return a completion stage completed when the message is negative-acknowledgement has completed. If the\n+     *         negative acknowledgement fails, the completion stage propagates the failure.\n+     */\n+    @Experimental(\"nack support is a SmallRye-only feature\")\n+    default CompletionStage<Void> nack(Throwable reason) {\n+        if (reason == null) {\n+            throw new IllegalArgumentException(\"The reason must not be `null`\");\n+        }\n+        Function<Throwable, CompletionStage<Void>> nack = getNack();\n+        if (nack == null) {\n+            LOGGER\n+                    .warn(\"A message has been nacked, but no nack function has been provided. The reason was: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7781fe15ce60c23df10417f0095088ab0b5e2f"}, "originalPosition": 324}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDY2ODE2", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/573#pullrequestreview-422066816", "createdAt": "2020-06-01T18:08:21Z", "commit": {"oid": "6d7781fe15ce60c23df10417f0095088ab0b5e2f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91c41e55c356c9ae497f54a985835a5bf04d870b", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/91c41e55c356c9ae497f54a985835a5bf04d870b", "committedDate": "2020-06-03T07:45:23Z", "message": "Use the SmallRye Common @Experimental annotation to mark SmallRye specific behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb4d0ee32726856a194c666e448b44281a0f922", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/3fb4d0ee32726856a194c666e448b44281a0f922", "committedDate": "2020-06-03T07:45:23Z", "message": "Add nack method to the Message class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ef4edfcf01b29bb73c4581c045915c0857c022", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/07ef4edfcf01b29bb73c4581c045915c0857c022", "committedDate": "2020-06-03T07:45:23Z", "message": "Support nack when the emitter is used to send a payload.\n\nThe returned CompletionStage will be completed exceptionally with the nack reason."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f58b7445aae4466cfbf8661eb122d45bbb661b", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/d4f58b7445aae4466cfbf8661eb122d45bbb661b", "committedDate": "2020-06-03T07:45:24Z", "message": "Implement new failure management model for the Kafka connector.\n\nThe Kafka connector can now handle nack and depending on the strategy fail / ignore / or send the record to a dead-letter-queue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "989848c23cbfce511bdc7767df14d770c415c2bb", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/989848c23cbfce511bdc7767df14d770c415c2bb", "committedDate": "2020-06-03T07:55:28Z", "message": "Add nack support to the AMQP connector\n\nAlso define the source fault management strategies."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97cf5e282cbe1dc553763adcc8a0c4da301bc40d", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/97cf5e282cbe1dc553763adcc8a0c4da301bc40d", "committedDate": "2020-06-03T07:55:31Z", "message": "Update mutiny version to 0.5.2\n\nWe need the ability to deal with item and failure in one step."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac95ef9c9613eded21b066e038a320d0c1270524", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/ac95ef9c9613eded21b066e038a320d0c1270524", "committedDate": "2020-06-03T07:55:31Z", "message": "Handle nack in subscribers (method with @Incoming only)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d8555563a5932cc225f10063e8214f63fd716f6", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6d8555563a5932cc225f10063e8214f63fd716f6", "committedDate": "2020-06-03T07:55:31Z", "message": "Add nack support to methods processing messages and payload and returning a single message or payload\n\nAlso skip `null` item."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "516ce7807d0611c1c35a57dde24fae46269a62ea", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/516ce7807d0611c1c35a57dde24fae46269a62ea", "committedDate": "2020-06-03T07:55:31Z", "message": "It is now illegal to return null in the ack/nack method\n\n(it should have been illegal since the beginning)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4d286026773d56482968aff16b6939e32ce2668", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/d4d286026773d56482968aff16b6939e32ce2668", "committedDate": "2020-06-03T07:55:31Z", "message": "Document skip behavior\n\nFix #566"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034ca17daf137bfa836174096a60ab7522d05366", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/034ca17daf137bfa836174096a60ab7522d05366", "committedDate": "2020-06-03T07:55:31Z", "message": "Document nack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a73a6155d4c2497b9ec62e8e01dcec243168280", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/7a73a6155d4c2497b9ec62e8e01dcec243168280", "committedDate": "2020-06-03T07:55:31Z", "message": "Add nack support to the MQTT (client) connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "925789a0229bc1897d953cdf11e436a8eaa18255", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/925789a0229bc1897d953cdf11e436a8eaa18255", "committedDate": "2020-06-03T07:55:31Z", "message": "Add nack support to the camel connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92508c730381008321368bfc4b01a675dbc8e41c", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/92508c730381008321368bfc4b01a675dbc8e41c", "committedDate": "2020-06-03T07:55:31Z", "message": "Add failure-strategy attribute to the camel and mqtt connectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "753f2982feb0bac532511075353aef0984db9636", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/753f2982feb0bac532511075353aef0984db9636", "committedDate": "2020-06-03T07:55:31Z", "message": "Document failure management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76065aeb2f953462e583982ab0a21ecaa3070eb5", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/76065aeb2f953462e583982ab0a21ecaa3070eb5", "committedDate": "2020-06-03T09:26:03Z", "message": "The AMQP \"acknowledgement\" method must run on the event loop having created the message."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d7781fe15ce60c23df10417f0095088ab0b5e2f", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6d7781fe15ce60c23df10417f0095088ab0b5e2f", "committedDate": "2020-06-01T16:29:51Z", "message": "Document failure management"}, "afterCommit": {"oid": "76065aeb2f953462e583982ab0a21ecaa3070eb5", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/76065aeb2f953462e583982ab0a21ecaa3070eb5", "committedDate": "2020-06-03T09:26:03Z", "message": "The AMQP \"acknowledgement\" method must run on the event loop having created the message."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2286, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}