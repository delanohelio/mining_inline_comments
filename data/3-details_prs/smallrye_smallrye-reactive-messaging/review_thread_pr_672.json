{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMTM2MDc5", "number": 672, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNDo0MlrOEQAeCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNToyM1rOEQAfUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjIwMzYyOnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNDo0MlrOGz8cTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzo0OToyNlrOGz92CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMDg0Nw==", "bodyText": "Why 128?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/672#discussion_r457120847", "createdAt": "2020-07-20T07:14:42Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -129,6 +129,10 @@ public KafkaSource(Vertx vertx,\n                                                     \"10000\")))\n                             + 11_000L; // it's possible that it might expire 10 seconds before when we need it to\n \n+                    // When resuming the consumer we must set the fetch amount to what it was before pausing\n+                    // When partitions is greater than 1 this value will be 128 otherwise it will be 1.\n+                    final int resumeFetchAmount = config.getPartitions() > 1 ? 128 : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752c5943fb561d653d9bb9f187895781d2f3c7d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0MzgxNg==", "bodyText": "When partitions is greater than 1 the initial fetch is the concurrency value from MultiMerge which by default is 128.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/672#discussion_r457143816", "createdAt": "2020-07-20T07:49:26Z", "author": {"login": "pcasaes"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -129,6 +129,10 @@ public KafkaSource(Vertx vertx,\n                                                     \"10000\")))\n                             + 11_000L; // it's possible that it might expire 10 seconds before when we need it to\n \n+                    // When resuming the consumer we must set the fetch amount to what it was before pausing\n+                    // When partitions is greater than 1 this value will be 128 otherwise it will be 1.\n+                    final int resumeFetchAmount = config.getPartitions() > 1 ? 128 : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMDg0Nw=="}, "originalCommit": {"oid": "8752c5943fb561d653d9bb9f187895781d2f3c7d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjIwNjg4OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxNToyM1rOGz8eJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzo1Mzo0OVrOGz-CBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMTMxOQ==", "bodyText": "What happens when the amount is consumed? Would it get more?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/672#discussion_r457121319", "createdAt": "2020-07-20T07:15:23Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -140,11 +144,11 @@ public KafkaSource(Vertx vertx,\n                                 .with(\n                                         a -> {\n                                             log.executedConsumerAssignedRebalanceListener(group);\n-                                            kafkaConsumer.resume();\n+                                            kafkaConsumer.fetch(resumeFetchAmount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752c5943fb561d653d9bb9f187895781d2f3c7d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0Njg4Nw==", "bodyText": "It will get more. That's the current behavior without the consumer re-balance.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/672#discussion_r457146887", "createdAt": "2020-07-20T07:53:49Z", "author": {"login": "pcasaes"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -140,11 +144,11 @@ public KafkaSource(Vertx vertx,\n                                 .with(\n                                         a -> {\n                                             log.executedConsumerAssignedRebalanceListener(group);\n-                                            kafkaConsumer.resume();\n+                                            kafkaConsumer.fetch(resumeFetchAmount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyMTMxOQ=="}, "originalCommit": {"oid": "8752c5943fb561d653d9bb9f187895781d2f3c7d"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 97, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}