{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MzQ2NDU3", "number": 585, "title": "Use a trampoline to avoid delaying ack if we are already on the event loop", "bodyText": "", "createdAt": "2020-06-03T17:21:08Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/585", "merged": true, "mergeCommit": {"oid": "c9a3b93ae23bdffbfe2dc9ed6346d84f57defe62"}, "closed": true, "closedAt": "2020-06-04T08:51:31Z", "author": {"login": "cescoffier"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcntQTkAFqTQyMzc5NDc1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcntkR4gFqTQyMzgxMDgyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzk0NzU1", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/585#pullrequestreview-423794755", "createdAt": "2020-06-03T17:52:40Z", "commit": {"oid": "68cd98b386aa0c40bfded4c7b2c530e15668a4f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1Mjo0MFrOGenBcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1Mjo0MFrOGenBcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTgwOQ==", "bodyText": "Should this be msg.getAmqpMessage().rejected()?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/585#discussion_r434749809", "createdAt": "2020-06-03T17:52:40Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/fault/AmqpFailStop.java", "diffHunk": "@@ -22,11 +22,7 @@ public AmqpFailStop(Logger logger, String channel) {\n     public <V> CompletionStage<Void> handle(AmqpMessage<V> msg, Context context, Throwable reason) {\n         // We mark the message as rejected and fail.\n         logger.error(\"A message sent to channel `{}` has been nacked, rejecting the message and fail-stop\", channel);\n-        CompletableFuture<Void> future = new CompletableFuture<>();\n-        context.runOnContext(x -> {\n-            msg.getAmqpMessage().rejected();\n-            future.completeExceptionally(reason);\n-        });\n-        return future;\n+        return ConnectionHolder.runOnContextAndReportFailure(context, reason, () -> msg.getAmqpMessage().accepted());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68cd98b386aa0c40bfded4c7b2c530e15668a4f1"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a333fb774b77fbeb25ba1c0e628183b43e12676", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1a333fb774b77fbeb25ba1c0e628183b43e12676", "committedDate": "2020-06-03T18:12:08Z", "message": "Use a trampoline to avoid delaying ack if we are already on the event loop"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68cd98b386aa0c40bfded4c7b2c530e15668a4f1", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/68cd98b386aa0c40bfded4c7b2c530e15668a4f1", "committedDate": "2020-06-03T17:18:18Z", "message": "Use a trampoline to avoid delaying ack if we are already on the event loop"}, "afterCommit": {"oid": "1a333fb774b77fbeb25ba1c0e628183b43e12676", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1a333fb774b77fbeb25ba1c0e628183b43e12676", "committedDate": "2020-06-03T18:12:08Z", "message": "Use a trampoline to avoid delaying ack if we are already on the event loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODEwODIx", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/585#pullrequestreview-423810821", "createdAt": "2020-06-03T18:14:29Z", "commit": {"oid": "1a333fb774b77fbeb25ba1c0e628183b43e12676"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2291, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}