{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTczNDkz", "number": 857, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoxNDoxMVrOE2yO3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoxNTo0MVrOE2yR-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODgxNTY0OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/doc/modules/connectors/partials/META-INF/connector/smallrye-kafka-incoming.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoxNDoxMVrOHvwvAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoxNDoxMVrOHvwvAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0MzU4NA==", "bodyText": "\"is be applied\" -> could you remove the \"be\"?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519843584", "createdAt": "2020-11-09T14:14:11Z", "author": {"login": "kenfinnigan"}, "path": "documentation/src/main/doc/modules/connectors/partials/META-INF/connector/smallrye-kafka-incoming.adoc", "diffHunk": "@@ -109,7 +109,15 @@ Type: _int_ | false | `1`\n \n Type: _boolean_ | false | `true`\n \n-| *consumer-rebalance-listener.name* | The name set in `javax.inject.Named` of a bean that implements `io.smallrye.reactive.messaging.kafka.KafkaConsumerRebalanceListener`. If set the listener will be applied to the consumer.\n+| *consumer-rebalance-listener.name* | The name set in `javax.inject.Named` of a bean that implements `io.smallrye.reactive.messaging.kafka.KafkaConsumerRebalanceListener`. If set, this rebalance listener is be applied to the consumer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODgyMzYzOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoxNTo0MVrOHvwzpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDoyODo0MlrOHvxYsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0NDc3Mw==", "bodyText": "Not huge, but maybe switch the ordering of the config keys to have the \"key\" first as it's mentioned first in other situations", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519844773", "createdAt": "2020-11-09T14:15:41Z", "author": {"login": "kenfinnigan"}, "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "diffHunk": "@@ -137,6 +137,40 @@ The record written on the dead letter queue contains a set of additional headers\n * `dead-letter-partition` - the original partition of the record (integer mapped to String)\n * `dead-letter-offset` - the original offset of the record (long mapped to String)\n \n+=== Handling deserialization failures\n+\n+Because deserialization happens before creating a `Message`, the failure strategy presented above cannot be applied.\n+However, when a deserialization failure occurs, you can intercept it and provide a fallback value.\n+If you don't, `null` will be used as fallback value.\n+\n+To achieve this, create a CDI bean implementing the {javadoc-base}/io/smallrye/reactive/messaging/kafka/DeserializationFailureHandler.html[DeserializationFailureHandler<T>] interface:\n+\n+[source, java]\n+----\n+@ApplicationScoped\n+@Named(\"failure-fallback\") // Set the name of the failure handler\n+public static class MyDeserializationFailureHandler\n+    implements DeserializationFailureHandler<JsonObject> { // Specify the expected type\n+\n+    @Override\n+    public JsonObject handleDeserializationFailure(String topic, boolean isKey,\n+            String deserializer, byte[] data,\n+            Exception exception, Headers headers) {\n+        return fallback;\n+    }\n+}\n+----\n+\n+The bean must be exposed with the `@Named` qualifier specifying the name of the bean.\n+Then, in the connector configuration, specify the following attribute:\n+\n+* `mp.messaging.incoming.$channel.value-deserialization-failure-handler`: name of the bean handling deserialization failures happening for the record's value,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg1NDI1OA==", "bodyText": "Good point!", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519854258", "createdAt": "2020-11-09T14:28:42Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "diffHunk": "@@ -137,6 +137,40 @@ The record written on the dead letter queue contains a set of additional headers\n * `dead-letter-partition` - the original partition of the record (integer mapped to String)\n * `dead-letter-offset` - the original offset of the record (long mapped to String)\n \n+=== Handling deserialization failures\n+\n+Because deserialization happens before creating a `Message`, the failure strategy presented above cannot be applied.\n+However, when a deserialization failure occurs, you can intercept it and provide a fallback value.\n+If you don't, `null` will be used as fallback value.\n+\n+To achieve this, create a CDI bean implementing the {javadoc-base}/io/smallrye/reactive/messaging/kafka/DeserializationFailureHandler.html[DeserializationFailureHandler<T>] interface:\n+\n+[source, java]\n+----\n+@ApplicationScoped\n+@Named(\"failure-fallback\") // Set the name of the failure handler\n+public static class MyDeserializationFailureHandler\n+    implements DeserializationFailureHandler<JsonObject> { // Specify the expected type\n+\n+    @Override\n+    public JsonObject handleDeserializationFailure(String topic, boolean isKey,\n+            String deserializer, byte[] data,\n+            Exception exception, Headers headers) {\n+        return fallback;\n+    }\n+}\n+----\n+\n+The bean must be exposed with the `@Named` qualifier specifying the name of the bean.\n+Then, in the connector configuration, specify the following attribute:\n+\n+* `mp.messaging.incoming.$channel.value-deserialization-failure-handler`: name of the bean handling deserialization failures happening for the record's value,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0NDc3Mw=="}, "originalCommit": {"oid": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 16, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}