{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NjM5MjA3", "number": 646, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMToyMlrOELrrOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMToyMlrOELrrOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjg1MzY5OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMToyMlrOGtW-Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzo1Njo0NlrOGtYXQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIxNTQ1NQ==", "bodyText": "As this is now being used in at least a couple of places, should we be capturing the topic name instead of calling configuration more than once?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/646#discussion_r450215455", "createdAt": "2020-07-06T13:21:22Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -187,4 +211,48 @@ public void closeQuietly() {\n             log.exceptionOnClose(e);\n         }\n     }\n+\n+    public void isAlive(HealthReport.HealthReportBuilder builder) {\n+        if (configuration.getHealthEnabled()) {\n+            List<Throwable> actualFailures;\n+            boolean isCurrentlyConnected;\n+            synchronized (this) {\n+                actualFailures = new ArrayList<>(failures);\n+            }\n+            if (!actualFailures.isEmpty()) {\n+                builder.add(configuration.getChannel(), false,\n+                        actualFailures.stream().map(Throwable::getMessage).collect(Collectors.joining()));\n+            } else {\n+                builder.add(configuration.getChannel(), true);\n+            }\n+        }\n+\n+        // If health is disable do not add anything to the builder.\n+    }\n+\n+    private String getTopic() {\n+        return configuration.getTopic().orElseGet(configuration::getChannel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76bbd41287daba0445fc6e84a8b6e58d9dcca73b"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzODI3Mg==", "bodyText": "Yes, good idea! Just did it.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/646#discussion_r450238272", "createdAt": "2020-07-06T13:56:46Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -187,4 +211,48 @@ public void closeQuietly() {\n             log.exceptionOnClose(e);\n         }\n     }\n+\n+    public void isAlive(HealthReport.HealthReportBuilder builder) {\n+        if (configuration.getHealthEnabled()) {\n+            List<Throwable> actualFailures;\n+            boolean isCurrentlyConnected;\n+            synchronized (this) {\n+                actualFailures = new ArrayList<>(failures);\n+            }\n+            if (!actualFailures.isEmpty()) {\n+                builder.add(configuration.getChannel(), false,\n+                        actualFailures.stream().map(Throwable::getMessage).collect(Collectors.joining()));\n+            } else {\n+                builder.add(configuration.getChannel(), true);\n+            }\n+        }\n+\n+        // If health is disable do not add anything to the builder.\n+    }\n+\n+    private String getTopic() {\n+        return configuration.getTopic().orElseGet(configuration::getChannel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIxNTQ1NQ=="}, "originalCommit": {"oid": "76bbd41287daba0445fc6e84a8b6e58d9dcca73b"}, "originalPosition": 139}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 90, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}