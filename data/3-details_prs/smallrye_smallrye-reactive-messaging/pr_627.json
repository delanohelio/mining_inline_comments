{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMDM4ODYw", "number": 627, "title": "Added documentation on the properties for Avro", "bodyText": "Initial documentation on the Avro properties for Confluent and Apicurio\nSigned-off-by:Phillip Kruger phillip.kruger@gmail.com", "createdAt": "2020-06-25T13:57:35Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627", "merged": true, "mergeCommit": {"oid": "842310dac78f961a44fc316df5aac550d51a160b"}, "closed": true, "closedAt": "2020-06-25T18:31:55Z", "author": {"login": "phillip-kruger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuvDwDAH2gAyNDQwMDM4ODYwOjgxM2NmN2NlZTU0MGI2NzE4MDYxZmMyNjlhOWE5NzJkYzNmNGZkM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuy_7sgFqTQzNzc1NDkzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/813cf7cee540b6718061fc269a9a972dc3f4fd3f", "committedDate": "2020-06-25T13:56:14Z", "message": "Added documentation on the properties for Avro\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NTQxNzkw", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#pullrequestreview-437541790", "createdAt": "2020-06-25T14:19:17Z", "commit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxOToxN1rOGo87UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo1NlrOGo9DEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NDQ0OA==", "bodyText": "you need CC Compat even on the confluent registry?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445594448", "createdAt": "2020-06-25T14:19:17Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NDkzOQ==", "bodyText": "Reactive Messaging does not use this format.\nIt should be:\nmp.messaging.incoming.[channel].value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer\nmp.messaging.incoming.[channel].schema.registry.url=http://<your_host>:<your_port>/api/ccompat\nmp.messaging.incoming.[channel].specific.avro.reader=true", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445594939", "createdAt": "2020-06-25T14:20:01Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NTM1NQ==", "bodyText": "mp.messaging.outgoing.[channel].value.serializer=io.confluent.kafka.serializers. KafkaAvroSerializer\nmp.messaging.outgoing.[channel].schema.registry.url=http://<your_host>:<your_port>/api/ccompat", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445595355", "createdAt": "2020-06-25T14:20:35Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjI4OQ==", "bodyText": "Same format as mentioned in my other comment", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445596289", "createdAt": "2020-06-25T14:21:46Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.producer.ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroSerializer.class.getName());\n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+----\n+\n+=== For https://github.com/Apicurio/apicurio-registry[Apicurio] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaDeserializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.apicurio.registry.utils.serde.AvroKafkaDeserializer.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjQzMw==", "bodyText": "SAme format as mentioned in my other comment", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445596433", "createdAt": "2020-06-25T14:21:56Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.producer.ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroSerializer.class.getName());\n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+----\n+\n+=== For https://github.com/Apicurio/apicurio-registry[Apicurio] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaDeserializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.apicurio.registry.utils.serde.AvroKafkaDeserializer.class.getName());\n+props.put(io.apicurio.registry.utils.serde.AbstractKafkaSerDe.REGISTRY_URL_CONFIG_PARAM, \"http://localhost:8080/api\"); // Or whatever your host and port is\n+props.put(io.apicurio.registry.utils.serde.avro.AvroDatumProvider.REGISTRY_AVRO_DATUM_PROVIDER_CONFIG_PARAM, io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider.class.getName());\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaSerializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+| \"apicurio.registry.global-id\" | \"io.apicurio.registry.utils.serde.strategy.GetOrCreateIdStrategy\"\n+| \"apicurio.registry.artifact-id\" | \"io.apicurio.registry.utils.serde.strategy.SimpleTopicIdStrategy\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+\n+props.put(io.apicurio.registry.utils.serde.AbstractKafkaSerializer.REGISTRY_ARTIFACT_ID_STRATEGY_CONFIG_PARAM, io.apicurio.registry.utils.serde.strategy.SimpleTopicIdStrategy.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70a2090e189fd98c7588a741b3fc0106cb8f4a3a", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/70a2090e189fd98c7588a741b3fc0106cb8f4a3a", "committedDate": "2020-06-25T18:18:05Z", "message": "Added documentation on the properties for Avro\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzU0OTMz", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#pullrequestreview-437754933", "createdAt": "2020-06-25T18:31:41Z", "commit": {"oid": "70a2090e189fd98c7588a741b3fc0106cb8f4a3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2305, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}