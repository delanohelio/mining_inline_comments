{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1OTE2NjM4", "number": 736, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo1OToxM1rOEjRgKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo1OToxM1rOEjRgKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDIyMzc3OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/doc/modules/kafka/pages/outbound.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo1OToxM1rOHRijsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoxMTozNFrOHRyKkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDAzMw==", "bodyText": "Do we mean they both can be null, or that either of them can be null but not both at the same time?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/736#discussion_r488154033", "createdAt": "2020-09-14T18:59:13Z", "author": {"login": "kenfinnigan"}, "path": "documentation/src/main/doc/modules/kafka/pages/outbound.adoc", "diffHunk": "@@ -52,6 +52,22 @@ By default, the written record contains:\n * no key, or the key configured using the `key` attribute or the key passed in the metadata attached to the `Message`\n * the timestamp computed for the system clock (`now`) or the timestamp passed in the metadata attached to the `Message`\n \n+=== Sending key/value pairs\n+\n+In the Kafka world, it's often necessary to send _records_, i.e. a key/value pair.\n+The connector provides the {javadoc-base}/apidocs/io/smallrye/reactive/messaging/kafka/Record.html[`io.smallrye.reactive.messaging.kafka.Record`] class that you can use to send a pair:\n+\n+[source, java]\n+----\n+include::example$outbound/KafkaRecordExample.java[tag=code]\n+----\n+\n+When the connector receives a message with a `Record` payload, it extracts the key and value from it.\n+The configured serializers for both the key and the value must be compatible with the record's key and value.\n+In addition, both the `key` and the `value` can be `null`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32cbd7ddb71c030d7ae3dda08e6911f04bb7fcd5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwOTc0NA==", "bodyText": "Fixed.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/736#discussion_r488409744", "createdAt": "2020-09-15T06:11:34Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/outbound.adoc", "diffHunk": "@@ -52,6 +52,22 @@ By default, the written record contains:\n * no key, or the key configured using the `key` attribute or the key passed in the metadata attached to the `Message`\n * the timestamp computed for the system clock (`now`) or the timestamp passed in the metadata attached to the `Message`\n \n+=== Sending key/value pairs\n+\n+In the Kafka world, it's often necessary to send _records_, i.e. a key/value pair.\n+The connector provides the {javadoc-base}/apidocs/io/smallrye/reactive/messaging/kafka/Record.html[`io.smallrye.reactive.messaging.kafka.Record`] class that you can use to send a pair:\n+\n+[source, java]\n+----\n+include::example$outbound/KafkaRecordExample.java[tag=code]\n+----\n+\n+When the connector receives a message with a `Record` payload, it extracts the key and value from it.\n+The configured serializers for both the key and the value must be compatible with the record's key and value.\n+In addition, both the `key` and the `value` can be `null`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDAzMw=="}, "originalCommit": {"oid": "32cbd7ddb71c030d7ae3dda08e6911f04bb7fcd5"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 29, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}