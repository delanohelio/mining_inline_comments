{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDk0ODAz", "number": 563, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNjoxM1rOEAfCSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMDowMFrOEAfHGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQzOTQ0OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNjoxM1rOGbyu4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzoyNTowOFrOGb07HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ==", "bodyText": "Should we make all the fields final and public?\nThat would avoid getters, and be \"like a record\".", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431795939", "createdAt": "2020-05-28T12:26:13Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxOTkyMg==", "bodyText": "It would mean the constructor setting values to null based on what's based in vs setting the default on the field itself.\nIs that ok?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431819922", "createdAt": "2020-05-28T13:07:10Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMTk2Mg==", "bodyText": "The constructor would have to set the fields to null / false/ -1.\nI don't have a strong opinion about it, I'm not sure it simplifies much.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431821962", "createdAt": "2020-05-28T13:10:21Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyNDU3OA==", "bodyText": "So... Leave or change? I don't mind", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431824578", "createdAt": "2020-05-28T13:14:22Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTgzNg==", "bodyText": "I will include the change for now", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431831836", "createdAt": "2020-05-28T13:25:08Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQ1MTc5OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMDowMFrOGby2-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzoyNjozNFrOGb0-4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA==", "bodyText": "Should we define an Overflow literal?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431798010", "createdAt": "2020-05-28T12:30:00Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "diffHunk": "@@ -581,7 +583,24 @@ public void consume(final String b) {\n \n     @Test // Reproduce #511\n     public void testWeCanHaveSeveralSubscribers() {\n-        EmitterImpl<String> emitter = new EmitterImpl<>(\"my-channel\", \"BUFFER\", 128, 128);\n+        OnOverflow overflow = new OnOverflow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMjk3OA==", "bodyText": "It's in a test, so not sure if it's that important", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431822978", "createdAt": "2020-05-28T13:11:54Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "diffHunk": "@@ -581,7 +583,24 @@ public void consume(final String b) {\n \n     @Test // Reproduce #511\n     public void testWeCanHaveSeveralSubscribers() {\n-        EmitterImpl<String> emitter = new EmitterImpl<>(\"my-channel\", \"BUFFER\", 128, 128);\n+        OnOverflow overflow = new OnOverflow() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjgwMg==", "bodyText": "Right, we can keep it like this.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431832802", "createdAt": "2020-05-28T13:26:34Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "diffHunk": "@@ -581,7 +583,24 @@ public void consume(final String b) {\n \n     @Test // Reproduce #511\n     public void testWeCanHaveSeveralSubscribers() {\n-        EmitterImpl<String> emitter = new EmitterImpl<>(\"my-channel\", \"BUFFER\", 128, 128);\n+        OnOverflow overflow = new OnOverflow() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA=="}, "originalCommit": {"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 111, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}