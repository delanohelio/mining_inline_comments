{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTkwNTk1", "number": 783, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxNDo0OVrOEo4how==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxOToyOVrOEo4lwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzA0NjExOnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxNDo0OVrOHaOpow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjozMjowNFrOHabNow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTA1OQ==", "bodyText": "Can you add a comment about this constructor that is not used during \"normal\" operations.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497265059", "createdAt": "2020-09-30T06:14:49Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+import javax.inject.Inject;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+@ApplicationScoped\n+public class KafkaCDIEvents {\n+    @Inject\n+    Event<Consumer<?, ?>> consumerEvent;\n+\n+    @Inject\n+    Event<Producer<?, ?>> producerEvent;\n+\n+    public Event<Consumer<?, ?>> consumer() {\n+        return consumerEvent;\n+    }\n+\n+    public Event<Producer<?, ?>> producer() {\n+        return producerEvent;\n+    }\n+\n+    public KafkaCDIEvents() {\n+    }\n+\n+    private KafkaCDIEvents(boolean isNoop) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTk5MA==", "bodyText": "Is it even used?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497265990", "createdAt": "2020-09-30T06:17:32Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+import javax.inject.Inject;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+@ApplicationScoped\n+public class KafkaCDIEvents {\n+    @Inject\n+    Event<Consumer<?, ?>> consumerEvent;\n+\n+    @Inject\n+    Event<Producer<?, ?>> producerEvent;\n+\n+    public Event<Consumer<?, ?>> consumer() {\n+        return consumerEvent;\n+    }\n+\n+    public Event<Producer<?, ?>> producer() {\n+        return producerEvent;\n+    }\n+\n+    public KafkaCDIEvents() {\n+    }\n+\n+    private KafkaCDIEvents(boolean isNoop) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTA1OQ=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3MDg4Mw==", "bodyText": "Not anymore. I thought I removed it.. but I may not have pushed the change. Will double check.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497470883", "createdAt": "2020-09-30T12:32:04Z", "author": {"login": "ebullient"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+import javax.inject.Inject;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+@ApplicationScoped\n+public class KafkaCDIEvents {\n+    @Inject\n+    Event<Consumer<?, ?>> consumerEvent;\n+\n+    @Inject\n+    Event<Producer<?, ?>> producerEvent;\n+\n+    public Event<Consumer<?, ?>> consumer() {\n+        return consumerEvent;\n+    }\n+\n+    public Event<Producer<?, ?>> producer() {\n+        return producerEvent;\n+    }\n+\n+    public KafkaCDIEvents() {\n+    }\n+\n+    private KafkaCDIEvents(boolean isNoop) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTA1OQ=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzA1NTY0OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxODo1OFrOHaOvPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToyMjozMVrOHai9zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjQ5NA==", "bodyText": "Should we reset the counter at the end of each test?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497266494", "createdAt": "2020-09-30T06:18:58Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3MTE4Mg==", "bodyText": "For this one.. it's saying \"I don't care\" (effectively a no-op) .. so I didn't bother resetting the counter", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497471182", "createdAt": "2020-09-30T12:32:37Z", "author": {"login": "ebullient"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjQ5NA=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzkwMQ==", "bodyText": "ok", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497597901", "createdAt": "2020-09-30T15:22:31Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjQ5NA=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzA1NjY0OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxOToyOVrOHaOv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDo1MTo0N1rOHaX9Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjY2Mg==", "bodyText": "Nice, I always used AtomicLong! @jponge might be interesting for the spies.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497266662", "createdAt": "2020-09-30T06:19:29Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();\n+\n+    public final LongAdder firedConsumerEvents = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxNzQ3OA==", "bodyText": "Yep", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497417478", "createdAt": "2020-09-30T10:51:47Z", "author": {"login": "jponge"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();\n+\n+    public final LongAdder firedConsumerEvents = new LongAdder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjY2Mg=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 54, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}