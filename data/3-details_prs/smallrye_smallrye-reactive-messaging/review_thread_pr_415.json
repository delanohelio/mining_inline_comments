{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODUwMzA2", "number": 415, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjo1NToyNFrODg9SIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzozMjoxNVrODi95zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODg1MDg5OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjo1NToyNFrOFrc16A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOToxMjoyNlrOFsfwoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTY0MA==", "bodyText": "Minor - I generally use -1 for infinite, but null is ok.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r381105640", "createdAt": "2020-02-19T06:55:24Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291fdb9d910ba7e2d71310da8ed552ad94350c48"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMjAxNg==", "bodyText": "Noted! Will change it to -1", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r382202016", "createdAt": "2020-02-20T19:12:26Z", "author": {"login": "thescouser89"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTY0MA=="}, "originalCommit": {"oid": "291fdb9d910ba7e2d71310da8ed552ad94350c48"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODg1MjA5OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjo1NTo1NFrOFrc2kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzoyODozM1rOFtXUGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ==", "bodyText": "Wondering if we should implement some kind of exponential backoff. WDYT?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r381105809", "createdAt": "2020-02-19T06:55:54Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);\n+\n+            if (max == null) {\n+                // always retry\n+                flowable = flowable.retryWhen(attempts -> attempts.flatMap(i -> Flowable.timer(10, TimeUnit.SECONDS)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291fdb9d910ba7e2d71310da8ed552ad94350c48"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMTkxMQ==", "bodyText": "Exponential backoff sounds good! Do you think it makes sense to backing off up to a max level?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r382201911", "createdAt": "2020-02-20T19:12:14Z", "author": {"login": "thescouser89"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);\n+\n+            if (max == null) {\n+                // always retry\n+                flowable = flowable.retryWhen(attempts -> attempts.flatMap(i -> Flowable.timer(10, TimeUnit.SECONDS)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ=="}, "originalCommit": {"oid": "291fdb9d910ba7e2d71310da8ed552ad94350c48"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExMjIxNg==", "bodyText": "Yes, something like 30 seconds max between attempt.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r383112216", "createdAt": "2020-02-24T07:28:33Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);\n+\n+            if (max == null) {\n+                // always retry\n+                flowable = flowable.retryWhen(attempts -> attempts.flatMap(i -> Flowable.timer(10, TimeUnit.SECONDS)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ=="}, "originalCommit": {"oid": "291fdb9d910ba7e2d71310da8ed552ad94350c48"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTkyMzk5OnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzozMjoxNVrOFugqXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzozMjoxNVrOFugqXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMzk0OA==", "bodyText": "Should be an AtomicInteger.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r384313948", "createdAt": "2020-02-26T07:32:15Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,30 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n-                    .retryWhen(attempts -> attempts\n-                            .zipWith(Flowable.range(1, max), (n, i) -> i)\n-                            .flatMap(i -> Flowable.timer(i, TimeUnit.SECONDS)));\n+            int max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(-1);\n+            int retryMaxWait = config.getOptionalValue(\"retry-max-wait\", Integer.class).orElse(30);\n+\n+            if (max == -1) {\n+                // always retry\n+                final int[] CURRENT_WAIT_SECOND = { 1 };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0da59e68b955346dbe06c86c2cfc2dcc086fcd9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 126, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}