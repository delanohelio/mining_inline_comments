{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTM0MjI3", "number": 530, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo1MjozOVrOD3vLTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo1MjozOVrOD3vLTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzcxMjEyOnYy", "diffSide": "RIGHT", "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/InMemoryConnector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzo1MjozOVrOGOKUig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwNzoxMjo1OFrOGPpZgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwMjM0Ng==", "bodyText": "Do the methods need to return a Map of the values being set?\nGiven they're set as system properties, what's the use case?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/530#discussion_r417502346", "createdAt": "2020-04-29T17:52:39Z", "author": {"login": "kenfinnigan"}, "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/InMemoryConnector.java", "diffHunk": "@@ -48,40 +45,79 @@\n      *\n      *     //...\n      *\n+     *     &#64;Before\n+     *     public void setup() {\n+     *         InMemoryConnector.switchIncomingChannelsToInMemory(\"my-channel\");\n+     *     }\n+     *\n+     *     // ..\n+     *\n      *     InMemorySource&lt;Integer&gt; channel = connector.source(\"my-channel\");\n      *     channel.send(1);\n      *     channel.send(2);\n      *\n      * </pre></code>\n      * <p>\n-     * With the {@link InMemorySource}, you can send messages to the channel, mocking the incoming messages.\n      *\n-     * You can also retrieve an {@link InMemorySink} using:\n+     * @param channels the channels to switch, must not be {@code null}, must not contain {@code null}, must not contain\n+     *        a blank value\n+     * @return The map of properties that have been defined. The method sets the system properties, but give\n+     *         you this map to pass the properties around if needed.\n+     */\n+    public static Map<String, String> switchIncomingChannelsToInMemory(String... channels) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bd48199b3811f766d1dc86664605d6542b9b2e5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2MDA5Ng==", "bodyText": "Quarkus Test Resources when using native test.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/530#discussion_r419060096", "createdAt": "2020-05-03T07:12:58Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/InMemoryConnector.java", "diffHunk": "@@ -48,40 +45,79 @@\n      *\n      *     //...\n      *\n+     *     &#64;Before\n+     *     public void setup() {\n+     *         InMemoryConnector.switchIncomingChannelsToInMemory(\"my-channel\");\n+     *     }\n+     *\n+     *     // ..\n+     *\n      *     InMemorySource&lt;Integer&gt; channel = connector.source(\"my-channel\");\n      *     channel.send(1);\n      *     channel.send(2);\n      *\n      * </pre></code>\n      * <p>\n-     * With the {@link InMemorySource}, you can send messages to the channel, mocking the incoming messages.\n      *\n-     * You can also retrieve an {@link InMemorySink} using:\n+     * @param channels the channels to switch, must not be {@code null}, must not contain {@code null}, must not contain\n+     *        a blank value\n+     * @return The map of properties that have been defined. The method sets the system properties, but give\n+     *         you this map to pass the properties around if needed.\n+     */\n+    public static Map<String, String> switchIncomingChannelsToInMemory(String... channels) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwMjM0Ng=="}, "originalCommit": {"oid": "7bd48199b3811f766d1dc86664605d6542b9b2e5"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 108, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}