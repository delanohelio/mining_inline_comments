{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTAwOTM3", "number": 575, "title": "Call the `accepted` method on the right context", "bodyText": "Fix #574", "createdAt": "2020-06-01T16:54:54Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/575", "merged": true, "mergeCommit": {"oid": "171ee17af26c2390dce2874ca4f7643cd65f356c"}, "closed": true, "closedAt": "2020-06-03T07:44:47Z", "author": {"login": "cescoffier"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnYcr7gBqjMzOTg3NjA1MDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnn70jAFqTQyMzQ2NzgzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c610bd68a8117e913281bdcde154c7c0580f43b0", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/c610bd68a8117e913281bdcde154c7c0580f43b0", "committedDate": "2020-06-01T16:54:39Z", "message": "Call the `accepted` method on the right context."}, "afterCommit": {"oid": "535dfe3797c483aa63d453aee6fb42e6b93dbe26", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/535dfe3797c483aa63d453aee6fb42e6b93dbe26", "committedDate": "2020-06-02T17:35:33Z", "message": "Call the `accepted` method on the right context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1096088e3862d8f47613bfc05e5f0f7fdf2a75b7", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1096088e3862d8f47613bfc05e5f0f7fdf2a75b7", "committedDate": "2020-06-03T07:13:23Z", "message": "Call the `accepted` method on the right context."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "535dfe3797c483aa63d453aee6fb42e6b93dbe26", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/535dfe3797c483aa63d453aee6fb42e6b93dbe26", "committedDate": "2020-06-02T17:35:33Z", "message": "Call the `accepted` method on the right context."}, "afterCommit": {"oid": "1096088e3862d8f47613bfc05e5f0f7fdf2a75b7", "author": {"user": {"login": "cescoffier", "name": "Clement Escoffier"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1096088e3862d8f47613bfc05e5f0f7fdf2a75b7", "committedDate": "2020-06-03T07:13:23Z", "message": "Call the `accepted` method on the right context."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDY3ODMx", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/575#pullrequestreview-423467831", "createdAt": "2020-06-03T11:40:45Z", "commit": {"oid": "1096088e3862d8f47613bfc05e5f0f7fdf2a75b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0MDo0NVrOGeX-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0MDo0NVrOGeX-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwMzM1Mg==", "bodyText": "Should it check it needs to do this? Doesn't this also rather change the behaviour anywhere ack() was already being called on the correct thread?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/575#discussion_r434503352", "createdAt": "2020-06-03T11:40:45Z", "author": {"login": "gemmellr"}, "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/AmqpMessage.java", "diffHunk": "@@ -87,8 +86,15 @@ public AmqpMessage(io.vertx.amqp.AmqpMessage msg) {\n \n     @Override\n     public CompletionStage<Void> ack() {\n-        this.message.accepted();\n-        return CompletableFuture.completedFuture(null);\n+        // We must switch to the context having created the message.\n+        // This context is passed when this instance of message is created.\n+        // It's more a Vert.x AMQP client issue which should ensure calling `accepted` on the right context.\n+        CompletableFuture<Void> future = new CompletableFuture<>();\n+        this.context.runOnContext(x -> {\n+            this.message.accepted();\n+            future.complete(null);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1096088e3862d8f47613bfc05e5f0f7fdf2a75b7"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2288, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}