{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTkwNTk1", "number": 783, "title": "CDI Events for Consumer/Producer", "bodyText": "Skipping qualifier for create/delete for now.. so the event is only for create.\nSome other detection (or maybe a separate event entirely) would be needed for destroy.\n--> Edit: we used same event for create & destroy. If the parameter is new, it is a create. If the parameter has been seen before, it is a destroy.", "createdAt": "2020-09-30T00:51:21Z", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783", "merged": true, "mergeCommit": {"oid": "d177f6c3dfdc1c44375f1811e8db68310288d723"}, "closed": true, "closedAt": "2020-09-30T15:22:58Z", "author": {"login": "ebullient"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN2tGRgFqTQ5OTExMTI3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN-bybgFqTQ5OTU0OTYxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTExMjcw", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#pullrequestreview-499111270", "createdAt": "2020-09-30T06:14:49Z", "commit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxNDo0OVrOHaOpow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoxOToyOVrOHaOv5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTA1OQ==", "bodyText": "Can you add a comment about this constructor that is not used during \"normal\" operations.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497265059", "createdAt": "2020-09-30T06:14:49Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+import javax.inject.Inject;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+@ApplicationScoped\n+public class KafkaCDIEvents {\n+    @Inject\n+    Event<Consumer<?, ?>> consumerEvent;\n+\n+    @Inject\n+    Event<Producer<?, ?>> producerEvent;\n+\n+    public Event<Consumer<?, ?>> consumer() {\n+        return consumerEvent;\n+    }\n+\n+    public Event<Producer<?, ?>> producer() {\n+        return producerEvent;\n+    }\n+\n+    public KafkaCDIEvents() {\n+    }\n+\n+    private KafkaCDIEvents(boolean isNoop) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTk5MA==", "bodyText": "Is it even used?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497265990", "createdAt": "2020-09-30T06:17:32Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaCDIEvents.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+import javax.inject.Inject;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+@ApplicationScoped\n+public class KafkaCDIEvents {\n+    @Inject\n+    Event<Consumer<?, ?>> consumerEvent;\n+\n+    @Inject\n+    Event<Producer<?, ?>> producerEvent;\n+\n+    public Event<Consumer<?, ?>> consumer() {\n+        return consumerEvent;\n+    }\n+\n+    public Event<Producer<?, ?>> producer() {\n+        return producerEvent;\n+    }\n+\n+    public KafkaCDIEvents() {\n+    }\n+\n+    private KafkaCDIEvents(boolean isNoop) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NTA1OQ=="}, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjQ5NA==", "bodyText": "Should we reset the counter at the end of each test?", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497266494", "createdAt": "2020-09-30T06:18:58Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2NjY2Mg==", "bodyText": "Nice, I always used AtomicLong! @jponge might be interesting for the spies.", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#discussion_r497266662", "createdAt": "2020-09-30T06:19:29Z", "author": {"login": "cescoffier"}, "path": "smallrye-reactive-messaging-kafka/src/test/java/io/smallrye/reactive/messaging/kafka/CountKafkaCdiEvents.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package io.smallrye.reactive.messaging.kafka;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+import javax.enterprise.event.Event;\n+import javax.enterprise.event.NotificationOptions;\n+import javax.enterprise.util.TypeLiteral;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.producer.Producer;\n+\n+public class CountKafkaCdiEvents extends KafkaCDIEvents {\n+    public static final KafkaCDIEvents noCdiEvents = new CountKafkaCdiEvents();\n+\n+    public final LongAdder firedConsumerEvents = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd5d344f5d44974d9f4674801d2576dc839dc3fc", "author": {"user": {"login": "ebullient", "name": "Erin Schnabel"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/dd5d344f5d44974d9f4674801d2576dc839dc3fc", "committedDate": "2020-09-30T12:48:01Z", "message": "CDI Events for Consumer/Producer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "056efa4b5d56308b8e5341661a00feb538b2dc85", "author": {"user": {"login": "ebullient", "name": "Erin Schnabel"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/056efa4b5d56308b8e5341661a00feb538b2dc85", "committedDate": "2020-09-30T00:43:25Z", "message": "CDI Events for Consumer/Producer"}, "afterCommit": {"oid": "dd5d344f5d44974d9f4674801d2576dc839dc3fc", "author": {"user": {"login": "ebullient", "name": "Erin Schnabel"}}, "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/dd5d344f5d44974d9f4674801d2576dc839dc3fc", "committedDate": "2020-09-30T12:48:01Z", "message": "CDI Events for Consumer/Producer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTQ5NjEz", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/783#pullrequestreview-499549613", "createdAt": "2020-09-30T15:22:43Z", "commit": {"oid": "dd5d344f5d44974d9f4674801d2576dc839dc3fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2275, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}