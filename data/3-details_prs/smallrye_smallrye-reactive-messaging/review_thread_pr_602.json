{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTI3NDA2", "number": 602, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1MzozN1rOEEmUMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1MzozN1rOEEmUMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjU3NTIzOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1MzozN1rOGiUbag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1MzozN1rOGiUbag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzOTQ2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            4. Make sure that we can receive from more that one consumer (see KafkaPriceConsumer and KafkaPriceMessageConsumer below) \n          \n          \n            \n            4. Make sure that we can receive from more that one consumer (see `KafkaPriceConsumer` and `KafkaPriceMessageConsume`r below)", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/602#discussion_r438639466", "createdAt": "2020-06-11T08:53:37Z", "author": {"login": "cescoffier"}, "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "diffHunk": "@@ -14,10 +14,12 @@ kafka.bootstrap.servers=kafka:9092      # <1>\n \n mp.messaging.incoming.prices.connector=smallrye-kafka       # <2>\n mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.DoubleDeserializer    # <3>\n+mp.messaging.incoming.prices.broadcast=true     # <4>\n ----\n 1. Configure the broker location. You can configure it globally or per channel\n 2. Configure the connector to manage the `prices` channel\n 3. Sets the (Kafka) deserializer to read the record's value\n+4. Make sure that we can receive from more that one consumer (see KafkaPriceConsumer and KafkaPriceMessageConsumer below) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5294d5f4d03fe08adf726cb4095bfa5b542561c4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 81, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}