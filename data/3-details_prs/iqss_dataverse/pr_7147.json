{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzM5NzEx", "number": 7147, "title": "Reserve PID at publication if needed", "bodyText": "What this PR does / why we need it: Reserves a PID if needed  at publication time (using a reserve at creation-time PID provider but none has been created, so either a backward-compatibility issue or after a PID provider outage)\nWhich issue(s) this PR closes:\nCloses #7146\nSpecial notes for your reviewer: Would slightly change the guides documentation if adopted\nSuggestions on how to test this: Try publishing without having reserved DOIs at DataCite\nDoes this PR introduce a user interface change? If mockups are available, please link/include them here:\nIs there a release notes update needed for this change?: No\nAdditional documentation:", "createdAt": "2020-07-29T22:15:42Z", "url": "https://github.com/IQSS/dataverse/pull/7147", "merged": true, "mergeCommit": {"oid": "2b6be3935db6a4d699807601dc1bc264abf1580e"}, "closed": true, "closedAt": "2020-08-03T21:31:13Z", "author": {"login": "qqmyers"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5yi0ZgH2gAyNDU4NzM5NzExOmFmNDkwMWY3MzdkZGMwYWM1NWY4NThkYzU1N2U0ZTk1MGE0NDM2MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7YFfcAH2gAyNDU4NzM5NzExOjA5YTg0MDE0ZWYyZTM4NmNjZTM4YTA3ODkzMzFiMTJlZTc4MmNkNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af4901f737ddc0ac55f858dc557e4e950a443610", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/af4901f737ddc0ac55f858dc557e4e950a443610", "committedDate": "2020-07-29T22:13:03Z", "message": "reserve if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "032cb1f91a0fe1f19f27db47bc81661a1d4153dd", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/032cb1f91a0fe1f19f27db47bc81661a1d4153dd", "committedDate": "2020-07-29T22:23:03Z", "message": "merge mixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbf9458581736058d4e41a33e2de40800bdb02b8", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/dbf9458581736058d4e41a33e2de40800bdb02b8", "committedDate": "2020-07-29T22:23:49Z", "message": "Merge remote-tracking branch 'IQSS/develop' into IQSS/7146-reserve_at_publish_when_needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTU0OTQ5", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-457954949", "createdAt": "2020-07-29T22:59:11Z", "commit": {"oid": "dbf9458581736058d4e41a33e2de40800bdb02b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjo1OToxMlrOG5NKKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjo1OToxMlrOG5NKKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzNzYxMA==", "bodyText": "If we are going back to trying to register an unreserved DOI during publishing, it should probably happen in the other, asynchronous part of the workflow - in FinalizeDatasetPublicationCommand. Otherwise we can again end up in a situation where Datacite decides to hang for a while, and this is happening while the dataset is still unlocked, etc.\nAnd in the finalize command we already have this code:\nif ( theDataset.getGlobalIdCreateTime() == null ) {\n   try {\n      registerExternalIdentifier(theDataset, ctxt);\n   }\n   ...\n\nbut of course that registerExternalIdentifier method will need to be modified, because in its current form it would get a new pid assigned to the dataset, if the old one already exists on the Datacite end...", "url": "https://github.com/IQSS/dataverse/pull/7147#discussion_r462637610", "createdAt": "2020-07-29T22:59:12Z", "author": {"login": "landreev"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/PublishDatasetCommand.java", "diffHunk": "@@ -75,7 +74,17 @@ public PublishDatasetResult execute(CommandContext ctxt) throws CommandException\n         boolean reservingPidsSupported = !idServiceBean.registerWhenPublished();\n         if (reservingPidsSupported) {\n             if (theDataset.getGlobalIdCreateTime() == null) {\n-                throw new IllegalCommandException(BundleUtil.getStringFromBundle(\"publishDatasetCommand.pidNotReserved\"), this);\n+            \t//Backward compatibility and recovery from PID provider outage - if we should have reserved at creation time but didn't, try here as well to keep moving. If we still can't reserve (service down, connflict, etc.) then bail\n+            \ttry {\n+                    String returnString = idServiceBean.createIdentifier(this.getDataset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbf9458581736058d4e41a33e2de40800bdb02b8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/89f5c4d81df218192d9ccd22f9088814e3c5fe89", "committedDate": "2020-07-30T14:25:25Z", "message": "alternative moving to FinalizePub"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDU4MTIz", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-458458123", "createdAt": "2020-07-30T14:30:23Z", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDoyM1rOG5lqkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMDoyM1rOG5lqkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTEyMg==", "bodyText": "I think this was just to avoid the retry attempts - same set of calls otherwise.", "url": "https://github.com/IQSS/dataverse/pull/7147#discussion_r463039122", "createdAt": "2020-07-30T14:30:23Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/AbstractDatasetCommand.java", "diffHunk": "@@ -155,32 +155,30 @@ protected void tidyUpFields(DatasetVersion dsv) {\n      * @param ctxt\n      * @throws CommandException\n      */\n-    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt) throws CommandException {\n+    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt, boolean retry) throws CommandException {\n         if (!theDataset.isIdentifierRegistered()) {\n             GlobalIdServiceBean globalIdServiceBean = GlobalIdServiceBean.getBean(theDataset.getProtocol(), ctxt);\n             if ( globalIdServiceBean != null ) {\n                 if (globalIdServiceBean instanceof FakePidProviderServiceBean) {\n-                    try {\n-                        globalIdServiceBean.createIdentifier(theDataset);\n-                    } catch (Throwable ex) {\n-                        logger.warning(\"Problem running createIdentifier for FakePidProvider: \" + ex);\n-                    }\n-                    theDataset.setGlobalIdCreateTime(getTimestamp());\n-                    theDataset.setIdentifierRegistered(true);\n-                    return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDU4OTA5", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-458458909", "createdAt": "2020-07-30T14:31:09Z", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMTowOVrOG5ls1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMTowOVrOG5ls1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTcwMQ==", "bodyText": "With while, there's an extra call to alreadyExists in the first iteration, so switched to do while loop.", "url": "https://github.com/IQSS/dataverse/pull/7147#discussion_r463039701", "createdAt": "2020-07-30T14:31:09Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/AbstractDatasetCommand.java", "diffHunk": "@@ -155,32 +155,30 @@ protected void tidyUpFields(DatasetVersion dsv) {\n      * @param ctxt\n      * @throws CommandException\n      */\n-    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt) throws CommandException {\n+    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt, boolean retry) throws CommandException {\n         if (!theDataset.isIdentifierRegistered()) {\n             GlobalIdServiceBean globalIdServiceBean = GlobalIdServiceBean.getBean(theDataset.getProtocol(), ctxt);\n             if ( globalIdServiceBean != null ) {\n                 if (globalIdServiceBean instanceof FakePidProviderServiceBean) {\n-                    try {\n-                        globalIdServiceBean.createIdentifier(theDataset);\n-                    } catch (Throwable ex) {\n-                        logger.warning(\"Problem running createIdentifier for FakePidProvider: \" + ex);\n-                    }\n-                    theDataset.setGlobalIdCreateTime(getTimestamp());\n-                    theDataset.setIdentifierRegistered(true);\n-                    return;\n+                    retry=false; //No reason to allow a retry with the FakeProvider, so set false for efficiency\n                 }\n                 try {\n                     if (globalIdServiceBean.alreadyExists(theDataset)) {\n                         int attempts = 0;\n-\n-                        while (globalIdServiceBean.alreadyExists(theDataset) && attempts < FOOLPROOF_RETRIAL_ATTEMPTS_LIMIT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDU5OTE1", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-458459915", "createdAt": "2020-07-30T14:32:12Z", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMjoxMlrOG5lv5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozMjoxMlrOG5lv5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MDQ4NA==", "bodyText": "Similar - extra call to alreadyExists since attempts will be over the limit if the while call above doesn't find alreadyExists()==false by the end.", "url": "https://github.com/IQSS/dataverse/pull/7147#discussion_r463040484", "createdAt": "2020-07-30T14:32:12Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/AbstractDatasetCommand.java", "diffHunk": "@@ -155,32 +155,30 @@ protected void tidyUpFields(DatasetVersion dsv) {\n      * @param ctxt\n      * @throws CommandException\n      */\n-    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt) throws CommandException {\n+    protected void registerExternalIdentifier(Dataset theDataset, CommandContext ctxt, boolean retry) throws CommandException {\n         if (!theDataset.isIdentifierRegistered()) {\n             GlobalIdServiceBean globalIdServiceBean = GlobalIdServiceBean.getBean(theDataset.getProtocol(), ctxt);\n             if ( globalIdServiceBean != null ) {\n                 if (globalIdServiceBean instanceof FakePidProviderServiceBean) {\n-                    try {\n-                        globalIdServiceBean.createIdentifier(theDataset);\n-                    } catch (Throwable ex) {\n-                        logger.warning(\"Problem running createIdentifier for FakePidProvider: \" + ex);\n-                    }\n-                    theDataset.setGlobalIdCreateTime(getTimestamp());\n-                    theDataset.setIdentifierRegistered(true);\n-                    return;\n+                    retry=false; //No reason to allow a retry with the FakeProvider, so set false for efficiency\n                 }\n                 try {\n                     if (globalIdServiceBean.alreadyExists(theDataset)) {\n                         int attempts = 0;\n-\n-                        while (globalIdServiceBean.alreadyExists(theDataset) && attempts < FOOLPROOF_RETRIAL_ATTEMPTS_LIMIT) {\n-                            theDataset.setIdentifier(ctxt.datasets().generateDatasetIdentifier(theDataset, globalIdServiceBean));\n-                            logger.log(Level.INFO, \"Attempting to register external identifier for dataset {0} (trying: {1}).\",\n-                                new Object[]{theDataset.getId(), theDataset.getIdentifier()});\n-                            attempts++;\n+                        if(retry) {\n+                            do  {\n+                                theDataset.setIdentifier(ctxt.datasets().generateDatasetIdentifier(theDataset, globalIdServiceBean));\n+                                logger.log(Level.INFO, \"Attempting to register external identifier for dataset {0} (trying: {1}).\",\n+                                    new Object[]{theDataset.getId(), theDataset.getIdentifier()});\n+                                attempts++;\n+                            } while (globalIdServiceBean.alreadyExists(theDataset) && attempts <= FOOLPROOF_RETRIAL_ATTEMPTS_LIMIT);\n                         }\n-\n-                        if (globalIdServiceBean.alreadyExists(theDataset)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTI5NjQ4", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-458529648", "createdAt": "2020-07-30T15:45:43Z", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTo0NTo0M1rOG5o-bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTo0NTo0M1rOG5o-bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA5MzM1OA==", "bodyText": "Independent of the larger discussion about the PR, if we keep the new boolean flag, it could always be set to false here - PID providers that do not register draft DOIs would then try once to create a DOI at publication time and fail if the DOI is already in use, versus retrying and causing all of the files to be 'lost' (at the path for the old/conflicted DOI instead of one found in a retry). Retries would then only occur in the create command (for providers that can reserve).", "url": "https://github.com/IQSS/dataverse/pull/7147#discussion_r463093358", "createdAt": "2020-07-30T15:45:43Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java", "diffHunk": "@@ -83,9 +83,20 @@ public Dataset execute(CommandContext ctxt) throws CommandException {\n             validateDataFiles(theDataset, ctxt);\n             // (this will throw a CommandException if it fails)\n         }\n-        \n+\n+\t\t/*\n+\t\t * Try to register the dataset identifier (making it public). The\n+\t\t * registerExternalIdentifier command will also create the identifier if needed:\n+\t\t * - In the case where the PID provider doesn't support reservations, in which\n+\t\t *   case it will retry if collisions are found \n+\t\t * - In the case where the PID Provider\n+\t\t *   does support reservations, but the Dataset's PID hasn't been reserved (was\n+\t\t *   created prior to v5.0 and admin hasn't run reserve API, or PID Provider was\n+\t\t *   offline at creation time), in which case no retries will be attempted.\n+\t\t */\n+        GlobalIdServiceBean idServiceBean = GlobalIdServiceBean.getBean(getDataset().getProtocol(), ctxt);\n         if ( theDataset.getGlobalIdCreateTime() == null ) {\n-            registerExternalIdentifier(theDataset, ctxt);\n+            registerExternalIdentifier(theDataset, ctxt, idServiceBean.registerWhenPublished());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzgxNzU5", "url": "https://github.com/IQSS/dataverse/pull/7147#pullrequestreview-459381759", "createdAt": "2020-07-31T18:37:05Z", "commit": {"oid": "89f5c4d81df218192d9ccd22f9088814e3c5fe89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cebc6f17eb001cf18e11182dbe39f5206b8cb54", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/1cebc6f17eb001cf18e11182dbe39f5206b8cb54", "committedDate": "2020-07-31T18:50:40Z", "message": "don't retry since it could lose files\n\nfiles don't disappear, but they are stored with a path reflecting the\ninitial PID so changing the PID means that can't be retrieved using any\nnewly created PID - the reason reserve at create time has been\nimplemented for DataCIte and is preferred overall"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a84014ef2e386cce38a0789331b12ee782cd48", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/09a84014ef2e386cce38a0789331b12ee782cd48", "committedDate": "2020-08-03T20:31:20Z", "message": "Merge remote-tracking branch 'IQSS/develop' into\nIQSS/7146-reserve_at_publish_when_needed\n\nConflicts:\n\tsrc/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 724, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}