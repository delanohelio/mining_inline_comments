{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDM4MjA5", "number": 6483, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNzowNDozMFrODWB5PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNzowNDozMFrODWB5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDI2MzAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/DatasetFieldCompoundValue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNzowNDozMFrOFajXxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxOToyMzozNlrOFam0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4NjgyMQ==", "bodyText": "We should remove this debug line.", "url": "https://github.com/IQSS/dataverse/pull/6483#discussion_r363386821", "createdAt": "2020-01-06T17:04:30Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/DatasetFieldCompoundValue.java", "diffHunk": "@@ -148,19 +150,51 @@ public DatasetFieldCompoundValue copy(DatasetField parent) {\n                 if (!childDatasetField.getDatasetFieldType().isSanitizeHtml() && childDatasetField.getDatasetFieldType().isEscapeOutputText()){\n                     sanitizedValue = MarkupChecker.stripAllTags(sanitizedValue);\n                 }\n+                //if a series of child values is comma delimited we want to strip off the final entry's comma\n+                if (format.equals(\"#VALUE, \")) fixTrailingComma = true;\n+                \n                 // replace the special values in the format (note: we replace #VALUE last since we don't\n                 // want any issues if the value itself has #NAME in it)\n+\n                 String displayValue = format\n                         .replace(\"#NAME\", childDatasetField.getDatasetFieldType().getTitle())\n                         //todo: this should be handled in more generic way for any other text that can then be internationalized\n                         // if we need to use replaceAll for regexp, then make sure to use: java.util.regex.Matcher.quoteReplacement(<target string>)\n                         .replace(\"#EMAIL\", BundleUtil.getStringFromBundle(\"dataset.email.hiddenMessage\"))\n                         .replace(\"#VALUE\",  sanitizedValue );\n-\n+                            if(childDatasetField.getDatasetFieldType().getName().equals(\"country\")){\n+                                    System.out.print(displayValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36235d446ccf24814d25ecc4ef7cbda59d17f1c2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ0MzQ1Mg==", "bodyText": "debug code has been removed. The geospatial.tsv file has been updated and the flyway script sql removed.", "url": "https://github.com/IQSS/dataverse/pull/6483#discussion_r363443452", "createdAt": "2020-01-06T19:23:36Z", "author": {"login": "sekmiller"}, "path": "src/main/java/edu/harvard/iq/dataverse/DatasetFieldCompoundValue.java", "diffHunk": "@@ -148,19 +150,51 @@ public DatasetFieldCompoundValue copy(DatasetField parent) {\n                 if (!childDatasetField.getDatasetFieldType().isSanitizeHtml() && childDatasetField.getDatasetFieldType().isEscapeOutputText()){\n                     sanitizedValue = MarkupChecker.stripAllTags(sanitizedValue);\n                 }\n+                //if a series of child values is comma delimited we want to strip off the final entry's comma\n+                if (format.equals(\"#VALUE, \")) fixTrailingComma = true;\n+                \n                 // replace the special values in the format (note: we replace #VALUE last since we don't\n                 // want any issues if the value itself has #NAME in it)\n+\n                 String displayValue = format\n                         .replace(\"#NAME\", childDatasetField.getDatasetFieldType().getTitle())\n                         //todo: this should be handled in more generic way for any other text that can then be internationalized\n                         // if we need to use replaceAll for regexp, then make sure to use: java.util.regex.Matcher.quoteReplacement(<target string>)\n                         .replace(\"#EMAIL\", BundleUtil.getStringFromBundle(\"dataset.email.hiddenMessage\"))\n                         .replace(\"#VALUE\",  sanitizedValue );\n-\n+                            if(childDatasetField.getDatasetFieldType().getName().equals(\"country\")){\n+                                    System.out.print(displayValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4NjgyMQ=="}, "originalCommit": {"oid": "36235d446ccf24814d25ecc4ef7cbda59d17f1c2"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3363, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}