{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTEwMTk3", "number": 6622, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMToyMToxNVrODd1agw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMToyMToxNVrODd1agw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjEwNDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMToyMToxNVrOFmqnnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTowODozMFrOFn1nSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4ODQ3Nw==", "bodyText": "I think the new-ish rule is that when we touch APIs we should put the English in a bundle.", "url": "https://github.com/IQSS/dataverse/pull/6622#discussion_r376088477", "createdAt": "2020-02-06T21:21:15Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -1084,24 +1086,38 @@ public Response getLinks(@PathParam(\"id\") String idSupplied ) {\n     }\n \n     /**\n-     * @todo Make this real. Currently only used for API testing. Copied from\n-     * the equivalent API endpoint for dataverses and simplified with values\n-     * hard coded.\n+     * Add a given assignment to a given user or group\n+     * @param ra role assignment DTO\n+     * @param id dataset id\n+     * @param apiKey\n      */\n     @POST\n     @Path(\"{identifier}/assignments\")\n-    public Response createAssignment(String userOrGroup, @PathParam(\"identifier\") String id, @QueryParam(\"key\") String apiKey) {\n-        boolean apiTestingOnly = true;\n-        if (apiTestingOnly) {\n-            return error(Response.Status.FORBIDDEN, \"This is only for API tests.\");\n-        }\n+    public Response createAssignment(RoleAssignmentDTO ra, @PathParam(\"identifier\") String id, @QueryParam(\"key\") String apiKey) {\n         try {\n             Dataset dataset = findDatasetOrDie(id);\n-            RoleAssignee assignee = findAssignee(userOrGroup);\n+            \n+            RoleAssignee assignee = findAssignee(ra.getAssignee());\n             if (assignee == null) {\n                 return error(Response.Status.BAD_REQUEST, \"Assignee not found\");\n+            }           \n+            \n+            DataverseRole theRole;\n+            Dataverse dv = dataset.getOwner();\n+            theRole = null;\n+            while ((theRole == null) && (dv != null)) {\n+                for (DataverseRole aRole : rolesSvc.availableRoles(dv.getId())) {\n+                    if (aRole.getAlias().equals(ra.getRole())) {\n+                        theRole = aRole;\n+                        break;\n+                    }\n+                }\n+                dv = dv.getOwner();\n             }\n-            DataverseRole theRole = rolesSvc.findBuiltinRoleByAlias(\"admin\");\n+            if (theRole == null) {\n+                return error(Status.BAD_REQUEST, \"Can't find role named '\" + ra.getRole() + \"' in dataverse \" + dataset.getOwner());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7f66c10555cc0e03fc9052f470e5dde4a5a026"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzE5Mw==", "bodyText": "Added revoke and api messages to the Bundle.", "url": "https://github.com/IQSS/dataverse/pull/6622#discussion_r377317193", "createdAt": "2020-02-10T21:08:30Z", "author": {"login": "sekmiller"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -1084,24 +1086,38 @@ public Response getLinks(@PathParam(\"id\") String idSupplied ) {\n     }\n \n     /**\n-     * @todo Make this real. Currently only used for API testing. Copied from\n-     * the equivalent API endpoint for dataverses and simplified with values\n-     * hard coded.\n+     * Add a given assignment to a given user or group\n+     * @param ra role assignment DTO\n+     * @param id dataset id\n+     * @param apiKey\n      */\n     @POST\n     @Path(\"{identifier}/assignments\")\n-    public Response createAssignment(String userOrGroup, @PathParam(\"identifier\") String id, @QueryParam(\"key\") String apiKey) {\n-        boolean apiTestingOnly = true;\n-        if (apiTestingOnly) {\n-            return error(Response.Status.FORBIDDEN, \"This is only for API tests.\");\n-        }\n+    public Response createAssignment(RoleAssignmentDTO ra, @PathParam(\"identifier\") String id, @QueryParam(\"key\") String apiKey) {\n         try {\n             Dataset dataset = findDatasetOrDie(id);\n-            RoleAssignee assignee = findAssignee(userOrGroup);\n+            \n+            RoleAssignee assignee = findAssignee(ra.getAssignee());\n             if (assignee == null) {\n                 return error(Response.Status.BAD_REQUEST, \"Assignee not found\");\n+            }           \n+            \n+            DataverseRole theRole;\n+            Dataverse dv = dataset.getOwner();\n+            theRole = null;\n+            while ((theRole == null) && (dv != null)) {\n+                for (DataverseRole aRole : rolesSvc.availableRoles(dv.getId())) {\n+                    if (aRole.getAlias().equals(ra.getRole())) {\n+                        theRole = aRole;\n+                        break;\n+                    }\n+                }\n+                dv = dv.getOwner();\n             }\n-            DataverseRole theRole = rolesSvc.findBuiltinRoleByAlias(\"admin\");\n+            if (theRole == null) {\n+                return error(Status.BAD_REQUEST, \"Can't find role named '\" + ra.getRole() + \"' in dataverse \" + dataset.getOwner());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4ODQ3Nw=="}, "originalCommit": {"oid": "ba7f66c10555cc0e03fc9052f470e5dde4a5a026"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3297, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}