{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTUyNTAx", "number": 7414, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozMjoyOVrOGRWrZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxOToxNDowOVrOGS2QVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODUwNTMyOnYy", "diffSide": "RIGHT", "path": "src/test/java/edu/harvard/iq/dataverse/api/DatasetsIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozMjoyOVrOJ32bfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMlQxNjoyMjoyOVrOJ4Z8NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0MzIyOA==", "bodyText": "Jenkins is showing an error (400, BAD REQUEST) instead of a 200 here: https://jenkins.dataverse.org/blue/organizations/jenkins/IQSS-Dataverse-Develop-PR/detail/PR-7414/64/tests", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662543228", "createdAt": "2021-07-01T19:32:29Z", "author": {"login": "pdurbin"}, "path": "src/test/java/edu/harvard/iq/dataverse/api/DatasetsIT.java", "diffHunk": "@@ -2164,4 +2157,111 @@ public void testRestrictFileExportDdi() throws IOException {\n                 .body(\"message\", equalTo(\"You do not have permission to download this file.\"));\n     }\n \n+    @Test\n+    public void testSemanticMetadataAPIs() {\n+        Response createUser = UtilIT.createRandomUser();\n+        createUser.prettyPrint();\n+        String username = UtilIT.getUsernameFromResponse(createUser);\n+        String apiToken = UtilIT.getApiTokenFromResponse(createUser);\n+\n+        Response createDataverseResponse = UtilIT.createRandomDataverse(apiToken);\n+        createDataverseResponse.prettyPrint();\n+        String dataverseAlias = UtilIT.getAliasFromResponse(createDataverseResponse);\n+\n+        // Create a dataset using native api\n+        Response createDatasetResponse = UtilIT.createRandomDatasetViaNativeApi(dataverseAlias, apiToken);\n+        createDatasetResponse.prettyPrint();\n+        Integer datasetId = UtilIT.getDatasetIdFromResponse(createDatasetResponse);\n+\n+        // Get the metadata with the semantic api\n+        Response response = UtilIT.getDatasetJsonLDMetadata(datasetId, apiToken);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+        // Compare the metadata with an expected value - the metadatablock entries\n+        // should be the same but there will be additional fields with values related to\n+        // the dataset's creation (e.g. new id)\n+        String jsonLDString = getData(response.getBody().asString());\n+        JsonObject jo = null;\n+        try {\n+            jo = JSONLDUtil.decontextualizeJsonLD(jsonLDString);\n+        } catch (NoSuchMethodError e) {\n+            logger.info(ExceptionUtils.getStackTrace(e));\n+        }\n+        \n+\n+        String expectedJsonLD = UtilIT.getDatasetJson(\"scripts/search/tests/data/dataset-finch1.jsonld\");\n+        jo = Json.createObjectBuilder(jo).remove(\"@id\").remove(\"http://schema.org/dateModified\").build();\n+        String jsonLD = jo.toString();\n+\n+        // ToDo: Are the static pars as expected\n+        JSONAssert.assertEquals(expectedJsonLD, jsonLD, false);\n+        // Now change the title\n+        response = UtilIT.updateDatasetJsonLDMetadata(datasetId, apiToken,\n+                \"{\\\"Title\\\": \\\"New Title\\\", \\\"@context\\\":{\\\"Title\\\": \\\"http://purl.org/dc/terms/title\\\"}}\", true);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+\n+        response = UtilIT.getDatasetJsonLDMetadata(datasetId, apiToken);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+\n+        // Check that the semantic api returns the new title\n+        jsonLDString = getData(response.getBody().asString());\n+        JsonObject jsonLDObject = JSONLDUtil.decontextualizeJsonLD(jsonLDString);\n+        assertEquals(\"New Title\", jsonLDObject.getString(\"http://purl.org/dc/terms/title\"));\n+\n+        // Add an additional description (which is multi-valued and compound)\n+        // Also add new terms of use (single value so would fail with replace false if a\n+        // value existed)\n+        String newDescription = \"{\\\"citation:Description\\\": {\\\"dsDescription:Text\\\": \\\"New description\\\", \\\"https://dataverse.org/schema/core#termsOfUse\\\": \\\"New terms\\\"} \\\"@context\\\":{\\\"citation\\\": \\\"https://dataverse.org/schema/citation/\\\",\\\"dsDescription\\\": \\\"https://dataverse.org/schema/citation/dsDescription#\\\"}}\";\n+        response = UtilIT.updateDatasetJsonLDMetadata(datasetId, apiToken, newDescription, false);\n+        response.then().assertThat().statusCode(OK.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEyNTA0NA==", "bodyText": "Some typos in the json-ld -should be fixed", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663125044", "createdAt": "2021-07-02T16:22:29Z", "author": {"login": "qqmyers"}, "path": "src/test/java/edu/harvard/iq/dataverse/api/DatasetsIT.java", "diffHunk": "@@ -2164,4 +2157,111 @@ public void testRestrictFileExportDdi() throws IOException {\n                 .body(\"message\", equalTo(\"You do not have permission to download this file.\"));\n     }\n \n+    @Test\n+    public void testSemanticMetadataAPIs() {\n+        Response createUser = UtilIT.createRandomUser();\n+        createUser.prettyPrint();\n+        String username = UtilIT.getUsernameFromResponse(createUser);\n+        String apiToken = UtilIT.getApiTokenFromResponse(createUser);\n+\n+        Response createDataverseResponse = UtilIT.createRandomDataverse(apiToken);\n+        createDataverseResponse.prettyPrint();\n+        String dataverseAlias = UtilIT.getAliasFromResponse(createDataverseResponse);\n+\n+        // Create a dataset using native api\n+        Response createDatasetResponse = UtilIT.createRandomDatasetViaNativeApi(dataverseAlias, apiToken);\n+        createDatasetResponse.prettyPrint();\n+        Integer datasetId = UtilIT.getDatasetIdFromResponse(createDatasetResponse);\n+\n+        // Get the metadata with the semantic api\n+        Response response = UtilIT.getDatasetJsonLDMetadata(datasetId, apiToken);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+        // Compare the metadata with an expected value - the metadatablock entries\n+        // should be the same but there will be additional fields with values related to\n+        // the dataset's creation (e.g. new id)\n+        String jsonLDString = getData(response.getBody().asString());\n+        JsonObject jo = null;\n+        try {\n+            jo = JSONLDUtil.decontextualizeJsonLD(jsonLDString);\n+        } catch (NoSuchMethodError e) {\n+            logger.info(ExceptionUtils.getStackTrace(e));\n+        }\n+        \n+\n+        String expectedJsonLD = UtilIT.getDatasetJson(\"scripts/search/tests/data/dataset-finch1.jsonld\");\n+        jo = Json.createObjectBuilder(jo).remove(\"@id\").remove(\"http://schema.org/dateModified\").build();\n+        String jsonLD = jo.toString();\n+\n+        // ToDo: Are the static pars as expected\n+        JSONAssert.assertEquals(expectedJsonLD, jsonLD, false);\n+        // Now change the title\n+        response = UtilIT.updateDatasetJsonLDMetadata(datasetId, apiToken,\n+                \"{\\\"Title\\\": \\\"New Title\\\", \\\"@context\\\":{\\\"Title\\\": \\\"http://purl.org/dc/terms/title\\\"}}\", true);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+\n+        response = UtilIT.getDatasetJsonLDMetadata(datasetId, apiToken);\n+        response.then().assertThat().statusCode(OK.getStatusCode());\n+\n+        // Check that the semantic api returns the new title\n+        jsonLDString = getData(response.getBody().asString());\n+        JsonObject jsonLDObject = JSONLDUtil.decontextualizeJsonLD(jsonLDString);\n+        assertEquals(\"New Title\", jsonLDObject.getString(\"http://purl.org/dc/terms/title\"));\n+\n+        // Add an additional description (which is multi-valued and compound)\n+        // Also add new terms of use (single value so would fail with replace false if a\n+        // value existed)\n+        String newDescription = \"{\\\"citation:Description\\\": {\\\"dsDescription:Text\\\": \\\"New description\\\", \\\"https://dataverse.org/schema/core#termsOfUse\\\": \\\"New terms\\\"} \\\"@context\\\":{\\\"citation\\\": \\\"https://dataverse.org/schema/citation/\\\",\\\"dsDescription\\\": \\\"https://dataverse.org/schema/citation/dsDescription#\\\"}}\";\n+        response = UtilIT.updateDatasetJsonLDMetadata(datasetId, apiToken, newDescription, false);\n+        response.then().assertThat().statusCode(OK.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0MzIyOA=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODUxNTY3OnYy", "diffSide": "RIGHT", "path": "conf/solr/8.8.1/schema_dv_mdb_copies.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozNTo0N1rOJ32h5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMlQxNjoyNDoyMlrOJ4Z_zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NDg2OA==", "bodyText": "I though we removed conf/solr/8.8.1/schema_dv_mdb_copies.xml in pull request #7865. Why is it back?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662544868", "createdAt": "2021-07-01T19:35:47Z", "author": {"login": "pdurbin"}, "path": "conf/solr/8.8.1/schema_dv_mdb_copies.xml", "diffHunk": "@@ -0,0 +1,162 @@\n+<schema>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEyNTk2NQ==", "bodyText": "No reason - it's gone.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663125965", "createdAt": "2021-07-02T16:24:22Z", "author": {"login": "qqmyers"}, "path": "conf/solr/8.8.1/schema_dv_mdb_copies.xml", "diffHunk": "@@ -0,0 +1,162 @@\n+<schema>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NDg2OA=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODUyMTExOnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6497-semantic-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozNzoyMlrOJ32lHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozNzoyMlrOJ32lHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NTY5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Dataset metadata can be retrieved/set/updated using a new, flatter JSONLD format - following the format of an OAI-ORE export (RDA-conformant Bags), allowing for easier transfer of metadata to/from other systems (i.e. without needing to know Dataverse's metadata block and field storage architecture). This new API also allows for the update of terms metadata (#5899).\n          \n          \n            \n            Dataset metadata can be retrieved/set/updated using a new, flatter JSON-LD format - following the format of an OAI-ORE export (RDA-conformant Bags), allowing for easier transfer of metadata to/from other systems (i.e. without needing to know Dataverse's metadata block and field storage architecture). This new API also allows for the update of terms metadata (#5899).", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662545694", "createdAt": "2021-07-01T19:37:22Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6497-semantic-api.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# Release Highlights\n+\n+### Dataset Semantic API (Experimental)\n+\n+Dataset metadata can be retrieved/set/updated using a new, flatter JSONLD format - following the format of an OAI-ORE export (RDA-conformant Bags), allowing for easier transfer of metadata to/from other systems (i.e. without needing to know Dataverse's metadata block and field storage architecture). This new API also allows for the update of terms metadata (#5899).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODUyNjU1OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTozOTowMlrOJ32oaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODozMjo1M1rOJ5_hIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NjUzNg==", "bodyText": "This sort of makes it sound like RDA is supporting the development of this import code.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662546536", "createdAt": "2021-07-01T19:39:02Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEyODc4OA==", "bodyText": "It did support development - via a small GDCC grant in the first part of 2020.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663128788", "createdAt": "2021-07-02T16:29:46Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NjUzNg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc4OTI4MA==", "bodyText": "Oh! Great!", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664789280", "createdAt": "2021-07-06T18:32:53Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NjUzNg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODUzMTM0OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQxOTo0MDo0MlrOJ32rew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMlQxNjozMjoxOVrOJ4aQbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NzMyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n          \n          \n            \n            an experimental API has been created that provides a json-ld alternative to the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662547323", "createdAt": "2021-07-01T19:40:42Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NzcyNw==", "bodyText": "Are we bumping the API? Once this is merged, it's part of v1.0, right?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662547727", "createdAt": "2021-07-01T19:41:34Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NzMyMw=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzMDIyMA==", "bodyText": "It's still all v1.0.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663130220", "createdAt": "2021-07-02T16:32:19Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU0NzMyMw=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODYxMDY2OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDowNToyMlrOJ33blA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODozNzoxOVrOJ5_q7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU1OTYzNg==", "bodyText": "What's the story or history on \"application/ld+json\" vs. \"application/json-ld\"? Why support both?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662559636", "createdAt": "2021-07-01T20:05:22Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzMjAxMA==", "bodyText": "I had json-ld to start, which is what DANS has coded to and what the DVUploader can support now (DVUploader can, at least as a proof-of-concept, read archived Bags and recreate a dataset using this PR and the related migrate API PR - that was part of the RDA proposal). As far as I can tell,  ld+json is newer/more of a standard so I added support for that. I kept the older one just to avoid having to immediately update those other components.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663132010", "createdAt": "2021-07-02T16:35:52Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU1OTYzNg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc5MTc4OA==", "bodyText": "Interesting. Thanks.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664791788", "createdAt": "2021-07-06T18:37:19Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU1OTYzNg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODYxNjg2OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDowNzozMFrOJ33fcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wOFQxNjo1ODoyMFrOJ7f59Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MDYyNQ==", "bodyText": "Should we have URLs like https://dataverse.org/schema/citation/dsDescription actually work?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662560625", "createdAt": "2021-07-01T20:07:30Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzMzczOA==", "bodyText": "That would be useful. These URLs were defined a while back with the changes to add URLs to the metadata blocks and export them in the OAI-ORE/Bag structures. It would probably require some discussion of what should actually be available from such links and where that info would come from (given that new metadata blocks can define new URLs).", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663133738", "createdAt": "2021-07-02T16:39:30Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MDYyNQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc5MTQ3Mg==", "bodyText": "Ok, let's keep discussing, I guess. \ud83d\ude04", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664791472", "createdAt": "2021-07-06T18:36:47Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MDYyNQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjM2ODUwMQ==", "bodyText": "It would be great to have some review of these 'internal terms' both to see if there are external terms that make sense (I did try to avoid them when I did the original archiving work but some terms either didn't have a match at all or matched in meaning but didn't allow the values Dataverse has (either multiple versus single values or things like contact having to be a person or requiring a phone number in the value when Dataverse doesn't have that, etc. - basically term range issues). Doing that and doing something more formal to give the remaining real ones live URLs with some info about that term (deciding whether the definitions are community wide (with a single community URL) or are instance specific (with URLs related to the specific machine), etc.) would be good. Perhaps at least creating an issue would be a good step?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666368501", "createdAt": "2021-07-08T16:58:20Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MDYyNQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODYzMTYyOnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxMTo1MVrOJ33oPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODo0MDoxN1rOJ5_x8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2Mjg3OA==", "bodyText": "This sounds like a fix for this issue:\n\nAllow terms metadata to be changed with Native API #5899", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662562878", "createdAt": "2021-07-01T20:11:51Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzNDMzMQ==", "bodyText": "Yes - this in particular is Sciences PO's interest in this. DANS is using it for their overall migration effort. It wasn't clear to me though whether this should close that issue or not.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663134331", "createdAt": "2021-07-02T16:40:44Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2Mjg3OA=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc5MzU4Nw==", "bodyText": "Ok. For now I left a comment on that issue that this pull request my close it.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664793587", "createdAt": "2021-07-06T18:40:17Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2Mjg3OA=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODYzNzE0OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxMzozNFrOJ33rdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODo0MjozNlrOJ5_3UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MzcwMg==", "bodyText": "It's good to mention this \"either form\" factoid here but we should also mention it above somewhere in the main intro.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662563702", "createdAt": "2021-07-01T20:13:34Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzNzgxNw==", "bodyText": "This is basically standard JSON-LD info - @contexts can always be replaced by a no-@context form that has the same meaning. The good thing is that the code in the PR normalizes whatever JSON-LD it gets, so any valid form (with/without @context, using a @context different than the one Dataverse uses in the OAI_ORE exports) will work. That's nominally implicit in saying the payloads are JSON-LD though.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663137817", "createdAt": "2021-07-02T16:47:57Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MzcwMg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc5NDk2MA==", "bodyText": "Ok, I'm still learning JSON-LD myself so I guess we'll all learn together.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664794960", "createdAt": "2021-07-06T18:42:36Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2MzcwMg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODY0MzQ5OnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxNTozNFrOJ33vSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODozNDoxMlrOJ5_kIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NDY4MQ==", "bodyText": "I'm confused about how this just sort of ends. Can we have a downloadable JSON-LD file to use as an example when creating a dataset?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662564681", "createdAt": "2021-07-01T20:15:34Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. \n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Create a Dataset\n+----------------\n+\n+Specifying the Content-Type as application/ld+json with the existing /api/dataverses/{id}/datasets API call (see :ref:`create-dataset-command`) supports using the same metadata format when creating a Dataset.\n+\n+With curl, this is done by adding the following header:\n+\n+.. code-block:: bash\n+\n+  -H 'Content-Type: application/ld+json' ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE1OTMyOQ==", "bodyText": "I added an example.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663159329", "createdAt": "2021-07-02T17:29:26Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. \n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Create a Dataset\n+----------------\n+\n+Specifying the Content-Type as application/ld+json with the existing /api/dataverses/{id}/datasets API call (see :ref:`create-dataset-command`) supports using the same metadata format when creating a Dataset.\n+\n+With curl, this is done by adding the following header:\n+\n+.. code-block:: bash\n+\n+  -H 'Content-Type: application/ld+json' ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NDY4MQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc5MDA0OQ==", "bodyText": "Great. Thanks.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664790049", "createdAt": "2021-07-06T18:34:12Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/developers/dataset-semantic-metadata-api.rst", "diffHunk": "@@ -0,0 +1,91 @@\n+Dataset Semantic Metadata API\n+=============================\n+\n+The OAI_ORE metadata export format represents Dataset metadata using json-ld (see the :doc:`/admin/metadataexport` section). As part of an RDA-supported effort to allow import of Datasets exported as Bags with an included OAI_ORE metadata file, \n+an experimental API has been created that provides a json-ld alternative the the v1.0 API calls to get/set/delete Dataset metadata in the :doc:`/api/native-api`.\n+\n+You may prefer to work with this API if you are building a tool to import from a Bag/OAI-ORE source or already work with json-ld representations of metadata, or if you prefer the flatter json-ld representation to Dataverse software's json representation (which includes structure related to the metadata blocks involved and the type/multiplicity of the metadata fields.) \n+You may not want to use this API if you need stability and backward compatibility (the 'experimental' designation for this API implies that community feedback is desired and that, in future Dataverse software versions, the API may be modified based on that feedback).\n+\n+Note: The examples use the 'application/ld+json' mimetype. For compatibility reasons, the APIs also be used with mimetype \"application/json-ld\"\n+  \n+Get Dataset Metadata\n+--------------------\n+\n+To get the json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID), and, for specific versions, the version number.\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example 1: Get metadata for version '1.0'\n+ \n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/$DATASET_ID/versions/$VERSION/metadata\"\n+\n+  Example 2: Get metadata for the latest version using the DATASET PID\n+\n+    curl -H X-Dataverse-key:$API_TOKEN -H 'Accept: application/ld+json' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response and JSON-LD mirroring the OAI-ORE representation in the returned 'data' object.\n+\n+\n+Add Dataset Metadata\n+--------------------\n+\n+To add json-ld formatted metadata for a Dataset, specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID). Adding '?replace=true' will overwrite an existing metadata value. The default (replace=false) will only add new metadata or add a new value to a multi-valued field. \n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Change the Dataset title \n+ \n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"Title\": \"Submit menu test\", \"@context\":{\"Title\": \"http://purl.org/dc/terms/title\"}}' \"$SERVER_URL/api/datasets/$DATASET_ID/metadata?replace=true\"\n+\n+  Example 2: Add a description using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"citation:Description\": {\"dsDescription:Text\": \"New description\"}, \"@context\":{\"citation\": \"https://dataverse.org/schema/citation/\",\"dsDescription\": \"https://dataverse.org/schema/citation/dsDescription#\"}}' \"$SERVER_URL/api/datasets/:persistentId/metadata?persistentId=$DATASET_PID\"\n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Delete Dataset Metadata\n+-----------------------\n+\n+To delete metadata for a Dataset, send a json-ld representation of the fields to delete and specify the Dataset ID (DATASET_ID) or Persistent identifier (DATASET_PID).\n+\n+.. code-block:: bash\n+\n+  export API_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n+  export DATASET_ID='12345'\n+  export DATASET_PID='doi:10.5072/FK2A1B2C3'\n+  export VERSION='1.0'\n+  export SERVER_URL=https://demo.dataverse.org\n+ \n+  Example: Delete the TermsOfUseAndAccess 'restrictions' value 'No restrictions' for the latest version using the DATASET PID\n+\n+    curl -X PUT -H X-Dataverse-key:$API_TOKEN -H 'Content-Type: application/ld+json' -d '{\"https://dataverse.org/schema/core#restrictions\":\"No restrictions\"}' \"$SERVER_URL/api/datasets/:persistentId/metadata/delete?persistentId=$DATASET_PID\"\n+\n+Note, this example uses the term URI directly rather than adding an '@context' element. You can use either form in any of these API calls. \n+\n+You should expect a 200 (\"OK\") response indicating whether a draft Dataset version was created or an existing draft was updated.\n+\n+\n+Create a Dataset\n+----------------\n+\n+Specifying the Content-Type as application/ld+json with the existing /api/dataverses/{id}/datasets API call (see :ref:`create-dataset-command`) supports using the same metadata format when creating a Dataset.\n+\n+With curl, this is done by adding the following header:\n+\n+.. code-block:: bash\n+\n+  -H 'Content-Type: application/ld+json' ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NDY4MQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODY0ODQwOnYy", "diffSide": "RIGHT", "path": "scripts/api/data/metadatablocks/migration.tsv", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxNjo1NVrOJ33yHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODo1MDo1MlrOJ6AQFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTQwNw==", "bodyText": "Do we need this migration.tsv? It isn't loaded by default on new installations?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662565407", "createdAt": "2021-07-01T20:16:55Z", "author": {"login": "pdurbin"}, "path": "scripts/api/data/metadatablocks/migration.tsv", "diffHunk": "@@ -0,0 +1,5 @@\n+#metadataBlock\tname\tdataverseAlias\tdisplayName\tblockURI\t\t\t\t\t\t\t\t\t\t\t\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2MzEyMg==", "bodyText": "It is not required and is not auto-loaded. It's a bit of a complex situation: The RDA grant had, as one goal, the idea of being able to import Bags created by other repos. An expectation there is that the other repo (a Dataverse with different blocks or some other repo software entirely) could have metadata that doesn't fit into the receiving Dataverse's schema (including blocks). So - the metadataOnOrig field is a json structured field that can store any/all metadata that doesn't match a known field. So a transfer can be done without losing metadata. That said, putting metadata in this field makes it less useful than if there were a matching field. The current code will ignore metadata that doesn't match if this block is not installed and will use it if it is. I can explain that, or remove the code from the PR. For migration cases, I think even this limited functionality could be useful, but I suspect that most people using the 'experimental' API here won't want to enable it.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663163122", "createdAt": "2021-07-02T17:37:30Z", "author": {"login": "qqmyers"}, "path": "scripts/api/data/metadatablocks/migration.tsv", "diffHunk": "@@ -0,0 +1,5 @@\n+#metadataBlock\tname\tdataverseAlias\tdisplayName\tblockURI\t\t\t\t\t\t\t\t\t\t\t\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTQwNw=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgwMTMwMQ==", "bodyText": "This was all non-obvious to me from a quick look at the code. If it's on the table to remove the metadataOnOrig functionality, I think we should. If you get other opinions that we should keep it, please document how it works.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664801301", "createdAt": "2021-07-06T18:50:52Z", "author": {"login": "pdurbin"}, "path": "scripts/api/data/metadatablocks/migration.tsv", "diffHunk": "@@ -0,0 +1,5 @@\n+#metadataBlock\tname\tdataverseAlias\tdisplayName\tblockURI\t\t\t\t\t\t\t\t\t\t\t\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTQwNw=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODY1MTY0OnYy", "diffSide": "RIGHT", "path": "scripts/search/tests/data/dataset-finch1.jsonld", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxNzo1OFrOJ330Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wOFQxODo1OTo1OFrOJ7krOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTkxOQ==", "bodyText": "How do I specify multiple authors?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662565919", "createdAt": "2021-07-01T20:17:58Z", "author": {"login": "pdurbin"}, "path": "scripts/search/tests/data/dataset-finch1.jsonld", "diffHunk": "@@ -0,0 +1,26 @@\n+\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2NDYzMg==", "bodyText": "An array of objects with the name/affiliation keys as the value of the creator key. This is the same way the OAI-ORE export shows multiple authors.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663164632", "createdAt": "2021-07-02T17:40:53Z", "author": {"login": "qqmyers"}, "path": "scripts/search/tests/data/dataset-finch1.jsonld", "diffHunk": "@@ -0,0 +1,26 @@\n+\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTkxOQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgwMzE4Nw==", "bodyText": "That's what I figured. When I was working on the Schema.org JSON-LD output I was shocked by how loosey goosey JSON-LD is.\nAt some point it might behoove us to add a little crash course on JSON-LD to the guides, or at least plenty of examples so that users get the hang of it. Otherwise, I think we can anticipate questions like \"How do I specify multiple authors?\"", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664803187", "createdAt": "2021-07-06T18:54:03Z", "author": {"login": "pdurbin"}, "path": "scripts/search/tests/data/dataset-finch1.jsonld", "diffHunk": "@@ -0,0 +1,26 @@\n+\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTkxOQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjM3MzI1MQ==", "bodyText": "Having a human-readable term label (that probably isn't globally unique/machine interpretable) while still supporting strict machine readability adds some complexity, but its pretty straight forward to either never use an @context or to always use a standard/static one.\nRegardless, it wouldn't be hard to add documentation over time.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666373251", "createdAt": "2021-07-08T17:05:23Z", "author": {"login": "qqmyers"}, "path": "scripts/search/tests/data/dataset-finch1.jsonld", "diffHunk": "@@ -0,0 +1,26 @@\n+\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTkxOQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjQ0NjY1MQ==", "bodyText": "\ud83d\udc4d for more docs over time. I think we can live with what we have now, especially since it's experimental.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666446651", "createdAt": "2021-07-08T18:59:58Z", "author": {"login": "pdurbin"}, "path": "scripts/search/tests/data/dataset-finch1.jsonld", "diffHunk": "@@ -0,0 +1,26 @@\n+\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NTkxOQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODY1NjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/DatasetFieldServiceApi.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDoxOTozOVrOJ333KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODo1NDoyN1rOJ6AYgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NjY5Ng==", "bodyText": "I'm happy to see someone updating this old API. \ud83d\ude04", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662566696", "createdAt": "2021-07-01T20:19:39Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/DatasetFieldServiceApi.java", "diffHunk": "@@ -168,7 +169,8 @@ public Response getByName(@PathParam(\"name\") String name) {\n                     .add(\"parentAllowsMultiples\", parentAllowsMultiplesDisplay)\n                     .add(\"solrFieldSearchable\", solrFieldSearchable)\n                     .add(\"solrFieldFacetable\", solrFieldFacetable)\n-                    .add(\"isRequired\", isRequired));\n+                    .add(\"isRequired\", isRequired)\n+                    .add(\"uri\", uri));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2NjcyOA==", "bodyText": "This is mostly a separate thing. Slava pointed out that this API didn't include the URI for a term (which was added with the OAI-ORE/Bag work from QDR). Since this was a one line change related to semantics, I added it here but the rest of the changes do not depend on this API having the extra field.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663166728", "createdAt": "2021-07-02T17:45:19Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/DatasetFieldServiceApi.java", "diffHunk": "@@ -168,7 +169,8 @@ public Response getByName(@PathParam(\"name\") String name) {\n                     .add(\"parentAllowsMultiples\", parentAllowsMultiplesDisplay)\n                     .add(\"solrFieldSearchable\", solrFieldSearchable)\n                     .add(\"solrFieldFacetable\", solrFieldFacetable)\n-                    .add(\"isRequired\", isRequired));\n+                    .add(\"isRequired\", isRequired)\n+                    .add(\"uri\", uri));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NjY5Ng=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgwMzQ1Ng==", "bodyText": "Cool. Why not.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664803456", "createdAt": "2021-07-06T18:54:27Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/DatasetFieldServiceApi.java", "diffHunk": "@@ -168,7 +169,8 @@ public Response getByName(@PathParam(\"name\") String name) {\n                     .add(\"parentAllowsMultiples\", parentAllowsMultiplesDisplay)\n                     .add(\"solrFieldSearchable\", solrFieldSearchable)\n                     .add(\"solrFieldFacetable\", solrFieldFacetable)\n-                    .add(\"isRequired\", isRequired));\n+                    .add(\"isRequired\", isRequired)\n+                    .add(\"uri\", uri));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU2NjY5Ng=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODcwNDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDozMToyM1rOJ34UZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMlQxNzo0Njo1OFrOJ4cjAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDE4Mg==", "bodyText": "This should be deleted or set to fine.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662574182", "createdAt": "2021-07-01T20:31:23Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -651,6 +651,96 @@ public Response updateDraftVersion( String jsonBody, @PathParam(\"id\") String id,\n             \n         }\n     }\n+  \n+    @GET\n+    @Path(\"{id}/versions/{versionId}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @PathParam(\"versionId\") String versionId, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        try {\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = getDatasetVersionOrDie(req, versionId, findDatasetOrDie(id), uriInfo, headers);\n+            OREMap ore = new OREMap(dsv,\n+                    settingsService.isTrueForKey(SettingsServiceBean.Key.ExcludeEmailFromExport, false));\n+            return ok(ore.getOREMapBuilder(true));\n+\n+        } catch (WrappedResponse ex) {\n+            ex.printStackTrace();\n+            return ex.getResponse();\n+        } catch (Exception jpe) {\n+            logger.log(Level.SEVERE, \"Error getting jsonld metadata for dsv: \", jpe.getLocalizedMessage());\n+            jpe.printStackTrace();\n+            return error(Response.Status.INTERNAL_SERVER_ERROR, jpe.getLocalizedMessage());\n+        }\n+    }\n+\n+    @GET\n+    @Path(\"{id}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        return getVersionJsonLDMetadata(id, \":draft\", uriInfo, headers);\n+    }\n+            \n+    @PUT\n+    @Path(\"{id}/metadata\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response updateVersionMetadata(String jsonLDBody, @PathParam(\"id\") String id, @DefaultValue(\"false\") @QueryParam(\"replace\") boolean replaceTerms) {\n+\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.updateDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc, !replaceTerms, false);\n+            \n+            DatasetVersion managedVersion;\n+            if (updateDraft) {\n+                Dataset managedDataset = execCommand(new UpdateDatasetVersionCommand(ds, req));\n+                managedVersion = managedDataset.getEditVersion();\n+            } else {\n+                managedVersion = execCommand(new CreateDatasetVersionCommand(req, ds, dsv));\n+            }\n+            String info = updateDraft ? \"Version Updated\" : \"Version Created\";\n+            return ok(Json.createObjectBuilder().add(info, managedVersion.getVersionDate()));\n+\n+        } catch (WrappedResponse ex) {\n+            return ex.getResponse();\n+        } catch (JsonParsingException jpe) {\n+            logger.log(Level.SEVERE, \"Error parsing dataset json. Json: {0}\", jsonLDBody);\n+            return error(Status.BAD_REQUEST, \"Error parsing Json: \" + jpe.getMessage());\n+        }\n+    }\n+    \n+    @PUT\n+    @Path(\"{id}/metadata/delete\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response deleteMetadata(String jsonLDBody, @PathParam(\"id\") String id) {\n+        logger.info(\"In delteMetadata\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2Nzc0Ng==", "bodyText": "removed", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663167746", "createdAt": "2021-07-02T17:46:58Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -651,6 +651,96 @@ public Response updateDraftVersion( String jsonBody, @PathParam(\"id\") String id,\n             \n         }\n     }\n+  \n+    @GET\n+    @Path(\"{id}/versions/{versionId}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @PathParam(\"versionId\") String versionId, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        try {\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = getDatasetVersionOrDie(req, versionId, findDatasetOrDie(id), uriInfo, headers);\n+            OREMap ore = new OREMap(dsv,\n+                    settingsService.isTrueForKey(SettingsServiceBean.Key.ExcludeEmailFromExport, false));\n+            return ok(ore.getOREMapBuilder(true));\n+\n+        } catch (WrappedResponse ex) {\n+            ex.printStackTrace();\n+            return ex.getResponse();\n+        } catch (Exception jpe) {\n+            logger.log(Level.SEVERE, \"Error getting jsonld metadata for dsv: \", jpe.getLocalizedMessage());\n+            jpe.printStackTrace();\n+            return error(Response.Status.INTERNAL_SERVER_ERROR, jpe.getLocalizedMessage());\n+        }\n+    }\n+\n+    @GET\n+    @Path(\"{id}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        return getVersionJsonLDMetadata(id, \":draft\", uriInfo, headers);\n+    }\n+            \n+    @PUT\n+    @Path(\"{id}/metadata\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response updateVersionMetadata(String jsonLDBody, @PathParam(\"id\") String id, @DefaultValue(\"false\") @QueryParam(\"replace\") boolean replaceTerms) {\n+\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.updateDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc, !replaceTerms, false);\n+            \n+            DatasetVersion managedVersion;\n+            if (updateDraft) {\n+                Dataset managedDataset = execCommand(new UpdateDatasetVersionCommand(ds, req));\n+                managedVersion = managedDataset.getEditVersion();\n+            } else {\n+                managedVersion = execCommand(new CreateDatasetVersionCommand(req, ds, dsv));\n+            }\n+            String info = updateDraft ? \"Version Updated\" : \"Version Created\";\n+            return ok(Json.createObjectBuilder().add(info, managedVersion.getVersionDate()));\n+\n+        } catch (WrappedResponse ex) {\n+            return ex.getResponse();\n+        } catch (JsonParsingException jpe) {\n+            logger.log(Level.SEVERE, \"Error parsing dataset json. Json: {0}\", jsonLDBody);\n+            return error(Status.BAD_REQUEST, \"Error parsing Json: \" + jpe.getMessage());\n+        }\n+    }\n+    \n+    @PUT\n+    @Path(\"{id}/metadata/delete\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response deleteMetadata(String jsonLDBody, @PathParam(\"id\") String id) {\n+        logger.info(\"In delteMetadata\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDE4Mg=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODcwNTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDozMTo0MVrOJ34U9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMlQxNzo0Njo0N1rOJ4cisA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDMyNw==", "bodyText": "Same. Delete or set to fine.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662574327", "createdAt": "2021-07-01T20:31:41Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -651,6 +651,96 @@ public Response updateDraftVersion( String jsonBody, @PathParam(\"id\") String id,\n             \n         }\n     }\n+  \n+    @GET\n+    @Path(\"{id}/versions/{versionId}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @PathParam(\"versionId\") String versionId, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        try {\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = getDatasetVersionOrDie(req, versionId, findDatasetOrDie(id), uriInfo, headers);\n+            OREMap ore = new OREMap(dsv,\n+                    settingsService.isTrueForKey(SettingsServiceBean.Key.ExcludeEmailFromExport, false));\n+            return ok(ore.getOREMapBuilder(true));\n+\n+        } catch (WrappedResponse ex) {\n+            ex.printStackTrace();\n+            return ex.getResponse();\n+        } catch (Exception jpe) {\n+            logger.log(Level.SEVERE, \"Error getting jsonld metadata for dsv: \", jpe.getLocalizedMessage());\n+            jpe.printStackTrace();\n+            return error(Response.Status.INTERNAL_SERVER_ERROR, jpe.getLocalizedMessage());\n+        }\n+    }\n+\n+    @GET\n+    @Path(\"{id}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        return getVersionJsonLDMetadata(id, \":draft\", uriInfo, headers);\n+    }\n+            \n+    @PUT\n+    @Path(\"{id}/metadata\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response updateVersionMetadata(String jsonLDBody, @PathParam(\"id\") String id, @DefaultValue(\"false\") @QueryParam(\"replace\") boolean replaceTerms) {\n+\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.updateDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc, !replaceTerms, false);\n+            \n+            DatasetVersion managedVersion;\n+            if (updateDraft) {\n+                Dataset managedDataset = execCommand(new UpdateDatasetVersionCommand(ds, req));\n+                managedVersion = managedDataset.getEditVersion();\n+            } else {\n+                managedVersion = execCommand(new CreateDatasetVersionCommand(req, ds, dsv));\n+            }\n+            String info = updateDraft ? \"Version Updated\" : \"Version Created\";\n+            return ok(Json.createObjectBuilder().add(info, managedVersion.getVersionDate()));\n+\n+        } catch (WrappedResponse ex) {\n+            return ex.getResponse();\n+        } catch (JsonParsingException jpe) {\n+            logger.log(Level.SEVERE, \"Error parsing dataset json. Json: {0}\", jsonLDBody);\n+            return error(Status.BAD_REQUEST, \"Error parsing Json: \" + jpe.getMessage());\n+        }\n+    }\n+    \n+    @PUT\n+    @Path(\"{id}/metadata/delete\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response deleteMetadata(String jsonLDBody, @PathParam(\"id\") String id) {\n+        logger.info(\"In delteMetadata\");\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.deleteDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc);\n+            logger.info(\"Updating ver\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2NzY2NA==", "bodyText": "removed", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663167664", "createdAt": "2021-07-02T17:46:47Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -651,6 +651,96 @@ public Response updateDraftVersion( String jsonBody, @PathParam(\"id\") String id,\n             \n         }\n     }\n+  \n+    @GET\n+    @Path(\"{id}/versions/{versionId}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @PathParam(\"versionId\") String versionId, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        try {\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = getDatasetVersionOrDie(req, versionId, findDatasetOrDie(id), uriInfo, headers);\n+            OREMap ore = new OREMap(dsv,\n+                    settingsService.isTrueForKey(SettingsServiceBean.Key.ExcludeEmailFromExport, false));\n+            return ok(ore.getOREMapBuilder(true));\n+\n+        } catch (WrappedResponse ex) {\n+            ex.printStackTrace();\n+            return ex.getResponse();\n+        } catch (Exception jpe) {\n+            logger.log(Level.SEVERE, \"Error getting jsonld metadata for dsv: \", jpe.getLocalizedMessage());\n+            jpe.printStackTrace();\n+            return error(Response.Status.INTERNAL_SERVER_ERROR, jpe.getLocalizedMessage());\n+        }\n+    }\n+\n+    @GET\n+    @Path(\"{id}/metadata\")\n+    @Produces(\"application/ld+json, application/json-ld\")\n+    public Response getVersionJsonLDMetadata(@PathParam(\"id\") String id, @Context UriInfo uriInfo, @Context HttpHeaders headers) {\n+        return getVersionJsonLDMetadata(id, \":draft\", uriInfo, headers);\n+    }\n+            \n+    @PUT\n+    @Path(\"{id}/metadata\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response updateVersionMetadata(String jsonLDBody, @PathParam(\"id\") String id, @DefaultValue(\"false\") @QueryParam(\"replace\") boolean replaceTerms) {\n+\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.updateDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc, !replaceTerms, false);\n+            \n+            DatasetVersion managedVersion;\n+            if (updateDraft) {\n+                Dataset managedDataset = execCommand(new UpdateDatasetVersionCommand(ds, req));\n+                managedVersion = managedDataset.getEditVersion();\n+            } else {\n+                managedVersion = execCommand(new CreateDatasetVersionCommand(req, ds, dsv));\n+            }\n+            String info = updateDraft ? \"Version Updated\" : \"Version Created\";\n+            return ok(Json.createObjectBuilder().add(info, managedVersion.getVersionDate()));\n+\n+        } catch (WrappedResponse ex) {\n+            return ex.getResponse();\n+        } catch (JsonParsingException jpe) {\n+            logger.log(Level.SEVERE, \"Error parsing dataset json. Json: {0}\", jsonLDBody);\n+            return error(Status.BAD_REQUEST, \"Error parsing Json: \" + jpe.getMessage());\n+        }\n+    }\n+    \n+    @PUT\n+    @Path(\"{id}/metadata/delete\")\n+    @Consumes(\"application/ld+json, application/json-ld\")\n+    public Response deleteMetadata(String jsonLDBody, @PathParam(\"id\") String id) {\n+        logger.info(\"In delteMetadata\");\n+        try {\n+            Dataset ds = findDatasetOrDie(id);\n+            DataverseRequest req = createDataverseRequest(findUserOrDie());\n+            DatasetVersion dsv = ds.getEditVersion();\n+            boolean updateDraft = ds.getLatestVersion().isDraft();\n+            dsv = JSONLDUtil.deleteDatasetVersionMDFromJsonLD(dsv, jsonLDBody, metadataBlockService, datasetFieldSvc);\n+            logger.info(\"Updating ver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDMyNw=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODcxOTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/util/bagit/BagGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDozNjowMFrOJ34drA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxODo1NjowOVrOJ6AcnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NjU1Ng==", "bodyText": "Should this be getAsString?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662576556", "createdAt": "2021-07-01T20:36:00Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/bagit/BagGenerator.java", "diffHunk": "@@ -816,7 +824,7 @@ private String generateInfoFile() {\n         } else {\r\n             info.append(\r\n                     // FixMe - handle description having subfields better\r\n-                    WordUtils.wrap(getSingleValue(aggregation.getAsJsonObject(descriptionTerm.getLabel()),\r\n+                    WordUtils.wrap(getSingleValue(aggregation.get(descriptionTerm.getLabel()),\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE2OTc1Mw==", "bodyText": "Description is a multi-valued field so this could be a JsonObject or JsonArray. The added logic here handles both cases. Nominally this is also separable from the API itself - just caught in testing along the way. Could be moved to a separate PR.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663169753", "createdAt": "2021-07-02T17:51:18Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/bagit/BagGenerator.java", "diffHunk": "@@ -816,7 +824,7 @@ private String generateInfoFile() {\n         } else {\r\n             info.append(\r\n                     // FixMe - handle description having subfields better\r\n-                    WordUtils.wrap(getSingleValue(aggregation.getAsJsonObject(descriptionTerm.getLabel()),\r\n+                    WordUtils.wrap(getSingleValue(aggregation.get(descriptionTerm.getLabel()),\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NjU1Ng=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgwNDUwOA==", "bodyText": "Oh, I see the added logic now. Thanks.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664804508", "createdAt": "2021-07-06T18:56:09Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/bagit/BagGenerator.java", "diffHunk": "@@ -816,7 +824,7 @@ private String generateInfoFile() {\n         } else {\r\n             info.append(\r\n                     // FixMe - handle description having subfields better\r\n-                    WordUtils.wrap(getSingleValue(aggregation.getAsJsonObject(descriptionTerm.getLabel()),\r\n+                    WordUtils.wrap(getSingleValue(aggregation.get(descriptionTerm.getLabel()),\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NjU1Ng=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIwODc0NDUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/util/json/JsonLDTerm.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wMVQyMDo0MzowN1rOJ34sCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wOFQxODo1NzowMFrOJ7kkeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU4MDIzNQ==", "bodyText": "Ah, it seems like maybe all installations do need the new .tsv file. If so, it should be added to the script that adds them all during installation.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r662580235", "createdAt": "2021-07-01T20:43:07Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/json/JsonLDTerm.java", "diffHunk": "@@ -48,6 +45,8 @@\n     public static JsonLDTerm totalSize = JsonLDTerm.DVCore(\"totalSize\");\r\n     public static JsonLDTerm fileCount = JsonLDTerm.DVCore(\"fileCount\");\r\n     public static JsonLDTerm maxFileSize = JsonLDTerm.DVCore(\"maxFileSize\");\r\n+    \r\n+    public static JsonLDTerm metadataOnOrig = JsonLDTerm.DVCore(\"metadataOnOrig\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE3MDI1Ng==", "bodyText": "As noted above, this is optional/not needed by default. If we decide to remove the functionality, this line would also go.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r663170256", "createdAt": "2021-07-02T17:52:28Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/json/JsonLDTerm.java", "diffHunk": "@@ -48,6 +45,8 @@\n     public static JsonLDTerm totalSize = JsonLDTerm.DVCore(\"totalSize\");\r\n     public static JsonLDTerm fileCount = JsonLDTerm.DVCore(\"fileCount\");\r\n     public static JsonLDTerm maxFileSize = JsonLDTerm.DVCore(\"maxFileSize\");\r\n+    \r\n+    public static JsonLDTerm metadataOnOrig = JsonLDTerm.DVCore(\"metadataOnOrig\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU4MDIzNQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjQ0NDkyMg==", "bodyText": "Removed in a5a745d.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666444922", "createdAt": "2021-07-08T18:57:00Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/json/JsonLDTerm.java", "diffHunk": "@@ -48,6 +45,8 @@\n     public static JsonLDTerm totalSize = JsonLDTerm.DVCore(\"totalSize\");\r\n     public static JsonLDTerm fileCount = JsonLDTerm.DVCore(\"fileCount\");\r\n     public static JsonLDTerm maxFileSize = JsonLDTerm.DVCore(\"maxFileSize\");\r\n+    \r\n+    public static JsonLDTerm metadataOnOrig = JsonLDTerm.DVCore(\"metadataOnOrig\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU4MDIzNQ=="}, "originalCommit": {"oid": "10ef9ff27eb38668bd06234f9bb79545782d36e7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDIyNDE2NDcwOnYy", "diffSide": "RIGHT", "path": "doc/sphinx-guides/source/_static/api/dataset-create.jsonld", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wNlQxOToxNDowOVrOJ6BFiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0wOFQxODo1ODoxNlrOJ7knYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgxNDk4Nw==", "bodyText": "The capitalization seems inconsistent.\nContact and Description (title case) but also author, datasetContact and dsDescription (camel case)?\nWhat are the rules?", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r664814987", "createdAt": "2021-07-06T19:14:09Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/_static/api/dataset-create.jsonld", "diffHunk": "@@ -0,0 +1,15 @@\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },\n+  \"https://dataverse.org/schema/citation/Contact\": {\n+    \"https://dataverse.org/schema/citation/datasetContact#E-mail\": \"finch@mailinator.com\",\n+    \"https://dataverse.org/schema/citation/datasetContact#Name\": \"Finch, Fiona\"\n+  },\n+  \"https://dataverse.org/schema/citation/Description\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1d31a59aa4b0be7de74a95efc8d1c08f693a36"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjM2MzkyNA==", "bodyText": "These come from the citation.tsv block with the pattern <block name>/<field title> for single fields and <block name>/<field title>/<child field name> being used. That choice was made back when OAI_ORE/BagIt/archiving was introduced. The use if title was an attempt to use URIs that mirrored what users see in the UI. I'm less sure why I used name for child fields - not sure if there was a conflict or if it was an issue with originally just trying a flatter <blockname>/<childfield title> and realizing that there are multiple child fields with the title 'Name' for example.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666363924", "createdAt": "2021-07-08T16:51:49Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/_static/api/dataset-create.jsonld", "diffHunk": "@@ -0,0 +1,15 @@\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },\n+  \"https://dataverse.org/schema/citation/Contact\": {\n+    \"https://dataverse.org/schema/citation/datasetContact#E-mail\": \"finch@mailinator.com\",\n+    \"https://dataverse.org/schema/citation/datasetContact#Name\": \"Finch, Fiona\"\n+  },\n+  \"https://dataverse.org/schema/citation/Description\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgxNDk4Nw=="}, "originalCommit": {"oid": "4c1d31a59aa4b0be7de74a95efc8d1c08f693a36"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjQ0NTY2Ng==", "bodyText": "Ok. Sounds like a preexisting condition to me. \ud83d\ude04 It would be nice to have more consistency but oh well. I assume we don't want to revisit decisions made during BagIt export.", "url": "https://github.com/IQSS/dataverse/pull/7414#discussion_r666445666", "createdAt": "2021-07-08T18:58:16Z", "author": {"login": "pdurbin"}, "path": "doc/sphinx-guides/source/_static/api/dataset-create.jsonld", "diffHunk": "@@ -0,0 +1,15 @@\n+{\n+  \"http://purl.org/dc/terms/title\": \"Darwin's Finches\",\n+  \"http://purl.org/dc/terms/subject\": \"Medicine, Health and Life Sciences\",\n+  \"http://purl.org/dc/terms/creator\": {\n+      \"https://dataverse.org/schema/citation/author#Name\": \"Finch, Fiona\",\n+      \"https://dataverse.org/schema/citation/author#Affiliation\": \"Birds Inc.\"\n+  },\n+  \"https://dataverse.org/schema/citation/Contact\": {\n+    \"https://dataverse.org/schema/citation/datasetContact#E-mail\": \"finch@mailinator.com\",\n+    \"https://dataverse.org/schema/citation/datasetContact#Name\": \"Finch, Fiona\"\n+  },\n+  \"https://dataverse.org/schema/citation/Description\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgxNDk4Nw=="}, "originalCommit": {"oid": "4c1d31a59aa4b0be7de74a95efc8d1c08f693a36"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2328, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}