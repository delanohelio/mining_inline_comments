{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTY1NDU2", "number": 7422, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxNTozMFrOE9XIpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo1ODozM1rOE_t3Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzc3NjM4OnYy", "diffSide": "RIGHT", "path": "doc/release-notes/7418-datasourcedefinition.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxNTozMFrOH6A13A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxNTozMFrOH6A13A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5MzI0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Using MicroProfile Config API (#7000, #7418), you can much more easily deposit configuration\n          \n          \n            \n            Using MicroProfile Config API (#7000, #7418), you can much more easily specify configuration", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r530593244", "createdAt": "2020-11-25T19:15:30Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/7418-datasourcedefinition.md", "diffHunk": "@@ -0,0 +1,75 @@\n+## Easier Configuration of Database Connections\n+\n+Dataverse now being able to use up-to-date Java technologies, transforms\n+the way how to configure the connection to your PostgreSQL database.\n+\n+In the past, the configuration of the connection has been quite static\n+and not very easy to update. This has been an issue especially for cloud\n+and container usage.\n+\n+Using MicroProfile Config API (#7000, #7418), you can much more easily deposit configuration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1cc0feb4b18f10e5e014085ea662c925ee4b99"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzg4NDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/flyway/StartupFlywayMigrator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo1MTo1MVrOH6B33g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo1MTo1MVrOH6B33g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYxMDE0Mg==", "bodyText": "In 9dfe7b8 it is explained why this changed:\n\nThe JNDI names have been changed to be conform with Java EE 7.\nSee https://github.com/javaee-samples/javaee7-samples/tree/master/jpa/datasourcedefinition-applicationxml-pu\nand others for working examples. (Staying with the old name was not successfull.)", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r530610142", "createdAt": "2020-11-25T19:51:51Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/flyway/StartupFlywayMigrator.java", "diffHunk": "@@ -15,7 +15,7 @@\n @TransactionManagement(value = TransactionManagementType.BEAN)\n public class StartupFlywayMigrator {\n \n-    @Resource(lookup = \"jdbc/VDCNetDS\")\n+    @Resource(lookup = \"java:app/jdbc/dataverse\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1cc0feb4b18f10e5e014085ea662c925ee4b99"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzg4ODUyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo1MzoxOVrOH6B6bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo1MzoxOVrOH6B6bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYxMDc5Nw==", "bodyText": "This was added so the following file would be included:\nsrc/main/resources/META-INF/microprofile-config.properties", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r530610797", "createdAt": "2020-11-25T19:53:19Z", "author": {"login": "pdurbin"}, "path": "pom.xml", "diffHunk": "@@ -685,6 +685,7 @@\n                     <include>**/*.xml</include>\n                     <include>**/firstNames/*.*</include>\n                     <include>**/*.xsl</include>\n+                    <include>**/*.properties</include>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1cc0feb4b18f10e5e014085ea662c925ee4b99"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODE5NDAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTozNTozNlrOH88sAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTozNjo1N1rOH88vAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MDkxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n          \n          \n            \n                className = \"org.postgresql.ds.PGPoolingDataSource\",\n          \n          \n            \n                // App server provides its own pooling, so go with simple data source class.\n          \n          \n            \n                // PGXADataSource is unnecessary (no distributed transactions) and breaks ingest.\n          \n          \n            \n                className = \"org.postgresql.ds.PGSimpleDataSource\",", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r533670913", "createdAt": "2020-12-01T19:35:36Z", "author": {"login": "poikilotherm"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    name = \"java:app/jdbc/dataverse\",\n+    // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n+    className = \"org.postgresql.ds.PGPoolingDataSource\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06dbef10ac65a8b07d25c3b7506b0362d04030c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MTY4MQ==", "bodyText": "I'll go ahead and do this.", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r533671681", "createdAt": "2020-12-01T19:36:57Z", "author": {"login": "poikilotherm"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    name = \"java:app/jdbc/dataverse\",\n+    // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n+    className = \"org.postgresql.ds.PGPoolingDataSource\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MDkxMw=="}, "originalCommit": {"oid": "06dbef10ac65a8b07d25c3b7506b0362d04030c9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjM4MjEyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/META-INF/microprofile-config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjozOTo0NlrOH9j9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjo0NFrOH-w-lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxNDI4OA==", "bodyText": "My understanding is that all these commented out entries are for after a pull request for payara/Payara#5024 is created and merged. They're a little confusing to see now if they don't work yet so I'd suggest removing them. Otherwise, Dataverse admins might waste time trying to get them to work.", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r534314288", "createdAt": "2020-12-02T16:39:46Z", "author": {"login": "pdurbin"}, "path": "src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,16 @@\n+dataverse.db.host=localhost\n+dataverse.db.port=5432\n+dataverse.db.user=dataverse\n+dataverse.db.name=dataverse\n+#dataverse.db.pool-resize-quantity=2\n+#dataverse.db.is-connection-validation-required=false\n+#dataverse.db.connection-validation-method=table\n+#dataverse.db.validation-table-name=setting\n+#dataverse.db.validation-classname=org.glassfish.api.jdbc.validation.PostgresConnectionValidation\n+#dataverse.db.connection-leak-timeout-in-seconds=0\n+#dataverse.db.connection-leak-reclaim=false\n+#dataverse.db.statement-timeout-in-seconds=-1\n+#dataverse.db.statement-leak-timeout-in-seconds=0\n+#dataverse.db.statement-leak-reclaim=false\n+#dataverse.db.slow-query-threshold-in-seconds=-1\n+#dataverse.db.log-jdbc-calls=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ea82f2d292d88aad3d73aa075eb14692a854ac"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjIxMw==", "bodyText": "Removed in c583909.", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r535576213", "createdAt": "2020-12-03T20:32:44Z", "author": {"login": "pdurbin"}, "path": "src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,16 @@\n+dataverse.db.host=localhost\n+dataverse.db.port=5432\n+dataverse.db.user=dataverse\n+dataverse.db.name=dataverse\n+#dataverse.db.pool-resize-quantity=2\n+#dataverse.db.is-connection-validation-required=false\n+#dataverse.db.connection-validation-method=table\n+#dataverse.db.validation-table-name=setting\n+#dataverse.db.validation-classname=org.glassfish.api.jdbc.validation.PostgresConnectionValidation\n+#dataverse.db.connection-leak-timeout-in-seconds=0\n+#dataverse.db.connection-leak-reclaim=false\n+#dataverse.db.statement-timeout-in-seconds=-1\n+#dataverse.db.statement-leak-timeout-in-seconds=0\n+#dataverse.db.statement-leak-reclaim=false\n+#dataverse.db.slow-query-threshold-in-seconds=-1\n+#dataverse.db.log-jdbc-calls=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxNDI4OA=="}, "originalCommit": {"oid": "83ea82f2d292d88aad3d73aa075eb14692a854ac"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjQ3MjAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo1ODozM1rOH9k0RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMzowMlrOH-xADg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyODM4OQ==", "bodyText": "I find it confusing to see all the MPCONFIG values here when they don't work yet. (Thanks for opening payara/Payara#5024 to address this.)\nIn practice, I'm not sure how many of these we (Harvard Dataverse) use but perhaps this list could be simplified down to the two mentioned in #7048 (comment) which are:\nproperties = {\n    \"fish.payara.is-connection-validation-required=true\",\n    \"fish.payara.validation-table-name=setting\"\n}\n\nOnce there is a list with hard coded values like this, it's more obvious that uncommenting them will (presumably) have an effect.", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r534328389", "createdAt": "2020-12-02T16:58:33Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    // Find docs here: https://javaee.github.io/javaee-spec/javadocs/javax/annotation/sql/DataSourceDefinition.html\n+    \n+    name = \"java:app/jdbc/dataverse\",\n+    \n+    // The app server (Payara) deploys a managed pool for this data source for us.\n+    // We don't need to deal with this on our own.\n+    //\n+    // HINT: PGSimpleDataSource would work too, but as we use a connection pool, go with a javax.sql.ConnectionPoolDataSource\n+    // HINT: PGXADataSource is unnecessary (no distributed transactions used) and breaks ingest.\n+    className = \"org.postgresql.ds.PGConnectionPoolDataSource\",\n+    \n+    user = \"${MPCONFIG=dataverse.db.user}\",\n+    password = \"${MPCONFIG=dataverse.db.password}\",\n+    url = \"jdbc:postgresql://${MPCONFIG=dataverse.db.host}:${MPCONFIG=dataverse.db.port}/${MPCONFIG=dataverse.db.name}\",\n+    \n+    // If we ever need to change these pool settings, we need to remove this class and create the resource\n+    // from web.xml. We can use MicroProfile Config in there for these values, impossible to do in the annotation.\n+    //\n+    // See also https://blog.payara.fish/an-intro-to-connection-pools-in-payara-server-5\n+    // Payara DataSourceDefinitionDeployer default value = 8\n+    minPoolSize = 10,\n+    \n+    // HINT: Payara DataSourceDefinitionDeployer default value = 32\n+    // HINT: Harvard Dataverse is fine for a while with 64\n+    maxPoolSize = 100,\n+    \n+    // \"The number of seconds that a physical connection should remain unused in the pool before the connection is closed for a connection pool. \"\n+    // Payara DataSourceDefinitionDeployer default value = 300 (seconds)\n+    maxIdleTime = 300)\n+    \n+    // These are documented at https://docs.payara.fish/community/docs/5.2020.6/documentation/payara-server/jdbc/advanced-connection-pool-properties.html#full-list-of-properties\n+    //\n+    // All these vars cannot be configured via MPCONFIG as Payara doesn't support this (yet). To be enhanced.\n+    // See also https://github.com/payara/Payara/issues/5024\n+    /*\n+    properties = {\n+        \"fish.payara.pool-resize-quantity=${MPCONFIG=dataverse.db.pool-resize-quantity}\",\n+        \"fish.payara.is-connection-validation-required=${MPCONFIG=dataverse.db.is-connection-validation-required}\",\n+        \"fish.payara.connection-validation-method=${MPCONFIG=dataverse.db.connection-validation-method}\",\n+        \"fish.payara.validation-table-name=${MPCONFIG=dataverse.db.validation-table-name}\",\n+        \"fish.payara.validation-classname=${MPCONFIG=dataverse.db.validation-classname}\",\n+        \"fish.payara.connection-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.connection-leak-timeout-in-seconds}\",\n+        \"fish.payara.connection-leak-reclaim=${MPCONFIG=dataverse.db.connection-leak-reclaim}\",\n+        \"fish.payara.statement-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-leak-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-reclaim=${MPCONFIG=dataverse.db.statement-leak-reclaim}\",\n+        \"fish.payara.slow-query-threshold-in-seconds=${MPCONFIG=dataverse.db.slow-query-threshold-in-seconds}\",\n+        \"fish.payara.log-jdbc-calls=${MPCONFIG=dataverse.db.log-jdbc-calls}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ea82f2d292d88aad3d73aa075eb14692a854ac"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjU5MA==", "bodyText": "Removed in c583909.", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r535576590", "createdAt": "2020-12-03T20:33:02Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    // Find docs here: https://javaee.github.io/javaee-spec/javadocs/javax/annotation/sql/DataSourceDefinition.html\n+    \n+    name = \"java:app/jdbc/dataverse\",\n+    \n+    // The app server (Payara) deploys a managed pool for this data source for us.\n+    // We don't need to deal with this on our own.\n+    //\n+    // HINT: PGSimpleDataSource would work too, but as we use a connection pool, go with a javax.sql.ConnectionPoolDataSource\n+    // HINT: PGXADataSource is unnecessary (no distributed transactions used) and breaks ingest.\n+    className = \"org.postgresql.ds.PGConnectionPoolDataSource\",\n+    \n+    user = \"${MPCONFIG=dataverse.db.user}\",\n+    password = \"${MPCONFIG=dataverse.db.password}\",\n+    url = \"jdbc:postgresql://${MPCONFIG=dataverse.db.host}:${MPCONFIG=dataverse.db.port}/${MPCONFIG=dataverse.db.name}\",\n+    \n+    // If we ever need to change these pool settings, we need to remove this class and create the resource\n+    // from web.xml. We can use MicroProfile Config in there for these values, impossible to do in the annotation.\n+    //\n+    // See also https://blog.payara.fish/an-intro-to-connection-pools-in-payara-server-5\n+    // Payara DataSourceDefinitionDeployer default value = 8\n+    minPoolSize = 10,\n+    \n+    // HINT: Payara DataSourceDefinitionDeployer default value = 32\n+    // HINT: Harvard Dataverse is fine for a while with 64\n+    maxPoolSize = 100,\n+    \n+    // \"The number of seconds that a physical connection should remain unused in the pool before the connection is closed for a connection pool. \"\n+    // Payara DataSourceDefinitionDeployer default value = 300 (seconds)\n+    maxIdleTime = 300)\n+    \n+    // These are documented at https://docs.payara.fish/community/docs/5.2020.6/documentation/payara-server/jdbc/advanced-connection-pool-properties.html#full-list-of-properties\n+    //\n+    // All these vars cannot be configured via MPCONFIG as Payara doesn't support this (yet). To be enhanced.\n+    // See also https://github.com/payara/Payara/issues/5024\n+    /*\n+    properties = {\n+        \"fish.payara.pool-resize-quantity=${MPCONFIG=dataverse.db.pool-resize-quantity}\",\n+        \"fish.payara.is-connection-validation-required=${MPCONFIG=dataverse.db.is-connection-validation-required}\",\n+        \"fish.payara.connection-validation-method=${MPCONFIG=dataverse.db.connection-validation-method}\",\n+        \"fish.payara.validation-table-name=${MPCONFIG=dataverse.db.validation-table-name}\",\n+        \"fish.payara.validation-classname=${MPCONFIG=dataverse.db.validation-classname}\",\n+        \"fish.payara.connection-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.connection-leak-timeout-in-seconds}\",\n+        \"fish.payara.connection-leak-reclaim=${MPCONFIG=dataverse.db.connection-leak-reclaim}\",\n+        \"fish.payara.statement-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-leak-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-reclaim=${MPCONFIG=dataverse.db.statement-leak-reclaim}\",\n+        \"fish.payara.slow-query-threshold-in-seconds=${MPCONFIG=dataverse.db.slow-query-threshold-in-seconds}\",\n+        \"fish.payara.log-jdbc-calls=${MPCONFIG=dataverse.db.log-jdbc-calls}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyODM4OQ=="}, "originalCommit": {"oid": "83ea82f2d292d88aad3d73aa075eb14692a854ac"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}