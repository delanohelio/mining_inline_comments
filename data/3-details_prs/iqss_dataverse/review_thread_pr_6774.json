{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MzgzNDE5", "number": 6774, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzozMjozMFrODr6YnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzozMjozMFrODr6YnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzcxOTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/DataFile.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzozMjozMFrOF8iCDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo1ODowM1rOF85-fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNjQ2Mw==", "bodyText": "@sekmiller Am I reading this correctly - that if the current filename has no extension (\"foo\"), this code will return \"foo\"? - shouldn't it still return \"foo.<ORIG_EXT>\"?\n(although this shouldn't really happen - since ingested files should always have the \".tab\" extension)\n(also, it looks like we never checked for this \"no extension\" case before. To be really OCD though, if you call .replace(\".tab\", \".dta\") on something exotic like \"datafile.tabular.tab\" will return \"datafile.dtaular.dta\". See my really old code in StoredOriginalFile.java - I use the regex version of replace there: .replaceAll(\".tab$\", \".dta\"), to make sure I'm only replacing the end part.", "url": "https://github.com/IQSS/dataverse/pull/6774#discussion_r399016463", "createdAt": "2020-03-27T03:32:30Z", "author": {"login": "landreev"}, "path": "src/main/java/edu/harvard/iq/dataverse/DataFile.java", "diffHunk": "@@ -398,6 +399,29 @@ public Long getOriginalFileSize() {\n         }\n         return null;\n     }\n+    \n+    public String getOriginalFileName() {\n+        if (isTabularData()) {\n+            DataTable dataTable = getDataTable();\n+            if (dataTable != null) {\n+                return dataTable.getOriginalFileName() != null ? dataTable.getOriginalFileName()\n+                        : getDerivedOriginalFileName();\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getDerivedOriginalFileName() {\n+        FileMetadata fm = getFileMetadata();\n+        String filename = fm.getLabel();\n+        String originalExtension = FileUtil.generateOriginalExtension(getOriginalFileFormat());\n+        String extensionToRemove = StringUtil.substringIncludingLast(filename, \".\");\n+        if (StringUtil.nonEmpty(extensionToRemove)) {\n+            String newFileName = filename.replace(extensionToRemove, originalExtension);\n+            return newFileName;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ed82082bea9d10eedf917ed3ad941912a24073"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI3MzMwOA==", "bodyText": "Good points. I will take another pass at this.", "url": "https://github.com/IQSS/dataverse/pull/6774#discussion_r399273308", "createdAt": "2020-03-27T13:43:27Z", "author": {"login": "sekmiller"}, "path": "src/main/java/edu/harvard/iq/dataverse/DataFile.java", "diffHunk": "@@ -398,6 +399,29 @@ public Long getOriginalFileSize() {\n         }\n         return null;\n     }\n+    \n+    public String getOriginalFileName() {\n+        if (isTabularData()) {\n+            DataTable dataTable = getDataTable();\n+            if (dataTable != null) {\n+                return dataTable.getOriginalFileName() != null ? dataTable.getOriginalFileName()\n+                        : getDerivedOriginalFileName();\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getDerivedOriginalFileName() {\n+        FileMetadata fm = getFileMetadata();\n+        String filename = fm.getLabel();\n+        String originalExtension = FileUtil.generateOriginalExtension(getOriginalFileFormat());\n+        String extensionToRemove = StringUtil.substringIncludingLast(filename, \".\");\n+        if (StringUtil.nonEmpty(extensionToRemove)) {\n+            String newFileName = filename.replace(extensionToRemove, originalExtension);\n+            return newFileName;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNjQ2Mw=="}, "originalCommit": {"oid": "f1ed82082bea9d10eedf917ed3ad941912a24073"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzMwNw==", "bodyText": "@landreev I put in your suggestion on using replaceAll and relying on the fact that a tabular file should always end in \".tab \". It occurs to me that any editing of the file label to anything other than foo.tab will break this (including your \"no extension\" case). How worried should we be about this, and any suggestions to code against it?", "url": "https://github.com/IQSS/dataverse/pull/6774#discussion_r399327307", "createdAt": "2020-03-27T14:59:31Z", "author": {"login": "sekmiller"}, "path": "src/main/java/edu/harvard/iq/dataverse/DataFile.java", "diffHunk": "@@ -398,6 +399,29 @@ public Long getOriginalFileSize() {\n         }\n         return null;\n     }\n+    \n+    public String getOriginalFileName() {\n+        if (isTabularData()) {\n+            DataTable dataTable = getDataTable();\n+            if (dataTable != null) {\n+                return dataTable.getOriginalFileName() != null ? dataTable.getOriginalFileName()\n+                        : getDerivedOriginalFileName();\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getDerivedOriginalFileName() {\n+        FileMetadata fm = getFileMetadata();\n+        String filename = fm.getLabel();\n+        String originalExtension = FileUtil.generateOriginalExtension(getOriginalFileFormat());\n+        String extensionToRemove = StringUtil.substringIncludingLast(filename, \".\");\n+        if (StringUtil.nonEmpty(extensionToRemove)) {\n+            String newFileName = filename.replace(extensionToRemove, originalExtension);\n+            return newFileName;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNjQ2Mw=="}, "originalCommit": {"oid": "f1ed82082bea9d10eedf917ed3ad941912a24073"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODc2Ng==", "bodyText": "Answered my own question while out for a run: so the replaceAll(\"tab$\" which I put in should fix 100% of the cases. Since we know it won't I can modify the previous \"look for an extension to replace\" code by adding a $ to the replace string so that inadvertent internal instances of the extension are not replaced, and if there's no extension found just append the extension derived from the file type. All of this points out that even after all this we cannot be certain that we're returning anything like the actual original file name.", "url": "https://github.com/IQSS/dataverse/pull/6774#discussion_r399408766", "createdAt": "2020-03-27T16:58:03Z", "author": {"login": "sekmiller"}, "path": "src/main/java/edu/harvard/iq/dataverse/DataFile.java", "diffHunk": "@@ -398,6 +399,29 @@ public Long getOriginalFileSize() {\n         }\n         return null;\n     }\n+    \n+    public String getOriginalFileName() {\n+        if (isTabularData()) {\n+            DataTable dataTable = getDataTable();\n+            if (dataTable != null) {\n+                return dataTable.getOriginalFileName() != null ? dataTable.getOriginalFileName()\n+                        : getDerivedOriginalFileName();\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getDerivedOriginalFileName() {\n+        FileMetadata fm = getFileMetadata();\n+        String filename = fm.getLabel();\n+        String originalExtension = FileUtil.generateOriginalExtension(getOriginalFileFormat());\n+        String extensionToRemove = StringUtil.substringIncludingLast(filename, \".\");\n+        if (StringUtil.nonEmpty(extensionToRemove)) {\n+            String newFileName = filename.replace(extensionToRemove, originalExtension);\n+            return newFileName;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNjQ2Mw=="}, "originalCommit": {"oid": "f1ed82082bea9d10eedf917ed3ad941912a24073"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3325, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}