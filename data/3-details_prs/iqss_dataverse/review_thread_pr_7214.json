{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjAwMjUw", "number": 7214, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowNzozNFrOEoPXoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowNzozNFrOEoPXoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjMwMzA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowNzozNFrOHZNzYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzoxMTo0MVrOHZ4pcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw==", "bodyText": "Should this be if (otherId.startsWith(GlobalId.DOI_PROTOCOL) ... instead?\nOr maybe even if (otherId.toLowerCase().startsWith(GlobalId.DOI_PROTOCOL) ...?", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496202593", "createdAt": "2020-09-28T20:07:34Z", "author": {"login": "landreev"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIyMDI1OQ==", "bodyText": "@landreev The identifier could also be \"https://doi.org/10.7910/DVN/1HE30F\". I made the identifier into lowercase just in case.", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496220259", "createdAt": "2020-09-28T20:42:40Z", "author": {"login": "JingMa87"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw=="}, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2Mzg0MA==", "bodyText": "@JingMa87\nLooking at your last commits, it's still looking like your code is doing \"if ... contains()\"... I still think it should be \"if ... startsWith()\" instead. Or it will just assume that any identifier that happens to contain the characters \"hdl\" is a handle, no?\nAnd yes, it's a good idea to check for the \"https://doi.org/10.7910/DVN/1HE30F\" form as well. Please note that we also have GlobalId.DOI_RESOLVER_URL and GlobalId.HDL_RESOLVER_URL defined. So maybe add .startsWith() for these too?", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496263840", "createdAt": "2020-09-28T22:09:01Z", "author": {"login": "landreev"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw=="}, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMwNTI2MQ==", "bodyText": "Agreed, I pushed the changes.", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496305261", "createdAt": "2020-09-29T00:20:48Z", "author": {"login": "JingMa87"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw=="}, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg2NDE3MA==", "bodyText": "I'm really sorry to be difficult, I know you have other things to work on - but do we really want to permanently convert to lower case?\nI only suggested it for the test... to be able to catch both \"hdl:...\" and \"HDL:...\" - but I'm not sure even that is necessary...\nI don't think we want to save \"doi:10.7910/DVN/1HE30F\" as \"doi:10.7910/dvn/1he30f\" - ?\nLet's just remove the otherId = otherId.toLowerCase(); line.\nThank you!", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496864170", "createdAt": "2020-09-29T16:15:19Z", "author": {"login": "landreev"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw=="}, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwNDU2MQ==", "bodyText": "No worries! I made the changes.", "url": "https://github.com/IQSS/dataverse/pull/7214#discussion_r496904561", "createdAt": "2020-09-29T17:11:41Z", "author": {"login": "JingMa87"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/imports/ImportGenericServiceBean.java", "diffHunk": "@@ -366,27 +368,42 @@ private FieldDTO makeDTO(DatasetFieldType dataverseFieldType, FieldDTO value, St\n     }\n     \n     private String getOtherIdFromDTO(DatasetVersionDTO datasetVersionDTO) {\n+        List<String> otherIds = new ArrayList<>();\n         for (Map.Entry<String, MetadataBlockDTO> entry : datasetVersionDTO.getMetadataBlocks().entrySet()) {\n             String key = entry.getKey();\n             MetadataBlockDTO value = entry.getValue();\n             if (\"citation\".equals(key)) {\n                 for (FieldDTO fieldDTO : value.getFields()) {\n                     if (DatasetFieldConstant.otherId.equals(fieldDTO.getTypeName())) {\n-                        String otherId = \"\";\n                         for (HashSet<FieldDTO> foo : fieldDTO.getMultipleCompound()) {\n                             for (FieldDTO next : foo) {\n                                 if (DatasetFieldConstant.otherIdValue.equals(next.getTypeName())) {\n-                                    otherId =  next.getSinglePrimitive();\n+                                    otherIds.add(next.getSinglePrimitive());\n                                 }\n                             }\n-                            if (!otherId.isEmpty()){\n-                                return otherId;\n-                            }\n                         }\n                     }\n                 }\n             }\n         }\n+        if (!otherIds.isEmpty()) {\n+            // We prefer doi or hdl identifiers like \"doi:10.7910/DVN/1HE30F\"\n+            for (String otherId : otherIds) {\n+                if (otherId.contains(GlobalId.DOI_PROTOCOL) || otherId.contains(GlobalId.HDL_PROTOCOL)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMjU5Mw=="}, "originalCommit": {"oid": "89cb145d90aba6509a11686d99fed6ef1b8bee83"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}