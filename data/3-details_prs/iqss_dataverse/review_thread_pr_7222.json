{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzY4NTQ3", "number": 7222, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0MjoxNlrOEcc9yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0NjowMVrOEcdDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjcwMTUzOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0MjoxNlrOHG_xxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzozNzozMVrOHHMdvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODQzNg==", "bodyText": "I doubt this is necessary. There isn't a single use of this package as far as I know from the codebase. Using EL in JSF usually doesn't imply adding it to the direct dependencies. Your commit message states it had been added because of the validator dependency, but the Payara BOM already should take care of that. Please try to remove and test.", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477098436", "createdAt": "2020-08-26T07:42:16Z", "author": {"login": "poikilotherm"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.el</artifactId>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwNjMwMg==", "bodyText": "Tested this again without jakarta.el - brings back the problem it was addressing\nTest set: edu.harvard.iq.dataverse.ingest.IngestUtilTest\nTests run: 12, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.121 s <<< FAILURE! - in edu.harvard.iq.dataverse.ingest.IngestUtilTest\ntestDirectoryLabels  Time elapsed: 0.103 s  <<< ERROR!\njavax.validation.ValidationException: HV000183: Unable to initialize 'javax.el.ExpressionFactory'. Check that you have the EL dependencies on the classpath, or use ParameterMessageInterpolator instead\nat edu.harvard.iq.dataverse.ingest.IngestUtilTest.testDirectoryLabels(IngestUtilTest.java:473)", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477306302", "createdAt": "2020-08-26T13:37:31Z", "author": {"login": "rtreacy"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.el</artifactId>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODQzNg=="}, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjcwMzA1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0Mjo0M1rOHG_yuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzo0MDo1M1rOHHMnng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODY4Mw==", "bodyText": "This should remain provided or be deleted, as compile is the default.", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477098683", "createdAt": "2020-08-26T07:42:43Z", "author": {"login": "poikilotherm"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwMjE3MQ==", "bodyText": "IMHO you should take a look at this:\n\nWe're using an internal validator class in our code and I'm not sure if this is a supported use case. This should be refactored and use Java 8 Collections API.", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477102171", "createdAt": "2020-08-26T07:48:47Z", "author": {"login": "poikilotherm"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODY4Mw=="}, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwNjIxNg==", "bodyText": "BTW @kcondon I noticed you're testing on Payara 5.201. It's not important for this issue (both 5.201 up to 5.2020.4 use Hibernate Validator 6.1.2 Final), but we should make sure that testers, QA etc all use the same version referenced in pom.xml.", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477106216", "createdAt": "2020-08-26T07:55:32Z", "author": {"login": "poikilotherm"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODY4Mw=="}, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwODgzMA==", "bodyText": "@poikilotherm - I suspected that this was the reason I couldn't use provided, but refactoring the BuiltInGroupsProvider code is a separate issue IMHO", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477308830", "createdAt": "2020-08-26T13:40:53Z", "author": {"login": "rtreacy"}, "path": "pom.xml", "diffHunk": "@@ -294,9 +294,14 @@\n             <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->\n         </dependency>\n         <dependency>\n-            <groupId>org.hibernate</groupId>\n+            <groupId>org.hibernate.validator</groupId>\n             <artifactId>hibernate-validator</artifactId>\n-            <version>5.0.3.Final</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODY4Mw=="}, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjcxNTQzOnYy", "diffSide": "RIGHT", "path": "src/test/java/edu/harvard/iq/dataverse/URLValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0NjowMVrOHG_6NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0NjowMVrOHG_6NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwMDU5Nw==", "bodyText": "The complete test class should be refactored to use a JUnit5 @ParameterizedTest, usable for both unit tests.\nThe context object should be mocked. Creating a real object is of no use here and at least on my machine creates errors. Happy to create a PR against this PR.", "url": "https://github.com/IQSS/dataverse/pull/7222#discussion_r477100597", "createdAt": "2020-08-26T07:46:01Z", "author": {"login": "poikilotherm"}, "path": "src/test/java/edu/harvard/iq/dataverse/URLValidatorTest.java", "diffHunk": "@@ -35,15 +39,15 @@ public void testIsValidWithUnspecifiedContext() {\n     @Test\n     public void testIsValidWithContextAndValidURL() {\n         String value = \"https://twitter.com/\";\n-        ConstraintValidatorContext context = new ConstraintValidatorContextImpl(null, PathImpl.createPathFromString(\"\"), null);\n+        ConstraintValidatorContext context = new ConstraintValidatorContextImpl(validatorFactory.getClockProvider(), PathImpl.createPathFromString(\"\"),null, null);\n \n         assertEquals(true, new URLValidator().isValid(value, context));\n     }\n \n     @Test\n     public void testIsValidWithContextButInvalidURL() {\n         String value = \"cnn.com\";\n-        ConstraintValidatorContext context = new ConstraintValidatorContextImpl(null, PathImpl.createPathFromString(\"\"), null);\n+        ConstraintValidatorContext context = new ConstraintValidatorContextImpl(validatorFactory.getClockProvider(), PathImpl.createPathFromString(\"\"),null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dd243115af5e04eba4d3a4751fa42d20bcc7064"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2389, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}