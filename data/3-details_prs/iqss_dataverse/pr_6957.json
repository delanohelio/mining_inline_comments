{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Mjk4NDMz", "number": 6957, "title": "use POST for file download to avoid url length limits", "bodyText": "What this PR does / why we need it: uses POST for file download requests, avoiding problems with limits on the url length for requests for large numbers of files\nWhich issue(s) this PR closes:\nCloses #6943\nSpecial notes for your reviewer: We've used this on QDR since last May, but I just tried to compare with that fork to pull things over - haven't tested this commit.\nSuggestions on how to test this: Nominally, if any download works, this is working. To verify that it's better than the prior code, you'll need to have enough files to have caused trouble. That was 1061 in the issue but I'd suggest a larger number for a test or make sure your test DB uses ids with the same number of digits because the issue is line length and ids in production will be longer than on a new test machine starting with id 1.\nDoes this PR introduce a user interface change? If mockups are available, please link/include them here: No\nIs there a release notes update needed for this change?: No\nAdditional documentation:", "createdAt": "2020-06-03T15:50:07Z", "url": "https://github.com/IQSS/dataverse/pull/6957", "merged": true, "mergeCommit": {"oid": "97e7a6007927c6e5053be1253e53b461eea3064d"}, "closed": true, "closedAt": "2020-06-05T18:52:55Z", "author": {"login": "qqmyers"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnrZ7ZAH2gAyNDI3Mjk4NDMzOjczZTQyZTI0ZDZlZDIxYzY0YTg4MTM5MWIwM2RiZGMxZTQ1MzYxZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoEdqEAFqTQyNDgyMDY4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73e42e24d6ed21c64a881391b03dbdc1e45361f0", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/73e42e24d6ed21c64a881391b03dbdc1e45361f0", "committedDate": "2020-06-03T15:43:22Z", "message": "use POST for file download to avoid url length limits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODUxNDQ4", "url": "https://github.com/IQSS/dataverse/pull/6957#pullrequestreview-423851448", "createdAt": "2020-06-03T19:12:03Z", "commit": {"oid": "73e42e24d6ed21c64a881391b03dbdc1e45361f0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxMjowM1rOGept5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTo1NjozMVrOGerNiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Mzk1Ng==", "bodyText": "I was playing with this using curl and got a NullPointerException when fileIds was null (and a 500 error). Some error checking would be nice.", "url": "https://github.com/IQSS/dataverse/pull/6957#discussion_r434793956", "createdAt": "2020-06-03T19:12:03Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Access.java", "diffHunk": "@@ -525,15 +527,38 @@ public DownloadInstance tabularDatafileMetadataPreprocessed(@PathParam(\"fileId\")\n     }\n     \n     /* \n-     * API method for downloading zipped bundles of multiple files:\n+     * API method for downloading zipped bundles of multiple files. Uses POST to avoid long lists of file IDs that can make the URL longer than what's supported by browsers/servers\n     */\n     \n-    // TODO: Rather than only supporting looking up files by their database IDs, consider supporting persistent identifiers.\n+    // TODO: Rather than only supporting looking up files by their database IDs,\n+    // consider supporting persistent identifiers.\n+    @Path(\"datafiles\")\n+    @POST\n+    @Consumes(\"text/plain\")\n+    @Produces({ \"application/zip\" })\n+    public Response postDownloadDatafiles(String fileIds, @QueryParam(\"gbrecs\") boolean gbrecs, @QueryParam(\"key\") String apiTokenParam, @Context UriInfo uriInfo, @Context HttpHeaders headers, @Context HttpServletResponse response) throws WebApplicationException {\n+        \n+        fileIds = fileIds.substring(8); // String \"fileIds=\" from the front", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e42e24d6ed21c64a881391b03dbdc1e45361f0"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NDk1OQ==", "bodyText": "I think this API should be documented along side the other ones in the Data Access API page of the API Guide. I can imagine the same error that was reported in #6943 could easily happen to API users.", "url": "https://github.com/IQSS/dataverse/pull/6957#discussion_r434794959", "createdAt": "2020-06-03T19:13:53Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Access.java", "diffHunk": "@@ -525,15 +527,38 @@ public DownloadInstance tabularDatafileMetadataPreprocessed(@PathParam(\"fileId\")\n     }\n     \n     /* \n-     * API method for downloading zipped bundles of multiple files:\n+     * API method for downloading zipped bundles of multiple files. Uses POST to avoid long lists of file IDs that can make the URL longer than what's supported by browsers/servers\n     */\n     \n-    // TODO: Rather than only supporting looking up files by their database IDs, consider supporting persistent identifiers.\n+    // TODO: Rather than only supporting looking up files by their database IDs,\n+    // consider supporting persistent identifiers.\n+    @Path(\"datafiles\")\n+    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e42e24d6ed21c64a881391b03dbdc1e45361f0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxODQ0Mw==", "bodyText": "This is just a comment but I assume that PrimeFaces is being used here because there's no JSF standard way (FacesContext way) to execute a script.", "url": "https://github.com/IQSS/dataverse/pull/6957#discussion_r434818443", "createdAt": "2020-06-03T19:56:31Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/FileDownloadServiceBean.java", "diffHunk": "@@ -212,11 +213,7 @@ private void redirectToBatchDownloadAPI(String multiFileString, Boolean guestboo\n             fileDownloadUrl += \"?format=original\";\n         }\n         \n-        try {\n-            FacesContext.getCurrentInstance().getExternalContext().redirect(fileDownloadUrl);\n-        } catch (IOException ex) {\n-            logger.info(\"Failed to issue a redirect to file download url.\");\n-        }\n+        PrimeFaces.current().executeScript(\"downloadFiles('\"+fileDownloadUrl + \"','\"+ multiFileString+\"');\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e42e24d6ed21c64a881391b03dbdc1e45361f0"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fd7f23d392f43277420e140c7c63528c3e1f157", "author": {"user": {"login": "qqmyers", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/9fd7f23d392f43277420e140c7c63528c3e1f157", "committedDate": "2020-06-04T20:50:28Z", "message": "addressing comments - fix error handling, add api doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0ODIwNjg5", "url": "https://github.com/IQSS/dataverse/pull/6957#pullrequestreview-424820689", "createdAt": "2020-06-04T20:55:04Z", "commit": {"oid": "9fd7f23d392f43277420e140c7c63528c3e1f157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 836, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}