{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODcyMzY2", "number": 7410, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNzo1NToxOFrOE4-ypw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxODoyMDowN1rOE4-6EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTg0NDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/api/Pids.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNzo1NToxOVrOHzMkAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjo0MzoyN1rOH0HeCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NTI1MQ==", "bodyText": "Since this is a config problem, BAD_REQUEST is probably not the right response.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r523445251", "createdAt": "2020-11-14T17:55:19Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Pids.java", "diffHunk": "@@ -48,8 +48,12 @@ public Response getPid(@QueryParam(\"persistentId\") String persistentId) {\n         String baseUrl = systemConfig.getDataCiteRestApiUrlString();\n         String username = System.getProperty(\"doi.username\");\n         String password = System.getProperty(\"doi.password\");\n-        JsonObjectBuilder result = PidUtil.queryDoi(persistentId, baseUrl, username, password);\n-        return ok(result);\n+        try {\n+            JsonObjectBuilder result = PidUtil.queryDoi(persistentId, baseUrl, username, password);\n+            return ok(result);\n+        } catch (Exception ex) {\n+            return error(Response.Status.BAD_REQUEST, ex.getLocalizedMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQxMDM3Ng==", "bodyText": "@qqmyers yeah, 500 probably makes more sense. Fixed in 7c55e2b.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524410376", "createdAt": "2020-11-16T16:43:27Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Pids.java", "diffHunk": "@@ -48,8 +48,12 @@ public Response getPid(@QueryParam(\"persistentId\") String persistentId) {\n         String baseUrl = systemConfig.getDataCiteRestApiUrlString();\n         String username = System.getProperty(\"doi.username\");\n         String password = System.getProperty(\"doi.password\");\n-        JsonObjectBuilder result = PidUtil.queryDoi(persistentId, baseUrl, username, password);\n-        return ok(result);\n+        try {\n+            JsonObjectBuilder result = PidUtil.queryDoi(persistentId, baseUrl, username, password);\n+            return ok(result);\n+        } catch (Exception ex) {\n+            return error(Response.Status.BAD_REQUEST, ex.getLocalizedMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NTI1MQ=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTg2Mzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "isResolved": false, "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxODoyMDowN1rOHzMsqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMTowMjo1M1rOIOnKUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA==", "bodyText": "This stops the specific error in the issue from resulting in an OK response, but the other exceptions in this class are still being caught and returned as OK. One option for handling these would be to just throw subclasses of WebApplicationException directly from this class (see, for example, the table on this page for the available exceptions. The edu.harvard.iq.dataverse.api.errorhandlers.WebApplicationExceptionHandler will handle them from there. Each type of error has a default message and any InternalServerErrorExceptions get additional logging.\nYou can also just let any Throwable be caught by the ThrowableHandler - which are returned as 500 errors.\nNeither of these let you pass the exception message on to the user though, so you'd still have to catch exceptions for that in Pids.java if you want to include that in the response (but you could still throw the WebApplicationExceptions to also be able to pass the error type/status code.)", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r523447464", "createdAt": "2020-11-14T18:20:07Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQxMDY4OQ==", "bodyText": "@qqmyers good ideas. How does 7c55e2b look?", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524410689", "createdAt": "2020-11-16T16:43:52Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MDU0Mg==", "bodyText": "That works - a good way to be able to send a custom message with a 500. I made another commit to try and catch/assign status codes to other types of errors that can occur. See what you think/feel free to reject/edit further.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524460542", "createdAt": "2020-11-16T17:51:03Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MzM3OQ==", "bodyText": "https://github.com/IQSS/dataverse/pull/7410/files?w=1 makes it easier to see the changes since indenting changed overall...", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524463379", "createdAt": "2020-11-16T17:55:29Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUzODMxNA==", "bodyText": "@qqmyers as of the commit you added I don't think the case of a PID that can't be found makes sense. Below you can see that when a PID exists, you get a nice \"findable\" message but when you add some characters to the end of the PID such that it doesn't exist, you get a message saying \"API endpoint does not exist on this server\" which doesn't make sense:\nbeamish:dataverse pdurbin$ export PID=doi:10.70122/FK2/9BXT5O\nbeamish:dataverse pdurbin$ \nbeamish:dataverse pdurbin$ curl -s -H \"X-Dataverse-key:$API_TOKEN\" $SERVER_URL/api/pids?persistentId=$PID | jq .\n{\n  \"status\": \"OK\",\n  \"data\": {\n    \"id\": \"10.70122/fk2/9bxt5o\",\n    \"state\": \"findable\"\n  }\n}\nbeamish:dataverse pdurbin$ export PID=doi:10.70122/FK2/9BXT5Ozzz\nbeamish:dataverse pdurbin$ \nbeamish:dataverse pdurbin$ curl -s -H \"X-Dataverse-key:$API_TOKEN\" $SERVER_URL/api/pids?persistentId=$PID | jq .\n{\n  \"status\": \"ERROR\",\n  \"code\": 404,\n  \"message\": \"API endpoint does not exist on this server. Please check your code for typos, or consult our API guide at http://guides.dataverse.org.\",\n  \"requestUrl\": \"http://localhost:8080/api/v1/pids?persistentId=doi:10.70122/FK2/9BXT5Ozzz\",\n  \"requestMethod\": \"GET\"\n}\nbeamish:dataverse pdurbin$", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524538314", "createdAt": "2020-11-16T20:02:54Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU2MjUwNw==", "bodyText": "Hmm - 404 seems OK, but the message should probably be updated. I'll change it to \"The resource does not exist in this server\". If you have a better idea, go ahead and change it. If you think it needs a custom response, I think the way you did the 500 error would work. (FWIW: See https://stackoverflow.com/questions/9930695/rest-api-404-bad-uri-or-missing-resource for a discussion of best practice. I haven't looked too far beyond that, but it seems reasonable.)", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524562507", "createdAt": "2020-11-16T20:48:12Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MDU0Mw==", "bodyText": "@qqmyers honestly, I was happier back with my original commit for this pull request (116379e). We should probably have a call because there's a lot to unpack. For now I'll move this out of code review and put both of us on it.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524580543", "createdAt": "2020-11-16T21:06:57Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyMjI3MQ==", "bodyText": "The main concern I have for the PR is to get all of the possible exceptions that can occur to result in errors rather than OKs. If you want to cover those a different way, I don't have a problem - just thought it would be easier to show code than trying to add comments. In any case, happy to discuss to help resolve things.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r524622271", "createdAt": "2020-11-16T21:44:08Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyMDI4MQ==", "bodyText": "@qqmyers @pdurbin thanks for the discussion here. If you're both around next week can you take a few minutes to catch up and figure out the next steps to keep this moving?", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r541320281", "createdAt": "2020-12-11T21:38:38Z", "author": {"login": "djbrooke"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyNzMzMg==", "bodyText": "Sure, some of this is process:\n\nPlease don't change my code without asking.\nLet's not change our \"this API doesn't exist\" message for an issue about PIDs. Let's please consider this separately.\n\nSome if it is technical:\n\nIf a PID doesn't exist on the DataCite side, I'm not sure we should return a 404 from the Dataverse side. What we should definitely return is an informative message. My intention with this API is to allow Dataverse admins to get information about the state of the world on the DataCite side without having to use DataCite's API directly.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r541327332", "createdAt": "2020-12-11T21:46:34Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyOTk0MQ==", "bodyText": "Sounds good, happy to join in also if there's some question of scope.", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r541329941", "createdAt": "2020-12-11T21:49:27Z", "author": {"login": "djbrooke"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE5MjU5NQ==", "bodyText": "@qqmyers I know we haven't had a chance to talk yet but I'm putting this back in code review. Maybe you can take a look and ping me on Slack. Apart from merging the latest from develop...\nIn 00cf232 I reverted the change to the \"endpoint doesn't exist\" message. I'm open to revising this message as a separate effort.\nIn c359cbe I'm not exposing more detail to the Dataverse API user that the the 404 is coming from DataCite and that we're merely passing the information along. Here's how it looks:\ncurl -s -H \"X-Dataverse-key:$API_TOKEN\" $SERVER_URL/api/pids?persistentId=$PID -i\nHTTP/1.1 404 Not Found\nServer: Payara Server  5.2020.6 #badassfish\nX-Powered-By: Servlet/4.0 JSP/2.3 (Payara Server  5.2020.6 #badassfish Java/AdoptOpenJDK/1.8)\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, X-Dataverse-Key\nContent-Type: application/json;charset=UTF-8\nContent-Length: 95\nX-Frame-Options: SAMEORIGIN\n\n{\"status\":\"ERROR\",\"message\":\"404 (NOT FOUND) from DataCite for DOI doi:10.70122/FK2/9BXT5Ozzz\"}", "url": "https://github.com/IQSS/dataverse/pull/7410#discussion_r552192595", "createdAt": "2021-01-05T21:02:53Z", "author": {"login": "pdurbin"}, "path": "src/main/java/edu/harvard/iq/dataverse/pidproviders/PidUtil.java", "diffHunk": "@@ -45,7 +46,7 @@ public static JsonObjectBuilder queryDoi(String persistentId, String baseUrl, St\n             status = connection.getResponseCode();\n         } catch (IOException ex) {\n             // Hostname not in DNS, for example.\n-            return Json.createObjectBuilder().add(\"response\", ex.getLocalizedMessage());\n+            throw new RuntimeException(BundleUtil.getStringFromBundle(\"pids.datacite.errors.noResponseCode\", Arrays.asList(baseUrl)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0NzQ2NA=="}, "originalCommit": {"oid": "116379ed5b0e36fede95660e9628183c54dc349c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2324, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}