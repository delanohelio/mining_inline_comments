{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDM2Mjg3", "number": 7142, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDowOTozMFrOETRYXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NToyM1rOEVH5Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjQzMTY0OnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDowOTozMFrOG46QDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo1ODo1NlrOG5F7UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n          \n          \n            \n            For installations using Dataverse v5.x, the process of registering the Global Identifier (DOI) for the dataset changes. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\").", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462327823", "createdAt": "2020-07-29T14:09:30Z", "author": {"login": "poikilotherm"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyODYxMg==", "bodyText": "And is this really true for all types of PIDs? I couldn't tell from a quick view at the code, but if not, maybe this should be more Datacite-using specific?", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462328612", "createdAt": "2020-07-29T14:10:24Z", "author": {"login": "poikilotherm"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw=="}, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MTExOA==", "bodyText": "Hmm. I can change \"dataverses\" to \"installations\" if you prefer; but otherwise your proposed commit is changing what  I am actually trying to say, somewhat. We want it to say \"dataverses (or installations) using Datacite\" - because this is Datacite-specific, and I do want to repeat it in this paragraph. That sentence may need a comma - but I don't think it should go where you are  adding it. I meant to say something along the lines of\n\"For (Dataverse) installations (that are) using Datacite, (the upgrade to) v5.0 will change the process of ...\"\nMay not have been my best sentence ever, I'll try improve it.  But not sure I like your version either, sorry.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462351118", "createdAt": "2020-07-29T14:38:43Z", "author": {"login": "landreev"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw=="}, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMzAxNg==", "bodyText": "That's fine. I was just concerned by a non-existing \"DataCite 5.0\" \ud83d\ude04", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462433016", "createdAt": "2020-07-29T16:33:19Z", "author": {"login": "poikilotherm"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw=="}, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNDY1Mg==", "bodyText": "A missing period? using Datacite. v5.x changes....", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462514652", "createdAt": "2020-07-29T18:50:51Z", "author": {"login": "qqmyers"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw=="}, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxOTEyMQ==", "bodyText": "@qqmyers it should be properly punctuated in the current version, yes.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462519121", "createdAt": "2020-07-29T18:58:56Z", "author": {"login": "landreev"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+# Dataverse installatins using Datacite: upgrade action required.\n+\n+For Dataverses using Datacite v5.0 changes the process of registering the Global Identifier (DOI) for the dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNzgyMw=="}, "originalCommit": {"oid": "cda7bca30d91c3fa4a32d33e4cd1e1837132f0b3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzU3NzIzOnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToxNVrOG5Fd6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToxNVrOG5Fd6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTU5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Going forward, once all the DOIs have been reserved for the legacy drafts, some newly-created datasets may still end up with unreserved DOIs. (For example, if Datacite service was unavailable at the time of the datast creation; we don't expect it to happen too often, but it is not impossible). To address this preemptively we recommend that you set up a cronjob to run the script above (perhaps with some extra diagnostics added) weekly or even nightly. \n          \n          \n            \n            Going forward, once all the DOIs have been reserved for the legacy drafts, some newly-created datasets may still end up with unreserved DOIs. (For example, if Datacite service was unavailable at the time of the dataset creation; we don't expect it to happen too often, but it is not impossible). To address this preemptively we recommend that you set up a cronjob to run the script above (perhaps with some extra diagnostics added) weekly or even nightly.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462511595", "createdAt": "2020-07-29T18:45:15Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Global Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n+\n+This approach makes the process of publishing datasets simpler and less error-prone. One drawback is that a dataset cannot be published until the DOI has been reserved. Specifically, if your installation uses Datacite, the moment it is upgraded to v5.0, all the pre-existing unpublished drafts will become \"unpublishable\", until you reserve the DOIs as described below. So it is important to do that immediately after the upgrade, by using the following APIs:\n+\n+`/api/pids/unreserved`  will report the ids of the datasets \n+`/api/pids/:persistentId/reserve` reserves the assigned DOI with Datacite (will need to be run on every id reported by the the first API). \n+(See the Native API guide for more information).\n+\n+Scripted, the whole process would look as follows (adjust as needed):\n+\n+```\n+   API_TOKEN='xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'\n+   \n+   curl -s -H \"X-Dataverse-key:$API_TOKEN\" http://localhost:8080/api/pids/unreserved |\n+   # the API outputs JSON; note the use of jq to parse it:\n+   jq '.data.count[].pid' | tr -d '\"' | \n+   while read doi\n+   do\n+      curl -s -H \"X-Dataverse-key:$API_TOKEN\" -X POST http://localhost:8080/api/pids/:persistentId/reserve?persistentId=$doi\n+   done\n+```\n+\n+If you have a large number of unpublished drafts in the database, reserving them one by one may take some time. So if you want to be extra nice to your users, you may warn them ahead of time that some may have trouble publishing their drafts immediately after the upgrade. \n+\n+Going forward, once all the DOIs have been reserved for the legacy drafts, some newly-created datasets may still end up with unreserved DOIs. (For example, if Datacite service was unavailable at the time of the datast creation; we don't expect it to happen too often, but it is not impossible). To address this preemptively we recommend that you set up a cronjob to run the script above (perhaps with some extra diagnostics added) weekly or even nightly. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef87b1f71259bd7b2ab125b13c2674e77b7e9157"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzU4NDE3OnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NzoyOVrOG5FigA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NzoyOVrOG5FigA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMjc2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Global Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n          \n          \n            \n            For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Persistent Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n          \n      \n    \n    \n  \n\nI know in the code we call it GlobalId but everywhere else we call it a Persistent Identifier, a PID.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r462512768", "createdAt": "2020-07-29T18:47:29Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade", "diffHunk": "@@ -0,0 +1,28 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Global Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef87b1f71259bd7b2ab125b13c2674e77b7e9157"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTgzOTUzOnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0Mjo0MFrOG7s4UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo0MTozN1rOG7wvfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NDQ4MQ==", "bodyText": "The sentence starting with \"But\" feels unnecessary.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. But it does help to ensure that the DOI is guaranteed to be available beforehand. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time. \n          \n          \n            \n            This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r465254481", "createdAt": "2020-08-04T18:42:40Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Persistent Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n+\n+This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. But it does help to ensure that the DOI is guaranteed to be available beforehand. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98ff4fe423ca32a1763db3e8047961d91aee169"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2MjIxOA==", "bodyText": "But, without the sentence starting with \"But\", doesn't it become completely unclear why they need to bother at all?\nOr do you feel it's explained enough by the first sentence (\"simpler and less-error prone\")?", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r465262218", "createdAt": "2020-08-04T18:57:20Z", "author": {"login": "landreev"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Persistent Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n+\n+This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. But it does help to ensure that the DOI is guaranteed to be available beforehand. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NDQ4MQ=="}, "originalCommit": {"oid": "c98ff4fe423ca32a1763db3e8047961d91aee169"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNzc1Ng==", "bodyText": "Yeah, I was thinking it's explained enough.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r465317756", "createdAt": "2020-08-04T20:41:37Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Persistent Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n+\n+This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. But it does help to ensure that the DOI is guaranteed to be available beforehand. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NDQ4MQ=="}, "originalCommit": {"oid": "c98ff4fe423ca32a1763db3e8047961d91aee169"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTg0NDY0OnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NDoxNlrOG7s7jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NDoxNlrOG7s7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NTMxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## Dataverse installations using Datacite: upgrade action required.\n          \n          \n            \n            ## Dataverse installations using Datacite: upgrade action recommended.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r465255310", "createdAt": "2020-08-04T18:44:16Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Dataverse installations using Datacite: upgrade action required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98ff4fe423ca32a1763db3e8047961d91aee169"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTg0ODUxOnYy", "diffSide": "RIGHT", "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NToyM1rOG7s94A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo0NToyM1rOG7s94A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NTkwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Going forward, once all the DOIs have been reserved for the legacy drafts, you may still get an occasional dataset with an unreserved identfier. Datacite service instability would be a potential cause. There is no reason to expect that to happen often, but it is not impossible. You may consider running the script above (perhaps with some extra diagnostics added) regularly, from a cron job or otherwise, to address this preemptively.  \n          \n          \n            \n            Going forward, once all the DOIs have been reserved for the legacy drafts, you may still get an occasional dataset with an unreserved identifier. Datacite service instability would be a potential cause. There is no reason to expect that to happen often, but it is not impossible. You may consider running the script above (perhaps with some extra diagnostics added) regularly, from a cron job or otherwise, to address this preemptively.", "url": "https://github.com/IQSS/dataverse/pull/7142#discussion_r465255904", "createdAt": "2020-08-04T18:45:23Z", "author": {"login": "pdurbin"}, "path": "doc/release-notes/6980-datacite-reservation-upgrade.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Dataverse installations using Datacite: upgrade action required.\n+\n+For installations that are using Datacite, Dataverse v5.0 introduces a change in the process of registering the Persistent Identifier (DOI) for a dataset. Instead of registering it when the dataset is published for the first time, Dataverse will try to \"reserve\" the DOI when it's created (by registering it as a \"draft\", using Datacite terminology). When the user publishes the dataset, the DOI will be publicized as well (by switching the registration status to \"findable\"). \n+\n+This approach makes the process of publishing datasets simpler and less error-prone. If the DOI has not been reserved (for example, if Datacite was down when the dataset was created), the author can still attempt to publish. But it does help to ensure that the DOI is guaranteed to be available beforehand. New APIs have been provided for finding any unreserved Datacite-issued DOIs in your Dataverse, and for reserving them (see below). If you are upgrading an installation that uses Datacite, we specifically recommend that you reserve the DOIs for all your pre-existing unpublished drafts as soon as Dataverse v5.0 is deployed, since none of them were registered at create time. \n+\n+The following API calls should be used:\n+`/api/pids/unreserved`  will report the ids of the datasets \n+`/api/pids/:persistentId/reserve` reserves the assigned DOI with Datacite (will need to be run on every id reported by the the first API). \n+(See the Native API guide for more information).\n+\n+Scripted, the whole process would look as follows (adjust as needed):\n+\n+```\n+   API_TOKEN='xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'\n+   \n+   curl -s -H \"X-Dataverse-key:$API_TOKEN\" http://localhost:8080/api/pids/unreserved |\n+   # the API outputs JSON; note the use of jq to parse it:\n+   jq '.data.count[].pid' | tr -d '\"' | \n+   while read doi\n+   do\n+      curl -s -H \"X-Dataverse-key:$API_TOKEN\" -X POST http://localhost:8080/api/pids/:persistentId/reserve?persistentId=$doi\n+   done\n+``` \n+\n+Going forward, once all the DOIs have been reserved for the legacy drafts, you may still get an occasional dataset with an unreserved identfier. Datacite service instability would be a potential cause. There is no reason to expect that to happen often, but it is not impossible. You may consider running the script above (perhaps with some extra diagnostics added) regularly, from a cron job or otherwise, to address this preemptively.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98ff4fe423ca32a1763db3e8047961d91aee169"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3296, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}