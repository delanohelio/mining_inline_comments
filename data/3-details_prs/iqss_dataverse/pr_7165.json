{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDE2NTgw", "number": 7165, "title": "7159 fix restassured etc", "bodyText": "What this PR does / why we need it:\nThe issue was opened initially because I forgot to check in some RestAssured code (UtilIT.java, etc.) that was needed for the tests to run. (The new publish mechanism involves waiting for the dataset to unlock, if locks are present; so that was missing).\nBut we also discovered some non-test related issues that needed to be addressed:\nThere was a massive sleep statement in the service bean before calling the async. portion of the command that we forgot about. In this PR I added an onSuccess() to the PublishDataset command; the second command call is made from there, and this appears to make any sleep delay unnecessary (per suggestion from @scolapasta)\nDue to some weirdness in how the onSuccess() of the second command is executed, I also realized that even after all the changes in #6918 there was still a possibility for the dataset to become unlocked before the publication was finalized. (If the indexing and/or export are taking a long time, for ex.). This was addressed by moving the unlocking code to onSuccess().\nFurther simplified the RestAssured changes (only UtilIT.java is modified).\nModifed PublishDatasetResult to treat \"publish workflow\" and \"asynchronous publishing in progress\" as distinct states.\nWhich issue(s) this PR closes:\nCloses #7159\nSpecial notes for your reviewer:\nSuggestions on how to test this:\nDoes this PR introduce a user interface change? If mockups are available, please link/include them here:\nIs there a release notes update needed for this change?:\nAdditional documentation:", "createdAt": "2020-08-06T13:08:55Z", "url": "https://github.com/IQSS/dataverse/pull/7165", "merged": true, "mergeCommit": {"oid": "c7bbd8c450fd51f2ef0dedc22b27cf93ec64edc9"}, "closed": true, "closedAt": "2020-08-07T19:04:47Z", "author": {"login": "landreev"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8DULzAH2gAyNDY0MDE2NTgwOmEwZDk0YTRkNmMxOGRkODExMzQ1MmYyOTAxNWFmOThjMjRlYmZiZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8X40cgFqTQ2MjkyNjk3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a0d94a4d6c18dd8113452f29015af98c24ebfbd1", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/a0d94a4d6c18dd8113452f29015af98c24ebfbd1", "committedDate": "2020-08-05T22:53:18Z", "message": "Followup fixes for PR #6918. Missing additions to UtilIT.java needed for RestAssured to work;\nbut also some changes for the application proper to address some problematic things in the\nexecution framework of the publish commands. Will explain more in the PR. (#7159)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3", "committedDate": "2020-08-05T23:03:11Z", "message": "Merge branch 'develop' into 7159-fix-restassured-etc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTIxNTk3", "url": "https://github.com/IQSS/dataverse/pull/7165#pullrequestreview-462521597", "createdAt": "2020-08-06T13:32:48Z", "commit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozMjo0OFrOG8zstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozMjo0OFrOG8zstQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNDc3Mw==", "bodyText": "if this submit fails, isn't something beyond logging required?", "url": "https://github.com/IQSS/dataverse/pull/7165#discussion_r466414773", "createdAt": "2020-08-06T13:32:48Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java", "diffHunk": "@@ -780,21 +780,36 @@ public WorkflowComment addWorkflowComment(WorkflowComment workflowComment) {\n         return workflowComment;\n     }\n     \n+    /**\n+     * This method used to throw CommandException, which was pretty pointless \n+     * seeing how it's called asynchronously. As of v5.0 any CommanExceptiom \n+     * thrown by the FinalizeDatasetPublicationCommand below will be caught \n+     * and we'll log it as a warning - which is the best we can do at this point.\n+     * Any failure notifications to users should be sent from inside the command.\n+     */\n     @Asynchronous\n-    public void callFinalizePublishCommandAsynchronously(Long datasetId, CommandContext ctxt, DataverseRequest request, boolean isPidPrePublished) throws CommandException {\n+    public void callFinalizePublishCommandAsynchronously(Long datasetId, CommandContext ctxt, DataverseRequest request, boolean isPidPrePublished) {\n \n         // Since we are calling the next command asynchronously anyway - sleep here \n         // for a few seconds, just in case, to make sure the database update of \n         // the dataset initiated by the PublishDatasetCommand has finished, \n         // to avoid any concurrency/optimistic lock issues. \n-        try {\n-            Thread.sleep(15000);\n+        // Aug. 2020/v5.0: It appears to be working consistently without any \n+        // sleep here, after the call the method has been moved to the onSuccess()\n+        // portion of the PublishDatasetCommand. I'm going to leave the 1 second\n+        // sleep commented-out below for now: -- L.A.\n+        /*try {\n+            Thread.sleep(1000);\n         } catch (Exception ex) {\n-            logger.warning(\"Failed to sleep for 15 seconds.\");\n-        }\n+            logger.warning(\"Failed to sleep for 1 second.\");\n+        }*/\n         logger.fine(\"Running FinalizeDatasetPublicationCommand, asynchronously\");\n         Dataset theDataset = find(datasetId);\n-        commandEngine.submit(new FinalizeDatasetPublicationCommand(theDataset, request, isPidPrePublished));\n+        try {\n+            commandEngine.submit(new FinalizeDatasetPublicationCommand(theDataset, request, isPidPrePublished));\n+        } catch (CommandException cex) {\n+            logger.warning(\"CommandException caught when executing the asynchronous portion of the Dataset Publication Command.\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTI0MTcz", "url": "https://github.com/IQSS/dataverse/pull/7165#pullrequestreview-462524173", "createdAt": "2020-08-06T13:35:39Z", "commit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozNTozOVrOG8z0Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozNTozOVrOG8z0Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNjY0Mg==", "bodyText": "does this result in a 200 when the dataset is still inprogress/publishing not yet finalized? Seems like 202 is the right code for that (as it was) and the test should be watching for a 202?", "url": "https://github.com/IQSS/dataverse/pull/7165#discussion_r466416642", "createdAt": "2020-08-06T13:35:39Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java", "diffHunk": "@@ -1020,7 +1020,7 @@ public Response publishDataset(@PathParam(\"id\") String id, @QueryParam(\"type\") S\n             PublishDatasetResult res = execCommand(new PublishDatasetCommand(ds,\n                         createDataverseRequest(user),\n                     isMinor));\n-            return res.isCompleted() ? ok(json(res.getDataset())) : accepted(json(res.getDataset()));\n+            return res.isWorkflow() ? accepted(json(res.getDataset())) : ok(json(res.getDataset()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTY3Nzc0", "url": "https://github.com/IQSS/dataverse/pull/7165#pullrequestreview-462567774", "createdAt": "2020-08-06T14:22:29Z", "commit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyMjoyOVrOG81zmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyMjoyOVrOG81zmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0OTMwNg==", "bodyText": "Broad question - now that finalize is always asynchronous, it looks like these tests check that the publish call succeeds and the lock goes away, but is there anything to check that the async publish succeeded rather than failed? (E.g. test that a new version exists after the lock?).", "url": "https://github.com/IQSS/dataverse/pull/7165#discussion_r466449306", "createdAt": "2020-08-06T14:22:29Z", "author": {"login": "qqmyers"}, "path": "src/test/java/edu/harvard/iq/dataverse/api/UtilIT.java", "diffHunk": "@@ -2232,12 +2251,27 @@ static Boolean sleepForSearch(String searchPart, String apiToken,  String subTre\n \n     }\n     \n-    \n-    \n+    // backward compatibility version of the method that takes long for the id:\n     static Response checkDatasetLocks(long datasetId, String lockType, String apiToken) {\n+        String datasetIdAsString = String.valueOf(datasetId);\n+        return checkDatasetLocks(datasetIdAsString, lockType, apiToken);\n+    }\n+    \n+    static Response checkDatasetLocks(String idOrPersistentId, String lockType, String apiToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c95927af39f1d6fbd0c6a5026ac6ba2f8eb14d3"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d15fa77209c03090e79c259d9d8d2bebd3c9ede6", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/d15fa77209c03090e79c259d9d8d2bebd3c9ede6", "committedDate": "2020-08-06T19:09:00Z", "message": "Fix for the transaction context in the finalize command execution;\nMoved the unlock calls back to the end of the execute method. #7159"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32756fce3428621a8d28699bbf59cc3fffa5d955", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/32756fce3428621a8d28699bbf59cc3fffa5d955", "committedDate": "2020-08-06T20:26:10Z", "message": "making a commit just to kick off another jenkins test run."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODU1OTkz", "url": "https://github.com/IQSS/dataverse/pull/7165#pullrequestreview-462855993", "createdAt": "2020-08-06T20:33:07Z", "commit": {"oid": "32756fce3428621a8d28699bbf59cc3fffa5d955"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozMzowN1rOG9DR1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozNzowMFrOG9DZVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDAzOA==", "bodyText": "Did you try it without this? I'd love to get this removed, if we don't actually need it.", "url": "https://github.com/IQSS/dataverse/pull/7165#discussion_r466670038", "createdAt": "2020-08-06T20:33:07Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java", "diffHunk": "@@ -780,21 +780,37 @@ public WorkflowComment addWorkflowComment(WorkflowComment workflowComment) {\n         return workflowComment;\n     }\n     \n+    /**\n+     * This method used to throw CommandException, which was pretty pointless \n+     * seeing how it's called asynchronously. As of v5.0 any CommanExceptiom \n+     * thrown by the FinalizeDatasetPublicationCommand below will be caught \n+     * and we'll log it as a warning - which is the best we can do at this point.\n+     * Any failure notifications to users should be sent from inside the command.\n+     */\n     @Asynchronous\n-    public void callFinalizePublishCommandAsynchronously(Long datasetId, CommandContext ctxt, DataverseRequest request, boolean isPidPrePublished) throws CommandException {\n+    @TransactionAttribute(TransactionAttributeType.SUPPORTS)\n+    public void callFinalizePublishCommandAsynchronously(Long datasetId, CommandContext ctxt, DataverseRequest request, boolean isPidPrePublished) {\n \n         // Since we are calling the next command asynchronously anyway - sleep here \n         // for a few seconds, just in case, to make sure the database update of \n         // the dataset initiated by the PublishDatasetCommand has finished, \n         // to avoid any concurrency/optimistic lock issues. \n+        // Aug. 2020/v5.0: It MAY be working consistently without any \n+        // sleep here, after the call the method has been moved to the onSuccess()\n+        // portion of the PublishDatasetCommand. I'm going to leave the 1 second\n+        // sleep below, for just in case reasons: -- L.A.\n         try {\n-            Thread.sleep(15000);\n+            Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32756fce3428621a8d28699bbf59cc3fffa5d955"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MTk1OQ==", "bodyText": "I guess this is just to be extra safe, but would this ever be false? (since we're already in OnSuccess, that means the execute succeeded, no?", "url": "https://github.com/IQSS/dataverse/pull/7165#discussion_r466671959", "createdAt": "2020-08-06T20:37:00Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/PublishDatasetCommand.java", "diffHunk": "@@ -196,6 +199,24 @@ private void verifyCommandArguments() throws IllegalCommandException {\n                 throw new IllegalCommandException(\"Cannot release as minor version. Re-try as major release.\", this);\n             }\n         }\n-    }   \n+    }\n+    \n+    \n+    @Override\n+    public boolean onSuccess(CommandContext ctxt, Object r) {\n+        Dataset dataset = null;\n+        try{\n+            dataset = (Dataset) r;\n+        } catch (ClassCastException e){\n+            dataset  = ((PublishDatasetResult) r).getDataset();\n+        }\n+\n+        if (dataset != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32756fce3428621a8d28699bbf59cc3fffa5d955"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTI2OTcw", "url": "https://github.com/IQSS/dataverse/pull/7165#pullrequestreview-462926970", "createdAt": "2020-08-06T22:51:25Z", "commit": {"oid": "32756fce3428621a8d28699bbf59cc3fffa5d955"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 738, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}