{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NzA3MDUz", "number": 7118, "title": "6918 locking improvements", "bodyText": "What this PR does / why we need it:\nThis is a patch for a few unrelated issues that, combined, resulted in a series of nasty production crashes. That investigation is described in detail in IQSS/dataverse.harvard.edu#73\nThe issues were as follows:\nAuthenticationServiceBean was (unintentionally) left a @Singleton, with all the methods locking (i.e., with no explicit lock attributes all the methods were defaulting to @Lock(WRITE)). This was solved by making AuthenticationServiceBean a \"normal\", @Stateless bean; and moving the code that had any business being a singleton into its own compact service.\nWe had a complicated system for dataset publishing behavior. In some cases (depending on the number of files) we would lock the dataset and perform all the underlying tasks asynchronously; but on smaller datasets we would attempt to publish without a lock, making the page (or the API) wait for it to finish. It turned out that, even with a few files, publishing can still take a while. (possible reasons: Datacite service hanging/timing out; reindexing of the parent dataverse, when required, is now a potentially expensive operation; there are likely more). This created situations where a user was all but encouraged to click the publish button multiple times, while the previous attempts were still in progress. Which in turn resulted in these jobs ending up deadlocking each other; and, because of the previous issue, the entire application - if one of the commands was locking the AuthenticationService singleton.\nBecause of the previous fix, this would not be as catastrophic, if allowed to happen again. But it would still lock up the dataset in question, and would still result in a lot of frustration for the user.\nThis was solved by eliminating the 2 types of publishing behavior - all publishing now happens with the dataset securely locked.\nThe third issue was that because of a bug in the underlying EJB implementation of addAll(), the parent dataverse(s) of the dataset being published were often reindexed unnecessarily (when no new subjects were added). As of v4.20 this reindexing is a potentially expensive process (because of linked datasets?); so many datasets were taking unnecessarily long to publish just because of that.\nThis was solved by not using addAll().\nIssue #6947 is unrelated the troubles described above. But the changes in the PR happen to fix it too: If anything goes wrong during an attempt to publish, the user will end up staying on the draft page. And not, confusingly, on the last previously published version (if exists).\nWhich issue(s) this PR closes:\nCloses #6918\nAs a side effect, also Closes #6947\nSpecial notes for your reviewer:\nThe code that deals with registering AuthenticationServiceProviders has been moved into a new AuthenticationProvidersRegistrationServiceBean. It's a long name - but we want it to be as self-explanatory as possible. The trouble with the original service above happened because it was originally created just for registering AuthenticationProviders; but then everybody assumed it was for everything generally Authentication-related - and filled it with all sorts of service methods; some potentially time-consuming. Which was a recipe for disaster, since it was all locking, and most parts of the system would need to call these methods as part of normal operation.\nThe part about Set.addAll() method being buggy: @scolapasta investigated this and found this: eclipse-ee4j/eclipselink#622.\nThe bug has to do with the boolean return value of the method. It works fine otherwise - it adds all the values from set A to set B just fine. It's just that it's supposed to return true only if any new values have actually been added to the target set; and the Eclipse implementation ends up always returning true. So in the context of the FinalizeDatasetPublicationCommand we were indexing the parent dataverse(s) unnecessarily:\nif (dv.getDataverseSubjects().addAll(dsf.getControlledVocabularyValues())) {\n     Dataverse dvWithSubjectJustAdded = ctxt.em().merge(dv);\n     ctxt.em().flush();\n     ctxt.index().indexDataverse(dvWithSubjectJustAdded); // need to reindex to capture the new subjects\n}\n\nI worked around it by relying on  contains() instead. It doesn't look like we've been using the return value of addAll() anywhere else in the application; so let's keep it this way.\nAnd of course this is only the case with the Ecliplse implementation; if you create your own HashSet or something similar, you can expect the return value to be reliable. It's only when you are using the method on an EJB entity class, as in the example above, that it is problematic.\nSuggestions on how to test this:\nIt would be very hard to reproduce a full lockup condition that started this effort (on a full-size prod. db copy, maybe - but I don't think it's necessary to go to such lengths). It may be sufficient to confirm that this PR makes it next to impossible to start multiple parallel attempts to publish the same dataset (from different browsers, etc.); because the first attempt is now going to always lock the dataset.\nI'm not aware of an easy way to prove that calls to methods in AuthenticationServiceBean used to lock up access to the service, and that it's no longer happening. Except by making a test build with some \"sleep\" statements in strategic places.\nMy guess is that the main emphasis of the test should be that publishing still works. (And that publishing always locks the dataset, even if the old file number limit option is left in place, set to more than the number of files in the dataset).\nThere are smaller things - like confirming that after the dataset becomes lock, it stays on the draft page (and doesn't go to the last published version - which is issue #6947, that this PR also closes).\nAnd then there is that unnecessary reindexing of the parent dataverse, even when there were no new subjects added... It should be possible to test (maybe by just checking the \"indexed\" time stamp on the dataverse?) - but this I'm honestly not sure is worth it. So confirming that users can still publish their datasets without anything bad happening should probably be the priority; but that's just my interpretation.\nDoes this PR introduce a user interface change? If mockups are available, please link/include them here:\nThe UI impact is minimal, but there is still some.\nFrom the description above: \"We had a complicated system for dataset publishing behavior. In some cases (depending on the number of files) we would lock the dataset and perform all the underlying tasks asynchronously; but on smaller datasets we would attempt to publish without a lock, making the page (or the API) wait for it to finish.\"\nThis PR eliminates the latter type of behavior - from now on every time a user tries to publish, it will behave in the same, consistent manner. The dataset will be locked and the page will be showing a clear banner (\"Publish in Progress ...\") for the duration of the process. But this behavior is not new, it is already familiar to the users. So the changes are not introducing anything novel; just simplifying things.\nPlease let me know if you have any questions about the process.\nOne other change in the user experience, in the current (v4.20) setup, if Datacite registration fails during an attempt to publish, for the dataset or one of the files (because Datacite is down; because there's something in the metadata that Datacite doesn't like, etc.), it fails silently. In this PR we have agreed to add an explicit notification (emailed to the user, and shown in the UI) explaining what happened.\nThe text of the notifications is in the bundle and can be changed as needed.\nIs there a release notes update needed for this change?:\nAdditional documentation:", "createdAt": "2020-07-23T13:27:50Z", "url": "https://github.com/IQSS/dataverse/pull/7118", "merged": true, "mergeCommit": {"oid": "8ca934b5958722d4868099e13f6d381670c529f0"}, "closed": true, "closedAt": "2020-08-03T19:15:11Z", "author": {"login": "landreev"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2myToAH2gAyNDU1NzA3MDUzOjFmZjc0N2UwMzA1OTc2NWQ4MjQ0Mzk5ZDJmYWMxYzMwYzJmNDVjZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6G3elgFqTQ1ODc4MjcyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ff747e03059765d8244399d2fac1c30c2f45cf1", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/1ff747e03059765d8244399d2fac1c30c2f45cf1", "committedDate": "2020-07-20T00:49:20Z", "message": "The new iteration of the patch for the Singleton locking, and related conditions.\nMUCH SIMPLIFIED, in terms of the number of files that had to be modified; but should be\neven more effective in ensuring that the service should never become locked under\nnormal operating conditions. (#6918)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4765cbd3dc8bae422a87bdce50f951e0be8b4f8c", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/4765cbd3dc8bae422a87bdce50f951e0be8b4f8c", "committedDate": "2020-07-23T12:47:59Z", "message": "the remaining parts of the #6918 patch (changes to the publishing process, etc.)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9faedbc7a4ff5a0769f773b02746fb243f040c6b", "author": {"user": {"login": "djbrooke", "name": "Danny Brooke"}}, "url": "https://github.com/IQSS/dataverse/commit/9faedbc7a4ff5a0769f773b02746fb243f040c6b", "committedDate": "2020-07-23T13:44:22Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c961ec99d69a1642eb4ee26bfb74df8f552596", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/a4c961ec99d69a1642eb4ee26bfb74df8f552596", "committedDate": "2020-07-23T16:06:18Z", "message": "\"bnackground\" (#6918)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDA3NTMx", "url": "https://github.com/IQSS/dataverse/pull/7118#pullrequestreview-454407531", "createdAt": "2020-07-23T18:50:55Z", "commit": {"oid": "a4c961ec99d69a1642eb4ee26bfb74df8f552596"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1MDo1NlrOG2XVmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1MDo1NlrOG2XVmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1ODY1MQ==", "bodyText": "policy question - should old settings be described when they no longer have an effect? I ask partly because in #7116 I'm just removing documentation of old jvm options. (A quick search for deprecated only showed a couple cases where something was deprecated but still supported.)", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r459658651", "createdAt": "2020-07-23T18:50:56Z", "author": {"login": "qqmyers"}, "path": "doc/sphinx-guides/source/installation/config.rst", "diffHunk": "@@ -1446,22 +1446,20 @@ Note that in either case, when using the ``sequentialNumber`` option, datasets a\n :FilePIDsEnabled\n ++++++++++++++++\n \n-Toggles publishing of file-based PIDs for the entire installation. By default this setting is absent and Dataverse assumes it to be true.\n+Toggles publishing of file-based PIDs for the entire installation. By default this setting is absent and Dataverse assumes it to be true. If enabled, the registration will be performed asynchronously (in the background) during publishing of a dataset.\n \n If you don't want to register file-based PIDs for your installation, set:\n \n ``curl -X PUT -d 'false' http://localhost:8080/api/admin/settings/:FilePIDsEnabled``\n \n-Note: File-level PID registration was added in 4.9 and is required until version 4.9.3.\n-\n-Note: The dataset will be locked, and the registration will be performed asynchronously, when there are more than N files in the dataset, where N is configured by the database setting ``:PIDAsynchRegFileCount`` (default: 10). \n+Note: File-level PID registration was added in 4.9; it could not be disabled until version 4.9.3.\n \n .. _:PIDAsynchRegFileCount:\n \n-:PIDAsynchRegFileCount\n-++++++++++++++++++++++\n+:PIDAsynchRegFileCount (DEPRECATED)\n++++++++++++++++++++++++++++++++++++\n \n-Configures the number of files in the dataset to warrant performing the registration of persistent identifiers (section above) and/or file validation asynchronously during publishing. The setting is optional, and the default value is 10.\n+Before v5.0 this setting used to specify the number of files in the dataset to warrant performing the registration of the persistent identifiers (section above) and/or file validation asynchronously (in the background) during publishing. As of v5.0 publishing *always* happens asynchronously, with the dataset locked for the duration of the process. The setting will be ignored if present. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c961ec99d69a1642eb4ee26bfb74df8f552596"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDE4MjA0", "url": "https://github.com/IQSS/dataverse/pull/7118#pullrequestreview-454418204", "createdAt": "2020-07-23T19:06:20Z", "commit": {"oid": "a4c961ec99d69a1642eb4ee26bfb74df8f552596"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTowNjoyMFrOG2X2Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTowNjoyMFrOG2X2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Njk4Ng==", "bodyText": "I thought I understood why the in transaction version of sendNotification was needed (to send the email even if the command transaction was rolling back), but this looks like the opposite - is it correct as is? (If so, what am I missing?)", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r459666986", "createdAt": "2020-07-23T19:06:20Z", "author": {"login": "qqmyers"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java", "diffHunk": "@@ -399,16 +436,17 @@ private void notifyUsersFileDownload(CommandContext ctxt, DvObject subject) {\n             .filter(  ra -> ra.getRole().permissions().contains(Permission.DownloadFile) )\n             .flatMap( ra -> ctxt.roleAssignees().getExplicitUsers(ctxt.roleAssignees().getRoleAssignee(ra.getAssigneeIdentifier())).stream() )\n             .distinct() // prevent double-send\n-            .forEach( au -> ctxt.notifications().sendNotification(au, getTimestamp(), UserNotification.Type.GRANTFILEACCESS, getDataset().getId()) );\n+            .forEach( au -> ctxt.notifications().sendNotificationInTransaction(au, getTimestamp(), UserNotification.Type.GRANTFILEACCESS, getDataset().getId()) );\n     }\n     \n-    private void notifyUsersDatasetPublish(CommandContext ctxt, DvObject subject) {\n+    private void notifyUsersDatasetPublishStatus(CommandContext ctxt, DvObject subject, UserNotification.Type type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c961ec99d69a1642eb4ee26bfb74df8f552596"}, "originalPosition": 187}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e734dd88f209bb4b52965fbb7e8838ea48c420e4", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/e734dd88f209bb4b52965fbb7e8838ea48c420e4", "committedDate": "2020-07-23T20:00:26Z", "message": "Fixed the notification method in the finalize publish command. #6918"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODUyMzU0", "url": "https://github.com/IQSS/dataverse/pull/7118#pullrequestreview-455852354", "createdAt": "2020-07-27T14:45:15Z", "commit": {"oid": "e734dd88f209bb4b52965fbb7e8838ea48c420e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo0NToxNVrOG3lzOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo0NToxNVrOG3lzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0NDE4NA==", "bodyText": "Typo requires correction... \"Global Identifier\".", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r460944184", "createdAt": "2020-07-27T14:45:15Z", "author": {"login": "mheppler"}, "path": "src/main/java/propertyFiles/Bundle.properties", "diffHunk": "@@ -666,6 +668,7 @@ notification.email.createDataset=Your new dataset named {0} (view at {1} ) was c\n notification.email.wasSubmittedForReview={0} (view at {1}) was submitted for review to be published in {2} (view at {3}). Don''t forget to publish it or send it back to the contributor, {4} ({5})\\!\n notification.email.wasReturnedByReviewer={0} (view at {1}) was returned by the curator of {2} (view at {3}).\n notification.email.wasPublished={0} (view at {1}) was published in {2} (view at {3}).\n+notification.email.publishFailedPidReg={0} (view at {1}) in {2} (view at {3}) could not be published due to a failure to register, or update the Global Identifer for the dataset or one of the files in it. Contact support if this continues to happen. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e734dd88f209bb4b52965fbb7e8838ea48c420e4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05794883bdf63149721f0ee5ed8dc8b8c924aa33", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/05794883bdf63149721f0ee5ed8dc8b8c924aa33", "committedDate": "2020-07-27T15:14:15Z", "message": "fixed \"Global Identifer\" (#6918)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3d0cca6c98cdf1f7fa66192392ff5f73a86f25", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/8b3d0cca6c98cdf1f7fa66192392ff5f73a86f25", "committedDate": "2020-07-27T15:18:26Z", "message": "fixed another \"Global Identifer\" (#6918)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ca896f3d952e9d1f16925cfdf805e2ff842457f", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/4ca896f3d952e9d1f16925cfdf805e2ff842457f", "committedDate": "2020-07-27T16:47:24Z", "message": "Publish notification, as displayed in the UI, was adding \"version=DRAFT\" to the url (?).\nWas pre-existing - but why not. (#6918)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1751379b0c02f71d6acfdf6b74cd838470933c43", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/1751379b0c02f71d6acfdf6b74cd838470933c43", "committedDate": "2020-07-27T19:11:45Z", "message": "there's never a reason not to redirect to the draft explicitly after publishing is initiated (#6918)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/840d290d155410c13ab0b0bc640dc056ea35513b", "committedDate": "2020-07-28T13:56:22Z", "message": "removed a deprecated setting from the guide. #6918"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODAxNDQw", "url": "https://github.com/IQSS/dataverse/pull/7118#pullrequestreview-457801440", "createdAt": "2020-07-29T18:56:11Z", "commit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo1NjoxMVrOG5F1nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowMDoxMlrOG5F-Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNzY2MQ==", "bodyText": "minor quibble, but maybe name of method should be \"sendNotificationInNewTransaction\" -  at least that's the naming scheme we used for, e.g., indexDataverseInNewTransaction.", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r462517661", "createdAt": "2020-07-29T18:56:11Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/UserNotificationServiceBean.java", "diffHunk": "@@ -83,6 +85,11 @@ public void delete(UserNotification userNotification) {\n         em.remove(em.merge(userNotification));\n     }\n \n+    @TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\n+    public void sendNotificationInTransaction(AuthenticatedUser dataverseUser, Timestamp sendDate, Type type, Long objectId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxODkxOQ==", "bodyText": "minor type", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r462518919", "createdAt": "2020-07-29T18:58:33Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java", "diffHunk": "@@ -149,10 +159,14 @@ public Dataset execute(CommandContext ctxt) throws CommandException {\n         \n \tif (theDataset.getLatestVersion().getVersionState() != RELEASED) {\n             // some imported datasets may already be released.\n-\n+            \n             if (!datasetExternallyReleased) {\n                 publicizeExternalIdentifier(theDataset, ctxt);\n-                // (will throw a CommandException, unless successful)\n+                // Will throw a CommandException, unless successful.\n+                // This will end the exucition of the command, but the method ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxOTQ5MA==", "bodyText": "possibly, out of scope, but should we move export into onSuccess?", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r462519490", "createdAt": "2020-07-29T18:59:34Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java", "diffHunk": "@@ -220,7 +235,7 @@ private void exportMetadata(Dataset dataset, SettingsServiceBean settingsService\n             ExportService instance = ExportService.getInstance(settingsServiceBean);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxOTg1NA==", "bodyText": "I already opened a separate issue for this, but index should be moved to onSuccess.", "url": "https://github.com/IQSS/dataverse/pull/7118#discussion_r462519854", "createdAt": "2020-07-29T19:00:12Z", "author": {"login": "scolapasta"}, "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java", "diffHunk": "@@ -237,10 +252,24 @@ private void updateParentDataversesSubjectsField(Dataset savedDataset, CommandCo\n             if (dsf.getDatasetFieldType().getName().equals(DatasetFieldConstant.subject)) {\n                 Dataverse dv = savedDataset.getOwner();\n                 while (dv != null) {\n-                    if (dv.getDataverseSubjects().addAll(dsf.getControlledVocabularyValues())) {\n+                    boolean newSubjectsAdded = false;\n+                    for (ControlledVocabularyValue cvv : dsf.getControlledVocabularyValues()) {\n+                    \n+                        if (!dv.getDataverseSubjects().contains(cvv)) {\n+                            logger.fine(\"dv \"+dv.getAlias()+\" does not have subject \"+cvv.getStrValue());\n+                            newSubjectsAdded = true;\n+                            dv.getDataverseSubjects().add(cvv);\n+                        } else {\n+                            logger.fine(\"dv \"+dv.getAlias()+\" already has subject \"+cvv.getStrValue());\n+                        }\n+                    }\n+                    if (newSubjectsAdded) {\n+                        logger.fine(\"new dataverse subjects added - saving and reindexing\");\n                         Dataverse dvWithSubjectJustAdded = ctxt.em().merge(dv);\n                         ctxt.em().flush();\n                         ctxt.index().indexDataverse(dvWithSubjectJustAdded); // need to reindex to capture the new subjects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840d290d155410c13ab0b0bc640dc056ea35513b"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a37d19eccb9a0591e064a204f5a4df669a0f06", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/b5a37d19eccb9a0591e064a204f5a4df669a0f06", "committedDate": "2020-07-29T21:50:30Z", "message": "renamed a method - \"...InNewTransaction(...)\" #6918"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d3e74e66ef5f2d077cf81ee0efbfcc55378b93", "author": {"user": {"login": "landreev", "name": null}}, "url": "https://github.com/IQSS/dataverse/commit/e9d3e74e66ef5f2d077cf81ee0efbfcc55378b93", "committedDate": "2020-07-29T21:53:13Z", "message": "typo. #6918"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzgyNzI4", "url": "https://github.com/IQSS/dataverse/pull/7118#pullrequestreview-458782728", "createdAt": "2020-07-30T21:53:43Z", "commit": {"oid": "e9d3e74e66ef5f2d077cf81ee0efbfcc55378b93"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 904, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}