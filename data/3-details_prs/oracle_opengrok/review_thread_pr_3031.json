{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjQxMTYz", "number": 3031, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0NzowNVrODcRrxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0OTowN1rODcRuUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTc2NDUzOnYy", "diffSide": "RIGHT", "path": "opengrok-tools/src/test/python/test_mirror.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0NzowNVrOFkPfdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToyNDozOVrOFkqzmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ==", "bodyText": "That only works with orderable dictionnaries which are a feature of python 3.6+\nJust checking you're sure that nobody will use an earlier version (it will likely fail if that were the case)", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373546871", "createdAt": "2020-01-31T15:47:05Z", "author": {"login": "eric-saintetienne"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -318,7 +319,7 @@ def mock_get_repo_type(*args):\n             git_repo = repos[0]\n             assert git_repo.timeout == timeout\n             assert git_repo.command == git_cmd_path\n-            assert git_repo.env == proxy_dict  # XXX contains\n+            assert git_repo.env.items() >= proxy_dict.items()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d45ddffda90931fd2023b32d7ce85bbde88841f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MjI1MA==", "bodyText": "Oh, I did not realize that. I guess this is fine, it's just for the test. Will mention this in the README.", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373982250", "createdAt": "2020-02-03T08:56:47Z", "author": {"login": "vladak"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -318,7 +319,7 @@ def mock_get_repo_type(*args):\n             git_repo = repos[0]\n             assert git_repo.timeout == timeout\n             assert git_repo.command == git_cmd_path\n-            assert git_repo.env == proxy_dict  # XXX contains\n+            assert git_repo.env.items() >= proxy_dict.items()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}, "originalCommit": {"oid": "d45ddffda90931fd2023b32d7ce85bbde88841f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MzQ4NQ==", "bodyText": "or you can skip the tests when python 3.6 is not available\nwe already check for python version:\n\n  \n    \n      opengrok/opengrok-tools/src/main/python/opengrok_tools/sync.py\n    \n    \n        Lines 49 to 52\n      in\n      629ad72\n    \n    \n    \n    \n\n        \n          \n           major_version = sys.version_info[0] \n        \n\n        \n          \n           if (major_version < 3): \n        \n\n        \n          \n               print(\"Need Python 3, you are running {}\".format(major_version)) \n        \n\n        \n          \n               sys.exit(1)", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373993485", "createdAt": "2020-02-03T09:22:39Z", "author": {"login": "ktulinger"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -318,7 +319,7 @@ def mock_get_repo_type(*args):\n             git_repo = repos[0]\n             assert git_repo.timeout == timeout\n             assert git_repo.command == git_cmd_path\n-            assert git_repo.env == proxy_dict  # XXX contains\n+            assert git_repo.env.items() >= proxy_dict.items()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}, "originalCommit": {"oid": "d45ddffda90931fd2023b32d7ce85bbde88841f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5NDM5NQ==", "bodyText": "yeah, that's very coarse grind check. I think with the way Python develops we need to cut the line somewhere.", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373994395", "createdAt": "2020-02-03T09:24:39Z", "author": {"login": "vladak"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -318,7 +319,7 @@ def mock_get_repo_type(*args):\n             git_repo = repos[0]\n             assert git_repo.timeout == timeout\n             assert git_repo.command == git_cmd_path\n-            assert git_repo.env == proxy_dict  # XXX contains\n+            assert git_repo.env.items() >= proxy_dict.items()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}, "originalCommit": {"oid": "d45ddffda90931fd2023b32d7ce85bbde88841f5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTc3MTA3OnYy", "diffSide": "RIGHT", "path": "opengrok-tools/src/test/python/test_mirror.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0OTowN1rOFkPjdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo1OTo1N1rOFkqJaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Nzg5Mg==", "bodyText": "Personally I would swap lines 317 and 318, that is to say first assign repos[0] to git_repo and then assert ...(git_repo,...), it looks neater this way round but that's just my preference.", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373547892", "createdAt": "2020-01-31T15:49:07Z", "author": {"login": "eric-saintetienne"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -311,11 +313,14 @@ def mock_get_repo_type(*args):\n                                           commands=commands,\n                                           proxy=proxy_dict,\n                                           command_timeout=timeout)\n-            print(repos)\n             assert len(repos) == 1\n+            assert isinstance(repos[0], GitRepository)\n+            git_repo = repos[0]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50197fb0d38d8cf3727857efae364f907325c70b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MzU5Mg==", "bodyText": "To me it makes more sense this way - that repos[0] does not have to be a Git repository instance so I prefer to name it so only after it is certain.", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373983592", "createdAt": "2020-02-03T08:59:57Z", "author": {"login": "vladak"}, "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -311,11 +313,14 @@ def mock_get_repo_type(*args):\n                                           commands=commands,\n                                           proxy=proxy_dict,\n                                           command_timeout=timeout)\n-            print(repos)\n             assert len(repos) == 1\n+            assert isinstance(repos[0], GitRepository)\n+            git_repo = repos[0]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Nzg5Mg=="}, "originalCommit": {"oid": "50197fb0d38d8cf3727857efae364f907325c70b"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 171, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}