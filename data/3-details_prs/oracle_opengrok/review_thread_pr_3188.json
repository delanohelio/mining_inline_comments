{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NDUzMDEw", "number": 3188, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OToyNFrOEZl_ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODozMTowMVrOEaGfeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjcyMzc4OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OToyNFrOHCf5DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOToxMToxOVrOHC-afg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTcwOA==", "bodyText": "How about simpler just as if (!file.delete()) { and just the log statement inside with no exception handling?", "url": "https://github.com/oracle/opengrok/pull/3188#discussion_r472381708", "createdAt": "2020-08-18T17:59:24Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "diffHunk": "@@ -86,6 +91,43 @@ public static boolean validate(String ctagsBinary) {\n         return result;\n     }\n \n+    /**\n+     * Deletes ctags temporary files left over after terminating ctags processes\n+     * in case of timeout, {@see Ctags#doCtags}.\n+     */\n+    public static void deleteTempFiles() {\n+        String[] dirs = {System.getProperty(\"java.io.tmpdir\"),\n+                System.getenv(\"TMPDIR\"), System.getenv(\"TMP\")};\n+\n+        for (String dir : dirs) {\n+            deleteTempFiles(dir);\n+        }\n+    }\n+\n+    private static void deleteTempFiles(String directoryName) {\n+        final Pattern pattern = Pattern.compile(\"tags\\\\.\\\\S{6}\"); // ctags uses this pattern to call mkstemp()\n+\n+        if (directoryName == null) {\n+            return;\n+        }\n+\n+        File dir = new File(directoryName);\n+        File[] files = dir.listFiles((dir1, name) -> {\n+            Matcher matcher = pattern.matcher(name);\n+            return matcher.find();\n+        });\n+\n+        for (File file : files) {\n+            if (file.isFile()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c8027b3676d9fe85982a414c9cff68d0543aa32"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MTc5MA==", "bodyText": "that's nicer, changed.", "url": "https://github.com/oracle/opengrok/pull/3188#discussion_r472881790", "createdAt": "2020-08-19T09:11:19Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "diffHunk": "@@ -86,6 +91,43 @@ public static boolean validate(String ctagsBinary) {\n         return result;\n     }\n \n+    /**\n+     * Deletes ctags temporary files left over after terminating ctags processes\n+     * in case of timeout, {@see Ctags#doCtags}.\n+     */\n+    public static void deleteTempFiles() {\n+        String[] dirs = {System.getProperty(\"java.io.tmpdir\"),\n+                System.getenv(\"TMPDIR\"), System.getenv(\"TMP\")};\n+\n+        for (String dir : dirs) {\n+            deleteTempFiles(dir);\n+        }\n+    }\n+\n+    private static void deleteTempFiles(String directoryName) {\n+        final Pattern pattern = Pattern.compile(\"tags\\\\.\\\\S{6}\"); // ctags uses this pattern to call mkstemp()\n+\n+        if (directoryName == null) {\n+            return;\n+        }\n+\n+        File dir = new File(directoryName);\n+        File[] files = dir.listFiles((dir1, name) -> {\n+            Matcher matcher = pattern.matcher(name);\n+            return matcher.find();\n+        });\n+\n+        for (File file : files) {\n+            if (file.isFile()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTcwOA=="}, "originalCommit": {"oid": "5c8027b3676d9fe85982a414c9cff68d0543aa32"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODA0NzkyOnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODozMTowMVrOHDUMpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0NzoxMVrOHDt5IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzODY5NA==", "bodyText": "UnusedImports here and for file.Files (next line) per build", "url": "https://github.com/oracle/opengrok/pull/3188#discussion_r473238694", "createdAt": "2020-08-19T18:31:01Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "diffHunk": "@@ -29,10 +29,15 @@\n import org.opengrok.indexer.configuration.RuntimeEnvironment;\n import org.opengrok.indexer.logger.LoggerFactory;\n \n+import java.io.File;\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cced413ef0767120a0029b271b1f3edae87e6495"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1OTY4MA==", "bodyText": "fixed", "url": "https://github.com/oracle/opengrok/pull/3188#discussion_r473659680", "createdAt": "2020-08-20T06:47:11Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/CtagsUtil.java", "diffHunk": "@@ -29,10 +29,15 @@\n import org.opengrok.indexer.configuration.RuntimeEnvironment;\n import org.opengrok.indexer.logger.LoggerFactory;\n \n+import java.io.File;\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzODY5NA=="}, "originalCommit": {"oid": "cced413ef0767120a0029b271b1f3edae87e6495"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4922, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}