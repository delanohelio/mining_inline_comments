{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzcxNjE5", "number": 3053, "title": "Feature/redirect 1 result", "bodyText": "Hello,\nPlease consider for integration this patch to redirect directly to a file when a search produces a single hit.\n\nFix existing but broken functionality to automatically link to a definition from an xref file (e.g. #function1) when the definition is the single search result. The previous functionality used only an HTML fragment identifier, which was broken when list.jsp was updated to redirect so as to include a revision ID in the URL (e.g. ?r=04f4d4a). As a fragment identifier is client-side only, it is lost in a redirect without special handling (i.e. a mediating parameter, ?fi=function1).\nAdd general support for redirecting directly to a file when a search produces a single hit. A mediating parameter for a match offset (e.g. ?mo=5733) is used so that an offset can be translated to a fragment identifier (e.g. ?fi=23) while still allowing the revision ID production (e.g. ?r=04f4d4a).\nAdd QueryParameters class, and extract named literals for OpenGrok's web query parameters. Add several literals to support this patch, including FRAGMENT_IDENTIFIER and MATCH_OFFSET.\nShare some duplicated code between SourceSplitter and LineBreaker, and share logic to convert an offset to a line index. This is needed for translating e.g. ?mo=5733 to ?fi=23.\nOptimize the Context class to avoid creating some large allocations when not usually needed.\nRevise some OpenGrok-internal APIs to rationalize some inconsistencies with the use of \"offset\" and \"position\". \"Offset\" should be used to accord with Lucene's definition as the number of characters from the beginning of a document. \"Position\" means an ordinal designation among lists of tokens where the token list matches the order in source code. \"Index\" can be used to mean ordinal designation in a general collection.\n\nThank you.", "createdAt": "2020-02-25T05:18:30Z", "url": "https://github.com/oracle/opengrok/pull/3053", "merged": true, "mergeCommit": {"oid": "fa6d886c943e4c1c72c3141188425d60100625cd"}, "closed": true, "closedAt": "2020-05-05T07:26:09Z", "author": {"login": "idodeclare"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNa6w-gBqjMxMjg4MjEyMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXxBH9gH2gAyMzc5MzcxNjE5OjM4NGVjMDlkZjQ0NTQxYjgwN2M2MDY3MmIzZWU4YTFmM2NhNjU5ODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a90620ae87bcd776d0128965860717c5d790b8a1", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/a90620ae87bcd776d0128965860717c5d790b8a1", "committedDate": "2020-02-25T04:44:32Z", "message": "Fix #423 Fix #1984 : redirect when 1 hit for any eligible query"}, "afterCommit": {"oid": "4c348f3c0ab54a11f780ea662e7e37d2bbe1ffaa", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/4c348f3c0ab54a11f780ea662e7e37d2bbe1ffaa", "committedDate": "2020-03-13T21:27:37Z", "message": "Fix #423 Fix #1984 : redirect when 1 hit for any eligible query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c348f3c0ab54a11f780ea662e7e37d2bbe1ffaa", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/4c348f3c0ab54a11f780ea662e7e37d2bbe1ffaa", "committedDate": "2020-03-13T21:27:37Z", "message": "Fix #423 Fix #1984 : redirect when 1 hit for any eligible query"}, "afterCommit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/a274f5c4a650493a208d645736eefbf12de14a3d", "committedDate": "2020-03-20T16:50:01Z", "message": "Fix #423 Fix #1984 : redirect when 1 hit for any eligible query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTgyMzQ4", "url": "https://github.com/oracle/opengrok/pull/3053#pullrequestreview-378982348", "createdAt": "2020-03-22T08:34:26Z", "commit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODozNDoyNlrOF5uDIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODozNDoyNlrOF5uDIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA2NzYxNg==", "bodyText": "Why 0?\nAbove looked like optimization so toArray won't have to allocate new Array, since we know how many elements we will have.\nI think if 0 is correct, then in case of above you could just directly call .toArray() with no params", "url": "https://github.com/oracle/opengrok/pull/3053#discussion_r396067616", "createdAt": "2020-03-22T08:34:26Z", "author": {"login": "tarzanek"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/search/context/Context.java", "diffHunk": "@@ -212,7 +210,7 @@ public boolean getContext2(RuntimeEnvironment env, IndexSearcher searcher,\n \n         try {\n             List<String> fieldList = qbuilder.getContextFields();\n-            String[] fields = fieldList.toArray(new String[fieldList.size()]);\n+            String[] fields = fieldList.toArray(new String[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTgyNjIz", "url": "https://github.com/oracle/opengrok/pull/3053#pullrequestreview-378982623", "createdAt": "2020-03-22T08:38:55Z", "commit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODozODo1NlrOF5uEgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODozODo1NlrOF5uEgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA2Nzk3MQ==", "bodyText": "seriously?\ndo we want to go for endless cycles with goto?\nback to Basic? :-D\n(yes, it's easy for me to complain, but this raises eyebrows, so there has to be a better way)\n(the first thing that came to my mind was a jflex lexer, but not sure if we don't have the same problem with line # there too)", "url": "https://github.com/oracle/opengrok/pull/3053#discussion_r396067971", "createdAt": "2020-03-22T08:38:56Z", "author": {"login": "tarzanek"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/LineBreaker.java", "diffHunk": "@@ -65,65 +63,52 @@ public void reset(StreamSource src, ReaderWrapper wrapper)\n             throw new IllegalArgumentException(\"`src' is null\");\n         }\n \n-        length = 0;\n-        lineOffsets = null;\n-\n-        try (InputStream in = src.getStream();\n-            Reader rdr = IOUtils.createBOMStrippedReader(in,\n-                StandardCharsets.UTF_8.name())) {\n-            Reader intermediate = null;\n-            if (wrapper != null) {\n-                intermediate = wrapper.get(rdr);\n-            }\n-\n-            try (BufferedReader brdr = new BufferedReader(\n-                    intermediate != null ? intermediate : rdr)) {\n-                reset(brdr);\n-            } finally {\n-                if (intermediate != null) {\n-                    intermediate.close();\n-                }\n-            }\n-        }\n+        SplitterUtil.reset(this::reset, src, wrapper);\n     }\n \n     private void reset(Reader reader) throws IOException {\n+        length = 0;\n+        lineOffsets = null;\n+\n         List<Integer> newOffsets = new ArrayList<>();\n         newOffsets.add(0);\n \n         int c;\n         while ((c = reader.read()) != -1) {\n             ++length;\n-            switch (c) {\n-                case '\\r':\n-                    c = reader.read();\n-                    if (c == -1) {\n-                        newOffsets.add(length);\n-                        break;\n-                    } else {\n+\n+            redo_c:\n+            while (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTgyNzU2", "url": "https://github.com/oracle/opengrok/pull/3053#pullrequestreview-378982756", "createdAt": "2020-03-22T08:40:56Z", "commit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODo0MDo1NlrOF5uFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwODo0MDo1NlrOF5uFHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA2ODEyNA==", "bodyText": "same as above\n-1 for endless cycles", "url": "https://github.com/oracle/opengrok/pull/3053#discussion_r396068124", "createdAt": "2020-03-22T08:40:56Z", "author": {"login": "tarzanek"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/SourceSplitter.java", "diffHunk": "@@ -189,74 +150,49 @@ public void reset(StreamSource src, ReaderWrapper wrapper)\n             throw new IllegalArgumentException(\"`src' is null\");\n         }\n \n+        SplitterUtil.reset(this::reset, src, wrapper);\n+    }\n+\n+    private void reset(Reader reader) throws IOException {\n         length = 0;\n         lines = null;\n         lineOffsets = null;\n \n-        try (InputStream in = src.getStream();\n-            Reader rdr = IOUtils.createBOMStrippedReader(in,\n-                StandardCharsets.UTF_8.name())) {\n-            Reader intermediate = null;\n-            if (wrapper != null) {\n-                intermediate = wrapper.get(rdr);\n-            }\n-\n-            try (BufferedReader brdr = new BufferedReader(\n-                    intermediate != null ? intermediate : rdr)) {\n-                reset(brdr);\n-            } finally {\n-                if (intermediate != null) {\n-                    intermediate.close();\n-                }\n-            }\n-        }\n-    }\n-\n-    private void reset(Reader reader) throws IOException {\n         List<String> slist = new ArrayList<>();\n         StringBuilder bld = new StringBuilder();\n         int c;\n         while ((c = reader.read()) != -1) {\n             ++length;\n-            bld.append((char) c);\n-            switch (c) {\n-                case '\\r':\n-                    c = reader.read();\n-                    if (c == -1) {\n-                        slist.add(bld.toString());\n-                        bld.setLength(0);\n-                        break;\n-                    } else {\n-                        ++length;\n-                        switch (c) {\n-                            case '\\n':\n-                                bld.append((char) c);\n-                                slist.add(bld.toString());\n-                                bld.setLength(0);\n-                                break;\n-                            case '\\r':\n-                                slist.add(bld.toString());\n-                                bld.setLength(0);\n-\n-                                bld.append((char) c);\n-                                slist.add(bld.toString());\n-                                bld.setLength(0);\n-                                break;\n-                            default:\n-                                slist.add(bld.toString());\n-                                bld.setLength(0);\n \n-                                bld.append((char) c);\n-                                break;\n+            redo_c:\n+            while (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a274f5c4a650493a208d645736eefbf12de14a3d"}, "originalPosition": 252}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e203e472113f2741d0fc8dc23349c9da5e2ac28", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/9e203e472113f2741d0fc8dc23349c9da5e2ac28", "committedDate": "2020-03-23T06:00:15Z", "message": "Use JFlex scanners for SourceSplitter and LineBreaker\n\nAlso, tweak STANDARD_EOL to have definite\nmatches as the start of each conditional."}, "afterCommit": {"oid": "24a06f243ed108341788ac3e525eb2301e6a09d7", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/24a06f243ed108341788ac3e525eb2301e6a09d7", "committedDate": "2020-03-23T17:23:46Z", "message": "Use JFlex scanners for SourceSplitter and LineBreaker\n\nAlso, tweak STANDARD_EOL to have definite\nmatches as the start of each conditional."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee1827ac1637da18e7fcd2f6ba8881747afdd996", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/ee1827ac1637da18e7fcd2f6ba8881747afdd996", "committedDate": "2020-04-15T03:42:13Z", "message": "Share some code between SourceSplitter and LineBreaker\n\nAlso, use \"offset\" consistently to align with\nLucene."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1465e1cd5bc18ecdced6bdfcf1993da80b066cc5", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/1465e1cd5bc18ecdced6bdfcf1993da80b066cc5", "committedDate": "2020-04-15T03:42:13Z", "message": "Fix to handle any combination of interspersed CR, LF, CRLF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62fea7d9efb8dea3f5e80c5c8b5af9c33033a86a", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/62fea7d9efb8dea3f5e80c5c8b5af9c33033a86a", "committedDate": "2020-04-15T03:42:13Z", "message": "Relocate package-private member"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f045fcbeff00fd4f24ae36f331f4a23f02aa3b6f", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/f045fcbeff00fd4f24ae36f331f4a23f02aa3b6f", "committedDate": "2020-04-15T03:42:13Z", "message": "return after sendRedirect() (already done everywhere except here)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9b723265f687fbd63a19ed57a0609ee73b5e9f2", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/d9b723265f687fbd63a19ed57a0609ee73b5e9f2", "committedDate": "2020-04-15T03:42:13Z", "message": "Create large buffer only if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b082910875c789371efcdbdca6fe71306426d93d", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/b082910875c789371efcdbdca6fe71306426d93d", "committedDate": "2020-04-15T03:42:13Z", "message": "Initialize PlainLineTokenizer only if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "044a0d2ea72157723fb3903dd77669da8f536276", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/044a0d2ea72157723fb3903dd77669da8f536276", "committedDate": "2020-04-15T03:42:13Z", "message": "Last field can be final too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee0118c9d87bc013b0729f7f29e45652f5ed743", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/bee0118c9d87bc013b0729f7f29e45652f5ed743", "committedDate": "2020-04-15T03:42:13Z", "message": "Simplify uniqueDefinition handling (no functional change)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05618953f9a2eb9638a887dd19e63cb7f6235c4d", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/05618953f9a2eb9638a887dd19e63cb7f6235c4d", "committedDate": "2020-04-15T03:42:13Z", "message": "Fix uniqueDefinition handling\n\n- Size is wrong for /s prefix.\n- Marshal definition name via query parameter to\n  accomodate rev redirect."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c35457e9357029378ebfe112d23e3d7c2df069", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/c1c35457e9357029378ebfe112d23e3d7c2df069", "committedDate": "2020-04-15T03:42:14Z", "message": "Remove a bit of old redundancy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80652c77819df692d03613ca804e00a01c0e5068", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/80652c77819df692d03613ca804e00a01c0e5068", "committedDate": "2020-04-15T03:42:14Z", "message": "Remove unnecessary catch block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "963a3f81841bb4742587571f143f6c44608a44ca", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/963a3f81841bb4742587571f143f6c44608a44ca", "committedDate": "2020-04-15T03:42:14Z", "message": "Clean up with IOUtils.close()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96b0c1420a97a577b2362eed9223f98d20898aa6", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/96b0c1420a97a577b2362eed9223f98d20898aa6", "committedDate": "2020-04-15T03:42:14Z", "message": "getRevisionLocation() can be simplified without null handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5cf496828477fb7628070c20c0dd1433e5f9d05", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/b5cf496828477fb7628070c20c0dd1433e5f9d05", "committedDate": "2020-04-15T03:42:14Z", "message": "Fix to log previously-swallowed error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeb959245eefe49db4cc01ed2c80c05896aad69c", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/eeb959245eefe49db4cc01ed2c80c05896aad69c", "committedDate": "2020-04-15T03:42:14Z", "message": "Fix #423 Fix #1984 : redirect when 1 hit for any eligible query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5454473033f17a1b4988083abcbd48df8a5589be", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/5454473033f17a1b4988083abcbd48df8a5589be", "committedDate": "2020-04-15T03:42:14Z", "message": "Use JFlex scanners for SourceSplitter and LineBreaker\n\nAlso, tweak STANDARD_EOL to have definite\nmatches as the start of each conditional."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a68f312162e670d8b88bdd098ec011492e90e4a", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/4a68f312162e670d8b88bdd098ec011492e90e4a", "committedDate": "2020-04-15T03:42:14Z", "message": "Make JFlex versions as efficient as previous hand-coding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "121ef24029292d2c9410c62086e46e51f3b1a8d0", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/121ef24029292d2c9410c62086e46e51f3b1a8d0", "committedDate": "2020-03-24T23:41:08Z", "message": "Make JFlex versions as efficient as previous hand-coding"}, "afterCommit": {"oid": "4a68f312162e670d8b88bdd098ec011492e90e4a", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/4a68f312162e670d8b88bdd098ec011492e90e4a", "committedDate": "2020-04-15T03:42:14Z", "message": "Make JFlex versions as efficient as previous hand-coding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "043289de22afd9e9e88ba47c8abbcf03f9c0d77f", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/043289de22afd9e9e88ba47c8abbcf03f9c0d77f", "committedDate": "2020-04-15T03:44:52Z", "message": "Fix to avoid possible NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53377eb8957f016388c05c978febe4d9493984b5", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/53377eb8957f016388c05c978febe4d9493984b5", "committedDate": "2020-04-15T03:44:52Z", "message": "Remove defunct field, `compressed`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe7b53d8d1f4c2cbb1fd9efc1d1904b693523eca", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/fe7b53d8d1f4c2cbb1fd9efc1d1904b693523eca", "committedDate": "2020-04-15T03:44:52Z", "message": "Use QueryParameters in a couple of missed spots"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99167638334138bbdf78a4d0da2f30e6f3dbea2f", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/99167638334138bbdf78a4d0da2f30e6f3dbea2f", "committedDate": "2020-04-15T03:44:52Z", "message": "Add hidden #xrd to manage redirect/no-redirect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01dfb76c25a62cb8daac84a9d667c16e5162afd8", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/01dfb76c25a62cb8daac84a9d667c16e5162afd8", "committedDate": "2020-04-15T03:44:52Z", "message": "Fix to adjust docID by Leaf docBase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "384ec09df44541b807c60672b3ee8a1f3ca65980", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/384ec09df44541b807c60672b3ee8a1f3ca65980", "committedDate": "2020-04-15T05:12:55Z", "message": "Fix JavaDoc 11 problem that is OK for Java 8"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 283, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}