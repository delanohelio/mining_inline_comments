{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTg1NDQw", "number": 3226, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MzoxMVrOEkYGvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjowMDo0N1rOEkYNvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTc5MTMzOnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MzoxMVrOHTSbJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODoyMTowN1rOHTW5kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4Njg1NQ==", "bodyText": "I don't like this since it has a package private access instead of private. Furthermore, the variable can be discarded right after the initialization.\nWhat about using register(Metrics.getRegistry()) or leveraging constructor/init block?", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489986855", "createdAt": "2020-09-17T05:53:11Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java", "diffHunk": "@@ -55,14 +56,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationFramework.class);\n \n-    private final Counter authStackReloadCounter = Metrics.getRegistry().counter(\"authorization_stack_reload\");\n-    private final Counter authCacheHits = Metrics.getRegistry().counter(\"authorization_cache_hits\");\n-    private final Counter authCacheMisses = Metrics.getRegistry().counter(\"authorization_cache_misses\");\n-    private final Counter authSessionsInvalidated = Metrics.getRegistry().counter(\"authorization_sessions_invalidated\");\n-\n-    private final Timer authTimer = Metrics.getRegistry().timer(\"authorization\");\n-    private final Timer authPositiveTimer = Metrics.getRegistry().timer(\"authorization_positive\");\n-    private final Timer authNegativeTimer = Metrics.getRegistry().timer(\"authorization_negative\");\n+    MeterRegistry registry = Metrics.getRegistry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA2MDE3Nw==", "bodyText": "fair point, fixed.", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r490060177", "createdAt": "2020-09-17T08:21:07Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java", "diffHunk": "@@ -55,14 +56,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationFramework.class);\n \n-    private final Counter authStackReloadCounter = Metrics.getRegistry().counter(\"authorization_stack_reload\");\n-    private final Counter authCacheHits = Metrics.getRegistry().counter(\"authorization_cache_hits\");\n-    private final Counter authCacheMisses = Metrics.getRegistry().counter(\"authorization_cache_misses\");\n-    private final Counter authSessionsInvalidated = Metrics.getRegistry().counter(\"authorization_sessions_invalidated\");\n-\n-    private final Timer authTimer = Metrics.getRegistry().timer(\"authorization\");\n-    private final Timer authPositiveTimer = Metrics.getRegistry().timer(\"authorization_positive\");\n-    private final Timer authNegativeTimer = Metrics.getRegistry().timer(\"authorization_negative\");\n+    MeterRegistry registry = Metrics.getRegistry();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4Njg1NQ=="}, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTgwOTI0OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjowMDo0N1rOHTSlaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjowNzo0N1rOHTSu9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4OTQ4MQ==", "bodyText": "Could you please explain this to me? I'm probably missing something since I don't know how the plugins in OpenGrok work exactly. I assume that you would like to allow plugins to use the Metrics class. However, from my understanding the class is uniquely identified by the name and the classloader that loaded it. Therefore, if the Metrics class would be used by the plugin, then it might be a completely different class and the metrics won't be seen/published by the web module.", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489989481", "createdAt": "2020-09-17T06:00:47Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java", "diffHunk": "@@ -56,7 +56,8 @@\n             \"org.opengrok.indexer.authorization.plugins.*\",\n             \"org.opengrok.indexer.authorization.AuthorizationException\",\n             \"org.opengrok.indexer.util.*\",\n-            \"org.opengrok.indexer.logger.*\"\n+            \"org.opengrok.indexer.logger.*\",\n+            \"org.opengrok.indexer.Metrics\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5MTkyNQ==", "bodyText": "Oh, it seems that it is delegating class loading to the tomcat's class loader for some specific cases. Please ignore.", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489991925", "createdAt": "2020-09-17T06:07:47Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java", "diffHunk": "@@ -56,7 +56,8 @@\n             \"org.opengrok.indexer.authorization.plugins.*\",\n             \"org.opengrok.indexer.authorization.AuthorizationException\",\n             \"org.opengrok.indexer.util.*\",\n-            \"org.opengrok.indexer.logger.*\"\n+            \"org.opengrok.indexer.logger.*\",\n+            \"org.opengrok.indexer.Metrics\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4OTQ4MQ=="}, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4947, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}