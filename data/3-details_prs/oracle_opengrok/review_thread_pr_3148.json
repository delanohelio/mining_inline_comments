{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjMzOTYz", "number": 3148, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTo1NFrOD7JUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowMjoxOVrOD7JoIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQ1MTkyOnYy", "diffSide": "LEFT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/PendingFileCompleter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTo1NFrOGTSx2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTowNjozNFrOGTymTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MzgwMA==", "bodyText": "why is this deleted ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422883800", "createdAt": "2020-05-11T08:49:54Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/PendingFileCompleter.java", "diffHunk": "@@ -561,7 +554,6 @@ private void findFilelessChildren(SkeletonDirs skels, File directory) {\n \n     /**\n      * Counts segments arising from {@code File.separatorChar} or '\\\\'.\n-     * @param path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwNTEzMg==", "bodyText": "Restored with a comment", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r423405132", "createdAt": "2020-05-12T01:06:34Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/PendingFileCompleter.java", "diffHunk": "@@ -561,7 +554,6 @@ private void findFilelessChildren(SkeletonDirs skels, File directory) {\n \n     /**\n      * Counts segments arising from {@code File.separatorChar} or '\\\\'.\n-     * @param path", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MzgwMA=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQ2NjQ5OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1MzoxMFrOGTS6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTowNjo0MlrOGTymbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NTk2OQ==", "bodyText": "reuse the String literal ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422885969", "createdAt": "2020-05-11T08:53:10Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MjQxNg==", "bodyText": "also, userInput() and luceneQuery() can be refactored into using common underlying method ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422892416", "createdAt": "2020-05-11T09:03:29Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NTk2OQ=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwNTE2NQ==", "bodyText": "Yes done", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r423405165", "createdAt": "2020-05-12T01:06:42Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NTk2OQ=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQ3Mjc1OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1NDo0OVrOGTS-RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTowNjo1MFrOGTymgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4Njk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String k = logging(entry.getKey());\n          \n          \n            \n                        String key = logging(entry.getKey());", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422886981", "createdAt": "2020-05-11T08:54:49Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");\n+    }\n+\n+    /**\n+     * Sanitize {@code query} where it will be used in a Lucene query.\n+     * @return {@code null} if null or else {@code query} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as spaces. Contiguous matches are\n+     * replaced with one space.\n+     */\n+    public static String luceneQuery(String query) {\n+        if (query == null) {\n+            return null;\n+        }\n+        return query.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]+\", \" \");\n+    }\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" tabs, CR, LF, and FF replaced as {@code \"<TAB>\"},\n+     * {@code \"<CR>\"}, {@code \"<LF>\"}, and {@code \"<FF>\"} resp.\n+     */\n+    public static String logging(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"\\\\n\", \"<LF>\").\n+                replaceAll(\"\\\\r\", \"<CR>\").\n+                replaceAll(\"\\\\t\", \"<TAB>\").\n+                replaceAll(\"\\\\f\", \"<FF>\");\n+    }\n+\n+    /**\n+     * Sanitize {@code map} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code map} with keys and values\n+     * sanitized with {@link #logging(String)}. If the sanitizing causes key\n+     * collisions, the colliding keys' values are combined.\n+     */\n+    public static Map<String, String[]> logging(Map<String, String[]> map) {\n+        if (map == null) {\n+            return null;\n+        }\n+\n+        HashMap<String, String[]> safes = new HashMap<>();\n+        for (Map.Entry<String, String[]> entry : map.entrySet()) {\n+            String k = logging(entry.getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwNTE4Nw==", "bodyText": "OK done", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r423405187", "createdAt": "2020-05-12T01:06:50Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");\n+    }\n+\n+    /**\n+     * Sanitize {@code query} where it will be used in a Lucene query.\n+     * @return {@code null} if null or else {@code query} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as spaces. Contiguous matches are\n+     * replaced with one space.\n+     */\n+    public static String luceneQuery(String query) {\n+        if (query == null) {\n+            return null;\n+        }\n+        return query.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]+\", \" \");\n+    }\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" tabs, CR, LF, and FF replaced as {@code \"<TAB>\"},\n+     * {@code \"<CR>\"}, {@code \"<LF>\"}, and {@code \"<FF>\"} resp.\n+     */\n+    public static String logging(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"\\\\n\", \"<LF>\").\n+                replaceAll(\"\\\\r\", \"<CR>\").\n+                replaceAll(\"\\\\t\", \"<TAB>\").\n+                replaceAll(\"\\\\f\", \"<FF>\");\n+    }\n+\n+    /**\n+     * Sanitize {@code map} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code map} with keys and values\n+     * sanitized with {@link #logging(String)}. If the sanitizing causes key\n+     * collisions, the colliding keys' values are combined.\n+     */\n+    public static Map<String, String[]> logging(Map<String, String[]> map) {\n+        if (map == null) {\n+            return null;\n+        }\n+\n+        HashMap<String, String[]> safes = new HashMap<>();\n+        for (Map.Entry<String, String[]> entry : map.entrySet()) {\n+            String k = logging(entry.getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4Njk4MQ=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzUwMzA0OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowMjoxOVrOGTTQ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMTowNzoxMVrOGTymzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MTc0NQ==", "bodyText": "perhaps this class should be called Laundromat and have the launder as a method ? :-)", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422891745", "createdAt": "2020-05-11T09:02:19Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkwODQzNw==", "bodyText": "also, add a simple test ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422908437", "createdAt": "2020-05-11T09:29:48Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MTc0NQ=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwNTI2Mg==", "bodyText": "You got it", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r423405262", "createdAt": "2020-05-12T01:07:11Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MTc0NQ=="}, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4908, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}