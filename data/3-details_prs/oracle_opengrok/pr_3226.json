{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTg1NDQw", "number": 3226, "title": "use tags for metrics", "bodyText": "This changes metric handling in AuthorizationFramework to use tags. Looks like this:\n$ curl -s -X GET http://localhost:8080/source/metrics/prometheus | grep ^auth\nauthorization_latency_seconds_max{outcome=\"negative\",} 0.0\nauthorization_latency_seconds_max{outcome=\"positive\",} 0.0\nauthorization_latency_seconds_count{outcome=\"negative\",} 0.0\nauthorization_latency_seconds_sum{outcome=\"negative\",} 0.0\nauthorization_latency_seconds_count{outcome=\"positive\",} 83.0\nauthorization_latency_seconds_sum{outcome=\"positive\",} 0.001039\nauthorization_sessions_invalidated_total 0.0\nauthorization_stack_reload_total 0.0\nauthorization_cache_total{what=\"misses\",} 83.0\nauthorization_cache_total{what=\"hits\",} 58.0\n\nwhich allows for easier creation of all-in-one graphs just like they are available for some of the JVM metrics:\n\nHad to use build pattern to avoid micrometer-metrics/micrometer#877\nAlso, I changed the metric names to use the dotted notation so they can be converted to native naming conventions used in the respective backend (https://micrometer.io/docs/concepts#_naming_meters).", "createdAt": "2020-09-16T18:58:51Z", "url": "https://github.com/oracle/opengrok/pull/3226", "merged": true, "mergeCommit": {"oid": "4b8c49e935e9f7a396bb65dd5f691b6d5f8fff0d"}, "closed": true, "closedAt": "2020-09-17T11:03:12Z", "author": {"login": "vladak"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJhDM1gH2gAyNDg4MTg1NDQwOjZiMDYwNjcyYzFmODljMmM2N2EzNzBhOTZhYTc1NzhmZTI0MTQ1NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJthOFABqjM3NzY5OTE5Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b060672c1f89c2c67a370a96aa7578fe241454c", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/6b060672c1f89c2c67a370a96aa7578fe241454c", "committedDate": "2020-09-16T18:52:55Z", "message": "fix typo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ee5f041fa1f6b63cd6e4fbd5f5b04dfcf83beb0", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/6ee5f041fa1f6b63cd6e4fbd5f5b04dfcf83beb0", "committedDate": "2020-09-16T19:41:58Z", "message": "add LDAP lookup latency timer"}, "afterCommit": {"oid": "9c7dca493deb76d69a223792bf59f5fb00314d00", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/9c7dca493deb76d69a223792bf59f5fb00314d00", "committedDate": "2020-09-16T20:07:51Z", "message": "add LDAP lookup latency timer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjYxOTAx", "url": "https://github.com/oracle/opengrok/pull/3226#pullrequestreview-490261901", "createdAt": "2020-09-17T05:53:10Z", "commit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MzoxMVrOHTSbJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjowMDo0N1rOHTSlaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4Njg1NQ==", "bodyText": "I don't like this since it has a package private access instead of private. Furthermore, the variable can be discarded right after the initialization.\nWhat about using register(Metrics.getRegistry()) or leveraging constructor/init block?", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489986855", "createdAt": "2020-09-17T05:53:11Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java", "diffHunk": "@@ -55,14 +56,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationFramework.class);\n \n-    private final Counter authStackReloadCounter = Metrics.getRegistry().counter(\"authorization_stack_reload\");\n-    private final Counter authCacheHits = Metrics.getRegistry().counter(\"authorization_cache_hits\");\n-    private final Counter authCacheMisses = Metrics.getRegistry().counter(\"authorization_cache_misses\");\n-    private final Counter authSessionsInvalidated = Metrics.getRegistry().counter(\"authorization_sessions_invalidated\");\n-\n-    private final Timer authTimer = Metrics.getRegistry().timer(\"authorization\");\n-    private final Timer authPositiveTimer = Metrics.getRegistry().timer(\"authorization_positive\");\n-    private final Timer authNegativeTimer = Metrics.getRegistry().timer(\"authorization_negative\");\n+    MeterRegistry registry = Metrics.getRegistry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4OTQ4MQ==", "bodyText": "Could you please explain this to me? I'm probably missing something since I don't know how the plugins in OpenGrok work exactly. I assume that you would like to allow plugins to use the Metrics class. However, from my understanding the class is uniquely identified by the name and the classloader that loaded it. Therefore, if the Metrics class would be used by the plugin, then it might be a completely different class and the metrics won't be seen/published by the web module.", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489989481", "createdAt": "2020-09-17T06:00:47Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java", "diffHunk": "@@ -56,7 +56,8 @@\n             \"org.opengrok.indexer.authorization.plugins.*\",\n             \"org.opengrok.indexer.authorization.AuthorizationException\",\n             \"org.opengrok.indexer.util.*\",\n-            \"org.opengrok.indexer.logger.*\"\n+            \"org.opengrok.indexer.logger.*\",\n+            \"org.opengrok.indexer.Metrics\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33cc6d688a4fb54768da4447d3814c48d573ee6"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c3d1dd7a802b854b30f4b849def5844ce636b6", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/f2c3d1dd7a802b854b30f4b849def5844ce636b6", "committedDate": "2020-09-17T09:24:23Z", "message": "use tags for metrics and use dotted naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b74a0291c083c93df6bb97610a708ec69cf7c631", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/b74a0291c083c93df6bb97610a708ec69cf7c631", "committedDate": "2020-09-17T09:24:23Z", "message": "add LDAP lookup latency timer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0dc744628abb1ae7031662985553ef3b2081915", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/e0dc744628abb1ae7031662985553ef3b2081915", "committedDate": "2020-09-17T09:24:23Z", "message": "fix comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23d97f8510307c6828e42ca68676bb1f019e7602", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/23d97f8510307c6828e42ca68676bb1f019e7602", "committedDate": "2020-09-17T08:44:02Z", "message": "remove unused import"}, "afterCommit": {"oid": "e0dc744628abb1ae7031662985553ef3b2081915", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/e0dc744628abb1ae7031662985553ef3b2081915", "committedDate": "2020-09-17T09:24:23Z", "message": "fix comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}