{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDg5NTE2", "number": 3254, "title": "parallelize repository scan", "bodyText": "For the past week or so I have been trying to determine the cause of slowly running reindex from scratch which made me to run it over and over with different settings/versions. Watching the behavior of the initial phase of such indexing made me to address the speed of repository scanning. This change adds parallelism on the level of source root sub-directories. The original behavior should be preserved.", "createdAt": "2020-10-02T19:15:38Z", "url": "https://github.com/oracle/opengrok/pull/3254", "merged": true, "mergeCommit": {"oid": "c2570779f2a6a79f5fd61f7e19372af4567e0fca"}, "closed": true, "closedAt": "2020-10-06T17:45:51Z", "author": {"login": "vladak"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOsQCfgFqTUwMTQzMzY1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP8Cj4AFqTUwMzIxMDY4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDMzNjU4", "url": "https://github.com/oracle/opengrok/pull/3254#pullrequestreview-501433658", "createdAt": "2020-10-02T20:39:10Z", "commit": {"oid": "6b824f18148ea6bf410e0695a0d886ce4a01930c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDozOToxMFrOHb6-TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDo0MjozOFrOHb7D1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzOTgyMQ==", "bodyText": "I wouldn't think a bounce would be required if futures are being awaited. Why is it necessary?", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499039821", "createdAt": "2020-10-02T20:39:10Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/HistoryGuru.java", "diffHunk": "@@ -480,7 +478,25 @@ public boolean hasAnnotation(File file) {\n      * @return collection of added repositories\n      */\n     public Collection<RepositoryInfo> addRepositories(File[] files) {\n-        return addRepositories(files, env.getNestingMaximum(), 0, false);\n+        ExecutorService executor = env.getIndexerParallelizer().getRepositorySearchExecutor();\n+        List<Future<Collection<RepositoryInfo>>> futures = new ArrayList<>();\n+        for (File file: files) {\n+            futures.add(executor.submit(() -> addRepositories(new File[]{file},\n+                    env.getNestingMaximum(), 0, false)));\n+        }\n+\n+        List<RepositoryInfo> repoList = new ArrayList<>();\n+        futures.forEach(future -> {\n+            try {\n+                repoList.addAll(future.get());\n+            } catch (Exception e) {\n+                LOGGER.log(Level.WARNING, \"failed to get future\");\n+            }\n+        });\n+\n+        env.getIndexerParallelizer().bounceRepositorySearchExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b824f18148ea6bf410e0695a0d886ce4a01930c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0MTA0Mg==", "bodyText": "See line 435:\nLimit usage lines to 72 characters for concise formatting.", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499041042", "createdAt": "2020-10-02T20:42:08Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/Indexer.java", "diffHunk": "@@ -679,6 +683,11 @@ public static void main(String[] argv) {\n                     \"Run as quietly as possible. Sets logging level to WARNING.\").execute(v ->\n                     LoggerUtil.setBaseConsoleLogLevel(Level.WARNING));\n \n+            parser.on(\"--repositorySearchThreads\", \"=number\", Integer.class,\n+                    \"The number of threads to use for scanning for repositories.\",\n+                    \"By default the number of threads will be set to the number of available CPUs.\").", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b824f18148ea6bf410e0695a0d886ce4a01930c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0MTIzOA==", "bodyText": "This is mis-ordered and should appear after --repository", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499041238", "createdAt": "2020-10-02T20:42:38Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/Indexer.java", "diffHunk": "@@ -679,6 +683,11 @@ public static void main(String[] argv) {\n                     \"Run as quietly as possible. Sets logging level to WARNING.\").execute(v ->\n                     LoggerUtil.setBaseConsoleLogLevel(Level.WARNING));\n \n+            parser.on(\"--repositorySearchThreads\", \"=number\", Integer.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b824f18148ea6bf410e0695a0d886ce4a01930c"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDk2ODkw", "url": "https://github.com/oracle/opengrok/pull/3254#pullrequestreview-501496890", "createdAt": "2020-10-02T23:43:22Z", "commit": {"oid": "95e6658c5bec95fa39c5a6819fc1c58ab4d057fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzo0MzoyMlrOHb-DwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzo1MDozNVrOHb-I4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MDM2OA==", "bodyText": "Maybe a more activity-specific message?", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499090368", "createdAt": "2020-10-02T23:43:22Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/HistoryGuru.java", "diffHunk": "@@ -480,7 +478,25 @@ public boolean hasAnnotation(File file) {\n      * @return collection of added repositories\n      */\n     public Collection<RepositoryInfo> addRepositories(File[] files) {\n-        return addRepositories(files, env.getNestingMaximum(), 0, false);\n+        ExecutorService executor = env.getIndexerParallelizer().getRepositorySearchExecutor();\n+        List<Future<Collection<RepositoryInfo>>> futures = new ArrayList<>();\n+        for (File file: files) {\n+            futures.add(executor.submit(() -> addRepositories(new File[]{file},\n+                    env.getNestingMaximum(), 0, false)));\n+        }\n+\n+        List<RepositoryInfo> repoList = new ArrayList<>();\n+        futures.forEach(future -> {\n+            try {\n+                repoList.addAll(future.get());\n+            } catch (Exception e) {\n+                LOGGER.log(Level.WARNING, \"failed to get future\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e6658c5bec95fa39c5a6819fc1c58ab4d057fe"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MTY4MQ==", "bodyText": "May I suggest just using the -T,--threads executor? It's not otherwise being used at this stage of a run", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499091681", "createdAt": "2020-10-02T23:50:35Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/HistoryGuru.java", "diffHunk": "@@ -480,7 +478,25 @@ public boolean hasAnnotation(File file) {\n      * @return collection of added repositories\n      */\n     public Collection<RepositoryInfo> addRepositories(File[] files) {\n-        return addRepositories(files, env.getNestingMaximum(), 0, false);\n+        ExecutorService executor = env.getIndexerParallelizer().getRepositorySearchExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e6658c5bec95fa39c5a6819fc1c58ab4d057fe"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTMzMDQy", "url": "https://github.com/oracle/opengrok/pull/3254#pullrequestreview-501533042", "createdAt": "2020-10-03T09:17:09Z", "commit": {"oid": "95e6658c5bec95fa39c5a6819fc1c58ab4d057fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwOToxNzowOVrOHcAkog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwOToxNzowOVrOHcAkog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMTU1NA==", "bodyText": "what is the point of caching what you can get from the lazy supplier?\nIs it that you need to keep track if it has ever been initialized?", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499131554", "createdAt": "2020-10-03T09:17:09Z", "author": {"login": "tulinkry"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/IndexerParallelizer.java", "diffHunk": "@@ -147,6 +151,15 @@ public ExecutorService getCtagsWatcherExecutor() {\n         return result;\n     }\n \n+    /**\n+     * @return the ExecutorService used for repository scan\n+     */\n+    public ExecutorService getRepositorySearchExecutor() {\n+        ExecutorService result = lzRepositorySearchExecutor.get();\n+        repositorySearchExecutor = result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e6658c5bec95fa39c5a6819fc1c58ab4d057fe"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e24bb6cd51c0dc375c1c454ec6713de9cf260085", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/e24bb6cd51c0dc375c1c454ec6713de9cf260085", "committedDate": "2020-10-05T08:22:08Z", "message": "use -T for repository scan thread count"}, "afterCommit": {"oid": "0cabe5040044815e011a0e34262749435ea00d85", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/0cabe5040044815e011a0e34262749435ea00d85", "committedDate": "2020-10-05T08:47:17Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7489151118d8928f639ed98e794548a2ec5006c4", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/7489151118d8928f639ed98e794548a2ec5006c4", "committedDate": "2020-10-05T10:24:22Z", "message": "avoid raw types\n\ncauses warning: missing type arguments for generic class java.lang.Class<T>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cabe5040044815e011a0e34262749435ea00d85", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/0cabe5040044815e011a0e34262749435ea00d85", "committedDate": "2020-10-05T08:47:17Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}, "afterCommit": {"oid": "67aeb8275d894051538e87c22cc8fe386244b664", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/67aeb8275d894051538e87c22cc8fe386244b664", "committedDate": "2020-10-05T10:24:22Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "497f7eab9eb2648ea26a6868309c6a28a12601d4", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/497f7eab9eb2648ea26a6868309c6a28a12601d4", "committedDate": "2020-10-05T21:37:55Z", "message": "add comment"}, "afterCommit": {"oid": "f8935467a8451c34165f556c8046d4030be87698", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/f8935467a8451c34165f556c8046d4030be87698", "committedDate": "2020-10-05T21:38:32Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed9a1d80f5a5d49f54a12c6822847994173c2c84", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/ed9a1d80f5a5d49f54a12c6822847994173c2c84", "committedDate": "2020-10-05T21:41:02Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8935467a8451c34165f556c8046d4030be87698", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/f8935467a8451c34165f556c8046d4030be87698", "committedDate": "2020-10-05T21:38:32Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}, "afterCommit": {"oid": "ed9a1d80f5a5d49f54a12c6822847994173c2c84", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/ed9a1d80f5a5d49f54a12c6822847994173c2c84", "committedDate": "2020-10-05T21:41:02Z", "message": "detect repositories for each source root subdirectory in parallel\n\nfixes #773"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTExNDk0", "url": "https://github.com/oracle/opengrok/pull/3254#pullrequestreview-502511494", "createdAt": "2020-10-06T00:42:10Z", "commit": {"oid": "ed9a1d80f5a5d49f54a12c6822847994173c2c84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwMDo0MjoxMFrOHcyRpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwMDo0MjoxMFrOHcyRpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk0NTg5Mg==", "bodyText": "I was suggesting just to use getFixedExecutor() since it's fully available at this point during a run. It would be fine to leave it to be used later during indexing. IndexerParallelizer could be kept simple, and no additional configuration would be needed.", "url": "https://github.com/oracle/opengrok/pull/3254#discussion_r499945892", "createdAt": "2020-10-06T00:42:10Z", "author": {"login": "idodeclare"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/HistoryGuru.java", "diffHunk": "@@ -480,7 +478,25 @@ public boolean hasAnnotation(File file) {\n      * @return collection of added repositories\n      */\n     public Collection<RepositoryInfo> addRepositories(File[] files) {\n-        return addRepositories(files, env.getNestingMaximum(), 0, false);\n+        ExecutorService executor = env.getIndexerParallelizer().getRepositorySearchExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed9a1d80f5a5d49f54a12c6822847994173c2c84"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42d46d309cb92a0b405c96ba5f27d39893fa8a1f", "author": {"user": {"login": "vladak", "name": "Vladimir Kotal"}}, "url": "https://github.com/oracle/opengrok/commit/42d46d309cb92a0b405c96ba5f27d39893fa8a1f", "committedDate": "2020-10-06T07:50:36Z", "message": "simplify"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjEwNjgz", "url": "https://github.com/oracle/opengrok/pull/3254#pullrequestreview-503210683", "createdAt": "2020-10-06T17:43:12Z", "commit": {"oid": "42d46d309cb92a0b405c96ba5f27d39893fa8a1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 208, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}