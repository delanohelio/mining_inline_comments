{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODEzNjQ5", "number": 3138, "title": "Directories #Lines and LOC", "bodyText": "Hello,\nPlease consider for integration this patch to compute and store aggregated directory #Lines and LOC.\nThis patch will do a quick computation from file #Lines and LOC to update an existing index and thereafter recompute using deltas.\nIndexAnalysisSettings4 is bumped....\nThank you.", "createdAt": "2020-05-06T00:11:14Z", "url": "https://github.com/oracle/opengrok/pull/3138", "merged": true, "mergeCommit": {"oid": "2bb04ff305ecf7d0637f8c0bf716920c68c2ebb5"}, "closed": true, "closedAt": "2021-04-09T11:39:40Z", "author": {"login": "idodeclare"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceeDZEABqjMzMDY1NDY3Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQXwiDgBqjM4NTMxNjUwMzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92df9c0b7d184ef2e9d4956910767c50dad76687", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/92df9c0b7d184ef2e9d4956910767c50dad76687", "committedDate": "2020-05-05T22:29:00Z", "message": "Do not emphasize counts for directories"}, "afterCommit": {"oid": "acc8e112e410fde686da184169dc3ee0b96f48f2", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/acc8e112e410fde686da184169dc3ee0b96f48f2", "committedDate": "2020-05-06T01:04:18Z", "message": "Do not emphasize counts for directories"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba10715e25cb9f2571a28239a78616c1bfe630e9", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/ba10715e25cb9f2571a28239a78616c1bfe630e9", "committedDate": "2020-05-06T02:53:17Z", "message": "Fix to ensure at least one D-document\n\n(I thought I tested fully locally oops.)"}, "afterCommit": {"oid": "1bd5cb02bc66c9a897f2c8940feb2154665ba043", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/1bd5cb02bc66c9a897f2c8940feb2154665ba043", "committedDate": "2020-05-06T03:26:12Z", "message": "Fix to ensure at least one D-document\n\n(I thought I tested fully locally oops.)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDA2MTk5", "url": "https://github.com/oracle/opengrok/pull/3138#pullrequestreview-406406199", "createdAt": "2020-05-06T08:36:32Z", "commit": {"oid": "1bd5cb02bc66c9a897f2c8940feb2154665ba043"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bd5cb02bc66c9a897f2c8940feb2154665ba043", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/1bd5cb02bc66c9a897f2c8940feb2154665ba043", "committedDate": "2020-05-06T03:26:12Z", "message": "Fix to ensure at least one D-document\n\n(I thought I tested fully locally oops.)"}, "afterCommit": {"oid": "341fc99642aae1a10230ac3f3328df16eb32a749", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/341fc99642aae1a10230ac3f3328df16eb32a749", "committedDate": "2020-05-06T16:35:16Z", "message": "Fix to ensure at least one D-document"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjAwODkz", "url": "https://github.com/oracle/opengrok/pull/3138#pullrequestreview-407600893", "createdAt": "2020-05-07T15:42:59Z", "commit": {"oid": "c152a8d610e885e93c0a3d508b9007884d21917a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0MzowMFrOGSEuRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0NTozOFrOGSE1XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwNDkzNQ==", "bodyText": "i think the default should be a parameter for this so the caller can specify what it expects in case of a non-long string", "url": "https://github.com/oracle/opengrok/pull/3138#discussion_r421604935", "createdAt": "2020-05-07T15:43:00Z", "author": {"login": "tulinkry"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/NumberUtil.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2017, 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.util;\n+\n+public class NumberUtil {\n+    /**\n+     * Parses the specified {@code value} without throwing a checked exception.\n+     */\n+    public static Long tryParseLong(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        try {\n+            return Long.parseLong(value);\n+        } catch (NumberFormatException e) {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Parses the specified {@code value} without throwing a checked exception,\n+     * returning a default 0.\n+     */\n+    public static long tryParseLongPrimitive(String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c152a8d610e885e93c0a3d508b9007884d21917a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwNjc0OQ==", "bodyText": "I don't like this duplication, any way around this with Optionals, or simply any other way than just duplicating class?", "url": "https://github.com/oracle/opengrok/pull/3138#discussion_r421606749", "createdAt": "2020-05-07T15:45:38Z", "author": {"login": "tulinkry"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/analysis/NullableNumLinesLOC.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.analysis;\n+\n+/**\n+ * Represents an immutable data object that associates a file with its analyzed\n+ * number-of-lines and lines-of-code or with null values.\n+ */\n+public class NullableNumLinesLOC {\n+    private final String path;\n+    private final Long numLines;\n+    private final Long loc;\n+\n+    public NullableNumLinesLOC(String path, Long numLines, Long loc) {\n+        this.path = path;\n+        this.numLines = numLines;\n+        this.loc = loc;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public Long getNumLines() {\n+        return numLines;\n+    }\n+\n+    public Long getLOC() {\n+        return loc;\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c152a8d610e885e93c0a3d508b9007884d21917a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NzYyOTA5", "url": "https://github.com/oracle/opengrok/pull/3138#pullrequestreview-407762909", "createdAt": "2020-05-07T19:15:26Z", "commit": {"oid": "c152a8d610e885e93c0a3d508b9007884d21917a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToxNToyN1rOGSMofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToxNToyN1rOGSMofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczNDUyNA==", "bodyText": "I'm not sure if I follow this logic. Could you extract the filename to a constant?", "url": "https://github.com/oracle/opengrok/pull/3138#discussion_r421734524", "createdAt": "2020-05-07T19:15:27Z", "author": {"login": "ktulinger"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/IndexDatabase.java", "diffHunk": "@@ -505,6 +534,17 @@ public void update() throws IOException {\n                         }\n                     }\n \n+                    /*\n+                     * Since we are avoiding an IndexAnalysisSettings bump to\n+                     * store needed state related to #Lines/LOC, we need to\n+                     * ensure that at least one D-document gets saved. Record\n+                     * zeroes for a .foo under sourceRoot to do this.\n+                     */\n+                    countsAggregator.register(new NumLinesLOC(\"/.foo\", 0, 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c152a8d610e885e93c0a3d508b9007884d21917a"}, "originalPosition": 91}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2740cc669c530be5f44e748a86d600b18429c3e7", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/2740cc669c530be5f44e748a86d600b18429c3e7", "committedDate": "2020-06-22T19:03:46Z", "message": "Only use ROOT_FAKE_FILE if not yet stored a D-document\n\n... to avoid a Lucene write if also no source\ncode has changed"}, "afterCommit": {"oid": "5c182cd761ad1209ee5ae4901def15b1ac07dc11", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/5c182cd761ad1209ee5ae4901def15b1ac07dc11", "committedDate": "2020-08-20T17:22:13Z", "message": "Only use ROOT_FAKE_FILE if not yet stored a D-document\n\n... to avoid a Lucene write if also no source\ncode has changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41351de38a23428e9b1d8d30e09ea1a153413326", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/41351de38a23428e9b1d8d30e09ea1a153413326", "committedDate": "2020-10-08T02:00:40Z", "message": "Aggregate #Lines and LOC for directories up to the root"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0402c7e44598872bd473860a4288973f0a55111a", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/0402c7e44598872bd473860a4288973f0a55111a", "committedDate": "2020-10-08T02:00:40Z", "message": "Do not emphasize counts for directories"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea1e4d2042ac515f09be83cae1a8396213a85ad1", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/ea1e4d2042ac515f09be83cae1a8396213a85ad1", "committedDate": "2020-10-08T02:00:40Z", "message": "Fix to ensure at least one D-document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9474ffdf322679da3e30bf8461ee86d73c3a8a8a", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/9474ffdf322679da3e30bf8461ee86d73c3a8a8a", "committedDate": "2020-10-08T02:00:41Z", "message": "Need to store for /, which means normalizing its parent too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125d0ce7c1121ff07b66db30839e260e188ec5d7", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/125d0ce7c1121ff07b66db30839e260e188ec5d7", "committedDate": "2020-10-08T02:00:41Z", "message": "Address review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee69d6a215354f526f0e0269670d88da9559be58", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/ee69d6a215354f526f0e0269670d88da9559be58", "committedDate": "2020-10-08T02:00:41Z", "message": "fixPathIfWindows in aggregator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bb04ff305ecf7d0637f8c0bf716920c68c2ebb5", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/2bb04ff305ecf7d0637f8c0bf716920c68c2ebb5", "committedDate": "2020-10-08T02:00:41Z", "message": "Only use ROOT_FAKE_FILE if not yet stored a D-document\n\n... to avoid a Lucene write if also no source\ncode has changed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c182cd761ad1209ee5ae4901def15b1ac07dc11", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/5c182cd761ad1209ee5ae4901def15b1ac07dc11", "committedDate": "2020-08-20T17:22:13Z", "message": "Only use ROOT_FAKE_FILE if not yet stored a D-document\n\n... to avoid a Lucene write if also no source\ncode has changed"}, "afterCommit": {"oid": "2bb04ff305ecf7d0637f8c0bf716920c68c2ebb5", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/2bb04ff305ecf7d0637f8c0bf716920c68c2ebb5", "committedDate": "2020-10-08T02:00:41Z", "message": "Only use ROOT_FAKE_FILE if not yet stored a D-document\n\n... to avoid a Lucene write if also no source\ncode has changed"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 146, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}