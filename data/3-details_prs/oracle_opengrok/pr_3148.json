{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjMzOTYz", "number": 3148, "title": "Fix another batch of Sonar-identified issues", "bodyText": "Sanitize several user-supplied strings.\nFix some scope issues.\nProhibit XML external access.", "createdAt": "2020-05-09T21:38:17Z", "url": "https://github.com/oracle/opengrok/pull/3148", "merged": true, "mergeCommit": {"oid": "0826ee034ae906baad43b9524d25da960f3360d1"}, "closed": true, "closedAt": "2020-05-26T08:31:42Z", "author": {"login": "idodeclare"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcftcgeAH2gAyNDE1NjMzOTYzOjIwNDYzY2ZlNjJlOGQzMzhkZGNlNjcyNzYyNWU3Zjg0MGQ5ODM1NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgZq2EgH2gAyNDE1NjMzOTYzOmQyNmZjNWExZWQ4YjE4MTQ2ZjM2ODAwYTU3Y2E3N2M5NzYzMzI4NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/20463cfe62e8d338ddce6727625e7f840d98355f", "committedDate": "2020-05-09T21:34:36Z", "message": "Fix another batch of Sonar-identified issues\n\n- Sanitize several user-supplied strings.\n- Fix some scope issues.\n- Prohibit XML external access."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTc5NTcy", "url": "https://github.com/oracle/opengrok/pull/3148#pullrequestreview-408979572", "createdAt": "2020-05-11T08:49:54Z", "commit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTo1NFrOGTSx2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTo1NFrOGTSx2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MzgwMA==", "bodyText": "why is this deleted ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422883800", "createdAt": "2020-05-11T08:49:54Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/index/PendingFileCompleter.java", "diffHunk": "@@ -561,7 +554,6 @@ private void findFilelessChildren(SkeletonDirs skels, File directory) {\n \n     /**\n      * Counts segments arising from {@code File.separatorChar} or '\\\\'.\n-     * @param path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTgyMDYz", "url": "https://github.com/oracle/opengrok/pull/3148#pullrequestreview-408982063", "createdAt": "2020-05-11T08:53:10Z", "commit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1MzoxMFrOGTS6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1MzoxMFrOGTS6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NTk2OQ==", "bodyText": "reuse the String literal ?", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422885969", "createdAt": "2020-05-11T08:53:10Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTgzMjY5", "url": "https://github.com/oracle/opengrok/pull/3148#pullrequestreview-408983269", "createdAt": "2020-05-11T08:54:49Z", "commit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1NDo0OVrOGTS-RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1NDo0OVrOGTS-RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4Njk4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String k = logging(entry.getKey());\n          \n          \n            \n                        String key = logging(entry.getKey());", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422886981", "createdAt": "2020-05-11T08:54:49Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in subsequent OpenGrok\n+     * (non-logging) processing.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as underscores (one for one)\n+     */\n+    public static String userInput(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]\", \"_\");\n+    }\n+\n+    /**\n+     * Sanitize {@code query} where it will be used in a Lucene query.\n+     * @return {@code null} if null or else {@code query} with \"pattern-breaking\n+     * characters\" (tabs, CR, LF, FF) replaced as spaces. Contiguous matches are\n+     * replaced with one space.\n+     */\n+    public static String luceneQuery(String query) {\n+        if (query == null) {\n+            return null;\n+        }\n+        return query.replaceAll(\"[\\\\n\\\\r\\\\t\\\\f]+\", \" \");\n+    }\n+\n+    /**\n+     * Sanitize {@code value} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code value} with \"pattern-breaking\n+     * characters\" tabs, CR, LF, and FF replaced as {@code \"<TAB>\"},\n+     * {@code \"<CR>\"}, {@code \"<LF>\"}, and {@code \"<FF>\"} resp.\n+     */\n+    public static String logging(String value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        return value.replaceAll(\"\\\\n\", \"<LF>\").\n+                replaceAll(\"\\\\r\", \"<CR>\").\n+                replaceAll(\"\\\\t\", \"<TAB>\").\n+                replaceAll(\"\\\\f\", \"<FF>\");\n+    }\n+\n+    /**\n+     * Sanitize {@code map} where it will be used in a log message only.\n+     * @return {@code null} if null or else {@code map} with keys and values\n+     * sanitized with {@link #logging(String)}. If the sanitizing causes key\n+     * collisions, the colliding keys' values are combined.\n+     */\n+    public static Map<String, String[]> logging(Map<String, String[]> map) {\n+        if (map == null) {\n+            return null;\n+        }\n+\n+        HashMap<String, String[]> safes = new HashMap<>();\n+        for (Map.Entry<String, String[]> entry : map.entrySet()) {\n+            String k = logging(entry.getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTg4OTgz", "url": "https://github.com/oracle/opengrok/pull/3148#pullrequestreview-408988983", "createdAt": "2020-05-11T09:02:19Z", "commit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowMjoxOVrOGTTQ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowMjoxOVrOGTTQ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MTc0NQ==", "bodyText": "perhaps this class should be called Laundromat and have the launder as a method ? :-)", "url": "https://github.com/oracle/opengrok/pull/3148#discussion_r422891745", "createdAt": "2020-05-11T09:02:19Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/web/LaunderUtil.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * CDDL HEADER START\n+ *\n+ * The contents of this file are subject to the terms of the\n+ * Common Development and Distribution License (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *\n+ * See LICENSE.txt included in this distribution for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing Covered Code, include this CDDL HEADER in each\n+ * file and include the License file at LICENSE.txt.\n+ * If applicable, add the following below this CDDL HEADER, with the\n+ * fields enclosed by brackets \"[]\" replaced with your own identifying\n+ * information: Portions Copyright [yyyy] [name of copyright owner]\n+ *\n+ * CDDL HEADER END\n+ */\n+\n+/*\n+ * Copyright (c) 2020, Chris Fraire <cfraire@me.com>.\n+ */\n+\n+package org.opengrok.indexer.web;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Represents a container for sanitizing methods for avoiding classifications as\n+ * taint bugs.\n+ */\n+public class LaunderUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20463cfe62e8d338ddce6727625e7f840d98355f"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d26fc5a1ed8b18146f36800a57ca77c976332872", "author": {"user": {"login": "idodeclare", "name": "C Fraire"}}, "url": "https://github.com/oracle/opengrok/commit/d26fc5a1ed8b18146f36800a57ca77c976332872", "committedDate": "2020-05-12T01:06:05Z", "message": "Address review feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 154, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}