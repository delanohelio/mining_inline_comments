{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDkwMTUz", "number": 3200, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxODoyMlrOEkiBzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozMzo0NlrOEkiiTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQxNzA4OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxODoyMlrOHThpjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNTo1Mzo0MVrOHTpSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjMwMA==", "bodyText": "Would not IllegalArgumentException make more sense? InvalidParameterException is from security package and is not that commonly used.", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490236300", "createdAt": "2020-09-17T13:18:22Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java", "diffHunk": "@@ -227,29 +228,59 @@ public void setNestingMaximum(int nestingMaximum) {\n         syncWriteConfiguration(nestingMaximum, Configuration::setNestingMaximum);\n     }\n \n-    public int getCommandTimeout() {\n-        return syncReadConfiguration(Configuration::getCommandTimeout);\n+    public int getCommandTimeout(CommandTimeoutType cmdType) {\n+        switch (cmdType) {\n+            case INDEXER:\n+                return getIndexerCommandTimeout();\n+            case INTERACTIVE:\n+                return getInteractiveCommandTimeout();\n+            case WEBAPP_START:\n+                return getWebappStartCommandTimeout();\n+            case RESTFUL:\n+                return getRestfulCommandTimeout();\n+        }\n+\n+        throw new InvalidParameterException(\"invalid command timeout type\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2MTM0OA==", "bodyText": "sounds reasonable, changed.", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490361348", "createdAt": "2020-09-17T15:53:41Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java", "diffHunk": "@@ -227,29 +228,59 @@ public void setNestingMaximum(int nestingMaximum) {\n         syncWriteConfiguration(nestingMaximum, Configuration::setNestingMaximum);\n     }\n \n-    public int getCommandTimeout() {\n-        return syncReadConfiguration(Configuration::getCommandTimeout);\n+    public int getCommandTimeout(CommandTimeoutType cmdType) {\n+        switch (cmdType) {\n+            case INDEXER:\n+                return getIndexerCommandTimeout();\n+            case INTERACTIVE:\n+                return getInteractiveCommandTimeout();\n+            case WEBAPP_START:\n+                return getWebappStartCommandTimeout();\n+            case RESTFUL:\n+                return getRestfulCommandTimeout();\n+        }\n+\n+        throw new InvalidParameterException(\"invalid command timeout type\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjMwMA=="}, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQ2MDYxOnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyNjozNFrOHTiERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNTo1MTozNFrOHTpMeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg==", "bodyText": "I know it was like this but since you are touching it, could you please rename to timeStr to follow Java standard?", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490243142", "createdAt": "2020-09-17T13:26:34Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;\n+\n+    public Statistics() {\n       startTime = System.currentTimeMillis();    \n   }\n \n-  public void report(Logger log, String msg) {\n-      long stopTime = System.currentTimeMillis();\n-      String time_str = StringUtils.getReadableTime(stopTime - startTime);\n-      log.log(Level.INFO, msg + \" (took {0})\", time_str);\n-  }\n+    /**\n+     * log a message along with how much time it took since the constructor was called.\n+     * @param logger logger instance\n+     * @param logLevel log level\n+     * @param msg message string\n+     */\n+    public void report(Logger logger, Level logLevel, String msg) {\n+        long stopTime = System.currentTimeMillis();\n+        String time_str = StringUtils.getReadableTime(stopTime - startTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1OTkzMA==", "bodyText": "sure", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490359930", "createdAt": "2020-09-17T15:51:34Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;\n+\n+    public Statistics() {\n       startTime = System.currentTimeMillis();    \n   }\n \n-  public void report(Logger log, String msg) {\n-      long stopTime = System.currentTimeMillis();\n-      String time_str = StringUtils.getReadableTime(stopTime - startTime);\n-      log.log(Level.INFO, msg + \" (took {0})\", time_str);\n-  }\n+    /**\n+     * log a message along with how much time it took since the constructor was called.\n+     * @param logger logger instance\n+     * @param logLevel log level\n+     * @param msg message string\n+     */\n+    public void report(Logger logger, Level logLevel, String msg) {\n+        long stopTime = System.currentTimeMillis();\n+        String time_str = StringUtils.getReadableTime(stopTime - startTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg=="}, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzUwMDI4OnYy", "diffSide": "RIGHT", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozMzo0NlrOHTidww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNTo1ODo1MFrOHTpgUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTY2Nw==", "bodyText": "I still prefer using Instant and Duration classes for computing the duration as it is more high level. If you do not, then feel free to ignore.", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490249667", "createdAt": "2020-09-17T13:33:46Z", "author": {"login": "ahornace"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2NTAwOA==", "bodyText": "why not, changed. I like Duration.between().", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490365008", "createdAt": "2020-09-17T15:58:50Z", "author": {"login": "vladak"}, "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTY2Nw=="}, "originalCommit": {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}