{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTQ3MDQ0", "number": 260, "title": "Add Observer Tools", "bodyText": "Observer Tools\nResolves #220\nInspiration was taken mostly from @Pablete1234's comment on that issue. Thanks!\nFeatures:\nThis implementation of an observer tool set adds a new GUI menu for observers to interact with. While simple in functionality, this will most certainly prove useful for users who want more control over the features described below. I've designed this feature set with future improvements/additions in mind, so with minimal tweaking more tools/features can be added to the GUI if desired.\n\nFly Speed\nAdjust the flight speed between 4 set values. I performed a bit of testing between several values to see what made a difference to the user, and I believe the values chosen are good.\nAlso I used the names Regular, Fast, Faster, and Hyperspeed as user friendly names to define the speeds. As I felt that using numbers would be more confusing. If anyone has better suggestions for names or speed values, I'm open to adjusting them.\n\nNight Vision\nAllows the player to toggle night vision on/off. Potions are removed when joining matches, so this will not interfere in anyway. This also does not persist between matches, so users will be able to decide on a per match basis if they want night vision on or not.\n\nToggle Visibility\nSimply toggles the Observer visibility setting.\n\nGamemode\nThis was one of the more tricky additions, as it toggles the observer between Creative and Spectator mode. Since the regular hotbar is not accessible while in Spectator, once the user clicks the tool, a message will be sent in the chat. Stating in order to access this menu they must use the /tools command.\nAlso I made sure to include the /! command as suggested by @Pablete1234.\n\nFuture Improvements\nAs stated earlier, I feel this menu has the potential to house more useful tools. Hopefully with community feedback, we can gather new ideas and implement them when needed.\nThere was one feature I feel could be implemented, though I chose not to for simplicity sake before receiving feedback. It would be allowing players the option to add one of the setting \"tools\" to their hotbar to easily activate the setting. For example, were the night vision tool added to the hotbar the user when clicking the item would be able to toggle night vision on/off without opening the inventory menu.\nFinal Note\nJust wanted to state, I did not add any config options to this. As I feel nothing here would disrupt gameplay in a way server owners would want to disable it. However if that is requested it can be added.\nSigned-off-by: applenick applenick@users.noreply.github.com", "createdAt": "2020-01-25T19:30:04Z", "url": "https://github.com/PGMDev/PGM/pull/260", "merged": true, "mergeCommit": {"oid": "a414a5ff08c17cdc160f008f7a487a05e4fe1664"}, "closed": true, "closedAt": "2020-01-29T01:21:32Z", "author": {"login": "applenick"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb94mTlAH2gAyMzY3MTQ3MDQ0OmY2OTBhN2FmODg5OGIyYTFjNGE5MTkxY2Q4MmEwYmE1NjY5NGMwNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-7OSHAH2gAyMzY3MTQ3MDQ0Ojk0Yzc0MWVhY2ZhZTZkMjM4YWE4MDU1MTI5MjYxYWIzMzI1MjdlZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/f690a7af8898b2a1c4a9191cd82a0ba56694c04c", "committedDate": "2020-01-25T19:20:50Z", "message": "Add Observer Tools\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b", "committedDate": "2020-01-25T19:39:12Z", "message": "Fix missing documentation for MatchPlayer\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzQyMTA2", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348342106", "createdAt": "2020-01-25T19:45:11Z", "commit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NToxMlrOFhxHgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NToxMlrOFhxHgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MjA2Ng==", "bodyText": "Keep it private or protected, please.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370952066", "createdAt": "2020-01-25T19:45:12Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/gui/InventoryGUI.java", "diffHunk": "@@ -0,0 +1,132 @@\n+package tc.oc.pgm.gui;\n+\n+import com.google.common.collect.Sets;\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.bukkit.Bukkit;\n+import org.bukkit.inventory.Inventory;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.util.StringUtils;\n+\n+public abstract class InventoryGUI {\n+\n+  /*\n+   * Code extracted from PickerMatchModule to allow for reuse\n+   */\n+\n+  public Set<MatchPlayer> viewing = Sets.newHashSet();\n+\n+  public String title; // Title of the inventory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzQyMTIw", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348342120", "createdAt": "2020-01-25T19:45:22Z", "commit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NToyMlrOFhxHkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NToyMlrOFhxHkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MjA4Mg==", "bodyText": "checkNotNull please", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370952082", "createdAt": "2020-01-25T19:45:22Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/gui/InventoryGUI.java", "diffHunk": "@@ -0,0 +1,132 @@\n+package tc.oc.pgm.gui;\n+\n+import com.google.common.collect.Sets;\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.bukkit.Bukkit;\n+import org.bukkit.inventory.Inventory;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.util.StringUtils;\n+\n+public abstract class InventoryGUI {\n+\n+  /*\n+   * Code extracted from PickerMatchModule to allow for reuse\n+   */\n+\n+  public Set<MatchPlayer> viewing = Sets.newHashSet();\n+\n+  public String title; // Title of the inventory\n+  private int size; // Size of inventory\n+\n+  public InventoryGUI(String title, int size) {\n+    this.title = title;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzQyMTUw", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348342150", "createdAt": "2020-01-25T19:45:51Z", "commit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NTo1MVrOFhxHvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0NTo1MVrOFhxHvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MjEyNA==", "bodyText": "Check if the size is positive and can be divided by 9.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370952124", "createdAt": "2020-01-25T19:45:51Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/gui/InventoryGUI.java", "diffHunk": "@@ -0,0 +1,132 @@\n+package tc.oc.pgm.gui;\n+\n+import com.google.common.collect.Sets;\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.bukkit.Bukkit;\n+import org.bukkit.inventory.Inventory;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.util.StringUtils;\n+\n+public abstract class InventoryGUI {\n+\n+  /*\n+   * Code extracted from PickerMatchModule to allow for reuse\n+   */\n+\n+  public Set<MatchPlayer> viewing = Sets.newHashSet();\n+\n+  public String title; // Title of the inventory\n+  private int size; // Size of inventory\n+\n+  public InventoryGUI(String title, int size) {\n+    this.title = title;\n+    this.size = size;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzQyMzA0", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348342304", "createdAt": "2020-01-25T19:49:31Z", "commit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0OTozMVrOFhxIZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxOTo0OTozMVrOFhxIZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MjI5Mg==", "bodyText": "This should be translatable.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370952292", "createdAt": "2020-01-25T19:49:31Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/FlySpeedTool.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.apache.commons.lang.WordUtils;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class FlySpeedTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.flyspeed\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_RED;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component flySpeed = FlySpeed.of(player.getBukkit().getFlySpeed()).getName();\n+    Component lore =\n+        new PersonalizedTranslatable(\"observer.tools.flyspeed.lore\", flySpeed)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    return Lists.newArrayList(ComponentRenderers.toLegacyText(lore, player.getBukkit()));\n+  }\n+\n+  @Override\n+  public Material getMaterial(MatchPlayer player) {\n+    return Material.FEATHER;\n+  }\n+\n+  @Override\n+  public void onInventoryClick(InventoryGUI menu, MatchPlayer player) {\n+    incrementSpeed(player);\n+    menu.refreshWindow(player);\n+  }\n+\n+  private void incrementSpeed(MatchPlayer player) {\n+    FlySpeed speed = FlySpeed.of(player.getBukkit().getFlySpeed());\n+    player.getBukkit().setFlySpeed(speed.getNext().getValue());\n+  }\n+\n+  public static enum FlySpeed {\n+    NORMAL(ChatColor.YELLOW, 0.1f),\n+    FAST(ChatColor.GOLD, 0.25f),\n+    FASTER(ChatColor.RED, 0.5f),\n+    HYPERSPEED(ChatColor.LIGHT_PURPLE, 0.9f);\n+\n+    private ChatColor color;\n+    private float value;\n+\n+    FlySpeed(ChatColor color, float value) {\n+      this.color = color;\n+      this.value = value;\n+    }\n+\n+    public float getValue() {\n+      return value;\n+    }\n+\n+    public Component getName() {\n+      return new PersonalizedText(WordUtils.capitalize(this.name().toLowerCase())).color(color);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f690a7af8898b2a1c4a9191cd82a0ba56694c04c"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d0164aab30e777da6b560ec1388a0db861fd16", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/49d0164aab30e777da6b560ec1388a0db861fd16", "committedDate": "2020-01-26T01:54:56Z", "message": "Clean up InventoryGUI; add translations to FlySpeedTool\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU0OTU2", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348354956", "createdAt": "2020-01-26T02:04:12Z", "commit": {"oid": "49d0164aab30e777da6b560ec1388a0db861fd16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjowNDoxMlrOFhyHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjowNDoxMlrOFhyHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2ODQ3NQ==", "bodyText": "You forgot final :p", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370968475", "createdAt": "2020-01-26T02:04:12Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/gui/InventoryGUI.java", "diffHunk": "@@ -13,18 +16,27 @@\n \n public abstract class InventoryGUI {\n \n-  /*\n-   * Code extracted from PickerMatchModule to allow for reuse\n-   */\n-\n-  public Set<MatchPlayer> viewing = Sets.newHashSet();\n+  protected static int ROW_WIDTH = 9; // Number of columns per row\n+  protected static int MAX_ROWS = 6; // Max allowed row size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d0164aab30e777da6b560ec1388a0db861fd16"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1MDQw", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355040", "createdAt": "2020-01-26T02:06:35Z", "commit": {"oid": "49d0164aab30e777da6b560ec1388a0db861fd16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjowNjozNVrOFhyH_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjowNjozNVrOFhyH_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2ODU3NA==", "bodyText": "I think all of these can be final?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370968574", "createdAt": "2020-01-26T02:06:35Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/gui/InventoryGUI.java", "diffHunk": "@@ -13,18 +16,27 @@\n \n public abstract class InventoryGUI {\n \n-  /*\n-   * Code extracted from PickerMatchModule to allow for reuse\n-   */\n-\n-  public Set<MatchPlayer> viewing = Sets.newHashSet();\n+  protected static int ROW_WIDTH = 9; // Number of columns per row\n+  protected static int MAX_ROWS = 6; // Max allowed row size\n \n-  public String title; // Title of the inventory\n-  private int size; // Size of inventory\n+  private Set<MatchPlayer> viewing = Sets.newHashSet(); // Set of players who are viewing the gui\n+  private String title; // Title of the inventory\n+  private int rows; // The # of rows in the inventory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d0164aab30e777da6b560ec1388a0db861fd16"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/5969f31828c357d291d4a88f91956b4c4a4af708", "committedDate": "2020-01-26T02:15:08Z", "message": "Make InventoryGUI variables final\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1NDAz", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355403", "createdAt": "2020-01-26T02:21:06Z", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMTowNlrOFhyJwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMTowNlrOFhyJwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTAyNg==", "bodyText": "We should keep a comment here saying that this command is from WorldEdit and it unstucks the player. Also having worldedit: there would be cool.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370969026", "createdAt": "2020-01-26T02:21:06Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/GamemodeTool.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import org.apache.commons.lang.WordUtils;\n+import org.bukkit.GameMode;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class GamemodeTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.gamemode\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_AQUA;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component gamemode =\n+        new PersonalizedText(WordUtils.capitalizeFully(player.getGameMode().name().toLowerCase()))\n+            .color(ChatColor.AQUA);\n+    Component lore =\n+        new PersonalizedTranslatable(\"observer.tools.gamemode.lore\", gamemode)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    return Lists.newArrayList(ComponentRenderers.toLegacyText(lore, player.getBukkit()));\n+  }\n+\n+  @Override\n+  public Material getMaterial(MatchPlayer player) {\n+    return isCreative(player) ? Material.SEA_LANTERN : Material.PRISMARINE;\n+  }\n+\n+  @Override\n+  public void onInventoryClick(InventoryGUI menu, MatchPlayer player) {\n+    toggleObserverGameMode(player);\n+    menu.refreshWindow(player);\n+  }\n+\n+  public void toggleObserverGameMode(MatchPlayer player) {\n+    player.setGameMode(getOppositeMode(player.getGameMode()));\n+    if (player.getGameMode() == GameMode.SPECTATOR) {\n+      player.sendWarning(getToggleMessage(), true);\n+    } else if (isCreative(player)) {\n+      player.getBukkit().performCommand(\"!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1NDM4", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355438", "createdAt": "2020-01-26T02:22:32Z", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMjozMlrOFhyJ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMjozMlrOFhyJ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTA2Ng==", "bodyText": "I'm sure there is a translation for this in the client for th\u00ecs. Can we use it?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370969066", "createdAt": "2020-01-26T02:22:32Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/GamemodeTool.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import org.apache.commons.lang.WordUtils;\n+import org.bukkit.GameMode;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class GamemodeTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.gamemode\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_AQUA;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component gamemode =\n+        new PersonalizedText(WordUtils.capitalizeFully(player.getGameMode().name().toLowerCase()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1NDY3", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355467", "createdAt": "2020-01-26T02:23:39Z", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMzozOVrOFhyKGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyMzozOVrOFhyKGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTExMg==", "bodyText": "Should be translatable.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370969112", "createdAt": "2020-01-26T02:23:39Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/GamemodeTool.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import org.apache.commons.lang.WordUtils;\n+import org.bukkit.GameMode;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class GamemodeTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.gamemode\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_AQUA;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component gamemode =\n+        new PersonalizedText(WordUtils.capitalizeFully(player.getGameMode().name().toLowerCase()))\n+            .color(ChatColor.AQUA);\n+    Component lore =\n+        new PersonalizedTranslatable(\"observer.tools.gamemode.lore\", gamemode)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    return Lists.newArrayList(ComponentRenderers.toLegacyText(lore, player.getBukkit()));\n+  }\n+\n+  @Override\n+  public Material getMaterial(MatchPlayer player) {\n+    return isCreative(player) ? Material.SEA_LANTERN : Material.PRISMARINE;\n+  }\n+\n+  @Override\n+  public void onInventoryClick(InventoryGUI menu, MatchPlayer player) {\n+    toggleObserverGameMode(player);\n+    menu.refreshWindow(player);\n+  }\n+\n+  public void toggleObserverGameMode(MatchPlayer player) {\n+    player.setGameMode(getOppositeMode(player.getGameMode()));\n+    if (player.getGameMode() == GameMode.SPECTATOR) {\n+      player.sendWarning(getToggleMessage(), true);\n+    } else if (isCreative(player)) {\n+      player.getBukkit().performCommand(\"!\");\n+    }\n+  }\n+\n+  private boolean isCreative(MatchPlayer player) {\n+    return player.getGameMode().equals(GameMode.CREATIVE);\n+  }\n+\n+  private Component getToggleMessage() {\n+    Component command =\n+        new PersonalizedText(\"/tools\")\n+            .color(ChatColor.AQUA)\n+            .hoverEvent(\n+                HoverEvent.Action.SHOW_TEXT,\n+                new PersonalizedText(\"Click to open tool menu\").color(ChatColor.GRAY).render())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1NDc4", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355478", "createdAt": "2020-01-26T02:24:07Z", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyNDowOFrOFhyKKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyNDowOFrOFhyKKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTEyOA==", "bodyText": "Should be translatable.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370969128", "createdAt": "2020-01-26T02:24:08Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/NightVisionTool.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Material;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class NightVisionTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.nightvision\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_PURPLE;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component status =\n+        new PersonalizedText(hasNightVision(player) ? \"On\" : \"Off\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzU1NDg3", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348355487", "createdAt": "2020-01-26T02:24:47Z", "commit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyNDo0N1rOFhyKMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjoyNDo0N1rOFhyKMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTEzNg==", "bodyText": "Should be translatable.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370969136", "createdAt": "2020-01-26T02:24:47Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/observers/tools/VisibilityTool.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.setting.SettingKey;\n+import tc.oc.pgm.api.setting.SettingValue;\n+import tc.oc.pgm.api.setting.Settings;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class VisibilityTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.visibility\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.YELLOW;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component status =\n+        new PersonalizedText(isVisible(player) ? \"Shown\" : \"Hidden\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5969f31828c357d291d4a88f91956b4c4a4af708"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2941c19dd333cee77f1fa2cfd0f0ff89855cb5", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/8d2941c19dd333cee77f1fa2cfd0f0ff89855cb5", "committedDate": "2020-01-26T02:47:59Z", "message": "Translate more messages and add note regarding WorldEdit\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0b10b608076ce0d88e106f3203ee0b9cb92d03", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/6c0b10b608076ce0d88e106f3203ee0b9cb92d03", "committedDate": "2020-01-26T03:00:17Z", "message": "Use translations for gamemode name\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzQ5NzM0", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348349734", "createdAt": "2020-01-25T23:01:38Z", "commit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzowMTozOFrOFhxreA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMzo0MjoyN1rOFhyTMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MTI3Mg==", "bodyText": "I don't think this command is really needed since the item on the inventory exists.\nIf the concern is not being able to open the menu if you throw out the diamond, make it so any diamond right-clicking works.", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370961272", "createdAt": "2020-01-25T23:01:38Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/commands/ObserverCommands.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.CommandException;\n+import java.util.Optional;\n+import org.bukkit.command.CommandSender;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.observers.ObserverToolsMatchModule;\n+\n+public class ObserverCommands {\n+\n+  @Command(\n+      aliases = {\"tools\", \"observertools\", \"ot\"},\n+      desc = \"Open the observer tool menu\")\n+  public static void openObserverToolMenu(CommandSender sender, MatchPlayer player)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MTEyMQ==", "bodyText": "maybe rename to canUse instead ?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370971121", "createdAt": "2020-01-26T03:32:00Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/observers/ObserverToolsMatchModule.java", "diffHunk": "@@ -0,0 +1,186 @@\n+package tc.oc.pgm.observers;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.EventPriority;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.block.Action;\n+import org.bukkit.event.inventory.InventoryClickEvent;\n+import org.bukkit.event.inventory.InventoryCloseEvent;\n+import org.bukkit.event.player.PlayerInteractEvent;\n+import org.bukkit.inventory.ItemFlag;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.ListenerScope;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.match.MatchModule;\n+import tc.oc.pgm.match.MatchModuleFactory;\n+import tc.oc.pgm.module.ModuleLoadException;\n+import tc.oc.pgm.observers.tools.FlySpeedTool;\n+import tc.oc.pgm.observers.tools.GamemodeTool;\n+import tc.oc.pgm.observers.tools.NightVisionTool;\n+import tc.oc.pgm.observers.tools.VisibilityTool;\n+import tc.oc.pgm.spawns.events.ObserverKitApplyEvent;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class ObserverToolsMatchModule extends MatchModule implements Listener {\n+\n+  public static class Factory implements MatchModuleFactory<ObserverToolsMatchModule> {\n+    @Override\n+    public ObserverToolsMatchModule createMatchModule(Match match) throws ModuleLoadException {\n+      return new ObserverToolsMatchModule(match);\n+    }\n+  }\n+\n+  // Slot where tool item is placed\n+  public static final int TOOL_BUTTON_SLOT = 8;\n+\n+  // Material of tool item item\n+  public static final Material TOOL_MATERIAL = Material.DIAMOND;\n+\n+  private ObserverToolMenu menu;\n+\n+  public ObserverToolsMatchModule(Match match) {\n+    super(match);\n+    this.menu = new ObserverToolMenu();\n+  }\n+\n+  @EventHandler\n+  public void onObserverKitApply(ObserverKitApplyEvent event) {\n+    refreshKit(event.getPlayer());\n+  }\n+\n+  @EventHandler\n+  public void onToolClick(PlayerInteractEvent event) {\n+    if (isRightClick(event.getAction())) {\n+      ItemStack item = event.getPlayer().getItemInHand();\n+\n+      if (item.getType().equals(TOOL_MATERIAL)) {\n+        MatchPlayer player = getMatch().getPlayer(event.getPlayer());\n+        openMenu(player);\n+      }\n+    }\n+  }\n+\n+  @EventHandler(priority = EventPriority.LOWEST)\n+  public void onInventoryClick(final InventoryClickEvent event) {\n+    if (event.getCurrentItem() == null\n+        || event.getCurrentItem().getItemMeta() == null\n+        || event.getCurrentItem().getItemMeta().getDisplayName() == null) return;\n+\n+    if (event.getWhoClicked() instanceof Player) {\n+      MatchPlayer player = match.getPlayer(event.getWhoClicked());\n+      if (menu.isViewing(player)) {\n+        ItemStack clicked = event.getCurrentItem();\n+        menu.getTools()\n+            .forEach(\n+                tool -> {\n+                  if (clicked.getType().equals(tool.getMaterial(player))) {\n+                    tool.onInventoryClick(menu, player);\n+                  }\n+                });\n+      }\n+    }\n+  }\n+\n+  @EventHandler\n+  public void onInventoryClose(final InventoryCloseEvent event) {\n+    // Remove viewing of menu upon inventory close\n+    menu.remove(getMatch().getPlayer((Player) event.getPlayer()));\n+  }\n+\n+  public void openMenu(MatchPlayer player) {\n+    if (hasUse(player)) {\n+      menu.display(player);\n+    }\n+  }\n+\n+  private boolean hasUse(MatchPlayer player) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MTM0MA==", "bodyText": "have a:\nprivate static FlySpeed[] speeds = values();\nand have this method be:\nreturn speeds[(ordinal() + 1) % speeds.length]", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370971340", "createdAt": "2020-01-26T03:38:28Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/observers/tools/FlySpeedTool.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.apache.commons.lang.WordUtils;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+import tc.oc.pgm.observers.ObserverTool;\n+\n+public class FlySpeedTool implements ObserverTool {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.flyspeed\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_RED;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component flySpeed = FlySpeed.of(player.getBukkit().getFlySpeed()).getName();\n+    Component lore =\n+        new PersonalizedTranslatable(\"observer.tools.flyspeed.lore\", flySpeed)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    return Lists.newArrayList(ComponentRenderers.toLegacyText(lore, player.getBukkit()));\n+  }\n+\n+  @Override\n+  public Material getMaterial(MatchPlayer player) {\n+    return Material.FEATHER;\n+  }\n+\n+  @Override\n+  public void onInventoryClick(InventoryGUI menu, MatchPlayer player) {\n+    incrementSpeed(player);\n+    menu.refreshWindow(player);\n+  }\n+\n+  private void incrementSpeed(MatchPlayer player) {\n+    FlySpeed speed = FlySpeed.of(player.getBukkit().getFlySpeed());\n+    player.getBukkit().setFlySpeed(speed.getNext().getValue());\n+  }\n+\n+  public static enum FlySpeed {\n+    NORMAL(ChatColor.YELLOW, 0.1f),\n+    FAST(ChatColor.GOLD, 0.25f),\n+    FASTER(ChatColor.RED, 0.5f),\n+    HYPERSPEED(ChatColor.LIGHT_PURPLE, 0.9f);\n+\n+    private ChatColor color;\n+    private float value;\n+\n+    FlySpeed(ChatColor color, float value) {\n+      this.color = color;\n+      this.value = value;\n+    }\n+\n+    public float getValue() {\n+      return value;\n+    }\n+\n+    public Component getName() {\n+      return new PersonalizedText(WordUtils.capitalize(this.name().toLowerCase())).color(color);\n+    }\n+\n+    public FlySpeed getNext() {\n+      return ordinal() < (values().length - 1) ? values()[ordinal() + 1] : NORMAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MTQ0Mg==", "bodyText": "maybe have this be a generic gui item thing?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r370971442", "createdAt": "2020-01-26T03:42:27Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/observers/ObserverTool.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package tc.oc.pgm.observers;\n+\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemFlag;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.gui.InventoryGUI;\n+\n+public interface ObserverTool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2dd6927210d3e2bfbccb3b098c77c5e85bc0b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "679317d70b9746cb510fcc8ba0e5b38a568bfe9f", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/679317d70b9746cb510fcc8ba0e5b38a568bfe9f", "committedDate": "2020-01-26T06:01:23Z", "message": "Refactor GUI related classes; clean up FlySpeed enum logic\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0111450600cd5721dc18c5e625df504ff87910a4", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/0111450600cd5721dc18c5e625df504ff87910a4", "committedDate": "2020-01-26T06:10:49Z", "message": "Update package name from gui -> menu\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mzc5Mjgx", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348379281", "createdAt": "2020-01-26T13:22:32Z", "commit": {"oid": "0111450600cd5721dc18c5e625df504ff87910a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDE4MjQ2", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348418246", "createdAt": "2020-01-27T01:27:32Z", "commit": {"oid": "0111450600cd5721dc18c5e625df504ff87910a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDQ5MDQ0", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348449044", "createdAt": "2020-01-27T05:51:59Z", "commit": {"oid": "0111450600cd5721dc18c5e625df504ff87910a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNTo1MTo1OVrOFh4aJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNTo1MTo1OVrOFh4aJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3MTUyNg==", "bodyText": "What happens if WorldEdit is not loaded? Will it show a command not found error?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r371071526", "createdAt": "2020-01-27T05:51:59Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/observers/tools/GamemodeTool.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package tc.oc.pgm.observers.tools;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import net.md_5.bungee.api.ChatColor;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import org.bukkit.GameMode;\n+import org.bukkit.Material;\n+import tc.oc.component.Component;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.menu.InventoryMenu;\n+import tc.oc.pgm.menu.InventoryMenuItem;\n+\n+public class GamemodeTool implements InventoryMenuItem {\n+\n+  @Override\n+  public Component getName() {\n+    return new PersonalizedTranslatable(\"observer.tools.gamemode\");\n+  }\n+\n+  @Override\n+  public ChatColor getColor() {\n+    return ChatColor.DARK_AQUA;\n+  }\n+\n+  @Override\n+  public List<String> getLore(MatchPlayer player) {\n+    Component gamemode =\n+        new PersonalizedTranslatable(\"gameMode.\" + player.getGameMode().name().toLowerCase())\n+            .color(ChatColor.AQUA);\n+    Component lore =\n+        new PersonalizedTranslatable(\"observer.tools.gamemode.lore\", gamemode)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    return Lists.newArrayList(ComponentRenderers.toLegacyText(lore, player.getBukkit()));\n+  }\n+\n+  @Override\n+  public Material getMaterial(MatchPlayer player) {\n+    return isCreative(player) ? Material.SEA_LANTERN : Material.PRISMARINE;\n+  }\n+\n+  @Override\n+  public void onInventoryClick(InventoryMenu menu, MatchPlayer player) {\n+    toggleObserverGameMode(player);\n+    menu.refreshWindow(player);\n+  }\n+\n+  public void toggleObserverGameMode(MatchPlayer player) {\n+    player.setGameMode(getOppositeMode(player.getGameMode()));\n+    if (player.getGameMode() == GameMode.SPECTATOR) {\n+      player.sendWarning(getToggleMessage(), true);\n+    } else if (isCreative(player)) {\n+      // Note: This performs the WorldEdit command to ensure the player is not stuck\n+      player.getBukkit().performCommand(\"worldedit:!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0111450600cd5721dc18c5e625df504ff87910a4"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "356f7a7d8f3ca3d45c1ea80413198c42ff39c806", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/356f7a7d8f3ca3d45c1ea80413198c42ff39c806", "committedDate": "2020-01-27T06:49:39Z", "message": "Add a check to see if WorldEdit is enabled\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e8700224b77f6f44e43e943c77e3fde2745ae6", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/f9e8700224b77f6f44e43e943c77e3fde2745ae6", "committedDate": "2020-01-27T06:55:20Z", "message": "Merge branch 'master' into observer-tools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df09e973d74aef22b5eeb2c24db8f9058b8cac26", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/df09e973d74aef22b5eeb2c24db8f9058b8cac26", "committedDate": "2020-01-27T07:01:46Z", "message": "Fix formatting error\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODI2MzEy", "url": "https://github.com/PGMDev/PGM/pull/260#pullrequestreview-348826312", "createdAt": "2020-01-27T17:04:18Z", "commit": {"oid": "df09e973d74aef22b5eeb2c24db8f9058b8cac26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowNDoxOFrOFiKWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowNDoxOFrOFiKWjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTUxOQ==", "bodyText": "This doesn't seem to get cleaned up anywhere? How about using WeakHashMap ?", "url": "https://github.com/PGMDev/PGM/pull/260#discussion_r371365519", "createdAt": "2020-01-27T17:04:18Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/menu/InventoryMenu.java", "diffHunk": "@@ -0,0 +1,151 @@\n+package tc.oc.pgm.menu;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.Sets;\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.bukkit.Bukkit;\n+import org.bukkit.inventory.Inventory;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.component.render.ComponentRenderers;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.util.StringUtils;\n+\n+public abstract class InventoryMenu {\n+\n+  protected static final int ROW_WIDTH = 9; // Number of columns per row\n+  protected static final int MAX_ROWS = 6; // Max allowed row size\n+\n+  private final Set<MatchPlayer> viewing =\n+      Sets.newHashSet(); // Set of players who are viewing the gui", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df09e973d74aef22b5eeb2c24db8f9058b8cac26"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446506763691484aa0cea5632d5b3cb9b3fb8ad1", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/446506763691484aa0cea5632d5b3cb9b3fb8ad1", "committedDate": "2020-01-28T01:15:19Z", "message": "Use a WeakHashMap in InventoryMenu\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94c741eacfae6d238aa8055129261ab332527eee", "author": {"user": {"login": "Pablete1234", "name": "Pablo Herrera"}}, "url": "https://github.com/PGMDev/PGM/commit/94c741eacfae6d238aa8055129261ab332527eee", "committedDate": "2020-01-29T00:58:14Z", "message": "Merge branch 'master' into observer-tools"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 549, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}