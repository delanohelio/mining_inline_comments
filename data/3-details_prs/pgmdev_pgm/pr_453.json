{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNjU4NTY1", "number": 453, "title": "Multiple fixes for various moderation features", "bodyText": "May Moderation Fixes \ud83c\udf89\nThis PR contains fixes for several moderation bugs as well as a few small new features.\nOverview of changes:\n\nFrozen players who are kicked, are now automatically unfrozen.\nAdd a -s flag to /freeze command, allowing the freezer to hide their identity. (Vanished will automatically be silent too)\nRewrote logic for /reports, which fixes relogged users having an unformatted name.\nMuted players can now /msg staff (fixing a reported bug where sounds play with no message)\nChanged /setnext map name color to GOLD\n/setnext -r will now unset any map that was setnext\nFix vanished players showing up in /staff & /match\nFix vanished players joining before match start and not being forced onto obs\nFix kick/ban screen missing config\nFix missing translations (there were a few)\nMoved PlayerReportEvent to community package\nMigrate 95% of community module to the new text library\nVanished players will no longer have their chat setting forcefully set, instead global and team chat will be overridden if a vanished player attempts to use them, and redirected into admin chat.\nSwitch /vanish and /freeze to toggle their respective features (removes /unvanish and /unfreeze)\n\nSigned-off-by: applenick applenick@users.noreply.github.com", "createdAt": "2020-05-03T20:07:17Z", "url": "https://github.com/PGMDev/PGM/pull/453", "merged": true, "mergeCommit": {"oid": "e18adafad30afe340663dadb01f94a3606556ebd"}, "closed": true, "closedAt": "2020-05-05T14:47:41Z", "author": {"login": "applenick"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdxM7GgFqTQwNDY1NTUyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABceVN_hAFqTQwNTg2MjM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjU1NTI3", "url": "https://github.com/PGMDev/PGM/pull/453#pullrequestreview-404655527", "createdAt": "2020-05-03T20:41:43Z", "commit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMDo0MTo0NFrOGPvVOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMDo0ODowNlrOGPvYCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzMwNQ==", "bodyText": "TextFormatter.list", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157305", "createdAt": "2020-05-03T20:41:44Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -98,124 +98,116 @@ private void removeCachedBan(BannedAccountInfo info) {\n   @Command(\n       aliases = {\"staff\", \"mods\", \"admins\"},\n       desc = \"List the online staff members\")\n-  public void staff(CommandSender sender, Match match) {\n+  public void staff(Audience viewer, CommandSender sender, Match match) {\n     // List of online staff based off of permission\n     List<Component> onlineStaff =\n         match.getPlayers().stream()\n-            .filter(player -> player.getBukkit().hasPermission(Permissions.STAFF))\n-            .map(player -> player.getStyledName(NameStyle.FANCY))\n+            .filter(\n+                player ->\n+                    (player.getBukkit().hasPermission(Permissions.STAFF)\n+                        && (!player.isVanished() || sender.hasPermission(Permissions.STAFF))))\n+            .map(p -> p.getName(NameStyle.VERBOSE))\n             .collect(Collectors.toList());\n \n     // FORMAT: Online Staff ({count}): {names}\n     Component staffCount =\n-        new PersonalizedText(Integer.toString(onlineStaff.size()))\n-            .color(onlineStaff.isEmpty() ? ChatColor.RED : ChatColor.AQUA);\n+        TextComponent.of(Integer.toString(onlineStaff.size()))\n+            .color(onlineStaff.isEmpty() ? TextColor.RED : TextColor.AQUA);\n \n     Component content =\n         onlineStaff.isEmpty()\n-            ? new PersonalizedTranslatable(\"moderation.staff.empty\")\n-                .getPersonalizedText()\n-                .color(ChatColor.RED)\n-            : new Component(\n-                Components.join(new PersonalizedText(\", \").color(ChatColor.GRAY), onlineStaff));\n+            ? TranslatableComponent.of(\"moderation.staff.empty\")\n+            : TextComponent.join(TextComponent.of(\", \", TextColor.GRAY), onlineStaff);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzQxMg==", "bodyText": "Can we use the page translations we have? It's either under command or misc.", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157412", "createdAt": "2020-05-03T20:42:59Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -546,30 +532,27 @@ public void alts(\n       int pages = (altAccounts.size() + perPage - 1) / perPage;\n \n       Component pageNum =\n-          new PersonalizedTranslatable(\n-                  \"command.simplePageHeader\",\n-                  new PersonalizedText(Integer.toString(page)).color(ChatColor.DARK_AQUA),\n-                  new PersonalizedText(Integer.toString(pages)).color(ChatColor.DARK_AQUA))\n-              .getPersonalizedText()\n-              .color(ChatColor.GRAY);\n+          TranslatableComponent.of(\"command.simplePageHeader\", TextColor.GRAY)\n+              .args(\n+                  TextComponent.of(Integer.toString(page), TextColor.DARK_AQUA),\n+                  TextComponent.of(Integer.toString(pages), TextColor.DARK_AQUA));\n \n       Component headerText =\n-          new PersonalizedTranslatable(\"moderation.alts.header\")\n-              .getPersonalizedText()\n-              .color(ChatColor.DARK_AQUA);\n+          TranslatableComponent.of(\"moderation.alts.header\", TextColor.DARK_AQUA);\n \n       Component header =\n-          new PersonalizedText(\n-              headerText,\n-              new PersonalizedText(\" (\").color(ChatColor.GRAY),\n-              new PersonalizedText(Integer.toString(altAccounts.size())).color(ChatColor.DARK_AQUA),\n-              new PersonalizedText(\") \u00bb Page \").color(ChatColor.GRAY),\n-              pageNum);\n+          TextComponent.builder()\n+              .append(headerText)\n+              .append(\" (\", TextColor.GRAY)\n+              .append(Integer.toString(altAccounts.size()), TextColor.DARK_AQUA)\n+              .append(\") \u00bb Page \", TextColor.GRAY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 470}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzYxMg==", "bodyText": "I would modify Audience to add showTitle and the hotbar with the new components. Make them defaults and use TextTranslations", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157612", "createdAt": "2020-05-03T20:44:40Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -824,71 +780,74 @@ public static String formatPunishmentScreen(\n     List<Component> lines = Lists.newArrayList();\n \n     Component header =\n-        new PersonalizedText(\n+        TextComponent.of(\n             ComponentUtils.horizontalLineHeading(\n                 PGMConfig.Moderation.getServerName(), ChatColor.DARK_GRAY));\n-\n     Component footer =\n-        new PersonalizedText(\n+        TextComponent.of(\n             ComponentUtils.horizontalLine(ChatColor.DARK_GRAY, ComponentUtils.MAX_CHAT_WIDTH));\n \n     lines.add(header); // Header Line (server name) - START\n-    lines.add(Components.blank());\n+    lines.add(TextComponent.empty());\n     lines.add(type.getScreenComponent(formatPunishmentReason(reason))); // The reason\n-    lines.add(Components.blank());\n+    lines.add(TextComponent.empty());\n \n     // If punishment expires, inform user when\n     if (expires != null) {\n       Component timeLeft =\n-          PeriodFormats.briefNaturalApproximate(java.time.Duration.ofSeconds(expires.getSeconds()));\n+          TextComponent.of(\n+              ComponentRenderers.toLegacyText(\n+                  PeriodFormats.briefNaturalApproximate(\n+                      java.time.Duration.ofSeconds(expires.getSeconds())),\n+                  Bukkit.getConsoleSender()));\n       lines.add(\n-          new PersonalizedTranslatable(\"moderation.screen.expires\", timeLeft)\n-              .getPersonalizedText()\n-              .color(ChatColor.GRAY));\n-      lines.add(Components.blank());\n+          TranslatableComponent.of(\"moderation.screen.expires\", TextColor.GRAY).args(timeLeft));\n+      lines.add(TextComponent.empty());\n     }\n \n-    // Staff sign-off\n-    lines.add(\n-        new PersonalizedTranslatable(\"moderation.screen.signoff\", punisher)\n-            .getPersonalizedText()\n-            .color(ChatColor.GRAY)); // The sign-off of who performed the punishment\n+    // Staff sign-off - who performed the punishment\n+    lines.add(TranslatableComponent.of(\"moderation.screen.signoff\", TextColor.GRAY).args(punisher));\n \n     // Link to rules for review by player\n     if (PGMConfig.Moderation.isRuleLinkVisible()) {\n-      Component rules = new PersonalizedText(PGMConfig.Moderation.getRulesLink());\n+      Component rules = TextComponent.of(PGMConfig.Moderation.getRulesLink());\n \n-      lines.add(Components.blank());\n+      lines.add(TextComponent.empty());\n       lines.add(\n-          new PersonalizedTranslatable(\"moderation.screen.rulesLink\", rules)\n-              .getPersonalizedText()\n-              .color(ChatColor.GRAY)); // A link to the rules\n+          TranslatableComponent.of(\"moderation.screen.rulesLink\", TextColor.GRAY)\n+              .args(rules)); // Link to rules\n     }\n \n     // Configurable last line (for appeal message or etc)\n     if (PGMConfig.Moderation.isAppealVisible() && type.equals(PunishmentType.BAN)) {\n-      lines.add(Components.blank());\n-      lines.add(new PersonalizedText(PGMConfig.Moderation.getAppealMessage()));\n+      lines.add(TextComponent.empty());\n+      lines.add(TextComponent.of(PGMConfig.Moderation.getAppealMessage()));\n     }\n \n-    lines.add(Components.blank());\n+    lines.add(TextComponent.empty());\n     lines.add(footer); // Footer line - END\n \n-    return Components.join(new PersonalizedText(\"\\n\" + ChatColor.RESET), lines).toLegacyText();\n+    return TextTranslations.translateLegacy(\n+        TextComponent.join(TextComponent.of(\"\\n\" + ChatColor.RESET), lines),\n+        null); // TODO add viewer\n   }\n \n   /*\n    * Sends a formatted title and plays a sound warning a user of their actions\n    */\n   private void sendWarning(MatchPlayer target, String reason) {\n-    Component titleWord =\n-        new PersonalizedTranslatable(\"misc.warning\")\n-            .getPersonalizedText()\n-            .color(ChatColor.DARK_RED);\n-    Component title = new PersonalizedText(WARN_SYMBOL, titleWord, WARN_SYMBOL);\n-    Component subtitle = formatPunishmentReason(reason).color(ChatColor.GOLD);\n-\n-    target.showTitle(title, subtitle, 5, 200, 10);\n+    Component titleWord = TranslatableComponent.of(\"misc.warning\", TextColor.DARK_RED);\n+    Component title =\n+        TextComponent.builder().append(WARN_SYMBOL).append(titleWord).append(WARN_SYMBOL).build();\n+    Component subtitle = formatPunishmentReason(reason).color(TextColor.GOLD);\n+\n+    // TODO: Upgrade show title to new text\n+    tc.oc.pgm.util.component.Component oldTitle =\n+        new PersonalizedText(TextTranslations.translateLegacy(title, target.getBukkit()));\n+    tc.oc.pgm.util.component.Component oldSubTitle =\n+        new PersonalizedText(TextTranslations.translateLegacy(subtitle, target.getBukkit()));\n+\n+    target.showTitle(oldTitle, oldSubTitle, 5, 200, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 817}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzYzOA==", "bodyText": "Just use time here?", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157638", "createdAt": "2020-05-03T20:45:07Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -980,12 +936,14 @@ public Component getPunisher() {\n \n     public Component getHoverMessage() {\n       Component timeAgo =\n-          PeriodFormats.relativePastApproximate(java.time.Instant.ofEpochMilli(time.toEpochMilli()))\n-              .color(ChatColor.DARK_AQUA);\n-\n-      return new PersonalizedTranslatable(\"moderation.similarIP.hover\", getPunisher(), timeAgo)\n-          .getPersonalizedText()\n-          .color(ChatColor.GRAY);\n+          TextComponent.of(\n+              ComponentRenderers.toLegacyText(\n+                  PeriodFormats.relativePastApproximate(\n+                          java.time.Instant.ofEpochMilli(time.toEpochMilli()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 882}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzY5Nw==", "bodyText": "misc.unknown I believe exists", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157697", "createdAt": "2020-05-03T20:45:45Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ReportCommands.java", "diffHunk": "@@ -149,98 +144,115 @@ public void reportHistory(\n     if (target != null) {\n       reportList =\n           reportList.stream()\n-              .filter(r -> r.getId().equalsIgnoreCase(target))\n+              .filter(r -> r.getTargetName(match).equalsIgnoreCase(target))\n               .collect(Collectors.toList());\n     }\n \n     Collections.sort(reportList); // Sort list\n     Collections.reverse(reportList); // Reverse so most recent show up first\n \n-    Component headerResultCount =\n-        new PersonalizedText(Long.toString(reportList.size())).color(ChatColor.RED);\n+    Component headerResultCount = TextComponent.of(Long.toString(reportList.size()), TextColor.RED);\n \n     int perPage = 6;\n     int pages = (reportList.size() + perPage - 1) / perPage;\n \n     Component pageNum =\n-        new PersonalizedTranslatable(\n-                \"command.simplePageHeader\",\n-                new PersonalizedText(Integer.toString(page)).color(ChatColor.RED),\n-                new PersonalizedText(Integer.toString(pages)).color(ChatColor.RED))\n-            .add(ChatColor.AQUA);\n+        TranslatableComponent.of(\"command.simplePageHeader\", TextColor.AQUA)\n+            .args(\n+                TextComponent.of(Integer.toString(page), TextColor.RED),\n+                TextComponent.of(Integer.toString(pages), TextColor.RED));\n \n     Component header =\n-        new PersonalizedText(\n-            new PersonalizedTranslatable(\"moderation.reports.header\", headerResultCount, pageNum)\n-                .getPersonalizedText()\n-                .color(ChatColor.GRAY),\n-            new PersonalizedText(\" (\"),\n-            headerResultCount,\n-            new PersonalizedText(\") \u00bb \"),\n-            pageNum);\n+        TranslatableComponent.of(\"moderation.reports.header\", TextColor.GRAY)\n+            .args(headerResultCount, pageNum)\n+            .append(\n+                TextComponent.of(\" (\")\n+                    .append(headerResultCount)\n+                    .append(TextComponent.of(\") \u00bb \"))\n+                    .append(pageNum));\n \n     Component formattedHeader =\n-        new PersonalizedText(\n+        TextComponent.of(\n             ComponentUtils.horizontalLineHeading(\n-                ComponentRenderers.toLegacyText(header, sender), ChatColor.DARK_GRAY));\n+                TextTranslations.translateLegacy(header, sender), ChatColor.DARK_GRAY));\n \n     new PrettyPaginatedComponentResults<Report>(formattedHeader, perPage) {\n       @Override\n       public Component format(Report data, int index) {\n \n         Component reporter =\n-            new PersonalizedTranslatable(\"moderation.reports.hover\", data.getSenderName())\n-                .color(ChatColor.GRAY);\n+            TranslatableComponent.of(\"moderation.reports.hover\", TextColor.GRAY)\n+                .args(data.getSenderComponent(match));\n \n         Component timeAgo =\n-            PeriodFormats.relativePastApproximate(\n-                    java.time.Instant.ofEpochMilli(data.getTimeSent().toEpochMilli()))\n-                .color(ChatColor.DARK_AQUA);\n-\n-        return new PersonalizedText(\n-            new PersonalizedText(timeAgo.render(sender))\n-                .hoverEvent(Action.SHOW_TEXT, reporter.render(sender)),\n-            new PersonalizedText(\": \").color(ChatColor.GRAY),\n-            data.getTargetName(),\n-            new PersonalizedText(\" \u00ab \").color(ChatColor.YELLOW),\n-            new PersonalizedText(data.getReason()).italic(true).color(ChatColor.WHITE));\n+            TextComponent.of(\n+                ComponentRenderers.toLegacyText(\n+                    PeriodFormats.relativePastApproximate(\n+                            Instant.ofEpochMilli(data.getTimeSent().toEpochMilli()))\n+                        .color(ChatColor.DARK_AQUA),\n+                    sender));\n+\n+        return TextComponent.builder()\n+            .append(timeAgo.hoverEvent(HoverEvent.of(Action.SHOW_TEXT, reporter)))\n+            .append(\": \", TextColor.GRAY)\n+            .append(data.getTargetComponent(match))\n+            .append(\" \u00ab \", TextColor.YELLOW)\n+            .append(data.getReason(), TextColor.WHITE, TextDecoration.ITALIC)\n+            .build();\n       }\n     }.display(audience, reportList, page);\n   }\n \n-  public static class Report implements Comparable<Report> {\n-    private final String id;\n+  private class Report implements Comparable<Report> {\n+    private final UUID targetUUID;\n+    private final UUID senderUUID;\n     private final String reason;\n-    private final Component targetName;\n-    private final Component sender;\n     private final Instant timeSent;\n \n-    public Report(String id, String reason, Component targetName, Component sender) {\n-      this.id = id;\n+    public Report(UUID target, UUID sender, String reason) {\n+      this.targetUUID = target;\n+      this.senderUUID = sender;\n       this.reason = reason;\n-      this.targetName = targetName;\n-      this.sender = sender;\n       this.timeSent = Instant.now();\n     }\n \n-    public String getId() {\n-      return id;\n+    public UUID getTarget() {\n+      return targetUUID;\n+    }\n+\n+    public UUID getSender() {\n+      return senderUUID;\n     }\n \n     public String getReason() {\n-      return reason;\n+      return reason.trim();\n     }\n \n-    public Component getTargetName() {\n-      return targetName;\n+    public Instant getTimeSent() {\n+      return timeSent;\n     }\n \n-    public Component getSenderName() {\n-      return sender;\n+    public String getTargetName(Match match) {\n+      return database.getUsername(targetUUID).getName();\n     }\n \n-    public Instant getTimeSent() {\n-      return timeSent;\n+    public Component getTargetComponent(Match match) {\n+      return getUsername(getTarget(), match);\n+    }\n+\n+    public Component getSenderComponent(Match match) {\n+      return getUsername(getSender(), match);\n+    }\n+\n+    private Component getUsername(UUID uuid, Match match) {\n+      MatchPlayer player = match.getPlayer(targetUUID);\n+      Component name = TextComponent.of(\"Unknown\", TextColor.AQUA, TextDecoration.ITALIC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 310}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NzkzMg==", "bodyText": "/msg should be a {0}", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157932", "createdAt": "2020-05-03T20:47:03Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/command.properties", "diffHunk": "@@ -71,4 +71,9 @@ command.list.online = Total Online: {0}\n \n command.list.teams = Teams:\n \n-command.list.participants = Participants\n\\ No newline at end of file\n+command.list.participants = Participants\n+\n+command.message.noReply = Did not find a message to reply to, use /msg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1Nzk2Mg==", "bodyText": "lowercase, no periods", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419157962", "createdAt": "2020-05-03T20:47:19Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -50,6 +50,12 @@ map.setNext = Next map set to {0} by {1}\n \n map.setNext.confirm = You may not set the next map when a restart is queued. Use -f to override.\n \n+# {0} = player name (who unset the map)\n+# {1} = Name of map that was unset.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1ODAwMQ==", "bodyText": "Same as map.noNextMap?", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419158001", "createdAt": "2020-05-03T20:47:41Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -50,6 +50,12 @@ map.setNext = Next map set to {0} by {1}\n \n map.setNext.confirm = You may not set the next map when a restart is queued. Use -f to override.\n \n+# {0} = player name (who unset the map)\n+# {1} = Name of map that was unset.\n+map.setNext.revert = {0} has removed {1} as the next map.\n+\n+map.setNext.none = No map has been set next.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1ODAyNg==", "bodyText": "Generally, no periods in translation keys", "url": "https://github.com/PGMDev/PGM/pull/453#discussion_r419158026", "createdAt": "2020-05-03T20:48:06Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -89,10 +95,15 @@ pool.title = Map Pools\n \n pool.noPoolMatch = No map pools matched query\n \n+pool.noDynamic = No dynamic pool could be found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "632d3c22453646894c55d06011aff485d7f3597e"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9225d8ccdc447947bcd45abd446b3e9b636caf8d", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/9225d8ccdc447947bcd45abd446b3e9b636caf8d", "committedDate": "2020-05-04T07:31:02Z", "message": "Multiple fixes for various moderation features\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77072af543b90356a80732e09d187936b337a546", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/77072af543b90356a80732e09d187936b337a546", "committedDate": "2020-05-04T07:31:03Z", "message": "Update with more fixes\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a076b49d42edf150b71227ee9c5c006016bf130", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/1a076b49d42edf150b71227ee9c5c006016bf130", "committedDate": "2020-05-04T07:30:41Z", "message": "Update with more fixes\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}, "afterCommit": {"oid": "77072af543b90356a80732e09d187936b337a546", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/77072af543b90356a80732e09d187936b337a546", "committedDate": "2020-05-04T07:31:03Z", "message": "Update with more fixes\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "982072b61d68977e7d0bfba71598de3d9918181a", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/982072b61d68977e7d0bfba71598de3d9918181a", "committedDate": "2020-05-05T06:56:40Z", "message": "Switch /freeze and /vanish to toggle modes\nThis removes /unfreeze and /unvanish in favor of a single command\nAlso:\n* Migrated MapPoolCommands to new text library\n* Fixed warning color bug\n* Added new methods to TextFormatter\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODYxNzc3", "url": "https://github.com/PGMDev/PGM/pull/453#pullrequestreview-405861777", "createdAt": "2020-05-05T14:46:28Z", "commit": {"oid": "982072b61d68977e7d0bfba71598de3d9918181a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODYyMzc1", "url": "https://github.com/PGMDev/PGM/pull/453#pullrequestreview-405862375", "createdAt": "2020-05-05T14:47:06Z", "commit": {"oid": "982072b61d68977e7d0bfba71598de3d9918181a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 492, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}