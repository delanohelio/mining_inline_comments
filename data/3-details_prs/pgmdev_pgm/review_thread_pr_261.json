{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTYyNjQz", "number": 261, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMjo1NToxM1rODasNUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMzo0Njo1MFrODasuaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzEzODczOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMjo1NToxM1rOFhxqkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzowNjozOVrOFhxsLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MTA0MA==", "bodyText": "remove the own-kill check if we have a same-party check", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370961040", "createdAt": "2020-01-25T22:55:13Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -55,7 +55,9 @@ private void playRaindrop(Competitor competitor) {\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null && !killer.getId().equals(victim.getId())) {\n+    if (killer != null\n+        && !killer.getId().equals(victim.getId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d6825fd26737d7680d8aead43836992559f020"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MTQ1Mg==", "bodyText": "Yeah thought about it", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370961452", "createdAt": "2020-01-25T23:06:39Z", "author": {"login": "VladyslavLukyanenko"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -55,7 +55,9 @@ private void playRaindrop(Competitor competitor) {\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null && !killer.getId().equals(victim.getId())) {\n+    if (killer != null\n+        && !killer.getId().equals(victim.getId())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MTA0MA=="}, "originalCommit": {"oid": "54d6825fd26737d7680d8aead43836992559f020"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzE1MDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzozMTo0NFrOFhxwXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzozMjozMVrOFhxwdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjUyNQ==", "bodyText": "Any reason not to use killer.getParty().equals(victim.getParty())?", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370962525", "createdAt": "2020-01-25T23:31:44Z", "author": {"login": "Meeples10"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -32,51 +32,56 @@ public SoundsMatchModule createMatchModule(Match match) throws ModuleLoadExcepti\n   }\n \n   private static final Sound RAINDROP_SOUND = new Sound(\"random.levelup\", 1f, 1.5f);\n+  private static final Sound ENDERMAN_SCREAM = new Sound(\"mob.endermen.scream\", 1f, 1.5f);\n \n   public SoundsMatchModule(Match match) {\n     super(match);\n   }\n \n-  private void playRaindrop(MatchPlayer player) {\n+  private void playSound(MatchPlayer player, Sound sound) {\n     if (player.getSettings().getValue(SettingKey.SOUNDS).equals(SettingValue.SOUNDS_ON)) {\n-      player.playSound(RAINDROP_SOUND);\n+      player.playSound(sound);\n     }\n   }\n \n-  private void playRaindrop(MatchPlayerState playerState) {\n-    playerState.getPlayer().ifPresent(this::playRaindrop);\n+  private void playSound(MatchPlayerState playerState, Sound sound) {\n+    playerState.getPlayer().ifPresent(player -> playSound(player, sound));\n   }\n \n-  private void playRaindrop(Competitor competitor) {\n-    competitor.getPlayers().forEach(this::playRaindrop);\n+  private void playSound(Competitor competitor, Sound sound) {\n+    competitor.getPlayers().forEach(player -> playSound(player, sound));\n   }\n \n   @EventHandler(priority = EventPriority.MONITOR)\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null\n-        && !killer.getId().equals(victim.getId())\n-        && !killer.getParty().getName().equals(victim.getParty().getName())) {\n-      playRaindrop(killer);\n+    if (killer != null) {\n+      if (killer.getId().equals(victim.getId())) {\n+\n+      } else if (killer.getParty().getName().equals(victim.getParty().getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3857dbb485273e111acdf8e23fec6703e996a297"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjU0OQ==", "bodyText": "I can use that actually thanks for the heads up.", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370962549", "createdAt": "2020-01-25T23:32:31Z", "author": {"login": "VladyslavLukyanenko"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -32,51 +32,56 @@ public SoundsMatchModule createMatchModule(Match match) throws ModuleLoadExcepti\n   }\n \n   private static final Sound RAINDROP_SOUND = new Sound(\"random.levelup\", 1f, 1.5f);\n+  private static final Sound ENDERMAN_SCREAM = new Sound(\"mob.endermen.scream\", 1f, 1.5f);\n \n   public SoundsMatchModule(Match match) {\n     super(match);\n   }\n \n-  private void playRaindrop(MatchPlayer player) {\n+  private void playSound(MatchPlayer player, Sound sound) {\n     if (player.getSettings().getValue(SettingKey.SOUNDS).equals(SettingValue.SOUNDS_ON)) {\n-      player.playSound(RAINDROP_SOUND);\n+      player.playSound(sound);\n     }\n   }\n \n-  private void playRaindrop(MatchPlayerState playerState) {\n-    playerState.getPlayer().ifPresent(this::playRaindrop);\n+  private void playSound(MatchPlayerState playerState, Sound sound) {\n+    playerState.getPlayer().ifPresent(player -> playSound(player, sound));\n   }\n \n-  private void playRaindrop(Competitor competitor) {\n-    competitor.getPlayers().forEach(this::playRaindrop);\n+  private void playSound(Competitor competitor, Sound sound) {\n+    competitor.getPlayers().forEach(player -> playSound(player, sound));\n   }\n \n   @EventHandler(priority = EventPriority.MONITOR)\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null\n-        && !killer.getId().equals(victim.getId())\n-        && !killer.getParty().getName().equals(victim.getParty().getName())) {\n-      playRaindrop(killer);\n+    if (killer != null) {\n+      if (killer.getId().equals(victim.getId())) {\n+\n+      } else if (killer.getParty().getName().equals(victim.getParty().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjUyNQ=="}, "originalCommit": {"oid": "3857dbb485273e111acdf8e23fec6703e996a297"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzE1Mjg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzozOToyM1rOFhxxiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMzozOToyM1rOFhxxiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjgyNQ==", "bodyText": "Let's not do this", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370962825", "createdAt": "2020-01-25T23:39:23Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -32,49 +32,56 @@ public SoundsMatchModule createMatchModule(Match match) throws ModuleLoadExcepti\n   }\n \n   private static final Sound RAINDROP_SOUND = new Sound(\"random.levelup\", 1f, 1.5f);\n+  private static final Sound ENDERMAN_SCREAM = new Sound(\"mob.endermen.scream\", 1f, 1.5f);\n \n   public SoundsMatchModule(Match match) {\n     super(match);\n   }\n \n-  private void playRaindrop(MatchPlayer player) {\n+  private void playSound(MatchPlayer player, Sound sound) {\n     if (player.getSettings().getValue(SettingKey.SOUNDS).equals(SettingValue.SOUNDS_ON)) {\n-      player.playSound(RAINDROP_SOUND);\n+      player.playSound(sound);\n     }\n   }\n \n-  private void playRaindrop(MatchPlayerState playerState) {\n-    playerState.getPlayer().ifPresent(this::playRaindrop);\n+  private void playSound(MatchPlayerState playerState, Sound sound) {\n+    playerState.getPlayer().ifPresent(player -> playSound(player, sound));\n   }\n \n-  private void playRaindrop(Competitor competitor) {\n-    competitor.getPlayers().forEach(this::playRaindrop);\n+  private void playSound(Competitor competitor, Sound sound) {\n+    competitor.getPlayers().forEach(player -> playSound(player, sound));\n   }\n \n   @EventHandler(priority = EventPriority.MONITOR)\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null && !killer.getId().equals(victim.getId())) {\n-      playRaindrop(killer);\n+    if (killer != null) {\n+      if (killer.getId().equals(victim.getId())) {\n+\n+      } else if (killer.getParty().equals(victim.getParty())) {\n+        playSound(killer, ENDERMAN_SCREAM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c82c10968168fb57fcdac589aa18894934b54f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzIwNTE4OnYy", "diffSide": "RIGHT", "path": "src/main/i18n/templates/strings.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjozMToyN1rOFhyK8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjozMToyN1rOFhyK8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTMzMA==", "bodyText": "I think we should keep the death. key for DeathMessageBuilder exclusively?", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370969330", "createdAt": "2020-01-26T02:31:27Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/i18n/templates/strings.properties", "diffHunk": "@@ -69,6 +69,7 @@ death.predictedSuffix = (predicted)\n # {3} = mob\n # {4} = distance in blocks\n \n+death.friendlyfire.warning = Killing your teammates intentionally will get you punished", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367cffead3ecc42f70d9d7a336592653f6370e7c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzIyMzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMzo0Njo1MFrOFhyTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMzo0Njo1MFrOFhyTvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MTU4MQ==", "bodyText": "It is not PGM's duty to moderate, and not every same-team kill is bad. Accidents can happen and there's no need to play enderman scream & warn them they're getting punished.", "url": "https://github.com/PGMDev/PGM/pull/261#discussion_r370971581", "createdAt": "2020-01-26T03:46:50Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/modules/SoundsMatchModule.java", "diffHunk": "@@ -32,49 +33,57 @@ public SoundsMatchModule createMatchModule(Match match) throws ModuleLoadExcepti\n   }\n \n   private static final Sound RAINDROP_SOUND = new Sound(\"random.levelup\", 1f, 1.5f);\n+  private static final Sound ENDERMAN_SCREAM = new Sound(\"mob.endermen.scream\", 1f, 1.5f);\n \n   public SoundsMatchModule(Match match) {\n     super(match);\n   }\n \n-  private void playRaindrop(MatchPlayer player) {\n+  private void playSound(MatchPlayer player, Sound sound) {\n     if (player.getSettings().getValue(SettingKey.SOUNDS).equals(SettingValue.SOUNDS_ON)) {\n-      player.playSound(RAINDROP_SOUND);\n+      player.playSound(sound);\n     }\n   }\n \n-  private void playRaindrop(MatchPlayerState playerState) {\n-    playerState.getPlayer().ifPresent(this::playRaindrop);\n+  private void playSound(MatchPlayerState playerState, Sound sound) {\n+    playerState.getPlayer().ifPresent(player -> playSound(player, sound));\n   }\n \n-  private void playRaindrop(Competitor competitor) {\n-    competitor.getPlayers().forEach(this::playRaindrop);\n+  private void playSound(Competitor competitor, Sound sound) {\n+    competitor.getPlayers().forEach(player -> playSound(player, sound));\n   }\n \n   @EventHandler(priority = EventPriority.MONITOR)\n   public void onMatchPlayerDeath(MatchPlayerDeathEvent event) {\n     ParticipantState killer = event.getKiller();\n     MatchPlayer victim = event.getVictim();\n-    if (killer != null && !killer.getId().equals(victim.getId())) {\n-      playRaindrop(killer);\n+    if (killer != null) {\n+      if (!killer.getId().equals(victim.getId())) {\n+        if (killer.getParty().equals(victim.getParty())) {\n+          playSound(killer, ENDERMAN_SCREAM);\n+          killer.sendWarning(new PersonalizedTranslatable(\"death.friendlyfire.warning\"), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367cffead3ecc42f70d9d7a336592653f6370e7c"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1118, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}