{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjQ1NDEw", "number": 499, "title": "Scoreboard can show more CTW teams and wools per team.", "bodyText": "This pull request comprises three changes to how the scoreboard displays CTW data.\n\nIf a CTW map has more than five teams, there are no empty scoreboard rows. This increases the amount of teams that can be shown.\nIf a team has more than five wools, only a single space is inserted between each wool. This increases the amount of wools that can be shown. This only applies when the scoreboard is displaying compact wools.\nWools now have an optional \"inline\" attribute. If at least one of a team's wools is set to inline=\"true\", that team's wools are shown on the same line as the team name. If this exceeds the maximum row length, spaces are inserted only between every two wools. The scoreboard is still reasonably readable in this mode.\n\nThe following shows a before and after with an 8 team CTW; each team needs to capture 7 wools. The only XML change is that the red team's wools are set as inline=\"true\".\nClick the pictures to see larger versions.\nBefore:\n\nAfter (match start):\n\nAfter (mid match):", "createdAt": "2020-05-23T09:01:11Z", "url": "https://github.com/PGMDev/PGM/pull/499", "merged": true, "mergeCommit": {"oid": "9e49b7fd725c04454457fd64cffd976559c9fb75"}, "closed": true, "closedAt": "2020-05-25T14:34:48Z", "author": {"login": "alexsosnovsky"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckAj5hAH2gAyNDIyMjQ1NDEwOjdkMzFhNGIxM2I5OGJhYTA4ZDRlYTEyOTEyNzg0NWFkM2RkODYzNGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckxBO3gFqTQxNzc1MDEyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d31a4b13b98baa08d4ea129127845ad3dd8634b", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/7d31a4b13b98baa08d4ea129127845ad3dd8634b", "committedDate": "2020-05-23T06:06:34Z", "message": "Scoreboard: No blank lines if a CTW map has >5 teams\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86a4dfdaa2bd29cb61aad444691a96dd49aba5d5", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/86a4dfdaa2bd29cb61aad444691a96dd49aba5d5", "committedDate": "2020-05-23T06:16:50Z", "message": "Scoreboard: If a team has to capture >5 wools, only 1 space is inserted between each.\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/2288e2badefa2d0683fdd0e98dffb716fb521634", "committedDate": "2020-05-23T08:45:50Z", "message": "Wools can fit on the team name's line on the scoreboard\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjYzNzM5", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417263739", "createdAt": "2020-05-23T09:06:18Z", "commit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwOTowNjoxOFrOGZoZSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwOTozMzozMFrOGZogEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyOTQxOQ==", "bodyText": "Being wool or not, shouldn't be the reason used to compact, See the isCompactWool method, what it defines is that wools should be compacted if they don't fit the scoreboard.", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429529419", "createdAt": "2020-05-23T09:06:18Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -221,6 +221,10 @@ private boolean isBlitz() {\n     return match.getModule(BlitzMatchModule.class) != null;\n   }\n \n+  private boolean isWool() {\n+    return match.getModule(WoolMatchModule.class) != null;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyOTUwMA==", "bodyText": "Make the \"isWool()\" into a \"isHighlyCompact()\" or something along the lines, don't use \"competitors with goals\" as your reason, make it the total rows being > MAX_ROWS even using the normally compact format", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429529500", "createdAt": "2020-05-23T09:07:31Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,15 +470,12 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDQ4NQ==", "bodyText": "Again, instead of basing this on amount of wools, base it off of if the characters will fit", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530485", "createdAt": "2020-05-23T09:22:49Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDY4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          if (wool.getDefinition().isInline() == true) {\n          \n          \n            \n                          if (wool.getDefinition().isInline()) {", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530680", "createdAt": "2020-05-23T09:25:49Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDg0MQ==", "bodyText": "I really do not think that this should be changed.\nThat not all teams & their wools will fit is a shame, but joining team name & objectives is a worse solution than the problem itself, i'd just accept that the last teams' wools (wich, because they should be sorted, should be the losing one) won't be visible in scoreboard and only visible in /match", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530841", "createdAt": "2020-05-23T09:28:15Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,15 +470,12 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDg3MQ==", "bodyText": "See above comment for all of this inline functionality", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530871", "createdAt": "2020-05-23T09:29:03Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {\n+                  woolText += \" \";\n+                  if (index % 2 == 0) {\n+                    altText += \" \";\n+                  }\n+                  index += 1;\n+                } else {\n+                  woolText += \"   \";\n+                }\n               }\n               firstWool = false;\n               woolText += wool.renderSidebarStatusColor(competitor, viewingParty);\n               woolText += wool.renderSidebarStatusText(competitor, viewingParty);\n+              altText += wool.renderSidebarStatusColor(competitor, viewingParty);\n+              altText += wool.renderSidebarStatusText(competitor, viewingParty);\n             }\n           }\n \n-          rows.add(woolText);\n+          if (!inline) {\n+            // This team's wools are not inline; add a row for the team name\n+            rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+            // Add a row for the compact wools\n+            rows.add(woolText);\n+          } else {\n+            // Add team name & compact wools on a single line.\n+            String teamName = competitor.getStyledName(NameStyle.FANCY).render().toLegacyText();\n+            String inlineString = teamName + woolText;\n+            if (inlineString.length() <= 32) {\n+              rows.add(teamName + woolText);\n+            } else {\n+              inlineString = teamName + altText;\n+              if (inlineString.length() <= 32) {\n+                rows.add(teamName + altText);\n+              } else {\n+                rows.add(teamName + \" \" + altText.replaceAll(\"\\\\s\", \"\"));\n+              }\n+            }\n+          }\n \n         } else {\n+          // Wools are not compact; add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMTE1Mw==", "bodyText": "Adding a space every other wool looks extremely weird in the scoreboard, do either one or none, but don't toggle", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429531153", "createdAt": "2020-05-23T09:33:30Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {\n+                  woolText += \" \";\n+                  if (index % 2 == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjc3MzE2", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417277316", "createdAt": "2020-05-23T13:01:57Z", "commit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMzowMTo1N1rOGZpTrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMzowMTo1N1rOGZpTrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0NDM2Nw==", "bodyText": "Inlining looks really weird, I don't agree that we should allow that.", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429544367", "createdAt": "2020-05-23T13:01:57Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09beb74710d303003e8d8e451560442ffcd490cd", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/09beb74710d303003e8d8e451560442ffcd490cd", "committedDate": "2020-05-24T00:56:39Z", "message": "Remove inline functionality for the time being.\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e5c436313c831a0b05fe311f41736ee42be1d9", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/e4e5c436313c831a0b05fe311f41736ee42be1d9", "committedDate": "2020-05-24T01:45:15Z", "message": "Change how scoreboard spacing is determined\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/052aa7041aa89a1e46bab6d3bda0614329f12563", "committedDate": "2020-05-24T01:46:16Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzQwNDU1", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417340455", "createdAt": "2020-05-24T09:10:23Z", "commit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwOToxMDoyM1rOGZtpig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwOToxMDoyM1rOGZtpig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxNTQ5OA==", "bodyText": "You should use lambda here. Something like:\n(Goal a, Goal b) -> a.getName().compareToIgnoreCase(b.getName());", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429615498", "createdAt": "2020-05-24T09:10:23Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzcyNDM5", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417372439", "createdAt": "2020-05-24T16:21:53Z", "commit": {"oid": "e4e5c436313c831a0b05fe311f41736ee42be1d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoyMTo1M1rOGZv6YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoyMTo1M1rOGZv6YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjU3Nw==", "bodyText": "Leaving a small comment here mentioning why this is done could be helpful for future mantainers", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429652577", "createdAt": "2020-05-24T16:21:53Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -470,86 +473,61 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n-                }\n-              });\n-\n-          boolean inline = false;\n-          String altText = \" \";\n-          int index = 1;\n-          for (Goal goal : sortedWools) {\n-            if (goal instanceof MonumentWool && goal.isVisible()) {\n-              MonumentWool wool = (MonumentWool) goal;\n-              if (wool.getDefinition().isInline() == true) {\n-                inline = true;\n-              }\n-              if (!firstWool) {\n-                if (sortedWools.size() > 5) {\n-                  woolText += \" \";\n-                  if (index % 2 == 0) {\n-                    altText += \" \";\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });\n+\n+            boolean horizontalCompact =\n+                !((MAX_PREFIX + MAX_SUFFIX) < sortedWools.size() + 3 * (sortedWools.size() - 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e5c436313c831a0b05fe311f41736ee42be1d9"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzczNTc5", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417373579", "createdAt": "2020-05-24T16:39:16Z", "commit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjozOToxN1rOGZv_8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo0NTozMlrOGZwB0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDAwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean isSuperCompactWool() {\n          \n          \n            \n              private boolean isSuperCompact() {\n          \n      \n    \n    \n  \n\nMaybe this shouldn't be restricted to just compacting by wools, if other objectives need to show maybe it's worth removing the in-between-team lines in the scoreboard.\nObviously the method should change accordingly to add up non-wool objectives, one line for compacted wools, and one line for the space between teams", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654000", "createdAt": "2020-05-24T16:39:17Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -227,6 +227,11 @@ private boolean isCompactWool() {\n         && MAX_ROWS < wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size();\n   }\n \n+  private boolean isSuperCompactWool() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDE3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for (Competitor competitor : sortedCompetitors) {\n          \n          \n            \n                  for (Competitor competitor : sortedCompetitors) {\n          \n          \n            \n                      if (rows.size() + 2 >= MAX_ROWS) break; // No point in rendering the team at all, no space", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654179", "createdAt": "2020-05-24T16:41:33Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDIzMA==", "bodyText": "This condition is better handled above (before potentially adding the whitespace line), also prevents the whole code getting indented inwards by 1", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654230", "createdAt": "2020-05-24T16:42:23Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDQ2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!firstWool) {\n          \n          \n            \n                              if (horizontalCompact) {\n          \n          \n            \n                                woolText += \" \";\n          \n          \n            \n                              } else {\n          \n          \n            \n                                woolText += \"   \";\n          \n          \n            \n                              }\n          \n          \n            \n                            woolText += \" \";\n          \n          \n            \n                            if (!firstWool && !horizontalCompact) woolText += \" \";", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654465", "createdAt": "2020-05-24T16:45:23Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });\n+\n+            boolean horizontalCompact =\n+                !((MAX_PREFIX + MAX_SUFFIX) < sortedWools.size() + 3 * (sortedWools.size() - 1));\n+\n+            for (Goal goal : sortedWools) {\n+              if (goal instanceof MonumentWool && goal.isVisible()) {\n+                MonumentWool wool = (MonumentWool) goal;\n+                if (!firstWool) {\n+                  if (horizontalCompact) {\n+                    woolText += \" \";\n+                  } else {\n+                    woolText += \"   \";\n+                  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDQ4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String woolText = \" \";\n          \n          \n            \n                        String woolText = \"\";", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654480", "createdAt": "2020-05-24T16:45:32Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8308fa1c8b6089c5ece58b73395da4be86bdf0c8", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/8308fa1c8b6089c5ece58b73395da4be86bdf0c8", "committedDate": "2020-05-24T22:04:16Z", "message": "Reorganize some scoreboard logic\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de0f955f0f741868da100ece51cd198b3b6cf093", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/de0f955f0f741868da100ece51cd198b3b6cf093", "committedDate": "2020-05-24T22:47:20Z", "message": "Super Compact check considers non-wool objectives as well\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff090465e0d057ec561c99c247457f1f15131e9", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/8ff090465e0d057ec561c99c247457f1f15131e9", "committedDate": "2020-05-24T22:47:38Z", "message": "Merge branch 'master' of github.com:alexsosnovsky/PGM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDQyMjEz", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417442213", "createdAt": "2020-05-25T03:46:11Z", "commit": {"oid": "8ff090465e0d057ec561c99c247457f1f15131e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzo0NjoxMVrOGZ0C4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzo0NjoxMVrOGZ0C4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMDI4OA==", "bodyText": "I think you could use GoalMatchModule to get all the goals without checking each module.", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429720288", "createdAt": "2020-05-25T03:46:11Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -221,10 +225,39 @@ private boolean isBlitz() {\n     return match.getModule(BlitzMatchModule.class) != null;\n   }\n \n+  // Determines if wool objectives should be given their own rows, or all shown on 1 row.\n   private boolean isCompactWool() {\n     WoolMatchModule wmm = match.getModule(WoolMatchModule.class);\n     return wmm != null\n-        && MAX_ROWS < wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size();\n+        && !(wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size() < MAX_ROWS);\n+  }\n+\n+  // Determines if all the map objectives can fit onto the scoreboard with empty rows in between.\n+  private boolean isSuperCompact(Set<Competitor> competitorsWithGoals) {\n+    int rowsUsed = competitorsWithGoals.size() * 2 - 1;\n+\n+    WoolMatchModule wmm = match.getModule(WoolMatchModule.class);\n+    if (wmm != null) {\n+      if (isCompactWool()) {\n+        rowsUsed += wmm.getWools().keySet().size() * 2 - 1;\n+      } else {\n+        rowsUsed += wmm.getWools().values().size();\n+      }\n+    }\n+\n+    ControlPointMatchModule cpmm = match.getModule(ControlPointMatchModule.class);\n+    if (cpmm != null) rowsUsed += cpmm.getControlPoints().size();\n+\n+    FlagMatchModule fmm = match.getModule(FlagMatchModule.class);\n+    if (fmm != null) rowsUsed += fmm.getFlags().size();\n+\n+    CoreMatchModule cmm = match.getModule(CoreMatchModule.class);\n+    if (cmm != null) rowsUsed += cmm.getCores().size();\n+\n+    DestroyableMatchModule dmm = match.getModule(DestroyableMatchModule.class);\n+    if (dmm != null) rowsUsed += dmm.getDestroyables().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff090465e0d057ec561c99c247457f1f15131e9"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55648ad91d0e1f1415af26efbc339f4d54c639c3", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/55648ad91d0e1f1415af26efbc339f4d54c639c3", "committedDate": "2020-05-25T04:59:10Z", "message": "Super Compact check uses GoalMatchModule\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDY0ODg5", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417464889", "createdAt": "2020-05-25T05:36:07Z", "commit": {"oid": "55648ad91d0e1f1415af26efbc339f4d54c639c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTozNjowN1rOGZ1J9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTozNjoxOFrOGZ1KGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczODQ4NA==", "bodyText": "Remove this.", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429738484", "createdAt": "2020-05-25T05:36:07Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointMatchModule.java", "diffHunk": "@@ -36,4 +36,8 @@ public void unload() {\n     }\n     HandlerList.unregisterAll(this.announcer);\n   }\n+\n+  public List<ControlPoint> getControlPoints() {\n+    return controlPoints;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55648ad91d0e1f1415af26efbc339f4d54c639c3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczODUyMA==", "bodyText": "And remove this.", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429738520", "createdAt": "2020-05-25T05:36:18Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/core/CoreMatchModule.java", "diffHunk": "@@ -152,4 +152,8 @@ public void onObjectiveModeSwitch(final ObjectiveModeChangeEvent event) {\n       }\n     }\n   }\n+\n+  public List<Core> getCores() {\n+    return cores;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55648ad91d0e1f1415af26efbc339f4d54c639c3"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b", "author": {"user": {"login": "alexsosnovsky", "name": "Alex Sosnovsky"}}, "url": "https://github.com/PGMDev/PGM/commit/5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b", "committedDate": "2020-05-25T05:42:03Z", "message": "Remove unused methods\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDk1Mjc0", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417495274", "createdAt": "2020-05-25T06:59:51Z", "commit": {"oid": "5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzUwMTIz", "url": "https://github.com/PGMDev/PGM/pull/499#pullrequestreview-417750123", "createdAt": "2020-05-25T14:34:03Z", "commit": {"oid": "5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 510, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}