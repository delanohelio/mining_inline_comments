{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MjQ3NDg2", "number": 627, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1Nzo0M1rOEdheEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOTowMzoxOFrOEdkVmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzkyNTI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo1Nzo0M1rOHIuSJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzo1MDo0OVrOHJPbXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwODk2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (customVoteMaps.size() < VotingPool.MAX_VOTE_OPTIONS) {\n          \n          \n            \n                if (customVoteMaps.size() <= VotingPool.MAX_VOTE_OPTIONS) {\n          \n      \n    \n    \n  \n\nOr else max would be 4", "url": "https://github.com/PGMDev/PGM/pull/627#discussion_r478908966", "createdAt": "2020-08-28T07:57:43Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package tc.oc.pgm.rotation;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import java.util.Map;\n+import java.util.Set;\n+import tc.oc.pgm.api.map.MapInfo;\n+\n+public class VotingPoolOptions {\n+\n+  // Set of maps to be used in custom vote selection\n+  private Set<MapInfo> customVoteMaps;\n+\n+  // Whether custom map selection should replace existing entries\n+  private boolean replace;\n+\n+  public VotingPoolOptions() {\n+    this.customVoteMaps = Sets.newHashSet();\n+    this.replace = true;\n+  }\n+\n+  public boolean shouldOverride() {\n+    return customVoteMaps.size() >= VotingPool.MIN_CUSTOM_VOTE_OPTIONS && !replace;\n+  }\n+\n+  public boolean isReplace() {\n+    return replace;\n+  }\n+\n+  public boolean toggleMode() {\n+    this.replace = !replace;\n+    return replace;\n+  }\n+\n+  public boolean addVote(MapInfo map) {\n+    if (customVoteMaps.size() < VotingPool.MAX_VOTE_OPTIONS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c119cb0734d9d9237bbedf8a99e878e276c3e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MTk5OA==", "bodyText": "Exactly! 0-4 is 5 \ud83d\ude04", "url": "https://github.com/PGMDev/PGM/pull/627#discussion_r479451998", "createdAt": "2020-08-28T17:50:49Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package tc.oc.pgm.rotation;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import java.util.Map;\n+import java.util.Set;\n+import tc.oc.pgm.api.map.MapInfo;\n+\n+public class VotingPoolOptions {\n+\n+  // Set of maps to be used in custom vote selection\n+  private Set<MapInfo> customVoteMaps;\n+\n+  // Whether custom map selection should replace existing entries\n+  private boolean replace;\n+\n+  public VotingPoolOptions() {\n+    this.customVoteMaps = Sets.newHashSet();\n+    this.replace = true;\n+  }\n+\n+  public boolean shouldOverride() {\n+    return customVoteMaps.size() >= VotingPool.MIN_CUSTOM_VOTE_OPTIONS && !replace;\n+  }\n+\n+  public boolean isReplace() {\n+    return replace;\n+  }\n+\n+  public boolean toggleMode() {\n+    this.replace = !replace;\n+    return replace;\n+  }\n+\n+  public boolean addVote(MapInfo map) {\n+    if (customVoteMaps.size() < VotingPool.MAX_VOTE_OPTIONS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwODk2Ng=="}, "originalCommit": {"oid": "4c2c119cb0734d9d9237bbedf8a99e878e276c3e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDE5ODM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODozOTozMlrOHIwzWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODozOTozMlrOHIwzWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk1MDIzNA==", "bodyText": "CustomVotingPoolOptions?\nI think it should reflect that it's only used for the custom overrides, since MapPoll holds the default poll", "url": "https://github.com/PGMDev/PGM/pull/627#discussion_r478950234", "createdAt": "2020-08-28T08:39:32Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package tc.oc.pgm.rotation;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import java.util.Map;\n+import java.util.Set;\n+import tc.oc.pgm.api.map.MapInfo;\n+\n+public class VotingPoolOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c119cb0734d9d9237bbedf8a99e878e276c3e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDI3ODYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODo1MTo1MFrOHIxhAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODo1MTo1MFrOHIxhAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk2MTkyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public Map<MapInfo, Double> getCustomVoteMapWeighted() {\n          \n          \n            \n                Map<MapInfo, Double> maps = Maps.newHashMap();\n          \n          \n            \n                customVoteMaps.forEach(map -> maps.put(map, VotingPool.DEFAULT_WEIGHT));\n          \n          \n            \n                return maps;\n          \n          \n            \n              }\n          \n          \n            \n              public Map<MapInfo, Double> getCustomVoteMapWeighted() {\n          \n          \n            \n                return customVoteMaps.stream().collect(Collectors.toMap(map -> map, VotingPool.DEFAULT_WEIGHT));\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nI like the one liner at least :)", "url": "https://github.com/PGMDev/PGM/pull/627#discussion_r478961923", "createdAt": "2020-08-28T08:51:50Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPoolOptions.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package tc.oc.pgm.rotation;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import java.util.Map;\n+import java.util.Set;\n+import tc.oc.pgm.api.map.MapInfo;\n+\n+public class VotingPoolOptions {\n+\n+  // Set of maps to be used in custom vote selection\n+  private Set<MapInfo> customVoteMaps;\n+\n+  // Whether custom map selection should replace existing entries\n+  private boolean replace;\n+\n+  public VotingPoolOptions() {\n+    this.customVoteMaps = Sets.newHashSet();\n+    this.replace = true;\n+  }\n+\n+  public boolean shouldOverride() {\n+    return customVoteMaps.size() >= VotingPool.MIN_CUSTOM_VOTE_OPTIONS && !replace;\n+  }\n+\n+  public boolean isReplace() {\n+    return replace;\n+  }\n+\n+  public boolean toggleMode() {\n+    this.replace = !replace;\n+    return replace;\n+  }\n+\n+  public boolean addVote(MapInfo map) {\n+    if (customVoteMaps.size() < VotingPool.MAX_VOTE_OPTIONS) {\n+      this.customVoteMaps.add(map);\n+      return true;\n+    }\n+    return false;\n+  }\n+\n+  public boolean removeMap(MapInfo map) {\n+    return this.customVoteMaps.remove(map);\n+  }\n+\n+  public Set<MapInfo> getCustomVoteMaps() {\n+    return customVoteMaps;\n+  }\n+\n+  public boolean isAdded(MapInfo info) {\n+    return customVoteMaps.stream().anyMatch(s -> s.getName().equalsIgnoreCase(info.getName()));\n+  }\n+\n+  public void clear() {\n+    customVoteMaps.clear();\n+  }\n+\n+  public Map<MapInfo, Double> getCustomVoteMapWeighted() {\n+    Map<MapInfo, Double> maps = Maps.newHashMap();\n+    customVoteMaps.forEach(map -> maps.put(map, VotingPool.DEFAULT_WEIGHT));\n+    return maps;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c119cb0734d9d9237bbedf8a99e878e276c3e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDM5NTEyOnYy", "diffSide": "RIGHT", "path": "util/src/main/i18n/templates/map.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOTowMzoxOFrOHIy1Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOTowMzoxOFrOHIy1Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk4MzQ3MA==", "bodyText": "If I understand this correctly, this is displayed if you do /vote clear and there is no maps to clear.\nI think this is too vague if I am correct. Maybe something like There are no custom vote options to clear | There are no maps to clear from the vote | No vote options to clear |\u00a0No maps to clear", "url": "https://github.com/PGMDev/PGM/pull/627#discussion_r478983470", "createdAt": "2020-08-28T09:03:18Z", "author": {"login": "KingOfSquares"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -58,6 +58,8 @@ map.setNext.revert = {0} has removed {1} as the next map\n \n map.noNextMap = No next map\n \n+map.noMapsFound = No maps found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2c119cb0734d9d9237bbedf8a99e878e276c3e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1049, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}