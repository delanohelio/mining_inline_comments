{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MzczODE0", "number": 379, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTowMzoxM1rODr1Teg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxMjoxM1rODr1g7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mjg4Njk4OnYy", "diffSide": "RIGHT", "path": "util-bukkit/src/main/i18n/templates/strings.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTowMzoxM1rOF8aU8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTowMzoxM1rOF8aU8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5MDIyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            command.map.mapInfo.containedInMapPools = Pools\n          \n          \n            \n            command.map.mapInfo.pools = Pools", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398890224", "createdAt": "2020-03-26T21:03:13Z", "author": {"login": "Pablete1234"}, "path": "util-bukkit/src/main/i18n/templates/strings.properties", "diffHunk": "@@ -547,6 +547,7 @@ command.map.mapInfo.sourceCode.tip = View the XML code that controls this map\n command.map.mapInfo.proto = Proto\n command.map.mapInfo.source = Source\n command.map.mapInfo.folder = Folder\n+command.map.mapInfo.containedInMapPools = Pools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mjg5ODc1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTowNDo1OVrOF8acUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTowNDo1OVrOF8acUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5MjExMg==", "bodyText": "This feels so specific that it looks out of place.\nJust from wherever you call, do:\npoolManager.getPools().stream()\n    .filter(p -> p.getMaps().contains(map)).collect(Collectors.toList());", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398892112", "createdAt": "2020-03-26T21:04:59Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java", "diffHunk": "@@ -152,4 +152,16 @@ public void matchEnded(Match match) {\n \n     activeMapPool.matchEnded(match);\n   }\n+\n+  /**\n+   * Checks all loaded {@link MapPool}s for a given {@link MapInfo} and returns all {@link MapPool}s\n+   * that contains it\n+   */\n+  public List<MapPool> contains(MapInfo map) {\n+    List<MapPool> containedIn = new ArrayList<>();\n+    for (MapPool mapPool : this.mapPools) {\n+      if (mapPool.getMaps().contains(map)) containedIn.add(mapPool);\n+    }\n+    return containedIn;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjkyMDY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxMTo1N1rOF8aqSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTowMTo1MFrOF8-T8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA==", "bodyText": "String pools = ((MapPoolManager) ..).getPools().stream()\n    .filter(p -> p.getMaps().contains(map)).collect(Collectors.joining(\", \"));", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398895688", "createdAt": "2020-03-26T21:11:57Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -192,6 +196,16 @@ public void map(Audience audience, CommandSender sender, @Text MapInfo map) {\n     }\n \n     audience.sendMessage(createTagsComponent(map.getTags()));\n+\n+    if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n+      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2NTQ4MA==", "bodyText": ".joining gives an error", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399465480", "createdAt": "2020-03-27T18:34:42Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -192,6 +196,16 @@ public void map(Audience audience, CommandSender sender, @Text MapInfo map) {\n     }\n \n     audience.sendMessage(createTagsComponent(map.getTags()));\n+\n+    if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n+      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NTMwNQ==", "bodyText": "With the filter it will give me all MapPools i want right. But how do i make a Collector that collects all those MapPools names.", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399475305", "createdAt": "2020-03-27T18:53:06Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -192,6 +196,16 @@ public void map(Audience audience, CommandSender sender, @Text MapInfo map) {\n     }\n \n     audience.sendMessage(createTagsComponent(map.getTags()));\n+\n+    if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n+      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3OTc5Mw==", "bodyText": "Nvm, i think i figured it out!", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399479793", "createdAt": "2020-03-27T19:01:50Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -192,6 +196,16 @@ public void map(Audience audience, CommandSender sender, @Text MapInfo map) {\n     }\n \n     audience.sendMessage(createTagsComponent(map.getTags()));\n+\n+    if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n+      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjkyMTQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxMjoxNFrOF8aqzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxMjoxNFrOF8aqzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTgyMQ==", "bodyText": "this can go away\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Component createContainedInMapPoolsComponent(List<MapPool> mapPools) {\n          \n          \n            \n                PersonalizedText pools = new PersonalizedText();\n          \n          \n            \n                int iteration = 1;\n          \n          \n            \n                for (MapPool mapPool : mapPools) {\n          \n          \n            \n                  pools.extra(mapPool.getName());\n          \n          \n            \n                  if (mapPools.size() > iteration) pools.extra(\", \");\n          \n          \n            \n                  iteration++;\n          \n          \n            \n                }\n          \n          \n            \n                return new PersonalizedText(pools, ChatColor.GOLD);\n          \n          \n            \n              }", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398895821", "createdAt": "2020-03-26T21:12:14Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -246,6 +260,17 @@ private static Component createPlayerLimitComponent(CommandSender sender, MapInf\n     return total.extra(\" \").extra(verbose);\n   }\n \n+  private Component createContainedInMapPoolsComponent(List<MapPool> mapPools) {\n+    PersonalizedText pools = new PersonalizedText();\n+    int iteration = 1;\n+    for (MapPool mapPool : mapPools) {\n+      pools.extra(mapPool.getName());\n+      if (mapPools.size() > iteration) pools.extra(\", \");\n+      iteration++;\n+    }\n+    return new PersonalizedText(pools, ChatColor.GOLD);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1062, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}