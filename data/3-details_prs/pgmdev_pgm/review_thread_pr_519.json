{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NzkyOTAz", "number": 519, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMTowMlrOEBYkeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoyM1rOEC_GSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg2NTg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/map/MapInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMTowMlrOGdMpEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMTowMlrOGdMpEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2OTAwOQ==", "bodyText": "getGamemode", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433269009", "createdAt": "2020-06-01T14:31:02Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/map/MapInfo.java", "diffHunk": "@@ -100,6 +100,13 @@ default String getStyledNameLegacy(MapNameStyle style, @Nullable CommandSender s\n    */\n   Collection<MapTag> getTags();\n \n+  /**\n+   * Get a {@link Component} that represents this map's gamemode name.\n+   *\n+   * @return A component of the gamemode name if defined or null.\n+   */\n+  Component getGamemodeName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg2ODQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMTo1MlrOGdMqzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMTo1MlrOGdMqzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2OTQ1NA==", "bodyText": "It makes sense for Party to extend Named.\nMaybe Named needs a simple getName() method.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433269454", "createdAt": "2020-06-01T14:31:52Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "diffHunk": "@@ -14,16 +15,14 @@\n import tc.oc.pgm.filters.query.Query;\n import tc.oc.pgm.match.ObservingParty;\n import tc.oc.pgm.util.chat.Audience;\n-import tc.oc.pgm.util.component.Component;\n-import tc.oc.pgm.util.named.Named;\n \n /**\n  * A group of related {@link MatchPlayer}s in a {@link Match}.\n  *\n  * @see Competitor for participating {@link MatchPlayer}s.\n  * @see ObservingParty for observing {@link MatchPlayer}s.\n  */\n-public interface Party extends Audience, Named {\n+public interface Party extends Audience {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg3MTU4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/command/ListCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMjo0MVrOGdMs5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODoxMjo0NFrOGdU2Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2OTk4OA==", "bodyText": "Any args calls are unnescary, you can inline them all inside the of(...)", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433269988", "createdAt": "2020-06-01T14:32:41Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/command/ListCommand.java", "diffHunk": "@@ -5,96 +5,106 @@\n import java.util.List;\n import java.util.UUID;\n import java.util.stream.Collectors;\n-import net.md_5.bungee.api.ChatColor;\n+import net.kyori.text.Component;\n+import net.kyori.text.TextComponent;\n+import net.kyori.text.TranslatableComponent;\n+import net.kyori.text.format.TextColor;\n import org.bukkit.command.CommandSender;\n import tc.oc.pgm.api.PGM;\n import tc.oc.pgm.api.Permissions;\n import tc.oc.pgm.api.match.Match;\n import tc.oc.pgm.api.player.MatchPlayer;\n import tc.oc.pgm.teams.TeamMatchModule;\n-import tc.oc.pgm.util.component.Component;\n-import tc.oc.pgm.util.component.Components;\n-import tc.oc.pgm.util.component.types.PersonalizedText;\n-import tc.oc.pgm.util.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.util.chat.Audience;\n import tc.oc.pgm.util.named.NameStyle;\n+import tc.oc.pgm.util.text.TextFormatter;\n \n // TODO: clean up format and use new components\n public final class ListCommand {\n \n   @Command(\n       aliases = {\"list\", \"who\", \"online\", \"ls\"},\n       desc = \"View a list of online players\")\n-  public void list(CommandSender sender, Match match) {\n+  public void list(CommandSender sender, Audience viewer, Match match) {\n     TeamMatchModule tmm = match.getModule(TeamMatchModule.class);\n     if (tmm != null) {\n-      sender.sendMessage(\n-          new PersonalizedTranslatable(\"command.list.teams\")\n-              .getPersonalizedText()\n-              .color(ChatColor.GRAY));\n+      viewer.sendMessage(TranslatableComponent.of(\"command.list.teams\", TextColor.GRAY));\n       tmm.getTeams()\n           .forEach(\n               team ->\n                   sendTeamInfo(\n-                      sender, team.getComponentName(), team.getPlayers(), team.getMaxPlayers()));\n+                      viewer,\n+                      sender,\n+                      team.getComponentName(),\n+                      team.getPlayers(),\n+                      team.getMaxPlayers()));\n     } else {\n       sendTeamInfo(\n+          viewer,\n           sender,\n-          new PersonalizedTranslatable(\"command.list.participants\"),\n+          TranslatableComponent.of(\"command.list.participants\"),\n           match.getParticipants(),\n           match.getMaxPlayers());\n     }\n     // Observers\n     sendTeamInfo(\n+        viewer,\n         sender,\n         match.getDefaultParty().getComponentName(),\n         match.getDefaultParty().getPlayers(),\n         -1);\n \n     // Total count\n-    sender.sendMessage(\n-        new PersonalizedTranslatable(\n-                \"command.list.online\",\n-                new PersonalizedText(\n-                    Integer.toString(getSize(match.getPlayers(), false)), ChatColor.GREEN))\n-            .getPersonalizedText()\n-            .color(ChatColor.GRAY));\n+    viewer.sendMessage(\n+        TranslatableComponent.of(\"command.list.online\", TextColor.GRAY)\n+            .args(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQwMzQxOA==", "bodyText": "Oh good to know. I\u2019ll convert the args to inline, thanks!", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433403418", "createdAt": "2020-06-01T18:12:44Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/command/ListCommand.java", "diffHunk": "@@ -5,96 +5,106 @@\n import java.util.List;\n import java.util.UUID;\n import java.util.stream.Collectors;\n-import net.md_5.bungee.api.ChatColor;\n+import net.kyori.text.Component;\n+import net.kyori.text.TextComponent;\n+import net.kyori.text.TranslatableComponent;\n+import net.kyori.text.format.TextColor;\n import org.bukkit.command.CommandSender;\n import tc.oc.pgm.api.PGM;\n import tc.oc.pgm.api.Permissions;\n import tc.oc.pgm.api.match.Match;\n import tc.oc.pgm.api.player.MatchPlayer;\n import tc.oc.pgm.teams.TeamMatchModule;\n-import tc.oc.pgm.util.component.Component;\n-import tc.oc.pgm.util.component.Components;\n-import tc.oc.pgm.util.component.types.PersonalizedText;\n-import tc.oc.pgm.util.component.types.PersonalizedTranslatable;\n+import tc.oc.pgm.util.chat.Audience;\n import tc.oc.pgm.util.named.NameStyle;\n+import tc.oc.pgm.util.text.TextFormatter;\n \n // TODO: clean up format and use new components\n public final class ListCommand {\n \n   @Command(\n       aliases = {\"list\", \"who\", \"online\", \"ls\"},\n       desc = \"View a list of online players\")\n-  public void list(CommandSender sender, Match match) {\n+  public void list(CommandSender sender, Audience viewer, Match match) {\n     TeamMatchModule tmm = match.getModule(TeamMatchModule.class);\n     if (tmm != null) {\n-      sender.sendMessage(\n-          new PersonalizedTranslatable(\"command.list.teams\")\n-              .getPersonalizedText()\n-              .color(ChatColor.GRAY));\n+      viewer.sendMessage(TranslatableComponent.of(\"command.list.teams\", TextColor.GRAY));\n       tmm.getTeams()\n           .forEach(\n               team ->\n                   sendTeamInfo(\n-                      sender, team.getComponentName(), team.getPlayers(), team.getMaxPlayers()));\n+                      viewer,\n+                      sender,\n+                      team.getComponentName(),\n+                      team.getPlayers(),\n+                      team.getMaxPlayers()));\n     } else {\n       sendTeamInfo(\n+          viewer,\n           sender,\n-          new PersonalizedTranslatable(\"command.list.participants\"),\n+          TranslatableComponent.of(\"command.list.participants\"),\n           match.getParticipants(),\n           match.getMaxPlayers());\n     }\n     // Observers\n     sendTeamInfo(\n+        viewer,\n         sender,\n         match.getDefaultParty().getComponentName(),\n         match.getDefaultParty().getPlayers(),\n         -1);\n \n     // Total count\n-    sender.sendMessage(\n-        new PersonalizedTranslatable(\n-                \"command.list.online\",\n-                new PersonalizedText(\n-                    Integer.toString(getSize(match.getPlayers(), false)), ChatColor.GREEN))\n-            .getPersonalizedText()\n-            .color(ChatColor.GRAY));\n+    viewer.sendMessage(\n+        TranslatableComponent.of(\"command.list.online\", TextColor.GRAY)\n+            .args(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2OTk4OA=="}, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg3NDUxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/command/TeamCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMzozMlrOGdMu1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMzozMlrOGdMu1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MDQ4NQ==", "bodyText": "Not sure where we define Party#getComponentName, but it should just be Party#getName", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433270485", "createdAt": "2020-06-01T14:33:32Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/command/TeamCommand.java", "diffHunk": "@@ -48,8 +48,8 @@ public void force(\n             \"join.ok.force\",\n             TextColor.GRAY,\n             joiner.getName(NameStyle.FANCY),\n-            joiner.getParty().getName(NameStyle.FANCY),\n-            oldParty.getName(NameStyle.FANCY)));\n+            joiner.getParty().getComponentName(),\n+            oldParty.getComponentName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg4NjY5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/db/UsernameImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozNjo0OVrOGdM2pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTozMDozNlrOGdfMfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MjQ4NQ==", "bodyText": "I think we should define a PlayerComponent interface, which contains static methods for building a player TextComponent.\nSo something like this:\ninterface PlayerComponent {\n  static TextComponent of(Player player);\n  static TextComponent of(UUID playerId); // could show \"Unknown\"\n  static TextComponent of(CommandSender sender);  // could show \"Console\" when null or console sender\n}", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433272485", "createdAt": "2020-06-01T14:36:49Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/db/UsernameImpl.java", "diffHunk": "@@ -36,11 +36,10 @@ public String getName() {\n   }\n \n   @Override\n-  public Component getStyledName(NameStyle style) {\n+  public Component getName(NameStyle style) {\n     return name == null\n-        ? new PersonalizedText(\n-            new PersonalizedTranslatable(\"misc.unknown\"), ChatColor.DARK_AQUA, ChatColor.ITALIC)\n-        : new PersonalizedPlayer(Bukkit.getPlayer(id), name, style);\n+        ? TranslatableComponent.of(\"misc.unknown\", TextColor.DARK_AQUA, TextDecoration.ITALIC)\n+        : new PersonalizedPlayer(Bukkit.getPlayer(id), name, style).render();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3Mjk5MA==", "bodyText": "I created a PlayerComponent interface with the static methods you requested. Though I included NameStyle as a parameter, let me know if that\u2019s how you envisioned it. If not any additional guidance would be great \ud83d\udc4d", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433572990", "createdAt": "2020-06-02T01:30:36Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/db/UsernameImpl.java", "diffHunk": "@@ -36,11 +36,10 @@ public String getName() {\n   }\n \n   @Override\n-  public Component getStyledName(NameStyle style) {\n+  public Component getName(NameStyle style) {\n     return name == null\n-        ? new PersonalizedText(\n-            new PersonalizedTranslatable(\"misc.unknown\"), ChatColor.DARK_AQUA, ChatColor.ITALIC)\n-        : new PersonalizedPlayer(Bukkit.getPlayer(id), name, style);\n+        ? TranslatableComponent.of(\"misc.unknown\", TextColor.DARK_AQUA, TextDecoration.ITALIC)\n+        : new PersonalizedPlayer(Bukkit.getPlayer(id), name, style).render();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MjQ4NQ=="}, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg4ODczOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/map/MapInfoImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozNzoyNFrOGdM3_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozNzoyNFrOGdM3_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MjgyOQ==", "bodyText": "gamemode", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433272829", "createdAt": "2020-06-01T14:37:24Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/map/MapInfoImpl.java", "diffHunk": "@@ -70,6 +72,7 @@ public MapInfoImpl(\n     this.tags = tags == null ? new TreeSet<>() : tags;\n     this.players = players == null ? new LinkedList<>() : players;\n     this.world = world == null ? new WorldInfoImpl() : world;\n+    this.gamemodeName = gamemodeName == null ? TextComponent.empty() : gamemodeName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODg5MjYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozODoyNFrOGdM6bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMToyMzo0NlrOGdfFdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MzQ1Mw==", "bodyText": "Do we need to use TextTranslations here? This won't translate the gamemodes, as-is.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433273453", "createdAt": "2020-06-01T14:38:24Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -90,9 +90,15 @@ public SidebarMatchModule createMatchModule(Match match) throws ModuleLoadExcept\n \n   protected @Nullable Future<?> renderTask;\n \n-  private static String renderSidebarTitle(Collection<MapTag> tags) {\n+  private static String renderSidebarTitle(\n+      Collection<MapTag> tags, @Nullable Component gamemodeName) {\n     final Component configTitle = PGM.get().getConfiguration().getMatchHeader();\n-    if (configTitle != null) return LegacyComponentSerializer.legacy().serialize(configTitle);\n+    if (configTitle != null)\n+      return LegacyComponentSerializer.legacy().serialize(configTitle.color(TextColor.AQUA));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3MTE4OQ==", "bodyText": "I believe that\u2019s for the config scoreboard sidebar header. Also since scoreboards are for all, we can\u2019t translate them yet correct?", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r433571189", "createdAt": "2020-06-02T01:23:46Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -90,9 +90,15 @@ public SidebarMatchModule createMatchModule(Match match) throws ModuleLoadExcept\n \n   protected @Nullable Future<?> renderTask;\n \n-  private static String renderSidebarTitle(Collection<MapTag> tags) {\n+  private static String renderSidebarTitle(\n+      Collection<MapTag> tags, @Nullable Component gamemodeName) {\n     final Component configTitle = PGM.get().getConfiguration().getMatchHeader();\n-    if (configTitle != null) return LegacyComponentSerializer.legacy().serialize(configTitle);\n+    if (configTitle != null)\n+      return LegacyComponentSerializer.legacy().serialize(configTitle.color(TextColor.AQUA));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MzQ1Mw=="}, "originalCommit": {"oid": "c583211427b5b2473d55b79bcdd1f47e0c45fa0b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDk4NTI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMjoxOVrOGeIwVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMjoxOVrOGeIwVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MzkxMA==", "bodyText": "Do we need these methods? Can we just use getName ?", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434253910", "createdAt": "2020-06-03T01:02:19Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "diffHunk": "@@ -68,20 +69,20 @@\n    * @see PartyRenameEvent\n    * @return The current name of the {@link Party}.\n    */\n-  String getName();\n+  String getDisplayName();\n \n   /**\n    * Get the current name of the {@link Party} from the perspective of a {@link CommandSender}.\n    *\n    * @param viewer The viewer.\n    * @return The name of the {@link Party}, relative to the viewer.\n    */\n-  String getName(@Nullable CommandSender viewer);\n+  String getDisplayName(@Nullable CommandSender viewer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383d385a991d0f87375c0284415c31fe13d9a645"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDk4NjI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMzowMlrOGeIw_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMzowMlrOGeIw_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NDA3Ng==", "bodyText": "Don't need to refine these, maybe the default should be in Named?", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434254076", "createdAt": "2020-06-03T01:03:02Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/party/Party.java", "diffHunk": "@@ -116,15 +117,21 @@ default String getColoredName() {\n    * @return The colored {@link Party} name.\n    */\n   default String getColoredName(@Nullable CommandSender viewer) {\n-    return getColor() + getName(viewer);\n+    return getColor() + getDisplayName(viewer);\n   }\n \n   /**\n    * Get the current name of the {@link Party} as a {@link Component} with colors.\n    *\n    * @return The current {@link Party} name.\n    */\n-  Component getComponentName();\n+  @Override\n+  Component getName();\n+\n+  @Override\n+  default Component getName(NameStyle style) {\n+    return getName();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383d385a991d0f87375c0284415c31fe13d9a645"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDk4NjgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/player/Username.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMzoyMVrOGeIxTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODozMToxNlrOGeRlsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NDE1Nw==", "bodyText": "Why change this and Contributor?", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434254157", "createdAt": "2020-06-03T01:03:21Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/player/Username.java", "diffHunk": "@@ -20,7 +20,7 @@\n    * @return The username.\n    */\n   @Nullable\n-  String getName();\n+  String getUsername();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "383d385a991d0f87375c0284415c31fe13d9a645"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5ODY0Mg==", "bodyText": "Edit: to answer your original question. It was changed to getUsername() to avoid overriding the Named#getName, so we could support strings rather than components (see below for why).\nIn my latest commit I resolved the issue related to Contributor. Though I left Username alone and would like some guidance on it.\nFor Contributor I made use of the getName() method and included a toLegacy() that covers a few places that using a component would prove challenging (e.g. /maps -a flag to match author names), however I was unsure if this was the correct way to go for Username. As there are a few places in the code where it\u2019s acceptable for the username to be null, and currently the Username#getName() will always return a component. So perhaps it makes sense to keep Username#getUsername for when it\u2019s necessary to check if the name is null or not.\nLet me know how you\u2019d like this to be handled. Thanks!", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434398642", "createdAt": "2020-06-03T08:31:16Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/api/player/Username.java", "diffHunk": "@@ -20,7 +20,7 @@\n    * @return The username.\n    */\n   @Nullable\n-  String getName();\n+  String getUsername();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NDE1Nw=="}, "originalCommit": {"oid": "383d385a991d0f87375c0284415c31fe13d9a645"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODY2Nzk0OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tc/oc/pgm/util/text/TextParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDo1OToxMlrOGetJHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDo1OToxMlrOGetJHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg1MDA3OQ==", "bodyText": "This method doesn't belong here.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434850079", "createdAt": "2020-06-03T20:59:12Z", "author": {"login": "Electroid"}, "path": "util/src/main/java/tc/oc/pgm/util/text/TextParser.java", "diffHunk": "@@ -476,4 +477,8 @@ public static Connection parseSqlConnection(String text) throws TextException {\n       throw unknown(e); // TODO: wrap common database errors with more friendly messages\n     }\n   }\n+\n+  public static TextColor parseTextColor(Enum<?> color) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7519c73e0b61bacf442f4014421b24356a1ecc76"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODY3NjY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/wool/MonumentWool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMDo1M1rOGetOhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMDo1M1rOGetOhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg1MTQ2MA==", "bodyText": "If this is the only reason we keep getDisplayName, then just remove it from toString.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434851460", "createdAt": "2020-06-03T21:00:53Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/wool/MonumentWool.java", "diffHunk": "@@ -50,7 +50,7 @@ public MonumentWool(MonumentWoolFactory definition, Match match) {\n   public String toString() {\n     StringBuilder sb = new StringBuilder(\"MonumentWool{\");\n     sb.append(\"id=\").append(this.getId());\n-    sb.append(\",owner=\").append(this.owner.getName());\n+    sb.append(\",owner=\").append(this.owner.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7519c73e0b61bacf442f4014421b24356a1ecc76"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODY4MjYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/teams/TeamMatchModule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMjoxMVrOGetSgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMjoxMVrOGetSgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg1MjQ4MA==", "bodyText": "If this is the only reason we have getDisplayName, just remove the logging statements. TBH, we don't need them here.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434852480", "createdAt": "2020-06-03T21:02:11Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/teams/TeamMatchModule.java", "diffHunk": "@@ -538,7 +533,7 @@ public void balanceTeams() {\n           .getLogger()\n           .info(\n               \"Bumping a player from stacked team \"\n-                  + team.getColoredName()\n+                  + team.getDisplayName()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7519c73e0b61bacf442f4014421b24356a1ecc76"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODY5MDA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/tablist/TeamOrder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMzozNFrOGetXEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTowMzozNFrOGetXEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg1MzY0OA==", "bodyText": "I have an idea to solve the getDisplayName shenanigans. Add getId(): String to Named", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r434853648", "createdAt": "2020-06-03T21:03:34Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/tablist/TeamOrder.java", "diffHunk": "@@ -33,6 +33,6 @@ public int compare(Team a, Team b) {\n     if (team == b) return 1;\n \n     // Rest of the teams are ordered by name\n-    return a.getName().compareTo(b.getName());\n+    return a.getDisplayName().compareTo(b.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7519c73e0b61bacf442f4014421b24356a1ecc76"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY1MDA0OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tc/oc/pgm/util/text/TextFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NDozOVrOGfxf6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NDozOVrOGfxf6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MDAyNA==", "bodyText": "Use SpigotTextAdapter to convert to a BaseComponent. This should fix the empty translations.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r435970024", "createdAt": "2020-06-05T14:44:39Z", "author": {"login": "Electroid"}, "path": "util/src/main/java/tc/oc/pgm/util/text/TextFormatter.java", "diffHunk": "@@ -120,6 +121,22 @@ public static Component horizontalLineHeading(\n \n   public static Component horizontalLineHeading(\n       CommandSender sender, Component text, TextColor lineColor) {\n-    return horizontalLineHeading(sender, text, lineColor, ComponentUtils.MAX_CHAT_WIDTH);\n+    return horizontalLineHeading(sender, text, lineColor, LegacyFormatUtils.MAX_CHAT_WIDTH);\n+  }\n+\n+  /*\n+   * Convert ChatColor -> TextColor\n+   */\n+  public static TextColor convert(Enum<?> color) {\n+    return TextColor.valueOf(color.name());\n+  }\n+\n+  /**\n+   * Support kept for custom tab-list/nms usage (TODO: if tab-list system ever changes,\n+   * upgrade/remove this)\n+   */\n+  public static BaseComponent renderBaseComponent(CommandSender viewer, Component component) {\n+    return new net.md_5.bungee.api.chat.TextComponent(\n+        TextTranslations.translateLegacy(component, viewer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c36779d11b7124955fb1edee0ef79f174a4493"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY1NTY1OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tc/oc/pgm/util/text/TextFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NjowNlrOGfxjpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NjowNlrOGfxjpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MDk4MA==", "bodyText": "Also, I think this can be in TextTranslations.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r435970980", "createdAt": "2020-06-05T14:46:06Z", "author": {"login": "Electroid"}, "path": "util/src/main/java/tc/oc/pgm/util/text/TextFormatter.java", "diffHunk": "@@ -120,6 +121,22 @@ public static Component horizontalLineHeading(\n \n   public static Component horizontalLineHeading(\n       CommandSender sender, Component text, TextColor lineColor) {\n-    return horizontalLineHeading(sender, text, lineColor, ComponentUtils.MAX_CHAT_WIDTH);\n+    return horizontalLineHeading(sender, text, lineColor, LegacyFormatUtils.MAX_CHAT_WIDTH);\n+  }\n+\n+  /*\n+   * Convert ChatColor -> TextColor\n+   */\n+  public static TextColor convert(Enum<?> color) {\n+    return TextColor.valueOf(color.name());\n+  }\n+\n+  /**\n+   * Support kept for custom tab-list/nms usage (TODO: if tab-list system ever changes,\n+   * upgrade/remove this)\n+   */\n+  public static BaseComponent renderBaseComponent(CommandSender viewer, Component component) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c36779d11b7124955fb1edee0ef79f174a4493"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY2MDE4OnYy", "diffSide": "RIGHT", "path": "util/src/main/i18n/templates/error.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NzoyMFrOGfxmkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0NzoyMFrOGfxmkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MTcyOA==", "bodyText": "I think using error.unknown instead of this is fine.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r435971728", "createdAt": "2020-06-05T14:47:20Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/error.properties", "diffHunk": "@@ -10,3 +10,5 @@ error.outOfRange = Invalid value: {0} is not between {1}\n error.suggestionSuffix = (did you mean '{0}'?)\n \n error.unknown = An unknown error occurred, please see console for details\n+\n+error.player.participationState = Internal error changing player participation state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c36779d11b7124955fb1edee0ef79f174a4493"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY2MjE1OnYy", "diffSide": "RIGHT", "path": "util/src/main/i18n/templates/gamemode.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0Nzo1M1rOGfxn0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0Nzo1M1rOGfxn0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MjA1MA==", "bodyText": "Would rather have victoryCondition.X", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r435972050", "createdAt": "2020-06-05T14:47:53Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/gamemode.properties", "diffHunk": "@@ -238,3 +238,11 @@ blitz.livesRemaining = You have {0} remaining.\n \n # {0} = \"Blitz\"\n blitz.joinDenied = You may not join during a {0} match.\n+\n+blitz.victoryCondition = most survivors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c36779d11b7124955fb1edee0ef79f174a4493"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY2NDA4OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tc/oc/pgm/util/chat/MultiAudience.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoyM1rOGfxpGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0ODoyM1rOGfxpGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MjM3OQ==", "bodyText": "These text boxes can probably be removed.", "url": "https://github.com/PGMDev/PGM/pull/519#discussion_r435972379", "createdAt": "2020-06-05T14:48:23Z", "author": {"login": "Electroid"}, "path": "util/src/main/java/tc/oc/pgm/util/chat/MultiAudience.java", "diffHunk": "@@ -41,47 +40,14 @@ default void playSound(Sound sound) {\n \n   @Override\n   default void showTitle(\n-      @Nullable net.kyori.text.Component title,\n-      @Nullable net.kyori.text.Component subTitle,\n-      int inTicks,\n-      int stayTicks,\n-      int outTicks) {\n+      Component title, Component subTitle, int inTicks, int stayTicks, int outTicks) {\n     for (Audience a : getAudiences()) a.showTitle(title, subTitle, inTicks, stayTicks, outTicks);\n   }\n \n   ///////////////////////////////////////////////////////////////", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c36779d11b7124955fb1edee0ef79f174a4493"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 986, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}