{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjg5Nzgx", "number": 689, "title": "Add a match state filter", "bodyText": "Sorry I didn't test I wanted to get this in time for Hacktoberfest, will of course test before its merged\nIt already ended \ud83e\udd26\nSigned-off-by: KingSimon 19822231+KingOfSquares@users.noreply.github.com", "createdAt": "2020-11-01T20:45:49Z", "url": "https://github.com/PGMDev/PGM/pull/689", "merged": true, "mergeCommit": {"oid": "217c0441b48bebac18860f4f0e5ef3af932f3221"}, "closed": true, "closedAt": "2021-01-08T17:54:22Z", "author": {"login": "KingOfSquares"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY9-tFgBqjM5NTQzODY1MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABduMiJzgFqTU2NDQ2NDI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "918fb635ad10131304fe91307814e79c75361de6", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/918fb635ad10131304fe91307814e79c75361de6", "committedDate": "2020-11-01T20:31:52Z", "message": "Add a match state filter\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}, "afterCommit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/c8fe28b830c056e474e342fb30e17665ba641f30", "committedDate": "2020-11-03T19:03:34Z", "message": "Add old 1.4.2 support\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODg5NDQ1", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-522889445", "createdAt": "2020-11-03T21:32:24Z", "commit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTozMjoyNFrOHtBM7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTozMjoyNFrOHtBM7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NzY2Mw==", "bodyText": "I don't get the obsession for a predicate here. Just use a Set<MatchPhase>", "url": "https://github.com/PGMDev/PGM/pull/689#discussion_r516967663", "createdAt": "2020-11-03T21:32:24Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/MatchStateFilter.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package tc.oc.pgm.filters;\n+\n+import java.util.function.Predicate;\n+import tc.oc.pgm.api.filter.query.MatchQuery;\n+import tc.oc.pgm.api.match.Match;\n+\n+public class MatchStateFilter extends TypedFilter<MatchQuery> {\n+\n+  private final Predicate<Match> matchPredicate;\n+\n+  public MatchStateFilter(Predicate<Match> matchPredicate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDYwMDQ1", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-523460045", "createdAt": "2020-11-04T15:16:27Z", "commit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToxNjoyN1rOHtcujw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToxNzoxMFrOHtcwoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxODYzOQ==", "bodyText": "Seems like this should be a private function parseMatchPhase(String) -> MatchPhase", "url": "https://github.com/PGMDev/PGM/pull/689#discussion_r517418639", "createdAt": "2020-11-04T15:16:27Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -443,4 +446,52 @@ public StructuralLoadFilter parseStructuralLoad(Element el) throws InvalidXMLExc\n   public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n     return new TimeFilter(XMLUtils.parseDuration(el, null));\n   }\n+\n+  @MethodParser(\"match-state\")\n+  public MatchStateFilter parseMatchState(Element el) throws InvalidXMLException {\n+    return parseMatchStateFilter(el.getValue(), el);\n+  }\n+\n+  @MethodParser(\"match-started\")\n+  public MatchStateFilter parseMatchStarted(Element el) throws InvalidXMLException {\n+    return parseMatchStateFilter(\"started\", el);\n+  }\n+\n+  @MethodParser(\"match-running\")\n+  public MatchStateFilter parseMatchRunning(Element el) throws InvalidXMLException {\n+    return parseMatchStateFilter(\"running\", el);\n+  }\n+\n+  @MethodParser(\"match-finished\")\n+  public MatchStateFilter parseMatchFinished(Element el) throws InvalidXMLException {\n+    return parseMatchStateFilter(\"finished\", el);\n+  }\n+\n+  public MatchStateFilter parseMatchStateFilter(String matchState, Element el)\n+      throws InvalidXMLException {\n+\n+    Predicate<Match> matchPredicate = null;\n+\n+    switch (matchState) {\n+      case \"running\":\n+        matchPredicate = m -> m.getPhase() == MatchPhase.RUNNING;\n+        break;\n+      case \"finished\":\n+        matchPredicate = m -> m.getPhase() == MatchPhase.FINISHED;\n+        break;\n+      case \"starting\":\n+        matchPredicate = m -> m.getPhase() == MatchPhase.STARTING;\n+        break;\n+      case \"before\":\n+        matchPredicate = m -> m.getPhase() == MatchPhase.IDLE;\n+        break;\n+      case \"started\":\n+        matchPredicate =\n+            m -> m.getPhase() == MatchPhase.RUNNING || m.getPhase() == MatchPhase.FINISHED;\n+    }\n+    if (matchPredicate == null)\n+      throw new InvalidXMLException(\"Invalid or no match state found\", el);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxOTE2OA==", "bodyText": "See my other comment, this constructor can then be MatchPhaseFilter(MatchPhase)", "url": "https://github.com/PGMDev/PGM/pull/689#discussion_r517419168", "createdAt": "2020-11-04T15:17:10Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/filters/MatchStateFilter.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package tc.oc.pgm.filters;\n+\n+import java.util.function.Predicate;\n+import tc.oc.pgm.api.filter.query.MatchQuery;\n+import tc.oc.pgm.api.match.Match;\n+\n+public class MatchStateFilter extends TypedFilter<MatchQuery> {\n+\n+  private final Predicate<Match> matchPredicate;\n+\n+  public MatchStateFilter(Predicate<Match> matchPredicate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NzY2Mw=="}, "originalCommit": {"oid": "c8fe28b830c056e474e342fb30e17665ba641f30"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzc4Mzc0", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-528378374", "createdAt": "2020-11-11T17:19:46Z", "commit": {"oid": "ee908b4f1f1b88727c69e937abf73d8544c4490c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoxOTo0NlrOHxWukw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoxOTo0NlrOHxWukw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxNDY0Mw==", "bodyText": "I have an idea to make this easier:\n\nChange the signature of parseMatchPhaseFilter return a generic Filter\nChange MatchPhaseFilter to only accept 1 MatchPhase and not a Set\nFor the \"started\" case, return an OrFilter(MatchPhaseFilter(RUNNING), MatchPhaseFilter(FINISHED))\n\nSee what I'm getting at?", "url": "https://github.com/PGMDev/PGM/pull/689#discussion_r521514643", "createdAt": "2020-11-11T17:19:46Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -443,4 +442,52 @@ public StructuralLoadFilter parseStructuralLoad(Element el) throws InvalidXMLExc\n   public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n     return new TimeFilter(XMLUtils.parseDuration(el, null));\n   }\n+\n+  @MethodParser(\"match-phase\")\n+  public MatchPhaseFilter parseMatchPhase(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(el.getValue(), el);\n+  }\n+\n+  @MethodParser(\"match-started\")\n+  public MatchPhaseFilter parseMatchStarted(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"started\", el);\n+  }\n+\n+  @MethodParser(\"match-running\")\n+  public MatchPhaseFilter parseMatchRunning(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"running\", el);\n+  }\n+\n+  @MethodParser(\"match-finished\")\n+  public MatchPhaseFilter parseMatchFinished(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"finished\", el);\n+  }\n+\n+  private MatchPhaseFilter parseMatchPhaseFilter(String matchState, Element el)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee908b4f1f1b88727c69e937abf73d8544c4490c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDk1ODI2", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-540495826", "createdAt": "2020-11-29T16:34:59Z", "commit": {"oid": "0eaaab839e88bc2e63e81ef09ea99c8295d1607d"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0eaaab839e88bc2e63e81ef09ea99c8295d1607d", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/0eaaab839e88bc2e63e81ef09ea99c8295d1607d", "committedDate": "2020-11-14T17:12:56Z", "message": "Change parsing logic\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}, "afterCommit": {"oid": "1c4874cf8de3b511926688ba0708fb0e2efe288e", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/1c4874cf8de3b511926688ba0708fb0e2efe288e", "committedDate": "2020-12-03T21:55:39Z", "message": "refactor\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjkzMzAw", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-550693300", "createdAt": "2020-12-12T05:44:10Z", "commit": {"oid": "1c4874cf8de3b511926688ba0708fb0e2efe288e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNTo0NDoxMVrOIEbEXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNTo0NDoxMVrOIEbEXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUwODcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case \"running\":\n          \n          \n            \n                    matchPhase = MatchPhase.RUNNING;\n          \n          \n            \n                    break;\n          \n          \n            \n                  case \"finished\":\n          \n          \n            \n                    matchPhase = MatchPhase.FINISHED;\n          \n          \n            \n                    break;\n          \n          \n            \n                  case \"starting\":\n          \n          \n            \n                    matchPhase = MatchPhase.STARTING;\n          \n          \n            \n                    break;\n          \n          \n            \n                  case \"idle\":\n          \n          \n            \n                    matchPhase = MatchPhase.IDLE;\n          \n          \n            \n                    break;\n          \n          \n            \n                  case \"started\":\n          \n          \n            \n                    return AnyFilter.of(\n          \n          \n            \n                        new MatchPhaseFilter(MatchPhase.RUNNING), new MatchPhaseFilter(MatchPhase.FINISHED));\n          \n          \n            \n                  case \"running\": return MatchPhaseFilter.RUNNING;\n          \n          \n            \n                  case \"finished\": return MatchPhaseFilter.FINISHED;\n          \n          \n            \n                // ...\n          \n      \n    \n    \n  \n\nAs suggested in discord you should make static final fields in MatchPhaseFilter and reuse the same instances", "url": "https://github.com/PGMDev/PGM/pull/689#discussion_r541508702", "createdAt": "2020-12-12T05:44:11Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -453,4 +454,50 @@ public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n   public ScoreFilter parseScoreFilter(Element el) throws InvalidXMLException {\n     return new ScoreFilter(XMLUtils.parseNumericRange(new Node(el), Integer.class));\n   }\n+\n+  @MethodParser(\"match-phase\")\n+  public Filter parseMatchPhase(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(el.getValue(), el);\n+  }\n+\n+  @MethodParser(\"match-started\")\n+  public Filter parseMatchStarted(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"started\", el);\n+  }\n+\n+  @MethodParser(\"match-running\")\n+  public Filter parseMatchRunning(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"running\", el);\n+  }\n+\n+  @MethodParser(\"match-finished\")\n+  public Filter parseMatchFinished(Element el) throws InvalidXMLException {\n+    return parseMatchPhaseFilter(\"finished\", el);\n+  }\n+\n+  private Filter parseMatchPhaseFilter(String matchState, Element el) throws InvalidXMLException {\n+\n+    MatchPhase matchPhase = null;\n+\n+    switch (matchState) {\n+      case \"running\":\n+        matchPhase = MatchPhase.RUNNING;\n+        break;\n+      case \"finished\":\n+        matchPhase = MatchPhase.FINISHED;\n+        break;\n+      case \"starting\":\n+        matchPhase = MatchPhase.STARTING;\n+        break;\n+      case \"idle\":\n+        matchPhase = MatchPhase.IDLE;\n+        break;\n+      case \"started\":\n+        return AnyFilter.of(\n+            new MatchPhaseFilter(MatchPhase.RUNNING), new MatchPhaseFilter(MatchPhase.FINISHED));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c4874cf8de3b511926688ba0708fb0e2efe288e"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eaf5a697a1ef3a161aabe0eccec50ebb328dadf", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/5eaf5a697a1ef3a161aabe0eccec50ebb328dadf", "committedDate": "2020-12-20T22:00:17Z", "message": "Add a match state filter\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db6400361b2dd33d1b18c05f0807a4b8fbd0ce6", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/8db6400361b2dd33d1b18c05f0807a4b8fbd0ce6", "committedDate": "2020-12-20T22:00:17Z", "message": "Add old 1.4.2 support\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6053c3eaf60370908456ac520019bd3f8ba2929", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/d6053c3eaf60370908456ac520019bd3f8ba2929", "committedDate": "2020-12-20T22:00:17Z", "message": "MatchStateFilter -> MatchPhaseFilter\n- Rework logic\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3235df6a5ce9b24101910708a35266510f809ce7", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/3235df6a5ce9b24101910708a35266510f809ce7", "committedDate": "2020-12-20T22:00:17Z", "message": "Change parsing logic\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7b1e82b3cd8e4142f284815bf803408dcf63e91", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/d7b1e82b3cd8e4142f284815bf803408dcf63e91", "committedDate": "2020-12-20T22:00:17Z", "message": "refactor\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edc9769b93b4f5422cf05dae80821dece29e2c9e", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/edc9769b93b4f5422cf05dae80821dece29e2c9e", "committedDate": "2020-12-20T22:00:17Z", "message": "pre-initialize match state filters\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c4874cf8de3b511926688ba0708fb0e2efe288e", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/1c4874cf8de3b511926688ba0708fb0e2efe288e", "committedDate": "2020-12-03T21:55:39Z", "message": "refactor\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}, "afterCommit": {"oid": "edc9769b93b4f5422cf05dae80821dece29e2c9e", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/edc9769b93b4f5422cf05dae80821dece29e2c9e", "committedDate": "2020-12-20T22:00:17Z", "message": "pre-initialize match state filters\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTU2MjQz", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-558956243", "createdAt": "2020-12-27T20:09:53Z", "commit": {"oid": "edc9769b93b4f5422cf05dae80821dece29e2c9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDY0MjQ3", "url": "https://github.com/PGMDev/PGM/pull/689#pullrequestreview-564464247", "createdAt": "2021-01-08T17:53:55Z", "commit": {"oid": "edc9769b93b4f5422cf05dae80821dece29e2c9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 339, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}