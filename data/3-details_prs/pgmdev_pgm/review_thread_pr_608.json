{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjE5Njcw", "number": 608, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo1Nzo0OVrOEX-7IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowMTowNVrOEX-_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTgzNjQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/namedecorations/NameDecorationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo1Nzo0OVrOHAEoZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo1Nzo0OVrOHAEoZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzNzkyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              Component getPrefixComponent(UUID uuid);\n          \n          \n            \n            \n          \n          \n            \n              Component getSuffixComponent(UUID uuid);\n          \n          \n            \n              default Component getPrefixComponent(UUID uuid) {\n          \n          \n            \n                  return TextComponent.of(getPrefix(uuid));\n          \n          \n            \n              }\n          \n          \n            \n            \n          \n          \n            \n              default Component getSuffixComponent(UUID uuid) {\n          \n          \n            \n                  return TextComponent.of(getSuffix(uuid));\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nKeeping this interface simple to implement for 3rd parties is relevant IMO, and it's an easy enough default. (Maybe do a component parsing from legacy text instead of just a plain text with the text)", "url": "https://github.com/PGMDev/PGM/pull/608#discussion_r469837924", "createdAt": "2020-08-13T09:57:49Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/namedecorations/NameDecorationProvider.java", "diffHunk": "@@ -1,11 +1,16 @@\n package tc.oc.pgm.namedecorations;\n \n import java.util.UUID;\n+import net.kyori.text.Component;\n \n /** This interface is intended to return what prefix and suffix a player should have */\n public interface NameDecorationProvider {\n \n   String getPrefix(UUID uuid);\n \n   String getSuffix(UUID uuid);\n+\n+  Component getPrefixComponent(UUID uuid);\n+\n+  Component getSuffixComponent(UUID uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1bb7046237748d631ab4c0014c2b6fbbc1072d4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTg0ODc1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/namedecorations/NameDecorationRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowMTowNVrOHAEv0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowMTowNVrOHAEv0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzOTgyNg==", "bodyText": "I'd do the same as above, provide a fallback default, even if the registry isn't really something that should be reimplemented by 3rd parties often", "url": "https://github.com/PGMDev/PGM/pull/608#discussion_r469839826", "createdAt": "2020-08-13T10:01:05Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/namedecorations/NameDecorationRegistry.java", "diffHunk": "@@ -15,6 +16,17 @@\n    */\n   String getDecoratedName(Player player, Party party);\n \n+  /**\n+   * Get the fully decorated name as a Component\n+   *\n+   * <p>Note: Allows for prefix/suffix hover events\n+   *\n+   * @param player The player to decorate\n+   * @param party The party this player is currently in\n+   * @return The name, decorated, in component form\n+   */\n+  Component getDecoratedNameComponent(Player player, Party party);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1bb7046237748d631ab4c0014c2b6fbbc1072d4"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1037, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}