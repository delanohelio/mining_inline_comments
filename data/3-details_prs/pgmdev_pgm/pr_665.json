{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1OTk4NjY4", "number": 665, "title": "Reintroduce projectile trails", "bodyText": "Reintroduce Projectile trails\nThis PR reintroduces a fun feature from the old PGM. Arrow trails spawn a small particle trail matching your teams color. I adapted the code that made this possible from the old PGM as well as added the ability to toggle the arrow trails on and off via a new setting/toggle effects Note: I also made the setting \u201ceffects\u201d that way in the future if we choose to allow more customized effects they can fall under this setting category.\nScreenshot\n\nFeedback\nThis is a feature I personally enjoy and adds a bit of uniqueness to PGM. However if desired I can add an option to the config to completely disable this feature. However I felt that having simply the new setting toggle would be enough.\nAny feedback is appreciated \ud83d\udc4d\nSigned-off-by: applenick applenick@users.noreply.github.com", "createdAt": "2020-10-01T06:30:05Z", "url": "https://github.com/PGMDev/PGM/pull/665", "merged": true, "mergeCommit": {"oid": "eece84854d10f2881e82bb2628b4941a6d579e8a"}, "closed": true, "closedAt": "2020-10-09T01:23:43Z", "author": {"login": "applenick"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOFIbDAH2gAyNDk1OTk4NjY4OmM4Y2QwNTY1MDRjYWZlNDZhMzA5MmNmMjI4ZmJmYzk0ZmY2ZTU3ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQr0nsgFqTUwNTI5MTI2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8cd056504cafe46a3092cf228fbfc94ff6e57e7", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/c8cd056504cafe46a3092cf228fbfc94ff6e57e7", "committedDate": "2020-09-30T23:10:54Z", "message": "Reintroduce projectile trails\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQ4MDE1", "url": "https://github.com/PGMDev/PGM/pull/665#pullrequestreview-500048015", "createdAt": "2020-10-01T06:44:43Z", "commit": {"oid": "c8cd056504cafe46a3092cf228fbfc94ff6e57e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NDo0NFrOHa8f2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0NDo0NFrOHa8f2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxNjIxOA==", "bodyText": "This would also remove critical effects for people with /toggle effects off? Unsure how to solve, maybe add white trails manually?", "url": "https://github.com/PGMDev/PGM/pull/665#discussion_r498016218", "createdAt": "2020-10-01T06:44:44Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/modules/ProjectileTrailMatchModule.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.bukkit.Color;\n+import org.bukkit.Effect;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.EventPriority;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.ProjectileHitEvent;\n+import org.bukkit.event.entity.ProjectileLaunchEvent;\n+import org.bukkit.metadata.FixedMetadataValue;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.setting.SettingKey;\n+import tc.oc.pgm.api.setting.SettingValue;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.RUNNING)\n+public class ProjectileTrailMatchModule implements MatchModule, Listener {\n+\n+  private static final String TRAIL_META = \"projectile_trail_color\";\n+  private static final String CRITICAL_META = \"arrow_is_critical\";\n+\n+  private final Match match;\n+\n+  public ProjectileTrailMatchModule(Match match) {\n+    this.match = match;\n+    match\n+        .getExecutor(MatchScope.RUNNING)\n+        .scheduleAtFixedRate(this::checkMatchProjectiles, 0l, 50, TimeUnit.MILLISECONDS);\n+  }\n+\n+  public void checkMatchProjectiles() {\n+    match.getWorld().getEntitiesByClass(Projectile.class).stream()\n+        .filter(projectile -> projectile.hasMetadata(TRAIL_META))\n+        .forEach(\n+            projectile -> {\n+              if (projectile.isDead() || projectile.isOnGround()) {\n+                projectile.removeMetadata(TRAIL_META, PGM.get());\n+              } else {\n+                final Color color = (Color) projectile.getMetadata(TRAIL_META, PGM.get()).value();\n+\n+                match.getPlayers().stream()\n+                    .filter(\n+                        pl ->\n+                            pl.getSettings().getValue(SettingKey.EFFECTS)\n+                                == SettingValue.EFFECTS_ON)\n+                    .forEach(\n+                        player -> {\n+                          player\n+                              .getBukkit()\n+                              .spigot()\n+                              .playEffect(\n+                                  projectile.getLocation(),\n+                                  Effect.COLOURED_DUST,\n+                                  0,\n+                                  0,\n+                                  rgbToParticle(color.getRed()),\n+                                  rgbToParticle(color.getGreen()),\n+                                  rgbToParticle(color.getBlue()),\n+                                  1,\n+                                  0,\n+                                  50);\n+                        });\n+              }\n+            });\n+  }\n+\n+  private float rgbToParticle(int rgb) {\n+    return Math.max(0.001f, (rgb / 255.0f));\n+  }\n+\n+  @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)\n+  public void onProjectileLaunch(ProjectileLaunchEvent event) {\n+    MatchPlayer player = match.getPlayer(event.getActor());\n+    if (player != null) {\n+      final Projectile projectile = event.getEntity();\n+      projectile.setMetadata(\n+          TRAIL_META, new FixedMetadataValue(PGM.get(), player.getParty().getFullColor()));\n+      // Set critical metadata to false in order to remove default particle trail.\n+      // The metadata will be restored just before the arrow hits something.\n+      if (projectile instanceof Arrow) {\n+        final Arrow arrow = (Arrow) projectile;\n+        arrow.setMetadata(CRITICAL_META, new FixedMetadataValue(PGM.get(), arrow.isCritical()));\n+        arrow.setCritical(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8cd056504cafe46a3092cf228fbfc94ff6e57e7"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bbdce33fd5bafbf5316a235f37fdaa77ebf118c", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/4bbdce33fd5bafbf5316a235f37fdaa77ebf118c", "committedDate": "2020-10-02T23:52:48Z", "message": "Fix critical effects for projectiles\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MjkxMjY4", "url": "https://github.com/PGMDev/PGM/pull/665#pullrequestreview-505291268", "createdAt": "2020-10-09T01:23:25Z", "commit": {"oid": "4bbdce33fd5bafbf5316a235f37fdaa77ebf118c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 320, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}