{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyOTM2NzU2", "number": 505, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNTozMzozMVrOEAXX5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDoyMDowNVrOECXTxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODE4NDA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNTozMzozMVrOGbmN0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODo1Nzo0N1rOGe8VYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5MDg2NQ==", "bodyText": "Should define this in Permissions", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r431590865", "createdAt": "2020-05-28T05:33:31Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.Collection;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.map.Contributor;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerAddEvent;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class MapmakerMatchModule implements MatchModule, Listener {\n+  private final Collection<Contributor> authors;\n+\n+  public MapmakerMatchModule(Match match) {\n+    this.authors = match.getMap().getAuthors();\n+  }\n+\n+  @EventHandler(ignoreCancelled = true)\n+  public void onPlayerAddEvent(final MatchPlayerAddEvent event) {\n+    MatchPlayer player = event.getPlayer();\n+    player\n+        .getBukkit()\n+        .addAttachment(\n+            PGM.get(),\n+            \"pgm.group.mapmaker\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwNjY5NQ==", "bodyText": "Define the permission group? So move it from config -> Permissions?", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r433306695", "createdAt": "2020-06-01T15:31:21Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.Collection;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.map.Contributor;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerAddEvent;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class MapmakerMatchModule implements MatchModule, Listener {\n+  private final Collection<Contributor> authors;\n+\n+  public MapmakerMatchModule(Match match) {\n+    this.authors = match.getMap().getAuthors();\n+  }\n+\n+  @EventHandler(ignoreCancelled = true)\n+  public void onPlayerAddEvent(final MatchPlayerAddEvent event) {\n+    MatchPlayer player = event.getPlayer();\n+    player\n+        .getBukkit()\n+        .addAttachment(\n+            PGM.get(),\n+            \"pgm.group.mapmaker\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5MDg2NQ=="}, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NzI4NQ==", "bodyText": "Then i would also have to code in a prefix provider for mapmakers?", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r433397285", "createdAt": "2020-06-01T18:00:47Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.Collection;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.map.Contributor;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerAddEvent;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class MapmakerMatchModule implements MatchModule, Listener {\n+  private final Collection<Contributor> authors;\n+\n+  public MapmakerMatchModule(Match match) {\n+    this.authors = match.getMap().getAuthors();\n+  }\n+\n+  @EventHandler(ignoreCancelled = true)\n+  public void onPlayerAddEvent(final MatchPlayerAddEvent event) {\n+    MatchPlayer player = event.getPlayer();\n+    player\n+        .getBukkit()\n+        .addAttachment(\n+            PGM.get(),\n+            \"pgm.group.mapmaker\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5MDg2NQ=="}, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODg4Mw==", "bodyText": "All that's being asked is for the constant string pgm.group.mapmaker to be defined in the Permissions.java file instead of here", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r434918883", "createdAt": "2020-06-03T23:55:38Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.Collection;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.map.Contributor;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerAddEvent;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class MapmakerMatchModule implements MatchModule, Listener {\n+  private final Collection<Contributor> authors;\n+\n+  public MapmakerMatchModule(Match match) {\n+    this.authors = match.getMap().getAuthors();\n+  }\n+\n+  @EventHandler(ignoreCancelled = true)\n+  public void onPlayerAddEvent(final MatchPlayerAddEvent event) {\n+    MatchPlayer player = event.getPlayer();\n+    player\n+        .getBukkit()\n+        .addAttachment(\n+            PGM.get(),\n+            \"pgm.group.mapmaker\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5MDg2NQ=="}, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA5ODk3Ng==", "bodyText": "Aaaah, i see. Thanks!", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r435098976", "createdAt": "2020-06-04T08:57:47Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/modules/MapmakerMatchModule.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package tc.oc.pgm.modules;\n+\n+import java.util.Collection;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.map.Contributor;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerAddEvent;\n+import tc.oc.pgm.events.ListenerScope;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class MapmakerMatchModule implements MatchModule, Listener {\n+  private final Collection<Contributor> authors;\n+\n+  public MapmakerMatchModule(Match match) {\n+    this.authors = match.getMap().getAuthors();\n+  }\n+\n+  @EventHandler(ignoreCancelled = true)\n+  public void onPlayerAddEvent(final MatchPlayerAddEvent event) {\n+    MatchPlayer player = event.getPlayer();\n+    player\n+        .getBukkit()\n+        .addAttachment(\n+            PGM.get(),\n+            \"pgm.group.mapmaker\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5MDg2NQ=="}, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTE0NTAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/config.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDoyMDowNVrOGexukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDoyMDowNVrOGexukA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkyNTIwMA==", "bodyText": "Also add a + before, so its consistent with the rest of the config.", "url": "https://github.com/PGMDev/PGM/pull/505#discussion_r434925200", "createdAt": "2020-06-04T00:20:05Z", "author": {"login": "Electroid"}, "path": "core/src/main/resources/config.yml", "diffHunk": "@@ -136,6 +136,12 @@ groups:\n       - \"-worldedit.navigation.jumpto.tool\"\n       - \"-commandbook.teleport\"\n \n+  # A special group for authors of the playing map\n+  mapmaker:\n+    prefix: \"&9*\"\n+    permissions:\n+      - \"pgm.premium\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d1b849300c0bdba50cc467b46ed6f1da930152"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 979, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}