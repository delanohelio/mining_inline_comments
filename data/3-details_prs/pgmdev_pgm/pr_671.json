{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDY5NjA5", "number": 671, "title": "Add offset filter", "bodyText": "Closes #664\nThis PR adds the generic QueryModifier and a LocationQueryModifier. A QueryModifier takes a type of query, and modifies it before passing it to its child filter. The LocationQueryModifier takes any query with a Location and transforms it into a BlockQuery with a custom Location.\n<filters>\n  <offset id=\"hardFilter\" location=\"10.5, 5, 15.5\">\n        <material>bedrock</material>\n    </offset>\n\n  <offset id=\"blockUnderFeetFilter\" location=\"~0, ~-1, ~0\">\n        <material>cobblestone</material>\n    </offset>\n\n  <offset id=\"inFrontFilter\" location=\"^0,^0,^1\">\n        <material>water</material>\n    </offset>\n\n</filters>\nNormal numbers(hardFilter) and numbers with ~(blockUnderFeetFilter) are world coordinates.\nNumbers with ^(inFrontFilter) are local coordinates. (^<left/right>, ^<up/down>, ^<forwards/backwards)\nWorld coordinates can be mixed with each other, but you can not mix world and local coordinates.\nhardFilter looks for a bedrock block on the specific coordinates given\nblockUnderFeetFilter looks for a cobblestone block under the players feet, ^0,^-1,^0 would also yield the same result\ninFrontFilter looks for a water block in front of the player, switching out 1 for -1 would look a block behind instead\nIt is worth noting since dynamic filters is currently very limited (see FilterMatchModule) this will only be checked once the check is triggered, and will not trigger anything by itself. (e.g if this is a kit filter where the kit is applied to a region, the filter will only be checked once the player enters the region, and not continuously as the player is in the region). This puts the current usability of this filter low, but the issue is not something covered by this PR.", "createdAt": "2020-10-04T17:31:06Z", "url": "https://github.com/PGMDev/PGM/pull/671", "merged": true, "mergeCommit": {"oid": "117e051316326797696df0bc0a23cf1c0e024bdb"}, "closed": true, "closedAt": "2020-12-18T12:35:39Z", "author": {"login": "KingOfSquares"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQUUurABqjM4NTI2NzY3MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnXYsMAFqTU1NTQ0OTM2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87ecc274a79013274d2eeadefbd531f38a996c10", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/87ecc274a79013274d2eeadefbd531f38a996c10", "committedDate": "2020-10-07T22:00:02Z", "message": "Properly implement local locations\n- OffsetFilter -> LocationQueryModifier\n\nSigned-off-by: KingSimon <simonmorland@gmail.com>"}, "afterCommit": {"oid": "dba65089275671e1438a4741ae17916edfc4a0d2", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/dba65089275671e1438a4741ae17916edfc4a0d2", "committedDate": "2020-10-07T22:00:26Z", "message": "Properly implement local locations\n- OffsetFilter -> LocationQueryModifier\n\nSigned-off-by: KingSimon <simonmorland@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NzUxODQ3", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-504751847", "createdAt": "2020-10-08T12:56:40Z", "commit": {"oid": "dba65089275671e1438a4741ae17916edfc4a0d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1Njo0MFrOHedNaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1Njo0MFrOHedNaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5Nzg5OQ==", "bodyText": "You're losing pitch & yaw information when doing this.\nUse location.set(x,y,z) to keep yaw/pitch, but watch out of unintended side-effects, i doubt it will be a thing since player#getLocation always returns a new location, but if other places create this location it could be keeping it modified even after leaving the child filter.\nAlternatively just copy pitch & yaw alongisde world", "url": "https://github.com/PGMDev/PGM/pull/671#discussion_r501697899", "createdAt": "2020-10-08T12:56:40Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/LocationQueryModifier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package tc.oc.pgm.filters;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.Location;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import tc.oc.pgm.api.filter.Filter;\n+import tc.oc.pgm.api.filter.query.LocationQuery;\n+import tc.oc.pgm.filters.query.BlockQuery;\n+\n+public class LocationQueryModifier extends QueryModifier<LocationQuery> {\n+\n+  private final String[] coords;\n+  private final boolean local;\n+  Filter child;\n+\n+  public LocationQueryModifier(Filter child, String[] coords, boolean local) {\n+    super(child);\n+    this.coords = coords;\n+    this.local = local;\n+    this.child = child;\n+  }\n+\n+  @Override\n+  protected LocationQuery modifyQuery(LocationQuery query) {\n+    Location location = query.getLocation();\n+\n+    Vector newVector;\n+\n+    if (local) {\n+      newVector = parseLocalLocation(query.getLocation(), coords[0], coords[1], coords[2]);\n+    } else {\n+      newVector =\n+          new Vector(\n+              parseRelativeLocation(coords[0], location.getX()),\n+              parseRelativeLocation(coords[1], location.getY()),\n+              parseRelativeLocation(coords[2], location.getZ()));\n+    }\n+\n+    return new BlockQueryCustomLocation(\n+        query.getEvent(), newVector.toLocation(query.getMatch().getWorld()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba65089275671e1438a4741ae17916edfc4a0d2"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjE1MzY4", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-513215368", "createdAt": "2020-10-20T23:55:30Z", "commit": {"oid": "5f8e79419a74533669f5e6f45c9254ce6cc1b7ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMzo1NTozMFrOHlVOtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMzo1NTozMFrOHlVOtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkwNzE5MA==", "bodyText": "Break this up into multiple classes, right now you are parsing this field during every query. Same with the relative vs. absolute coordinates. Do parsing at XML time, but it creates different classes with different functionality.", "url": "https://github.com/PGMDev/PGM/pull/671#discussion_r508907190", "createdAt": "2020-10-20T23:55:30Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/filters/LocationQueryModifier.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package tc.oc.pgm.filters;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.Location;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import tc.oc.pgm.api.filter.Filter;\n+import tc.oc.pgm.api.filter.query.LocationQuery;\n+import tc.oc.pgm.filters.query.BlockQuery;\n+\n+public class LocationQueryModifier extends QueryModifier<LocationQuery> {\n+\n+  private final String[] coords;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f8e79419a74533669f5e6f45c9254ce6cc1b7ab"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTA1MDEz", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-532905013", "createdAt": "2020-11-17T23:45:46Z", "commit": {"oid": "dbd3c102aaa5b07c45925fbbc3e5b08edaef4662"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo0NTo0NlrOH1QFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo0NTo0NlrOH1QFEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMDAxNw==", "bodyText": "I belive you could just pass this vector arround instead of a double[] with 3 values.\nIn case of the WorldLocationQueryModifier, pass both the vector and if x, y or z are relative or absolute", "url": "https://github.com/PGMDev/PGM/pull/671#discussion_r525600017", "createdAt": "2020-11-17T23:45:46Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -443,4 +446,46 @@ public StructuralLoadFilter parseStructuralLoad(Element el) throws InvalidXMLExc\n   public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n     return new TimeFilter(XMLUtils.parseDuration(el, null));\n   }\n+\n+  // Methods for parsing QueryModifiers\n+\n+  @MethodParser(\"offset\")\n+  public LocationQueryModifier parseOffsetFilter(Element el) throws InvalidXMLException {\n+    String value = el.getAttributeValue(\"location\");\n+    // Check vector format\n+    XMLUtils.parseVector(new Node(el), value.replaceAll(\"[\\\\^~]\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbd3c102aaa5b07c45925fbbc3e5b08edaef4662"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e12b44dbb2b016aae94e5cba86b171ceaf2d3ff", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/3e12b44dbb2b016aae94e5cba86b171ceaf2d3ff", "committedDate": "2020-12-03T21:57:55Z", "message": "Add offset filter\n\nSigned-off-by: KingSimon <manmusic979@gmail.com>\nSigned-off-by: KingSimon <simonmorland@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07fe6109cb6fa2719282c80ccede8bdf8d7604cd", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/07fe6109cb6fa2719282c80ccede8bdf8d7604cd", "committedDate": "2020-12-03T21:58:23Z", "message": "Properly implement local locations\n- OffsetFilter -> LocationQueryModifier\n\nSigned-off-by: KingSimon <simonmorland@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "626f143441ab468d67ddc4148c252ae9b10a7f86", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/626f143441ab468d67ddc4148c252ae9b10a7f86", "committedDate": "2020-12-03T21:58:23Z", "message": "Keep correct yaw and pitch after modification\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "020530c5a952207c8e9b059e0246390f13e3c467", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/020530c5a952207c8e9b059e0246390f13e3c467", "committedDate": "2020-12-03T21:58:23Z", "message": "Split the LocationQueryModifier into two separate ones\n- All string -> coordinate is done at XML parsing time\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/b1c121aed7538e6349795b16bdaba4f574444b5d", "committedDate": "2020-12-03T22:05:07Z", "message": "Use Vector instead of double array\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dbd3c102aaa5b07c45925fbbc3e5b08edaef4662", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/dbd3c102aaa5b07c45925fbbc3e5b08edaef4662", "committedDate": "2020-11-02T18:02:27Z", "message": "Split the LocationQueryModifier into two separate ones\n- All string -> coordinate is done at XML parsing time\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}, "afterCommit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/b1c121aed7538e6349795b16bdaba4f574444b5d", "committedDate": "2020-12-03T22:05:07Z", "message": "Use Vector instead of double array\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTQyMzQ0", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-544542344", "createdAt": "2020-12-03T23:19:11Z", "commit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzoxOToxMVrOH-5njw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzoxOToxMVrOH-5njw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNzc3NQ==", "bodyText": "You're already running an XMLUtils.parseVector all the way at the top, no need to parse individual coords in substrings", "url": "https://github.com/PGMDev/PGM/pull/671#discussion_r535717775", "createdAt": "2020-12-03T23:19:11Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -453,4 +457,46 @@ public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n   public ScoreFilter parseScoreFilter(Element el) throws InvalidXMLException {\n     return new ScoreFilter(XMLUtils.parseNumericRange(new Node(el), Integer.class));\n   }\n+\n+  // Methods for parsing QueryModifiers\n+\n+  @MethodParser(\"offset\")\n+  public LocationQueryModifier parseOffsetFilter(Element el) throws InvalidXMLException {\n+    String value = el.getAttributeValue(\"location\");\n+    // Check vector format\n+    XMLUtils.parseVector(new Node(el), value.replaceAll(\"[\\\\^~]\", \"\"));\n+\n+    String[] coords = value.split(\"\\\\s*,\\\\s*\");\n+\n+    Boolean local = null;\n+    for (String coord : coords) {\n+      if (local == null) {\n+        local = coord.startsWith(\"^\");\n+      }\n+\n+      if (coord.startsWith(\"^\") != local)\n+        throw new InvalidXMLException(\"Cannot mix world & local coordinates\", el);\n+    }\n+\n+    if (local == null) throw new InvalidXMLException(\"No coordinates provided\", el);\n+\n+    if (local) {\n+      double x = Double.parseDouble(coords[0].substring(1));\n+      double y = Double.parseDouble(coords[1].substring(1));\n+      double z = Double.parseDouble(coords[2].substring(1));\n+      return new LocalLocationQueryModifier(parseChild(el), new Vector(x, y, z));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTQyNjM2", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-544542636", "createdAt": "2020-12-03T23:19:52Z", "commit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzoxOTo1MlrOH-5ouw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzoxOTo1MlrOH-5ouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxODA3NQ==", "bodyText": "kinda same thing here, no need for coordinates, just use the vector and just check for ~", "url": "https://github.com/PGMDev/PGM/pull/671#discussion_r535718075", "createdAt": "2020-12-03T23:19:52Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/filters/FilterParser.java", "diffHunk": "@@ -453,4 +457,46 @@ public TimeFilter parseTimeFilter(Element el) throws InvalidXMLException {\n   public ScoreFilter parseScoreFilter(Element el) throws InvalidXMLException {\n     return new ScoreFilter(XMLUtils.parseNumericRange(new Node(el), Integer.class));\n   }\n+\n+  // Methods for parsing QueryModifiers\n+\n+  @MethodParser(\"offset\")\n+  public LocationQueryModifier parseOffsetFilter(Element el) throws InvalidXMLException {\n+    String value = el.getAttributeValue(\"location\");\n+    // Check vector format\n+    XMLUtils.parseVector(new Node(el), value.replaceAll(\"[\\\\^~]\", \"\"));\n+\n+    String[] coords = value.split(\"\\\\s*,\\\\s*\");\n+\n+    Boolean local = null;\n+    for (String coord : coords) {\n+      if (local == null) {\n+        local = coord.startsWith(\"^\");\n+      }\n+\n+      if (coord.startsWith(\"^\") != local)\n+        throw new InvalidXMLException(\"Cannot mix world & local coordinates\", el);\n+    }\n+\n+    if (local == null) throw new InvalidXMLException(\"No coordinates provided\", el);\n+\n+    if (local) {\n+      double x = Double.parseDouble(coords[0].substring(1));\n+      double y = Double.parseDouble(coords[1].substring(1));\n+      double z = Double.parseDouble(coords[2].substring(1));\n+      return new LocalLocationQueryModifier(parseChild(el), new Vector(x, y, z));\n+    } else {\n+      boolean[] relative = new boolean[3];\n+      double[] coordinates = new double[3];\n+      for (int i = 0; i < coords.length; i++) {\n+        String coord = coords[i];\n+        boolean isRelative = coord.startsWith(\"~\");\n+        relative[i] = isRelative;\n+        coordinates[i] = Double.parseDouble(isRelative ? coord.substring(1) : coord);\n+      }\n+\n+      return new WorldLocationQueryModifier(\n+          parseChild(el), new Vector(coordinates[0], coordinates[1], coordinates[2]), relative);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c121aed7538e6349795b16bdaba4f574444b5d"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4f723d342bdd40f22fee4737a3e00ffc847f26d", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/e4f723d342bdd40f22fee4737a3e00ffc847f26d", "committedDate": "2020-12-05T00:41:10Z", "message": "stash\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ca4828f512b4bc076dbf6ae595b864c24af0b89", "author": {"user": {"login": "KingOfSquares", "name": null}}, "url": "https://github.com/PGMDev/PGM/commit/9ca4828f512b4bc076dbf6ae595b864c24af0b89", "committedDate": "2020-12-06T12:23:14Z", "message": "Make Vector once\n- Add helpful check if someone forgets providing a offset vector\n\nSigned-off-by: KingSimon <19822231+KingOfSquares@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODc4MTY4", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-550878168", "createdAt": "2020-12-13T02:24:59Z", "commit": {"oid": "9ca4828f512b4bc076dbf6ae595b864c24af0b89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NDQ5MzYw", "url": "https://github.com/PGMDev/PGM/pull/671#pullrequestreview-555449360", "createdAt": "2020-12-18T12:35:04Z", "commit": {"oid": "9ca4828f512b4bc076dbf6ae595b864c24af0b89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 332, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}