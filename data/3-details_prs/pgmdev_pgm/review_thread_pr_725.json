{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDU5NzI3", "number": 725, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODoyMzo1MFrOE95lcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwODo1MDozNVrOE-Pfug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzQyMDY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODoyMzo1MFrOH6045A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODo1MjowNlrOH61wgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NTk4OA==", "bodyText": "The default should probably be 0", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531445988", "createdAt": "2020-11-27T08:23:50Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java", "diffHunk": "@@ -87,6 +87,8 @@ public static ControlPointDefinition parseControlPoint(\n     boolean permanent = XMLUtils.parseBoolean(elControlPoint.getAttribute(\"permanent\"), false);\n     float pointsPerSecond =\n         XMLUtils.parseNumber(elControlPoint.getAttribute(\"points\"), Float.class, 1f);\n+    float pointsBonus =\n+        XMLUtils.parseNumber(elControlPoint.getAttribute(\"bonus-points\"), Float.class, 1f);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef58ccfd10ab7a52f4720f9d1ecfdf2b61cf14c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ2MDIyNg==", "bodyText": "Thanks for catching that, at the time I did this a few weeks ago I didn't realize this sets the default value.", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531460226", "createdAt": "2020-11-27T08:52:06Z", "author": {"login": "CoWinkKeyDinkInc"}, "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java", "diffHunk": "@@ -87,6 +87,8 @@ public static ControlPointDefinition parseControlPoint(\n     boolean permanent = XMLUtils.parseBoolean(elControlPoint.getAttribute(\"permanent\"), false);\n     float pointsPerSecond =\n         XMLUtils.parseNumber(elControlPoint.getAttribute(\"points\"), Float.class, 1f);\n+    float pointsBonus =\n+        XMLUtils.parseNumber(elControlPoint.getAttribute(\"bonus-points\"), Float.class, 1f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NTk4OA=="}, "originalCommit": {"oid": "3ef58ccfd10ab7a52f4720f9d1ecfdf2b61cf14c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTc3ODE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QyMjo1NzozMFrOH7Krvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QyMjo1NzozMFrOH7Krvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgwMzA3MQ==", "bodyText": "The points are added on capture but never removed when uncaptured, see:\nhttps://github.com/OvercastNetwork/ProjectAres/blob/master/PGM/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java#L349-L353\nAlso i belive this code should be a bit lower, when the controlling team changes, not when the capturing team does", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531803071", "createdAt": "2020-11-27T22:57:30Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "diffHunk": "@@ -348,6 +348,11 @@ private void dominateAndFireEvents(@Nullable Competitor dominantTeam, Duration d\n     if (oldCapturingTeam != this.capturingTeam) {\n       this.match.callEvent(\n           new CapturingTeamChangeEvent(this.match, this, oldCapturingTeam, this.capturingTeam));\n+      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n+      // Gives a set number of Owner points to a team when captured.\n+      if (this.capturingTeam != null && scoreMatchModule != null) {\n+        scoreMatchModule.incrementScore(this.capturingTeam, this.getDefinition().getPointsOwner());\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee948b8ddf6f485c7e6c20eb76df76c7358d9f11"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzAxMDUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwODo1MDozNVrOH7XIwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwODo1MDozNVrOH7XIwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNzEwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (this.controllingTeam != null && scoreMatchModule != null) {\n          \n          \n            \n                  if (scoreMatchModule != null) {\n          \n      \n    \n    \n  \n\nIf you do not apply this logic when the controlling team is null, capturing won't give points since the current controlling team is null. In general points with a netrual state won't have this feature working as intended", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r532007104", "createdAt": "2020-11-28T08:50:35Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "diffHunk": "@@ -354,6 +354,17 @@ private void dominateAndFireEvents(@Nullable Competitor dominantTeam, Duration d\n       this.match.callEvent(\n           new ControllerChangeEvent(this.match, this, oldControllingTeam, this.controllingTeam));\n \n+      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n+      // Gives a set number of owner points to a team when captured.\n+      if (this.controllingTeam != null && scoreMatchModule != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e6f0522844821fc3ad3ec09e00d27b38b1d617"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 961, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}