{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODA5NjMz", "number": 180, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMTowMFrODVjnMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjoxNjoyNVrODV0UJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTMwMTYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMTowMFrOFZ2Wvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMDoxNToxOFrOFaPAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY0OTI3OA==", "bodyText": "I think this should be defined in a constant?", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362649278", "createdAt": "2020-01-02T22:11:00Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1MzA4Nw==", "bodyText": "Moved to components rather than a string.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363053087", "createdAt": "2020-01-04T20:15:18Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY0OTI3OA=="}, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTMwMzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/events/PlayerReportEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMTo1N1rOFZ2X0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMTo1N1rOFZ2X0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY0OTU1NQ==", "bodyText": "Should be cancelable.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362649555", "createdAt": "2020-01-02T22:11:57Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/events/PlayerReportEvent.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package tc.oc.pgm.events;\n+\n+import org.bukkit.event.HandlerList;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerEvent;\n+\n+/** Called immediately AFTER a player runs the report command. */\n+public class PlayerReportEvent extends MatchPlayerEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTMwNDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/events/PlayerReportEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMjo0OVrOFZ2Yvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMjo0OVrOFZ2Yvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY0OTc5MQ==", "bodyText": "this.sender = checkNotNull(sender);\nthis.reason = checkNotNull(reason);", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362649791", "createdAt": "2020-01-02T22:12:49Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/events/PlayerReportEvent.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package tc.oc.pgm.events;\n+\n+import org.bukkit.event.HandlerList;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.api.player.event.MatchPlayerEvent;\n+\n+/** Called immediately AFTER a player runs the report command. */\n+public class PlayerReportEvent extends MatchPlayerEvent {\n+\n+  private final MatchPlayer sender;\n+  private final String reason;\n+\n+  public PlayerReportEvent(MatchPlayer sender, MatchPlayer player, String reason) {\n+    super(player);\n+    this.sender = sender;\n+    this.reason = reason;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTMwNjUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMjoxMzozOFrOFZ2Zxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMTo1MTo1MlrOFaPP1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY1MDA1NA==", "bodyText": "Before sending to players please log this in a logger.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362650054", "createdAt": "2020-01-02T22:13:38Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",\n+                sender.getStyledName(NameStyle.FANCY),\n+                accused.getStyledName(NameStyle.FANCY),\n+                new PersonalizedText(reason.trim())));\n+\n+    match.getPlayers().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg5OTI2MQ==", "bodyText": "Sending to console is good for this", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362899261", "createdAt": "2020-01-03T17:47:49Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",\n+                sender.getStyledName(NameStyle.FANCY),\n+                accused.getStyledName(NameStyle.FANCY),\n+                new PersonalizedText(reason.trim())));\n+\n+    match.getPlayers().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY1MDA1NA=="}, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzEwOA==", "bodyText": "Now sending to console with [A] prefix removed.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363057108", "createdAt": "2020-01-04T21:51:52Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",\n+                sender.getStyledName(NameStyle.FANCY),\n+                accused.getStyledName(NameStyle.FANCY),\n+                new PersonalizedText(reason.trim())));\n+\n+    match.getPlayers().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY1MDA1NA=="}, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MDc1NDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxNjoxNzoyMFrOFaDsjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMDoxNDozMFrOFaPADg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg2Nzg1Mg==", "bodyText": "I think this would fit better as just ModerationCommands, for when other commands are added", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362867852", "createdAt": "2020-01-03T16:17:20Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1MzA3MA==", "bodyText": "Renamed", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363053070", "createdAt": "2020-01-04T20:14:30Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg2Nzg1Mg=="}, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MDc3MjA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxNjoyNToxOFrOFaD3kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMDoxNDoyMVrOFaPACg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg3MDY3Mw==", "bodyText": "I'm pretty sure this would be shorter if you used the text component stuff instead of string concat:\nnew PersonalizedComponent(\n  new PersonalizedComponent(\"[\"),\n  new PersonalizedComponent(\"A\", ChatColor.GOLD),\n  new PersonalizedComponent(\"] \"),\n  sender.getStyledName(NameStyle.FANCY),\n  new PersonalizedComponent(\" \\u2794 \", ChatColor.YELLOW),\n...", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r362870673", "createdAt": "2020-01-03T16:25:18Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1MzA2Ng==", "bodyText": "Changed to components.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363053066", "createdAt": "2020-01-04T20:14:21Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ReportCommands.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+import tc.oc.util.components.Components;\n+\n+public class ReportCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    match.callEvent(new PlayerReportEvent(sender, accused, reason));\n+\n+    final Component component =\n+        new PersonalizedText(\n+            Components.format(\n+                \"[\"\n+                    + ChatColor.GOLD\n+                    + \"R\"\n+                    + ChatColor.WHITE\n+                    + \"] \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{0}\"\n+                    + ChatColor.YELLOW\n+                    + \" \\u2794 \"\n+                    + ChatColor.DARK_AQUA\n+                    + \"{1}\"\n+                    + ChatColor.YELLOW\n+                    + \": \"\n+                    + \"{2}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg3MDY3Mw=="}, "originalCommit": {"oid": "9b4f4a3aed98bee19290cc539b8aff1445191421"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjAwMjk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMDoyMzowM1rOFaPBXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMDoyMzowM1rOFaPBXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1MzQwNQ==", "bodyText": "It would be cleaner with\nif (event.isCancelled()) return;", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363053405", "createdAt": "2020-01-04T20:23:03Z", "author": {"login": "TheMolkaPL"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(MatchPlayer sender, Match match, Player player, @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    PlayerReportEvent event = new PlayerReportEvent(sender, accused, reason);\n+    match.callEvent(event);\n+\n+    if (!event.isCancelled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "492452deb0ec464714b77600147038f416448b3a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjAzNDQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjowMzo0M1rOFaPRYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjo0OToxMFrOFaPXfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzUwNQ==", "bodyText": "What will happen if the player is in another match? i don't think the Match should be a parameter for this command, you should make use of the MatchManager to get the MatchPlayer", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363057505", "createdAt": "2020-01-04T22:03:43Z", "author": {"login": "Pablete1234"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzk1NQ==", "bodyText": "I think the report should be scoped to the Match. The issue here is you need to check that accused != null", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363057955", "createdAt": "2020-01-04T22:15:24Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzUwNQ=="}, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1OTA2OA==", "bodyText": "What will happen if the player is in another match?\n\nWe don't have the ability to run multiple matches at the moment and I don't think every new change needs to unnecessary pander to this idea.\nRegardless you shouldn't be reporting players from alternative matches because as you said yourself they should act independently. The audiences that it broadcast the notification message to could be server-wide as moderators may wish to switch match to investigate.\n\nyou need to check that accused != null\n\nWhen would the accused not be a player? The command framework seems pretty hell-bent on making sure the correct arguments are passed to the function.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363059068", "createdAt": "2020-01-04T22:49:10Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzUwNQ=="}, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjAzODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjoxNjoxMFrOFaPTOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjo1MjozNVrOFaPX3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzk3OQ==", "bodyText": "matchPlayer.sendMessage", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363057979", "createdAt": "2020-01-04T22:16:10Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    PlayerReportEvent event = new PlayerReportEvent(commandSender, accused, reason);\n+    match.callEvent(event);\n+\n+    if (event.isCancelled()) {\n+      if (event.getCancelMessage() != null) {\n+        commandSender.sendMessage(event.getCancelMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1OTE2NA==", "bodyText": "The use of CommandSender allows for console reports. I can remove this feature if someone lets me know how to prevent Console from running the command as requested previously in a discussion with Molka.", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363059164", "createdAt": "2020-01-04T22:52:35Z", "author": {"login": "Pugzy"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    PlayerReportEvent event = new PlayerReportEvent(commandSender, accused, reason);\n+    match.callEvent(event);\n+\n+    if (event.isCancelled()) {\n+      if (event.getCancelMessage() != null) {\n+        commandSender.sendMessage(event.getCancelMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzk3OQ=="}, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjAzODEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjoxNjoyNVrOFaPTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMjoxNjoyNVrOFaPTSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzk5Mg==", "bodyText": "matchPlayer.sendMessage", "url": "https://github.com/PGMDev/PGM/pull/180#discussion_r363057992", "createdAt": "2020-01-04T22:16:25Z", "author": {"login": "Electroid"}, "path": "src/main/java/tc/oc/pgm/commands/ModerationCommands.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package tc.oc.pgm.commands;\n+\n+import app.ashcon.intake.Command;\n+import app.ashcon.intake.parametric.annotation.Text;\n+import net.md_5.bungee.api.ChatColor;\n+import org.bukkit.Bukkit;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import tc.oc.component.Component;\n+import tc.oc.component.types.PersonalizedText;\n+import tc.oc.component.types.PersonalizedTranslatable;\n+import tc.oc.named.NameStyle;\n+import tc.oc.pgm.api.Permissions;\n+import tc.oc.pgm.api.chat.Audience;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.PlayerReportEvent;\n+\n+public class ModerationCommands {\n+\n+  @Command(\n+      aliases = {\"report\"},\n+      usage = \"<player> <reason>\",\n+      desc = \"Report a player who is breaking the rules\")\n+  public static void report(\n+      CommandSender commandSender,\n+      MatchPlayer matchPlayer,\n+      Match match,\n+      Player player,\n+      @Text String reason) {\n+    MatchPlayer accused = match.getPlayer(player);\n+    PlayerReportEvent event = new PlayerReportEvent(commandSender, accused, reason);\n+    match.callEvent(event);\n+\n+    if (event.isCancelled()) {\n+      if (event.getCancelMessage() != null) {\n+        commandSender.sendMessage(event.getCancelMessage());\n+      }\n+      return;\n+    }\n+\n+    commandSender.sendMessage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3db0124601ee75285f5ea55966065745a14d844"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}