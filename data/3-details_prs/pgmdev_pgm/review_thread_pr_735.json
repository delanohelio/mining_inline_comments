{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3Mjk0OTU1", "number": 735, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToyMDo0M1rOFEIzkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowMToyOVrOFEQThw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODgyODk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToyMDo0M1rOIEHh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTo1NDowMFrOIEJfXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng==", "bodyText": "gameplay.death-ticks", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541188576", "createdAt": "2020-12-11T19:20:43Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathAnimationLength =\n+        parseInteger(config.getString(\"gameplay.death-animation-length\", \"15\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5MTY5OQ==", "bodyText": "Oh, also make sure it is Range.atLeast(0). See the griefScore above for an example.", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541191699", "createdAt": "2020-12-11T19:24:00Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathAnimationLength =\n+        parseInteger(config.getString(\"gameplay.death-animation-length\", \"15\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng=="}, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyMDcwMQ==", "bodyText": "This must be between 0 and under the minimum respawn time which currently in pgm is 20 ticks. If you set it to a higher number and the map has a low respawn time you'd start seeing some bad behaviour where a player may respawn before their death animation has ended.", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541220701", "createdAt": "2020-12-11T19:54:00Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathAnimationLength =\n+        parseInteger(config.getString(\"gameplay.death-animation-length\", \"15\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng=="}, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODgzMDY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/api/Config.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToyMTowMFrOIEHi-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToyMTowMFrOIEHi-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODg1OQ==", "bodyText": "getDeathTicks", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541188859", "createdAt": "2020-12-11T19:21:00Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/Config.java", "diffHunk": "@@ -253,6 +253,13 @@\n    */\n   int getGriefScore();\n \n+  /**\n+   * Gets the length in ticks for how long the death animation is shown\n+   *\n+   * @return length of death animation\n+   */\n+  int getDeathAnimationLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODk0NDgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTo0MDowMFrOIEIqTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDowMzowNFrOIEJ-Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwNzExNg==", "bodyText": "see comment below", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541207116", "createdAt": "2020-12-11T19:40:00Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "diffHunk": "@@ -32,6 +33,7 @@ public Dead(SpawnMatchModule smm, MatchPlayer player) {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyODU0Ng==", "bodyText": "This is not a per-player configuration, you can have this as a static variable without having every Dead state object need to grab it", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541228546", "createdAt": "2020-12-11T20:03:04Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "diffHunk": "@@ -32,6 +33,7 @@ public Dead(SpawnMatchModule smm, MatchPlayer player) {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwNzExNg=="}, "originalCommit": {"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTAxNDc1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTo1MTo0NlrOIEJWrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDowMjo0N1rOIEJ8-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIxODQ3OQ==", "bodyText": "death-ticks, missing an s", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541218479", "createdAt": "2020-12-11T19:51:46Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathTicks =\n+        parseInteger(config.getString(\"gameplay.death-tick\", \"15\"), Range.atLeast(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyODI4MQ==", "bodyText": "This must be between 0 and under the minimum respawn time which currently in pgm is 20 ticks. If you set it to a higher number and the map has a low respawn time you'd start seeing some bad behaviour where a player may respawn before their death animation has ended.", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541228281", "createdAt": "2020-12-11T20:02:47Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathTicks =\n+        parseInteger(config.getString(\"gameplay.death-tick\", \"15\"), Range.atLeast(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIxODQ3OQ=="}, "originalCommit": {"oid": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTAyMTc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/config.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTo1Mjo1M1rOIEJbFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTo1Mjo1M1rOIEJbFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIxOTYwNg==", "bodyText": "death-ticks: 15 # Number of ticks the death animation should last", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541219606", "createdAt": "2020-12-11T19:52:53Z", "author": {"login": "Electroid"}, "path": "core/src/main/resources/config.yml", "diffHunk": "@@ -65,6 +65,7 @@ join:\n gameplay:\n   refill-wool: true # Should wool in wool rooms be automatically refilled?\n   grief-score: -10 # Score under which players should be kept out of the match\n+  death-tick: 15 # how long should the death animation be shown for?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDA1NzY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowMToyOVrOIETnKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowMToyOVrOIETnKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjUzOA==", "bodyText": "This is still copying the value every time a player dies, which is unneeded", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541386538", "createdAt": "2020-12-11T23:01:29Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "diffHunk": "@@ -33,7 +33,7 @@ public Dead(SpawnMatchModule smm, MatchPlayer player) {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n-    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathTicks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a61b450bf0cce30a6b0044938d84a63598ad13"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 965, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}