{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0OTI3MTc2", "number": 690, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo1MjoxOFrOE08BDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzoxMDowNFrOE1A6ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTQ0NzE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo1MjoxOFrOHs8Mtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOToyMjo0M1rOHs9N4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw==", "bodyText": "Switch this to use TextFormatter#horizontalLineHeading \ud83d\ude04", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516885687", "createdAt": "2020-11-03T18:52:18Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NzY1MQ==", "bodyText": "Yeah I know, I just thought it would make sense to do such a big refactor step by step.\nI was thinking TextFormatter should be refactored to use MatchPlayers instead anyways", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516887651", "createdAt": "2020-11-03T18:55:59Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MDE2NA==", "bodyText": "Ah just be careful about that, since if an outside plugin wants to use the utils you don\u2019t want them to be forced to use PGM just to get the MatchPlayer.", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516890164", "createdAt": "2020-11-03T19:00:33Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MTMyNQ==", "bodyText": "Right, then the bukkit Player would also work, yeah? player.getBukkit()", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516891325", "createdAt": "2020-11-03T19:02:39Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MzE0NA==", "bodyText": "It depends on the method. For example I use the horizontalLineHeading methods in my requests plugin here. If it were switched to player, then would no longer be able to run the command from the console.", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516893144", "createdAt": "2020-11-03T19:05:43Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkwMTMxNQ==", "bodyText": "Then what about a Locale ? This seems to be the only need for the sender", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516901315", "createdAt": "2020-11-03T19:20:42Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkwMjM3MA==", "bodyText": "I don\u2019t have time atm to look into what the sender is needed for, but awesome yeah if it\u2019s something more general like Locale that would be the best path to take \ud83d\udc4d", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r516902370", "createdAt": "2020-11-03T19:22:43Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/command/ClassCommand.java", "diffHunk": "@@ -65,10 +65,12 @@ public void classList(Match match, MatchPlayer player) {\n     final PlayerClass currentClass = classes.getSelectedClass(player.getId());\n \n     player.sendMessage(\n-        LegacyFormatUtils.dashedChatMessage(\n-            ChatColor.GOLD + TextTranslations.translate(\"match.class.title\", player.getBukkit()),\n-            \"-\",\n-            ChatColor.RED.toString()));\n+        text(\n+            LegacyFormatUtils.dashedChatMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTY4Nw=="}, "originalCommit": {"oid": "b10a5e112420e4788ba490315e8ba111f9962ea7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDI0OTcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/PGMAudiences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzoxMDowNFrOHtDuKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODoxNjoxMVrOHtNI7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwODkzOQ==", "bodyText": "Instead of having something like PGMAudiences, I would like this to live in util.\ntc.oc.util.text.Audience would be both an interface, with things like sendWarning wrapper, and 1-stop-shop to create audiences from players or groups of players.", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r517008939", "createdAt": "2020-11-03T23:10:04Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/PGMAudiences.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package tc.oc.pgm;\n+\n+import net.kyori.adventure.audience.Audience;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.platform.bukkit.BukkitAudiences;\n+import net.kyori.adventure.sound.Sound;\n+import net.kyori.adventure.text.Component;\n+import net.kyori.adventure.text.format.NamedTextColor;\n+import org.bukkit.plugin.Plugin;\n+\n+public class PGMAudiences {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5e43a751e82b26593dab962427d2ff87736dc0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MzI0Nw==", "bodyText": "I see, any reason you decided to deprecate the provider that was in there?\nThe way im understanding this is that the provider also should stay in this Audience class", "url": "https://github.com/PGMDev/PGM/pull/690#discussion_r517163247", "createdAt": "2020-11-04T08:16:11Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/PGMAudiences.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package tc.oc.pgm;\n+\n+import net.kyori.adventure.audience.Audience;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.platform.bukkit.BukkitAudiences;\n+import net.kyori.adventure.sound.Sound;\n+import net.kyori.adventure.text.Component;\n+import net.kyori.adventure.text.format.NamedTextColor;\n+import org.bukkit.plugin.Plugin;\n+\n+public class PGMAudiences {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwODkzOQ=="}, "originalCommit": {"oid": "3e5e43a751e82b26593dab962427d2ff87736dc0"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 949, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}