{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNjc0Mjk3", "number": 454, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMjozMDozOFrOD40k1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMjozMDozOFrOD40k1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTA4MjQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/gamerules/GameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMjozMDozOFrOGPwD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMjozMDozOFrOGPwD7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE2OTI2Mw==", "bodyText": "I'd rather not maintain a list of game rules, just allow for any game rule or any value.", "url": "https://github.com/PGMDev/PGM/pull/454#discussion_r419169263", "createdAt": "2020-05-03T22:30:38Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/gamerules/GameRule.java", "diffHunk": "@@ -1,30 +1,78 @@\n package tc.oc.pgm.gamerules;\n \n-public enum GameRule {\n-  DO_FIRE_TICK(\"doFireTick\"),\n-  DO_MOB_LOOT(\"doMobLoot\"),\n-  DO_TILE_DROPS(\"doTileDrops\"),\n-  MOB_GRIEFING(\"mobGriefing\"),\n-  NATURAL_REGENERATION(\"naturalRegeneration\"),\n-  DO_DAYLIGHT_CYCLE(\"doDaylightCycle\");\n-\n-  private String value;\n-\n-  GameRule(String value) {\n-    this.value = value;\n+import static com.google.common.base.Preconditions.*;\n+\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+public class GameRule<T> {\n+  private static final Map<String, GameRule<?>> RULES_BY_NAME = new HashMap<>();\n+\n+  public static final GameRule<Boolean> DO_DAYLIGHT_CYCLE =\n+      register(new BooleanGameRule(\"doDaylightCycle\"));\n+  public static final GameRule<Boolean> DO_ENTITY_DROPS =\n+      register(new BooleanGameRule(\"doEntityDrops\"));\n+  public static final GameRule<Boolean> DO_FIRE_TICK = register(new BooleanGameRule(\"doFireTick\"));\n+  public static final GameRule<Boolean> DO_MOB_LOOT = register(new BooleanGameRule(\"doMobLoot\"));\n+  public static final GameRule<Boolean> DO_MOB_SPAWNING =\n+      register(new BooleanGameRule(\"doMobSpawning\"));\n+  public static final GameRule<Boolean> DO_TILE_DROPS =\n+      register(new BooleanGameRule(\"doTileDrops\"));\n+  public static final GameRule<Boolean> KEEP_INVENTORY =\n+      register(new BooleanGameRule(\"keepInventory\"));\n+  public static final GameRule<Boolean> MOB_GRIEFING = register(new BooleanGameRule(\"mobGriefing\"));\n+  public static final GameRule<Boolean> NATURAL_REGENERATION =\n+      register(new BooleanGameRule(\"naturalRegeneration\"));\n+  public static final GameRule<Integer> RANDOM_TICK_SPEED =\n+      register(new IntegerGameRule(\"randomTickSpeed\"));\n+  public static final GameRule<Boolean> REDUCED_DEBUG_INFO =\n+      register(new BooleanGameRule(\"reducedDebugInfo\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6546765735af9b4b145c69aeff8bb36a4483533b"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1077, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}