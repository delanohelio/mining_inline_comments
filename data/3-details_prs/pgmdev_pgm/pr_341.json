{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTY2NjU5", "number": 341, "title": "Improve moderation commands", "bodyText": "Improve Moderation commands\nAfter some feedback regarding the now merged moderation commands, I\u2019ve worked on a quick fix that addresses the most concerning issues. Everything tested find and should be ready to merge if no additional suggestions are made.\nChanges made:\nAdditions\n\nAdded /mutes - Sends a list of usernames who are currently muted\nAdded an offline ban command:\n/offlineban (username) (reason) -t (optional time | don't include for perm ban)\nAdded /alts (target) (page) for viewing online alt-accounts\nAdded /baninfo (player|uuid) for looking up punishment info for a player\n\n\nRemoved\n\nRemoved -s and -w flags from /mute (player) (reason)\nRemoved -s flag from /warn\n\n\nEtc.\n\nMerged temp-ban and ban into /ban\n\nNew format:\n/ban (player) (reason) -t (optional time | don't include for perm ban)\n\n\nImproved formatting for punishment broadcasts\nIP ban now bans usernames in addition to the IP\n\n(Player can't rejoin with different IP to ban evade)\n\n\nMutes and Warns are now only broadcasted to online staff\nFixed bug where sounds play when muted player sends a /msg\n\nScreenshots\nPlease see following comments to see updated screenshots\nSigned-off-by: applenick applenick@users.noreply.github.com", "createdAt": "2020-02-28T02:12:38Z", "url": "https://github.com/PGMDev/PGM/pull/341", "merged": true, "mergeCommit": {"oid": "97295a0ea0e78e6c34be2d70780870f11e2dcee9"}, "closed": true, "closedAt": "2020-03-12T15:33:58Z", "author": {"login": "applenick"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcImWcZgBqjMwODAyMDA4NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM9hGOAFqTM3MzY2NDQ3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "665f55ae0f04ca3bd0eaee92ec42a3102d91c5db", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/665f55ae0f04ca3bd0eaee92ec42a3102d91c5db", "committedDate": "2020-02-28T02:15:18Z", "message": "Merge branch 'master' into moderation-command-fixes"}, "afterCommit": {"oid": "462b38e045ef9a80c0444f6b54cb465648a8c95e", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/462b38e045ef9a80c0444f6b54cb465648a8c95e", "committedDate": "2020-02-28T02:17:50Z", "message": "Improve moderation commands\n* Add temp-ban prefix to broadcast\n* Broadcast silent punishments to admin chat\n* Ban username in addition to IP when using /ipban\n* Disallow sending messages to muted players\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mzc4Mjg1", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-367378285", "createdAt": "2020-03-02T17:17:59Z", "commit": {"oid": "46ffe62591702b24679018fdc34a7a3e1702f6fd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mzg2NDIz", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-367386423", "createdAt": "2020-03-02T17:29:37Z", "commit": {"oid": "46ffe62591702b24679018fdc34a7a3e1702f6fd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjIzNjIx", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-367623621", "createdAt": "2020-03-03T00:18:03Z", "commit": {"oid": "46ffe62591702b24679018fdc34a7a3e1702f6fd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e3598c066180712ad57668f883a1b2e67b48fff", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/6e3598c066180712ad57668f883a1b2e67b48fff", "committedDate": "2020-03-06T09:11:43Z", "message": "Add mutes, alts, and baninfo commands\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}, "afterCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/f2cb32af4a39416d37e2e7d101304f54e0d1d1d0", "committedDate": "2020-03-06T09:14:42Z", "message": "Add mutes, alts, and baninfo commands\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjA3Mjc2", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-370607276", "createdAt": "2020-03-06T20:30:24Z", "commit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMDozMDoyNFrOFzGiMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMDo0MDo0N1rOFzGy8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyODc1Mg==", "bodyText": "I'm pretty sure we can use a Duration here, and have a duration parser", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389128752", "createdAt": "2020-03-06T20:30:24Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -187,48 +215,46 @@ public void kick(\n \n   @Command(\n       aliases = {\"ban\", \"permban\", \"pb\"},\n-      usage = \"<player> <reason> -s (silent)\",\n-      desc = \"Ban a player from the server forever\",\n+      usage = \"<player> <reason> -s (silent) -t (time)\",\n+      desc = \"Ban an online player from the server\",\n+      flags = \"s\",\n       perms = Permissions.BAN)\n   public void ban(\n       CommandSender sender,\n       Player target,\n       Match match,\n       @Text String reason,\n-      @Switch('s') boolean silent) {\n-    MatchPlayer targetMatchPlayer = match.getPlayer(target);\n-    Component senderName = formatPunisherName(sender, match);\n-    if (punish(PunishmentType.BAN, targetMatchPlayer, sender, reason, silent)) {\n-      banPlayer(target, reason, senderName, null);\n-      target.kickPlayer(formatPunishmentScreen(PunishmentType.BAN, senderName, reason, null));\n-    }\n-  }\n+      @Switch('s') boolean silent,\n+      @Switch('t') String length)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyOTI0OA==", "bodyText": "same here", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389129248", "createdAt": "2020-03-06T20:31:41Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyOTUxNQ==", "bodyText": "Personally i'd rename target to targetPl, and keep this as target", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389129515", "createdAt": "2020-03-06T20:32:28Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",\n+      desc = \"List online players on the same IP\",\n+      perms = Permissions.STAFF)\n+  public void alts(\n+      Audience audience,\n+      CommandSender sender,\n+      MatchManager manager,\n+      @Fallback(Type.NULL) Player target,\n+      @Default(\"1\") int page)\n+      throws CommandException {\n+    if (target != null) {\n+      MatchPlayer targetMP = manager.getPlayer(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMDE4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  usage = \"[target] (page)\",\n          \n          \n            \n                  usage = \"[target] [page]\",", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389130182", "createdAt": "2020-03-06T20:34:02Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 261}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMDY5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  usage = \"[player] -u (if input is UUID)\",\n          \n          \n            \n                  usage = \"[player]\",", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389130694", "createdAt": "2020-03-06T20:35:27Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",\n+      desc = \"List online players on the same IP\",\n+      perms = Permissions.STAFF)\n+  public void alts(\n+      Audience audience,\n+      CommandSender sender,\n+      MatchManager manager,\n+      @Fallback(Type.NULL) Player target,\n+      @Default(\"1\") int page)\n+      throws CommandException {\n+    if (target != null) {\n+      MatchPlayer targetMP = manager.getPlayer(target);\n+      List<MatchPlayer> alts = getAltAccounts(target, manager);\n+      if (alts.isEmpty()) {\n+        sender.sendMessage(\n+            new PersonalizedTranslatable(\n+                    \"moderation.commands.noAlts\", targetMP.getStyledName(NameStyle.FANCY))\n+                .getPersonalizedText()\n+                .color(ChatColor.RED));\n+      } else {\n+        sender.sendMessage(formatAltAccountList(targetMP, alts));\n+      }\n+    } else {\n+      List<Component> altAccounts = Lists.newArrayList();\n+      List<MatchPlayer> accountedFor = Lists.newArrayList();\n+\n+      for (Player player : Bukkit.getOnlinePlayers()) {\n+        MatchPlayer targetMP = manager.getPlayer(player);\n+        List<MatchPlayer> alts = getAltAccounts(player, manager);\n+\n+        if (alts.isEmpty() || accountedFor.contains(targetMP)) {\n+          continue;\n+        } else {\n+          altAccounts.add(formatAltAccountList(targetMP, alts));\n+          accountedFor.add(targetMP);\n+          accountedFor.addAll(alts);\n+        }\n+      }\n+\n+      int perPage = 8;\n+      int pages = (altAccounts.size() + perPage - 1) / perPage;\n+\n+      Component pageNum =\n+          new PersonalizedTranslatable(\n+                  \"command.paginatedResult.page\",\n+                  new PersonalizedText(Integer.toString(page)).color(ChatColor.DARK_AQUA),\n+                  new PersonalizedText(Integer.toString(pages)).color(ChatColor.DARK_AQUA))\n+              .getPersonalizedText()\n+              .color(ChatColor.GRAY);\n+\n+      Component headerText =\n+          new PersonalizedTranslatable(\"moderation.alts.header\")\n+              .getPersonalizedText()\n+              .color(ChatColor.DARK_AQUA);\n+\n+      Component header =\n+          new PersonalizedText(\n+              headerText,\n+              new PersonalizedText(\" (\").color(ChatColor.GRAY),\n+              new PersonalizedText(Integer.toString(altAccounts.size())).color(ChatColor.DARK_AQUA),\n+              new PersonalizedText(\") \u00bb Page \").color(ChatColor.GRAY),\n+              pageNum);\n+\n+      Component formattedHeader =\n+          new PersonalizedText(\n+              ComponentUtils.horizontalLineHeading(\n+                  ComponentRenderers.toLegacyText(header, sender), ChatColor.BLUE));\n+\n+      new PrettyPaginatedComponentResults<Component>(formattedHeader, perPage) {\n+        @Override\n+        public Component format(Component data, int index) {\n+          return data;\n+        }\n+\n+        @Override\n+        public Component formatEmpty() throws CommandException {\n+          throw new CommandException(\"No alternate accounts found!\");\n+        }\n+      }.display(audience, altAccounts, page);\n+    }\n+  }\n+\n+  @Command(\n+      aliases = {\"baninfo\", \"lookup\", \"l\"},\n+      usage = \"[player] -u (if input is UUID)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 345}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMTI0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void banInfo(CommandSender sender, String target, @Switch('u') boolean uuid)\n          \n          \n            \n              public void banInfo(CommandSender sender, String target)", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389131241", "createdAt": "2020-03-06T20:36:39Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",\n+      desc = \"List online players on the same IP\",\n+      perms = Permissions.STAFF)\n+  public void alts(\n+      Audience audience,\n+      CommandSender sender,\n+      MatchManager manager,\n+      @Fallback(Type.NULL) Player target,\n+      @Default(\"1\") int page)\n+      throws CommandException {\n+    if (target != null) {\n+      MatchPlayer targetMP = manager.getPlayer(target);\n+      List<MatchPlayer> alts = getAltAccounts(target, manager);\n+      if (alts.isEmpty()) {\n+        sender.sendMessage(\n+            new PersonalizedTranslatable(\n+                    \"moderation.commands.noAlts\", targetMP.getStyledName(NameStyle.FANCY))\n+                .getPersonalizedText()\n+                .color(ChatColor.RED));\n+      } else {\n+        sender.sendMessage(formatAltAccountList(targetMP, alts));\n+      }\n+    } else {\n+      List<Component> altAccounts = Lists.newArrayList();\n+      List<MatchPlayer> accountedFor = Lists.newArrayList();\n+\n+      for (Player player : Bukkit.getOnlinePlayers()) {\n+        MatchPlayer targetMP = manager.getPlayer(player);\n+        List<MatchPlayer> alts = getAltAccounts(player, manager);\n+\n+        if (alts.isEmpty() || accountedFor.contains(targetMP)) {\n+          continue;\n+        } else {\n+          altAccounts.add(formatAltAccountList(targetMP, alts));\n+          accountedFor.add(targetMP);\n+          accountedFor.addAll(alts);\n+        }\n+      }\n+\n+      int perPage = 8;\n+      int pages = (altAccounts.size() + perPage - 1) / perPage;\n+\n+      Component pageNum =\n+          new PersonalizedTranslatable(\n+                  \"command.paginatedResult.page\",\n+                  new PersonalizedText(Integer.toString(page)).color(ChatColor.DARK_AQUA),\n+                  new PersonalizedText(Integer.toString(pages)).color(ChatColor.DARK_AQUA))\n+              .getPersonalizedText()\n+              .color(ChatColor.GRAY);\n+\n+      Component headerText =\n+          new PersonalizedTranslatable(\"moderation.alts.header\")\n+              .getPersonalizedText()\n+              .color(ChatColor.DARK_AQUA);\n+\n+      Component header =\n+          new PersonalizedText(\n+              headerText,\n+              new PersonalizedText(\" (\").color(ChatColor.GRAY),\n+              new PersonalizedText(Integer.toString(altAccounts.size())).color(ChatColor.DARK_AQUA),\n+              new PersonalizedText(\") \u00bb Page \").color(ChatColor.GRAY),\n+              pageNum);\n+\n+      Component formattedHeader =\n+          new PersonalizedText(\n+              ComponentUtils.horizontalLineHeading(\n+                  ComponentRenderers.toLegacyText(header, sender), ChatColor.BLUE));\n+\n+      new PrettyPaginatedComponentResults<Component>(formattedHeader, perPage) {\n+        @Override\n+        public Component format(Component data, int index) {\n+          return data;\n+        }\n+\n+        @Override\n+        public Component formatEmpty() throws CommandException {\n+          throw new CommandException(\"No alternate accounts found!\");\n+        }\n+      }.display(audience, altAccounts, page);\n+    }\n+  }\n+\n+  @Command(\n+      aliases = {\"baninfo\", \"lookup\", \"l\"},\n+      usage = \"[player] -u (if input is UUID)\",\n+      desc = \"Lookup baninfo about a player\",\n+      perms = Permissions.STAFF)\n+  public void banInfo(CommandSender sender, String target, @Switch('u') boolean uuid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 348}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMjA0MQ==", "bodyText": "Make name or UUID toggle based on the format, not based on a flag.\nMinecraft usernames must be between 3 and 16 characters, if it's over 16, it's guaranteed to be a UUID (possibly with, possibly without dashes)", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389132041", "createdAt": "2020-03-06T20:38:24Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",\n+      desc = \"List online players on the same IP\",\n+      perms = Permissions.STAFF)\n+  public void alts(\n+      Audience audience,\n+      CommandSender sender,\n+      MatchManager manager,\n+      @Fallback(Type.NULL) Player target,\n+      @Default(\"1\") int page)\n+      throws CommandException {\n+    if (target != null) {\n+      MatchPlayer targetMP = manager.getPlayer(target);\n+      List<MatchPlayer> alts = getAltAccounts(target, manager);\n+      if (alts.isEmpty()) {\n+        sender.sendMessage(\n+            new PersonalizedTranslatable(\n+                    \"moderation.commands.noAlts\", targetMP.getStyledName(NameStyle.FANCY))\n+                .getPersonalizedText()\n+                .color(ChatColor.RED));\n+      } else {\n+        sender.sendMessage(formatAltAccountList(targetMP, alts));\n+      }\n+    } else {\n+      List<Component> altAccounts = Lists.newArrayList();\n+      List<MatchPlayer> accountedFor = Lists.newArrayList();\n+\n+      for (Player player : Bukkit.getOnlinePlayers()) {\n+        MatchPlayer targetMP = manager.getPlayer(player);\n+        List<MatchPlayer> alts = getAltAccounts(player, manager);\n+\n+        if (alts.isEmpty() || accountedFor.contains(targetMP)) {\n+          continue;\n+        } else {\n+          altAccounts.add(formatAltAccountList(targetMP, alts));\n+          accountedFor.add(targetMP);\n+          accountedFor.addAll(alts);\n+        }\n+      }\n+\n+      int perPage = 8;\n+      int pages = (altAccounts.size() + perPage - 1) / perPage;\n+\n+      Component pageNum =\n+          new PersonalizedTranslatable(\n+                  \"command.paginatedResult.page\",\n+                  new PersonalizedText(Integer.toString(page)).color(ChatColor.DARK_AQUA),\n+                  new PersonalizedText(Integer.toString(pages)).color(ChatColor.DARK_AQUA))\n+              .getPersonalizedText()\n+              .color(ChatColor.GRAY);\n+\n+      Component headerText =\n+          new PersonalizedTranslatable(\"moderation.alts.header\")\n+              .getPersonalizedText()\n+              .color(ChatColor.DARK_AQUA);\n+\n+      Component header =\n+          new PersonalizedText(\n+              headerText,\n+              new PersonalizedText(\" (\").color(ChatColor.GRAY),\n+              new PersonalizedText(Integer.toString(altAccounts.size())).color(ChatColor.DARK_AQUA),\n+              new PersonalizedText(\") \u00bb Page \").color(ChatColor.GRAY),\n+              pageNum);\n+\n+      Component formattedHeader =\n+          new PersonalizedText(\n+              ComponentUtils.horizontalLineHeading(\n+                  ComponentRenderers.toLegacyText(header, sender), ChatColor.BLUE));\n+\n+      new PrettyPaginatedComponentResults<Component>(formattedHeader, perPage) {\n+        @Override\n+        public Component format(Component data, int index) {\n+          return data;\n+        }\n+\n+        @Override\n+        public Component formatEmpty() throws CommandException {\n+          throw new CommandException(\"No alternate accounts found!\");\n+        }\n+      }.display(audience, altAccounts, page);\n+    }\n+  }\n+\n+  @Command(\n+      aliases = {\"baninfo\", \"lookup\", \"l\"},\n+      usage = \"[player] -u (if input is UUID)\",\n+      desc = \"Lookup baninfo about a player\",\n+      perms = Permissions.STAFF)\n+  public void banInfo(CommandSender sender, String target, @Switch('u') boolean uuid)\n+      throws CommandException {\n+    BanEntry ban = Bukkit.getBanList(BanList.Type.NAME).getBanEntry(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 350}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMzA0Mg==", "bodyText": "Switch this one arround to:\nif (ban == null ||\n    (ban.getExpiration() != null && ban.getExpiration.toInstant().isBefore(Instant.now())) { \n   throw CommandEx...;\n}\n\nIt will make the rest of the command not be indented by one and probably easier to read", "url": "https://github.com/PGMDev/PGM/pull/341#discussion_r389133042", "createdAt": "2020-03-06T20:40:47Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/community/commands/ModerationCommands.java", "diffHunk": "@@ -281,6 +307,290 @@ public void ipBan(\n     }\n   }\n \n+  @Command(\n+      aliases = {\"offlineban\", \"offban\", \"ob\"},\n+      usage = \"<player> <reason> -t (length)\",\n+      desc = \"Ban an offline player from the server\",\n+      flags = \"t\",\n+      perms = Permissions.BAN)\n+  public void offlineBan(\n+      CommandSender sender,\n+      MatchManager manager,\n+      String target,\n+      @Text String reason,\n+      @Switch('t') String length)\n+      throws CommandException {\n+    Duration duration = parseBanLength(length);\n+    boolean tempBan = !duration.isZero();\n+\n+    banPlayer(\n+        target,\n+        reason,\n+        formatPunisherName(sender, manager.getMatch(sender)),\n+        tempBan ? Instant.now().plus(duration) : null);\n+    broadcastPunishment(\n+        tempBan ? PunishmentType.TEMP_BAN : PunishmentType.BAN,\n+        manager.getMatch(sender),\n+        sender,\n+        new PersonalizedText(target).color(ChatColor.DARK_AQUA),\n+        reason,\n+        true,\n+        duration);\n+  }\n+\n+  @Command(\n+      aliases = {\"alts\", \"listalts\"},\n+      usage = \"[target] (page)\",\n+      desc = \"List online players on the same IP\",\n+      perms = Permissions.STAFF)\n+  public void alts(\n+      Audience audience,\n+      CommandSender sender,\n+      MatchManager manager,\n+      @Fallback(Type.NULL) Player target,\n+      @Default(\"1\") int page)\n+      throws CommandException {\n+    if (target != null) {\n+      MatchPlayer targetMP = manager.getPlayer(target);\n+      List<MatchPlayer> alts = getAltAccounts(target, manager);\n+      if (alts.isEmpty()) {\n+        sender.sendMessage(\n+            new PersonalizedTranslatable(\n+                    \"moderation.commands.noAlts\", targetMP.getStyledName(NameStyle.FANCY))\n+                .getPersonalizedText()\n+                .color(ChatColor.RED));\n+      } else {\n+        sender.sendMessage(formatAltAccountList(targetMP, alts));\n+      }\n+    } else {\n+      List<Component> altAccounts = Lists.newArrayList();\n+      List<MatchPlayer> accountedFor = Lists.newArrayList();\n+\n+      for (Player player : Bukkit.getOnlinePlayers()) {\n+        MatchPlayer targetMP = manager.getPlayer(player);\n+        List<MatchPlayer> alts = getAltAccounts(player, manager);\n+\n+        if (alts.isEmpty() || accountedFor.contains(targetMP)) {\n+          continue;\n+        } else {\n+          altAccounts.add(formatAltAccountList(targetMP, alts));\n+          accountedFor.add(targetMP);\n+          accountedFor.addAll(alts);\n+        }\n+      }\n+\n+      int perPage = 8;\n+      int pages = (altAccounts.size() + perPage - 1) / perPage;\n+\n+      Component pageNum =\n+          new PersonalizedTranslatable(\n+                  \"command.paginatedResult.page\",\n+                  new PersonalizedText(Integer.toString(page)).color(ChatColor.DARK_AQUA),\n+                  new PersonalizedText(Integer.toString(pages)).color(ChatColor.DARK_AQUA))\n+              .getPersonalizedText()\n+              .color(ChatColor.GRAY);\n+\n+      Component headerText =\n+          new PersonalizedTranslatable(\"moderation.alts.header\")\n+              .getPersonalizedText()\n+              .color(ChatColor.DARK_AQUA);\n+\n+      Component header =\n+          new PersonalizedText(\n+              headerText,\n+              new PersonalizedText(\" (\").color(ChatColor.GRAY),\n+              new PersonalizedText(Integer.toString(altAccounts.size())).color(ChatColor.DARK_AQUA),\n+              new PersonalizedText(\") \u00bb Page \").color(ChatColor.GRAY),\n+              pageNum);\n+\n+      Component formattedHeader =\n+          new PersonalizedText(\n+              ComponentUtils.horizontalLineHeading(\n+                  ComponentRenderers.toLegacyText(header, sender), ChatColor.BLUE));\n+\n+      new PrettyPaginatedComponentResults<Component>(formattedHeader, perPage) {\n+        @Override\n+        public Component format(Component data, int index) {\n+          return data;\n+        }\n+\n+        @Override\n+        public Component formatEmpty() throws CommandException {\n+          throw new CommandException(\"No alternate accounts found!\");\n+        }\n+      }.display(audience, altAccounts, page);\n+    }\n+  }\n+\n+  @Command(\n+      aliases = {\"baninfo\", \"lookup\", \"l\"},\n+      usage = \"[player] -u (if input is UUID)\",\n+      desc = \"Lookup baninfo about a player\",\n+      perms = Permissions.STAFF)\n+  public void banInfo(CommandSender sender, String target, @Switch('u') boolean uuid)\n+      throws CommandException {\n+    BanEntry ban = Bukkit.getBanList(BanList.Type.NAME).getBanEntry(target);\n+\n+    if (ban != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cb32af4a39416d37e2e7d101304f54e0d1d1d0"}, "originalPosition": 352}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODc3MzIy", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-370877322", "createdAt": "2020-03-09T01:17:25Z", "commit": {"oid": "7beef8ecd76e6d7fbc930180b80fa599dc6fbbfc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8229c32e3e41d6489757937b9c7bf30195f8f715", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/8229c32e3e41d6489757937b9c7bf30195f8f715", "committedDate": "2020-03-12T01:02:15Z", "message": "Improve moderation commands\n* Add temp-ban prefix to broadcast\n* Broadcast silent punishments to admin chat\n* Ban username in addition to IP when using /ipban\n* Disallow sending messages to muted players\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c8f33e8d66d14b3d2b1b9598de0545264d88e4", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/46c8f33e8d66d14b3d2b1b9598de0545264d88e4", "committedDate": "2020-03-12T01:02:16Z", "message": "Reformat punishment broadcasts\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe00dfc9423c771f5d125e3236fa0d057cbf390a", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/fe00dfc9423c771f5d125e3236fa0d057cbf390a", "committedDate": "2020-03-12T01:02:16Z", "message": "Remove username ban for /ipban\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ded5c321e71acebd04ed13f32370b9e2dd4ab767", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/ded5c321e71acebd04ed13f32370b9e2dd4ab767", "committedDate": "2020-03-12T01:02:16Z", "message": "Combine tempban and ban into one command\n* Also updated punishment broadcast format\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ea28cf77c6ebc83a14db4fc92afdb43d8124fc", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/c7ea28cf77c6ebc83a14db4fc92afdb43d8124fc", "committedDate": "2020-03-12T01:02:16Z", "message": "Update punishment broadcast format\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "959838206d765e3bf2aa4954a7b09650eefc72ef", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/959838206d765e3bf2aa4954a7b09650eefc72ef", "committedDate": "2020-03-12T01:02:16Z", "message": "Add mutes, alts, and baninfo commands\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b06101097a110a27f826db364d7c833bc0e5de", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/e1b06101097a110a27f826db364d7c833bc0e5de", "committedDate": "2020-03-12T01:02:17Z", "message": "Clean up improvements\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fc01102d11531015be4c20183e4973ddb4c94a7", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/8fc01102d11531015be4c20183e4973ddb4c94a7", "committedDate": "2020-03-12T01:02:17Z", "message": "Remove unused ModerationCommands class.\n* Also improved reports formatting header\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f00d1350e854b53ba45f2cef66216b2acfa28d2", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/6f00d1350e854b53ba45f2cef66216b2acfa28d2", "committedDate": "2020-03-12T00:41:12Z", "message": "Remove unused ModerationCommands class.\n* Also improved reports formatting header\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}, "afterCommit": {"oid": "8fc01102d11531015be4c20183e4973ddb4c94a7", "author": {"user": {"login": "applenick", "name": "applenick"}}, "url": "https://github.com/PGMDev/PGM/commit/8fc01102d11531015be4c20183e4973ddb4c94a7", "committedDate": "2020-03-12T01:02:17Z", "message": "Remove unused ModerationCommands class.\n* Also improved reports formatting header\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjY0NDcw", "url": "https://github.com/PGMDev/PGM/pull/341#pullrequestreview-373664470", "createdAt": "2020-03-12T15:33:32Z", "commit": {"oid": "8fc01102d11531015be4c20183e4973ddb4c94a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 596, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}