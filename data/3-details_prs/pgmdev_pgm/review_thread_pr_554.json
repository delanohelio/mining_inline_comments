{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjUzNDg5", "number": 554, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo0NDo0OFrOEL-y9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTowNDoyMVrOENT2qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTk4NjQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo0NDo0OFrOGt03lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzowOTowMVrOGuH4fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTMwMw==", "bodyText": "This is adding maps randomly, it'd be nice if it added maps based on the vote-selection logic of scores and weights", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r450705303", "createdAt": "2020-07-07T08:44:48Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -119,6 +119,24 @@ public boolean addCustomVoteMap(MapInfo info) {\n     return false;\n   }\n \n+  public Set<MapInfo> fillCustomMapVote() {\n+    Set<MapInfo> selected = Sets.newHashSet();\n+    if (customVoteMaps.size() < MAX_VOTE_OPTIONS) {\n+      int needed = MAX_VOTE_OPTIONS - customVoteMaps.size();\n+      int maxRetrys = MAX_VOTE_OPTIONS;\n+      while (selected.size() < needed && maxRetrys > 0) {\n+        MapInfo random = getRandom();\n+        if (!isCustomMapSelected(random)) {\n+          selected.add(random);\n+          addCustomVoteMap(random);\n+        } else {\n+          maxRetrys--;\n+        }\n+      }\n+    }\n+    return selected;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4861686495a5ece44e079b486c74b00efb3738be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNjE3Nw==", "bodyText": "That\u2019s a really good idea. I\u2019ll look into switching this logic around later today \ud83d\udc4d", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r450706177", "createdAt": "2020-07-07T08:46:06Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -119,6 +119,24 @@ public boolean addCustomVoteMap(MapInfo info) {\n     return false;\n   }\n \n+  public Set<MapInfo> fillCustomMapVote() {\n+    Set<MapInfo> selected = Sets.newHashSet();\n+    if (customVoteMaps.size() < MAX_VOTE_OPTIONS) {\n+      int needed = MAX_VOTE_OPTIONS - customVoteMaps.size();\n+      int maxRetrys = MAX_VOTE_OPTIONS;\n+      while (selected.size() < needed && maxRetrys > 0) {\n+        MapInfo random = getRandom();\n+        if (!isCustomMapSelected(random)) {\n+          selected.add(random);\n+          addCustomVoteMap(random);\n+        } else {\n+          maxRetrys--;\n+        }\n+      }\n+    }\n+    return selected;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTMwMw=="}, "originalCommit": {"oid": "4861686495a5ece44e079b486c74b00efb3738be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxMzIyNQ==", "bodyText": "Can we just auto-fill for the user? Why require them to fill?", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r450913225", "createdAt": "2020-07-07T14:35:11Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -119,6 +119,24 @@ public boolean addCustomVoteMap(MapInfo info) {\n     return false;\n   }\n \n+  public Set<MapInfo> fillCustomMapVote() {\n+    Set<MapInfo> selected = Sets.newHashSet();\n+    if (customVoteMaps.size() < MAX_VOTE_OPTIONS) {\n+      int needed = MAX_VOTE_OPTIONS - customVoteMaps.size();\n+      int maxRetrys = MAX_VOTE_OPTIONS;\n+      while (selected.size() < needed && maxRetrys > 0) {\n+        MapInfo random = getRandom();\n+        if (!isCustomMapSelected(random)) {\n+          selected.add(random);\n+          addCustomVoteMap(random);\n+        } else {\n+          maxRetrys--;\n+        }\n+      }\n+    }\n+    return selected;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTMwMw=="}, "originalCommit": {"oid": "4861686495a5ece44e079b486c74b00efb3738be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2MjYzMQ==", "bodyText": "It's just an issue of how vote modifying commands were approached, it was discussed in #540 here. It would be expected that if you just add a map to the vote it would \"force\" one map and keep the other 4 random. Instead, what vote managing commands do, is expect you to select 2-5 options for the user to pick from. Some form of a \"setnext between this options\".\nI think vote commands should always replace options of whatever vote will be held next, and maybe optionally make it so it makes the vote only the maps added via command, but i heavily doubt that will ever be used (wich is what we currently have)", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r450962631", "createdAt": "2020-07-07T15:42:56Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -119,6 +119,24 @@ public boolean addCustomVoteMap(MapInfo info) {\n     return false;\n   }\n \n+  public Set<MapInfo> fillCustomMapVote() {\n+    Set<MapInfo> selected = Sets.newHashSet();\n+    if (customVoteMaps.size() < MAX_VOTE_OPTIONS) {\n+      int needed = MAX_VOTE_OPTIONS - customVoteMaps.size();\n+      int maxRetrys = MAX_VOTE_OPTIONS;\n+      while (selected.size() < needed && maxRetrys > 0) {\n+        MapInfo random = getRandom();\n+        if (!isCustomMapSelected(random)) {\n+          selected.add(random);\n+          addCustomVoteMap(random);\n+        } else {\n+          maxRetrys--;\n+        }\n+      }\n+    }\n+    return selected;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTMwMw=="}, "originalCommit": {"oid": "4861686495a5ece44e079b486c74b00efb3738be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxNjgyOA==", "bodyText": "I converted this PR to a draft and will work on adjusting the logic to handle vote management as you suggested @Pablete1234 \ud83d\udc4d", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r451016828", "createdAt": "2020-07-07T17:09:01Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -119,6 +119,24 @@ public boolean addCustomVoteMap(MapInfo info) {\n     return false;\n   }\n \n+  public Set<MapInfo> fillCustomMapVote() {\n+    Set<MapInfo> selected = Sets.newHashSet();\n+    if (customVoteMaps.size() < MAX_VOTE_OPTIONS) {\n+      int needed = MAX_VOTE_OPTIONS - customVoteMaps.size();\n+      int maxRetrys = MAX_VOTE_OPTIONS;\n+      while (selected.size() < needed && maxRetrys > 0) {\n+        MapInfo random = getRandom();\n+        if (!isCustomMapSelected(random)) {\n+          selected.add(random);\n+          addCustomVoteMap(random);\n+        } else {\n+          maxRetrys--;\n+        }\n+      }\n+    }\n+    return selected;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTMwMw=="}, "originalCommit": {"oid": "4861686495a5ece44e079b486c74b00efb3738be"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjQ3NzI1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoll.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0ODowM1rOGuNKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0ODowM1rOGuNKnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMzM4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (int i = 0; i < voteSize; i++) {\n          \n          \n            \n                for (int i = overrides.size(); i < voteSize; i++) {", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r451103389", "createdAt": "2020-07-07T19:48:03Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoll.java", "diffHunk": "@@ -68,6 +70,9 @@ private void selectMaps() {\n     NavigableMap<Double, MapInfo> cumulativeScores = new TreeMap<>();\n     double maxWeight = cummulativeMap(0, sortedDist, cumulativeScores);\n \n+    // Add all override maps before selecting random\n+    overrides.forEach(map -> votes.put(map, new HashSet<>()));\n+\n     for (int i = 0; i < voteSize; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f2dec997d804f408883e6f04d71f0bb909f5ca"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjU1MjEzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoxMTozMlrOGuN5eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoxMTozMlrOGuN5eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExNTM4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      Sets.newHashSet(),\n          \n          \n            \n                                      Collections.emptySet(),", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r451115385", "createdAt": "2020-07-07T20:11:32Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/rotation/VotingPool.java", "diffHunk": "@@ -98,12 +101,13 @@ public void matchEnded(Match match) {\n               // If there is a restart queued, don't start a vote\n               if (RestartManager.isQueued()) return;\n               currentPoll =\n-                  shouldCustomVote()\n+                  shouldOverride()\n                       ? new MapPoll(\n                           match,\n                           getCustomVoteMapWeighted(),\n+                          Sets.newHashSet(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f2dec997d804f408883e6f04d71f0bb909f5ca"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzkyMjMyOnYy", "diffSide": "RIGHT", "path": "util/src/main/i18n/templates/map.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTowNDoyMVrOGv640g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxODo0MTo0NFrOGwOhbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMTA3NA==", "bodyText": "Replace and override basically mean the same thing, can we use different terms that make it more clear?", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r452901074", "createdAt": "2020-07-10T15:04:21Z", "author": {"login": "Electroid"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -134,3 +134,13 @@ vote.limit = Selection limit for the vote has been reached\n \n vote.title.map = Selected Maps\n \n+# {0} = player name (who toggled mode)\n+# {1} = mode name\n+vote.toggle = {0} toggled vote mode to {1}\n+\n+vote.mode.replace = Replace\n+\n+vote.mode.override = Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64352d4d9190f7e121dbfbc18946c3f4aab27a1a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyMjc2Nw==", "bodyText": "@AustinLMayes suggested create as an alternative for override \ud83c\udf89\nIf you have different terms you wanted just let me know and I\u2019ll be glad to adjust it.\nOtherwise should be good to go now \ud83d\udc4d", "url": "https://github.com/PGMDev/PGM/pull/554#discussion_r453222767", "createdAt": "2020-07-11T18:41:44Z", "author": {"login": "applenick"}, "path": "util/src/main/i18n/templates/map.properties", "diffHunk": "@@ -134,3 +134,13 @@ vote.limit = Selection limit for the vote has been reached\n \n vote.title.map = Selected Maps\n \n+# {0} = player name (who toggled mode)\n+# {1} = mode name\n+vote.toggle = {0} toggled vote mode to {1}\n+\n+vote.mode.replace = Replace\n+\n+vote.mode.override = Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMTA3NA=="}, "originalCommit": {"oid": "64352d4d9190f7e121dbfbc18946c3f4aab27a1a"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1014, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}