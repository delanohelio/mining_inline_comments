{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDY5NDg0", "number": 425, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDo0MToxOFrOD0y3WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjozMDo0M1rOD1AEAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Njg1OTEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/events/MapPoolAdjustEvent.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDo0MToxOVrOGJ6Jew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDo0Nzo0MlrOGKLGwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0MzA2Nw==", "bodyText": "Not sure this event is necessary. Since you're just printing to chat, I would skip the event and just print.", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413043067", "createdAt": "2020-04-22T14:41:19Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/events/MapPoolAdjustEvent.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package tc.oc.pgm.events;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.rotation.MapPool;\n+\n+/** MapPoolAdjustEvent is called when the active {@link MapPool} is set to another * */\n+public class MapPoolAdjustEvent extends Event {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0MDI3OQ==", "bodyText": "@Electroid So personally I plan on having a plugin which is going to listen to this event, to be used in order to perform other cool stuff. As I wanted to keep specific features out of PGM for the sake of not evading the scope. Is that alright or would you still like it removed?", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413240279", "createdAt": "2020-04-22T18:58:02Z", "author": {"login": "applenick"}, "path": "core/src/main/java/tc/oc/pgm/events/MapPoolAdjustEvent.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package tc.oc.pgm.events;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.rotation.MapPool;\n+\n+/** MapPoolAdjustEvent is called when the active {@link MapPool} is set to another * */\n+public class MapPoolAdjustEvent extends Event {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0MzA2Nw=="}, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyMDg5Ng==", "bodyText": "Hmm, I'm okay with keeping this for now, but there's no guarantees it will still exist when the API is published and 1.0 is released. So you can keep it for now.", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413320896", "createdAt": "2020-04-22T20:47:42Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/events/MapPoolAdjustEvent.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package tc.oc.pgm.events;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.rotation.MapPool;\n+\n+/** MapPoolAdjustEvent is called when the active {@link MapPool} is set to another * */\n+public class MapPoolAdjustEvent extends Event {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0MzA2Nw=="}, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODk4MzE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/commands/AdminCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoxODo1M1rOGKOLXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoxODo1M1rOGKOLXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3MTIzMQ==", "bodyText": "Based on the wording in #326 i do not think PGM should depend on the community module being present.", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413371231", "createdAt": "2020-04-22T22:18:53Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/commands/AdminCommands.java", "diffHunk": "@@ -12,23 +12,30 @@\n import javax.annotation.Nullable;\n import net.kyori.text.TranslatableComponent;\n import net.kyori.text.format.TextColor;\n-import org.bukkit.ChatColor;\n+import net.md_5.bungee.api.ChatColor;\n import org.bukkit.command.CommandSender;\n import tc.oc.pgm.api.PGM;\n import tc.oc.pgm.api.Permissions;\n import tc.oc.pgm.api.map.MapInfo;\n import tc.oc.pgm.api.map.MapOrder;\n import tc.oc.pgm.api.match.Match;\n-import tc.oc.pgm.api.match.MatchManager;\n import tc.oc.pgm.api.party.Competitor;\n+import tc.oc.pgm.community.commands.ModerationCommands;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODk4OTQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/commands/AdminCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoyMDozNVrOGKOO0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoyMDozNVrOGKOO0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3MjExMw==", "bodyText": "Im guessing this will be displayed if someone does /setpool -r and there is no dynamic pools present? I think there should be a more intuitive response if so (e.g \"No dynamic pools loaded\")\nThis could maybe be located in getAppropriateDynamicPool?", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413372113", "createdAt": "2020-04-22T22:20:35Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/commands/AdminCommands.java", "diffHunk": "@@ -115,13 +124,61 @@ public static void setNext(\n                   .translate(\"command.admin.cancelRestart.restartUnqueued\", sender));\n     }\n \n-    sender.sendMessage(\n-        ChatColor.DARK_PURPLE\n-            + AllTranslations.get()\n-                .translate(\n-                    \"command.admin.set.success\",\n-                    sender,\n-                    ChatColor.GOLD + map.getName() + ChatColor.DARK_PURPLE));\n+    Component mapName = new PersonalizedText(map.getName()).color(ChatColor.DARK_PURPLE);\n+    Component successful =\n+        new PersonalizedTranslatable(\n+                \"command.admin.set.success\",\n+                ModerationCommands.formatStaffName(sender, match),\n+                mapName)\n+            .getPersonalizedText()\n+            .color(ChatColor.GRAY);\n+    ChatDispatcher.broadcastAdminChatMessage(successful, match);\n+  }\n+\n+  @Command(\n+      aliases = {\"setpool\", \"setrot\"},\n+      desc = \"Set a custom map pool or revert to dynamic\",\n+      usage = \"[pool name] -r (revert to dynamic)\",\n+      flags = \"r\",\n+      perms = Permissions.SETNEXT)\n+  public static void setPool(\n+      CommandSender sender,\n+      Match match,\n+      MapOrder mapOrder,\n+      @Nullable String poolName,\n+      @Switch('r') boolean reset)\n+      throws CommandException {\n+    if (!match.getCountdown().getAll(CycleCountdown.class).isEmpty()) {\n+      sender.sendMessage(\n+          new PersonalizedTranslatable(\"command.admin.setPool.activeCycle\")\n+              .getPersonalizedText()\n+              .color(ChatColor.RED));\n+      return;\n+    }\n+    MapPoolManager mapPoolManager = MapPoolCommands.getMapPoolManager(sender, mapOrder);\n+    MapPool newPool =\n+        reset\n+            ? mapPoolManager.getAppropriateDynamicPool(match).orElse(null)\n+            : mapPoolManager.getMapPoolByName(poolName);\n+\n+    if (newPool == null) {\n+      Component noPoolError =\n+          new PersonalizedTranslatable(\"command.pools.noPoolMatch\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTAyMTQ2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjozMDo0M1rOGKOg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjozMDo0M1rOGKOg2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3NjczMA==", "bodyText": "What about *0.5 so it stays consistent with the line above?", "url": "https://github.com/PGMDev/PGM/pull/425#discussion_r413376730", "createdAt": "2020-04-22T22:30:43Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java", "diffHunk": "@@ -170,15 +172,30 @@ public void setNextMap(MapInfo map) {\n     activeMapPool.setNextMap(map); // Notify pool a next map has been set\n   }\n \n-  @Override\n-  public void matchEnded(Match match) {\n-    int activePlayers = match.getPlayers().size() - (match.getObservers().size() / 2);\n-\n-    mapPools.stream()\n+  public Optional<MapPool> getAppropriateDynamicPool(Match match) {\n+    int obs =\n+        match.getModule(BlitzMatchModule.class) != null\n+            ? (int) (match.getObservers().size() * 0.85)\n+            : (match.getObservers().size() / 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fac796da30411477a8bf3758efcfdf69d80a2728"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1069, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}