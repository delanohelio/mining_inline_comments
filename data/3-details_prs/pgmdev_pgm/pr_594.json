{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMTAwNjk1", "number": 594, "title": "Update legacy flag beams with proposed changes from #550", "bodyText": "Changes from discussion on #550\n\nConfig option for 1.8+ clients to see wool beams (from @Pablete1234 )\nIncreases wool beam height to approximately match in-game (effective) particle height (@jasoryeh)\nRespects Flag Definition's beam setting (other)", "createdAt": "2020-08-05T02:07:40Z", "url": "https://github.com/PGMDev/PGM/pull/594", "merged": true, "mergeCommit": {"oid": "7191aa8eeda32a90efe90f2e5412640eedeaa611"}, "closed": true, "closedAt": "2020-08-08T00:03:44Z", "author": {"login": "jasoryeh"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7xhOPgBqjM2MjI2OTM0MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8tgxsAFqTQ2MzY5NDE5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ac190be4625e9c55117c56d460dad4869da52ce", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/8ac190be4625e9c55117c56d460dad4869da52ce", "committedDate": "2020-08-05T02:03:05Z", "message": "Adds configurable legacy wool flag beams for versions > 1.7, increases flag vertical spawn range, and respects flag definition's beam setting."}, "afterCommit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/d43a97782ebf10168b3f11b4a15bee6f87769dbd", "committedDate": "2020-08-05T02:08:55Z", "message": "Adds configurable legacy wool flag beams for versions > 1.7, increases flag vertical spawn range, and respects flag definition's beam setting.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjk0NDA1", "url": "https://github.com/PGMDev/PGM/pull/594#pullrequestreview-461294405", "createdAt": "2020-08-05T02:18:11Z", "commit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMjoxODoxMVrOG73vjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMjoyNDowMlrOG731bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMjQ2Mg==", "bodyText": "Is this unused? did you mean to call this from trackFlag?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r465432462", "createdAt": "2020-08-05T02:18:11Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/flag/LegacyFlagBeamMatchModule.java", "diffHunk": "@@ -50,6 +53,13 @@ public LegacyFlagBeamMatchModule(Match match) {\n     this.beams = new HashMap<>();\n   }\n \n+  private boolean shouldShowBeams(Flag flag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMzAxOQ==", "bodyText": "Having 100 zombie entities may be a bit too much on the client, and i doubt in any reasonable scenario this will actually be a factor that limits/helps one player or another, maybe 64 because 32 does look a bit on the lower side?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r465433019", "createdAt": "2020-08-05T02:20:16Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/java/tc/oc/pgm/flag/LegacyFlagBeamMatchModule.java", "diffHunk": "@@ -188,7 +204,8 @@ public void run() {\n       this.flag = flag;\n       this.bukkit = bukkit;\n       this.segments =\n-          range(0, 32)\n+          range(0, 100) // ~100 blocks is the height which the particles appear to be reasonably", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMzk2Nw==", "bodyText": "Looks a bit on the long side, maybe just flag-beams?\nShould probably move to the ui section instead of gameplay ?\nI think false as a default makes more sense, as this is supposed to be for legacy (1.7) clients\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              global-legacy-flag-beams: true # Should everyone see legacy flag beams?\n          \n          \n            \n              flag-beams: false # Should everyone see floating wool flag beams?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r465433967", "createdAt": "2020-08-05T02:24:02Z", "author": {"login": "Pablete1234"}, "path": "core/src/main/resources/config.yml", "diffHunk": "@@ -63,7 +63,8 @@ join:\n \n # Changes various gameplay mechanics.\n gameplay:\n-  refill-wool: true # Should wool in wool rooms be automatically refilled?\n+  refill-wool: true              # Should wool in wool rooms be automatically refilled?\n+  global-legacy-flag-beams: true # Should everyone see legacy flag beams?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzEyNTc3", "url": "https://github.com/PGMDev/PGM/pull/594#pullrequestreview-461712577", "createdAt": "2020-08-05T14:20:52Z", "commit": {"oid": "1ba973be8034f7828f5672007990ede248c1cb46"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoyMToyN1rOG8L8Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoyMTo1MlrOG8L9Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MzM0Ng==", "bodyText": "useLegacyFlagBeams", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r465763346", "createdAt": "2020-08-05T14:21:27Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/api/Config.java", "diffHunk": "@@ -202,6 +202,14 @@\n    */\n   boolean shouldRefillWool();\n \n+  /**\n+   * Whether the wool flag beams created for older versions (pre-1.8) should be shown to all\n+   * players.\n+   *\n+   * @return If the wool flag beams should be shown to players >=1.8\n+   */\n+  boolean shouldShowLegacyFlagBeamsGlobally();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ba973be8034f7828f5672007990ede248c1cb46"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MzY2Ng==", "bodyText": "ui.flag-beams is reasonable", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r465763666", "createdAt": "2020-08-05T14:21:52Z", "author": {"login": "Electroid"}, "path": "core/src/main/resources/config.yml", "diffHunk": "@@ -63,7 +63,8 @@ join:\n \n # Changes various gameplay mechanics.\n gameplay:\n-  refill-wool: true # Should wool in wool rooms be automatically refilled?\n+  refill-wool: true              # Should wool in wool rooms be automatically refilled?\n+  global-legacy-flag-beams: true # Should everyone see legacy flag beams?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMzk2Nw=="}, "originalCommit": {"oid": "d43a97782ebf10168b3f11b4a15bee6f87769dbd"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "701bdc471181940eb164c1a4ca254c2f91aef959", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/701bdc471181940eb164c1a4ca254c2f91aef959", "committedDate": "2020-08-05T15:06:39Z", "message": "Add flag beams\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac473915a8ebfdb8b6dd2138f0f898b2b83118b", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/9ac473915a8ebfdb8b6dd2138f0f898b2b83118b", "committedDate": "2020-08-05T15:06:46Z", "message": "Adds configurable legacy wool flag beams for versions > 1.7, increases flag vertical spawn range, and respects flag definition's beam setting.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22581152a3d94fface642243053504a52acd11cb", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/22581152a3d94fface642243053504a52acd11cb", "committedDate": "2020-08-05T15:06:46Z", "message": "Remove unused beam check method in LegacyFlagBeamMatchModule\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75bb12c2eb1d68df92e0238575fc76d4f65f09b9", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/75bb12c2eb1d68df92e0238575fc76d4f65f09b9", "committedDate": "2020-08-05T15:06:46Z", "message": "Remove unused import.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ba973be8034f7828f5672007990ede248c1cb46", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/1ba973be8034f7828f5672007990ede248c1cb46", "committedDate": "2020-08-05T02:53:18Z", "message": "Remove unused import.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}, "afterCommit": {"oid": "75bb12c2eb1d68df92e0238575fc76d4f65f09b9", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/75bb12c2eb1d68df92e0238575fc76d4f65f09b9", "committedDate": "2020-08-05T15:06:46Z", "message": "Remove unused import.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/9d906f1586ba0bab42a06158ce456245f65f4fc0", "committedDate": "2020-08-05T15:20:42Z", "message": "Move gameplay.global-legacy-flag-beams to ui.flag-beams;\nshouldShowLegacyFlagBeamsGlobally -> useLegacyFlagBeams;\nglobal legacy beams off by default.\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjE1NTkz", "url": "https://github.com/PGMDev/PGM/pull/594#pullrequestreview-462615593", "createdAt": "2020-08-06T15:12:23Z", "commit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNToxMjoyM1rOG83_wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNToxMzowNlrOG84Bew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NTE4NQ==", "bodyText": "Can we not juse *?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r466485185", "createdAt": "2020-08-06T15:12:23Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/flag/Flag.java", "diffHunk": "@@ -40,11 +41,7 @@\n import tc.oc.pgm.api.region.Region;\n import tc.oc.pgm.flag.event.FlagCaptureEvent;\n import tc.oc.pgm.flag.event.FlagStateChangeEvent;\n-import tc.oc.pgm.flag.state.BaseState;\n-import tc.oc.pgm.flag.state.Captured;\n-import tc.oc.pgm.flag.state.Completed;\n-import tc.oc.pgm.flag.state.Returned;\n-import tc.oc.pgm.flag.state.State;\n+import tc.oc.pgm.flag.state.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NTYyNw==", "bodyText": "flagBeams", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r466485627", "createdAt": "2020-08-06T15:13:06Z", "author": {"login": "Electroid"}, "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -67,6 +67,7 @@\n \n   // gameplay.*\n   private final boolean woolRefill;\n+  private final boolean globalLegacyFlagBeams;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjc4MjM1", "url": "https://github.com/PGMDev/PGM/pull/594#pullrequestreview-463678235", "createdAt": "2020-08-07T22:53:31Z", "commit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjo1MzozMVrOG9q3qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzowNTowNFrOG9rCCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMxODY5OQ==", "bodyText": "can both be final right?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r467318699", "createdAt": "2020-08-07T22:53:31Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/flag/LegacyFlagBeamMatchModule.java", "diffHunk": "@@ -0,0 +1,263 @@\n+package tc.oc.pgm.flag;\n+\n+import static java.util.stream.IntStream.range;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.bukkit.Location;\n+import org.bukkit.Material;\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.EventPriority;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.player.PlayerChangedWorldEvent;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.match.event.MatchStartEvent;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.ListenerScope;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.pgm.events.PlayerJoinPartyEvent;\n+import tc.oc.pgm.events.PlayerLeaveMatchEvent;\n+import tc.oc.pgm.flag.event.FlagStateChangeEvent;\n+import tc.oc.pgm.flag.state.Carried;\n+import tc.oc.pgm.flag.state.Spawned;\n+import tc.oc.pgm.util.bukkit.ViaUtils;\n+import tc.oc.pgm.util.inventory.ItemBuilder;\n+import tc.oc.pgm.util.nms.NMSHacks;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class LegacyFlagBeamMatchModule implements MatchModule, Listener {\n+\n+  private static int UPDATE_DELAY = 0;\n+  private static int UPDATE_FREQUENCY = 50;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMxODcxMw==", "bodyText": "I think there is some typo here? \ud83e\udd14", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r467318713", "createdAt": "2020-08-07T22:53:35Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/api/Modules.java", "diffHunk": "@@ -159,6 +160,9 @@ static void registerAll() {\n     register(StatsMatchModule.class, StatsMatchModule::new);\n     register(MapmakerMatchModule.class, MapmakerMatchModule::new);\n \n+    // Modules that depend help older player versions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyMTIyMw==", "bodyText": "If I am understanding this correctly the carrying player can not see their own beam?", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r467321223", "createdAt": "2020-08-07T23:04:39Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/java/tc/oc/pgm/flag/LegacyFlagBeamMatchModule.java", "diffHunk": "@@ -0,0 +1,263 @@\n+package tc.oc.pgm.flag;\n+\n+import static java.util.stream.IntStream.range;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.bukkit.Location;\n+import org.bukkit.Material;\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.EventPriority;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.player.PlayerChangedWorldEvent;\n+import org.bukkit.inventory.ItemStack;\n+import tc.oc.pgm.api.PGM;\n+import tc.oc.pgm.api.match.Match;\n+import tc.oc.pgm.api.match.MatchModule;\n+import tc.oc.pgm.api.match.MatchScope;\n+import tc.oc.pgm.api.match.event.MatchStartEvent;\n+import tc.oc.pgm.api.player.MatchPlayer;\n+import tc.oc.pgm.events.ListenerScope;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.pgm.events.PlayerJoinPartyEvent;\n+import tc.oc.pgm.events.PlayerLeaveMatchEvent;\n+import tc.oc.pgm.flag.event.FlagStateChangeEvent;\n+import tc.oc.pgm.flag.state.Carried;\n+import tc.oc.pgm.flag.state.Spawned;\n+import tc.oc.pgm.util.bukkit.ViaUtils;\n+import tc.oc.pgm.util.inventory.ItemBuilder;\n+import tc.oc.pgm.util.nms.NMSHacks;\n+\n+@ListenerScope(MatchScope.LOADED)\n+public class LegacyFlagBeamMatchModule implements MatchModule, Listener {\n+\n+  private static int UPDATE_DELAY = 0;\n+  private static int UPDATE_FREQUENCY = 50;\n+\n+  private UpdateTask task;\n+  private final Match match;\n+  private final Map<MatchPlayer, Map<Flag, Beam>> beams;\n+\n+  public LegacyFlagBeamMatchModule(Match match) {\n+    this.match = match;\n+    this.beams = new HashMap<>();\n+  }\n+\n+  protected Stream<Flag> flags() {\n+    FlagMatchModule module = match.getModule(FlagMatchModule.class);\n+    return module == null ? Stream.empty() : module.getFlags().stream();\n+  }\n+\n+  protected void retrackFlag(Flag flag) {\n+    match.getParticipants().forEach(p -> retrackFlag(flag, p));\n+  }\n+\n+  protected void retrackFlag(Flag flag, MatchPlayer player) {\n+    untrackFlag(flag, player);\n+    trackFlag(flag, player);\n+  }\n+\n+  protected void trackFlag(Flag flag) {\n+    match.getParticipants().forEach(p -> trackFlag(flag, p));\n+  }\n+\n+  protected void trackFlag(Flag flag, MatchPlayer player) {\n+    Map<Flag, Beam> flags = beams.containsKey(player) ? beams.get(player) : new HashMap<>();\n+    if (flags.containsKey(flag) // beam duplication check\n+        || !flag.getDefinition().showBeam() // considers the flag definition's flag beam setting.\n+        || (ViaUtils.getProtocolVersion(player.getBukkit())\n+                > ViaUtils.VERSION_1_7 // version greater than 1.7 &\n+            && !PGM.get()\n+                .getConfiguration()\n+                .useLegacyFlagBeams())) { // we shouldn't show to >1.7 players\n+      return;\n+    }\n+\n+    flags.put(flag, new Beam(flag, player.getBukkit()));\n+\n+    beams.put(player, flags);\n+  }\n+\n+  protected void untrackFlag(Flag flag) {\n+    match.getParticipants().forEach(p -> untrackFlag(flag, p));\n+  }\n+\n+  protected void untrackFlag(Flag flag, MatchPlayer player) {\n+    if (beams.containsKey(player)) {\n+      Beam beam = beams.get(player).get(flag);\n+      if (beam != null) {\n+        beams.get(player).remove(flag).hide();\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public void enable() {\n+    flags().filter(flag -> flag.getState() instanceof Spawned).forEach(this::trackFlag);\n+    this.task = new UpdateTask();\n+  }\n+\n+  @Override\n+  public void disable() {\n+    flags().forEach(this::untrackFlag);\n+    beams.clear();\n+    this.task.stop();\n+  }\n+\n+  // retrackFlags when players join a party so players are able to see the wool beams\n+  // player join match event doesn't work at times.\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onPlayerJoinParty(PlayerJoinPartyEvent event) {\n+    flags()\n+        .filter(flag -> flag.getState() instanceof Spawned)\n+        .forEach(flag -> retrackFlag(flag, event.getPlayer()));\n+  }\n+\n+  // retrackFlags when players switch worlds\n+  // player join match event doesn't work at times.\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onPlayerChangedWorld(PlayerChangedWorldEvent event) {\n+    try {\n+      flags()\n+          .filter(flag -> flag.getState() instanceof Spawned)\n+          .forEach(flag -> retrackFlag(flag, match.getParticipant(event.getPlayer())));\n+    } catch (NullPointerException e) {\n+      /* ignore */\n+    }\n+  }\n+\n+  // retrackFlags when match starts to ensure all players can see flag beams\n+  // player join match event doesn't work at times.\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onMatchStart(MatchStartEvent event) {\n+    flags().filter(flag -> flag.getState() instanceof Spawned).forEach(flag -> retrackFlag(flag));\n+  }\n+\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onPlayerJoinMatch(PlayerJoinMatchEvent event) {\n+    flags()\n+        .filter(flag -> flag.getState() instanceof Spawned)\n+        .forEach(flag -> trackFlag(flag, event.getPlayer()));\n+  }\n+\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onPlayerLeaveMatch(PlayerLeaveMatchEvent event) {\n+    flags()\n+        .filter(flag -> flag.getState() instanceof Spawned)\n+        .forEach(flag -> untrackFlag(flag, event.getPlayer()));\n+  }\n+\n+  @EventHandler(ignoreCancelled = true, priority = EventPriority.MONITOR)\n+  public void onFlagStateChange(FlagStateChangeEvent event) {\n+    Flag flag = event.getFlag();\n+    untrackFlag(flag);\n+    if (event.getNewState() instanceof Spawned) {\n+      trackFlag(flag);\n+    }\n+  }\n+\n+  private class UpdateTask implements Runnable {\n+\n+    private final Future<?> task;\n+\n+    private UpdateTask() {\n+      this.task =\n+          match\n+              .getExecutor(MatchScope.RUNNING)\n+              .scheduleAtFixedRate(this, UPDATE_DELAY, UPDATE_FREQUENCY, TimeUnit.MILLISECONDS);\n+    }\n+\n+    public void stop() {\n+      this.task.cancel(true);\n+    }\n+\n+    @Override\n+    public void run() {\n+      ImmutableList.copyOf(beams.values()).forEach(flags -> flags.forEach((f, b) -> b.update()));\n+    }\n+  }\n+\n+  class Beam {\n+\n+    final Flag flag;\n+    final Player bukkit;\n+    final List<NMSHacks.FakeZombie> segments;\n+\n+    Beam(Flag flag, Player bukkit) {\n+      this.flag = flag;\n+      this.bukkit = bukkit;\n+      this.segments =\n+          range(0, 100) // ~100 blocks is the height which the particles appear to be reasonably\n+              // visible (similar amount to amount closest to the flag)\n+              .mapToObj(i -> new NMSHacks.FakeZombie(match.getWorld(), true, false))\n+              .collect(Collectors.toList());\n+      show();\n+    }\n+\n+    Optional<Player> carrier() {\n+      return Optional.ofNullable(\n+          flag.getState() instanceof Carried\n+              ? ((Carried) flag.getState()).getCarrier().getBukkit()\n+              : null);\n+    }\n+\n+    Optional<Location> location() {\n+      if (!flag.getLocation().isPresent()) {\n+        return Optional.empty();\n+      }\n+\n+      Location location = flag.getLocation().get().clone();\n+      location.setPitch(0);\n+      return Optional.of(location);\n+    }\n+\n+    ItemStack wool() {\n+      return new ItemBuilder()\n+          .material(Material.WOOL)\n+          .enchant(Enchantment.DURABILITY, 1)\n+          .color(flag.getDyeColor())\n+          .build();\n+    }\n+\n+    void show() {\n+      if (carrier().map(carrier -> carrier.equals(bukkit)).orElse(false)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyMTM1Mg==", "bodyText": "Very spacious", "url": "https://github.com/PGMDev/PGM/pull/594#discussion_r467321352", "createdAt": "2020-08-07T23:05:04Z", "author": {"login": "KingOfSquares"}, "path": "core/src/main/resources/config.yml", "diffHunk": "@@ -63,7 +63,7 @@ join:\n \n # Changes various gameplay mechanics.\n gameplay:\n-  refill-wool: true # Should wool in wool rooms be automatically refilled?\n+  refill-wool: true              # Should wool in wool rooms be automatically refilled?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d906f1586ba0bab42a06158ce456245f65f4fc0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2ba60611c586c76ef4f4232ac831adc5bf2c399", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/e2ba60611c586c76ef4f4232ac831adc5bf2c399", "committedDate": "2020-08-07T23:12:21Z", "message": "Rename flag beam configuration var\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d4b9123f36f28af4ec9f25e1c36efe5cc8eed04", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/0d4b9123f36f28af4ec9f25e1c36efe5cc8eed04", "committedDate": "2020-08-07T23:13:25Z", "message": "Fix legacy support module comment\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7c6e7cc5e151ec86b474fe4ccdcdb097102796", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/7f7c6e7cc5e151ec86b474fe4ccdcdb097102796", "committedDate": "2020-08-07T23:15:07Z", "message": "De-wildcard flag state imports\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce78cd0dc13a3a9e5725477c9d35ffc93a2bcd5", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/bce78cd0dc13a3a9e5725477c9d35ffc93a2bcd5", "committedDate": "2020-08-07T23:16:35Z", "message": "Make update delay and frequency magic vars final\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb9c2335fad7cf56ec4494003555eea1f3186f7c", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/fb9c2335fad7cf56ec4494003555eea1f3186f7c", "committedDate": "2020-08-07T23:29:18Z", "message": "Limit flag height to 64 blocks\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c6b46a4fd6afcb0105b9bb1bff2a438dd257df", "author": {"user": null}, "url": "https://github.com/PGMDev/PGM/commit/21c6b46a4fd6afcb0105b9bb1bff2a438dd257df", "committedDate": "2020-08-07T23:29:21Z", "message": "Fix spaced out config comment\n\nSigned-off-by: Jason Ho <jason@jasonho.tk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjk0MTk0", "url": "https://github.com/PGMDev/PGM/pull/594#pullrequestreview-463694194", "createdAt": "2020-08-08T00:03:04Z", "commit": {"oid": "21c6b46a4fd6afcb0105b9bb1bff2a438dd257df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 439, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}