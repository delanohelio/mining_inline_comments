{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzODY5ODI3", "number": 2586, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDozOTozNVrOE0Uo0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDo0MTo1OVrOE0UsGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk5NTM4OnYy", "diffSide": "RIGHT", "path": "kubernetes-examples/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDozOTozNVrOHr--fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowMzoyOVrOHsDeAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MjYyMA==", "bodyText": "Shouldn't these be picked up from the parent pom??", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r515882620", "createdAt": "2020-11-02T10:39:35Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/pom.xml", "diffHunk": "@@ -32,6 +32,8 @@\n     <podName>mypod</podName>\n     <masterUrl>https://localhost:8443/</masterUrl>\n     <namespace>default</namespace>\n+    <commons-codec.version>1.15</commons-codec.version>\n+    <commons-compress.version>1.20</commons-compress.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NjIyNQ==", "bodyText": "nice catch, I'll update it in the next update.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r515956225", "createdAt": "2020-11-02T13:03:29Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-examples/pom.xml", "diffHunk": "@@ -32,6 +32,8 @@\n     <podName>mypod</podName>\n     <masterUrl>https://localhost:8443/</masterUrl>\n     <namespace>default</namespace>\n+    <commons-codec.version>1.15</commons-codec.version>\n+    <commons-compress.version>1.20</commons-compress.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MjYyMA=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzAwMzc3OnYy", "diffSide": "RIGHT", "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDo0MTo1OVrOHr_DoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODo0Njo1OFrOH0qJ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw==", "bodyText": "I recall we exposed the applicable config, what's missing so that we don't have to deserialize the config file again?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r515883937", "createdAt": "2020-11-02T10:41:59Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1ODA5NA==", "bodyText": "Do you mean Config.getKubeConfigContents() which got added in #2290? I'll check if it works when I update it", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r515958094", "createdAt": "2020-11-02T13:06:46Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5MDA2MQ==", "bodyText": "Yes, I remember Andre provided some refactors to expose some configuration fields. So not sure if these values can or cannot be picked up from there and why.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r517490061", "createdAt": "2020-11-04T16:55:09Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MDEyOA==", "bodyText": "I checked Config but I could not find a method which exposes list of users. It exposes stuff like NamedContext all and current ones but not users.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r519970128", "createdAt": "2020-11-09T16:59:32Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMyNTMwNQ==", "bodyText": "So does it make sense to store this information there?\nWhat I mean is that we are already adding/caching the contexts (#2290) in the config. A context without the rest of user info is kind of incomplete IMO.\nOr maybe we should even store the whole io.fabric8.kubernetes.api.model.Config model. Remove the duplicate fields from Config (i.e. List) add extra getters and modify the current getContexts() to retrieve values from the local io.fabric8.kubernetes.api.model.Config.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r520325305", "createdAt": "2020-11-10T06:39:01Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3ODY1NQ==", "bodyText": "I think we should do it. But in the scope of another issue.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2586#discussion_r524978655", "createdAt": "2020-11-17T08:46:58Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/kubectl/equivalents/ConfigListUsers.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.examples.kubectl.equivalents;\n+\n+import io.fabric8.kubernetes.api.model.Config;\n+import io.fabric8.kubernetes.api.model.NamedAuthInfo;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+\n+/**\n+ * Java equivalent to `kubectl config view -o jsonpath='{.users[*].name}'`. Gets a list of users\n+ * found in KubeConfig\n+ */\n+public class ConfigListUsers {\n+  private static final Logger logger = LoggerFactory.getLogger(ConfigListUsers.class);\n+\n+  public static void main(String[] args) throws FileNotFoundException {\n+    // Gets KubeConfig via reading KubeConfig environment variable or ~/.kube/config\n+    String kubeConfigFileName = io.fabric8.kubernetes.client.Config.getKubeconfigFilename();\n+    if (kubeConfigFileName != null) {\n+      File kubeConfigFile = new File(kubeConfigFileName);\n+      Config kubeConfigObj = Serialization.unmarshal(new FileInputStream(kubeConfigFile), Config.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MzkzNw=="}, "originalCommit": {"oid": "ba9e63318a23ae77c6ddc9729a343c84cb7a28b6"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3590, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}