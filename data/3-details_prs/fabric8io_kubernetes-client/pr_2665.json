{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NjUwMzc0", "number": 2665, "title": "fix: CustomResourceDefinitionContext.fromCrd support for v1 CustomResourceDefinition", "bodyText": "Description\nfix: CustomResourceDefinitionContext.fromCrd support for v1 CustomResourceDefinition\nRelates to #2611\nCC: @adietish\nType of change\n\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n Code contributed by me aligns with current project license: Apache 2.0\n I Added CHANGELOG entry regarding this change\n I have implemented unit tests to cover my changes\n I have added/updated the javadocs and other documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-12-14T16:36:25Z", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665", "merged": true, "mergeCommit": {"oid": "3067cd883c6430c7e05422a61fbe740b82a4afcf"}, "closed": true, "closedAt": "2020-12-15T06:53:28Z", "author": {"login": "manusa"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmIbPSgH2gAyNTM5NjUwMzc0OjU5MmY0NTY3MjkwMTk2Y2VkNDAxY2NmYTNmMjI1YmQ3MTE1MWFhYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmL-hMAFqTU1MTg3NjkwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/592f4567290196ced401ccfa3f225bd71151aabc", "committedDate": "2020-12-14T16:35:21Z", "message": "fix: CustomResourceDefinitionContext.fromCrd support for v1 CustomResourceDefinition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTg5MTQz", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#pullrequestreview-551589143", "createdAt": "2020-12-14T16:44:40Z", "commit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNjQ2ODIw", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#pullrequestreview-551646820", "createdAt": "2020-12-14T17:13:50Z", "commit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxMzo1MFrOIFbFlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDozOVrOIFbIAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NzU5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1 CRD, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542557591", "createdAt": "2020-12-14T17:13:50Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1Nzk4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1beta1 CRD with versions, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542557985", "createdAt": "2020-12-14T17:14:22Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n+  void fromCrdV1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1ODIxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1beta1 CRD with spec.version, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1beta1 CRD with spec.version, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542558210", "createdAt": "2020-12-14T17:14:39Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n+  void fromCrdV1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")\n+  void fromCrdV1beta1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1beta1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1beta1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with spec.version, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f40da712316cce8ebed95c9bdf338133e047a5", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/64f40da712316cce8ebed95c9bdf338133e047a5", "committedDate": "2020-12-14T20:41:16Z", "message": "fix: typo\n\nCo-authored-by: Rohan Kumar  <rohan.kumar.kanojia@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "787adde8d0117b78720adab4ac950c3e4d5c926b", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/787adde8d0117b78720adab4ac950c3e4d5c926b", "committedDate": "2020-12-14T20:42:00Z", "message": "fix: typos\n\nCo-authored-by: Rohan Kumar  <rohan.kumar.kanojia@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxODc2OTA5", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#pullrequestreview-551876909", "createdAt": "2020-12-14T20:43:36Z", "commit": {"oid": "787adde8d0117b78720adab4ac950c3e4d5c926b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3572, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}