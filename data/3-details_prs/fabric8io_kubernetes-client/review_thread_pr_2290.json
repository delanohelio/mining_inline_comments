{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODgyOTA0", "number": 2290, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTo0NjoyNlrOEGAAjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxMjoxN1rOEGoF3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzI3MDU1OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTo0NjoyNlrOGkhy6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyNToxN1rOGkp-3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NTYyNw==", "bodyText": "Do you think we should maybe move this method to KubeConfigUtils?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r440955627", "createdAt": "2020-06-16T15:46:26Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -597,6 +599,20 @@ private static boolean loadFromKubeconfig(Config config, String context, String\n \n     return false;\n   }\n+\n+  private static Context setCurrentContext(String context, Config config, io.fabric8.kubernetes.api.model.Config kubeConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3383b03cbca69c9bbd9787636ee0ab07b76069f9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NzgyOA==", "bodyText": "I haven't look deeply but would we be able to resolve #1512 if we expose this as public?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r440957828", "createdAt": "2020-06-16T15:49:21Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -597,6 +599,20 @@ private static boolean loadFromKubeconfig(Config config, String context, String\n \n     return false;\n   }\n+\n+  private static Context setCurrentContext(String context, Config config, io.fabric8.kubernetes.api.model.Config kubeConfig) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NTYyNw=="}, "originalCommit": {"oid": "3383b03cbca69c9bbd9787636ee0ab07b76069f9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4OTc1Ng==", "bodyText": "@rohanKanojia so the idea in #1512 is as far as I understand it is to be able to set the current context to the Config, right?\nThe challenge with this is that this implies an update to plenty of settings like the current cluster, namespace etc. It could be achieved by calling Config#autoConfigure behind the scene though. I'd rather fix this in its very own issue though.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r441089756", "createdAt": "2020-06-16T19:25:17Z", "author": {"login": "adietish"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -597,6 +599,20 @@ private static boolean loadFromKubeconfig(Config config, String context, String\n \n     return false;\n   }\n+\n+  private static Context setCurrentContext(String context, Config config, io.fabric8.kubernetes.api.model.Config kubeConfig) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NTYyNw=="}, "originalCommit": {"oid": "3383b03cbca69c9bbd9787636ee0ab07b76069f9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzgxOTQ1OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzowNTo0NVrOGliPBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODowODoxNlrOGlkRXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxMTM5Ng==", "bodyText": "nit, Could you please use format specifiers?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r442011396", "createdAt": "2020-06-18T07:05:45Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -460,41 +477,52 @@ public static Config fromKubeconfig(String kubeconfigContents) throws IOExceptio\n   public static Config fromKubeconfig(String context, String kubeconfigContents, String kubeconfigPath) {\n     // we allow passing context along here, since downstream accepts it\n     Config config = new Config();\n-    Config.loadFromKubeconfig(config, context, kubeconfigContents, kubeconfigPath);\n+    loadFromKubeconfig(config, context, kubeconfigContents, kubeconfigPath);\n     return config;\n   }\n \n   private static boolean tryKubeConfig(Config config, String context) {\n     LOGGER.debug(\"Trying to configure client from Kubernetes config...\");\n-    if (Utils.getSystemPropertyOrEnvVar(KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, true)) {\n-      String fileName = Utils.getSystemPropertyOrEnvVar(KUBERNETES_KUBECONFIG_FILE, new File(getHomeDir(), \".kube\" + File.separator + \"config\").toString());\n+    if (!Utils.getSystemPropertyOrEnvVar(KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, true)) {\n+      return false;\n+    }\n+    File kubeConfigFile = new File(getKubeconfigFilename());\n+    if (!kubeConfigFile.isFile()) {\n+      LOGGER.debug(\"Did not find Kubernetes config at: [\"+kubeConfigFile.getPath()+\"]. Ignoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce27533e4bec06cf1c38259cf7fa80c9aa8a0e9"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0NDc2NA==", "bodyText": "nit, Could you please use format specifiers?\n\nyou mean the slf4j facility, right?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r442044764", "createdAt": "2020-06-18T08:08:16Z", "author": {"login": "adietish"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -460,41 +477,52 @@ public static Config fromKubeconfig(String kubeconfigContents) throws IOExceptio\n   public static Config fromKubeconfig(String context, String kubeconfigContents, String kubeconfigPath) {\n     // we allow passing context along here, since downstream accepts it\n     Config config = new Config();\n-    Config.loadFromKubeconfig(config, context, kubeconfigContents, kubeconfigPath);\n+    loadFromKubeconfig(config, context, kubeconfigContents, kubeconfigPath);\n     return config;\n   }\n \n   private static boolean tryKubeConfig(Config config, String context) {\n     LOGGER.debug(\"Trying to configure client from Kubernetes config...\");\n-    if (Utils.getSystemPropertyOrEnvVar(KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, true)) {\n-      String fileName = Utils.getSystemPropertyOrEnvVar(KUBERNETES_KUBECONFIG_FILE, new File(getHomeDir(), \".kube\" + File.separator + \"config\").toString());\n+    if (!Utils.getSystemPropertyOrEnvVar(KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, true)) {\n+      return false;\n+    }\n+    File kubeConfigFile = new File(getKubeconfigFilename());\n+    if (!kubeConfigFile.isFile()) {\n+      LOGGER.debug(\"Did not find Kubernetes config at: [\"+kubeConfigFile.getPath()+\"]. Ignoring.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxMTM5Ng=="}, "originalCommit": {"oid": "1ce27533e4bec06cf1c38259cf7fa80c9aa8a0e9"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzgzNzc1OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxMjoxN1rOGliaig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzoxMjoxN1rOGliaig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxNDM0Ng==", "bodyText": "I would appreciate it if you could add some Javadoc to publicly available methods introduced in this PR.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2290#discussion_r442014346", "createdAt": "2020-06-18T07:12:17Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -1128,4 +1170,21 @@ public void setOauthTokenProvider(OAuthTokenProvider oauthTokenProvider) {\n   public void setCustomHeaders(Map<String, String> customHeaders) {\n     this.customHeaders = customHeaders;\n   }\n+\n+  public List<NamedContext> getContexts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce27533e4bec06cf1c38259cf7fa80c9aa8a0e9"}, "originalPosition": 238}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3747, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}