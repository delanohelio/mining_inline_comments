{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NjUwMzc0", "number": 2665, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxMzo1MFrOFFF9XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDozOVrOFFF-3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODg0ODI4OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxMzo1MFrOIFbFlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxMzo1MFrOIFbFlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NzU5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1 CRD, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542557591", "createdAt": "2020-12-14T17:13:50Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODg1MDY3OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDoyMlrOIFbHIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDoyMlrOIFbHIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1Nzk4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1beta1 CRD with versions, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542557985", "createdAt": "2020-12-14T17:14:22Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n+  void fromCrdV1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODg1MjE0OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDozOVrOIFbIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNDozOVrOIFbIAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1ODIxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @DisplayName(\"formCrd, with v1beta1 CRD with spec.version, should infer correct properties\")\n          \n          \n            \n              @DisplayName(\"fromCrd, with v1beta1 CRD with spec.version, should infer correct properties\")", "url": "https://github.com/fabric8io/kubernetes-client/pull/2665#discussion_r542558210", "createdAt": "2020-12-14T17:14:39Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContextTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.base;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CustomResourceDefinitionContextTest {\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1 CRD, should infer correct properties\")\n+  void fromCrdV1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with versions, should infer correct properties\")\n+  void fromCrdV1beta1() {\n+    // Given\n+    final io.fabric8.kubernetes.api.model.apiextensions.v1beta1.CustomResourceDefinition crd =\n+      new io.fabric8.kubernetes.api.model.apiextensions.v1beta1.CustomResourceDefinitionBuilder()\n+        .withNewMetadata().withName(\"foobar.the-foo.com\").endMetadata()\n+        .withNewSpec()\n+        .withGroup(\"the-foo.com\")\n+        .withScope(\"Namespaced\")\n+        .withNewNames().withNewSingular(\"foobar\").withNewPlural(\"foobars\").withKind(\"Foobar\").endNames()\n+        .addNewVersion().withName(\"v1beta1\").endVersion()\n+        .addNewVersion().withName(\"v1alpha1\").endVersion()\n+        .addNewVersion().withName(\"v1\").endVersion()\n+        .endSpec()\n+        .build();\n+    // When\n+    final CustomResourceDefinitionContext result = CustomResourceDefinitionContext.fromCrd(crd);\n+    // Then\n+    assertThat(result)\n+      .hasFieldOrPropertyWithValue(\"group\", \"the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"version\", \"v1\")\n+      .hasFieldOrPropertyWithValue(\"scope\", \"Namespaced\")\n+      .hasFieldOrPropertyWithValue(\"name\", \"foobar.the-foo.com\")\n+      .hasFieldOrPropertyWithValue(\"plural\", \"foobars\")\n+      .hasFieldOrPropertyWithValue(\"kind\", \"Foobar\");\n+  }\n+\n+  @Test\n+  @DisplayName(\"formCrd, with v1beta1 CRD with spec.version, should infer correct properties\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592f4567290196ced401ccfa3f225bd71151aabc"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3642, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}