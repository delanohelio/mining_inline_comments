{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NzI5NTQ4", "number": 2639, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0OTowMVrOFBtzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NzozNlrOFB4FLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzQzMzgwOnYy", "diffSide": "RIGHT", "path": "extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0OTowMVrOIAgyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowOToxNFrOIA2JaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ==", "bodyText": "Isn't this class (and a lot others) supposed to be generated?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537408195", "createdAt": "2020-12-07T10:49:01Z", "author": {"login": "metacosm"}, "path": "extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json", "diffHunk": "@@ -158,15 +158,15 @@\n           \"required\": true\n         },\n         \"metadata\": {\n-          \"javaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n+          \"existingJavaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n         },\n         \"spec\": {\n           \"$ref\": \"#/definitions/github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\",\n-          \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"\n+          \"existingJavaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU5NjkyNw==", "bodyText": "I checked and it looks like it's still generated:\nkubernetes-client : $ find . -iname ClusterServiceBrokerSpec.java\n./extensions/service-catalog/model/target/generated-sources/io/fabric8/servicecatalog/api/model/ClusterServiceBrokerSpec.java\n\nLooks like javaType is split into existingJavaType and javaType in this version of JsonSchema2Pojo[0]\n[0] joelittlejohn/jsonschema2pojo#828", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537596927", "createdAt": "2020-12-07T15:28:58Z", "author": {"login": "rohanKanojia"}, "path": "extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json", "diffHunk": "@@ -158,15 +158,15 @@\n           \"required\": true\n         },\n         \"metadata\": {\n-          \"javaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n+          \"existingJavaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n         },\n         \"spec\": {\n           \"$ref\": \"#/definitions/github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\",\n-          \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"\n+          \"existingJavaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ=="}, "originalCommit": {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1ODA1Ng==", "bodyText": "Yes, the class is meant to be generated.\nIn order to generate only the necessary classes, some are set as javaType and others as existingJavaType.\nSo for modules that export classes, you will find in the \"definitions\" section those schemas.\nFor this particular class, this would be here:\n\n  \n    \n      kubernetes-client/extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json\n    \n    \n         Line 229\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\": { \n        \n    \n  \n\n\n\n  \n    \n      kubernetes-client/extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json\n    \n    \n         Line 265\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\", \n        \n    \n  \n\n\nHowever, that class might be used as a field/property in a different type (the line we're currently commenting on).\nThis is where things get complicated, especially for those modules that reference classes from other modules.\nSo the hard part and core implementation of this PR is figuring out which definitions must be declared as  javaType or existingJavaType\nFor example, in the OpenShift model, there are many top-level definitions that belong to the core module:\n\n  \n    \n      kubernetes-client/kubernetes-model-generator/openshift-model/src/main/resources/schema/kube-schema.json\n    \n    \n         Line 6\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"kubernetes_apimachinery_APIGroup\": { \n        \n    \n  \n\n\nthus, must be declared as existing despite being top-level definitions:\n\n  \n    \n      kubernetes-client/kubernetes-model-generator/openshift-model/src/main/resources/schema/kube-schema.json\n    \n    \n         Line 49\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"existingJavaType\": \"io.fabric8.kubernetes.api.model.APIGroup\",", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537758056", "createdAt": "2020-12-07T19:09:14Z", "author": {"login": "manusa"}, "path": "extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json", "diffHunk": "@@ -158,15 +158,15 @@\n           \"required\": true\n         },\n         \"metadata\": {\n-          \"javaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n+          \"existingJavaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n         },\n         \"spec\": {\n           \"$ref\": \"#/definitions/github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\",\n-          \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"\n+          \"existingJavaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ=="}, "originalCommit": {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTAzNDc4OnYy", "diffSide": "RIGHT", "path": "kubernetes-model-generator/openshift-model-monitoring/cmd/generate/generate.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjozMTozMVrOIAvVnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjozMTozMVrOIAvVnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0NjQ5NQ==", "bodyText": "Any specific reason generated flag is set true here?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537646495", "createdAt": "2020-12-07T16:31:31Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-model-generator/openshift-model-monitoring/cmd/generate/generate.go", "diffHunk": "@@ -56,16 +56,16 @@ type Schema struct {\n \n func main() {\n   packages := []schemagen.PackageDescriptor{\n-    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\"},\n-    {\"k8s.io/apimachinery/pkg/api/resource\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_resource_\"},\n-    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\"},\n-    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.openshift.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\"},\n-    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\"},\n-    {\"k8s.io/kubernetes/pkg/util\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_util_\"},\n-    {\"k8s.io/kubernetes/pkg/api/errors\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_errors_\"},\n-    {\"k8s.io/kubernetes/pkg/api/unversioned\", \"\", \"io.fabric8.kubernetes.api.model\", \"api_\"},\n-    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n-    {\"github.com/coreos/prometheus-operator/pkg/apis/monitoring/v1\", \"monitoring.coreos.com\", \"io.fabric8.openshift.api.model.monitoring.v1\", \"os_monitoring_v1_\"},\n+    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\", false},\n+    {\"k8s.io/apimachinery/pkg/api/resource\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_resource_\", false},\n+    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\", false},\n+    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.openshift.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\", true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTExNzI2OnYy", "diffSide": "RIGHT", "path": "kubernetes-model-generator/kubernetes-model-apps/cmd/generate/generate.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NzozNlrOIAwF6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo0NzozNlrOIAwF6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODg1OA==", "bodyText": "I think this should be false", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537658858", "createdAt": "2020-12-07T16:47:36Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-model-generator/kubernetes-model-apps/cmd/generate/generate.go", "diffHunk": "@@ -100,17 +100,17 @@ type Schema struct {\n \n func main() {\n   packages := []schemagen.PackageDescriptor{\n-    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\"},\n-    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.kubernetes.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\"},\n-    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\"},\n-    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n-    {\"k8s.io/api/apps/v1\", \"\", \"io.fabric8.kubernetes.api.model.apps\", \"kubernetes_apps_\"},\n-    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\"},\n-    {\"k8s.io/kubernetes/pkg/watch/json\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_watch_\"},\n-    {\"k8s.io/kubernetes/pkg/util\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_util_\"},\n-    {\"k8s.io/kubernetes/pkg/api/errors\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_errors_\"},\n-    {\"k8s.io/client-go/tools/clientcmd/api/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_config_\"},\n-    {\"k8s.io/kubernetes/pkg/api/unversioned\", \"\", \"io.fabric8.kubernetes.api.model\", \"api_\"},\n+    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\", false},\n+    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.kubernetes.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\", false},\n+    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\", false},\n+    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\", true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3618, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}