{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NzI3ODE5", "number": 2616, "title": "refactor: Watcher.onClose has dedicated WatcherException as parameter.", "bodyText": "Description\nrefactor: Watcher#onClose has dedicated WatcherException as parameter.\n\nRefactored common parts of Watcher implementations into AbstractWatchManager\n\nWatcher interface refactor\nI've refactored the Watcher interface and the methods calling it.\nThe interface now provides a dedicated default argument-less onClose() method. This method should always be called upon Watcher completion. Implementations should override this method in case operations (e.g. cleanup) should be performed once the Watcher is closed.\nThe previous onClose(WatcherException cause) is kept and only invoked whenever an exception occurs during the Watcher life-cycle (once the watch connection is open and established).\nTo be clear, Exceptions that happen during Watch initiation should be captured with code like (this has not changed):\ntry (\n  Watch watch = kubernetesClient.pods().watch(new WatcherImpl())\n) {\n   // ...\n} catch (Exception exception) {\n  // act upon exceptions that may happen synchronously when opening the watch\n}\nMaybe further improvements can be performed or method signatures changed so that they throw checked exceptions.\nFixes: #2614\nType of change\n\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n Code contributed by me aligns with current project license: Apache 2.0\n I Added CHANGELOG entry regarding this change\n I have implemented unit tests to cover my changes\n I have added/updated the javadocs and other documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-11-20T14:05:46Z", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616", "merged": true, "mergeCommit": {"oid": "fe13a511276aacf95979c3c612b9e9ad83cc5def"}, "closed": true, "closedAt": "2020-11-23T16:55:18Z", "author": {"login": "manusa"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeYa4ngBqjQwMjEyMDkxNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfXV5IgBqjQwMjg0MDI3ODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/4b1a3c2a58f014c14ca086c78955038af28225b5", "committedDate": "2020-11-20T14:04:39Z", "message": "refactor: Watcher.onClose has dedicated WatcherException as parameter."}, "afterCommit": {"oid": "23418cb065914bb981d4675813b44748d796e017", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/23418cb065914bb981d4675813b44748d796e017", "committedDate": "2020-11-20T14:41:53Z", "message": "refactor: Watcher.onClose has dedicated WatcherException as parameter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDYzNjMy", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#pullrequestreview-535463632", "createdAt": "2020-11-20T14:16:21Z", "commit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDoxNjoyMlrOH3RdXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDoyNzozMVrOH3R7rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcxOTc3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return getCause() instanceof KubernetesClientException ?\n          \n          \n            \n                return cause instanceof KubernetesClientException ?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r527719774", "createdAt": "2020-11-20T14:16:22Z", "author": {"login": "metacosm"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/WatcherException.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client;\n+\n+import java.net.HttpURLConnection;\n+\n+public class WatcherException extends Exception {\n+\n+  public WatcherException(String message, Throwable cause) {\n+    super(message, cause);\n+  }\n+\n+  public WatcherException(String message) {\n+    super(message);\n+  }\n+\n+  public KubernetesClientException asClientException() {\n+    final Throwable cause = getCause();\n+    return getCause() instanceof KubernetesClientException ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyMzQyMA==", "bodyText": "Why did you make this method final?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r527723420", "createdAt": "2020-11-20T14:21:19Z", "author": {"login": "metacosm"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/AbstractWatchManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.dsl.internal;\n+\n+import io.fabric8.kubernetes.api.model.ListOptions;\n+import io.fabric8.kubernetes.client.Watch;\n+import io.fabric8.kubernetes.client.Watcher;\n+import io.fabric8.kubernetes.client.WatcherException;\n+import okhttp3.OkHttpClient;\n+import okhttp3.WebSocket;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+public abstract class AbstractWatchManager<T> implements Watch {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(AbstractWatchManager.class);\n+\n+  final Watcher<T> watcher;\n+  final int reconnectLimit;\n+  final int reconnectInterval;\n+  final int maxIntervalExponent;\n+  final ListOptions listOptions;\n+  final AtomicReference<String> resourceVersion;\n+  final OkHttpClient clonedClient;\n+\n+  private final AtomicBoolean forceClosed;\n+\n+  public AbstractWatchManager(\n+    Watcher<T> watcher, ListOptions listOptions, int reconnectLimit, int reconnectInterval, int maxIntervalExponent,\n+    OkHttpClient clonedClient\n+  ) {\n+    this.watcher = watcher;\n+    this.listOptions = listOptions;\n+    this.reconnectLimit = reconnectLimit;\n+    this.reconnectInterval = reconnectInterval;\n+    this.maxIntervalExponent = maxIntervalExponent;\n+    this.clonedClient = clonedClient;\n+    this.resourceVersion = new AtomicReference<>(listOptions.getResourceVersion());\n+    this.forceClosed = new AtomicBoolean();\n+  }\n+\n+  final void closeEvent(WatcherException cause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyNjMxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(410, cause.asClientException().getCode());\n          \n          \n            \n                    assertTrue(410, cause.isHttpGone());", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r527726312", "createdAt": "2020-11-20T14:25:52Z", "author": {"login": "metacosm"}, "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/WatchTest.java", "diffHunk": "@@ -86,8 +87,8 @@ public void eventReceived(Action action, Pod resource) {\n       }\n \n       @Override\n-      public void onClose(KubernetesClientException cause) {\n-        assertEquals(410, cause.getCode());\n+      public void onClose(WatcherException cause) {\n+        assertEquals(410, cause.asClientException().getCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyNzUzMw==", "bodyText": "I don't understand why it's Http but URL\u2026\u00a0\ud83e\udd26 \ud83d\ude00", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r527727533", "createdAt": "2020-11-20T14:27:31Z", "author": {"login": "metacosm"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/WatcherException.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client;\n+\n+import java.net.HttpURLConnection;\n+\n+public class WatcherException extends Exception {\n+\n+  public WatcherException(String message, Throwable cause) {\n+    super(message, cause);\n+  }\n+\n+  public WatcherException(String message) {\n+    super(message);\n+  }\n+\n+  public KubernetesClientException asClientException() {\n+    final Throwable cause = getCause();\n+    return getCause() instanceof KubernetesClientException ?\n+      (KubernetesClientException) cause : new KubernetesClientException(getMessage(), cause);\n+  }\n+\n+  public boolean isHttpGone() {\n+    final KubernetesClientException cause = asClientException();\n+    return cause.getCode() == HttpURLConnection.HTTP_GONE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1a3c2a58f014c14ca086c78955038af28225b5"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjA3Nzk5", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#pullrequestreview-535607799", "createdAt": "2020-11-20T16:59:59Z", "commit": {"oid": "779e32c6196f3faca61d37eef2a979b1053bba4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjo1OTo1OVrOH3YLlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjo1OTo1OVrOH3YLlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgyOTkwOA==", "bodyText": "I don't think that this addresses the issue because very often what triggers the call to close here is an exception, which is still not propagated in that case.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r527829908", "createdAt": "2020-11-20T16:59:59Z", "author": {"login": "metacosm"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/WatchConnectionManager.java", "diffHunk": "@@ -331,7 +331,7 @@ public void waitUntilReady() {\n   @Override\n   public void close() {\n     logger.debug(\"Force closing the watch {}\", this);\n-    closeEvent(null);\n+    closeEvent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "779e32c6196f3faca61d37eef2a979b1053bba4b"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "779e32c6196f3faca61d37eef2a979b1053bba4b", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/779e32c6196f3faca61d37eef2a979b1053bba4b", "committedDate": "2020-11-20T16:49:02Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}, "afterCommit": {"oid": "be93de81f515127cc0b57a727b20782cad50208d", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/be93de81f515127cc0b57a727b20782cad50208d", "committedDate": "2020-11-20T17:11:56Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be93de81f515127cc0b57a727b20782cad50208d", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/be93de81f515127cc0b57a727b20782cad50208d", "committedDate": "2020-11-20T17:11:56Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}, "afterCommit": {"oid": "94ad9e4a0dff5f040733925670b16e832e5d5ef1", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/94ad9e4a0dff5f040733925670b16e832e5d5ef1", "committedDate": "2020-11-23T09:53:00Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94ad9e4a0dff5f040733925670b16e832e5d5ef1", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/94ad9e4a0dff5f040733925670b16e832e5d5ef1", "committedDate": "2020-11-23T09:53:00Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}, "afterCommit": {"oid": "4b9c7772164a157cbd072893377a2e23294731b8", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/4b9c7772164a157cbd072893377a2e23294731b8", "committedDate": "2020-11-23T10:22:55Z", "message": "wip: Watcher has dedicated close for exceptions and graceful close"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDAyMjc5", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#pullrequestreview-536402279", "createdAt": "2020-11-23T11:52:37Z", "commit": {"oid": "4b9c7772164a157cbd072893377a2e23294731b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aeb3d59f67df1a22160fd2e9d74f18b9fca971bb", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/aeb3d59f67df1a22160fd2e9d74f18b9fca971bb", "committedDate": "2020-11-23T12:19:49Z", "message": "wip: Refactored common parts out of AbstractWatchManager implementations"}, "afterCommit": {"oid": "accdf0b70f3631d590c550f003e4a0c587a3ddd0", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/accdf0b70f3631d590c550f003e4a0c587a3ddd0", "committedDate": "2020-11-23T12:44:54Z", "message": "wip: Refactored common parts out of AbstractWatchManager implementations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjA3NTM1", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#pullrequestreview-536607535", "createdAt": "2020-11-23T15:54:24Z", "commit": {"oid": "accdf0b70f3631d590c550f003e4a0c587a3ddd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1NDoyNFrOH4Txyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1NDoyNFrOH4Txyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNjM0Ng==", "bodyText": "Output target API URL instead of rather useless manager object reference\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.debug(\"Connecting websocket ... {}\", this);\n          \n          \n            \n                logger.debug(\"Connecting websocket to {}...\", requestURL);", "url": "https://github.com/fabric8io/kubernetes-client/pull/2616#discussion_r528806346", "createdAt": "2020-11-23T15:54:24Z", "author": {"login": "metacosm"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/WatchConnectionManager.java", "diffHunk": "@@ -107,7 +85,7 @@ public WatchConnectionManager(final OkHttpClient client, final BaseOperation<T,\n     this(client, baseOperation, listOptions, watcher, reconnectInterval, reconnectLimit, websocketTimeout, 5);\n   }\n \n-  private final void runWatch() {\n+  private void runWatch() {\n     logger.debug(\"Connecting websocket ... {}\", this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "accdf0b70f3631d590c550f003e4a0c587a3ddd0"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bddc79e8c04551737dc4565d81f92e5450d15aa5", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/bddc79e8c04551737dc4565d81f92e5450d15aa5", "committedDate": "2020-11-23T15:59:45Z", "message": "refactor: Watcher.onClose has dedicated WatcherException as parameter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dbb5636820340c9e6417406eaba94d7c263b31e", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/1dbb5636820340c9e6417406eaba94d7c263b31e", "committedDate": "2020-11-23T15:59:45Z", "message": "refactor: Watcher has dedicated close for exceptions and graceful close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eac6826942e002a485666c12bf1d4b3d18edbd35", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/eac6826942e002a485666c12bf1d4b3d18edbd35", "committedDate": "2020-11-23T15:59:45Z", "message": "refactor: Refactored common parts out of AbstractWatchManager implementations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47439b684672ad94ce6970c00e61346428801ed1", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/47439b684672ad94ce6970c00e61346428801ed1", "committedDate": "2020-11-23T15:59:45Z", "message": "refactor: PR second pass suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "accdf0b70f3631d590c550f003e4a0c587a3ddd0", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/accdf0b70f3631d590c550f003e4a0c587a3ddd0", "committedDate": "2020-11-23T12:44:54Z", "message": "wip: Refactored common parts out of AbstractWatchManager implementations"}, "afterCommit": {"oid": "47439b684672ad94ce6970c00e61346428801ed1", "author": {"user": {"login": "manusa", "name": "Marc Nuri"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/47439b684672ad94ce6970c00e61346428801ed1", "committedDate": "2020-11-23T15:59:45Z", "message": "refactor: PR second pass suggestions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3549, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}