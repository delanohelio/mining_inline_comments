{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNTc3MjY3", "number": 2584, "title": "Fix #2444 Use try with resources in kubernetes-examples", "bodyText": "Description\nPartially fixes #2444\nType of change\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n Code contributed by me aligns with current project license: Apache 2.0\n I Added CHANGELOG entry regarding this change\n I have implemented unit tests to cover my changes\n I have added/updated the javadocs and other documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-11-01T07:57:40Z", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584", "merged": true, "mergeCommit": {"oid": "fb64f92f97ee872797dc5c33110d303c81805dac"}, "closed": true, "closedAt": "2020-11-18T12:25:47Z", "author": {"login": "HeroicHitesh"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYMpKFAFqTUyMTIwMzMzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbhHZMAFqTUyODM2ODU3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjAzMzMz", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-521203333", "createdAt": "2020-11-01T09:35:14Z", "commit": {"oid": "e344f76dd8da343bbcc77396d4cf447582d20214"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzUwMTAy", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-521350102", "createdAt": "2020-11-02T06:06:40Z", "commit": {"oid": "e344f76dd8da343bbcc77396d4cf447582d20214"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjowNjo0MFrOHr3PZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjowNjo0MFrOHr3PZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NTg3Ng==", "bodyText": "Please reuse this try-catch block to init your resources", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#discussion_r515755876", "createdAt": "2020-11-02T06:06:40Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/src/main/java/io/fabric8/kubernetes/examples/ListCustomResourceDefinitions.java", "diffHunk": "@@ -28,19 +28,20 @@\n public class ListCustomResourceDefinitions {\n   public static void main(String[] args) {\n     try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e344f76dd8da343bbcc77396d4cf447582d20214"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDAzOTAz", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-521403903", "createdAt": "2020-11-02T08:10:28Z", "commit": {"oid": "f2d5098d0e8c9dfe8e79345c467f5db3a12b3b8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODoxMDoyOFrOHr5zxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODoxMDoyOFrOHr5zxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc5Nzk1Nw==", "bodyText": "Maybe you copied this accidentally???", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#discussion_r515797957", "createdAt": "2020-11-02T08:10:28Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-examples/src/main/java/io/fabric8/openshift/examples/BuildConfigExamples.java", "diffHunk": "@@ -37,106 +37,244 @@\n \n   public static void main(String[] args) throws InterruptedException {\n     Config config = new ConfigBuilder().build();\n-    KubernetesClient kubernetesClient = new DefaultKubernetesClient(config);\n-    OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);\n-\n-    try {\n-      // Create a namespace for all our stuff\n-      Namespace ns = new NamespaceBuilder().withNewMetadata().withName(\"thisisatest\").addToLabels(\"this\", \"rocks\").endMetadata().build();\n-      log(\"Created namespace\", client.namespaces().create(ns));\n-\n-      ServiceAccount fabric8 = new ServiceAccountBuilder().withNewMetadata().withName(\"fabric8\").endMetadata().build();\n-\n-      client.serviceAccounts().inNamespace(\"thisisatest\").create(fabric8);\n-\n-      log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"example-camel-cdi\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .addNewTag()\n-        .withName(\"latest\")\n-        .endTag()\n-        .withDockerImageRepository(\"fabric8/example-camel-cdi\")\n-        .endSpec()\n-        .withNewStatus().withDockerImageRepository(\"\").endStatus()\n-        .done());\n-\n-      log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"java-sti\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .addNewTag()\n-        .withName(\"latest\")\n-        .endTag()\n-        .withDockerImageRepository(\"fabric8/java-sti\")\n-        .endSpec()\n-        .withNewStatus().withDockerImageRepository(\"\").endStatus()\n-        .done());\n-\n-      log(\"Created build config\", client.buildConfigs().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"custom-build-config\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .withServiceAccount(\"fabric8\")\n-        .withNewSource()\n-        .withType(\"Git\")\n-        .withNewGit()\n-        .withUri(\"https://github.com/fabric8io/example-camel-cdi.git\")\n-        .endGit()\n-        .endSource()\n-        .withNewResources()\n-          .addToLimits(\"mykey\", new Quantity(\"10\"))\n-          .addToRequests(\"mykey\", new Quantity(\"10\"))\n-        .endResources()\n-        .withNewStrategy()\n-        .withType(\"Source\")\n-        .withNewSourceStrategy()\n-        .withNewFrom().withName(\"java-sti:latest\").withKind(\"DockerImage\").endFrom()\n-        .endSourceStrategy()\n-        .endStrategy()\n-        .withNewOutput()\n-        .withNewTo().withKind(\"DockerImage\").withName(\"example-camel-cdi:latest\").endTo()\n-        .endOutput()\n-        .addNewTrigger()\n-        .withType(\"GitHub\")\n-        .withNewGithub()\n-        .withSecret(\"secret101\")\n-        .endGithub()\n-        .endTrigger()\n-        .endSpec()\n-        .done());\n-\n-      Build build = client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\").instantiate(new BuildRequestBuilder()\n-        .withNewMetadata().withName(\"custom-build-config\").endMetadata()\n-        .build());\n-      log(\"Build:\", build.getMetadata().getName());\n-\n-      client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\")\n-        .withSecret(\"secret101\")\n-        .withType(\"github\")\n-        .trigger(new WebHookTriggerBuilder()\n+    try(KubernetesClient kubernetesClient = new DefaultKubernetesClient(config)){\n+      OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);\n+\n+      try {\n+        // Create a namespace for all our stuff\n+        Namespace ns = new NamespaceBuilder().withNewMetadata().withName(\"thisisatest\").addToLabels(\"this\", \"rocks\").endMetadata().build();\n+        log(\"Created namespace\", client.namespaces().create(ns));\n+\n+        ServiceAccount fabric8 = new ServiceAccountBuilder().withNewMetadata().withName(\"fabric8\").endMetadata().build();\n+\n+        client.serviceAccounts().inNamespace(\"thisisatest\").create(fabric8);\n+\n+        log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n+          .withNewMetadata()\n+          .withName(\"example-camel-cdi\")\n+          .endMetadata()\n+          .withNewSpec()\n+          .addNewTag()\n+          .withName(\"latest\")\n+          .endTag()\n+          .withDockerImageRepository(\"fabric8/example-camel-cdi\")\n+          .endSpec()\n+          .withNewStatus().withDockerImageRepository(\"\").endStatus()\n+          .done());\n+\n+        log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n+          .withNewMetadata()\n+          .withName(\"java-sti\")\n+          .endMetadata()\n+          .withNewSpec()\n+          .addNewTag()\n+          .withName(\"latest\")\n+          .endTag()\n+          .withDockerImageRepository(\"fabric8/java-sti\")\n+          .endSpec()\n+          .withNewStatus().withDockerImageRepository(\"\").endStatus()\n+          .done());\n+\n+        log(\"Created build config\", client.buildConfigs().inNamespace(\"thisisatest\").createNew()\n+          .withNewMetadata()\n+          .withName(\"custom-build-config\")\n+          .endMetadata()\n+          .withNewSpec()\n+          .withServiceAccount(\"fabric8\")\n+          .withNewSource()\n+          .withType(\"Git\")\n+          .withNewGit()\n+          .withUri(\"https://github.com/fabric8io/example-camel-cdi.git\")\n+          .endGit()\n+          .endSource()\n+          .withNewResources()\n+            .addToLimits(\"mykey\", new Quantity(\"10\"))\n+            .addToRequests(\"mykey\", new Quantity(\"10\"))\n+          .endResources()\n+          .withNewStrategy()\n+          .withType(\"Source\")\n+          .withNewSourceStrategy()\n+          .withNewFrom().withName(\"java-sti:latest\").withKind(\"DockerImage\").endFrom()\n+          .endSourceStrategy()\n+          .endStrategy()\n+          .withNewOutput()\n+          .withNewTo().withKind(\"DockerImage\").withName(\"example-camel-cdi:latest\").endTo()\n+          .endOutput()\n+          .addNewTrigger()\n+          .withType(\"GitHub\")\n+          .withNewGithub()\n           .withSecret(\"secret101\")\n+          .endGithub()\n+          .endTrigger()\n+          .endSpec()\n+          .done());\n+\n+        Build build = client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\").instantiate(new BuildRequestBuilder()\n+          .withNewMetadata().withName(\"custom-build-config\").endMetadata()\n           .build());\n+        log(\"Build:\", build.getMetadata().getName());\n+\n+        client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\")\n+          .withSecret(\"secret101\")\n+          .withType(\"github\")\n+          .trigger(new WebHookTriggerBuilder()\n+            .withSecret(\"secret101\")\n+            .build());\n+\n+\n+        Thread.sleep(6000);\n+\n+        log(\"Builds:\");\n+        for (Build b: client.builds().inNamespace(\"thisisatest\").list().getItems()) {\n+          log(\"\\t\\t\\t\"+b.getMetadata().getName());\n \n+          log(\"\\t\\t\\t\\t\\t Log:\");client.builds().inNamespace(\"thisisatest\").withName(b.getMetadata().getName()).watchLog(System.out);\n+        }\n \n-      Thread.sleep(6000);\n \n-      log(\"Builds:\");\n-      for (Build b: client.builds().inNamespace(\"thisisatest\").list().getItems()) {\n-        log(\"\\t\\t\\t\"+b.getMetadata().getName());\n \n-        log(\"\\t\\t\\t\\t\\t Log:\");client.builds().inNamespace(\"thisisatest\").withName(b.getMetadata().getName()).watchLog(System.out);\n+        log(\"Done.\");\n+      }finally {\n+        client.namespaces().withName(\"thisisatest\").delete();\n+        client.close();\n       }\n+  * Licensed under the Apache License, Version 2.0 (the \"License\");\n+  * you may not use this file except in compliance with the License.\n+  * You may obtain a copy of the License at\n+  *\n+  *         http://www.apache.org/licenses/LICENSE-2.0\n+  *\n+  * Unless required by applicable law or agreed to in writing, software\n+  * distributed under the License is distributed on an \"AS IS\" BASIS,\n+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2d5098d0e8c9dfe8e79345c467f5db3a12b3b8a"}, "originalPosition": 199}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODA1NTk3", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-521805597", "createdAt": "2020-11-02T16:43:48Z", "commit": {"oid": "49cc7223518347573d907333ac51e0c5bfaae15d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2ODkzMDM4", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-526893038", "createdAt": "2020-11-10T06:30:25Z", "commit": {"oid": "49cc7223518347573d907333ac51e0c5bfaae15d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNjozMDoyNVrOHwN5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNjozMDoyNVrOHwN5Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMyMTMzOA==", "bodyText": "It's the same for every example.\nPlease reuse the try-catch block and remove the finally clause (if applicable) where the client is closed.\ntry (KubernetesClient kubernetesClient = new DefaultKubernetesClient(config)) {\n  OpenShiftClient ifNecessary = kubernetesClient.adapt(OpenShiftClient.class);\n  /* ... your code with no extra try-catch blocks (unless strictly necessary) ... */\n}", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#discussion_r520321338", "createdAt": "2020-11-10T06:30:25Z", "author": {"login": "manusa"}, "path": "kubernetes-examples/src/main/java/io/fabric8/openshift/examples/BuildConfigExamples.java", "diffHunk": "@@ -37,106 +37,107 @@\n \n   public static void main(String[] args) throws InterruptedException {\n     Config config = new ConfigBuilder().build();\n-    KubernetesClient kubernetesClient = new DefaultKubernetesClient(config);\n-    OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);\n-\n-    try {\n-      // Create a namespace for all our stuff\n-      Namespace ns = new NamespaceBuilder().withNewMetadata().withName(\"thisisatest\").addToLabels(\"this\", \"rocks\").endMetadata().build();\n-      log(\"Created namespace\", client.namespaces().create(ns));\n-\n-      ServiceAccount fabric8 = new ServiceAccountBuilder().withNewMetadata().withName(\"fabric8\").endMetadata().build();\n-\n-      client.serviceAccounts().inNamespace(\"thisisatest\").create(fabric8);\n-\n-      log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"example-camel-cdi\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .addNewTag()\n-        .withName(\"latest\")\n-        .endTag()\n-        .withDockerImageRepository(\"fabric8/example-camel-cdi\")\n-        .endSpec()\n-        .withNewStatus().withDockerImageRepository(\"\").endStatus()\n-        .done());\n-\n-      log(\"Created image stream\", client.imageStreams().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"java-sti\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .addNewTag()\n-        .withName(\"latest\")\n-        .endTag()\n-        .withDockerImageRepository(\"fabric8/java-sti\")\n-        .endSpec()\n-        .withNewStatus().withDockerImageRepository(\"\").endStatus()\n-        .done());\n-\n-      log(\"Created build config\", client.buildConfigs().inNamespace(\"thisisatest\").createNew()\n-        .withNewMetadata()\n-        .withName(\"custom-build-config\")\n-        .endMetadata()\n-        .withNewSpec()\n-        .withServiceAccount(\"fabric8\")\n-        .withNewSource()\n-        .withType(\"Git\")\n-        .withNewGit()\n-        .withUri(\"https://github.com/fabric8io/example-camel-cdi.git\")\n-        .endGit()\n-        .endSource()\n-        .withNewResources()\n-          .addToLimits(\"mykey\", new Quantity(\"10\"))\n-          .addToRequests(\"mykey\", new Quantity(\"10\"))\n-        .endResources()\n-        .withNewStrategy()\n-        .withType(\"Source\")\n-        .withNewSourceStrategy()\n-        .withNewFrom().withName(\"java-sti:latest\").withKind(\"DockerImage\").endFrom()\n-        .endSourceStrategy()\n-        .endStrategy()\n-        .withNewOutput()\n-        .withNewTo().withKind(\"DockerImage\").withName(\"example-camel-cdi:latest\").endTo()\n-        .endOutput()\n-        .addNewTrigger()\n-        .withType(\"GitHub\")\n-        .withNewGithub()\n-        .withSecret(\"secret101\")\n-        .endGithub()\n-        .endTrigger()\n-        .endSpec()\n-        .done());\n-\n-      Build build = client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\").instantiate(new BuildRequestBuilder()\n-        .withNewMetadata().withName(\"custom-build-config\").endMetadata()\n-        .build());\n-      log(\"Build:\", build.getMetadata().getName());\n-\n-      client.buildConfigs().inNamespace(\"thisisatest\").withName(\"custom-build-config\")\n-        .withSecret(\"secret101\")\n-        .withType(\"github\")\n-        .trigger(new WebHookTriggerBuilder()\n+    try(KubernetesClient kubernetesClient = new DefaultKubernetesClient(config)){\n+      OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);\n+\n+      try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49cc7223518347573d907333ac51e0c5bfaae15d"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjU0NTg4", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-527254588", "createdAt": "2020-11-10T14:25:57Z", "commit": {"oid": "e11e8e1c2dde0ff54ce6b3ff3d5296815860e8af"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyNTo1N1rOHwfBfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyODo0OFrOHwfJxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwMTk4Mw==", "bodyText": "@manusa I think finally block can be removed from here as we are closing client in try block only, but I am not sure if doing that is correct or not, so asking here.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#discussion_r520601983", "createdAt": "2020-11-10T14:25:57Z", "author": {"login": "HeroicHitesh"}, "path": "kubernetes-examples/src/main/java/io/fabric8/openshift/examples/DeploymentConfigExamples.java", "diffHunk": "@@ -94,7 +93,7 @@ public static void main(String[] args) throws InterruptedException {\n \n       log(\"Done.\");\n     }finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11e8e1c2dde0ff54ce6b3ff3d5296815860e8af"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwNDEwMw==", "bodyText": "@manusa or is the issue caused because we have moved this client variable inside the try block?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#discussion_r520604103", "createdAt": "2020-11-10T14:28:48Z", "author": {"login": "HeroicHitesh"}, "path": "kubernetes-examples/src/main/java/io/fabric8/openshift/examples/BuildConfigExamples.java", "diffHunk": "@@ -37,10 +37,8 @@\n \n   public static void main(String[] args) throws InterruptedException {\n     Config config = new ConfigBuilder().build();\n-    KubernetesClient kubernetesClient = new DefaultKubernetesClient(config);\n-    OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);\n-\n-    try {\n+    try(KubernetesClient kubernetesClient = new DefaultKubernetesClient(config)){\n+      OpenShiftClient client = kubernetesClient.adapt(OpenShiftClient.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11e8e1c2dde0ff54ce6b3ff3d5296815860e8af"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "243253a781d80be0b7b8604e57d2a92d61b29960", "author": {"user": {"login": "HeroicHitesh", "name": "Hitesh Kumar"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/243253a781d80be0b7b8604e57d2a92d61b29960", "committedDate": "2020-11-10T17:15:59Z", "message": "Close clients in ListCustomResourceDefinitions.java, BuildConfigExamples.java, LoadExample.java, and DeploymentConfigExamples.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d69cfafb21af860697f6bb1d479ddd7f50110b1", "author": {"user": {"login": "HeroicHitesh", "name": "Hitesh Kumar"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/8d69cfafb21af860697f6bb1d479ddd7f50110b1", "committedDate": "2020-11-10T14:11:05Z", "message": "Close clients in ListCustomResourceDefinitions.java, BuildConfigExamples.java, LoadExample.java, and DeploymentConfigExamples.java"}, "afterCommit": {"oid": "243253a781d80be0b7b8604e57d2a92d61b29960", "author": {"user": {"login": "HeroicHitesh", "name": "Hitesh Kumar"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/243253a781d80be0b7b8604e57d2a92d61b29960", "committedDate": "2020-11-10T17:15:59Z", "message": "Close clients in ListCustomResourceDefinitions.java, BuildConfigExamples.java, LoadExample.java, and DeploymentConfigExamples.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MzY4NTcy", "url": "https://github.com/fabric8io/kubernetes-client/pull/2584#pullrequestreview-528368572", "createdAt": "2020-11-11T17:08:08Z", "commit": {"oid": "243253a781d80be0b7b8604e57d2a92d61b29960"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3526, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}