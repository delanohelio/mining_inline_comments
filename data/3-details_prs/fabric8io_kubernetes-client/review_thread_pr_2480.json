{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0OTE5NDEy", "number": 2480, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTowOVrOEj6Oog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTowOVrOEj6Oog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDg5NjM0OnYy", "diffSide": "RIGHT", "path": "extensions/tekton/model-triggers/src/main/java/io/fabric8/tekton/triggers/internal/pipeline/pkg/apis/pipeline/v1beta1/ArrayOrString.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTowOVrOHSiS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0MToyN1rOHSs05Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODMwNw==", "bodyText": "I see this class is duplicated for each tekton model module. Do you think we can avoid this somehow by maybe adding tekton-model as dependency? Or Are triggers independent of both v1alpha1 or v1beta1 models?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2480#discussion_r489198307", "createdAt": "2020-09-16T06:41:09Z", "author": {"login": "rohanKanojia"}, "path": "extensions/tekton/model-triggers/src/main/java/io/fabric8/tekton/triggers/internal/pipeline/pkg/apis/pipeline/v1beta1/ArrayOrString.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.tekton.triggers.internal.pipeline.pkg.apis.pipeline.v1beta1;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonAnyGetter;\n+import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.ObjectCodec;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import io.fabric8.kubernetes.api.model.Doneable;\n+import io.fabric8.kubernetes.api.model.KubernetesResource;\n+import io.sundr.builder.annotations.Buildable;\n+import io.sundr.builder.annotations.Inline;\n+import lombok.EqualsAndHashCode;\n+import lombok.ToString;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonDeserialize(using = ArrayOrString.Deserializer.class)\n+@JsonSerialize(using = ArrayOrString.Serializer.class)\n+@ToString\n+@EqualsAndHashCode\n+@Buildable(editableEnabled = false, validationEnabled = false, generateBuilderPackage = false, builderPackage = \"io.fabric8.kubernetes.api.builder\", inline = @Inline(type = Doneable.class, prefix = \"Doneable\", value = \"done\"))\n+public class ArrayOrString implements KubernetesResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9ae4dc98d761009c3cd9ed3a88f9da24c0b8ed"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MDg1Mw==", "bodyText": "Good Point! I replaced it with a v1beta1 model dependency", "url": "https://github.com/fabric8io/kubernetes-client/pull/2480#discussion_r489370853", "createdAt": "2020-09-16T11:41:27Z", "author": {"login": "Fabian-K"}, "path": "extensions/tekton/model-triggers/src/main/java/io/fabric8/tekton/triggers/internal/pipeline/pkg/apis/pipeline/v1beta1/ArrayOrString.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.tekton.triggers.internal.pipeline.pkg.apis.pipeline.v1beta1;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonAnyGetter;\n+import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.ObjectCodec;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import io.fabric8.kubernetes.api.model.Doneable;\n+import io.fabric8.kubernetes.api.model.KubernetesResource;\n+import io.sundr.builder.annotations.Buildable;\n+import io.sundr.builder.annotations.Inline;\n+import lombok.EqualsAndHashCode;\n+import lombok.ToString;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonDeserialize(using = ArrayOrString.Deserializer.class)\n+@JsonSerialize(using = ArrayOrString.Serializer.class)\n+@ToString\n+@EqualsAndHashCode\n+@Buildable(editableEnabled = false, validationEnabled = false, generateBuilderPackage = false, builderPackage = \"io.fabric8.kubernetes.api.builder\", inline = @Inline(type = Doneable.class, prefix = \"Doneable\", value = \"done\"))\n+public class ArrayOrString implements KubernetesResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODMwNw=="}, "originalCommit": {"oid": "2f9ae4dc98d761009c3cd9ed3a88f9da24c0b8ed"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3693, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}