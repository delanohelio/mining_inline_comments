{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTE4NzYz", "number": 2091, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNDo1M1rODsCfgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNTo0NlrODsCgfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTA0NzY4OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/NodeMetricOperationsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNDo1M1rOF8ulWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNDo1M1rOF8ulWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMjEwNA==", "bodyText": "Nit: please don't use raw types (replace with new HashMap<>()", "url": "https://github.com/fabric8io/kubernetes-client/pull/2091#discussion_r399222104", "createdAt": "2020-03-27T12:14:53Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/NodeMetricOperationsTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.fabric8.kubernetes.client.dsl.internal;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+\n+import io.fabric8.kubernetes.api.model.metrics.v1beta1.NodeMetricsList;\n+\n+public class NodeMetricOperationsTest {\n+\n+\tprivate DefaultKubernetesClient defaultKubernetesClient;\n+\n+\t@BeforeEach\n+\tpublic void setUp() {\n+\t\tdefaultKubernetesClient = new DefaultKubernetesClient();\n+\t}\n+\n+\t@AfterEach\n+\tpublic void tearDown() {\n+\t\tdefaultKubernetesClient.close();\n+\t\tdefaultKubernetesClient = null;\n+\t}\n+\n+\tpublic void testGetMetricsViaLabl() {\n+\t\tMap<String,Object> lablesMap = new HashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a941fb544e770ccf0c1dcf5b710058959c0dad5a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTA1MDIyOnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/NodeMetricOperationsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNTo0NlrOF8um6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNTo0NlrOF8um6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMjUwNA==", "bodyText": "What's the test testing exactly, what would be the output of\nNodeMetricsList nodeMetricList = defaultKubernetesClient.top().nodes().metrics();\nnodeMetricList.getItems().size() // ??", "url": "https://github.com/fabric8io/kubernetes-client/pull/2091#discussion_r399222504", "createdAt": "2020-03-27T12:15:46Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/NodeMetricOperationsTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.fabric8.kubernetes.client.dsl.internal;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+\n+import io.fabric8.kubernetes.api.model.metrics.v1beta1.NodeMetricsList;\n+\n+public class NodeMetricOperationsTest {\n+\n+\tprivate DefaultKubernetesClient defaultKubernetesClient;\n+\n+\t@BeforeEach\n+\tpublic void setUp() {\n+\t\tdefaultKubernetesClient = new DefaultKubernetesClient();\n+\t}\n+\n+\t@AfterEach\n+\tpublic void tearDown() {\n+\t\tdefaultKubernetesClient.close();\n+\t\tdefaultKubernetesClient = null;\n+\t}\n+\n+\tpublic void testGetMetricsViaLabl() {\n+\t\tMap<String,Object> lablesMap = new HashMap();\n+\t\tlablesMap.put(\"ss\", \"true\");\n+\t\tlablesMap.put(\"cs\", \"true\");\n+\t\tNodeMetricsList nodeMetricList = defaultKubernetesClient.top().nodes().metrics(lablesMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a941fb544e770ccf0c1dcf5b710058959c0dad5a"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3780, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}