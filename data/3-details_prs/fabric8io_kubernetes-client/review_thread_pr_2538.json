{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODQzNjE0", "number": 2538, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzoxOVrOEshHQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzoxOVrOEshHQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTE1MzMwOnYy", "diffSide": "RIGHT", "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzoxOVrOHfzWWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOToxMzoxM1rOHf1_8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA==", "bodyText": "Just a minor nitpick. Shall we create a separate test for testing this instead? WDYT?\n@Test\nvoid testIsReady() {\n  // Given\n  DeploymentConfig deploymentConfig = getDeploymentConfig().withNewStatus()\n    .addNewCondition()\n    .withType(\"Available\")\n    .endCondition()\n    .withReplicas(1).withAvailableReplicas(1)\n    .endStatus().build();\n  server.expect().get().withPath(\"/apis/apps.openshift.io/v1/namespaces/ns1/deploymentconfigs/dc1\")\n    .andReturn(HttpURLConnection.HTTP_OK, deploymentConfig)\n    .always();\n  OpenShiftClient client = server.getOpenshiftClient();\n\n  // When\n  boolean result =  client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady();\n\n  // Then\n  assertTrue(result);\n}", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503109208", "createdAt": "2020-10-12T08:03:19Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java", "diffHunk": "@@ -323,6 +323,7 @@ void testWaitUntilReady() throws InterruptedException {\n     assertNotNull(deploymentConfig);\n     assertEquals(1, deploymentConfig.getStatus().getAvailableReplicas().intValue());\n     assertTrue(deploymentConfig.getStatus().getConditions().stream().anyMatch(c -> c.getType().equals(\"Available\")));\n+    assertTrue(client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5f930c2128d5654da6782e631d6f75907280ded"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMDM0MA==", "bodyText": "Sure, I can add it", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503110340", "createdAt": "2020-10-12T08:05:22Z", "author": {"login": "scholzj"}, "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java", "diffHunk": "@@ -323,6 +323,7 @@ void testWaitUntilReady() throws InterruptedException {\n     assertNotNull(deploymentConfig);\n     assertEquals(1, deploymentConfig.getStatus().getAvailableReplicas().intValue());\n     assertTrue(deploymentConfig.getStatus().getConditions().stream().anyMatch(c -> c.getType().equals(\"Available\")));\n+    assertTrue(client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA=="}, "originalCommit": {"oid": "c5f930c2128d5654da6782e631d6f75907280ded"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE1MjYyNw==", "bodyText": "Done.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503152627", "createdAt": "2020-10-12T09:13:13Z", "author": {"login": "scholzj"}, "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java", "diffHunk": "@@ -323,6 +323,7 @@ void testWaitUntilReady() throws InterruptedException {\n     assertNotNull(deploymentConfig);\n     assertEquals(1, deploymentConfig.getStatus().getAvailableReplicas().intValue());\n     assertTrue(deploymentConfig.getStatus().getConditions().stream().anyMatch(c -> c.getType().equals(\"Available\")));\n+    assertTrue(client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA=="}, "originalCommit": {"oid": "c5f930c2128d5654da6782e631d6f75907280ded"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3702, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}