{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTgzOTgx", "number": 2069, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1MjozM1rODpw7sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzozNTowOVrODqyyIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTE5OTIzOnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1MjozM1rOF5JCIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1MjozM1rOF5JCIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTE1NA==", "bodyText": "This getter method (plus field) seems to be something that is not used and not necessary. It's also something that prevents refactoring this class to be more resilient.\nCan we remove it?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395461154", "createdAt": "2020-03-20T06:52:33Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "diffHunk": "@@ -95,4 +98,15 @@ public VersionInfo(Map<String, String> jsonData) throws ParseException {\n   }\n \n   public Map<String, String> getData() { return data; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8d58b7870907b5bbbca8d21d3128cde02647bb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTIwNjI4OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1Njo0NFrOF5JGUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1OTo1NFrOF5JJOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjIyNg==", "bodyText": "Can we create a constructor, or a builder, that enables us to pass field values directly instead of parsing a Map.\ne.g.\nfinal VersionInfo versionInfo = new VersionBuilder().major(\"1\").minor(\"9\").build()", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395462226", "createdAt": "2020-03-20T06:56:44Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "diffHunk": "@@ -16,9 +16,12 @@\n \n package io.fabric8.kubernetes.client;\n \n+import io.fabric8.openshift.api.model.ClusterVersion;\n+\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.Map;\n \n public class VersionInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8d58b7870907b5bbbca8d21d3128cde02647bb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2Mjk3MQ==", "bodyText": "Following this approach, it would also be good to completely remove the VersionInfo(Map<String, String> jsonData) constructor and create a parser for it (similar to public static VersionInfo parseVersionInfoFromClusterVersion > parseVersionInfoFromJsonData)\nConstructors shouldn't have logic.\nWe can then add specific unit tests for each parser.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395462971", "createdAt": "2020-03-20T06:59:54Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "diffHunk": "@@ -16,9 +16,12 @@\n \n package io.fabric8.kubernetes.client;\n \n+import io.fabric8.openshift.api.model.ClusterVersion;\n+\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.Map;\n \n public class VersionInfo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjIyNg=="}, "originalCommit": {"oid": "ee8d58b7870907b5bbbca8d21d3128cde02647bb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTk4ODE4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzozNTowOVrOF6wcbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzozNTowOVrOF6wcbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE1NTQzOA==", "bodyText": "This line has been duplicated (see line 5)", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r397155438", "createdAt": "2020-03-24T13:35:09Z", "author": {"login": "manusa"}, "path": "CHANGELOG.md", "diffHunk": "@@ -5,6 +5,8 @@\n Fix #2057: Fix jar and osgi bundle generation for extensions\n Fix #2075: KubernetesDeserializer registration for CustomResources \n Fix #2078: watchLog for Deployment and StatefulSet \n+* Fix #2057: Fix jar and osgi bundle generation for extensions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "069403daae225384c9acbe1897f154ad6b63a998"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3769, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}