{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTA2NjMx", "number": 2042, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTo1MTo0NVrODlei2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTo1MTo0NVrODlei2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjI0MzQ1OnYy", "diffSide": "RIGHT", "path": "kubernetes-itests/src/test/java/io/fabric8/kubernetes/PodIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTo1MTo0NVrOFyZFTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNjoyNDo0MFrOFyuR_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NDA3Ng==", "bodyText": "I think you need to separate the arguments. > exec(\"echo\", \"'something here'\");\nAlso the } in (W&RLD} looks like a typo", "url": "https://github.com/fabric8io/kubernetes-client/pull/2042#discussion_r388384076", "createdAt": "2020-03-05T15:51:45Z", "author": {"login": "manusa"}, "path": "kubernetes-itests/src/test/java/io/fabric8/kubernetes/PodIT.java", "diffHunk": "@@ -169,6 +169,39 @@ public void onClose(int i, String s) {\n     assertNotNull(out.toString());\n   }\n \n+  @Test\n+  public void execEchoCommand() throws InterruptedException {\n+    // Wait for resources to get ready\n+    ReadyEntity<Pod> podReady = new ReadyEntity<>(Pod.class, client, pod1.getMetadata().getName(), currentNamespace);\n+    await().atMost(30, TimeUnit.SECONDS).until(podReady);\n+    final CountDownLatch execLatch = new CountDownLatch(1);\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    ExecWatch execWatch = client.pods().inNamespace(currentNamespace).withName(pod1.getMetadata().getName())\n+      .writingOutput(out).withTTY().usingListener(new ExecListener() {\n+        @Override\n+        public void onOpen(Response response) {\n+          logger.info(\"Shell was opened\");\n+        }\n+\n+        @Override\n+        public void onFailure(Throwable throwable, Response response) {\n+          logger.info(\"Shell barfed\");\n+          execLatch.countDown();\n+        }\n+\n+        @Override\n+        public void onClose(int i, String s) {\n+          logger.info(\"Shell closed\");\n+          execLatch.countDown();\n+        }\n+      }).exec(\"echo 'H$ll* (W&RLD}'\"); // These arguments in the exec command should be escaped.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4167fa65dc67f09b5101cc211afc92a8f9143f8f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMTQ3Nw==", "bodyText": "No I added that bracket to demonstrate that all of these characters are being escaped properly.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2042#discussion_r388711477", "createdAt": "2020-03-06T04:47:51Z", "author": {"login": "dev-gaur"}, "path": "kubernetes-itests/src/test/java/io/fabric8/kubernetes/PodIT.java", "diffHunk": "@@ -169,6 +169,39 @@ public void onClose(int i, String s) {\n     assertNotNull(out.toString());\n   }\n \n+  @Test\n+  public void execEchoCommand() throws InterruptedException {\n+    // Wait for resources to get ready\n+    ReadyEntity<Pod> podReady = new ReadyEntity<>(Pod.class, client, pod1.getMetadata().getName(), currentNamespace);\n+    await().atMost(30, TimeUnit.SECONDS).until(podReady);\n+    final CountDownLatch execLatch = new CountDownLatch(1);\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    ExecWatch execWatch = client.pods().inNamespace(currentNamespace).withName(pod1.getMetadata().getName())\n+      .writingOutput(out).withTTY().usingListener(new ExecListener() {\n+        @Override\n+        public void onOpen(Response response) {\n+          logger.info(\"Shell was opened\");\n+        }\n+\n+        @Override\n+        public void onFailure(Throwable throwable, Response response) {\n+          logger.info(\"Shell barfed\");\n+          execLatch.countDown();\n+        }\n+\n+        @Override\n+        public void onClose(int i, String s) {\n+          logger.info(\"Shell closed\");\n+          execLatch.countDown();\n+        }\n+      }).exec(\"echo 'H$ll* (W&RLD}'\"); // These arguments in the exec command should be escaped.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NDA3Ng=="}, "originalCommit": {"oid": "4167fa65dc67f09b5101cc211afc92a8f9143f8f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODczMTM4OA==", "bodyText": "I understand, but then the assertion was inconsistent (changed now).", "url": "https://github.com/fabric8io/kubernetes-client/pull/2042#discussion_r388731388", "createdAt": "2020-03-06T06:24:40Z", "author": {"login": "manusa"}, "path": "kubernetes-itests/src/test/java/io/fabric8/kubernetes/PodIT.java", "diffHunk": "@@ -169,6 +169,39 @@ public void onClose(int i, String s) {\n     assertNotNull(out.toString());\n   }\n \n+  @Test\n+  public void execEchoCommand() throws InterruptedException {\n+    // Wait for resources to get ready\n+    ReadyEntity<Pod> podReady = new ReadyEntity<>(Pod.class, client, pod1.getMetadata().getName(), currentNamespace);\n+    await().atMost(30, TimeUnit.SECONDS).until(podReady);\n+    final CountDownLatch execLatch = new CountDownLatch(1);\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    ExecWatch execWatch = client.pods().inNamespace(currentNamespace).withName(pod1.getMetadata().getName())\n+      .writingOutput(out).withTTY().usingListener(new ExecListener() {\n+        @Override\n+        public void onOpen(Response response) {\n+          logger.info(\"Shell was opened\");\n+        }\n+\n+        @Override\n+        public void onFailure(Throwable throwable, Response response) {\n+          logger.info(\"Shell barfed\");\n+          execLatch.countDown();\n+        }\n+\n+        @Override\n+        public void onClose(int i, String s) {\n+          logger.info(\"Shell closed\");\n+          execLatch.countDown();\n+        }\n+      }).exec(\"echo 'H$ll* (W&RLD}'\"); // These arguments in the exec command should be escaped.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NDA3Ng=="}, "originalCommit": {"oid": "4167fa65dc67f09b5101cc211afc92a8f9143f8f"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3842, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}