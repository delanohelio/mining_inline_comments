{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NTI2ODY1", "number": 2661, "title": "Improve Custom Resource handling", "bodyText": "Description\nAims to fix #2611\nType of change\n\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n Code contributed by me aligns with current project license: Apache 2.0\n I Added CHANGELOG entry regarding this change\n I have implemented unit tests to cover my changes\n I have added/updated the javadocs and other documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-12-11T23:16:39Z", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661", "merged": true, "mergeCommit": {"oid": "d0570284159a5a972d48a504345b0712ee5cd51c"}, "closed": true, "closedAt": "2020-12-16T19:17:21Z", "author": {"login": "metacosm"}, "timelineItems": {"totalCount": 57, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmAAY9gFqTU1MTA4MTI2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmyVBFAH2gAyNTM3NTI2ODY1OjZmY2QxYjQ1MTYzN2NiYTFlMmJkNmUyODVjMDc3YjhmOWUwNGI3NGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDgxMjY2", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-551081266", "createdAt": "2020-12-14T06:46:46Z", "commit": {"oid": "49bc87c9f5c8776a0e9908d9f1e24e9142d6258b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo0Njo0NlrOIFCDxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo0Njo0NlrOIFCDxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0NzUyNw==", "bodyText": "I think version.value() might produce NullPointerEception here in case only ApiGroup annotation is provided.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r542147527", "createdAt": "2020-12-14T06:46:46Z", "author": {"login": "manusa"}, "path": "kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/HasMetadata.java", "diffHunk": "@@ -36,9 +39,21 @@\n   \n   void setMetadata(ObjectMeta metadata);\n   \n-  String getKind();\n+  default String getKind() {\n+    final Class<? extends HasMetadata> clazz = getClass();\n+    final Kind kind = clazz.getAnnotation(Kind.class);\n+    return kind != null ? kind.value() : clazz.getSimpleName();\n+  }\n   \n-  String getApiVersion();\n+  default String getApiVersion() {\n+    final Class<? extends HasMetadata> clazz = getClass();\n+    final ApiGroup group = clazz.getAnnotation(ApiGroup.class);\n+    if (group != null) {\n+      final ApiVersion version = clazz.getAnnotation(ApiVersion.class);\n+      return group.value() + \"/\" + version.value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49bc87c9f5c8776a0e9908d9f1e24e9142d6258b"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDgxOTI0", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-551081924", "createdAt": "2020-12-14T06:48:24Z", "commit": {"oid": "49bc87c9f5c8776a0e9908d9f1e24e9142d6258b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo0ODoyNFrOIFCGTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo0ODoyNFrOIFCGTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0ODE3Mw==", "bodyText": "I feel this logic with side-effects in a getter method can bring serious consequences in the future.\nDoes it make sense to move the \"initialization-by-annotation\" procedures to the constructor?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r542148173", "createdAt": "2020-12-14T06:48:24Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -15,60 +15,92 @@\n  */\n package io.fabric8.kubernetes.client;\n \n+import java.util.Locale;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.Namespaced;\n import io.fabric8.kubernetes.api.model.ObjectMeta;\n+import io.fabric8.kubernetes.client.utils.ApiVersionUtil;\n+import io.fabric8.kubernetes.client.utils.Pluralize;\n+import io.fabric8.kubernetes.client.utils.Utils;\n+import io.fabric8.kubernetes.model.annotation.Plural;\n import io.sundr.builder.annotations.Buildable;\n import lombok.ToString;\n \n+import static io.fabric8.kubernetes.client.utils.Utils.isNullOrEmpty;\n+\n /**\n  * A base class for implementing a custom resource kind\n  */\n @JsonDeserialize(\n-    using = JsonDeserializer.None.class\n+  using = JsonDeserializer.None.class\n )\n @ToString\n @Buildable(builderPackage = \"io.fabric8.kubernetes.api.builder\", editableEnabled = false)\n public abstract class CustomResource implements HasMetadata {\n+  public static final String NAMESPACE_SCOPE = \"Namespaced\";\n+  public static final String CLUSTER_SCOPE = \"Cluster\";\n+  private ObjectMeta metadata = new ObjectMeta();\n+  \n+  @JsonIgnore\n+  private String plural;\n+  \n+  @JsonIgnore\n+  private String crdName;\n+  \n   private String kind;\n   private String apiVersion;\n-  private ObjectMeta metadata = new ObjectMeta();\n-\n+  private final String scope;\n+  \n   public CustomResource() {\n-    this.kind = getClass().getSimpleName();\n-  }\n-\n-  public CustomResource(String kind) {\n-    this.kind = kind;\n+    scope = this instanceof Namespaced ? NAMESPACE_SCOPE : CLUSTER_SCOPE;\n   }\n-\n+  \n   @Override\n   public String toString() {\n     return \"CustomResource{\" +\n-        \"kind='\" + kind + '\\'' +\n-        \", apiVersion='\" + apiVersion + '\\'' +\n-        \", metadata=\" + metadata +\n-        '}';\n-  }\n-\n-  @Override\n-  public String getKind() {\n-    return kind;\n-  }\n-\n-  public void setKind(String kind) {\n-    this.kind = kind;\n+      \"kind='\" + getKind() + '\\'' +\n+      \", apiVersion='\" + getApiVersion() + '\\'' +\n+      \", metadata=\" + metadata +\n+      '}';\n   }\n-\n+  \n   @Override\n   public String getApiVersion() {\n+    if (apiVersion == null) {\n+      final String apiVersion = HasMetadata.super.getApiVersion();\n+      if (isNullOrEmpty(apiVersion)) {\n+        throw new IllegalArgumentException(getClass().getName() + \" CustomResource must provide an API version using @ApiGroup and @ApiVersion annotations\");\n+      }\n+      this.apiVersion = apiVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49bc87c9f5c8776a0e9908d9f1e24e9142d6258b"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fcc3eae19096ca288fc5f9849ea1541c50e9eee", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/8fcc3eae19096ca288fc5f9849ea1541c50e9eee", "committedDate": "2020-12-14T21:06:56Z", "message": "fix: use proper group and version"}, "afterCommit": {"oid": "44bf0254661b44dc8a0a291106977f07399fb6bc", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/44bf0254661b44dc8a0a291106977f07399fb6bc", "committedDate": "2020-12-14T21:51:57Z", "message": "fix: add missing annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "652be6fbf62823bc9d5b03b75c7d45bacff068f6", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/652be6fbf62823bc9d5b03b75c7d45bacff068f6", "committedDate": "2020-12-15T12:24:35Z", "message": "feat: initial stab at improving custom resource handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd2bfdd129f0938faac2084197625f5987dedd5", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/5fd2bfdd129f0938faac2084197625f5987dedd5", "committedDate": "2020-12-15T12:24:43Z", "message": "fix: licenses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28716d3d21ee17b4e9991f09af833203b9a7c08b", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/28716d3d21ee17b4e9991f09af833203b9a7c08b", "committedDate": "2020-12-15T12:24:43Z", "message": "fix: set version & group in constructor, do not fail if not provided"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5520e7bf453ec7486bfd7e74f0cc2678d067a1b9", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/5520e7bf453ec7486bfd7e74f0cc2678d067a1b9", "committedDate": "2020-12-15T12:24:43Z", "message": "fix: avoid NPE, check that either none or both annotations are provided"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fb1ee3f129c0e8e47cf663fb46ece5d7fa83a4", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/30fb1ee3f129c0e8e47cf663fb46ece5d7fa83a4", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: set api version/kind in constructor and make final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59c8e93d913352a0f5b2d260532d9726941dca6f", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/59c8e93d913352a0f5b2d260532d9726941dca6f", "committedDate": "2020-12-15T12:24:44Z", "message": "feat: optimize things a little"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5bfde58512f5cd385a99616c5e2b5b3c09bc2d2", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/f5bfde58512f5cd385a99616c5e2b5b3c09bc2d2", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: properly annotate CR implementations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "776093dda96ca237abc57d7d7dd7723792b869d8", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/776093dda96ca237abc57d7d7dd7723792b869d8", "committedDate": "2020-12-15T12:24:44Z", "message": "feat: generify CustomResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cf2dba145d87ab9e588ed3e8a14bcfba7ef3164", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/0cf2dba145d87ab9e588ed3e8a14bcfba7ef3164", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: mark non-properties getters as to be ignored by Jackson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1f8cc79011be8e18718a18dceb46aa7d80ef25e", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/c1f8cc79011be8e18718a18dceb46aa7d80ef25e", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: use proper group and version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f328e2b06a2e065930adfc3c244485293763c6d0", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/f328e2b06a2e065930adfc3c244485293763c6d0", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: add property ordering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c2c4840a1667d204cbc68f44ba91a050028625e", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/3c2c4840a1667d204cbc68f44ba91a050028625e", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: add missing annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eff30a339a8c2786b8cca15d0e4c10ebed46d068", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/eff30a339a8c2786b8cca15d0e4c10ebed46d068", "committedDate": "2020-12-15T12:24:44Z", "message": "fix: tests and typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5bc012821e4c27c8b56cd33d93a0edf55e1f3ec", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/b5bc012821e4c27c8b56cd33d93a0edf55e1f3ec", "committedDate": "2020-12-15T12:24:44Z", "message": "refactor: clean-up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeea80b2086d9ee5d60984c373f1f64d6023032a", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/eeea80b2086d9ee5d60984c373f1f64d6023032a", "committedDate": "2020-12-15T12:24:44Z", "message": "feat: extract static versions of property computations for reuse purpose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef64207f7644f212dd449191056a103a61a7be7b", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/ef64207f7644f212dd449191056a103a61a7be7b", "committedDate": "2020-12-15T12:27:34Z", "message": "feat: add crdFromCustomResourceType to create a CRD builder from CR type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b048850768db79789bbd8ceec4f265aaea1c382", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/0b048850768db79789bbd8ceec4f265aaea1c382", "committedDate": "2020-12-15T12:27:40Z", "message": "refactor: simplify CRD creation examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/a1766def53f1b7eb5e1f0d9d7872d61d027c2184", "committedDate": "2020-12-15T12:27:40Z", "message": "fix: license"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e1e3701832b83d1e3908c3fc01ee45cc6ec60e4", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/7e1e3701832b83d1e3908c3fc01ee45cc6ec60e4", "committedDate": "2020-12-15T12:05:36Z", "message": "fix: license"}, "afterCommit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/a1766def53f1b7eb5e1f0d9d7872d61d027c2184", "committedDate": "2020-12-15T12:27:40Z", "message": "fix: license"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDQ3NDM1", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552447435", "createdAt": "2020-12-15T13:28:27Z", "commit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoyODoyN1rOIGK3Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoyODoyN1rOIGK3Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0MDI5NA==", "bodyText": "Would a log.warn make sense here?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543340294", "createdAt": "2020-12-15T13:28:27Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -15,60 +15,101 @@\n  */\n package io.fabric8.kubernetes.client;\n \n+import java.util.Locale;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.KubernetesResource;\n+import io.fabric8.kubernetes.api.model.Namespaced;\n import io.fabric8.kubernetes.api.model.ObjectMeta;\n+import io.fabric8.kubernetes.client.utils.ApiVersionUtil;\n+import io.fabric8.kubernetes.client.utils.Pluralize;\n+import io.fabric8.kubernetes.model.annotation.Plural;\n+import io.fabric8.kubernetes.model.annotation.Singular;\n import io.sundr.builder.annotations.Buildable;\n-import lombok.ToString;\n+\n+import static io.fabric8.kubernetes.client.utils.Utils.isNullOrEmpty;\n \n /**\n  * A base class for implementing a custom resource kind\n  */\n @JsonDeserialize(\n-    using = JsonDeserializer.None.class\n+  using = JsonDeserializer.None.class\n )\n-@ToString\n+@JsonPropertyOrder({\n+  \"apiVersion\",\n+  \"kind\",\n+  \"metadata\",\n+  \"spec\",\n+  \"status\"\n+})\n @Buildable(builderPackage = \"io.fabric8.kubernetes.api.builder\", editableEnabled = false)\n-public abstract class CustomResource implements HasMetadata {\n-  private String kind;\n-  private String apiVersion;\n+public abstract class CustomResource<Spec extends KubernetesResource, Status extends KubernetesResource> implements HasMetadata {\n+  public static final String NAMESPACE_SCOPE = \"Namespaced\";\n+  public static final String CLUSTER_SCOPE = \"Cluster\";\n   private ObjectMeta metadata = new ObjectMeta();\n \n+  @JsonProperty(\"spec\")\n+  private Spec spec;\n+  \n+  @JsonProperty(\"status\")\n+  private Status status;\n+  \n+  @JsonIgnore\n+  private String plural;\n+  \n+  @JsonIgnore\n+  private String singular;\n+  \n+  @JsonIgnore\n+  private String crdName;\n+  \n+  private final String kind;\n+  private final String apiVersion;\n+  private final String scope;\n+  \n   public CustomResource() {\n-    this.kind = getClass().getSimpleName();\n+    final String version = HasMetadata.super.getApiVersion();\n+    if (isNullOrEmpty(version)) {\n+      throw new IllegalArgumentException(getClass().getName() + \" CustomResource must provide an API version using @ApiGroup and @ApiVersion annotations\");\n+    }\n+    this.apiVersion = version;\n+    this.kind = HasMetadata.super.getKind();\n+    scope = this instanceof Namespaced ? NAMESPACE_SCOPE : CLUSTER_SCOPE;\n   }\n-\n-  public CustomResource(String kind) {\n-    this.kind = kind;\n-  }\n-\n+  \n   @Override\n   public String toString() {\n     return \"CustomResource{\" +\n-        \"kind='\" + kind + '\\'' +\n-        \", apiVersion='\" + apiVersion + '\\'' +\n-        \", metadata=\" + metadata +\n-        '}';\n-  }\n-\n-  @Override\n-  public String getKind() {\n-    return kind;\n+      \"kind='\" + getKind() + '\\'' +\n+      \", apiVersion='\" + getApiVersion() + '\\'' +\n+      \", metadata=\" + metadata +\n+      \", spec=\" + spec +\n+      \", status=\" + status +\n+      '}';\n   }\n-\n-  public void setKind(String kind) {\n-    this.kind = kind;\n-  }\n-\n+  \n   @Override\n   public String getApiVersion() {\n     return apiVersion;\n   }\n-\n+  \n   @Override\n-  public void setApiVersion(String apiVersion) {\n-    this.apiVersion = apiVersion;\n+  public void setApiVersion(String version) {\n+    // already set in constructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDUxNTM5", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552451539", "createdAt": "2020-12-15T13:33:05Z", "commit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozMzowNVrOIGLEbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozMzowNVrOIGLEbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0MzcyNA==", "bodyText": "This test is explicit to verify that the arbitrary dashes in the names won't break the MockServer. It shouldn't be refactored.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543343724", "createdAt": "2020-12-15T13:33:05Z", "author": {"login": "manusa"}, "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrud1109Test.java", "diffHunk": "@@ -41,7 +41,7 @@\n \n   @BeforeEach\n   void setUp() {\n-    customResourceDefinition = server.getClient().apiextensions().v1beta1().customResourceDefinitions()\n+    /*customResourceDefinition = server.getClient().apiextensions().v1beta1().customResourceDefinitions()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDU0OTkw", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552454990", "createdAt": "2020-12-15T13:37:20Z", "commit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozNzoyMFrOIGLPnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozNzoyMFrOIGLPnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0NjU4OQ==", "bodyText": "Please use single letters for generic types I almost went crazy trying to figure out where the Status class was.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543346589", "createdAt": "2020-12-15T13:37:20Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -15,60 +15,101 @@\n  */\n package io.fabric8.kubernetes.client;\n \n+import java.util.Locale;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.KubernetesResource;\n+import io.fabric8.kubernetes.api.model.Namespaced;\n import io.fabric8.kubernetes.api.model.ObjectMeta;\n+import io.fabric8.kubernetes.client.utils.ApiVersionUtil;\n+import io.fabric8.kubernetes.client.utils.Pluralize;\n+import io.fabric8.kubernetes.model.annotation.Plural;\n+import io.fabric8.kubernetes.model.annotation.Singular;\n import io.sundr.builder.annotations.Buildable;\n-import lombok.ToString;\n+\n+import static io.fabric8.kubernetes.client.utils.Utils.isNullOrEmpty;\n \n /**\n  * A base class for implementing a custom resource kind\n  */\n @JsonDeserialize(\n-    using = JsonDeserializer.None.class\n+  using = JsonDeserializer.None.class\n )\n-@ToString\n+@JsonPropertyOrder({\n+  \"apiVersion\",\n+  \"kind\",\n+  \"metadata\",\n+  \"spec\",\n+  \"status\"\n+})\n @Buildable(builderPackage = \"io.fabric8.kubernetes.api.builder\", editableEnabled = false)\n-public abstract class CustomResource implements HasMetadata {\n-  private String kind;\n-  private String apiVersion;\n+public abstract class CustomResource<Spec extends KubernetesResource, Status extends KubernetesResource> implements HasMetadata {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1766def53f1b7eb5e1f0d9d7872d61d027c2184"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13eec87641bdd57c80cef7ce3fa62573f5903071", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/13eec87641bdd57c80cef7ce3fa62573f5903071", "committedDate": "2020-12-15T15:23:08Z", "message": "fix: change parameter type names to conform to recommendations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64765d9a93deaf27c52fb88a1379d358055b63ab", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/64765d9a93deaf27c52fb88a1379d358055b63ab", "committedDate": "2020-12-15T15:26:18Z", "message": "chore: remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee9318c5e6b2ffdfbf027e4cf14cfb89f671431e", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/ee9318c5e6b2ffdfbf027e4cf14cfb89f671431e", "committedDate": "2020-12-15T15:32:36Z", "message": "chore: clean-ups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1de13d458c7c4f589a8a21e6f0403f63cc397832", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/1de13d458c7c4f589a8a21e6f0403f63cc397832", "committedDate": "2020-12-15T15:33:29Z", "message": "fix: make sure CRD has a dash in name, add checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8267db745b0e1f35d2a4f2c10472649df75983e2", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/8267db745b0e1f35d2a4f2c10472649df75983e2", "committedDate": "2020-12-15T15:41:27Z", "message": "feat: add warning when calling no-op setKind/setApiVersion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45d65ccc959744574c54f93587c1b2881d9bbb4a", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/45d65ccc959744574c54f93587c1b2881d9bbb4a", "committedDate": "2020-12-15T15:47:32Z", "message": "chore: remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/34c04087f8dfbb80d495173bd452623b34ef2421", "committedDate": "2020-12-15T15:54:45Z", "message": "doc: add description of changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjQ0NTk1", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552644595", "createdAt": "2020-12-15T16:32:38Z", "commit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozMjozOVrOIGUdcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozMjozOVrOIGUdcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5NzU4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : HasMetadata.getKind(clazz)).toLowerCase(Locale.ROOT);\n          \n          \n            \n                return (fromAnnotation != null ? fromAnnotation.value() : HasMetadata.getKind(clazz)).toLowerCase(Locale.ROOT);", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543497585", "createdAt": "2020-12-15T16:32:39Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -80,4 +127,85 @@ public ObjectMeta getMetadata() {\n   public void setMetadata(ObjectMeta metadata) {\n     this.metadata = metadata;\n   }\n+  \n+  \n+  public static String getPlural(Class<? extends CustomResource> clazz) {\n+    final Plural fromAnnotation = clazz.getAnnotation(Plural.class);\n+    return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : Pluralize.toPlural(getSingular(clazz)));\n+  }\n+  \n+  @JsonIgnore\n+  public String getPlural() {\n+    if(plural == null) {\n+      final Plural fromAnnotation = getClass().getAnnotation(Plural.class);\n+      this.plural = (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : Pluralize.toPlural(getSingular()));\n+    }\n+    return plural;\n+  }\n+  \n+  public static String getSingular(Class<? extends CustomResource> clazz) {\n+    final Singular fromAnnotation = clazz.getAnnotation(Singular.class);\n+    return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : HasMetadata.getKind(clazz)).toLowerCase(Locale.ROOT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "originalPosition": 159}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjQ1MDAw", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552645000", "createdAt": "2020-12-15T16:33:01Z", "commit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozMzowMVrOIGUepQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozMzowMVrOIGUepQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5Nzg5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  this.singular = (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : getKind()).toLowerCase(Locale.ROOT);\n          \n          \n            \n                  this.singular = (fromAnnotation != null ? fromAnnotation.value() : getKind()).toLowerCase(Locale.ROOT);", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543497893", "createdAt": "2020-12-15T16:33:01Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -80,4 +127,85 @@ public ObjectMeta getMetadata() {\n   public void setMetadata(ObjectMeta metadata) {\n     this.metadata = metadata;\n   }\n+  \n+  \n+  public static String getPlural(Class<? extends CustomResource> clazz) {\n+    final Plural fromAnnotation = clazz.getAnnotation(Plural.class);\n+    return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : Pluralize.toPlural(getSingular(clazz)));\n+  }\n+  \n+  @JsonIgnore\n+  public String getPlural() {\n+    if(plural == null) {\n+      final Plural fromAnnotation = getClass().getAnnotation(Plural.class);\n+      this.plural = (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : Pluralize.toPlural(getSingular()));\n+    }\n+    return plural;\n+  }\n+  \n+  public static String getSingular(Class<? extends CustomResource> clazz) {\n+    final Singular fromAnnotation = clazz.getAnnotation(Singular.class);\n+    return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : HasMetadata.getKind(clazz)).toLowerCase(Locale.ROOT);\n+  }\n+  \n+  @JsonIgnore\n+  public String getSingular() {\n+    if(singular == null) {\n+      final Singular fromAnnotation = getClass().getAnnotation(Singular.class);\n+      this.singular = (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : getKind()).toLowerCase(Locale.ROOT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "originalPosition": 166}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjQ3NTcw", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-552647570", "createdAt": "2020-12-15T16:35:35Z", "commit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozNTozNlrOIGUmgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozNTozNlrOIGUmgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5OTkwNQ==", "bodyText": "Please remove commented block (unless there's a reason to keep this here)", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r543499905", "createdAt": "2020-12-15T16:35:36Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/CustomResourceOperationsImplTest.java", "diffHunk": "@@ -28,43 +27,51 @@\n import io.fabric8.kubernetes.client.dsl.base.CustomResourceDefinitionContext;\n import io.fabric8.kubernetes.internal.KubernetesDeserializer;\n \n+import io.fabric8.kubernetes.model.annotation.ApiGroup;\n+import io.fabric8.kubernetes.model.annotation.ApiVersion;\n import org.junit.jupiter.api.Test;\n \n import com.fasterxml.jackson.core.JsonFactory;\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.databind.MappingJsonFactory;\n \n import static org.hamcrest.core.IsInstanceOf.instanceOf;\n-import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertThat;\n \n public class CustomResourceOperationsImplTest {\n \n+  @ApiGroup(MyCustomResource.GROUP)\n+  @ApiVersion(MyCustomResource.VERSION)\n   public static class MyCustomResource extends CustomResource {\n+    public static final String GROUP = \"custom.group\";\n+    public static final String VERSION = \"v1alpha1\";\n   }\n \n   public static class MyCustomResourceList extends CustomResourceList<MyCustomResource> {\n   }\n   \n+  @ApiGroup(\"sample.fabric8.io\")\n+  @ApiVersion(\"v1\")\n   public static class Bar extends CustomResource {}\n \n-  private final CustomResourceDefinition crd = new CustomResourceDefinitionBuilder()\n+  /*private final CustomResourceDefinition crd = new CustomResourceDefinitionBuilder()\n     .withNewMetadata()\n       .withName(\"custom.name\")\n     .endMetadata()\n     .withNewSpec()\n-      .withGroup(\"custom.group\")\n-      .withVersion(\"v1alpha1\")\n+      .withGroup(MyCustomResource.GROUP)\n+      .withVersion(MyCustomResource.VERSION)\n       .withNewNames()\n         .withKind(\"MyCustomResource\")\n         .withListKind(\"MyCustomResourceList\")\n         .withPlural(\"mycustomresources\")\n         .withSingular(\"mycustomresource\")\n       .endNames()\n     .endSpec()\n-  .build();\n+  .build();*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c04087f8dfbb80d495173bd452623b34ef2421"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7fc0808e475d2aff93a548ef7edc5b7ef26fe0", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/9f7fc0808e475d2aff93a548ef7edc5b7ef26fe0", "committedDate": "2020-12-15T19:33:49Z", "message": "refactor: apply toLowerCase to both branches\n\nCo-authored-by: Marc Nuri <marc@marcnuri.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "469cfdc433ced3569253b4f28fb7b1b6a5d43c7a", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/469cfdc433ced3569253b4f28fb7b1b6a5d43c7a", "committedDate": "2020-12-15T19:36:23Z", "message": "refactor: use static versions instead of duplicating code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3b4d67d0194e115bf939dc82deaee26968b9f6a", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/d3b4d67d0194e115bf939dc82deaee26968b9f6a", "committedDate": "2020-12-15T20:04:18Z", "message": "fix: wrong test assumption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a3871568e2a854f1610eb65ef5985826c99618", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/e0a3871568e2a854f1610eb65ef5985826c99618", "committedDate": "2020-12-15T20:15:26Z", "message": "chore: clean-up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf6e0dece0304945e0f7d490e1f864c32ec497e9", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/bf6e0dece0304945e0f7d490e1f864c32ec497e9", "committedDate": "2020-12-16T09:27:32Z", "message": "refactor: make crdFromCustomResourceType version specific, add v1 version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8558d1c33c623d7759b0aeaf30cf5d3a9ef90784", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/8558d1c33c623d7759b0aeaf30cf5d3a9ef90784", "committedDate": "2020-12-16T09:28:22Z", "message": "fix: also set version to first versions item to follow v1beta1 spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTE1MTA5", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-553515109", "createdAt": "2020-12-16T09:46:22Z", "commit": {"oid": "e0a3871568e2a854f1610eb65ef5985826c99618"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0NjoyM1rOIG8nOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0NjoyM1rOIG8nOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NTQ1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.junit.jupiter.api.Test;", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r544155451", "createdAt": "2020-12-16T09:46:23Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/CustomResourceTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client;\n+\n+import io.fabric8.kubernetes.model.annotation.ApiGroup;\n+import io.fabric8.kubernetes.model.annotation.ApiVersion;\n+import org.junit.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a3871568e2a854f1610eb65ef5985826c99618"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b77ec84bb15867ec116ddee4e08dd94122735f03", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/b77ec84bb15867ec116ddee4e08dd94122735f03", "committedDate": "2020-12-16T10:21:04Z", "message": "chore: add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f073e4449ccec6d16ebc7c2ca7a717016115ddbd", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/f073e4449ccec6d16ebc7c2ca7a717016115ddbd", "committedDate": "2020-12-16T10:34:30Z", "message": "fix: use proper @Test version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTczNDkx", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-553573491", "createdAt": "2020-12-16T10:58:48Z", "commit": {"oid": "f073e4449ccec6d16ebc7c2ca7a717016115ddbd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo1ODo0OFrOIG_k1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo1ODo0OFrOIG_k1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwMzk4OQ==", "bodyText": "I think we would also need to set spec.versions[].schema.openAPIV3Schema, spec.versions[].served and spec.versions[].storage. If I don't add these fields in apiextensions.k8s.io/v1#CustomResourceDefinition I get these validation errors:\nThe CustomResourceDefinition \"crontabs.stable.example.com\" is invalid: spec.versions[0].schema.openAPIV3Schema: Required value: schemas are required\n\nerror: error validating \"crontab-crd.yml\": error validating data: [ValidationError(CustomResourceDefinition.spec.versions[0]): missing required field \"served\" in io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion, ValidationError(CustomResourceDefinition.spec.versions[0]): missing required field \"storage\" in io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion]; if you choose to ignore these errors, turn validation off with --validate=false", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r544203989", "createdAt": "2020-12-16T10:58:48Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContext.java", "diffHunk": "@@ -59,40 +58,86 @@ public String getVersion() {\n   public String getKind() {\n     return kind;\n   }\n-\n-  public static CustomResourceDefinitionContext fromCustomResourceType(Class<? extends HasMetadata> customResource) {\n-    HasMetadata instance;\n+  \n+  public static CustomResourceDefinitionBuilder v1beta1CRDFromCustomResourceType(Class<? extends CustomResource> customResource) {\n+    try {\n+      final CustomResource instance = customResource.getDeclaredConstructor().newInstance();\n+    \n+      final String kind = instance.getKind();\n+      final String version = instance.getVersion();\n+  \n+      return new CustomResourceDefinitionBuilder()\n+        .withKind(kind)\n+        .withNewMetadata()\n+        .withName(instance.getCRDName())\n+        .endMetadata()\n+        .withNewSpec()\n+        .withGroup(instance.getGroup())\n+        .withVersion(version) // also set version to the first (and only) versions item\n+        .addNewVersion().withName(version).endVersion()\n+        .withScope(instance.getScope())\n+        .withNewNames()\n+        .withKind(kind)\n+        .withPlural(instance.getPlural())\n+        .withSingular(instance.getSingular())\n+        .endNames()\n+        .endSpec();\n+    } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n+      throw KubernetesClientException.launderThrowable(e);\n+    }\n+  }\n+  \n+  public static io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder v1CRDFromCustomResourceType(Class<? extends CustomResource> customResource) {\n     try {\n-      instance = customResource.newInstance();\n-\n-      String kind = Utils.isNullOrEmpty(instance.getKind()) ? customResource.getSimpleName() : instance.getKind();\n-      String name = kind.toLowerCase();\n-      String plural = Pluralize.toPlural(name);\n-      String group = ApiVersionUtil.apiGroup(instance, null);\n-      String version = ApiVersionUtil.apiVersion(instance, \"v1\");\n-      String scope = instance instanceof Namespaced ? \"Namespaced\" : \"Cluster\";\n-\n-      return new CustomResourceDefinitionContext.Builder()\n-        .withGroup(group)\n-        .withVersion(version)\n-        .withScope(scope)\n-        .withName(name)\n-        .withPlural(plural)\n+      final CustomResource instance = customResource.getDeclaredConstructor().newInstance();\n+    \n+      String kind = instance.getKind();\n+  \n+      return new io.fabric8.kubernetes.api.model.apiextensions.v1.CustomResourceDefinitionBuilder()\n         .withKind(kind)\n+        .withNewMetadata()\n+        .withName(instance.getCRDName())\n+        .endMetadata()\n+        .withNewSpec()\n+        .withGroup(instance.getGroup())\n+        .addNewVersion().withName(instance.getVersion()).endVersion()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f073e4449ccec6d16ebc7c2ca7a717016115ddbd"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTc2MzIy", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-553576322", "createdAt": "2020-12-16T11:02:12Z", "commit": {"oid": "f073e4449ccec6d16ebc7c2ca7a717016115ddbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff33f03fbcca84729cac5d6609921775cce839c7", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/ff33f03fbcca84729cac5d6609921775cce839c7", "committedDate": "2020-12-16T11:15:15Z", "message": "refactor: rename @ApiVersion/@ApiGroup to @Version/@Group respectively"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTg5OTI2", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-553589926", "createdAt": "2020-12-16T11:20:27Z", "commit": {"oid": "f073e4449ccec6d16ebc7c2ca7a717016115ddbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2990c7cae0a21c0d8367de50de8e35bc04f99d9", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/c2990c7cae0a21c0d8367de50de8e35bc04f99d9", "committedDate": "2020-12-16T11:20:28Z", "message": "fix: license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c3e6deab9d63a25ce188626b6d19f2c4a20944", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/03c3e6deab9d63a25ce188626b6d19f2c4a20944", "committedDate": "2020-12-16T11:22:33Z", "message": "fix: make test class package-scoped"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba04163f906dd0dce8a34985e8f42e3b806116b7", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/ba04163f906dd0dce8a34985e8f42e3b806116b7", "committedDate": "2020-12-16T13:25:24Z", "message": "fix: adapt matching to Version annotation now being fully-qualified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "541ee7164f26b625b4e263ebc311f3a662b0429d", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/541ee7164f26b625b4e263ebc311f3a662b0429d", "committedDate": "2020-12-16T14:31:28Z", "message": "fix: adapt matching to Group annotation possibly being fully-qualified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ad6a11642cbf238ed1e62c30c4b06a31bd2c60d", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/7ad6a11642cbf238ed1e62c30c4b06a31bd2c60d", "committedDate": "2020-12-16T14:44:42Z", "message": "refactor: move getGroup/getVersion to HasMetadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd9b2b4fd49371cc528959b81dd6b36ae5396832", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/bd9b2b4fd49371cc528959b81dd6b36ae5396832", "committedDate": "2020-12-16T14:55:25Z", "message": "doc: add javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODQ1MDcw", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#pullrequestreview-553845070", "createdAt": "2020-12-16T16:10:15Z", "commit": {"oid": "bd9b2b4fd49371cc528959b81dd6b36ae5396832"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMDoxNVrOIHNHVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMDoxNVrOIHNHVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNTgxNQ==", "bodyText": "I would rather see this if being part of the constructor and not the getter.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2661#discussion_r544425815", "createdAt": "2020-12-16T16:10:15Z", "author": {"login": "iocanel"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/CustomResource.java", "diffHunk": "@@ -80,4 +129,120 @@ public ObjectMeta getMetadata() {\n   public void setMetadata(ObjectMeta metadata) {\n     this.metadata = metadata;\n   }\n+  \n+  /**\n+   * Retrieves the plural form associated with the specified CustomResource if annotated with {@link Plural} or computes a default value\n+   * using the value returned by {@link #getSingular(Class)} as input to {@link Pluralize#toPlural(String)}.\n+   *\n+   * @param clazz the CustomResource whose plural form we want to retrieve\n+   * @return the plural form defined by the {@link Plural} annotation or a computed default value\n+   */\n+  public static String getPlural(Class<? extends CustomResource> clazz) {\n+    final Plural fromAnnotation = clazz.getAnnotation(Plural.class);\n+    return (fromAnnotation != null ? fromAnnotation.value().toLowerCase(Locale.ROOT) : Pluralize.toPlural(getSingular(clazz)));\n+  }\n+  \n+  @JsonIgnore\n+  public String getPlural() {\n+    if (plural == null) {\n+      this.plural = getPlural(getClass());\n+    }\n+    return plural;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9b2b4fd49371cc528959b81dd6b36ae5396832"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e689f5ae947210874b7d24d6b90bae28be6247", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/92e689f5ae947210874b7d24d6b90bae28be6247", "committedDate": "2020-12-16T17:14:58Z", "message": "fix: use proper annotation names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fcd1b451637cba1e2bd6e285c077b8f9e04b74f", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/fabric8io/kubernetes-client/commit/6fcd1b451637cba1e2bd6e285c077b8f9e04b74f", "committedDate": "2020-12-16T17:24:34Z", "message": "fix: set computed properties in constructor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3566, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}