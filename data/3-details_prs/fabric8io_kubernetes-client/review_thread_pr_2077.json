{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTgxODgw", "number": 2077, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToyMDowOFrODqSuyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToyMDowOFrODqSuyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjczNjcyOnYy", "diffSide": "RIGHT", "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToyMDowOFrOF58sdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToyMDowOFrOF58sdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwNzU3NQ==", "bodyText": "Is there any reason for concatenating the string > \"stable.example.com/v1\"\nMaybe you actually meant: KubernetesDeserializer.registerCustomKind(\"stable.example.com\",\"/v1\", \"CronTab\", CronTab.class); ?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2077#discussion_r396307575", "createdAt": "2020-03-23T09:20:08Z", "author": {"login": "manusa"}, "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.mock;\n+\n+import io.fabric8.kubernetes.api.model.ObjectMetaBuilder;\n+import io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.fabric8.kubernetes.client.dsl.MixedOperation;\n+import io.fabric8.kubernetes.client.dsl.Resource;\n+import io.fabric8.kubernetes.client.mock.crd.CronTabSpec;\n+import io.fabric8.kubernetes.client.mock.crd.DoneableCronTab;\n+import io.fabric8.kubernetes.client.mock.crd.CronTab;\n+import io.fabric8.kubernetes.client.mock.crd.CronTabList;\n+import io.fabric8.kubernetes.client.server.mock.KubernetesServer;\n+import io.fabric8.kubernetes.internal.KubernetesDeserializer;\n+import org.junit.Rule;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.migrationsupport.rules.EnableRuleMigrationSupport;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+@EnableRuleMigrationSupport\n+public class CustomResourceCrudTest {\n+  @Rule\n+  public KubernetesServer kubernetesServer = new KubernetesServer(true,true);\n+\n+  private MixedOperation<CronTab, CronTabList, DoneableCronTab, Resource<CronTab, DoneableCronTab>> podSetClient;\n+\n+  @Test\n+  public void testCrud() {\n+    CronTab cronTab1 = createCronTab(\"my-new-cron-object\", \"* * * * */5\", 3, \"my-awesome-cron-image\");\n+    CronTab cronTab2 = createCronTab(\"my-second-cron-object\", \"* * * * */4\", 2, \"my-second-cron-image\");\n+    CronTab cronTab3 = createCronTab(\"my-third-cron-object\", \"* * * * */3\", 1, \"my-third-cron-image\");\n+    KubernetesClient client = kubernetesServer.getClient();\n+\n+    KubernetesDeserializer.registerCustomKind(\"stable.example.com\" + \"/v1\", \"CronTab\", CronTab.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466851d2c5ed34e019c310630f9818e824c4e3f"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3777, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}