{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODEyODIz", "number": 2100, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowNzo0NlrODuQYKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0NjowM1rOD1yFZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODI5NDE2OnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/utils/URLFromServiceUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowNzo0NlrOGAJtlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowNzo0NlrOGAJtlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxMjMwOQ==", "bodyText": "can you take care of the wild card import?", "url": "https://github.com/fabric8io/kubernetes-client/pull/2100#discussion_r402812309", "createdAt": "2020-04-03T08:07:46Z", "author": {"login": "dev-gaur"}, "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/utils/URLFromServiceUtil.java", "diffHunk": "@@ -17,15 +17,16 @@\n package io.fabric8.kubernetes.client.utils;\n \n import io.fabric8.kubernetes.api.model.*;\n-import io.fabric8.kubernetes.api.model.extensions.*;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.HTTPIngressPath;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.HTTPIngressRuleValue;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.Ingress;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.IngressBackend;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.IngressRule;\n+import io.fabric8.kubernetes.api.model.networking.v1beta1.IngressSpec;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Objects;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca402aae10e933ecd7174718fcb8d56de39ef7a7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODMyNjI1OnYy", "diffSide": "RIGHT", "path": "kubernetes-model/cmd/generate/generate.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMjo0OFrOGAJ_SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoyMzo0N1rOGAKkLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNjg0MA==", "bodyText": "Do we have test coverage for Ingress under networking.k8s.io/v1 as well?\nI'm not sure if we need it or not but just asking.", "url": "https://github.com/fabric8io/kubernetes-client/pull/2100#discussion_r402816840", "createdAt": "2020-04-03T08:12:48Z", "author": {"login": "dev-gaur"}, "path": "kubernetes-model/cmd/generate/generate.go", "diffHunk": "@@ -311,6 +312,7 @@ func main() {\n     {\"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1\", \"\", \"io.fabric8.kubernetes.api.model.apiextensions\", \"kubernetes_apiextensions_\"},\n     {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n     {\"k8s.io/api/networking/v1\", \"networking.k8s.io\", \"io.fabric8.kubernetes.api.model.networking\", \"kubernetes_networking_\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca402aae10e933ecd7174718fcb8d56de39ef7a7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNjI4NA==", "bodyText": "I think there is IngressTest already", "url": "https://github.com/fabric8io/kubernetes-client/pull/2100#discussion_r402826284", "createdAt": "2020-04-03T08:23:47Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-model/cmd/generate/generate.go", "diffHunk": "@@ -311,6 +312,7 @@ func main() {\n     {\"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1\", \"\", \"io.fabric8.kubernetes.api.model.apiextensions\", \"kubernetes_apiextensions_\"},\n     {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n     {\"k8s.io/api/networking/v1\", \"networking.k8s.io\", \"io.fabric8.kubernetes.api.model.networking\", \"kubernetes_networking_\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNjg0MA=="}, "originalCommit": {"oid": "ca402aae10e933ecd7174718fcb8d56de39ef7a7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzIxNzAwOnYy", "diffSide": "RIGHT", "path": "kubernetes-client/src/main/resources/resource-handler-services.vm", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0NjowM1rOGLYdGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0NjowM1rOGLYdGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4ODE4Nw==", "bodyText": "nit: If possible add some indentation", "url": "https://github.com/fabric8io/kubernetes-client/pull/2100#discussion_r414588187", "createdAt": "2020-04-24T13:46:03Z", "author": {"login": "manusa"}, "path": "kubernetes-client/src/main/resources/resource-handler-services.vm", "diffHunk": "@@ -14,5 +14,10 @@\n  * limitations under the License.\n  *#\n #foreach ($m in ${model.values()})\n-io.fabric8.kubernetes.client.handlers.${m.name}Handler\n+#foreach ($annotation in $m.annotations)\n+#if ($annotation.getClassRef().getName().equals(\"PackageSuffix\"))\n+#set ($packageSuffix = $annotation.getParameters().get(\"value\"))\n+#end", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4600cce0c609b7598416326580b0e62fe0afca8f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3785, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}