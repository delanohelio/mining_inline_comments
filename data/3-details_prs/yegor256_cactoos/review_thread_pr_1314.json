{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODc4NDI4", "number": 1314, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoxMzoxMVrODkaF4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoxNTo1NlrODkaJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTAyODE2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/experimental/ThreadsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoxMzoxMVrOFwtroA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoyMjo0MFrOFz0Oeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNDQxNg==", "bodyText": "@victornoel What do you think about introducing extra class as: ScalarOf in Cactoos, so that we do not require to to that?\nMaybe just to leave a todo?", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r386624416", "createdAt": "2020-03-02T20:13:11Z", "author": {"login": "fanifieiev"}, "path": "src/test/java/org/cactoos/experimental/ThreadsTest.java", "diffHunk": "@@ -95,13 +96,14 @@ public void failsDueToException() {\n             \"wraps error into CompletionException\",\n             () -> new Threads<String>(\n                 Executors.newSingleThreadExecutor(),\n-                () -> {\n+                (Scalar<String>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NzM3MA==", "bodyText": "@fanifieiev done with a todo", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r389877370", "createdAt": "2020-03-09T18:22:40Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/experimental/ThreadsTest.java", "diffHunk": "@@ -95,13 +96,14 @@ public void failsDueToException() {\n             \"wraps error into CompletionException\",\n             () -> new Threads<String>(\n                 Executors.newSingleThreadExecutor(),\n-                () -> {\n+                (Scalar<String>) () -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNDQxNg=="}, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTAzMDUzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/experimental/TimedTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoxMzo1OFrOFwttDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoyMjo0M1rOFz0OkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNDc4MA==", "bodyText": "@victornoel Same as for above.", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r386624780", "createdAt": "2020-03-02T20:13:58Z", "author": {"login": "fanifieiev"}, "path": "src/test/java/org/cactoos/experimental/TimedTest.java", "diffHunk": "@@ -180,13 +180,14 @@ public void failsDueToException() {\n                 Executors.newSingleThreadExecutor(),\n                 1L,\n                 TimeUnit.SECONDS,\n-                () -> {\n+                (Scalar<String>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NzM5Mg==", "bodyText": "@fanifieiev done with a todo", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r389877392", "createdAt": "2020-03-09T18:22:43Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/experimental/TimedTest.java", "diffHunk": "@@ -180,13 +180,14 @@ public void failsDueToException() {\n                 Executors.newSingleThreadExecutor(),\n                 1L,\n                 TimeUnit.SECONDS,\n-                () -> {\n+                (Scalar<String>) () -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNDc4MA=="}, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTAzNjU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterable/MappedTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoxNTo1NlrOFwtwrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoyMjo1MVrOFz0Oyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNTcwOQ==", "bodyText": "@victornoel I think this test should check all the values of array.", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r386625709", "createdAt": "2020-03-02T20:15:56Z", "author": {"login": "fanifieiev"}, "path": "src/test/java/org/cactoos/iterable/MappedTest.java", "diffHunk": "@@ -77,4 +79,16 @@ public void string() {\n             Matchers.equalTo(\"2, 4, 6\")\n         );\n     }\n+\n+    @Test\n+    public void transformsArray() {\n+        new Assertion<>(\n+            \"Transforms an array\",\n+            new Mapped<>(\n+                input -> new Upper(new TextOf(input)),\n+                \"a\", \"b\", \"c\"\n+            ).iterator().next(),\n+            new TextIs(\"A\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NzQ1MA==", "bodyText": "@fanifieiev thanks, it is done", "url": "https://github.com/yegor256/cactoos/pull/1314#discussion_r389877450", "createdAt": "2020-03-09T18:22:51Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/iterable/MappedTest.java", "diffHunk": "@@ -77,4 +79,16 @@ public void string() {\n             Matchers.equalTo(\"2, 4, 6\")\n         );\n     }\n+\n+    @Test\n+    public void transformsArray() {\n+        new Assertion<>(\n+            \"Transforms an array\",\n+            new Mapped<>(\n+                input -> new Upper(new TextOf(input)),\n+                \"a\", \"b\", \"c\"\n+            ).iterator().next(),\n+            new TextIs(\"A\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNTcwOQ=="}, "originalCommit": {"oid": "4b28a23347750022e3cb8e2a723a9539f069a2e8"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 797, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}