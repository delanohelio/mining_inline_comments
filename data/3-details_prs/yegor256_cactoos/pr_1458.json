{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTkyMDE0", "number": 1458, "title": "(#1287) TextEnvelope is a real envelope", "bodyText": "This is for #1287.", "createdAt": "2020-09-13T14:44:21Z", "url": "https://github.com/yegor256/cactoos/pull/1458", "merged": true, "mergeCommit": {"oid": "47aff6e4c70f6f53d24bdccb7c1f6c12abfe60d2"}, "closed": true, "closedAt": "2020-09-13T19:19:12Z", "author": {"login": "victornoel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIhDLVAFqTQ4NzMxOTgzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIiUEFgFqTQ4NzMyNjk1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzE5ODMx", "url": "https://github.com/yegor256/cactoos/pull/1458#pullrequestreview-487319831", "createdAt": "2020-09-13T16:09:56Z", "commit": {"oid": "83ef5f4d117b6e3ab44ee80f7406f1b0bf6a23d6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNjowOTo1NlrOHQ9h5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNjoxNzoyOFrOHQ9lew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0NzM2Nw==", "bodyText": "@victornoel Can we reuse scalar.Synched here?", "url": "https://github.com/yegor256/cactoos/pull/1458#discussion_r487547367", "createdAt": "2020-09-13T16:09:56Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/text/Synced.java", "diffHunk": "@@ -48,13 +47,14 @@ public Synced(final Text text) {\n      * @param lck The lock\n      */\n     public Synced(final Text text, final Object lck) {\n-        super(new Scalar<String>() {\n-            @Override\n-            public String value() throws Exception {\n-                synchronized (lck) {\n-                    return text.asString();\n+        super(\n+            new TextOf(\n+                () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ef5f4d117b6e3ab44ee80f7406f1b0bf6a23d6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0ODI4Mw==", "bodyText": "@victornoel Wouldn't this definition of equals cause problems? The operation seems to loose symmetric properties.\nFor example\nnew TextEnvelope(x).equals(x) == true, but  not necessarily x.equals(new TextEnvelope(x))", "url": "https://github.com/yegor256/cactoos/pull/1458#discussion_r487548283", "createdAt": "2020-09-13T16:17:28Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/text/TextEnvelope.java", "diffHunk": "@@ -23,71 +23,46 @@\n  */\n package org.cactoos.text;\n \n-import java.io.IOException;\n-import org.cactoos.Scalar;\n import org.cactoos.Text;\n-import org.cactoos.scalar.And;\n-import org.cactoos.scalar.IoChecked;\n-import org.cactoos.scalar.Or;\n-import org.cactoos.scalar.Unchecked;\n \n /**\n- * Text envelope that provides {@link #equals(Object)} and {@link #hashCode()}\n- * methods.\n+ * {@link Text} envelope.\n+ *\n  * @since 0.32\n  * @checkstyle AbstractClassNameCheck (500 lines)\n  */\n public abstract class TextEnvelope implements Text {\n \n     /**\n-     * String value of the envelope.\n+     * Wrapped Text.\n      */\n-    private final IoChecked<String> origin;\n+    private final Text origin;\n \n     /**\n      * Ctor.\n      * @param text Text representing the text value.\n      */\n     public TextEnvelope(final Text text) {\n-        this(new IoChecked<>(text::asString));\n-    }\n-\n-    /**\n-     * Ctor.\n-     * @param scalar Scalar representing the text value.\n-     */\n-    public TextEnvelope(final Scalar<String> scalar) {\n-        this.origin = new IoChecked<>(scalar);\n+        this.origin = text;\n     }\n \n     @Override\n-    public final String asString() throws IOException {\n-        return this.origin.value();\n+    public final String asString() throws Exception {\n+        return this.origin.asString();\n     }\n \n     @Override\n     public final String toString() {\n-        return new UncheckedText(this).asString();\n+        return this.origin.toString();\n     }\n \n     @Override\n-    public final int hashCode() {\n-        return new Unchecked<>(this.origin).value().hashCode();\n+    public final boolean equals(final Object obj) {\n+        return this.origin.equals(obj);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ef5f4d117b6e3ab44ee80f7406f1b0bf6a23d6"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "800fd3e151a17e60dd259abe273f070f3528af14", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/800fd3e151a17e60dd259abe273f070f3528af14", "committedDate": "2020-09-13T17:01:33Z", "message": "(#1287) TextEnvelope is a real envelope"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83ef5f4d117b6e3ab44ee80f7406f1b0bf6a23d6", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/83ef5f4d117b6e3ab44ee80f7406f1b0bf6a23d6", "committedDate": "2020-09-13T14:43:50Z", "message": "(#1287) TextEnvelope is a real envelope"}, "afterCommit": {"oid": "800fd3e151a17e60dd259abe273f070f3528af14", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/800fd3e151a17e60dd259abe273f070f3528af14", "committedDate": "2020-09-13T17:01:33Z", "message": "(#1287) TextEnvelope is a real envelope"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzI2OTUx", "url": "https://github.com/yegor256/cactoos/pull/1458#pullrequestreview-487326951", "createdAt": "2020-09-13T17:47:19Z", "commit": {"oid": "800fd3e151a17e60dd259abe273f070f3528af14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 509, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}