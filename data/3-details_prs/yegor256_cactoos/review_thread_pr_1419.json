{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODA3NjMz", "number": 1419, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyMDozOVrOEQ69mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyMzozM1rOEQ7Biw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTc4NzEzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyMDozOVrOG1V3WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozMjoxN1rOG1754g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTk0NQ==", "bodyText": "@StuporHero please make that class final", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r458585945", "createdAt": "2020-07-22T07:20:39Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTE4Ng==", "bodyText": "@victornoel No problem. Just to let you know, ForEachTest is not final.", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r459209186", "createdAt": "2020-07-23T04:32:17Z", "author": {"login": "StuporHero"}, "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTk0NQ=="}, "originalCommit": {"oid": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTc5NzIzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyMzozM1rOG1V9bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozMzo1MlrOG177DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUwMg==", "bodyText": "@StuporHero please reword that \"Must...\"", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r458587502", "createdAt": "2020-07-22T07:23:33Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {\n+\n+    @Test\n+    public void testBiProcIterable() throws Exception {\n+        final StringBuilder builder = new StringBuilder();\n+        new ForEachWithIndex<>(\n+            (input, index) -> builder.append(String.format(\"%d: '%s' \", index + 1, input))\n+        ).exec(\n+            new IterableOf<>(\n+                \"Mary\", \"John\", \"William\", \"Napkin\"\n+            )\n+        );\n+        new Assertion<>(\n+            \"String does not contain mapped Iterable elements\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTQ4NQ==", "bodyText": "@victornoel Done.", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r459209485", "createdAt": "2020-07-23T04:33:52Z", "author": {"login": "StuporHero"}, "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {\n+\n+    @Test\n+    public void testBiProcIterable() throws Exception {\n+        final StringBuilder builder = new StringBuilder();\n+        new ForEachWithIndex<>(\n+            (input, index) -> builder.append(String.format(\"%d: '%s' \", index + 1, input))\n+        ).exec(\n+            new IterableOf<>(\n+                \"Mary\", \"John\", \"William\", \"Napkin\"\n+            )\n+        );\n+        new Assertion<>(\n+            \"String does not contain mapped Iterable elements\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUwMg=="}, "originalCommit": {"oid": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 846, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}