{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTM3Mzkx", "number": 1371, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTozOTozNlrOD4wILA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0ODo0MlrOD4wLnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODM1MzcyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/BoolOfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTozOTozNlrOGPqarw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTozOTozNlrOGPqarw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Njc4Mw==", "bodyText": "@marceloamadeu can you replace all those new BoofOf(xxx).value() with new BoofOf(xxx) and use ScalarHasValue as the matcher?", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419076783", "createdAt": "2020-05-03T09:39:36Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/BoolOfTest.java", "diffHunk": "@@ -37,28 +37,28 @@\n \n     @Test\n     public void trueTest() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't parse 'true' string\",\n+        new Assertion<>(\n+            \"Must be parsed string 'true'\",\n             new BoolOf(\"true\").value(),\n-            Matchers.equalTo(true)\n-        );\n+            new IsEqual<>(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODM1NjgzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/ConstantTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0MjoyMVrOGPqcHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0MjoyMVrOGPqcHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3NzE0OA==", "bodyText": "@marceloamadeu same here with ScalarHasValue", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077148", "createdAt": "2020-05-03T09:42:21Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/ConstantTest.java", "diffHunk": "@@ -37,20 +38,20 @@\n     @Test\n     public void returnsGivenValue() throws Exception {\n         final String value = \"Hello World\";\n-        MatcherAssert.assertThat(\n-            \"Can't return given value\",\n+        new Assertion<>(\n+            \"Must return given value\",\n             new Constant<>(value).value(),\n-            Matchers.equalTo(value)\n-        );\n+            new IsEqual<>(value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODM2MTcyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/EqualsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0NzozOVrOGPqecg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0NzozOVrOGPqecg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Nzc0Ng==", "bodyText": "@marceloamadeu here too", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077746", "createdAt": "2020-05-03T09:47:39Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/EqualsTest.java", "diffHunk": "@@ -37,50 +37,50 @@\n \n     @Test\n     public void compareEquals() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't compare if two integers are equals\",\n+        new Assertion<>(\n+            \"Must compare if two integers are equals\",\n             new Equals<>(\n                 () -> Integer.valueOf(1),\n                 () -> Integer.valueOf(1)\n             ).value(),\n-            Matchers.equalTo(true)\n-        );\n+            new IsEqual<>(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODM2MjU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/FoldedTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0ODo0MlrOGPqe2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwOTo0ODo0MlrOGPqe2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Nzg0OQ==", "bodyText": "@marceloamadeu here too", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077849", "createdAt": "2020-05-03T09:48:42Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/FoldedTest.java", "diffHunk": "@@ -39,29 +39,29 @@\n \n     @Test\n     public void skipIterable() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't fold elements in iterable\",\n+        new Assertion<>(\n+            \"Must fold elements in iterable\",\n             new Folded<>(\n                 0L, (first, second) -> first + second,\n                 new HeadOf<>(\n                     10,\n                     new RangeOf<>(0L, Long.MAX_VALUE, value -> ++value)\n                 )\n             ).value(),\n-            Matchers.equalTo(45L)\n-        );\n+            new IsEqual<>(45L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 831, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}