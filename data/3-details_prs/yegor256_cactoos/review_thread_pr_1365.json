{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDkzMTcy", "number": 1365, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMTozODoxM1rOD4WNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMTo0OTozN1rOD4WTkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDEwNjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/scalar/FirstOf.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMTozODoxNFrOGPHyog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMTo0Njo0NFrOGPH5eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTQ3NA==", "bodyText": "@iakunin let's also add a constructor that takes a T to ease use, WDYT?", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418509474", "createdAt": "2020-05-01T11:38:14Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/scalar/FirstOf.java", "diffHunk": "@@ -53,6 +53,19 @@\n      */\n     private final Scalar<T> fallback;\n \n+    /**\n+     * Constructor with default condition (always `true`).\n+     * @param src Source iterable\n+     * @param fbck Fallback used if no value matches\n+     */\n+    public FirstOf(final Iterable<T> src, final Scalar<T> fbck) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf46371530b5ae81df35370cf95a2a87676d16a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTk0NQ==", "bodyText": "@victornoel do you mean T as a fallback, right?", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418509945", "createdAt": "2020-05-01T11:40:34Z", "author": {"login": "iakunin"}, "path": "src/main/java/org/cactoos/scalar/FirstOf.java", "diffHunk": "@@ -53,6 +53,19 @@\n      */\n     private final Scalar<T> fallback;\n \n+    /**\n+     * Constructor with default condition (always `true`).\n+     * @param src Source iterable\n+     * @param fbck Fallback used if no value matches\n+     */\n+    public FirstOf(final Iterable<T> src, final Scalar<T> fbck) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTQ3NA=="}, "originalCommit": {"oid": "ddf46371530b5ae81df35370cf95a2a87676d16a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxMDA1Ng==", "bodyText": "@iakunin yes exactly, sorry for the confusion :)", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418510056", "createdAt": "2020-05-01T11:41:13Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/scalar/FirstOf.java", "diffHunk": "@@ -53,6 +53,19 @@\n      */\n     private final Scalar<T> fallback;\n \n+    /**\n+     * Constructor with default condition (always `true`).\n+     * @param src Source iterable\n+     * @param fbck Fallback used if no value matches\n+     */\n+    public FirstOf(final Iterable<T> src, final Scalar<T> fbck) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTQ3NA=="}, "originalCommit": {"oid": "ddf46371530b5ae81df35370cf95a2a87676d16a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxMTIyNQ==", "bodyText": "@victornoel done =)", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418511225", "createdAt": "2020-05-01T11:46:44Z", "author": {"login": "iakunin"}, "path": "src/main/java/org/cactoos/scalar/FirstOf.java", "diffHunk": "@@ -53,6 +53,19 @@\n      */\n     private final Scalar<T> fallback;\n \n+    /**\n+     * Constructor with default condition (always `true`).\n+     * @param src Source iterable\n+     * @param fbck Fallback used if no value matches\n+     */\n+    public FirstOf(final Iterable<T> src, final Scalar<T> fbck) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTQ3NA=="}, "originalCommit": {"oid": "ddf46371530b5ae81df35370cf95a2a87676d16a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDEyMzA3OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/FirstOfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMTo0OTozN1rOGPH79g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMjoxMToxNVrOGPIPng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxMTg2Mg==", "bodyText": "@iakunin can you just add one test for the empty iterable version?", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418511862", "createdAt": "2020-05-01T11:49:37Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/FirstOfTest.java", "diffHunk": "@@ -118,4 +118,28 @@ public void throwsFallbackIfNothingMatches() {\n             new Throws<>(IllegalArgumentException.class)\n         ).affirm();\n     }\n+\n+    @Test\n+    public void returnsFirstValueWithScalarFallback() {\n+        new Assertion<>(\n+            \"Returns first value with scalar fallback\",\n+            new FirstOf<Integer>(\n+                new IterableOfInts(2, 1, 0),\n+                () -> -1\n+            ),\n+            new ScalarHasValue<>(2)\n+        ).affirm();\n+    }\n+\n+    @Test\n+    public void returnsFirstValueWithIntegerFallback() {\n+        new Assertion<>(\n+            \"Returns first value with Integer fallback\",\n+            new FirstOf<>(\n+                new IterableOfInts(2, 1, 0),\n+                -1\n+            ),\n+            new ScalarHasValue<>(2)\n+        ).affirm();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc7d162e193b5c8d9b048bff140b2427e4bdc4f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxNjg5NA==", "bodyText": "@victornoel sure. Done.", "url": "https://github.com/yegor256/cactoos/pull/1365#discussion_r418516894", "createdAt": "2020-05-01T12:11:15Z", "author": {"login": "iakunin"}, "path": "src/test/java/org/cactoos/scalar/FirstOfTest.java", "diffHunk": "@@ -118,4 +118,28 @@ public void throwsFallbackIfNothingMatches() {\n             new Throws<>(IllegalArgumentException.class)\n         ).affirm();\n     }\n+\n+    @Test\n+    public void returnsFirstValueWithScalarFallback() {\n+        new Assertion<>(\n+            \"Returns first value with scalar fallback\",\n+            new FirstOf<Integer>(\n+                new IterableOfInts(2, 1, 0),\n+                () -> -1\n+            ),\n+            new ScalarHasValue<>(2)\n+        ).affirm();\n+    }\n+\n+    @Test\n+    public void returnsFirstValueWithIntegerFallback() {\n+        new Assertion<>(\n+            \"Returns first value with Integer fallback\",\n+            new FirstOf<>(\n+                new IterableOfInts(2, 1, 0),\n+                -1\n+            ),\n+            new ScalarHasValue<>(2)\n+        ).affirm();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxMTg2Mg=="}, "originalCommit": {"oid": "dcc7d162e193b5c8d9b048bff140b2427e4bdc4f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 826, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}