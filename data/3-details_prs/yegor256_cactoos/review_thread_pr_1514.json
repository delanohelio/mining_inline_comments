{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MzgzNzMy", "number": 1514, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNjo1NTozNVrOFI_JkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNjo1NTozNVrOFI_JkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTY3NTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/scalar/MultiplicationOf.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNjo1NTozNVrOILNBuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNzozNzo0NlrOILOwqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYxODY4MA==", "bodyText": "@victornoel This issue with type inference here is caused by either older JDK, or IDE version.", "url": "https://github.com/yegor256/cactoos/pull/1514#discussion_r548618680", "createdAt": "2020-12-24T16:55:35Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/scalar/MultiplicationOf.java", "diffHunk": "@@ -81,7 +81,7 @@ public MultiplicationOf(final Iterable<? extends Number> src) {\n             return new Folded<>(\n                 BigDecimal.ONE,\n                 (mtn, value) -> mtn.multiply(value, MathContext.DECIMAL128),\n-                    new Mapped<>(\n+                    new Mapped<BigDecimal>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb4a363334adab73ccd48c8952423dd0027f032"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0NzA4MA==", "bodyText": "@andreoss yes, it's Eclipse, but it's not incorrect to explicit the type here, so let's keep it, at least people using Eclipse will be able to contribute without bothering with those errors", "url": "https://github.com/yegor256/cactoos/pull/1514#discussion_r548647080", "createdAt": "2020-12-24T17:37:46Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/scalar/MultiplicationOf.java", "diffHunk": "@@ -81,7 +81,7 @@ public MultiplicationOf(final Iterable<? extends Number> src) {\n             return new Folded<>(\n                 BigDecimal.ONE,\n                 (mtn, value) -> mtn.multiply(value, MathContext.DECIMAL128),\n-                    new Mapped<>(\n+                    new Mapped<BigDecimal>(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYxODY4MA=="}, "originalCommit": {"oid": "1fb4a363334adab73ccd48c8952423dd0027f032"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 779, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}