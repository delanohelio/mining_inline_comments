{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Njg2MzM1", "number": 1421, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxNTowNVrOESbxFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToyNTozN1rOEScEjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzY0NzU2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxNTowNVrOG3nIkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo1MjoxM1rOG3vQyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NjAzMg==", "bodyText": "@ccostin93 Normally in the cactoos, always use the format: \"Must ...\", followed by what the object under test must do. Can you fix it here?", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r460966032", "createdAt": "2020-07-27T15:15:05Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -58,7 +58,11 @@ public void decoratesNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.next(), new IsEqual<>(value));\n+        new Assertion<>(\n+            \"wrong value is provided\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5OTIwOA==", "bodyText": "fixed", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r461099208", "createdAt": "2020-07-27T18:52:13Z", "author": {"login": "ccostin93"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -58,7 +58,11 @@ public void decoratesNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.next(), new IsEqual<>(value));\n+        new Assertion<>(\n+            \"wrong value is provided\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NjAzMg=="}, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzY1Mjc4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxNjoxMFrOG3nLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo1MjoxOFrOG3vQ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NjgyNg==", "bodyText": "@ccostin93 Can you use \"Must ...\" here too?", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r460966826", "createdAt": "2020-07-27T15:16:10Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -67,9 +71,17 @@ public void decoratesHasNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(true));\n+        new Assertion<>(\n+            \"hasNext is false for not traversed iterator\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5OTI1Nw==", "bodyText": "fixed", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r461099257", "createdAt": "2020-07-27T18:52:18Z", "author": {"login": "ccostin93"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -67,9 +71,17 @@ public void decoratesHasNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(true));\n+        new Assertion<>(\n+            \"hasNext is false for not traversed iterator\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NjgyNg=="}, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzY1NzE2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxNzoxMFrOG3nObw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo1MjoyMlrOG3vRFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NzUzNQ==", "bodyText": "@ccostin93 \"Must ...\" here too ...", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r460967535", "createdAt": "2020-07-27T15:17:10Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -67,9 +71,17 @@ public void decoratesHasNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(true));\n+        new Assertion<>(\n+            \"hasNext is false for not traversed iterator\",\n+            immutable.hasNext(),\n+            new IsEqual<>(true)\n+        ).affirm();\n         immutable.next();\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(false));\n+        new Assertion<>(\n+            \"hasNext is true for already traversed iterator\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5OTI4NA==", "bodyText": "fixed", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r461099284", "createdAt": "2020-07-27T18:52:22Z", "author": {"login": "ccostin93"}, "path": "src/test/java/org/cactoos/iterator/ImmutableTest.java", "diffHunk": "@@ -67,9 +71,17 @@ public void decoratesHasNext() {\n         final Iterator<Integer> immutable = new Immutable<>(\n             new IteratorOf<>(value)\n         );\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(true));\n+        new Assertion<>(\n+            \"hasNext is false for not traversed iterator\",\n+            immutable.hasNext(),\n+            new IsEqual<>(true)\n+        ).affirm();\n         immutable.next();\n-        MatcherAssert.assertThat(immutable.hasNext(), new IsEqual<>(false));\n+        new Assertion<>(\n+            \"hasNext is true for already traversed iterator\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NzUzNQ=="}, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzY5NzQzOnYy", "diffSide": "LEFT", "path": "src/test/java/org/cactoos/iterator/CycledTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToyNTozN1rOG3nmjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODo0NjoxM1rOG3vD3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MzcwOQ==", "bodyText": "@ccostin93 Several throws Exception were removed but this does not seem to be part of the #1420\n@victornoel Do we need to correct?", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r460973709", "createdAt": "2020-07-27T15:25:37Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/iterator/CycledTest.java", "diffHunk": "@@ -40,7 +40,7 @@\n public final class CycledTest {\n \n     @Test\n-    public void repeatIteratorTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk5MDk0MA==", "bodyText": "@marceloamadeu @ccostin93 good point but I think this is ok if the throws was not needed", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r460990940", "createdAt": "2020-07-27T15:50:48Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/iterator/CycledTest.java", "diffHunk": "@@ -40,7 +40,7 @@\n public final class CycledTest {\n \n     @Test\n-    public void repeatIteratorTest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MzcwOQ=="}, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NTkwMw==", "bodyText": "@marceloamadeu I removed the throws since they were not needed.", "url": "https://github.com/yegor256/cactoos/pull/1421#discussion_r461095903", "createdAt": "2020-07-27T18:46:13Z", "author": {"login": "ccostin93"}, "path": "src/test/java/org/cactoos/iterator/CycledTest.java", "diffHunk": "@@ -40,7 +40,7 @@\n public final class CycledTest {\n \n     @Test\n-    public void repeatIteratorTest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MzcwOQ=="}, "originalCommit": {"oid": "0b39c939841c9557772aff82e17efe7166a48e24"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 848, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}