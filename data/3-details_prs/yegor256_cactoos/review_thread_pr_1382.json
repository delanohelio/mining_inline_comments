{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzcxOTEy", "number": 1382, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODoxMToxMlrOD618iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDozNDo0NVrOD6_NfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI3ODUxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/NumberOfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODoxMToxMlrOGS5YmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODoxMToxMlrOGS5YmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NzczNg==", "bodyText": "@marceloamadeu please simplify this to be like the other tests (without using this lambda and ScalarHasValue)", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r422467736", "createdAt": "2020-05-09T08:11:12Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/NumberOfTest.java", "diffHunk": "@@ -98,7 +97,7 @@ public void failsIfTextDoesNotRepresentADouble() throws IOException {\n     @Test\n     public void parsesValueInt() throws IOException {\n         new Assertion<>(\n-            \"Can't parse into int\",\n+            \"Must parse into int\",\n             () -> new NumberOf(\"185\").value().intValue(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ba4f20dd8f60bbddf85d90540d60be0807c0f19"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI3ODc2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODoxMTo0MVrOGS5Yvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODoxMTo0MVrOGS5Yvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2Nzc3NQ==", "bodyText": "@marceloamadeu can you replac this with the HasSize matcher?", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r422467775", "createdAt": "2020-05-09T08:11:41Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -119,11 +119,11 @@ public void sensesChangesInMap() throws Exception {\n                 )\n             )\n         );\n-        MatcherAssert.assertThat(\n-            \"Can't sense the changes in the underlying map\",\n+        new Assertion<>(\n+            \"Must sense the changes in the underlying map\",\n             props.value().size(),\n             Matchers.not(Matchers.equalTo(props.value().size()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ba4f20dd8f60bbddf85d90540d60be0807c0f19"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTc5NjQ1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDozNDo0NVrOGTEvLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODowOTo0NFrOGUmQQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA==", "bodyText": "@marceloamadeu why not use the HasSize matcher as proposed?", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r422653740", "createdAt": "2020-05-10T14:34:45Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMDkwMw==", "bodyText": "@victornoel I couldn't use HasSize ... Any idea how I can fix the error:\nnew IsNot<>(new HasSize(props.value().size()))\n[ERROR]  cannot infer type arguments for org.llorllale.cactoos.matchers.Assertion<>                                                                               \n[ERROR]  reason: inference variable T has incompatible bounds\n[ERROR]  equality constraints: T,java.lang.Iterable<?>\n[ERROR]  lower bounds: java.lang.Integer\n\nTks", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r423820903", "createdAt": "2020-05-12T15:21:07Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA=="}, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMzAyMA==", "bodyText": "@marceloamadeu HasSize takes a collection or an iterable, not the result of calling size(), check its signature.\nAlso can you update your comment to specify who (me) you are talking to? It will have impact on the quality assessment done on my work at the end of my review.", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r423823020", "createdAt": "2020-05-12T15:23:43Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA=="}, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMzYyNg==", "bodyText": "@marceloamadeu or sorry, it's not exactly true, the first argument of the assertion should be a collection or iterable, not the argument of HasSize", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r423823626", "createdAt": "2020-05-12T15:24:31Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA=="}, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyODM2OQ==", "bodyText": "@victornoel Sorry ... I made the correction.\n\nAlso can you update your comment to specify who (me) you are talking to? It will have impact on the quality assessment done on my work at the end of my review.", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r423828369", "createdAt": "2020-05-12T15:30:50Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA=="}, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1MTQ1OA==", "bodyText": "@marceloamadeu thx", "url": "https://github.com/yegor256/cactoos/pull/1382#discussion_r424251458", "createdAt": "2020-05-13T08:09:44Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/scalar/PropertiesOfTest.java", "diffHunk": "@@ -122,7 +123,7 @@ public void sensesChangesInMap() throws Exception {\n         new Assertion<>(\n             \"Must sense the changes in the underlying map\",\n             props.value().size(),\n-            Matchers.not(Matchers.equalTo(props.value().size()))\n+            new IsNot<>(new IsEqual<>(props.value().size()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1Mzc0MA=="}, "originalCommit": {"oid": "d3d47fa9d11e38e9d11d9a177769bf6367c0c278"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 833, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}