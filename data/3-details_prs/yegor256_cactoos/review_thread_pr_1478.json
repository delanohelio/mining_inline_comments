{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NjM5NzU0", "number": 1478, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODowMjozOVrOEpuZSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoxMDozMFrOEpuiSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTg3MjExOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/list/ListIteratorNoNullsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODowMjozOVrOHbkhAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODowMjozOVrOHbkhAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3MTg3NA==", "bodyText": "@fabriciofx That's Exception not an Error", "url": "https://github.com/yegor256/cactoos/pull/1478#discussion_r498671874", "createdAt": "2020-10-02T08:02:39Z", "author": {"login": "andreoss"}, "path": "src/test/java/org/cactoos/list/ListIteratorNoNullsTest.java", "diffHunk": "@@ -135,4 +135,38 @@ void mustSetValueListIterator() {\n             new ScalarHasValue<>(4)\n         ).affirm();\n     }\n+\n+    @Test\n+    void mustThrowsErrorIfAddANullItem() {\n+        new Assertion<>(\n+            \"must throw error if add a null item\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88a65a2603fa6da928b36502d6d59b95d28c790"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTg5NTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoxMDozMFrOHbkvUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMzoyMTo1M1rOHjp0_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NTUzOA==", "bodyText": "@fabriciofx Using a static check method is not an option (i.e Objects.requireNonNull) here?\nThis check for NULL seems to be copy-pasted in many places.", "url": "https://github.com/yegor256/cactoos/pull/1478#discussion_r498675538", "createdAt": "2020-10-02T08:10:30Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "diffHunk": "@@ -97,11 +95,21 @@ public void remove() {\n \n     @Override\n     public void set(final T item) {\n+        if (item == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88a65a2603fa6da928b36502d6d59b95d28c790"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE0NzUxNw==", "bodyText": "@andreoss since this is the main responsibility of the class to check for null, I don't think it's really a problem. Also we tend to avoid using static methods such as Objects.requireNonNull when possible (I agree there are case it is just better to use the Java lib of course) and here it seems it is possible. In particular, it allows us to decide what is the error message here :)", "url": "https://github.com/yegor256/cactoos/pull/1478#discussion_r507147517", "createdAt": "2020-10-18T13:21:53Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "diffHunk": "@@ -97,11 +95,21 @@ public void remove() {\n \n     @Override\n     public void set(final T item) {\n+        if (item == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NTUzOA=="}, "originalCommit": {"oid": "e88a65a2603fa6da928b36502d6d59b95d28c790"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 766, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}