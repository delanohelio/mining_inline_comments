{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTcxMzM3", "number": 1477, "title": "For #1169: Use wild-card type parameters in ctor", "bodyText": "Per #1169:\n\nMake ctors accept wild-carded types", "createdAt": "2020-09-29T23:36:52Z", "url": "https://github.com/yegor256/cactoos/pull/1477", "merged": true, "mergeCommit": {"oid": "c5d7e57b98c5bf41ebbe2ed8ecddddf12c22e671"}, "closed": true, "closedAt": "2020-10-24T16:38:22Z", "author": {"login": "andreoss"}, "timelineItems": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNw2cvAH2gAyNDk1MTcxMzM3OjhhNTA3YWFjY2ZmN2E5NzgzZDZmOTdmYWYxYzJiYTczYWVmNGI0OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVtv99AFqTUxNjI4OTY4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a507aaccff7a9783d6f97faf1c2ba73aef4b493", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/8a507aaccff7a9783d6f97faf1c2ba73aef4b493", "committedDate": "2020-09-29T23:33:10Z", "message": "(#1169) Wild-card as ctor parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b6ed16a33b5f5b530bdf9792d61a2101212d89", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/22b6ed16a33b5f5b530bdf9792d61a2101212d89", "committedDate": "2020-09-29T23:33:36Z", "message": "(#1169) Wild-card as ctor parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f35c0500a7c079c23defaee2730e22bb765117", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/48f35c0500a7c079c23defaee2730e22bb765117", "committedDate": "2020-09-29T23:33:56Z", "message": "(#1169) Remove explicit type parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e7d43da20f2d7298da1b9f38d8129b0cfdde824", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/5e7d43da20f2d7298da1b9f38d8129b0cfdde824", "committedDate": "2020-09-29T23:34:29Z", "message": "(#1169) Wild-cards for parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be51d98851388ae0a651024e21c83977863485b", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/3be51d98851388ae0a651024e21c83977863485b", "committedDate": "2020-09-29T23:34:57Z", "message": "(#1169) Wild-cards for parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52b99151e51885faba4566cfe6f6821d4bd6630", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/f52b99151e51885faba4566cfe6f6821d4bd6630", "committedDate": "2020-09-29T23:53:47Z", "message": "(#1169) Undo wild-cards for varargs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/855be0f463b26d5c6812cf244931eded6c97d57a", "committedDate": "2020-09-29T23:54:30Z", "message": "(#1169) Add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODE1MjAx", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-500815201", "createdAt": "2020-10-02T01:32:18Z", "commit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMTozMjoxOFrOHbfNRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMTo0MTo1NlrOHbfUCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NDkwMQ==", "bodyText": "@andreoss Has been needed put a Mapped here? Why? An IteratorOf can be used instead?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498584901", "createdAt": "2020-10-02T01:32:18Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -76,21 +77,21 @@ public IterableOf(final List<X> list) {\n      * @param list The list\n      * @since 0.21\n      */\n-    public IterableOf(final Iterator<X> list) {\n+    public IterableOf(final Iterator<? extends X> list) {\n         this(() -> list);\n     }\n \n     /**\n      * Ctor.\n      * @param sclr The encapsulated iterator of x\n      */\n-    public IterableOf(final Scalar<Iterator<X>> sclr) {\n+    public IterableOf(final Scalar<Iterator<? extends X>> sclr) {\n         this.itr = sclr;\n     }\n \n     @Override\n     public Iterator<X> iterator() {\n-        return new Unchecked<>(this.itr).value();\n+        return new Mapped<>(x -> x, new Unchecked<>(this.itr).value());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NTIxNg==", "bodyText": "@andreoss Please, break the line here, putting one parameter for line.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498585216", "createdAt": "2020-10-02T01:33:59Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -54,7 +54,9 @@\n      * @param fst The first part of duplex iterator.\n      * @param snd The second part of duplex iterator.\n      */\n-    public Matched(final Iterable<X> fst, final Iterable<X> snd) {\n+    public Matched(\n+        final Iterable<? extends X> fst, final Iterable<? extends X> snd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NTI1MA==", "bodyText": "@andreoss the same above.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498585250", "createdAt": "2020-10-02T01:34:12Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -66,12 +68,12 @@ public Matched(final Iterable<X> fst, final Iterable<X> snd) {\n      */\n     public Matched(\n         final BiFunc<X, X, Boolean> fnc,\n-        final Iterable<X> fst, final Iterable<X> snd\n+        final Iterable<? extends X> fst, final Iterable<? extends X> snd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NTM4Ng==", "bodyText": "@andreoss the same above: why Mapped?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498585386", "createdAt": "2020-10-02T01:34:55Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterable/Solid.java", "diffHunk": "@@ -46,8 +46,8 @@ public Solid(final X... src) {\n      * Ctor.\n      * @param iterable The iterable\n      */\n-    public Solid(final Iterable<X> iterable) {\n-        super(new Synced<>(new Sticky<>(iterable)));\n+    public Solid(final Iterable<? extends X> iterable) {\n+        super(new Synced<>(new Sticky<>(new Mapped<>(x -> x, iterable))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NTQyNA==", "bodyText": "@andreoss the same above.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498585424", "createdAt": "2020-10-02T01:35:11Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterator/Filtered.java", "diffHunk": "@@ -75,7 +75,9 @@\n      * @param fnc Predicate\n      * @param src Source iterable\n      */\n-    public Filtered(final Func<X, Boolean> fnc, final Iterator<X> src) {\n+    public Filtered(\n+        final Func<X, Boolean> fnc, final Iterator<? extends X> src", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NTc1MQ==", "bodyText": "@andreoss the same above.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498585751", "createdAt": "2020-10-02T01:37:03Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/iterator/TailOf.java", "diffHunk": "@@ -41,16 +41,19 @@\n      * @param num Number of tail elements\n      * @param iterator Decorated iterator\n      */\n-    public TailOf(final int num, final Iterator<T> iterator) {\n+    public TailOf(final int num, final Iterator<? extends T> iterator) {\n         super(\n-            new Reversed<>(\n-                new HeadOf<>(\n-                    num,\n-                    new Reversed<>(\n-                        new IterableOf<>(iterator)\n+            new Mapped<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NjI3Nw==", "bodyText": "@andreoss the same above.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498586277", "createdAt": "2020-10-02T01:39:52Z", "author": {"login": "fabriciofx"}, "path": "src/main/java/org/cactoos/map/Synced.java", "diffHunk": "@@ -121,16 +125,18 @@ public Synced(final Map<X, Y> map, final Map.Entry<X, Y>... list) {\n      * @param list List of items\n      * @param <Z> Type of items in the list\n      */\n-    public <Z> Synced(final Func<Z, Map.Entry<X, Y>> entry,\n-        final Map<X, Y> map, final Iterable<Z> list) {\n+    public <Z> Synced(\n+        final Func<Z, Map.Entry<? extends X, ? extends Y>> entry,\n+        final Map<X, Y> map, final Iterable<Z> list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NjYzMw==", "bodyText": "@andreoss please, add more tests, for a map and the decorators where were changed.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r498586633", "createdAt": "2020-10-02T01:41:56Z", "author": {"login": "fabriciofx"}, "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -435,4 +439,25 @@ public void itemAndList() {\n             )\n         ).affirm();\n     }\n+\n+    @Test\n+    public void infersCorrectly() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac132dcebcfab9506c3394dc754ada6c31d015d", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/4ac132dcebcfab9506c3394dc754ada6c31d015d", "committedDate": "2020-10-03T18:38:16Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b26d57970423634c806b44b961bb763b9ef13e2", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/0b26d57970423634c806b44b961bb763b9ef13e2", "committedDate": "2020-10-03T18:38:30Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f33dbc3eb9356a63210a1333e3530e2245abf6d5", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/f33dbc3eb9356a63210a1333e3530e2245abf6d5", "committedDate": "2020-10-03T18:38:35Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMTQwMTE2", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-511140116", "createdAt": "2020-10-18T12:31:24Z", "commit": {"oid": "f33dbc3eb9356a63210a1333e3530e2245abf6d5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMjozMToyNVrOHjooSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMjozODo1NFrOHjoyAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzEyNzg4MQ==", "bodyText": "@andreoss to be complete, we need Func<? super X, Boolean>, so that we can write for example:\n Iterable<Double> res = new Filtered<Double>((Number d) -> d.doubleValue() > 0, new IterableOf<Double>(4.1));\nThat's why I guess we need a few tests..", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507127881", "createdAt": "2020-10-18T12:31:25Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Filtered.java", "diffHunk": "@@ -65,7 +65,7 @@ public Filtered(final Func<X, Boolean> fnc, final X... src) {\n      * @param fnc Predicate\n      * @param src Source iterable\n      */\n-    public Filtered(final Func<X, Boolean> fnc, final Iterable<X> src) {\n+    public Filtered(final Func<X, Boolean> fnc, final Iterable<? extends X> src) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33dbc3eb9356a63210a1333e3530e2245abf6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzEzMDE2Nw==", "bodyText": "@andreoss here I think we need:\n\nto move the the X argument at the constructor level, it's not needed at the class level IMHO\nhave Func<? super X, ? extends Y> to be able to express more things", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507130167", "createdAt": "2020-10-18T12:38:17Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Mapped.java", "diffHunk": "@@ -51,7 +51,7 @@ public Mapped(final Func<X, Y> fnc, final X... src) {\n      * @param fnc Func\n      * @param src Source iterable\n      */\n-    public Mapped(final Func<X, Y> fnc, final Iterable<X> src) {\n+    public Mapped(final Func<X, Y> fnc, final Iterable<? extends X> src) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33dbc3eb9356a63210a1333e3530e2245abf6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzEzMDM2OQ==", "bodyText": "@andreoss here I think it should be BiFunc<? super X, ? super X, Boolean>", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507130369", "createdAt": "2020-10-18T12:38:54Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -66,12 +69,13 @@ public Matched(final Iterable<X> fst, final Iterable<X> snd) {\n      */\n     public Matched(\n         final BiFunc<X, X, Boolean> fnc,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33dbc3eb9356a63210a1333e3530e2245abf6d5"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a15d47d7156e88587621189b65ce17e5fcd5bd7", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/5a15d47d7156e88587621189b65ce17e5fcd5bd7", "committedDate": "2020-10-18T23:07:48Z", "message": "(#1169) Add a todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f742e5cddd453478a58d674aa4e94857b5c10e7", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/8f742e5cddd453478a58d674aa4e94857b5c10e7", "committedDate": "2020-10-18T23:12:12Z", "message": "(#1169) Correct types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e23d8861c13d8a523c79e5e57470cbe7e8c25a5", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/7e23d8861c13d8a523c79e5e57470cbe7e8c25a5", "committedDate": "2020-10-18T23:19:13Z", "message": "(#1169) Correct types according to PECS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dc6445b13e97146e3a006d8c4ca78454afbdf47", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/5dc6445b13e97146e3a006d8c4ca78454afbdf47", "committedDate": "2020-10-18T23:25:21Z", "message": "(#1169) Correct types according to PECS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7b0539b862e9964a9f07ff8827a24a35e7c610", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/8c7b0539b862e9964a9f07ff8827a24a35e7c610", "committedDate": "2020-10-18T23:36:46Z", "message": "(#1169) Qulice compliance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a268d917eb02720ee62cb9d48881f9d4b1aacd", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/c2a268d917eb02720ee62cb9d48881f9d4b1aacd", "committedDate": "2020-10-18T23:40:52Z", "message": "(#1169) PDD compliance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/6b685467845798223193b2ff1f21e5c1388f91ef", "committedDate": "2020-10-19T00:12:17Z", "message": "(#1169) PDD compliance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNDc1ODg0", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-511475884", "createdAt": "2020-10-19T07:25:31Z", "commit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzoyNTozMVrOHkA_Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzozNjo1OVrOHkBWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNjkyNw==", "bodyText": "@andreoss not possibly, this should be done too :) also IMHO there is no reason for those two tasks to be done as once, just say in the todo what is to be done, and then the assignee will decide if everything can be done at once.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507526927", "createdAt": "2020-10-19T07:25:31Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Mapped.java", "diffHunk": "@@ -33,6 +33,10 @@\n  * @param <X> Type of source item\n  * @param <Y> Type of target item\n  * @since 0.1\n+ * @todo #1169:30m Remove type parameter X from this\n+ *  class definition, and put extra type parameter on each ctor.\n+ *  Possibly, the same change is possible in iterator.Mapped,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNzIzMg==", "bodyText": "@andreoss it's missing the ? extend Y in the second func type parameter.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507527232", "createdAt": "2020-10-19T07:26:11Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Mapped.java", "diffHunk": "@@ -42,7 +46,7 @@\n      * @param src Source iterable\n      */\n     @SafeVarargs\n-    public Mapped(final Func<X, Y> fnc, final X... src) {\n+    public Mapped(final Func<? super X, Y> fnc, final X... src) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyODUwMA==", "bodyText": "@andreoss we are missing the ? extends X on the src parameter here", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507528500", "createdAt": "2020-10-19T07:28:37Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Filtered.java", "diffHunk": "@@ -78,7 +78,7 @@ public Filtered(final Func<X, Boolean> fnc, final Iterable<X> src) {\n      * @param src Source iterable\n      * @param fnc Predicate\n      */\n-    public Filtered(final Iterable<X> src, final Func<X, Scalar<Boolean>> fnc) {\n+    public Filtered(final Iterable<X> src, final Func<? super X, Scalar<Boolean>> fnc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyOTc3OQ==", "bodyText": "@andreoss let's replace the type of snd with Iterable<? extends Y> with Y\u00a0being a type declared at the constructor level (or you can just add a todo). There is no need for this second parameter to be so constrained in types.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507529779", "createdAt": "2020-10-19T07:31:01Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -65,13 +68,14 @@ public Matched(final Iterable<X> fst, final Iterable<X> snd) {\n      * @param snd The second part of duplex iterator.\n      */\n     public Matched(\n-        final BiFunc<X, X, Boolean> fnc,\n-        final Iterable<X> fst, final Iterable<X> snd\n+        final BiFunc<? super X, ? super X, Boolean> fnc,\n+        final Iterable<? extends X> fst,\n+        final Iterable<? extends X> snd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMDA5Ng==", "bodyText": "@andreoss here too let's apply the same thing with super and extends on the func", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507530096", "createdAt": "2020-10-19T07:31:43Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterator/Mapped.java", "diffHunk": "@@ -53,7 +53,7 @@\n      * @param func Func\n      * @param iterator Source iterator\n      */\n-    public Mapped(final Func<X, Y> func, final Iterator<X> iterator) {\n+    public Mapped(final Func<X, Y> func, final Iterator<? extends X> iterator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMDg1Nw==", "bodyText": "@andreoss I believe the func should be taking a ? super Z no?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507530857", "createdAt": "2020-10-19T07:33:18Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/map/MapOf.java", "diffHunk": "@@ -106,8 +104,10 @@ public MapOf(final Map<X, Y> src, final Map.Entry<X, Y>... list) {\n      * @param <Z> Type of items in the list\n      * @since 0.11\n      */\n-    public <Z> MapOf(final Func<Z, Map.Entry<X, Y>> entry,\n-        final Iterable<Z> list) {\n+    public <Z> MapOf(\n+        final Func<Z, Map.Entry<? extends X, ? extends Y>> entry,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMTExNw==", "bodyText": "@andreoss here too let's apply the same concepts", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507531117", "createdAt": "2020-10-19T07:33:46Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/map/Synced.java", "diffHunk": "@@ -70,9 +70,12 @@ public Synced(final Map<X, Y> map, final Map.Entry<X, Y>... list) {\n      * @param <Z> Type of items in the list\n      * @checkstyle ParameterNumberCheck (5 lines)\n      */\n-    public <Z> Synced(final Func<Z, X> key,\n-        final Func<Z, Y> value, final Map<X, Y> map,\n-        final Iterable<Z> list) {\n+    public <Z> Synced(\n+        final Func<Z, X> key,\n+        final Func<Z, Y> value,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMTUxOQ==", "bodyText": "@andreoss I believe the comparator should take a ? super T here too (a comparator is basically a func from T,T to bool :)", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507531519", "createdAt": "2020-10-19T07:34:37Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/set/Sorted.java", "diffHunk": "@@ -54,7 +54,10 @@ public Sorted(final Comparator<T> cmp, final T... array) {\n      * @param src An {@link Iterable}\n      */\n     @SuppressWarnings(\"PMD.ConstructorOnlyInitializesOrCallOtherConstructors\")\n-    public Sorted(final Comparator<T> cmp, final Iterable<T> src) {\n+    public Sorted(\n+        final Comparator<T> cmp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b685467845798223193b2ff1f21e5c1388f91ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMjg0MQ==", "bodyText": "@andreoss please add a todo so that this can be investigated and the code simplified, there must be some way to do something simpler.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r507532841", "createdAt": "2020-10-19T07:36:59Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -76,21 +77,21 @@ public IterableOf(final List<X> list) {\n      * @param list The list\n      * @since 0.21\n      */\n-    public IterableOf(final Iterator<X> list) {\n+    public IterableOf(final Iterator<? extends X> list) {\n         this(() -> list);\n     }\n \n     /**\n      * Ctor.\n      * @param sclr The encapsulated iterator of x\n      */\n-    public IterableOf(final Scalar<Iterator<X>> sclr) {\n+    public IterableOf(final Scalar<Iterator<? extends X>> sclr) {\n         this.itr = sclr;\n     }\n \n     @Override\n     public Iterator<X> iterator() {\n-        return new Unchecked<>(this.itr).value();\n+        return new Mapped<>(x -> x, new Unchecked<>(this.itr).value());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4NDkwMQ=="}, "originalCommit": {"oid": "855be0f463b26d5c6812cf244931eded6c97d57a"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7293873d2a6eb9d74a57ef20312a05af37c511", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/eb7293873d2a6eb9d74a57ef20312a05af37c511", "committedDate": "2020-10-19T15:59:24Z", "message": "(#1169) Apply PECS to Mapped"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eac9b3794df23ff9b648d10e9099b0d7d2730f3b", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/eac9b3794df23ff9b648d10e9099b0d7d2730f3b", "committedDate": "2020-10-19T15:59:49Z", "message": "(#1169) Reuse `scalar.Mapped'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a09e16c5d23139009f4f1f80aa3edf98aa53ad35", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/a09e16c5d23139009f4f1f80aa3edf98aa53ad35", "committedDate": "2020-10-19T16:00:27Z", "message": "(#1169) Move type parameter to ctor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749b19a5b56e2443e5dc43fb7fe63dad726a84fb", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/749b19a5b56e2443e5dc43fb7fe63dad726a84fb", "committedDate": "2020-10-19T16:01:00Z", "message": "(#1169) Use inferred type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0135a3726297f1f7b5aeceacf665ef2829b034d3", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/0135a3726297f1f7b5aeceacf665ef2829b034d3", "committedDate": "2020-10-19T16:01:19Z", "message": "(#1169) Apply PECS in `iterable.Synced'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a9e1fee11d1a35e888c9ef61ee7eaeeb98be0f", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/c0a9e1fee11d1a35e888c9ef61ee7eaeeb98be0f", "committedDate": "2020-10-19T16:01:48Z", "message": "(#1169) Apply PECS in `iterator.Sorted'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d795aa606200ea886e51befb9c1235591c388be", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/4d795aa606200ea886e51befb9c1235591c388be", "committedDate": "2020-10-19T16:02:05Z", "message": "(#1169) Fix types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "690a9b08a3c6fde6eadb72dc7c64c9c92b7eb75e", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/690a9b08a3c6fde6eadb72dc7c64c9c92b7eb75e", "committedDate": "2020-10-19T16:02:29Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "867b61b7ab7c4f98f0febba4baf234a07bc6e64a", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/867b61b7ab7c4f98f0febba4baf234a07bc6e64a", "committedDate": "2020-10-19T16:10:20Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "984f880496fc95f38e75b9b416f640cdf919868a", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/984f880496fc95f38e75b9b416f640cdf919868a", "committedDate": "2020-10-19T16:10:31Z", "message": "(#1169) Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "100a03c78d96f0035f9ce161308ef117f58b100d", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/100a03c78d96f0035f9ce161308ef117f58b100d", "committedDate": "2020-10-19T16:10:58Z", "message": "(#1169) Fix FindBugs complain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83f419854ad05d195d20cecb26ab1516caad57f5", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/83f419854ad05d195d20cecb26ab1516caad57f5", "committedDate": "2020-10-19T16:23:21Z", "message": "(#1169) Removed `Mapped'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86b8dbabee297c08707f602e202b8bcbd1dba4a6", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/86b8dbabee297c08707f602e202b8bcbd1dba4a6", "committedDate": "2020-10-19T16:23:34Z", "message": "(#1169) Replace `iterator.Mapped' with casting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97856927ef47a651fad3a39a232b8de4551c35ce", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/97856927ef47a651fad3a39a232b8de4551c35ce", "committedDate": "2020-10-19T16:45:48Z", "message": "(#1169) Apply PECS to MapOf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05655404b739ca708d9f261041292315cac9baa2", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/05655404b739ca708d9f261041292315cac9baa2", "committedDate": "2020-10-19T16:46:37Z", "message": "(#1169) Apply PECS to `map.Synced'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b9dbef3ca2c55025a5d803202c82f4713b5f954", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/8b9dbef3ca2c55025a5d803202c82f4713b5f954", "committedDate": "2020-10-19T17:01:59Z", "message": "(#1169) Add second type parameter for second duplex operator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe3931f8c6d17ce42ea9cd27804ed1b002b5ed7", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/dbe3931f8c6d17ce42ea9cd27804ed1b002b5ed7", "committedDate": "2020-10-19T17:03:31Z", "message": "(#1169) Use wild-card type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ee1b5d5aabf239d91c03e61828e8a6b052f4958", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/2ee1b5d5aabf239d91c03e61828e8a6b052f4958", "committedDate": "2020-10-19T17:17:22Z", "message": "(#1169) Apply PECS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cc60e869113ca0044ff5b9c6094c6ff5b7a2529", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/9cc60e869113ca0044ff5b9c6094c6ff5b7a2529", "committedDate": "2020-10-19T17:22:13Z", "message": "(#1169) Apply PECS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/09a4c60635dabe89cca1b76eef0ba40a3c2e566a", "committedDate": "2020-10-19T17:23:07Z", "message": "(#1169) Fix indentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODk5MjA4", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-512899208", "createdAt": "2020-10-20T16:04:47Z", "commit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjowNDo0N1rOHlFoug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoxNjo0MFrOHlGYeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1MTcwNg==", "bodyText": "@andreoss I see you replaced the usage of Mapped with a cast, so this todo should be updated I think. Actually, I'm wondering if casting is not simply acceptable here\u2026 WDYT?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508651706", "createdAt": "2020-10-20T16:04:47Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -45,14 +45,16 @@\n  * @param <X> Type of item\n  * @since 0.12\n  * @checkstyle ClassDataAbstractionCouplingCheck (550 lines)\n+ * @todo #1169:30m This class uses Mapped in order to coerce wild-card type.\n+ *  Research a more eloquent solution and remove usage of Mapped.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NDI1NQ==", "bodyText": "@andreoss here we have mapped, we could either do casting as discussed above or add a todo to find a better solution. But I\u00a0would prefer that if we choose one way, we apply the same everywhere though.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508654255", "createdAt": "2020-10-20T16:07:20Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Solid.java", "diffHunk": "@@ -46,8 +46,8 @@ public Solid(final X... src) {\n      * Ctor.\n      * @param iterable The iterable\n      */\n-    public Solid(final Iterable<X> iterable) {\n-        super(new Synced<>(new Sticky<>(iterable)));\n+    public Solid(final Iterable<? extends X> iterable) {\n+        super(new Synced<>(new Sticky<>(new Mapped<>(x -> x, iterable))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NTAzOA==", "bodyText": "@andreoss same here about cast vs mapped, and also about the todo", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508655038", "createdAt": "2020-10-20T16:07:59Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Synced.java", "diffHunk": "@@ -73,15 +77,15 @@ public Synced(final Iterable<X> iterable) {\n      * @param lck The lock to synchronize with.\n      * @param iterable The iterable synchronize access to.\n      */\n-    public Synced(final Object lck, final Iterable<X> iterable) {\n+    public Synced(final Object lck, final Iterable<? extends X> iterable) {\n         this.origin = iterable;\n         this.lock = lck;\n     }\n \n     @Override\n     public Iterator<X> iterator() {\n         synchronized (this.lock) {\n-            return this.origin.iterator();\n+            return new Mapped<>(x -> x, this.origin.iterator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1Nzc3Ng==", "bodyText": "@andreoss why change the implementation of next()? Wasn't the previous one correct?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508657776", "createdAt": "2020-10-20T16:10:39Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterator/Mapped.java", "diffHunk": "@@ -24,53 +24,59 @@\n package org.cactoos.iterator;\n \n import java.util.Iterator;\n+import java.util.NoSuchElementException;\n import org.cactoos.Func;\n-import org.cactoos.func.UncheckedFunc;\n+import org.cactoos.scalar.Unchecked;\n \n /**\n  * Mapped iterator.\n  *\n- * <p>There is no thread-safety guarantee.\n+ * <p>\n+ * There is no thread-safety guarantee.\n  *\n- * @param <X> Type of source item\n  * @param <Y> Type of target item\n  * @since 0.1\n  */\n-public final class Mapped<X, Y> implements Iterator<Y> {\n-\n-    /**\n-     * Iterator.\n-     */\n-    private final Iterator<X> origin;\n-\n-    /**\n-     * Function.\n-     */\n-    private final Func<X, Y> fnc;\n+public final class Mapped<Y> extends IteratorEnvelope<Y> {\n \n     /**\n      * Ctor.\n      * @param func Func\n      * @param iterator Source iterator\n+     * @param <X> Type of item\n+     * @checkstyle AnonInnerLengthCheck (60 lines)\n      */\n-    public Mapped(final Func<X, Y> func, final Iterator<X> iterator) {\n-        this.origin = iterator;\n-        this.fnc = func;\n-    }\n+    public <X> Mapped(\n+        final Func<? super X, ? extends Y> func,\n+        final Iterator<? extends X> iterator\n+    ) {\n+        super(\n+            new Iterator<Y>() {\n \n-    @Override\n-    public boolean hasNext() {\n-        return this.origin.hasNext();\n-    }\n+                @Override\n+                public boolean hasNext() {\n+                    return iterator.hasNext();\n+                }\n \n-    @Override\n-    public Y next() {\n-        return new UncheckedFunc<>(this.fnc).apply(this.origin.next());\n-    }\n+                @Override\n+                public Y next() {\n+                    if (this.hasNext()) {\n+                        return new Unchecked<>(\n+                            new org.cactoos.scalar.Mapped<>(\n+                                func, iterator::next\n+                            )\n+                        ).value();\n+                    }\n+                    throw new NoSuchElementException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MDc2Nw==", "bodyText": "@andreoss here we cannot use MapOf because it would create a new map instead of making the wrapped one synchronized.", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508660767", "createdAt": "2020-10-20T16:13:41Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/map/Synced.java", "diffHunk": "@@ -139,16 +156,19 @@ public Synced(final Iterable<Map.Entry<X, Y>> list) {\n      * @param map Pre-existing map we want to extend\n      * @param list Entries for the entries\n      */\n-    public Synced(final Map<X, Y> map,\n-        final Iterable<Map.Entry<X, Y>> list) {\n+    public Synced(\n+        final Map<? extends X, ? extends Y> map,\n+        final Iterable<Map.Entry<? extends X, ? extends Y>> list\n+    ) {\n         this(new MapOf<>(map, list));\n     }\n \n     /**\n      * Ctor.\n      * @param map The map\n      */\n-    public Synced(final Map<X, Y> map) {\n-        super(Collections.synchronizedMap(map));\n+    @SuppressWarnings(\"unchecked\")\n+    public Synced(final Map<? extends X, ? extends Y> map) {\n+        super(Collections.synchronizedMap(new MapOf<>(map)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MTg5Mg==", "bodyText": "@andreoss here there is still one comparator without the ? super T", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508661892", "createdAt": "2020-10-20T16:14:44Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/set/Sorted.java", "diffHunk": "@@ -54,7 +54,10 @@ public Sorted(final Comparator<T> cmp, final T... array) {\n      * @param src An {@link Iterable}\n      */\n     @SuppressWarnings(\"PMD.ConstructorOnlyInitializesOrCallOtherConstructors\")\n-    public Sorted(final Comparator<T> cmp, final Iterable<T> src) {\n+    public Sorted(\n+        final Comparator<T> cmp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MjM4NA==", "bodyText": "@andreoss why is this needed?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508662384", "createdAt": "2020-10-20T16:15:09Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/iterable/MappedTest.java", "diffHunk": "@@ -43,10 +42,11 @@\n final class MappedTest {\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MzYyMw==", "bodyText": "@andreoss let's use Assertion here instead of static method MatcherAssert.assertThat", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508663623", "createdAt": "2020-10-20T16:16:13Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/map/GroupedTest.java", "diffHunk": "@@ -83,4 +83,22 @@ void groupedByOneHasEntries() throws Exception {\n             )\n         );\n     }\n+\n+    @Test\n+    void groupedBySuperType() throws Exception {\n+        MatcherAssert.assertThat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MzkyOA==", "bodyText": "@andreoss while we are at it, let's put an upper case at the beginning of the sentence", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r508663928", "createdAt": "2020-10-20T16:16:40Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -435,4 +439,25 @@ public void itemAndList() {\n             )\n         ).affirm();\n     }\n+\n+    @Test\n+    public void infersCorrectly() {\n+        new Assertion<>(\n+            \"must be able to infer type of elements\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "582e8a4cc1b1327304c06bb55078e8d2e109f83d", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/582e8a4cc1b1327304c06bb55078e8d2e109f83d", "committedDate": "2020-10-20T16:22:47Z", "message": "(#1169) Remove todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd6b6ede796bc00f45b79a875b2ed587390a4bdc", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/cd6b6ede796bc00f45b79a875b2ed587390a4bdc", "committedDate": "2020-10-20T16:35:23Z", "message": "(#1169) Use `Assertion'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b148b158a2df9e0ccb1301803cf37acd392e0a74", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/b148b158a2df9e0ccb1301803cf37acd392e0a74", "committedDate": "2020-10-20T16:35:40Z", "message": "(#1169) Start sentence with upper case letter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb2bc717fffc30007f4aa636f621731e4e678e0d", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/cb2bc717fffc30007f4aa636f621731e4e678e0d", "committedDate": "2020-10-20T16:36:02Z", "message": "(#1169) Remove unnecessary suppression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35e6023fb7a9ebe0676654638ef43739cc5591fe", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/35e6023fb7a9ebe0676654638ef43739cc5591fe", "committedDate": "2020-10-20T16:36:30Z", "message": "(#1169) Remove unnecessary `Mapped'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3b0216baf360e87dc37a785d00b6f23f691124", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/9d3b0216baf360e87dc37a785d00b6f23f691124", "committedDate": "2020-10-20T16:36:52Z", "message": "(#1169) Use casting instead of `Mapped'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da8dcbeae1400d42be868ba2e57ddfb97c0a5e11", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/da8dcbeae1400d42be868ba2e57ddfb97c0a5e11", "committedDate": "2020-10-20T16:52:44Z", "message": "(#1169) Apply PECS for `iterable.Sorted'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bc13e5b5f098ce6674dacc41db48d0e79bbc826", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/2bc13e5b5f098ce6674dacc41db48d0e79bbc826", "committedDate": "2020-10-20T18:47:28Z", "message": "(#1169) Do not copy map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a691d546b170c0257157bb488649e7d65c582d4", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/5a691d546b170c0257157bb488649e7d65c582d4", "committedDate": "2020-10-20T23:49:16Z", "message": "(#1169) Use `Assertion'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDc5Nzc4", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-513479778", "createdAt": "2020-10-21T09:26:15Z", "commit": {"oid": "5a691d546b170c0257157bb488649e7d65c582d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyNjoxNVrOHlitNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyODo1NlrOHli0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyNzk5MA==", "bodyText": "@andreoss I see, personally I find that scalar.Mapped makes things harder to read but it is correct anyway, let's keep it like you wrote it :)", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r509127990", "createdAt": "2020-10-21T09:26:15Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterator/Mapped.java", "diffHunk": "@@ -24,53 +24,59 @@\n package org.cactoos.iterator;\n \n import java.util.Iterator;\n+import java.util.NoSuchElementException;\n import org.cactoos.Func;\n-import org.cactoos.func.UncheckedFunc;\n+import org.cactoos.scalar.Unchecked;\n \n /**\n  * Mapped iterator.\n  *\n- * <p>There is no thread-safety guarantee.\n+ * <p>\n+ * There is no thread-safety guarantee.\n  *\n- * @param <X> Type of source item\n  * @param <Y> Type of target item\n  * @since 0.1\n  */\n-public final class Mapped<X, Y> implements Iterator<Y> {\n-\n-    /**\n-     * Iterator.\n-     */\n-    private final Iterator<X> origin;\n-\n-    /**\n-     * Function.\n-     */\n-    private final Func<X, Y> fnc;\n+public final class Mapped<Y> extends IteratorEnvelope<Y> {\n \n     /**\n      * Ctor.\n      * @param func Func\n      * @param iterator Source iterator\n+     * @param <X> Type of item\n+     * @checkstyle AnonInnerLengthCheck (60 lines)\n      */\n-    public Mapped(final Func<X, Y> func, final Iterator<X> iterator) {\n-        this.origin = iterator;\n-        this.fnc = func;\n-    }\n+    public <X> Mapped(\n+        final Func<? super X, ? extends Y> func,\n+        final Iterator<? extends X> iterator\n+    ) {\n+        super(\n+            new Iterator<Y>() {\n \n-    @Override\n-    public boolean hasNext() {\n-        return this.origin.hasNext();\n-    }\n+                @Override\n+                public boolean hasNext() {\n+                    return iterator.hasNext();\n+                }\n \n-    @Override\n-    public Y next() {\n-        return new UncheckedFunc<>(this.fnc).apply(this.origin.next());\n-    }\n+                @Override\n+                public Y next() {\n+                    if (this.hasNext()) {\n+                        return new Unchecked<>(\n+                            new org.cactoos.scalar.Mapped<>(\n+                                func, iterator::next\n+                            )\n+                        ).value();\n+                    }\n+                    throw new NoSuchElementException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1Nzc3Ng=="}, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyOTQ4NA==", "bodyText": "@andreoss  seeing this change, I wonder if the next step wouldn't be to do the same thing with covariance with scalars? Do you have an opinion on this?", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r509129484", "createdAt": "2020-10-21T09:28:29Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/scalar/Mapped.java", "diffHunk": "@@ -28,45 +28,34 @@\n import org.cactoos.Scalar;\n \n /**\n- * {@link Scalar} that apply a {@link Func} to the result\n- * of another {@link Scalar}.\n+ * {@link Scalar} that apply a {@link Func} to the result of another\n+ * {@link Scalar}.\n  *\n- * <p>There is no thread-safety guarantee.\n+ * <p>\n+ * There is no thread-safety guarantee.\n  *\n- * <p>This class implements {@link Scalar}, which throws a checked\n- * {@link IOException}. This may not be convenient in many cases. To make\n- * it more convenient and get rid of the checked exception you can\n- * use the {@link Unchecked} decorator.</p>\n+ * <p>\n+ * This class implements {@link Scalar}, which throws a checked\n+ * {@link IOException}. This may not be convenient in many cases. To make it\n+ * more convenient and get rid of the checked exception you can use the\n+ * {@link Unchecked} decorator.\n+ * </p>\n  *\n- * @param <T> Type of wrapped scalar result\n  * @param <U> Type of result\n  * @since 1.0.0\n  */\n-public final class Mapped<T, U> implements Scalar<U> {\n-\n-    /**\n-     * Original scalar.\n-     */\n-    private final Scalar<T> origin;\n-\n-    /**\n-     * Func.\n-     */\n-    private final Func<T, U> func;\n-\n+public final class Mapped<U> extends ScalarEnvelope<U> {\n     /**\n      * Ctor.\n-     * @param mapping Fun to apply\n-     * @param scalar Encapsulated scalar\n+     * @param func Map function.\n+     * @param scalar Scalar.\n+     * @param <T> Type of input.\n      */\n-    public Mapped(final Func<T, U> mapping, final Scalar<T> scalar) {\n-        this.origin = scalar;\n-        this.func = mapping;\n-    }\n-\n-    @Override\n-    public U value() throws Exception {\n-        return this.func.apply(this.origin.value());\n+    public <T> Mapped(\n+        final Func<? super T, ? extends U> func,\n+        final Scalar<? extends T> scalar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a691d546b170c0257157bb488649e7d65c582d4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyOTgxMQ==", "bodyText": "@andreoss I still don't see it in the PR's diff...", "url": "https://github.com/yegor256/cactoos/pull/1477#discussion_r509129811", "createdAt": "2020-10-21T09:28:56Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/set/Sorted.java", "diffHunk": "@@ -54,7 +54,10 @@ public Sorted(final Comparator<T> cmp, final T... array) {\n      * @param src An {@link Iterable}\n      */\n     @SuppressWarnings(\"PMD.ConstructorOnlyInitializesOrCallOtherConstructors\")\n-    public Sorted(final Comparator<T> cmp, final Iterable<T> src) {\n+    public Sorted(\n+        final Comparator<T> cmp,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MTg5Mg=="}, "originalCommit": {"oid": "09a4c60635dabe89cca1b76eef0ba40a3c2e566a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce9cadc0d37faafac4f1590a90f8a699b802b198", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/ce9cadc0d37faafac4f1590a90f8a699b802b198", "committedDate": "2020-10-21T11:16:49Z", "message": "(#1169) Use PECS in `set.Sorted'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08038b33c27ce7db2b3b1f9b745eb9e17a69c462", "author": {"user": {"login": "andreoss", "name": null}}, "url": "https://github.com/yegor256/cactoos/commit/08038b33c27ce7db2b3b1f9b745eb9e17a69c462", "committedDate": "2020-10-21T14:05:32Z", "message": "(#1169) Improve coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjg5Njg4", "url": "https://github.com/yegor256/cactoos/pull/1477#pullrequestreview-516289688", "createdAt": "2020-10-24T16:27:46Z", "commit": {"oid": "08038b33c27ce7db2b3b1f9b745eb9e17a69c462"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 519, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}