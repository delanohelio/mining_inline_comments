{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODQ4OTE0", "number": 1358, "title": "1308 fixed IterableOf.equals and add required tests", "bodyText": "#1308\nFixed the problem when two Iterates of different sizes returned the wrong result on method equals.", "createdAt": "2020-04-28T02:44:22Z", "url": "https://github.com/yegor256/cactoos/pull/1358", "merged": true, "mergeCommit": {"oid": "9b4627ef6a809329510cf8108d5b521eaec7dd46"}, "closed": true, "closedAt": "2020-05-03T18:04:19Z", "author": {"login": "lxpdd"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb5wptAH2gAyNDA5ODQ4OTE0OjMwNjM2ODUyM2FkZjk4ZTZkMDdjZDA5ZGNjZDliY2FlY2NlNjJjOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdSQo0gFqTQwNDUxMTc5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "306368523adf98e6d07cd09dccd9bcaecce62c8e", "author": {"user": {"login": "lxpdd", "name": "Alexander Poddubny"}}, "url": "https://github.com/yegor256/cactoos/commit/306368523adf98e6d07cd09dccd9bcaecce62c8e", "committedDate": "2020-04-28T01:39:46Z", "message": "fixed IterableOf.equals and add required tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91784509897858626f6ab11a7f0ba949de245599", "author": {"user": {"login": "lxpdd", "name": "Alexander Poddubny"}}, "url": "https://github.com/yegor256/cactoos/commit/91784509897858626f6ab11a7f0ba949de245599", "committedDate": "2020-04-28T01:40:47Z", "message": "remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjAzMzI4", "url": "https://github.com/yegor256/cactoos/pull/1358#pullrequestreview-401603328", "createdAt": "2020-04-28T08:19:15Z", "commit": {"oid": "91784509897858626f6ab11a7f0ba949de245599"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODoxOToxNVrOGNIZFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODoxOToxNVrOGNIZFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQyMjE2NA==", "bodyText": "@lxpdd even though this seems technically correct (judging by the test), this is not well readable and maintainable. I propose to add a todo here to transform this code in something more object oriented. I'm not sure how though, but there must be more declarative solutions that that.", "url": "https://github.com/yegor256/cactoos/pull/1358#discussion_r416422164", "createdAt": "2020-04-28T08:19:15Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -155,13 +155,13 @@ public boolean equals(final Object other) {\n                     () -> Iterable.class.isAssignableFrom(other.getClass()),\n                     () -> {\n                         final Iterable<?> compared = (Iterable<?>) other;\n-                        final Iterator<?> iterator = compared.iterator();\n-                        return new Unchecked<>(\n-                            new And(\n-                                (X input) -> input.equals(iterator.next()),\n-                                this\n-                            )\n-                        ).value();\n+                        final Iterator<X> ftr = this.iterator();\n+                        final Iterator<?> str = compared.iterator();\n+                        boolean failed = false;\n+                        while (ftr.hasNext() && str.hasNext() && (!failed)) {\n+                            failed = !ftr.next().equals(str.next());\n+                        }\n+                        return !failed && !ftr.hasNext() && !str.hasNext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91784509897858626f6ab11a7f0ba949de245599"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "570009949e156d040061d2c498ef8512e16a93ea", "author": {"user": {"login": "lxpdd", "name": "Alexander Poddubny"}}, "url": "https://github.com/yegor256/cactoos/commit/570009949e156d040061d2c498ef8512e16a93ea", "committedDate": "2020-04-28T11:19:52Z", "message": "- Fixed Matched class\n- Changed IterableOf.equals style for more declarative."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDA0NjQ1", "url": "https://github.com/yegor256/cactoos/pull/1358#pullrequestreview-402004645", "createdAt": "2020-04-28T16:23:09Z", "commit": {"oid": "570009949e156d040061d2c498ef8512e16a93ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyMzowOVrOGNcaRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyMzowOVrOGNcaRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDE1MA==", "bodyText": "@lxpdd in that case let's use ScalarWithFallback instead of Checked so that we don't have to handle the exception catching.", "url": "https://github.com/yegor256/cactoos/pull/1358#discussion_r416750150", "createdAt": "2020-04-28T16:23:09Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -154,14 +158,22 @@ public boolean equals(final Object other) {\n                     () -> other != null,\n                     () -> Iterable.class.isAssignableFrom(other.getClass()),\n                     () -> {\n-                        final Iterable<?> compared = (Iterable<?>) other;\n-                        final Iterator<?> iterator = compared.iterator();\n-                        return new Unchecked<>(\n-                            new And(\n-                                (X input) -> input.equals(iterator.next()),\n-                                this\n-                            )\n-                        ).value();\n+                        final Iterable<X> compared = (Iterable<X>) other;\n+                        boolean equals;\n+                        try {\n+                            equals = new Checked<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570009949e156d040061d2c498ef8512e16a93ea"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7584ff817093dee60d1a8cb19eb9707c623577d5", "author": {"user": {"login": "lxpdd", "name": "Alexander Poddubny"}}, "url": "https://github.com/yegor256/cactoos/commit/7584ff817093dee60d1a8cb19eb9707c623577d5", "committedDate": "2020-04-28T21:40:02Z", "message": "Use ScalarWithFallback object instead of try-catch operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNTcwMTIz", "url": "https://github.com/yegor256/cactoos/pull/1358#pullrequestreview-402570123", "createdAt": "2020-04-29T11:14:29Z", "commit": {"oid": "7584ff817093dee60d1a8cb19eb9707c623577d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxNDoyOVrOGN6LaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxNDoyOVrOGN6LaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNzg2NA==", "bodyText": "@lxpdd I think you can use directly true and false, no need to go through an extra layer of indirection", "url": "https://github.com/yegor256/cactoos/pull/1358#discussion_r417237864", "createdAt": "2020-04-29T11:14:29Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -154,12 +159,20 @@ public boolean equals(final Object other) {\n                     () -> other != null,\n                     () -> Iterable.class.isAssignableFrom(other.getClass()),\n                     () -> {\n-                        final Iterable<?> compared = (Iterable<?>) other;\n-                        final Iterator<?> iterator = compared.iterator();\n-                        return new Unchecked<>(\n+                        final Iterable<X> compared = (Iterable<X>) other;\n+                        return new ScalarWithFallback<>(\n                             new And(\n-                                (X input) -> input.equals(iterator.next()),\n-                                this\n+                                (X value) -> new True().value(),\n+                                new Matched<>(\n+                                    this,\n+                                    compared\n+                                )\n+                            ),\n+                            new IterableOf<>(\n+                                new FallbackFrom<>(\n+                                    IllegalStateException.class,\n+                                    ex -> new False().value()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7584ff817093dee60d1a8cb19eb9707c623577d5"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0603544522c762faf5b42faf2fb1930314500749", "author": {"user": {"login": "lxpdd", "name": "Alexander Poddubny"}}, "url": "https://github.com/yegor256/cactoos/commit/0603544522c762faf5b42faf2fb1930314500749", "committedDate": "2020-05-01T22:09:25Z", "message": "simplify the code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTExNzkz", "url": "https://github.com/yegor256/cactoos/pull/1358#pullrequestreview-404511793", "createdAt": "2020-05-02T08:45:46Z", "commit": {"oid": "0603544522c762faf5b42faf2fb1930314500749"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwODo0NTo0NlrOGPhmkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwODo0NTo0NlrOGPhmkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMjM2OA==", "bodyText": "@lxpdd sorry, I just realized there is something strange here, I don't see how that would implement equals, can you add 2 tests of equals for iterables of equal length : one when the two iterables are equals, and one when they are not?", "url": "https://github.com/yegor256/cactoos/pull/1358#discussion_r418932368", "createdAt": "2020-05-02T08:45:46Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/IterableOf.java", "diffHunk": "@@ -154,12 +159,20 @@ public boolean equals(final Object other) {\n                     () -> other != null,\n                     () -> Iterable.class.isAssignableFrom(other.getClass()),\n                     () -> {\n-                        final Iterable<?> compared = (Iterable<?>) other;\n-                        final Iterator<?> iterator = compared.iterator();\n-                        return new Unchecked<>(\n+                        final Iterable<X> compared = (Iterable<X>) other;\n+                        return new ScalarWithFallback<>(\n                             new And(\n-                                (X input) -> input.equals(iterator.next()),\n-                                this\n+                                (X value) -> true,\n+                                new Matched<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0603544522c762faf5b42faf2fb1930314500749"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 585, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}