{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTA1NTI0", "number": 1432, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoxMTo0M1rOEgQQlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoxNDoxNlrOEgQSsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjU2Mjc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/iterator/Partitioned.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoxMTo0M1rOHNA3Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTo1MTo0OFrOHNHWsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwNzY2Mg==", "bodyText": "@andreoss can you remove the wrapping in LinkedList, it is now useless, ListOf already creates a new list", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483407662", "createdAt": "2020-09-04T06:11:43Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterator/Partitioned.java", "diffHunk": "@@ -72,7 +72,7 @@ public boolean hasNext() {\n         if (this.size < 1) {\n             throw new IllegalArgumentException(\"Partition size < 1\");\n         }\n-        return Collections.unmodifiableList(\n+        return new Immutable<>(\n             new LinkedList<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxNDAzNA==", "bodyText": "@victornoel Done", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483514034", "createdAt": "2020-09-04T09:51:48Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/iterator/Partitioned.java", "diffHunk": "@@ -72,7 +72,7 @@ public boolean hasNext() {\n         if (this.size < 1) {\n             throw new IllegalArgumentException(\"Partition size < 1\");\n         }\n-        return Collections.unmodifiableList(\n+        return new Immutable<>(\n             new LinkedList<>(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwNzY2Mg=="}, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjU2ODE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/iterable/Matched.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoxNDoxNlrOHNA6aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo0NTo0OFrOHNKeSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwODQ4OA==", "bodyText": "@andreoss could you also, in list.Immutable.iterator(), wrap the iterator of the wrapped list in a iterator.Immutable.", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483408488", "createdAt": "2020-09-04T06:14:16Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -92,7 +92,7 @@ public Matched(\n                         );\n                     }\n                 }\n-                return Collections.unmodifiableList(rslt).iterator();\n+                return new Immutable<>(rslt).iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxMzk4Nw==", "bodyText": "@victornoel Done", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483513987", "createdAt": "2020-09-04T09:51:43Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -92,7 +92,7 @@ public Matched(\n                         );\n                     }\n                 }\n-                return Collections.unmodifiableList(rslt).iterator();\n+                return new Immutable<>(rslt).iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwODQ4OA=="}, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxOTEyNA==", "bodyText": "@andreoss I think you misunderstood my comment. The code you had was ok, I\u00a0meant to change the implementation in list.Immutable because there it is incorrect.", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483519124", "createdAt": "2020-09-04T10:02:05Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -92,7 +92,7 @@ public Matched(\n                         );\n                     }\n                 }\n-                return Collections.unmodifiableList(rslt).iterator();\n+                return new Immutable<>(rslt).iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwODQ4OA=="}, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2NTEzMA==", "bodyText": "@victornoel Sorry, corrected that.", "url": "https://github.com/yegor256/cactoos/pull/1432#discussion_r483565130", "createdAt": "2020-09-04T11:45:48Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/iterable/Matched.java", "diffHunk": "@@ -92,7 +92,7 @@ public Matched(\n                         );\n                     }\n                 }\n-                return Collections.unmodifiableList(rslt).iterator();\n+                return new Immutable<>(rslt).iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwODQ4OA=="}, "originalCommit": {"oid": "7c41f6a609343dfc23a019495e91df7adf7a93ad"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 855, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}