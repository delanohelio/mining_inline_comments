{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTgxNzcw", "number": 1457, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTowNToxOFrOEi4ebA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTowOTowOVrOEi4ftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDEyMzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/list/ListIteratorEnvelope.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTowNToxOVrOHQ9HMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNToyODozM1rOHQ9RRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MDUzMQ==", "bodyText": "@victornoel Shoudn't it be 0.47?", "url": "https://github.com/yegor256/cactoos/pull/1457#discussion_r487540531", "createdAt": "2020-09-13T15:05:19Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/list/ListIteratorEnvelope.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.list;\n+\n+import java.util.ListIterator;\n+\n+/**\n+ * {@link ListIterator} envelope.\n+ *\n+ * <p>There is no thread-safety guarantee.\n+ *\n+ * @param <T> Items type\n+ * @since 0.35", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a6df17699f7c792d585e14ea3fb6d0266a61c6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MzEwOQ==", "bodyText": "@andreoss yes, done", "url": "https://github.com/yegor256/cactoos/pull/1457#discussion_r487543109", "createdAt": "2020-09-13T15:28:33Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/list/ListIteratorEnvelope.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.list;\n+\n+import java.util.ListIterator;\n+\n+/**\n+ * {@link ListIterator} envelope.\n+ *\n+ * <p>There is no thread-safety guarantee.\n+ *\n+ * @param <T> Items type\n+ * @since 0.35", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MDUzMQ=="}, "originalCommit": {"oid": "19a6df17699f7c792d585e14ea3fb6d0266a61c6"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDEyNjYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTowOTowOVrOHQ9I0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNToyODo0OVrOHQ9RXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MDk0NA==", "bodyText": "@victornoel Why it didn't require this checks before?", "url": "https://github.com/yegor256/cactoos/pull/1457#discussion_r487540944", "createdAt": "2020-09-13T15:09:09Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "diffHunk": "@@ -95,11 +95,17 @@ public void remove() {\n \n     @Override\n     public void set(final T item) {\n+        if (item == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a6df17699f7c792d585e14ea3fb6d0266a61c6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MzEzMg==", "bodyText": "@andreoss I don't know but it was a mistake IMHO. I've removed my changes and added a todo instead so that some tests are also added.", "url": "https://github.com/yegor256/cactoos/pull/1457#discussion_r487543132", "createdAt": "2020-09-13T15:28:49Z", "author": {"login": "victornoel"}, "path": "src/main/java/org/cactoos/list/ListIteratorNoNulls.java", "diffHunk": "@@ -95,11 +95,17 @@ public void remove() {\n \n     @Override\n     public void set(final T item) {\n+        if (item == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MDk0NA=="}, "originalCommit": {"oid": "19a6df17699f7c792d585e14ea3fb6d0266a61c6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 759, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}