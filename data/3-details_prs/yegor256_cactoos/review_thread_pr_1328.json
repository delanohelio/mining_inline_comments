{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjUxMzMx", "number": 1328, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNDo1OTozNlrODsbaWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNToxMjowMVrODsbfAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTEzMDQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNDo1OTozNlrOF9Sbdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNDo1OTozNlrOF9Sbdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgwOTM5OA==", "bodyText": "@victornoel I think that its better to assert for the exact expected iterable, not only for its size", "url": "https://github.com/yegor256/cactoos/pull/1328#discussion_r399809398", "createdAt": "2020-03-29T14:59:36Z", "author": {"login": "paulodamaso"}, "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "diffHunk": "@@ -39,31 +39,29 @@\n \n     @Test\n     public void transformsList() {\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate iterables together\",\n-            new LengthOf(\n-                new Joined<String>(\n-                    new IterableOf<>(\"hello\", \"world\", \"\u0434\u0440\u0443\u0433\"),\n-                    new IterableOf<>(\"how\", \"are\", \"you\"),\n-                    new IterableOf<>(\"what's\", \"up\")\n-                )\n-            ).intValue(),\n-            Matchers.equalTo(8)\n-        );\n+        new Assertion<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0a414ec42db49987382faae5079a0763fe9302"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTEzMzcxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNTowMzoyMlrOF9SdJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNTo1NDoyMlrOF9S3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgwOTgyOA==", "bodyText": "@victornoel I don't understand the necessity of this test. I know that you just refactored the previous existing tese, but don't you think that we can remove this tes since we already are doing this checks on transformsList and joinItemAndIterable?", "url": "https://github.com/yegor256/cactoos/pull/1328#discussion_r399809828", "createdAt": "2020-03-29T15:03:22Z", "author": {"login": "paulodamaso"}, "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "diffHunk": "@@ -75,25 +73,26 @@ public void joinsIterablesWithSize() {\n             new IterableOf<>(1, -1, 0, 0),\n             new IterableOf<>(1)\n         );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together, again\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n+        new Assertion<>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0a414ec42db49987382faae5079a0763fe9302"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNjUyMQ==", "bodyText": "@paulodamaso totally", "url": "https://github.com/yegor256/cactoos/pull/1328#discussion_r399816521", "createdAt": "2020-03-29T15:54:22Z", "author": {"login": "victornoel"}, "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "diffHunk": "@@ -75,25 +73,26 @@ public void joinsIterablesWithSize() {\n             new IterableOf<>(1, -1, 0, 0),\n             new IterableOf<>(1)\n         );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together, again\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n+        new Assertion<>(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgwOTgyOA=="}, "originalCommit": {"oid": "1d0a414ec42db49987382faae5079a0763fe9302"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTE0MjQwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNToxMjowMVrOF9Shgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNToxMjowMVrOF9Shgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMDk0Nw==", "bodyText": "@victornoel Here, we should assert for the whole expected iterable, not if it just have the values", "url": "https://github.com/yegor256/cactoos/pull/1328#discussion_r399810947", "createdAt": "2020-03-29T15:12:01Z", "author": {"login": "paulodamaso"}, "path": "src/test/java/org/cactoos/iterable/JoinedTest.java", "diffHunk": "@@ -75,25 +73,26 @@ public void joinsIterablesWithSize() {\n             new IterableOf<>(1, -1, 0, 0),\n             new IterableOf<>(1)\n         );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n-        MatcherAssert.assertThat(\n-            \"Can't concatenate four iterables together, again\",\n-            list, Matchers.iterableWithSize(10)\n-        );\n+        new Assertion<>(\n+            \"Must concatenate four iterables together\",\n+            list, new HasSize(10)\n+        ).affirm();\n+        new Assertion<>(\n+            \"Must concatenate four iterables together, again\",\n+            list, new HasSize(10)\n+        ).affirm();\n     }\n \n     @Test\n     public void joinItemAndIterable() {\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n+            \"Must join item and iterable\",\n             new Joined<>(\n                 0,\n                 new IterableOf<>(1, 2, 3)\n             ),\n-            Matchers.contains(0, 1, 2, 3)\n-        );\n+            new HasValues<>(0, 1, 2, 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d0a414ec42db49987382faae5079a0763fe9302"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 803, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}