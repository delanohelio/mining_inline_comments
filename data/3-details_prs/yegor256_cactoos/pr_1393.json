{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzAwMzIz", "number": 1393, "title": "Remove some more MatcherAssert", "bodyText": "This is for #1391.", "createdAt": "2020-05-19T18:48:44Z", "url": "https://github.com/yegor256/cactoos/pull/1393", "merged": true, "mergeCommit": {"oid": "9a1dc050f8cfe56cc0595331c1161c93bd7e0f44"}, "closed": true, "closedAt": "2020-05-24T18:05:10Z", "author": {"login": "victornoel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci55cBAFqTQxNDc2OTg5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjhAG6gBqjMzNjE1NjU1NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NzY5ODkw", "url": "https://github.com/yegor256/cactoos/pull/1393#pullrequestreview-414769890", "createdAt": "2020-05-19T19:46:50Z", "commit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTYyNDQ0", "url": "https://github.com/yegor256/cactoos/pull/1393#pullrequestreview-414962444", "createdAt": "2020-05-20T03:10:05Z", "commit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTYzOTIx", "url": "https://github.com/yegor256/cactoos/pull/1393#pullrequestreview-414963921", "createdAt": "2020-05-20T03:15:24Z", "commit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMzoxNToyNFrOGX51xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMzoxNjowMFrOGX52YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODA4Ng==", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718086", "createdAt": "2020-05-20T03:15:24Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODE5OQ==", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718199", "createdAt": "2020-05-20T03:15:52Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n             ).support(IOException.class),\n             new IsEqual<>(0)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void supportsInheritedException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODI0MQ==", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718241", "createdAt": "2020-05-20T03:16:00Z", "author": {"login": "marceloamadeu"}, "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n             ).support(IOException.class),\n             new IsEqual<>(0)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void supportsInheritedException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),\n                 exp -> \"RuntimeException fallback #1\"\n             ).support(IllegalFormatException.class),\n             new IsEqual<>(2)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void doesNotSupportException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is supported, but should not be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39e26354d100dc6d8125f0084641d4a09a51a825", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/39e26354d100dc6d8125f0084641d4a09a51a825", "committedDate": "2020-05-19T18:48:11Z", "message": "(#1391) - Remove some more MatcherAssert"}, "afterCommit": {"oid": "0b55231787a22955e1f9fc41c875f223806e1119", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/0b55231787a22955e1f9fc41c875f223806e1119", "committedDate": "2020-05-21T11:11:36Z", "message": "(#1391) - Remove some more MatcherAssert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzA3ODU1", "url": "https://github.com/yegor256/cactoos/pull/1393#pullrequestreview-416307855", "createdAt": "2020-05-21T16:35:48Z", "commit": {"oid": "0b55231787a22955e1f9fc41c875f223806e1119"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "787d25848956d3e01448d49d18a6f2e1a14d0b37", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/787d25848956d3e01448d49d18a6f2e1a14d0b37", "committedDate": "2020-05-21T17:20:15Z", "message": "(#1391) - Remove some more MatcherAssert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b55231787a22955e1f9fc41c875f223806e1119", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/0b55231787a22955e1f9fc41c875f223806e1119", "committedDate": "2020-05-21T11:11:36Z", "message": "(#1391) - Remove some more MatcherAssert"}, "afterCommit": {"oid": "787d25848956d3e01448d49d18a6f2e1a14d0b37", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/787d25848956d3e01448d49d18a6f2e1a14d0b37", "committedDate": "2020-05-21T17:20:15Z", "message": "(#1391) - Remove some more MatcherAssert"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 601, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}