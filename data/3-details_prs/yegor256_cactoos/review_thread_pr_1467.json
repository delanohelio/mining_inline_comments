{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NjAzMjM2", "number": 1467, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxOTo1NDoyM1rOElc-vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxOTo1NDoyM1rOElc-vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzA3NTgwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/cactoos/io/SlowInputStreamTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxOTo1NDoyM1rOHU8rVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODoxNDo1M1rOHVE3HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcyNzcwMA==", "bodyText": "@andreoss please, add one more test to assure the class SlowInputStream can convert a unsigned byte to int properly.", "url": "https://github.com/yegor256/cactoos/pull/1467#discussion_r491727700", "createdAt": "2020-09-20T19:54:23Z", "author": {"login": "fabriciofx"}, "path": "src/test/java/org/cactoos/io/SlowInputStreamTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.io;\n+\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test for {@link SlowInputStream}.\n+ *\n+ * @since 0.47\n+ * @checkstyle MagicNumberCheck (20 lines)\n+ */\n+final class SlowInputStreamTest {\n+\n+    @Test\n+    void readsSigned() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e1ac9acfe1c49c1f1556ec37a3719480f6f24b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTc4OQ==", "bodyText": "@fabriciofx Done.", "url": "https://github.com/yegor256/cactoos/pull/1467#discussion_r491861789", "createdAt": "2020-09-21T08:14:53Z", "author": {"login": "andreoss"}, "path": "src/test/java/org/cactoos/io/SlowInputStreamTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.io;\n+\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test for {@link SlowInputStream}.\n+ *\n+ * @since 0.47\n+ * @checkstyle MagicNumberCheck (20 lines)\n+ */\n+final class SlowInputStreamTest {\n+\n+    @Test\n+    void readsSigned() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcyNzcwMA=="}, "originalCommit": {"oid": "44e1ac9acfe1c49c1f1556ec37a3719480f6f24b"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 763, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}