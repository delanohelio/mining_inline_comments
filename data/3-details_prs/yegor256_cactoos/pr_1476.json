{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzI3MTUy", "number": 1476, "title": "(#1475) Make Ternary consistent over its evaluation", "bodyText": "This is for #1475.\nI've also fixed a test that looked very fishy.", "createdAt": "2020-09-27T14:12:08Z", "url": "https://github.com/yegor256/cactoos/pull/1476", "merged": true, "mergeCommit": {"oid": "3a3febaf0845b12d77b82001849fd0e14a1b832d"}, "closed": true, "closedAt": "2020-10-05T10:42:15Z", "author": {"login": "victornoel"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNBwXXgFqTQ5NzA5Mzc4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPg2ijAFqTUwMTkwMjQ4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDkzNzg3", "url": "https://github.com/yegor256/cactoos/pull/1476#pullrequestreview-497093787", "createdAt": "2020-09-27T16:37:39Z", "commit": {"oid": "8f1a06ce4f8686f941eda421daa545f521f473d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjozNzo0MFrOHYodcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo0MDo1NVrOHYoezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MDc3MA==", "bodyText": "@victornoel It would be better as String.format(\"else: %d\") here and in other pleases where + is used for concatenation.", "url": "https://github.com/yegor256/cactoos/pull/1476#discussion_r495590770", "createdAt": "2020-09-27T16:37:40Z", "author": {"login": "andreoss"}, "path": "src/test/java/org/cactoos/scalar/TernaryTest.java", "diffHunk": "@@ -73,14 +76,40 @@ void conditionBoolean() throws Exception {\n \n     @Test\n     void conditionFunc() throws Exception {\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n+            \"Must call the Func with the input\",\n             new Ternary<>(\n                 5,\n                 input -> input > 3,\n-                input -> input = 8,\n-                input -> input = 2\n-            ).value(),\n-            Matchers.equalTo(8)\n-        );\n+                input -> input + 1,\n+                input -> input + 2\n+            ),\n+            new ScalarHasValue<>(6)\n+        ).affirm();\n+    }\n+\n+    @Test\n+    void conditionSticky() throws Exception {\n+        final AtomicInteger counter = new AtomicInteger(0);\n+        new Assertion<>(\n+            \"Must conserve the same value for the whole evaluation\",\n+            new Ternary<String>(\n+                counter::incrementAndGet,\n+                i -> i == 1,\n+                i ->  i + \" equals \" + 1,\n+                i -> \"else: \" + i", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1a06ce4f8686f941eda421daa545f521f473d7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MDkyNw==", "bodyText": "@victornoel It's not clear here what should be conserved. Shouldn't Ternary be assigned to a variable for Sticky to have any effect?", "url": "https://github.com/yegor256/cactoos/pull/1476#discussion_r495590927", "createdAt": "2020-09-27T16:39:26Z", "author": {"login": "andreoss"}, "path": "src/test/java/org/cactoos/scalar/TernaryTest.java", "diffHunk": "@@ -73,14 +76,40 @@ void conditionBoolean() throws Exception {\n \n     @Test\n     void conditionFunc() throws Exception {\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n+            \"Must call the Func with the input\",\n             new Ternary<>(\n                 5,\n                 input -> input > 3,\n-                input -> input = 8,\n-                input -> input = 2\n-            ).value(),\n-            Matchers.equalTo(8)\n-        );\n+                input -> input + 1,\n+                input -> input + 2\n+            ),\n+            new ScalarHasValue<>(6)\n+        ).affirm();\n+    }\n+\n+    @Test\n+    void conditionSticky() throws Exception {\n+        final AtomicInteger counter = new AtomicInteger(0);\n+        new Assertion<>(\n+            \"Must conserve the same value for the whole evaluation\",\n+            new Ternary<String>(\n+                counter::incrementAndGet,\n+                i -> i == 1,\n+                i ->  i + \" equals \" + 1,\n+                i -> \"else: \" + i\n+            ),\n+            new ScalarHasValue<>(\"1 equals 1\")\n+        ).affirm();\n+        new Assertion<>(\n+            \"Must conserve the same new value for the whole evaluation\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1a06ce4f8686f941eda421daa545f521f473d7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MTExOQ==", "bodyText": "@victornoel Camel-cased variables are against the current code style, probably we should not have them in examples too.", "url": "https://github.com/yegor256/cactoos/pull/1476#discussion_r495591119", "createdAt": "2020-09-27T16:40:55Z", "author": {"login": "andreoss"}, "path": "src/main/java/org/cactoos/scalar/Ternary.java", "diffHunk": "@@ -39,10 +39,10 @@\n  *\n  * <pre>{@code\n  * new Ternary<>(\n- *     5,\n+ *     someScalarOfInteger,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1a06ce4f8686f941eda421daa545f521f473d7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2248947f4d385ebb87b2adca567e0399a1fd927", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/c2248947f4d385ebb87b2adca567e0399a1fd927", "committedDate": "2020-10-04T09:00:30Z", "message": "(#1475) Make Ternary consistent over its evaluation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f1a06ce4f8686f941eda421daa545f521f473d7", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/8f1a06ce4f8686f941eda421daa545f521f473d7", "committedDate": "2020-09-27T14:08:43Z", "message": "(#1475) Make Ternary consistent over its evaluation"}, "afterCommit": {"oid": "c2248947f4d385ebb87b2adca567e0399a1fd927", "author": {"user": {"login": "victornoel", "name": "Victor No\u00ebl"}}, "url": "https://github.com/yegor256/cactoos/commit/c2248947f4d385ebb87b2adca567e0399a1fd927", "committedDate": "2020-10-04T09:00:30Z", "message": "(#1475) Make Ternary consistent over its evaluation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTAyNDg2", "url": "https://github.com/yegor256/cactoos/pull/1476#pullrequestreview-501902486", "createdAt": "2020-10-05T10:02:38Z", "commit": {"oid": "c2248947f4d385ebb87b2adca567e0399a1fd927"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 516, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}