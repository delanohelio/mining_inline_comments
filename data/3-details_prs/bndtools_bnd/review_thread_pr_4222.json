{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTUxMzEz", "number": 4222, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjowMDo1NVrOENHThQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowODoxOVrOENSi2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTg2NjI5OnYy", "diffSide": "RIGHT", "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjowMDo1NVrOGvnccg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjowMDo1NVrOGvnccg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MjUxNA==", "bodyText": "Typo in retrieved", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452582514", "createdAt": "2020-07-10T02:00:55Z", "author": {"login": "rotty3000"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +73,38 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] parameters = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\tparameters = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAllArgs(parameters);\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(parameters);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlog.fine(\"configured program arguments \" + parameters);\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tlog.log(Level.SEVERE,\n+\t\t\t\t\t\"service aQute.launcher.Launcher with props launcher.arguments could not be retireved\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0a1febc2e71edf465c0775e3de533321f66ab1"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzM2NDkwOnYy", "diffSide": "RIGHT", "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjozMDoyOFrOGv1fUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowNToyNlrOGv4sWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMjYyNw==", "bodyText": "I think Arrays.toString(args) is probably fine and simpler.\nWhy is this log log.fine( when the other logs are like log.log(Level.? It seems a bit inconsistent.", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452812627", "createdAt": "2020-07-10T12:30:28Z", "author": {"login": "bjhargrave"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAllArgs(args);\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlog.fine(\"configured program arguments \" + Arrays.stream(args)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2NTExNA==", "bodyText": "I'll clean those up.", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452865114", "createdAt": "2020-07-10T14:05:26Z", "author": {"login": "gamerson"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAllArgs(args);\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlog.fine(\"configured program arguments \" + Arrays.stream(args)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMjYyNw=="}, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzM3NDYwOnYy", "diffSide": "RIGHT", "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjozMzoxOVrOGv1lDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowNToyMFrOGv4sGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNDA5NA==", "bodyText": "What about ungeting the service?", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452814094", "createdAt": "2020-07-10T12:33:19Z", "author": {"login": "bjhargrave"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2NTA0OQ==", "bodyText": "I'll add the unget", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452865049", "createdAt": "2020-07-10T14:05:20Z", "author": {"login": "gamerson"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNDA5NA=="}, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzM4NDkzOnYy", "diffSide": "RIGHT", "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjozNjo0OVrOGv1rcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowNToxNFrOGv4ryg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNTcyOQ==", "bodyText": "Why are the command line args (setAllArgs) and the non-framework args (setAppArgs) set to the same value?", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452815729", "createdAt": "2020-07-10T12:36:49Z", "author": {"login": "bjhargrave"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAllArgs(args);\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2NDk3MA==", "bodyText": "AppArgs is all I need so I'll remove the other.", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452864970", "createdAt": "2020-07-10T14:05:14Z", "author": {"login": "gamerson"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,6 +75,39 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tServiceReference<EnvironmentInfo> srvcRef = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (srvcRef != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(srvcRef);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAllArgs(args);\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNTcyOQ=="}, "originalCommit": {"oid": "150a520edd6375ad8d148746c11a06780ef94d6a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzcwNzc4OnYy", "diffSide": "RIGHT", "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowODoxOVrOGv4y2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDowODozNlrOGv4zXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2Njc3Ng==", "bodyText": "envInfo could be null here, no?", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452866776", "createdAt": "2020-07-10T14:08:19Z", "author": {"login": "bjhargrave"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,8 +75,40 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tenvInfo = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (envInfo != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(envInfo);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlog.log(Level.FINE, \"configured program arguments \" + Arrays.toString(args));\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tlog.log(Level.SEVERE,\n+\t\t\t\t\t\"service aQute.launcher.Launcher with props launcher.arguments could not be retrieved\");\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tlog.log(Level.SEVERE, \"command line parameters could not be configured.\");\n+\t\t}\n+\t}\n+\n \t@Override\n \tpublic void removedService(ServiceReference<Object> reference, ServiceRegistration<ApplicationLauncher> service) {\n+\t\tcontext.ungetService(envInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f1d97c2cc950f15d82c6f3f60f4fdfced4a026"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2NjkxMQ==", "bodyText": "ah yes", "url": "https://github.com/bndtools/bnd/pull/4222#discussion_r452866911", "createdAt": "2020-07-10T14:08:36Z", "author": {"login": "gamerson"}, "path": "org.bndtools.applaunch/src/org/bndtools/applaunch/Activator.java", "diffHunk": "@@ -69,8 +75,40 @@ private static Filter createFilter() {\n \t\treturn context.registerService(ApplicationLauncher.class, new BndApplicationLauncher(context), null);\n \t}\n \n+\tprivate void setEquinoxConfigAppArgs(BundleContext context) {\n+\t\tString[] args = null;\n+\t\ttry {\n+\t\t\tServiceReference<?>[] serviceReferences = context.getServiceReferences(\"aQute.launcher.Launcher\",\n+\t\t\t\t\"(launcher.arguments=*)\");\n+\t\t\tif (serviceReferences != null && serviceReferences.length > 0) {\n+\t\t\t\tObject property = serviceReferences[0].getProperty(\"launcher.arguments\");\n+\n+\t\t\t\tif (property instanceof String[]) {\n+\t\t\t\t\targs = (String[]) property;\n+\n+\t\t\t\t\tenvInfo = context.getServiceReference(EnvironmentInfo.class);\n+\t\t\t\t\tif (envInfo != null) {\n+\t\t\t\t\t\tEnvironmentInfo service = context.getService(envInfo);\n+\t\t\t\t\t\tif (service instanceof EquinoxConfiguration) {\n+\t\t\t\t\t\t\tEquinoxConfiguration equinoxConfig = (EquinoxConfiguration) service;\n+\t\t\t\t\t\t\tequinoxConfig.setAppArgs(args);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlog.log(Level.FINE, \"configured program arguments \" + Arrays.toString(args));\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tlog.log(Level.SEVERE,\n+\t\t\t\t\t\"service aQute.launcher.Launcher with props launcher.arguments could not be retrieved\");\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tlog.log(Level.SEVERE, \"command line parameters could not be configured.\");\n+\t\t}\n+\t}\n+\n \t@Override\n \tpublic void removedService(ServiceReference<Object> reference, ServiceRegistration<ApplicationLauncher> service) {\n+\t\tcontext.ungetService(envInfo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2Njc3Ng=="}, "originalCommit": {"oid": "59f1d97c2cc950f15d82c6f3f60f4fdfced4a026"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1379, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}