{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NDcxNzkw", "number": 3927, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0OTozN1rODykNCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0OTozN1rODykNCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzQ4NTU0OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0OTozN1rOGGr30g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjozMTowNFrOGGtmag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MzQ0Mg==", "bodyText": "See the aQute.libg.cryptography package for classes to compute MD5, SHA1, SHA256. They provide a nice asHex method to return the digest value as a hex string.", "url": "https://github.com/bndtools/bnd/pull/3927#discussion_r409663442", "createdAt": "2020-04-16T15:49:37Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package biz.aQute.bnd.reporter.plugins.entries.bundle;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.security.MessageDigest;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import aQute.bnd.annotation.plugin.BndPlugin;\n+import aQute.bnd.osgi.Jar;\n+import aQute.bnd.service.Plugin;\n+import aQute.bnd.service.reporter.ReportEntryPlugin;\n+import aQute.service.reporter.Reporter;\n+import biz.aQute.bnd.reporter.generator.EntryNamesReference;\n+import biz.aQute.bnd.reporter.maven.dto.ChecksumDTO;\n+\n+/**\n+ * This plugin calculates and add the checksums of the file to the report.\n+ */\n+@BndPlugin(name = \"entry.\" + EntryNamesReference.CHECKSUM)\n+public class ChecksumPlugin implements ReportEntryPlugin<Jar>, Plugin {\n+\n+\tprivate Reporter\t\t\t\t\t_reporter;\n+\tprivate final Map<String, String>\t_properties\t= new HashMap<>();\n+\n+\tpublic ChecksumPlugin() {\n+\t\t_properties.put(ReportEntryPlugin.ENTRY_NAME_PROPERTY, EntryNamesReference.CHECKSUM);\n+\t\t_properties.put(ReportEntryPlugin.SOURCE_CLASS_PROPERTY, Jar.class.getCanonicalName());\n+\t}\n+\n+\t@Override\n+\tpublic ChecksumDTO extract(final Jar jar, final Locale locale) {\n+\t\tObjects.requireNonNull(jar, \"jar\");\n+\t\tObjects.requireNonNull(locale, \"locale\");\n+\n+\t\tChecksumDTO checksumDTO = new ChecksumDTO();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db22607f0e8a6da65ec3a0ed658699c8e3295e8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MTc1NA==", "bodyText": "I changed it to aQute.libg.cryptography. I is really useful!\nHad to fix SHA-512. Not sure with that. please have a look.", "url": "https://github.com/bndtools/bnd/pull/3927#discussion_r409691754", "createdAt": "2020-04-16T16:31:04Z", "author": {"login": "stbischof"}, "path": "biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package biz.aQute.bnd.reporter.plugins.entries.bundle;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.security.MessageDigest;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import aQute.bnd.annotation.plugin.BndPlugin;\n+import aQute.bnd.osgi.Jar;\n+import aQute.bnd.service.Plugin;\n+import aQute.bnd.service.reporter.ReportEntryPlugin;\n+import aQute.service.reporter.Reporter;\n+import biz.aQute.bnd.reporter.generator.EntryNamesReference;\n+import biz.aQute.bnd.reporter.maven.dto.ChecksumDTO;\n+\n+/**\n+ * This plugin calculates and add the checksums of the file to the report.\n+ */\n+@BndPlugin(name = \"entry.\" + EntryNamesReference.CHECKSUM)\n+public class ChecksumPlugin implements ReportEntryPlugin<Jar>, Plugin {\n+\n+\tprivate Reporter\t\t\t\t\t_reporter;\n+\tprivate final Map<String, String>\t_properties\t= new HashMap<>();\n+\n+\tpublic ChecksumPlugin() {\n+\t\t_properties.put(ReportEntryPlugin.ENTRY_NAME_PROPERTY, EntryNamesReference.CHECKSUM);\n+\t\t_properties.put(ReportEntryPlugin.SOURCE_CLASS_PROPERTY, Jar.class.getCanonicalName());\n+\t}\n+\n+\t@Override\n+\tpublic ChecksumDTO extract(final Jar jar, final Locale locale) {\n+\t\tObjects.requireNonNull(jar, \"jar\");\n+\t\tObjects.requireNonNull(locale, \"locale\");\n+\n+\t\tChecksumDTO checksumDTO = new ChecksumDTO();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MzQ0Mg=="}, "originalCommit": {"oid": "2db22607f0e8a6da65ec3a0ed658699c8e3295e8"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1446, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}