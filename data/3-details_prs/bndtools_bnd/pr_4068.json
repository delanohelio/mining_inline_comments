{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDg1MTIy", "number": 4068, "title": "[explorer] Selection reaction", "bodyText": "The 'open project' command now selects the bnd.bnd or build.bnd file if present\nThe Bndtools explorer will show the project of the selected editor or the least project that had to be revealed. The reveal is used by the open project command.\n\nSigned-off-by: Peter Kriens Peter.Kriens@aqute.biz", "createdAt": "2020-05-18T12:59:21Z", "url": "https://github.com/bndtools/bnd/pull/4068", "merged": true, "mergeCommit": {"oid": "315f1187c2664143d8ed595eb076d950794117fa"}, "closed": true, "closedAt": "2020-05-20T13:54:13Z", "author": {"login": "pkriens"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcijPUZgFqTQxMzc5NDAxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjGQYIgH2gAyNDE5NDg1MTIyOjMyMmY4NjEzYjQ3MmNkODFmZDg2NWMyMWQ2NzNiNTA0ZGZjYTFhZTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzk0MDEw", "url": "https://github.com/bndtools/bnd/pull/4068#pullrequestreview-413794010", "createdAt": "2020-05-18T17:22:38Z", "commit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjozOFrOGXAspg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjo0N1rOGXAs-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTg2Mg==", "bodyText": "+1 Nice! I see this as more useful for Bndtools than simply selecting the project.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781862", "createdAt": "2020-05-18T17:22:38Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/command/OpenProjectHandler.java", "diffHunk": "@@ -75,10 +79,25 @@ private static void selectProject(IProject project) throws Exception {\n \t\t\t\t.getId());\n \t\t}\n \n+\t\tIResource select = getNotNull(() -> project.findMember(Workspace.BUILDFILE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng==", "bodyText": "I'm not sure I understand the expected behavior.  It seems the \"link with editor\" toggle button that is already in the toolbar does this behavior already.  I don't see this new PartListener you added as adding much value unless I'm missing something.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781946", "createdAt": "2020-05-18T17:22:47Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTEyNjM5", "url": "https://github.com/bndtools/bnd/pull/4068#pullrequestreview-414512639", "createdAt": "2020-05-19T14:36:39Z", "commit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNjozOVrOGXjlVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzozMVrOGXjn8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();\n          \n          \n            \n            Optional.ofNullable(workbench.getActiveWorkbenchWindow())\n          \n          \n            \n            \t\t\t.map(IWorkbenchWindow::getActivePage)\n          \n          \n            \n            \t\t\t.ifPresent(page -> page.addPartListener(partListener));", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353430", "createdAt": "2020-05-19T14:36:39Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -52,66 +88,23 @@ public void createPartControl(Composite parent) {\n \t\t}\n \t\tc.layout();\n \n-\n \t\tfilterPart.setHint(\"Filter for projects (glob)\");\n-\t\tlistener = e -> {\n-\t\t\tString value = (String) e.getNewValue();\n-\n-\t\t\tif (Strings.nonNullOrEmpty(value)) {\n-\t\t\t\tglob = new Glob(value);\n-\t\t\t\tif (!installed) {\n-\t\t\t\t\tinstalled = true;\n-\t\t\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n-\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\t\t\t\t\t\tif (glob == null)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\tif (element instanceof JavaProject) {\n-\t\t\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getElementName();\n-\t\t\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n-\n-\t\t\t\t\t\t\t} else if (element instanceof IProject) {\n-\t\t\t\t\t\t\t\tIProject project = (IProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getName();\n-\t\t\t\t\t\t\t\treturn isSelected(project, name);\n-\t\t\t\t\t\t\t} else\n-\t\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n-\t\t\t\t\t\t\tif (glob.finds(name) >= 0)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n-\n-\t\t\t\t\t\t\t\tswitch (maxSeverity) {\n-\t\t\t\t\t\t\t\t\tcase 0 :\n-\t\t\t\t\t\t\t\t\t\treturn false;\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n-\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (CoreException e) {\n-\t\t\t\t\t\t\t\t// ignore\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\treturn false;\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tglob = null;\n-\t\t\t}\n-\t\t\tgetTreeViewer().refresh();\n+\t\tfilterListener = e -> {\n+\t\t\tGlob old = glob;\n+\t\t\tglob = null;\n+\t\t\tString filterText = (String) e.getNewValue();\n+\t\t\tif (Strings.nonNullOrEmpty(filterText))\n+\t\t\t\tglob = new Glob(filterText);\n+\t\t\tif (!Objects.equals(old, glob))\n+\t\t\t\tupdate();\n \t\t};\n-\t\tfilterPart.addPropertyChangeListener(listener);\n+\t\tfilterPart.addPropertyChangeListener(filterListener);\n+\n+\t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1Mzg0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(iEditorInput)\n          \n          \n            \n            \t\t\t.map(input -> input.getAdapter(IResource.class))\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353840", "createdAt": "2020-05-19T14:37:12Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDA5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(resource)\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427354096", "createdAt": "2020-05-19T14:37:31Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {\n+\t\tif (iEditorInput == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tif (iEditorInput instanceof IFileEditorInput) {\n+\t\t\tIResource resource = ((IFileEditorInput) iEditorInput).getFile();\n+\t\t\treturn getProject(resource);\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprivate IProject getProject(IResource resource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 250}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "author": {"user": {"login": "pkriens", "name": "Peter Kriens"}}, "url": "https://github.com/bndtools/bnd/commit/ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "committedDate": "2020-05-19T16:46:21Z", "message": "[explorer] Selection reaction\n\n- The 'open project' command now selects the bnd.bnd or build.bnd file if present\n- The Bndtools explorer will show the project of the selected editor or the least project that had to be revealed. The reveal is used by the open project command.\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64722985bb0331b622d3db50651df42bf0c09a36", "author": {"user": {"login": "pkriens", "name": "Peter Kriens"}}, "url": "https://github.com/bndtools/bnd/commit/64722985bb0331b622d3db50651df42bf0c09a36", "committedDate": "2020-05-19T16:46:21Z", "message": "[explorer] Diverse changes\n\n- Added a reload button, rebuilds workspace\n- Use different icons, try to associate with JUnit bar\n- Reorganized code a bit, hard to get Eclipse code to look good :-(\n- Moved build listener to async update\n- Added a 'prompt' bar with an expanded macro\n- Prompt with Macro text in preferences\n- When a macro is selected, the hover will show its expansion\n- Restored the Syntax help on headers and instructions, not sure why that was gone, it wasn't really removed.\n\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "author": {"user": {"login": "pkriens", "name": "Peter Kriens"}}, "url": "https://github.com/bndtools/bnd/commit/7a075db7adbf355a56acd4d341222fd7a31f7a1a", "committedDate": "2020-05-18T12:58:39Z", "message": "[explorer] Selection reaction\n\n- The 'open project' command now selects the bnd.bnd or build.bnd file if present\n- The Bndtools explorer will show the project of the selected editor or the least project that had to be revealed. The reveal is used by the open project command.\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>"}, "afterCommit": {"oid": "64722985bb0331b622d3db50651df42bf0c09a36", "author": {"user": {"login": "pkriens", "name": "Peter Kriens"}}, "url": "https://github.com/bndtools/bnd/commit/64722985bb0331b622d3db50651df42bf0c09a36", "committedDate": "2020-05-19T16:46:21Z", "message": "[explorer] Diverse changes\n\n- Added a reload button, rebuilds workspace\n- Use different icons, try to associate with JUnit bar\n- Reorganized code a bit, hard to get Eclipse code to look good :-(\n- Moved build listener to async update\n- Added a 'prompt' bar with an expanded macro\n- Prompt with Macro text in preferences\n- When a macro is selected, the hover will show its expansion\n- Restored the Syntax help on headers and instructions, not sure why that was gone, it wasn't really removed.\n\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "322f8613b472cd81fd865c21d673b504dfca1ae2", "author": {"user": {"login": "pkriens", "name": "Peter Kriens"}}, "url": "https://github.com/bndtools/bnd/commit/322f8613b472cd81fd865c21d673b504dfca1ae2", "committedDate": "2020-05-20T10:10:45Z", "message": "[bndtools explorer] Updates\n\n- Reacts to changes in preferences\n- Now has a separate model with update handling\n- Uses closable pattern instead of hard coded dispose\n- No more fields for controls, all local variables now\n- Message Supports link to preferences when href=prefs\n- Message Supports external links\n- No expansion when preference is set to -\n- Default message with link to preferences\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3217, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}