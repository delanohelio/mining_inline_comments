{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzYxOTU1", "number": 4163, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjozNDoxN1rOEFhFzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMjoyNVrOEK-OnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjIwNDk0OnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjozNDoxN1rOGjwMgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjozNDoxN1rOGjwMgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0Mjk3Nw==", "bodyText": "aQute.libg should always be version=project since we conditional package from this project and don't use the jar.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440142977", "createdAt": "2020-06-15T12:34:17Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,70 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd,bnd/*.bnd\n+\n+# These are bundles that are not required for building but for debugging when doing\n+# code inspection.\n+-buildpath.debug: \\\n+\torg.eclipse.osgi,\\\n+\torg.eclipse.core.resources,\\\n+\torg.eclipse.e4.ui.workbench.swt,\\\n+\torg.eclipse.search\n+\n+-conditionalpackage: \\\n+\taQute.lib.*;-split-package:=merge-first, \\\n+\taQute.libg.*;-split-package:=merge-first\n+\n+-buildpath: \\\n+\taQute.libg;version=snapshot,\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjIxOTQxOnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/bnd.bnd", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjozODo0MFrOGjwVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzoyODo1NlrOGkJ9DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0NTI0OA==", "bodyText": "Do we really want version numbers for the Eclipse deps? This will make it awkward to update the Eclipse base version one day. As in bndtools.core/bnd.bnd, the Eclipse deps should be versionless (or version=latest).", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440145248", "createdAt": "2020-06-15T12:38:40Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,70 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd,bnd/*.bnd\n+\n+# These are bundles that are not required for building but for debugging when doing\n+# code inspection.\n+-buildpath.debug: \\\n+\torg.eclipse.osgi,\\\n+\torg.eclipse.core.resources,\\\n+\torg.eclipse.e4.ui.workbench.swt,\\\n+\torg.eclipse.search\n+\n+-conditionalpackage: \\\n+\taQute.lib.*;-split-package:=merge-first, \\\n+\taQute.libg.*;-split-package:=merge-first\n+\n+-buildpath: \\\n+\taQute.libg;version=snapshot,\\\n+\tbndtools.core;version=snapshot,\\\n+\tbndtools.builder;version=snapshot,\\\n+\torg.junit.platform.commons;version=latest,\\\n+\torg.junit.platform.engine;version=latest,\\\n+\tassertj-core;version=latest,\\\n+\torg.opentest4j;version=latest,\\\n+\torg.apiguardian:apiguardian-api;version=latest,\\\n+\torg.junit.jupiter.api;version=latest,\\\n+\torg.junit.jupiter.engine;version=latest,\\\n+\torg.junit.jupiter.params;version=latest,\\\n+\torg.eclipse.jdt.core;version=3.16.0,\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwNzU1MQ==", "bodyText": "I agree with this - the reason these dependencies have dependencies is because they were added (mostly) using the quick fix processor. I think we need to consider changing the default behaviour of the quick fix processor on this point, and maybe making it configurable.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440507551", "createdAt": "2020-06-15T23:50:00Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,70 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd,bnd/*.bnd\n+\n+# These are bundles that are not required for building but for debugging when doing\n+# code inspection.\n+-buildpath.debug: \\\n+\torg.eclipse.osgi,\\\n+\torg.eclipse.core.resources,\\\n+\torg.eclipse.e4.ui.workbench.swt,\\\n+\torg.eclipse.search\n+\n+-conditionalpackage: \\\n+\taQute.lib.*;-split-package:=merge-first, \\\n+\taQute.libg.*;-split-package:=merge-first\n+\n+-buildpath: \\\n+\taQute.libg;version=snapshot,\\\n+\tbndtools.core;version=snapshot,\\\n+\tbndtools.builder;version=snapshot,\\\n+\torg.junit.platform.commons;version=latest,\\\n+\torg.junit.platform.engine;version=latest,\\\n+\tassertj-core;version=latest,\\\n+\torg.opentest4j;version=latest,\\\n+\torg.apiguardian:apiguardian-api;version=latest,\\\n+\torg.junit.jupiter.api;version=latest,\\\n+\torg.junit.jupiter.engine;version=latest,\\\n+\torg.junit.jupiter.params;version=latest,\\\n+\torg.eclipse.jdt.core;version=3.16.0,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0NTI0OA=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwODU0NQ==", "bodyText": "Actually, it shouldn't be too awkward to upgrade Eclipse as the version specifiers don't give an upper bound on the version range. As long as we don't go try to backwards to support older versions of Eclipse it should still be able to find the build dependencies. I still agree that we don't need them though.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440508545", "createdAt": "2020-06-15T23:53:22Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,70 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd,bnd/*.bnd\n+\n+# These are bundles that are not required for building but for debugging when doing\n+# code inspection.\n+-buildpath.debug: \\\n+\torg.eclipse.osgi,\\\n+\torg.eclipse.core.resources,\\\n+\torg.eclipse.e4.ui.workbench.swt,\\\n+\torg.eclipse.search\n+\n+-conditionalpackage: \\\n+\taQute.lib.*;-split-package:=merge-first, \\\n+\taQute.libg.*;-split-package:=merge-first\n+\n+-buildpath: \\\n+\taQute.libg;version=snapshot,\\\n+\tbndtools.core;version=snapshot,\\\n+\tbndtools.builder;version=snapshot,\\\n+\torg.junit.platform.commons;version=latest,\\\n+\torg.junit.platform.engine;version=latest,\\\n+\tassertj-core;version=latest,\\\n+\torg.opentest4j;version=latest,\\\n+\torg.apiguardian:apiguardian-api;version=latest,\\\n+\torg.junit.jupiter.api;version=latest,\\\n+\torg.junit.jupiter.engine;version=latest,\\\n+\torg.junit.jupiter.params;version=latest,\\\n+\torg.eclipse.jdt.core;version=3.16.0,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0NTI0OA=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU2NTAwNA==", "bodyText": "Fixed now.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440565004", "createdAt": "2020-06-16T03:28:56Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,70 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd,bnd/*.bnd\n+\n+# These are bundles that are not required for building but for debugging when doing\n+# code inspection.\n+-buildpath.debug: \\\n+\torg.eclipse.osgi,\\\n+\torg.eclipse.core.resources,\\\n+\torg.eclipse.e4.ui.workbench.swt,\\\n+\torg.eclipse.search\n+\n+-conditionalpackage: \\\n+\taQute.lib.*;-split-package:=merge-first, \\\n+\taQute.libg.*;-split-package:=merge-first\n+\n+-buildpath: \\\n+\taQute.libg;version=snapshot,\\\n+\tbndtools.core;version=snapshot,\\\n+\tbndtools.builder;version=snapshot,\\\n+\torg.junit.platform.commons;version=latest,\\\n+\torg.junit.platform.engine;version=latest,\\\n+\tassertj-core;version=latest,\\\n+\torg.opentest4j;version=latest,\\\n+\torg.apiguardian:apiguardian-api;version=latest,\\\n+\torg.junit.jupiter.api;version=latest,\\\n+\torg.junit.jupiter.engine;version=latest,\\\n+\torg.junit.jupiter.params;version=latest,\\\n+\torg.eclipse.jdt.core;version=3.16.0,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0NTI0OA=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjM4NzY4OnYy", "diffSide": "RIGHT", "path": "cnf/ext/repositories.bnd", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoyNDozNVrOGjx_qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNToyMToyOFrOGmyPkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw==", "bodyText": "Can we not fold this into \"OSGi Snapshots\"? After all the osgi-test artifacts are from OSGi.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440172457", "createdAt": "2020-06-15T13:24:35Z", "author": {"login": "bjhargrave"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4Njg5Mg==", "bodyText": "I kept it separate for resolving - the OSGi Snapshot repo is not included in -runresolve, but Sonatype is. I suppose i could use -runblacklist instead to exclude just those we want to exclude.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440186892", "createdAt": "2020-06-15T13:46:18Z", "author": {"login": "kriegfrj"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE5MzkyNQ==", "bodyText": "OK, that makes sense. But then \"Sonatype\" is not a descriptive name for the new repo.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440193925", "createdAt": "2020-06-15T13:56:14Z", "author": {"login": "bjhargrave"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNTUwNw==", "bodyText": "It is about as descriptive as \"Maven Central\"...\nIm hoping that the release of osgi-test is not far away and i can add them to Maven Central. Actually, i think i settled on an implementation which didn't use osgi-test so maybe i can ditch it altogether.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440225507", "createdAt": "2020-06-15T14:40:39Z", "author": {"login": "kriegfrj"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzMTI2MA==", "bodyText": "My point was that you segregated those artifacts into the separate repo so you can use that repo in resolving. I could not see that, so I asked why. Perhaps a name like \"Test Resolve\" or something would better convey the intent of the repo and stop someone else in the future adding something to the repo which we don't want in the test resolve.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440231260", "createdAt": "2020-06-15T14:48:26Z", "author": {"login": "bjhargrave"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwMjExNg==", "bodyText": "Sorry, I didn't explain it very well. My point was, as we have a generic \"Maven Central\" repo where we throw all of the bundles that live on Maven Central (and don't belong in another repo), I thought it might be nice to have a generic \"Sonatype\" repo where we throw all of the snapshots that don't live anywhere else. The purpose of segregating was more about keeping the OSGi Snapshot repo out of the resolve (because it seems to exclusively contain build-time-only bundles) than about having a specific repo for resolving the integration test.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440502116", "createdAt": "2020-06-15T23:31:44Z", "author": {"login": "kriegfrj"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5OTgyNA==", "bodyText": "I have left this one as it is for now. Longer term (once osgi-test goes into a proper release) we can either move osgi-test into Maven Central, or split Maven Central into \"Maven Central\" and \"Maven Central Testing\" for test-oriented dependencies and make osgi-test a member of that.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r440599824", "createdAt": "2020-06-16T05:47:45Z", "author": {"login": "kriegfrj"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyMjI1Ng==", "bodyText": "I found that the dependency that I was looking for in osgi-test has an equivalent in aQute.lib.exceptions, so the latest push has removed osgi-test (and the Sonatype repo) completely.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r443322256", "createdAt": "2020-06-22T05:21:28Z", "author": {"login": "kriegfrj"}, "path": "cnf/ext/repositories.bnd", "diffHunk": "@@ -7,6 +7,11 @@ mavencentral:           https://repo.maven.apache.org/maven2\n         releaseUrl=\"${mavencentral}\";\\\n         index=\"${.}/central.mvn\";\\\n         readOnly=true,\\\n+    aQute.bnd.repository.maven.provider.MavenBndRepository;\\\n+        name=\"Sonatype\";\\\n+        snapshotUrl=\"https://oss.sonatype.org/content/repositories/snapshots/\";\\\n+        index=\"${.}/sonatype.mvn\";\\\n+        readOnly=true,\\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MjQ1Nw=="}, "originalCommit": {"oid": "d9c59f77e94c0303d9a1c19669696ec665cc1887"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTk0NTczOnYy", "diffSide": "RIGHT", "path": ".github/workflows/cibuild.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOTo1NTozN1rOGrzazQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNjo1M1rOGr6Dfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4NDM5Nw==", "bodyText": "I am not keen on using this action and these changes to the workflow. See #4208 for my suggested alternate.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r448584397", "createdAt": "2020-07-01T19:55:37Z", "author": {"login": "bjhargrave"}, "path": ".github/workflows/cibuild.yml", "diffHunk": "@@ -53,9 +50,31 @@ jobs:\n       with:\n         java-version: ${{ matrix.java }}\n     - name: Build\n-      run: |\n-        ./.github/scripts/${{ matrix.script }}\n+       # Can't upgrade this until https://github.com/GabrielBB/xvfb-action/issues/10 is fixed\n+      uses: GabrielBB/xvfb-action@v1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf3fdabecc966f9f7b8192a30242b31ac9f4a955"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MzExOQ==", "bodyText": "I have reviewed and approved your alternate solution - agreed, it is better. I didn't realise that xvfb was part of the standard GitHub Actions offering.\nI have also rebased this PR onto yours (minus the commit that changes the workflow).", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r448693119", "createdAt": "2020-07-02T01:06:53Z", "author": {"login": "kriegfrj"}, "path": ".github/workflows/cibuild.yml", "diffHunk": "@@ -53,9 +50,31 @@ jobs:\n       with:\n         java-version: ${{ matrix.java }}\n     - name: Build\n-      run: |\n-        ./.github/scripts/${{ matrix.script }}\n+       # Can't upgrade this until https://github.com/GabrielBB/xvfb-action/issues/10 is fixed\n+      uses: GabrielBB/xvfb-action@v1.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4NDM5Nw=="}, "originalCommit": {"oid": "bf3fdabecc966f9f7b8192a30242b31ac9f4a955"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM3NDY1OnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxMzo1N1rOGsUglA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjozOToxMFrOGsVaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNjU0OA==", "bodyText": "We should not be checking in the .metadata/ folder!?", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449126548", "createdAt": "2020-07-02T16:13:57Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs", "diffHunk": "@@ -0,0 +1,9 @@\n+content_assist_proposals_background=255,255,255", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MTMyMw==", "bodyText": "Oops...", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449141323", "createdAt": "2020-07-02T16:39:10Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs", "diffHunk": "@@ -0,0 +1,9 @@\n+content_assist_proposals_background=255,255,255", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNjU0OA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM4MTkwOnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/build.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNTozN1rOGsUkzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjowMzo1N1rOGshmAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNzYzMA==", "bodyText": "There is already a testOSGi task defined by the Bnd Gradle plugin. Why are you not just configuring that task? And also you need to use the configuration avoidance style of writing gradle task for this build.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449127630", "createdAt": "2020-07-02T16:15:37Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDE4MQ==", "bodyText": "Im not a Gradle expert, so please excuse my ignorance, but what's the \"configuration avoidance \" style? I knew there was already a testOSGi task but I didn't know how to reconfigure it.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449140181", "createdAt": "2020-07-02T16:37:00Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNzYzMA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTk5Mw==", "bodyText": "See \n  \n    \n      bnd/biz.aQute.bnd.gradle/build.gradle\n    \n    \n        Lines 22 to 53\n      in\n      35661c2\n    \n    \n    \n    \n\n        \n          \n           tasks.named('test') { \n        \n\n        \n          \n               inputs.files tasks.named('jar') \n        \n\n        \n          \n               systemProperty 'bnd_version', bnd('bnd_version') \n        \n\n        \n          \n               def source = project.file('testresources') \n        \n\n        \n          \n               def target = project.layout.buildDirectory.dir('testresources') \n        \n\n        \n          \n               doFirst { // copy test resources into build dir \n        \n\n        \n          \n                   project.delete(target) \n        \n\n        \n          \n                   copy { \n        \n\n        \n          \n                       from source \n        \n\n        \n          \n                       into target \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           tasks.named('testClasses') { \n        \n\n        \n          \n               def pluginClasspath = { project.files(configurations.runtimeClasspath.allArtifacts.files, \n        \n\n        \n          \n                  configurations.runtimeClasspath.resolvedConfiguration.files) } \n        \n\n        \n          \n               inputs.files(pluginClasspath).withPropertyName('pluginClasspath') \n        \n\n        \n          \n               def pluginClasspathFile = { new File(tasks.getByName('compileTestJava').destinationDir, 'plugin-under-test-metadata.properties') } \n        \n\n        \n          \n               outputs.file(pluginClasspathFile).withPropertyName('pluginClasspathFile') \n        \n\n        \n          \n               doLast { \n        \n\n        \n          \n                   Properties properties = new Properties() \n        \n\n        \n          \n                   properties.setProperty('implementation-classpath', pluginClasspath().asPath) \n        \n\n        \n          \n                   pluginClasspathFile().withOutputStream { \n        \n\n        \n          \n                     properties.store(it, 'plugin-under-test-metadata') \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           tasks.named('release') { \n        \n\n        \n          \n             dependsOn 'groovydoc' \n        \n\n        \n          \n           } \n        \n    \n  \n\n for some examples of configuring tasks that avoid executing the configuration when the task is not part of the task graph.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449165993", "createdAt": "2020-07-02T17:24:35Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNzYzMA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MDkyOQ==", "bodyText": "Fixed, thanks for the pointer.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449340929", "createdAt": "2020-07-03T02:03:57Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNzYzMA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM4NTIwOnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/build.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNjoyM1rOGsUmvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMTo1MVrOGshsYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODEyNg==", "bodyText": "Is this the gradle way to do this?", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449128126", "createdAt": "2020-07-02T16:16:23Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {\n+\t[\n+\t\t'biz.aQute.bndlib',\n+\t\t'biz.aQute.repository',\n+\t\t'biz.aQute.resolve',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'bndtools.api',\n+\t\t'bndtools.builder',\n+\t\t'bndtools.core',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'org.bndtools.headless.build.manager',\n+\t\t'org.bndtools.headless.build.plugin.ant',\n+\t\t'org.bndtools.headless.build.plugin.gradle',\n+\t\t'org.bndtools.templates.template',\n+\t\t'org.bndtools.templating.gitrepo',\n+\t\t'org.bndtools.templating',\n+\t\t'org.bndtools.versioncontrol.ignores.manager',\n+\t\t'org.bndtools.versioncontrol.ignores.plugin.git'\n+\t].each { dependsOn \":$it:jar\" }\n+   description \"Bndtools Core Integration tests\"\n+   group 'test'\n+   inputs.files jar\n+   if (Os.isFamily(Os.FAMILY_WINDOWS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDk5MQ==", "bodyText": "It's the best i found- if you know a better way,  let me know!", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449140991", "createdAt": "2020-07-02T16:38:31Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {\n+\t[\n+\t\t'biz.aQute.bndlib',\n+\t\t'biz.aQute.repository',\n+\t\t'biz.aQute.resolve',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'bndtools.api',\n+\t\t'bndtools.builder',\n+\t\t'bndtools.core',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'org.bndtools.headless.build.manager',\n+\t\t'org.bndtools.headless.build.plugin.ant',\n+\t\t'org.bndtools.headless.build.plugin.gradle',\n+\t\t'org.bndtools.templates.template',\n+\t\t'org.bndtools.templating.gitrepo',\n+\t\t'org.bndtools.templating',\n+\t\t'org.bndtools.versioncontrol.ignores.manager',\n+\t\t'org.bndtools.versioncontrol.ignores.plugin.git'\n+\t].each { dependsOn \":$it:jar\" }\n+   description \"Bndtools Core Integration tests\"\n+   group 'test'\n+   inputs.files jar\n+   if (Os.isFamily(Os.FAMILY_WINDOWS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODEyNg=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MzkzMA==", "bodyText": "Apparently Os.isFamily(Os.FAMILY_UNIX) returns true on macOS. Which means this if/else construct is broken.\nWe do this elsewhere in the build:\n\n  \n    \n      bnd/maven/build.gradle\n    \n    \n         Line 40\n      in\n      35661c2\n    \n    \n    \n    \n\n        \n          \n           if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449173930", "createdAt": "2020-07-02T17:40:10Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {\n+\t[\n+\t\t'biz.aQute.bndlib',\n+\t\t'biz.aQute.repository',\n+\t\t'biz.aQute.resolve',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'bndtools.api',\n+\t\t'bndtools.builder',\n+\t\t'bndtools.core',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'org.bndtools.headless.build.manager',\n+\t\t'org.bndtools.headless.build.plugin.ant',\n+\t\t'org.bndtools.headless.build.plugin.gradle',\n+\t\t'org.bndtools.templates.template',\n+\t\t'org.bndtools.templating.gitrepo',\n+\t\t'org.bndtools.templating',\n+\t\t'org.bndtools.versioncontrol.ignores.manager',\n+\t\t'org.bndtools.versioncontrol.ignores.plugin.git'\n+\t].each { dependsOn \":$it:jar\" }\n+   description \"Bndtools Core Integration tests\"\n+   group 'test'\n+   inputs.files jar\n+   if (Os.isFamily(Os.FAMILY_WINDOWS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODEyNg=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjU2Mw==", "bodyText": "I'm not sure what \"os.name\" is going to throw at me on the various OSes. Using Os.isFamily() is voted the best solution on this SO thread, though the answer is old. I think it's a bit of an oversight that Gradle doesn't have any built-in support for this.\nI have reorded the if/else so that Mac is tested first and Linux is only used if it's not Mac. I think it's more compact. If you really prefer though, I can hand-craft something based on inspection of os.name (I just don't have a good way to verify it as I don't have access to a Mac to test it on).", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449342563", "createdAt": "2020-07-03T02:11:51Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {\n+\t[\n+\t\t'biz.aQute.bndlib',\n+\t\t'biz.aQute.repository',\n+\t\t'biz.aQute.resolve',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'bndtools.api',\n+\t\t'bndtools.builder',\n+\t\t'bndtools.core',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'org.bndtools.headless.build.manager',\n+\t\t'org.bndtools.headless.build.plugin.ant',\n+\t\t'org.bndtools.headless.build.plugin.gradle',\n+\t\t'org.bndtools.templates.template',\n+\t\t'org.bndtools.templating.gitrepo',\n+\t\t'org.bndtools.templating',\n+\t\t'org.bndtools.versioncontrol.ignores.manager',\n+\t\t'org.bndtools.versioncontrol.ignores.plugin.git'\n+\t].each { dependsOn \":$it:jar\" }\n+   description \"Bndtools Core Integration tests\"\n+   group 'test'\n+   inputs.files jar\n+   if (Os.isFamily(Os.FAMILY_WINDOWS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODEyNg=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM4NjYwOnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNjo0OVrOGsUntg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxNjo0OVrOGsUntg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODM3NA==", "bodyText": "The check task already depends on the testOSGi task mentioned above.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449128374", "createdAt": "2020-07-02T16:16:49Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/build.gradle", "diffHunk": "@@ -0,0 +1,37 @@\n+import aQute.bnd.gradle.TestOSGi\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+task testosgi(type: TestOSGi) {\n+\t[\n+\t\t'biz.aQute.bndlib',\n+\t\t'biz.aQute.repository',\n+\t\t'biz.aQute.resolve',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'bndtools.api',\n+\t\t'bndtools.builder',\n+\t\t'bndtools.core',\n+\t\t'biz.aQute.tester.junit-platform',\n+\t\t'org.bndtools.headless.build.manager',\n+\t\t'org.bndtools.headless.build.plugin.ant',\n+\t\t'org.bndtools.headless.build.plugin.gradle',\n+\t\t'org.bndtools.templates.template',\n+\t\t'org.bndtools.templating.gitrepo',\n+\t\t'org.bndtools.templating',\n+\t\t'org.bndtools.versioncontrol.ignores.manager',\n+\t\t'org.bndtools.versioncontrol.ignores.plugin.git'\n+\t].each { dependsOn \":$it:jar\" }\n+   description \"Bndtools Core Integration tests\"\n+   group 'test'\n+   inputs.files jar\n+   if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n+      bndrun 'test.win32.x86_64.bndrun'\n+   } else if (Os.isFamily(Os.FAMILY_UNIX)) {\n+      bndrun 'test.gtk.linux.x86_64.bndrun'\n+   } else if (Os.isFamily(Os.FAMILY_MAC)) {\n+      bndrun 'test.cocoa.macosx.x86_64.bndrun'\n+   }\n+}\n+\n+check {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM5MzczOnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/bnd.bnd", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxODo1M1rOGsUsWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoxODo1M1rOGsUsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyOTU2Mw==", "bodyText": "Since this is a test project and should not be released, you need to make sure it is not released.\n-buildrepo:\n-releaserepo:", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449129563", "createdAt": "2020-07-02T16:18:53Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/bnd.bnd", "diffHunk": "@@ -0,0 +1,52 @@\n+# Set javac settings from JDT prefs\n+-include: ${workspace}/cnf/includes/jdt.bnd, ${workspace}/cnf/includes/bndtools.bnd\n+-sub: *.bnd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTQwMjc2OnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/src/bndtools/core/test/launch/NullContextPresentationEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMToxNFrOGsUxzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo1MzoyNlrOGsf8fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMDk1OA==", "bodyText": "This whole repo is dual licensed under AL2 OR EPL2. Not sure why you have this license header here.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449130958", "createdAt": "2020-07-02T16:21:14Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/src/bndtools/core/test/launch/NullContextPresentationEngine.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*******************************************************************************\n+ * Copyright (c) 2009, 2015 IBM Corporation and others.\n+ *\n+ * This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxMzkxNw==", "bodyText": "This is a cut-and-paste error. NullContextPresentationEngine started off life as a clone of https://github.com/eclipse/eclipse.platform.ui/blob/master/tests/org.eclipse.e4.ui.tests/src/org/eclipse/e4/ui/tests/application/HeadlessContextPresentationEngine.java", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449313917", "createdAt": "2020-07-02T23:53:26Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/src/bndtools/core/test/launch/NullContextPresentationEngine.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*******************************************************************************\n+ * Copyright (c) 2009, 2015 IBM Corporation and others.\n+ *\n+ * This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMDk1OA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTQwNjg0OnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/src/simple/package-info.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMjoxNVrOGsU0Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMjoxNVrOGsU0Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTU4Nw==", "bodyText": "simple.bnd already has these packages as exported, so we can remove the duplicate Export annotation here.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449131587", "createdAt": "2020-07-02T16:22:15Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/src/simple/package-info.java", "diffHunk": "@@ -0,0 +1,3 @@\n+@org.osgi.annotation.bundle.Export", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTQwNzY0OnYy", "diffSide": "RIGHT", "path": "bndtools.core.test/src/simple/pkg/package-info.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMjoyNVrOGsU0uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxOTowNVrOGsgSmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTcwNA==", "bodyText": "simple.bnd already has these packages as exported, so we can remove the duplicate Export annotation here.", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449131704", "createdAt": "2020-07-02T16:22:25Z", "author": {"login": "bjhargrave"}, "path": "bndtools.core.test/src/simple/pkg/package-info.java", "diffHunk": "@@ -0,0 +1,3 @@\n+@org.osgi.annotation.bundle.Export", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxOTU3Ng==", "bodyText": "Fair enough, but just curious - what's best practice, to use the annotation or to mark it for export in the .bnd file?", "url": "https://github.com/bndtools/bnd/pull/4163#discussion_r449319576", "createdAt": "2020-07-03T00:19:05Z", "author": {"login": "kriegfrj"}, "path": "bndtools.core.test/src/simple/pkg/package-info.java", "diffHunk": "@@ -0,0 +1,3 @@\n+@org.osgi.annotation.bundle.Export", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTcwNA=="}, "originalCommit": {"oid": "2aafa21fa7f7d50df4c8fd30bcdaecc5bedbdb14"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1370, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}