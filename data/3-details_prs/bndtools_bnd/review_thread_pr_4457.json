{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDI2MjY2", "number": 4457, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo1ODozMFrOFHMbuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo1ODozMFrOFHMbuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDg4MDU5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/WorkspaceRepositoryDynamic.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo1ODozMFrOIIj23A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjozMzoxNVrOIIqCpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA==", "bodyText": "Well you lost an nice performance fix of using ResourceUtils.matcher(requirement). requirement never changes in the loop, but ResourceUtils.matches(requirement, c) keeps recomputing the filter object every time through the O(n^2) loop. So there was reason for using stream and blindly changing them back can lose things.", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545847004", "createdAt": "2020-12-18T13:58:30Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/WorkspaceRepositoryDynamic.java", "diffHunk": "@@ -39,11 +40,16 @@\n \t}\n \n \tprivate List<Capability> findProvider(Collection<? extends Resource> resources, Requirement requirement) {\n+\t\tList<Capability> l = new ArrayList<>();\n \t\tString namespace = requirement.getNamespace();\n-\t\treturn resources.stream()\n-\t\t\t.flatMap(resource -> ResourceUtils.capabilityStream(resource, namespace))\n-\t\t\t.filter(ResourceUtils.matcher(requirement))\n-\t\t\t.collect(ResourceUtils.toCapabilities());\n+\t\tfor (Resource r : resources) {\n+\t\t\tfor (Capability c : r.getCapabilities(namespace)) {\n+\t\t\t\tif (ResourceUtils.matches(requirement, c)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7996a3b7c558032e4656c50a3de556387feb2f1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0NzgxMQ==", "bodyText": "The code had become completely unreadable. I'll check this optimization. The optimization has got nothing to do with streams.", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545947811", "createdAt": "2020-12-18T16:32:17Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/WorkspaceRepositoryDynamic.java", "diffHunk": "@@ -39,11 +40,16 @@\n \t}\n \n \tprivate List<Capability> findProvider(Collection<? extends Resource> resources, Requirement requirement) {\n+\t\tList<Capability> l = new ArrayList<>();\n \t\tString namespace = requirement.getNamespace();\n-\t\treturn resources.stream()\n-\t\t\t.flatMap(resource -> ResourceUtils.capabilityStream(resource, namespace))\n-\t\t\t.filter(ResourceUtils.matcher(requirement))\n-\t\t\t.collect(ResourceUtils.toCapabilities());\n+\t\tfor (Resource r : resources) {\n+\t\t\tfor (Capability c : r.getCapabilities(namespace)) {\n+\t\t\t\tif (ResourceUtils.matches(requirement, c)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA=="}, "originalCommit": {"oid": "f7996a3b7c558032e4656c50a3de556387feb2f1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0ODMyNg==", "bodyText": "I already have the fix in a commit ready to push.", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545948326", "createdAt": "2020-12-18T16:33:15Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/WorkspaceRepositoryDynamic.java", "diffHunk": "@@ -39,11 +40,16 @@\n \t}\n \n \tprivate List<Capability> findProvider(Collection<? extends Resource> resources, Requirement requirement) {\n+\t\tList<Capability> l = new ArrayList<>();\n \t\tString namespace = requirement.getNamespace();\n-\t\treturn resources.stream()\n-\t\t\t.flatMap(resource -> ResourceUtils.capabilityStream(resource, namespace))\n-\t\t\t.filter(ResourceUtils.matcher(requirement))\n-\t\t\t.collect(ResourceUtils.toCapabilities());\n+\t\tfor (Resource r : resources) {\n+\t\t\tfor (Capability c : r.getCapabilities(namespace)) {\n+\t\t\t\tif (ResourceUtils.matches(requirement, c)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA=="}, "originalCommit": {"oid": "f7996a3b7c558032e4656c50a3de556387feb2f1"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1353, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}