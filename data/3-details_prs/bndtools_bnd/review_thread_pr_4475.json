{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NzAxMzY5", "number": 4475, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODo0NDoyOFrOFLAVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo0MjowNVrOFLVGwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDg0MDUzOnYy", "diffSide": "RIGHT", "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODo0NDoyOFrOIN8u8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzowMjoxMVrOIOWZfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ5NzQ1Nw==", "bodyText": "Shouldn't this be:\n} else if (!Files.isRegularFile(javaPath.resolve(Project.BNDFILE))) {", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r551497457", "createdAt": "2021-01-04T18:44:28Z", "author": {"login": "bjhargrave"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,6 +148,10 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else if (!projPath.append(Project.BNDFILE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d753053333aed63f03b4a9087c847470adff1de"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNzk1MA==", "bodyText": "Yes, that would probably be more efficient and more compact, thanks for the tip.\nI've done this as well as added a few more different checks for weird error-causing conditions that could occur so that I can make the error message even more specific.", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r551917950", "createdAt": "2021-01-05T13:02:11Z", "author": {"login": "kriegfrj"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,6 +148,10 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else if (!projPath.append(Project.BNDFILE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ5NzQ1Nw=="}, "originalCommit": {"oid": "8d753053333aed63f03b4a9087c847470adff1de"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDI0NDQ4OnYy", "diffSide": "RIGHT", "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo0MjowNVrOIOcMDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMzo0NjoyNlrOIOw8bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxMjgxMg==", "bodyText": "This is unreachable. If the file exists and is not a directory, then it must be a regular file. There are no other choices since you follow symlinks.", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r552012812", "createdAt": "2021-01-05T15:42:05Z", "author": {"login": "bjhargrave"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,13 +148,24 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tPath bndPath = javaPath.resolve(Project.BNDFILE);\n+\n+\t\t\t\t\t\t\tif (!Files.exists(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = \"The project does not have a \" + Project.BNDFILE + \" file\";\n+\t\t\t\t\t\t\t} else if (!Files.isReadable(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not readable\";\n+\t\t\t\t\t\t\t} else if (Files.isDirectory(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is a directory\";\n+\t\t\t\t\t\t\t} else if (!Files.isRegularFile(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not a regular file\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95eff319664794252caccc82f9513a641b49ca75"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxNDIzNA==", "bodyText": "It could be a pipe or a device or some other special file?", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r552014234", "createdAt": "2021-01-05T15:44:10Z", "author": {"login": "kriegfrj"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,13 +148,24 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tPath bndPath = javaPath.resolve(Project.BNDFILE);\n+\n+\t\t\t\t\t\t\tif (!Files.exists(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = \"The project does not have a \" + Project.BNDFILE + \" file\";\n+\t\t\t\t\t\t\t} else if (!Files.isReadable(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not readable\";\n+\t\t\t\t\t\t\t} else if (Files.isDirectory(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is a directory\";\n+\t\t\t\t\t\t\t} else if (!Files.isRegularFile(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not a regular file\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxMjgxMg=="}, "originalCommit": {"oid": "95eff319664794252caccc82f9513a641b49ca75"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxOTI2Mw==", "bodyText": "How could the bnd.bnd path be a special file? I don't see how that could ever be the case. I think you want to test for the normal case first (isRegularFile) and it that fails, then try to make a nice error message.", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r552019263", "createdAt": "2021-01-05T15:51:38Z", "author": {"login": "bjhargrave"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,13 +148,24 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tPath bndPath = javaPath.resolve(Project.BNDFILE);\n+\n+\t\t\t\t\t\t\tif (!Files.exists(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = \"The project does not have a \" + Project.BNDFILE + \" file\";\n+\t\t\t\t\t\t\t} else if (!Files.isReadable(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not readable\";\n+\t\t\t\t\t\t\t} else if (Files.isDirectory(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is a directory\";\n+\t\t\t\t\t\t\t} else if (!Files.isRegularFile(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not a regular file\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxMjgxMg=="}, "originalCommit": {"oid": "95eff319664794252caccc82f9513a641b49ca75"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1Mjg3Nw==", "bodyText": "How could the bnd.bnd path be a special file? I don't see how that could ever be the case. I think you want to test for the normal case first (isRegularFile) and it that fails, then try to make a nice error message.\n\nIt could be a special file if the user does something a bit silly or tries to be a bit smart. Admittedly, this is not an expected scenario. But I think it's a good rule of UI design to be able to handle the user doing something silly and/or unexpected and to give them the most useful feedback possible to help them fix the problem, especially if it is relatively simple and inexpensive to do so. In this case, the cost of the extra test is low (both in execution overhead and code size) and it's not in a performance-critical part of the code, so I'm struggling to see the downside in including it. But if you insist, I will remove the specific check for a directory.\nThere is already a \"nice\" error message (or at least, as nice as it can be) as the default:\n\n  \n    \n      bnd/bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java\n    \n    \n         Line 133\n      in\n      0a3846f\n    \n    \n    \n    \n\n        \n          \n           String msg = \"Cannot find bnd project: check that it is actually a bnd project and is part of the bnd workspace\"; \n        \n    \n  \n\n\nIf none of the other diagnostic checks finds any more specific cause, this is what will be shown. If you can think of a better generic message, or think of more diagnostic tests that could be done, then I'm all ears!", "url": "https://github.com/bndtools/bnd/pull/4475#discussion_r552352877", "createdAt": "2021-01-06T03:46:26Z", "author": {"login": "kriegfrj"}, "path": "bndtools.builder/src/org/bndtools/builder/BndtoolsBuilder.java", "diffHunk": "@@ -148,13 +148,24 @@\n \t\t\t\t\t\tif (!Files.isSameFile(javaPath.getParent(), wsPath)) {\n \t\t\t\t\t\t\tmsg = \"The project directory: \" + javaPath + \" is not a subdirectory of the bnd workspace \"\n \t\t\t\t\t\t\t\t+ wsPath;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tPath bndPath = javaPath.resolve(Project.BNDFILE);\n+\n+\t\t\t\t\t\t\tif (!Files.exists(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = \"The project does not have a \" + Project.BNDFILE + \" file\";\n+\t\t\t\t\t\t\t} else if (!Files.isReadable(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not readable\";\n+\t\t\t\t\t\t\t} else if (Files.isDirectory(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is a directory\";\n+\t\t\t\t\t\t\t} else if (!Files.isRegularFile(bndPath)) {\n+\t\t\t\t\t\t\t\tmsg = Project.BNDFILE + \" is not a regular file\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxMjgxMg=="}, "originalCommit": {"oid": "95eff319664794252caccc82f9513a641b49ca75"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1306, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}