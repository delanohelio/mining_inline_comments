{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzA0NDg1", "number": 3852, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoyMzozNVrODrGw5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjoxNTozOFrODrL5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTI2MTgwOnYy", "diffSide": "RIGHT", "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoyMzozNVrOF7QNkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDoxMTo0MVrOF7UF4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3NTkyMw==", "bodyText": "See the methods for this in Exceptions, they provide solid support to get the original cause", "url": "https://github.com/bndtools/bnd/pull/3852#discussion_r397675923", "createdAt": "2020-03-25T08:23:35Z", "author": {"login": "pkriens"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "diffHunk": "@@ -206,8 +207,14 @@ private void parseResource(Archive archive, String parent) throws Exception {\n \t\t\t}\n \t\t\taddInformationCapability(rb, archive.toString(), parent);\n \t\t} catch (Exception e) {\n+\t\t\tThrowable theException = e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a351494424dfab4b06df79d8c156b81d915ad5a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczOTQ5MA==", "bodyText": "Makes sense. I will use the Exceptions.unrollCause method. I guess we can use this in any case.", "url": "https://github.com/bndtools/bnd/pull/3852#discussion_r397739490", "createdAt": "2020-03-25T10:11:41Z", "author": {"login": "juergen-albert"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "diffHunk": "@@ -206,8 +207,14 @@ private void parseResource(Archive archive, String parent) throws Exception {\n \t\t\t}\n \t\t\taddInformationCapability(rb, archive.toString(), parent);\n \t\t} catch (Exception e) {\n+\t\t\tThrowable theException = e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3NTkyMw=="}, "originalCommit": {"oid": "5a351494424dfab4b06df79d8c156b81d915ad5a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjEwMjI3OnYy", "diffSide": "RIGHT", "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjoxNTozOFrOF7YURQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxNjoxMFrOF7jCAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgwODcwOQ==", "bodyText": "This will unroll all the way back to the root cause. If you only want to unroll off any InvocactionTargetExceptions, then you want to do:\nThrowable theException = Exceptions.unrollCause(e, InvocationTargetException.class);\nSee for example:\n\n  \n    \n      bnd/biz.aQute.bndlib/src/aQute/bnd/osgi/Processor.java\n    \n    \n        Lines 419 to 420\n      in\n      a6d93a4\n    \n    \n    \n    \n\n        \n          \n           // unroll InvocationTargetException \n        \n\n        \n          \n           t = Exceptions.unrollCause(t, InvocationTargetException.class);", "url": "https://github.com/bndtools/bnd/pull/3852#discussion_r397808709", "createdAt": "2020-03-25T12:15:38Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "diffHunk": "@@ -206,8 +207,9 @@ private void parseResource(Archive archive, String parent) throws Exception {\n \t\t\t}\n \t\t\taddInformationCapability(rb, archive.toString(), parent);\n \t\t} catch (Exception e) {\n+\t\t\tThrowable theException = Exceptions.unrollCause(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e27a9eeb038adb29aa4d084ed071c59541d37d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2OTA1NQ==", "bodyText": "Maybe one day I will manage to create PR that does not need at least 3 iterations :-)", "url": "https://github.com/bndtools/bnd/pull/3852#discussion_r397869055", "createdAt": "2020-03-25T13:51:36Z", "author": {"login": "juergen-albert"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "diffHunk": "@@ -206,8 +207,9 @@ private void parseResource(Archive archive, String parent) throws Exception {\n \t\t\t}\n \t\t\taddInformationCapability(rb, archive.toString(), parent);\n \t\t} catch (Exception e) {\n+\t\t\tThrowable theException = Exceptions.unrollCause(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgwODcwOQ=="}, "originalCommit": {"oid": "71e27a9eeb038adb29aa4d084ed071c59541d37d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NDI1OA==", "bodyText": "I think there is a rumour that Chuck Norris could once bypass BJ with only 2 iterations ...", "url": "https://github.com/bndtools/bnd/pull/3852#discussion_r397984258", "createdAt": "2020-03-25T16:16:10Z", "author": {"login": "pkriens"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/pom/provider/Traverser.java", "diffHunk": "@@ -206,8 +207,9 @@ private void parseResource(Archive archive, String parent) throws Exception {\n \t\t\t}\n \t\t\taddInformationCapability(rb, archive.toString(), parent);\n \t\t} catch (Exception e) {\n+\t\t\tThrowable theException = Exceptions.unrollCause(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgwODcwOQ=="}, "originalCommit": {"oid": "71e27a9eeb038adb29aa4d084ed071c59541d37d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1431, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}