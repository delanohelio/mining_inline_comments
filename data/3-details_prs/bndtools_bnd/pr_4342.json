{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MjY3MTIx", "number": 4342, "title": "[junit-platform] Handle subclasses of comparison failure assertions", "bodyText": "Fixes #4338.\nSigned-off-by: Fr Jeremy Krieg fr.jkrieg@greekwelfaresa.org.au", "createdAt": "2020-10-06T05:08:58Z", "url": "https://github.com/bndtools/bnd/pull/4342", "merged": true, "mergeCommit": {"oid": "e573f001bc91f6d8ce72de32e2fb042e611ed2c1"}, "closed": true, "closedAt": "2020-10-07T14:12:52Z", "author": {"login": "kriegfrj"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP6USQgFqTUwMzA5ODQ0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQNoJ9gFqTUwMzkyNDQ4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDk4NDQ4", "url": "https://github.com/bndtools/bnd/pull/4342#pullrequestreview-503098448", "createdAt": "2020-10-06T15:34:57Z", "commit": {"oid": "121a75375600b87afc4bccb3098111f156816ec8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNDo1N1rOHdNygw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNzowMlrOHdN59g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NjY3NQ==", "bodyText": "I think these should be Predicate<Object>.", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500396675", "createdAt": "2020-10-06T15:34:57Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "121a75375600b87afc4bccb3098111f156816ec8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NzYzMw==", "bodyText": "We then always make a non-null predicate:\nstatic Predicate<Object> tryLoad(String name) {\n\t\ttry {\n\t\t\treturn Class.forName(name)::isInstanceOf;\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\treturn obj -> false;\n\t\t}\n}", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500397633", "createdAt": "2020-10-06T15:36:00Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tJUNIT4_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tASSERTION_FAILED_ERROR;\n+\tstatic final Class<? extends AssertionError>\tMULTIPLE_FAILURES_ERROR;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tstatic Class<? extends AssertionError> tryLoad(String name) {\n+\t\ttry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "121a75375600b87afc4bccb3098111f156816ec8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5ODU4Mg==", "bodyText": "With the above change to Predicate<Object>, the if test becomes more simple and we avoid repeating the test logic:\nif (ASSERTION_FAILED_ERROR.test(exception)) {", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500398582", "createdAt": "2020-10-06T15:37:02Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tJUNIT4_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tASSERTION_FAILED_ERROR;\n+\tstatic final Class<? extends AssertionError>\tMULTIPLE_FAILURES_ERROR;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tstatic Class<? extends AssertionError> tryLoad(String name) {\n+\t\ttry {\n+\t\t\treturn (Class<? extends AssertionError>) Class.forName(name);\n+\t\t} catch (ClassNotFoundException cnfe) {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\tstatic {\n+\t\tJUNIT3_COMPARISON_FAILURE = tryLoad(\"junit.framework.ComparisonFailure\");\n+\t\tJUNIT4_COMPARISON_FAILURE = tryLoad(\"org.junit.ComparisonFailure\");\n+\t\tASSERTION_FAILED_ERROR = tryLoad(\"org.opentest4j.AssertionFailedError\");\n+\t\tMULTIPLE_FAILURES_ERROR = tryLoad(\"org.opentest4j.MultipleFailuresError\");\n+\t}\n+\n+\tstatic class ExpectedActualBuilder implements Predicate<Throwable> {\n+\n+\t\tStringBuilder\texpectedBuilder\t= new StringBuilder();\n+\t\tStringBuilder\tactualBuilder\t= new StringBuilder();\n+\t\tboolean\t\t\tfirst\t\t\t= true;\n+\n+\t\tvoid addExpectedActual(String expected, String actual) {\n+\t\t\tif (first) {\n+\t\t\t\tfirst = false;\n+\t\t\t} else {\n+\t\t\t\texpectedBuilder.append(\"\\n\\n\");\n+\t\t\t\tactualBuilder.append(\"\\n\\n\");\n+\t\t\t}\n+\t\t\texpectedBuilder.append(expected);\n+\t\t\tactualBuilder.append(actual);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean test(Throwable exception) {\n+\t\t\t// NOTE:\n+\t\t\t// The code in this method is carefully structured to avoid\n+\t\t\t// NoClassDefFoundError. The null test for each if first\n+\t\t\t// confirms that the class is available before proceeding into\n+\t\t\t// the block, so that by that stage it knows that the class\n+\t\t\t// is available and that NCDFE will not be thrown. On the other\n+\t\t\t// hand, if the class is not on the classpath then the code\n+\t\t\t// will never be executed and the thread context classloader\n+\t\t\t// will not attempt to load the class, so again no NCDFE.\n+\t\t\t//\n+\t\t\t// This is particularly important for the JUnit 3/4 comparison\n+\t\t\t// failure assertions, because the OpenTest4J ones will be on the\n+\t\t\t// classpath courtesy of junit-platform-launcher's dependencies.\n+\t\t\tif (ASSERTION_FAILED_ERROR != null && ASSERTION_FAILED_ERROR.isAssignableFrom(exception.getClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "121a75375600b87afc4bccb3098111f156816ec8"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7d26b4f52671c9facd8191ac4e55af5de490fe", "author": {"user": {"login": "kriegfrj", "name": "Fr Jeremy Krieg"}}, "url": "https://github.com/bndtools/bnd/commit/6c7d26b4f52671c9facd8191ac4e55af5de490fe", "committedDate": "2020-10-07T05:49:31Z", "message": "[junit-platform] Handle subclasses of comparison failure assertions\n\nFixes #4338.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "121a75375600b87afc4bccb3098111f156816ec8", "author": {"user": {"login": "kriegfrj", "name": "Fr Jeremy Krieg"}}, "url": "https://github.com/bndtools/bnd/commit/121a75375600b87afc4bccb3098111f156816ec8", "committedDate": "2020-10-06T05:04:12Z", "message": "[junit-platform] Handle subclasses of comparison failure assertions\n\nFixes #4338.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>"}, "afterCommit": {"oid": "6c7d26b4f52671c9facd8191ac4e55af5de490fe", "author": {"user": {"login": "kriegfrj", "name": "Fr Jeremy Krieg"}}, "url": "https://github.com/bndtools/bnd/commit/6c7d26b4f52671c9facd8191ac4e55af5de490fe", "committedDate": "2020-10-07T05:49:31Z", "message": "[junit-platform] Handle subclasses of comparison failure assertions\n\nFixes #4338.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTI0NDg4", "url": "https://github.com/bndtools/bnd/pull/4342#pullrequestreview-503924488", "createdAt": "2020-10-07T14:12:39Z", "commit": {"oid": "6c7d26b4f52671c9facd8191ac4e55af5de490fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3109, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}