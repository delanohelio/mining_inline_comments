{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4Mzc2NDIz", "number": 3967, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMjo0OVrOD1ucBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMjo0OVrOD1ucBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjYxOTU5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/bundle/engine/discovery/BundleSelectorResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMjo0OVrOGLTDQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzoxNDoxN1rOGLXGBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5OTY0OA==", "bodyText": "Putting NoClassDefFoundError here can hide our own stupidity in other parts of this code :-( Perhaps we should narrow the window for catching NoClassDefFoundError to only the calls to testClass.getDeclaredMethods() and\ttestClass.getDeclaredFields() since I think that is the only source for which we need to worry about it?", "url": "https://github.com/bndtools/bnd/pull/3967#discussion_r414499648", "createdAt": "2020-04-24T11:22:49Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.tester.junit-platform/src/aQute/tester/bundle/engine/discovery/BundleSelectorResolver.java", "diffHunk": "@@ -389,7 +395,8 @@ private void markClassesResolved(Bundle bundle) {\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn selectMethod(testClass, DiscoverySelectors.selectMethod(testcase));\n \t\t\t\t\t}\n-\t\t\t\t} catch (ClassNotFoundException cnfe) {\n+\t\t\t\t} catch (ClassNotFoundException | NoClassDefFoundError cnfe) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d5cc5895153b950e4257bf0551af97cde7529e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2NTg5Mg==", "bodyText": "Fair point. Note that loadClass() can throw NoClassDefFoundError too if the superclass doesn't resolve; see here:\n\n  \n    \n      bnd/biz.aQute.tester.test/test/aQute/tester/bundle/engine/test/BundleEngineTest.java\n    \n    \n        Lines 1227 to 1244\n      in\n      5693958\n    \n    \n    \n    \n\n        \n          \n           @Test \n        \n\n        \n          \n           @Tag(CUSTOM_LAUNCH) \n        \n\n        \n          \n           public void testClass_withUnsatisifiedSuperclass_raisesAnError() { \n        \n\n        \n          \n           \tbuilder.excludeExport(\"aQute.tester.test.params\"); \n        \n\n        \n          \n           \tstartLaunchpad(); \n        \n\n        \n          \n           \tBundle test = buildTestBundle(JUnit5ParameterizedSubclassTest.class, TestClass.class) \n        \n\n        \n          \n           \t\t.importPackage(\"aQute.tester.test.params;resolution:=optional\") \n        \n\n        \n          \n           \t\t.start(); \n        \n\n        \n          \n            \n        \n\n        \n          \n           \tengineInFramework().execute() \n        \n\n        \n          \n           \t\t.all() \n        \n\n        \n          \n           \t\t.debug(debugStr) \n        \n\n        \n          \n           \t\t.assertThatEvents() \n        \n\n        \n          \n           \t\t.haveExactly(1, \n        \n\n        \n          \n           \t\t\tevent(uniqueIdSubstring(test.getSymbolicName()), testClass(JUnit5ParameterizedSubclassTest.class), \n        \n\n        \n          \n           \t\t\t\tfinishedWithFailure(instanceOf(NoClassDefFoundError.class), \n        \n\n        \n          \n           \t\t\t\t\tmessage(x -> x.matches(\"^(?si).*\" + JUnit5ParameterizedTest.class.getName()))))); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nSo I have included the loadClass() in the scope of the catch for NoClassDefFoundError too.", "url": "https://github.com/bndtools/bnd/pull/3967#discussion_r414565892", "createdAt": "2020-04-24T13:14:17Z", "author": {"login": "kriegfrj"}, "path": "biz.aQute.tester.junit-platform/src/aQute/tester/bundle/engine/discovery/BundleSelectorResolver.java", "diffHunk": "@@ -389,7 +395,8 @@ private void markClassesResolved(Bundle bundle) {\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn selectMethod(testClass, DiscoverySelectors.selectMethod(testcase));\n \t\t\t\t\t}\n-\t\t\t\t} catch (ClassNotFoundException cnfe) {\n+\t\t\t\t} catch (ClassNotFoundException | NoClassDefFoundError cnfe) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5OTY0OA=="}, "originalCommit": {"oid": "95d5cc5895153b950e4257bf0551af97cde7529e"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1461, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}