{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMzI3OTY2", "number": 4307, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzoxODoyOVrOEiHHzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NToyNFrOEiNGZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjAzNzI3OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzoxODoyOVrOHPzItg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozMzoyN1rOHP8ZsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMyODUwMg==", "bodyText": "This is kind of expensive as it will read the entire jar when all you need is the manifest. It is less costly to use Bnd Domain class (Domain.domain(File)) to process the manifest and get the BSN.\n\n  \n    \n      bnd/biz.aQute.bndlib/src/aQute/bnd/osgi/Domain.java\n    \n    \n        Lines 509 to 519\n      in\n      aea111f\n    \n    \n    \n    \n\n        \n          \n           // default & last. Assume JAR \n        \n\n        \n          \n           try (JarFile jf = new JarFile(file, false)) { \n        \n\n        \n          \n           \tManifest m = jf.getManifest(); \n        \n\n        \n          \n           \tif (m != null) { \n        \n\n        \n          \n           \t\tDomain domain = domain(m); \n        \n\n        \n          \n           \t\tJarEntry entry = jf.getJarEntry(domain.getLocalization()); \n        \n\n        \n          \n           \t\tif (entry != null) { \n        \n\n        \n          \n           \t\t\tdomain.translation.load(jf.getInputStream(entry)); \n        \n\n        \n          \n           \t\t} \n        \n\n        \n          \n           \t\treturn domain; \n        \n\n        \n          \n           \t}", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486328502", "createdAt": "2020-09-10T13:18:29Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -262,9 +263,19 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \t\t\t&& (project.getPlugin(\"biz.aQute.bnd:bnd-maven-plugin\") != null)) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry (Jar jar = new Jar(artifact.getFile())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df37bdc459793a9d88a525df3b55a2d13cc4c202"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMzMzM0NQ==", "bodyText": "right right, I'll fix.", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486333345", "createdAt": "2020-09-10T13:25:19Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -262,9 +263,19 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \t\t\t&& (project.getPlugin(\"biz.aQute.bnd:bnd-maven-plugin\") != null)) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry (Jar jar = new Jar(artifact.getFile())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMyODUwMg=="}, "originalCommit": {"oid": "df37bdc459793a9d88a525df3b55a2d13cc4c202"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MDMwNQ==", "bodyText": "fixed", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486480305", "createdAt": "2020-09-10T16:33:27Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -262,9 +263,19 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \t\t\t&& (project.getPlugin(\"biz.aQute.bnd:bnd-maven-plugin\") != null)) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry (Jar jar = new Jar(artifact.getFile())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMyODUwMg=="}, "originalCommit": {"oid": "df37bdc459793a9d88a525df3b55a2d13cc4c202"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzAxMTYzOnYy", "diffSide": "RIGHT", "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDoxMFrOHP8zrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDoxMFrOHP8zrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Njk1Nw==", "bodyText": "getBundleSymbolicName can return null. Are you counting on the NPE from of ending up in the catch block?", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486486957", "createdAt": "2020-09-10T16:44:10Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());\n+\n+\t\t\t\tbsn = Optional.of(domain.getBundleSymbolicName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzAxMjgzOnYy", "diffSide": "RIGHT", "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDozNFrOHP80hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NDozNFrOHP80hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NzE3Mw==", "bodyText": ".orElseGet(artifact::getArtifactId)", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486487173", "createdAt": "2020-09-10T16:44:34Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());\n+\n+\t\t\t\tbsn = Optional.of(domain.getBundleSymbolicName())\n+\t\t\t\t\t.map(Map.Entry::getKey)\n+\t\t\t\t\t.orElseGet(() -> artifact.getArtifactId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzAxNjY5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0NToyNFrOHP820w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyMDoyOFrOHP-Ihw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw==", "bodyText": "domain can be null. Are you counting on the NPE dereferencing domain ending up in the catch block?", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486487763", "createdAt": "2020-09-10T16:45:24Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMDc2MQ==", "bodyText": "how about:\n\t\t\tArtifact artifact = project.getArtifact();\n\n\t\t\tString bsn = artifact.getArtifactId();\n\n\t\t\ttry {\n\t\t\t\tbsn = Optional.ofNullable(artifact.getFile())\n\t\t\t\t\t.map(asFunction(Domain::domain))\n\t\t\t\t\t.map(Domain::getBundleSymbolicName)\n\t\t\t\t\t.map(Map.Entry::getKey)\n\t\t\t\t\t.orElseGet(artifact::getArtifactId);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t\"Could not get the Bundle-SymbolicName from the project artifact {}, falling back to artifactId {}\",\n\t\t\t\t\tartifact, bsn, e);\n\t\t\t}", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486500761", "createdAt": "2020-09-10T17:07:04Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMTg4Mw==", "bodyText": "That's fine, but you will not log any warning if the jar has no manifest or no BSN which I though you wanted to log.", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486501883", "createdAt": "2020-09-10T17:09:07Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwNDYyOA==", "bodyText": "not precisely, if the project HAS the bnd-maven-plugin (already checked) and the artifact IS NOT a bundle, then something went wrong, no? Isn't that a different problem entirely? the resolver would fail to find the bundle since it couldn't be indexed as a proper OSGi bundle. It was not my intention to capture all those scenarios from this specific logic whose only job is to find a suitable value for inferred -runrequires.", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486504628", "createdAt": "2020-09-10T17:13:38Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwNzgwNw==", "bodyText": "so the question is... should it be capturing all those cases?", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486507807", "createdAt": "2020-09-10T17:19:04Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwODA2OA==", "bodyText": "I've updated with new logic... let's go from that.", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486508068", "createdAt": "2020-09-10T17:19:32Z", "author": {"login": "rotty3000"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwODY3OQ==", "bodyText": "I don't think so. I was just pointing out that your original commit logged for all those case. I think we only need to log for the exception case (as long as we don't NPE).", "url": "https://github.com/bndtools/bnd/pull/4307#discussion_r486508679", "createdAt": "2020-09-10T17:20:28Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bnd.maven/src/aQute/bnd/maven/lib/resolve/BndrunContainer.java", "diffHunk": "@@ -263,8 +265,22 @@ public void setRunrequiresFromProjectArtifact(Run run) {\n \n \t\t\tArtifact artifact = project.getArtifact();\n \n+\t\t\tString bsn = artifact.getArtifactId();\n+\n+\t\t\ttry {\n+\t\t\t\tDomain domain = Domain.domain(artifact.getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Nzc2Mw=="}, "originalCommit": {"oid": "8beb810e77725f50e1716d8fd8faf89a6a0f3c18"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1317, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}