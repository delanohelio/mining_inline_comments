{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MzgxNDYy", "number": 4442, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo0ODo0NVrOFCT-dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1OTowOFrOFC-Bbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTY4NzU5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo0ODo0NVrOIBY_xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzo1ODo0NlrOIBdcoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyOTAyOQ==", "bodyText": "Does this mean we also need properties files for each micro release since version can equals \"5.2.1\"? This adds complexity to fix releases.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538329029", "createdAt": "2020-12-08T12:48:45Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2Mzc2MA==", "bodyText": "I looked at how you handle the version in About and you do not use micro releases so far. I agree with that since micro releases should be bug fixes and not change public API. The defaults are public API since people can depend on it. So we can fix a bug in the defaults but we should not make any modification anyone can depend on. I.e. no new defaults.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538363760", "createdAt": "2020-12-08T13:24:05Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyOTAyOQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5NjM1MA==", "bodyText": "You would need to look in a micro release tag to see that we set Current to a micro version. So that would need to be handled here.\n34d22ae#diff-2989e02189b9389c9d08724df134efb45be4d59982b8e0954759aa61e239dacdR54", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538396350", "createdAt": "2020-12-08T13:54:15Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyOTAyOQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQwMTk1Mg==", "bodyText": "I had looked in About and they had no micro but I now realize this happens in the release branch :-)\nI fix this.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538401952", "createdAt": "2020-12-08T13:58:46Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyOTAyOQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTY5NDIxOnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo0OTo1MFrOIBZD2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyNDo1M1rOIBbK4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMDA3NQ==", "bodyText": "Do you need to handle -include or ${.} processing? Or are these files just simple properties files even though they have .bnd extensions?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538330075", "createdAt": "2020-12-08T12:49:50Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));\n+\t\tURL url = Workspace.class.getResource(version + \".bnd\");\n+\t\tif (url == null) {\n+\t\t\terror(\"%s = %s, this is not a valid released bnd version. Using current version %s\",\n+\t\t\t\tConstants.VERSIONDEFAULTS, version, current);\n+\t\t\turl = Workspace.class.getResource(current + \".bnd\");\n+\t\t\tassert url != null : \"We must have a specific defaults resource\";\n+\t\t}\n+\t\ttry (InputStream in = url.openStream()) {\n+\t\t\tprops.load(in);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2NDY0Mg==", "bodyText": "There is no 'current' file since they are in the resources. We could name them properties to indicate that some instructions do not work.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538364642", "createdAt": "2020-12-08T13:24:53Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\tprivate void fixupVersionDefaults(Properties props) throws IOException {\n+\t\tVersion current = About.CURRENT.getWithoutQualifier();\n+\t\tString version = Strings.trim(getProperty(Constants.VERSIONDEFAULTS, current.toString()));\n+\t\tURL url = Workspace.class.getResource(version + \".bnd\");\n+\t\tif (url == null) {\n+\t\t\terror(\"%s = %s, this is not a valid released bnd version. Using current version %s\",\n+\t\t\t\tConstants.VERSIONDEFAULTS, version, current);\n+\t\t\turl = Workspace.class.getResource(current + \".bnd\");\n+\t\t\tassert url != null : \"We must have a specific defaults resource\";\n+\t\t}\n+\t\ttry (InputStream in = url.openStream()) {\n+\t\t\tprops.load(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMDA3NQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTY5ODE1OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.3.0.bnd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1MDozMlrOIBZGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyNToyOVrOIBbNPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMDc0MQ==", "bodyText": "Is this a new default feature for 5.3? I was not aware we are always shading conditional packages. How is that different than not shading them?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538330741", "createdAt": "2020-12-08T12:50:32Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.3.0.bnd", "diffHunk": "@@ -0,0 +1,8 @@\n+# 5.3.0 defaults\n+\n+-dsannotations          *\n+-metatypeannotations    *\n+-cdiannotations         *\n+-contract               *\n+\n+-shade                  ${-conditionalpackage}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2NTI0NQ==", "bodyText": "No, this is just an example, forgot to mention this in the commit comment. That should go.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538365245", "createdAt": "2020-12-08T13:25:29Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.3.0.bnd", "diffHunk": "@@ -0,0 +1,8 @@\n+# 5.3.0 defaults\n+\n+-dsannotations          *\n+-metatypeannotations    *\n+-cdiannotations         *\n+-contract               *\n+\n+-shade                  ${-conditionalpackage}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMDc0MQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTcwOTQxOnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.2.0.bnd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1MjoyM1rOIBZN0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyNTo0NFrOIBbONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMjYyNQ==", "bodyText": "These are all in place a long time are are not new for 5.2? Since the code already assumes these defaults, I don't think we should duplicate them since it then looks like they have been set in the workspace rather than actually just defaulting.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538332625", "createdAt": "2020-12-08T12:52:23Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.2.0.bnd", "diffHunk": "@@ -0,0 +1,7 @@\n+# 5.2.0 defaults\n+\n+-dsannotations          *\n+-metatypeannotations    *\n+-cdiannotations         *\n+-contract               *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2NTQ5NQ==", "bodyText": "Just for illustration", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538365495", "createdAt": "2020-12-08T13:25:44Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/5.2.0.bnd", "diffHunk": "@@ -0,0 +1,7 @@\n+# 5.2.0 defaults\n+\n+-dsannotations          *\n+-metatypeannotations    *\n+-cdiannotations         *\n+-contract               *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMjYyNQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTcxNTM0OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1MzozMVrOIBZRtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyODoxNlrOIBbXyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMzYyMQ==", "bodyText": "Doesn't this then override any properties set in the cnf?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538333621", "createdAt": "2020-12-08T12:53:31Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2Nzk0Ng==", "bodyText": "Nope. I am using an intermediate processor.\n       defaults <- version defaults <- workspace <- project\n                             ^^^\n\nThe version defaults is a new intermediate. Only this processor is changed. If you set a property in the workspace, it will be found before the version defaults and/or overall defaults.\nWe cannot change the overall defaults since this would interfere with different workspaces that would pick different version defaults.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538367946", "createdAt": "2020-12-08T13:28:16Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = layout;\n \t\tsetBuildDir(IO.getFile(BND_DEFAULT_WS, CNFDIR));\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMzYyMQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTcxNjY5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1Mzo0NFrOIBZSjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyOTozM1rOIBbc9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMzgzOQ==", "bodyText": "Doesn't this then override any properties set in the cnf? I guess some tests would have shown this?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538333839", "createdAt": "2020-12-08T12:53:44Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2OTI2OA==", "bodyText": "Again, there is a new intermediate processor between the workspace & the old defaults. So inheritance works as it always did. The version defaults have their own Processor/Properties", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538369268", "createdAt": "2020-12-08T13:29:33Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,52 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzMzgzOQ=="}, "originalCommit": {"oid": "4a184db4055c946c234e33992a9c847e9cfbe3d9"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MzA2OTc2OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjo0ODo1M1rOIB5zGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDo0MToyM1rOICN-_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjQ1OQ==", "bodyText": "The change in this constructor does not do anything useful since there is no user-managed cnf folder in which they can set -versiondefaults to some meaningful value. This includes things using standalone workspace (bndruns, maven, gradle). They can only control a bndrun file which is read after the version defaults are already set in the standalone workspace. So this proposal only works for Bnd workspace projects but it does not work for their bndruns using -standalone.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r538866459", "createdAt": "2020-12-08T22:48:53Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,53 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e961ff962e817519a98b4851f5ca3d1320297a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE5NzE4MQ==", "bodyText": "You are right, this need to be handled in the createStandaloneWorkspace() method after the properties are read. I've added this and some test cases for bnd, default, and standalone workspaces.\nSince these are the  only way you can create a workspace I assume maven and gradle are covered?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r539197181", "createdAt": "2020-12-09T10:41:23Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -292,24 +292,53 @@ public Workspace(File workspaceDir) throws Exception {\n \t}\n \n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults(this.getParent()\n+\t\t\t.getProperties());\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n \tprivate Workspace(WorkspaceLayout layout) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjQ1OQ=="}, "originalCommit": {"oid": "75e961ff962e817519a98b4851f5ca3d1320297a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjU1NTE4OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NToyM1rOICYyEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NToyM1rOICYyEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NDA5OQ==", "bodyText": "Not sure why this needs to be in a finally since if the method throws an exception, the created workspace object is not visible to the caller who just gets thrown the exception.  I think you just need to call fixup before you return the workspace object.", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r539374099", "createdAt": "2020-12-09T14:55:23Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -1207,43 +1263,46 @@ public static Workspace createStandaloneWorkspace(Processor run, URI base) throw\n \n \t\tAtomicBoolean copyAll = new AtomicBoolean(false);\n \t\tAtomicInteger counter = new AtomicInteger();\n-\t\tParameters standalone = new Parameters(run.getProperty(STANDALONE), ws);\n-\t\tstandalone.stream()\n-\t\t\t.filterKey(locationStr -> {\n-\t\t\t\tif (\"true\".equalsIgnoreCase(locationStr)) {\n-\t\t\t\t\tcopyAll.set(true);\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t\treturn true;\n-\t\t\t})\n-\t\t\t.map(asBiFunction((locationStr, attrs) -> {\n-\t\t\t\tString index = String.format(\"%02d\", counter.incrementAndGet());\n-\t\t\t\tString name = attrs.get(\"name\");\n-\t\t\t\tif (name == null) {\n-\t\t\t\t\tname = \"repo\".concat(index);\n-\t\t\t\t}\n-\t\t\t\tURI resolvedLocation = URIUtil.resolve(base, locationStr);\n-\t\t\t\ttry (Formatter f = new Formatter(Locale.US)) {\n-\t\t\t\t\tf.format(STANDALONE_REPO_CLASS + \"; name='%s'; locations='%s'\", name, resolvedLocation);\n-\t\t\t\t\tattrs.stream()\n-\t\t\t\t\t\t.filterKey(k -> !k.equals(\"name\"))\n-\t\t\t\t\t\t.forEachOrdered((k, v) -> f.format(\"; %s='%s'\", k, v));\n-\t\t\t\t\treturn MapStream.entry(PLUGIN_STANDALONE.concat(index), f.toString());\n-\t\t\t\t}\n-\t\t\t}))\n-\t\t\t.forEachOrdered(ws::setProperty);\n-\n-\t\tMapStream<String, Object> runProperties = MapStream.of(run.getProperties())\n-\t\t\t.mapKey(String.class::cast);\n-\t\tif (!copyAll.get()) {\n-\t\t\trunProperties = runProperties\n-\t\t\t\t.filterKey(k -> k.equals(Constants.PLUGIN) || k.startsWith(Constants.PLUGIN + \".\"));\n-\t\t}\n-\t\tProperties wsProperties = ws.getProperties();\n-\t\trunProperties.filterKey(k -> !k.startsWith(PLUGIN_STANDALONE))\n-\t\t\t.forEachOrdered(wsProperties::put);\n+\t\ttry {\n+\t\t\tParameters standalone = new Parameters(run.getProperty(STANDALONE), ws);\n+\t\t\tstandalone.stream()\n+\t\t\t\t.filterKey(locationStr -> {\n+\t\t\t\t\tif (\"true\".equalsIgnoreCase(locationStr)) {\n+\t\t\t\t\t\tcopyAll.set(true);\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn true;\n+\t\t\t\t})\n+\t\t\t\t.map(asBiFunction((locationStr, attrs) -> {\n+\t\t\t\t\tString index = String.format(\"%02d\", counter.incrementAndGet());\n+\t\t\t\t\tString name = attrs.get(\"name\");\n+\t\t\t\t\tif (name == null) {\n+\t\t\t\t\t\tname = \"repo\".concat(index);\n+\t\t\t\t\t}\n+\t\t\t\t\tURI resolvedLocation = URIUtil.resolve(base, locationStr);\n+\t\t\t\t\ttry (Formatter f = new Formatter(Locale.US)) {\n+\t\t\t\t\t\tf.format(STANDALONE_REPO_CLASS + \"; name='%s'; locations='%s'\", name, resolvedLocation);\n+\t\t\t\t\t\tattrs.stream()\n+\t\t\t\t\t\t\t.filterKey(k -> !k.equals(\"name\"))\n+\t\t\t\t\t\t\t.forEachOrdered((k, v) -> f.format(\"; %s='%s'\", k, v));\n+\t\t\t\t\t\treturn MapStream.entry(PLUGIN_STANDALONE.concat(index), f.toString());\n+\t\t\t\t\t}\n+\t\t\t\t}))\n+\t\t\t\t.forEachOrdered(ws::setProperty);\n+\t\t\tMapStream<String, Object> runProperties = MapStream.of(run.getProperties())\n+\t\t\t\t.mapKey(String.class::cast);\n+\t\t\tif (!copyAll.get()) {\n+\t\t\t\trunProperties = runProperties\n+\t\t\t\t\t.filterKey(k -> k.equals(Constants.PLUGIN) || k.startsWith(Constants.PLUGIN + \".\"));\n+\t\t\t}\n+\t\t\tProperties wsProperties = ws.getProperties();\n+\t\t\trunProperties.filterKey(k -> !k.startsWith(PLUGIN_STANDALONE))\n+\t\t\t\t.forEachOrdered(wsProperties::put);\n \n-\t\treturn ws;\n+\t\t\treturn ws;\n+\t\t} finally {\n+\t\t\tws.fixupVersionDefaults();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c9c2af5308ecdea72e52f84d49d0c7a65d3a32"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjU2MzExOnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1Njo0M1rOICY21Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1Njo0M1rOICY21Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NTMxNw==", "bodyText": "but will not fix them up", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r539375317", "createdAt": "2020-12-09T14:56:43Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/Workspace.java", "diffHunk": "@@ -287,29 +287,85 @@ public static Workspace getWorkspace(File workspaceDir, String bndDir) throws Ex\n \t\t}\n \t}\n \n+\t/**\n+\t * Create a workspace on the given directory, assuming that it contains a\n+\t * cnf directory. See {@link #Workspace(File, String)}\n+\t *\n+\t * @param workspaceDir the worksapce directory\n+\t */\n \tpublic Workspace(File workspaceDir) throws Exception {\n \t\tthis(workspaceDir, CNFDIR);\n \t}\n \n+\t/**\n+\t * Create a workspace with the given directory and the bnd directory,\n+\t * normally cnf. (Though there are some use cases where this is in another\n+\t * place.) This will create a {@link WorkspaceLayout#BND} layout set the\n+\t * base to the workspaceDir, and read the properties in the `build.bnd` file\n+\t * in the bndDir sub directory.\n+\t * <p>\n+\t * This will read the version specific defaults after the properties are\n+\t * read from build.bnd in an _intermediate_ processor.\n+\t *\n+\t * @param workspaceDir the workspace directory\n+\t * @param bndDir the bnd directory with build.bnd\n+\t */\n \tpublic Workspace(File workspaceDir, String bndDir) throws Exception {\n-\t\tsuper(getDefaults());\n+\t\tsuper(new Processor(getDefaults()));\n \t\tthis.maven = new Maven(Processor.getExecutor(), this);\n \t\tthis.layout = WorkspaceLayout.BND;\n \t\tworkspaceDir = workspaceDir.getAbsoluteFile();\n \t\tsetBase(workspaceDir); // setBase before call to setFileSystem\n \t\taddBasicPlugin(new LoggingProgressPlugin());\n \t\tsetFileSystem(workspaceDir, bndDir);\n+\n+\t\t// we must process version defaults after the\n+\t\t// normal properties are read\n+\n+\t\tfixupVersionDefaults();\n+\n \t\tprojects = new ProjectTracker(this);\n \t}\n \n+\t/*\n+\t * This constructor will create an intermediate parent processor to hold the\n+\t * version defaults but will fix them up. This must be done by the caller", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c9c2af5308ecdea72e52f84d49d0c7a65d3a32"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjU3NjQ2OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib.tests/test/test/WorkspaceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1OTowOFrOICY-9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMlQwOTowODo0MVrOI1i0xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NzM5OQ==", "bodyText": "Did you mean to use OSGi Version rather  than Bnd's Version?", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r539377399", "createdAt": "2020-12-09T14:59:08Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib.tests/test/test/WorkspaceTest.java", "diffHunk": "@@ -17,10 +17,14 @@\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TestName;\n+import org.osgi.framework.Version;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c9c2af5308ecdea72e52f84d49d0c7a65d3a32"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzAxNjAwNg==", "bodyText": "doesn't matter in this case since it is used to make sure the format is used, so the OSGi one is then better", "url": "https://github.com/bndtools/bnd/pull/4442#discussion_r593016006", "createdAt": "2021-03-12T09:08:41Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib.tests/test/test/WorkspaceTest.java", "diffHunk": "@@ -17,10 +17,14 @@\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TestName;\n+import org.osgi.framework.Version;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NzM5OQ=="}, "originalCommit": {"oid": "52c9c2af5308ecdea72e52f84d49d0c7a65d3a32"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1349, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}