{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMDQ0NTgx", "number": 4301, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNjo0OFrOEhStjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNTowMFrOEhS67w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ1MDM2OnYy", "diffSide": "RIGHT", "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/provider/IndexFile.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNjo0OFrOHOhvcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOTo0ODoyNlrOHO_nRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5NDkyOA==", "bodyText": "Since you use onResolve, serializer is the same as result which means the refresh action will not happen before sync(serializer) returns. That is, onResolve is not chained. Just making sure this is your intention.", "url": "https://github.com/bndtools/bnd/pull/4301#discussion_r484994928", "createdAt": "2020-09-08T15:06:48Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/provider/IndexFile.java", "diffHunk": "@@ -366,14 +375,31 @@ private boolean isMulti(String name) {\n \t\treturn result;\n \t}\n \n+\t/**\n+\t * This method actually runs NOT in the background, it syncs\n+\t *\n+\t * @param refreshAction to call after it has finished\n+\t * @return\n+\t * @throws Exception\n+\t */\n \tboolean refresh(Runnable refreshAction) throws Exception {\n+\t\tPromise<Boolean> result;\n \t\tif (indexFile.lastModified() != lastModified && last + 10000 < System.currentTimeMillis()) {\n \t\t\tlast = System.currentTimeMillis();\n-\t\t\tPromise<Boolean> serializer = serialize(this::load).onResolve(refreshAction);\n-\t\t\tsync(serializer);\n-\t\t\treturn true;\n+\t\t\tresult = serialize(this::load);\n+\t\t} else {\n+\t\t\tSet<Archive> snapshots = archives.keySet()\n+\t\t\t\t.stream()\n+\t\t\t\t.filter(Archive::isSnapshot)\n+\t\t\t\t.collect(Collectors.toSet());\n+\t\t\tif (!snapshots.isEmpty()) {\n+\t\t\t\tresult = serialize(() -> update(snapshots));\n+\t\t\t} else\n+\t\t\t\treturn false;\n \t\t}\n-\t\treturn false;\n+\t\tPromise<Boolean> serializer = result.onResolve(refreshAction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e15d05e1e4be5c495fa898bfe70e43954a77e7"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4NDM1OQ==", "bodyText": "The promise was already serialized so this is ok. I've removed the serializer variable to make this more clear.", "url": "https://github.com/bndtools/bnd/pull/4301#discussion_r485484359", "createdAt": "2020-09-09T09:48:26Z", "author": {"login": "pkriens"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/provider/IndexFile.java", "diffHunk": "@@ -366,14 +375,31 @@ private boolean isMulti(String name) {\n \t\treturn result;\n \t}\n \n+\t/**\n+\t * This method actually runs NOT in the background, it syncs\n+\t *\n+\t * @param refreshAction to call after it has finished\n+\t * @return\n+\t * @throws Exception\n+\t */\n \tboolean refresh(Runnable refreshAction) throws Exception {\n+\t\tPromise<Boolean> result;\n \t\tif (indexFile.lastModified() != lastModified && last + 10000 < System.currentTimeMillis()) {\n \t\t\tlast = System.currentTimeMillis();\n-\t\t\tPromise<Boolean> serializer = serialize(this::load).onResolve(refreshAction);\n-\t\t\tsync(serializer);\n-\t\t\treturn true;\n+\t\t\tresult = serialize(this::load);\n+\t\t} else {\n+\t\t\tSet<Archive> snapshots = archives.keySet()\n+\t\t\t\t.stream()\n+\t\t\t\t.filter(Archive::isSnapshot)\n+\t\t\t\t.collect(Collectors.toSet());\n+\t\t\tif (!snapshots.isEmpty()) {\n+\t\t\t\tresult = serialize(() -> update(snapshots));\n+\t\t\t} else\n+\t\t\t\treturn false;\n \t\t}\n-\t\treturn false;\n+\t\tPromise<Boolean> serializer = result.onResolve(refreshAction);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5NDkyOA=="}, "originalCommit": {"oid": "67e15d05e1e4be5c495fa898bfe70e43954a77e7"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ1MzE5OnYy", "diffSide": "RIGHT", "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/provider/IndexFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNzozMFrOHOhxSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNzozMFrOHOhxSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5NTQwMA==", "bodyText": "You may wish to use the new Sets.of method to create an immutable set of the extensions?", "url": "https://github.com/bndtools/bnd/pull/4301#discussion_r484995400", "createdAt": "2020-09-08T15:07:30Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.repository/src/aQute/bnd/repository/maven/provider/IndexFile.java", "diffHunk": "@@ -64,7 +68,11 @@\n  * results without having to wait for the operation to be done.\n  */\n class IndexFile {\n-\tprivate final static Logger\t\t\t\t\tlogger\t\t= LoggerFactory.getLogger(IndexFile.class);\n+\tprivate static final String[]\t\t\t\tZIP_EXTENSIONS\t= new String[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e15d05e1e4be5c495fa898bfe70e43954a77e7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ4NDYzOnYy", "diffSide": "RIGHT", "path": "biz.aQute.repository/test/aQute/bnd/repository/maven/provider/MavenBndRepoTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNTowMFrOHOiFDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNTowMFrOHOiFDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDQ2Mw==", "bodyText": "Is this just something left over from your debugging? Seems like it should not be part of the PR.", "url": "https://github.com/bndtools/bnd/pull/4301#discussion_r485000463", "createdAt": "2020-09-08T15:15:00Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.repository/test/aQute/bnd/repository/maven/provider/MavenBndRepoTest.java", "diffHunk": "@@ -81,6 +81,7 @@\n \n \t@BeforeEach\n \tpublic void setUp(TestInfo testInfo) throws Exception {\n+\t\tSystem.setProperty(\"org.slf4j.simpleLogger.defaultLogLevel\", \"DEBUG\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e15d05e1e4be5c495fa898bfe70e43954a77e7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1308, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}