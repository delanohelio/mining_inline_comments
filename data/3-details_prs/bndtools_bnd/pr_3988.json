{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNjgwNDg1", "number": 3988, "title": "memoize: A null consumer to accept should not trigger memoizing", "bodyText": "", "createdAt": "2020-04-29T12:26:04Z", "url": "https://github.com/bndtools/bnd/pull/3988", "merged": true, "mergeCommit": {"oid": "eb329e3888a5942ed7278e99c0476ac0b7816b07"}, "closed": true, "closedAt": "2020-04-29T13:34:38Z", "author": {"login": "bjhargrave"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccXmC4AH2gAyNDEwNjgwNDg1OjRhNzdkMTI5MWNmZDEyZDlhNjAwMzdlOWRmMTI0OGNiYWQ2NWNiNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccYs_5AFqTQwMjY3ODMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4a77d1291cfd12d9a60037e9df1248cbad65cb51", "author": {"user": {"login": "bjhargrave", "name": "BJ Hargrave"}}, "url": "https://github.com/bndtools/bnd/commit/4a77d1291cfd12d9a60037e9df1248cbad65cb51", "committedDate": "2020-04-29T12:25:20Z", "message": "memoize: A null consumer to accept should not trigger memoizing\n\nSigned-off-by: BJ Hargrave <bj@bjhargrave.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNjc4MzE4", "url": "https://github.com/bndtools/bnd/pull/3988#pullrequestreview-402678318", "createdAt": "2020-04-29T13:42:50Z", "commit": {"oid": "4a77d1291cfd12d9a60037e9df1248cbad65cb51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0Mjo1MFrOGN_cCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0Mjo1MFrOGN_cCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyNDA0Mw==", "bodyText": "Why not just return?\nWe should be nice in accepting nulls but rather strict in never returning nulls. Now you might force some to have to check.", "url": "https://github.com/bndtools/bnd/pull/3988#discussion_r417324043", "createdAt": "2020-04-29T13:42:50Z", "author": {"login": "pkriens"}, "path": "aQute.libg/src/aQute/lib/memoize/CloseableMemoizingSupplier.java", "diffHunk": "@@ -107,6 +107,7 @@ public void close() throws Exception {\n \n \t@Override\n \tpublic CloseableMemoize<T> accept(Consumer<? super T> consumer) {\n+\t\trequireNonNull(consumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a77d1291cfd12d9a60037e9df1248cbad65cb51"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3190, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}