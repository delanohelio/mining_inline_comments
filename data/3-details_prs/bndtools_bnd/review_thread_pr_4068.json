{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDg1MTIy", "number": 4068, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjozOFrOD9fJKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzozMVrOD91Cew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzk5OTc5OnYy", "diffSide": "RIGHT", "path": "bndtools.core/src/bndtools/command/OpenProjectHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjozOFrOGXAspg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjozOFrOGXAspg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTg2Mg==", "bodyText": "+1 Nice! I see this as more useful for Bndtools than simply selecting the project.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781862", "createdAt": "2020-05-18T17:22:38Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/command/OpenProjectHandler.java", "diffHunk": "@@ -75,10 +79,25 @@ private static void selectProject(IProject project) throws Exception {\n \t\t\t\t.getId());\n \t\t}\n \n+\t\tIResource select = getNotNull(() -> project.findMember(Workspace.BUILDFILE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODAwMDM3OnYy", "diffSide": "RIGHT", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMjo0N1rOGXAs-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozODozMFrOGXjrCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng==", "bodyText": "I'm not sure I understand the expected behavior.  It seems the \"link with editor\" toggle button that is already in the toolbar does this behavior already.  I don't see this new PartListener you added as adding much value unless I'm missing something.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781946", "createdAt": "2020-05-18T17:22:47Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMTUzMA==", "bodyText": "No, it seems to not do this. I think what is happening is that the link tries to reveal the object, but if that object is not in the filtered list, it ignores the reveal. I.e. it only reveals objects that are allowed to be displayed. This listener resets the filter selection before the object is revealed.  It seems to follow the Link button. I.e. when it is off, the project is not shown in the list", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427101530", "createdAt": "2020-05-19T07:55:46Z", "author": {"login": "pkriens"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzUwNg==", "bodyText": "That is the missing piece.  You need to have an active filter in place, and then open an editor that is in a project that is not currently being shown in the filtered list.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427323506", "createdAt": "2020-05-19T13:59:15Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDg4OQ==", "bodyText": "Actually, I just tried that, but I'm still not seeing your original problem.  Maybe we should jump on a call so I can see what you are seeing.", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427354889", "createdAt": "2020-05-19T14:38:30Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTU4MjkzOnYy", "diffSide": "RIGHT", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNjozOVrOGXjlVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTozMzozMFrOGXmScA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();\n          \n          \n            \n            Optional.ofNullable(workbench.getActiveWorkbenchWindow())\n          \n          \n            \n            \t\t\t.map(IWorkbenchWindow::getActivePage)\n          \n          \n            \n            \t\t\t.ifPresent(page -> page.addPartListener(partListener));", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353430", "createdAt": "2020-05-19T14:36:39Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -52,66 +88,23 @@ public void createPartControl(Composite parent) {\n \t\t}\n \t\tc.layout();\n \n-\n \t\tfilterPart.setHint(\"Filter for projects (glob)\");\n-\t\tlistener = e -> {\n-\t\t\tString value = (String) e.getNewValue();\n-\n-\t\t\tif (Strings.nonNullOrEmpty(value)) {\n-\t\t\t\tglob = new Glob(value);\n-\t\t\t\tif (!installed) {\n-\t\t\t\t\tinstalled = true;\n-\t\t\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n-\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\t\t\t\t\t\tif (glob == null)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\tif (element instanceof JavaProject) {\n-\t\t\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getElementName();\n-\t\t\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n-\n-\t\t\t\t\t\t\t} else if (element instanceof IProject) {\n-\t\t\t\t\t\t\t\tIProject project = (IProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getName();\n-\t\t\t\t\t\t\t\treturn isSelected(project, name);\n-\t\t\t\t\t\t\t} else\n-\t\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n-\t\t\t\t\t\t\tif (glob.finds(name) >= 0)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n-\n-\t\t\t\t\t\t\t\tswitch (maxSeverity) {\n-\t\t\t\t\t\t\t\t\tcase 0 :\n-\t\t\t\t\t\t\t\t\t\treturn false;\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n-\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (CoreException e) {\n-\t\t\t\t\t\t\t\t// ignore\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\treturn false;\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tglob = null;\n-\t\t\t}\n-\t\t\tgetTreeViewer().refresh();\n+\t\tfilterListener = e -> {\n+\t\t\tGlob old = glob;\n+\t\t\tglob = null;\n+\t\t\tString filterText = (String) e.getNewValue();\n+\t\t\tif (Strings.nonNullOrEmpty(filterText))\n+\t\t\t\tglob = new Glob(filterText);\n+\t\t\tif (!Objects.equals(old, glob))\n+\t\t\t\tupdate();\n \t\t};\n-\t\tfilterPart.addPropertyChangeListener(listener);\n+\t\tfilterPart.addPropertyChangeListener(filterListener);\n+\n+\t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2MzEwNw==", "bodyText": "I thought about this but this is a part that is being constructed. How can we construct a part when there is no activeWorkbenchWindow? I am assuming it is never null at that place?", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427363107", "createdAt": "2020-05-19T14:48:32Z", "author": {"login": "pkriens"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -52,66 +88,23 @@ public void createPartControl(Composite parent) {\n \t\t}\n \t\tc.layout();\n \n-\n \t\tfilterPart.setHint(\"Filter for projects (glob)\");\n-\t\tlistener = e -> {\n-\t\t\tString value = (String) e.getNewValue();\n-\n-\t\t\tif (Strings.nonNullOrEmpty(value)) {\n-\t\t\t\tglob = new Glob(value);\n-\t\t\t\tif (!installed) {\n-\t\t\t\t\tinstalled = true;\n-\t\t\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n-\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\t\t\t\t\t\tif (glob == null)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\tif (element instanceof JavaProject) {\n-\t\t\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getElementName();\n-\t\t\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n-\n-\t\t\t\t\t\t\t} else if (element instanceof IProject) {\n-\t\t\t\t\t\t\t\tIProject project = (IProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getName();\n-\t\t\t\t\t\t\t\treturn isSelected(project, name);\n-\t\t\t\t\t\t\t} else\n-\t\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n-\t\t\t\t\t\t\tif (glob.finds(name) >= 0)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n-\n-\t\t\t\t\t\t\t\tswitch (maxSeverity) {\n-\t\t\t\t\t\t\t\t\tcase 0 :\n-\t\t\t\t\t\t\t\t\t\treturn false;\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n-\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (CoreException e) {\n-\t\t\t\t\t\t\t\t// ignore\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\treturn false;\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tglob = null;\n-\t\t\t}\n-\t\t\tgetTreeViewer().refresh();\n+\t\tfilterListener = e -> {\n+\t\t\tGlob old = glob;\n+\t\t\tglob = null;\n+\t\t\tString filterText = (String) e.getNewValue();\n+\t\t\tif (Strings.nonNullOrEmpty(filterText))\n+\t\t\t\tglob = new Glob(filterText);\n+\t\t\tif (!Objects.equals(old, glob))\n+\t\t\t\tupdate();\n \t\t};\n-\t\tfilterPart.addPropertyChangeListener(listener);\n+\t\tfilterPart.addPropertyChangeListener(filterListener);\n+\n+\t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA=="}, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5Nzc0NA==", "bodyText": "It is possible to have no active workbench window but it's not worth\nconsidering IMHO :)", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427397744", "createdAt": "2020-05-19T15:33:30Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -52,66 +88,23 @@ public void createPartControl(Composite parent) {\n \t\t}\n \t\tc.layout();\n \n-\n \t\tfilterPart.setHint(\"Filter for projects (glob)\");\n-\t\tlistener = e -> {\n-\t\t\tString value = (String) e.getNewValue();\n-\n-\t\t\tif (Strings.nonNullOrEmpty(value)) {\n-\t\t\t\tglob = new Glob(value);\n-\t\t\t\tif (!installed) {\n-\t\t\t\t\tinstalled = true;\n-\t\t\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n-\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\t\t\t\t\t\tif (glob == null)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\tif (element instanceof JavaProject) {\n-\t\t\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getElementName();\n-\t\t\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n-\n-\t\t\t\t\t\t\t} else if (element instanceof IProject) {\n-\t\t\t\t\t\t\t\tIProject project = (IProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getName();\n-\t\t\t\t\t\t\t\treturn isSelected(project, name);\n-\t\t\t\t\t\t\t} else\n-\t\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n-\t\t\t\t\t\t\tif (glob.finds(name) >= 0)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n-\n-\t\t\t\t\t\t\t\tswitch (maxSeverity) {\n-\t\t\t\t\t\t\t\t\tcase 0 :\n-\t\t\t\t\t\t\t\t\t\treturn false;\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n-\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (CoreException e) {\n-\t\t\t\t\t\t\t\t// ignore\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\treturn false;\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tglob = null;\n-\t\t\t}\n-\t\t\tgetTreeViewer().refresh();\n+\t\tfilterListener = e -> {\n+\t\t\tGlob old = glob;\n+\t\t\tglob = null;\n+\t\t\tString filterText = (String) e.getNewValue();\n+\t\t\tif (Strings.nonNullOrEmpty(filterText))\n+\t\t\t\tglob = new Glob(filterText);\n+\t\t\tif (!Objects.equals(old, glob))\n+\t\t\t\tupdate();\n \t\t};\n-\t\tfilterPart.addPropertyChangeListener(listener);\n+\t\tfilterPart.addPropertyChangeListener(filterListener);\n+\n+\t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA=="}, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTU4NTQwOnYy", "diffSide": "RIGHT", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzoxMlrOGXjm8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzoxMlrOGXjm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1Mzg0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(iEditorInput)\n          \n          \n            \n            \t\t\t.map(input -> input.getAdapter(IResource.class))\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353840", "createdAt": "2020-05-19T14:37:12Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 238}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTU4NzE1OnYy", "diffSide": "RIGHT", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzozMVrOGXjn8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDozNzozMVrOGXjn8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDA5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(resource)\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427354096", "createdAt": "2020-05-19T14:37:31Z", "author": {"login": "gamerson"}, "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {\n+\t\tif (iEditorInput == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tif (iEditorInput instanceof IFileEditorInput) {\n+\t\t\tIResource resource = ((IFileEditorInput) iEditorInput).getFile();\n+\t\t\treturn getProject(resource);\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprivate IProject getProject(IResource resource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a075db7adbf355a56acd4d341222fd7a31f7a1a"}, "originalPosition": 250}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1424, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}