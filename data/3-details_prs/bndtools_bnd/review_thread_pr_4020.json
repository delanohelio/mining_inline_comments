{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjEwOTk3", "number": 4020, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxNjowM1rOD56jvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxNjowM1rOD56jvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDU0ODQ0OnYy", "diffSide": "RIGHT", "path": "biz.aQute.bndlib/src/aQute/bnd/build/ProjectBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxNjowM1rOGRdMIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoyNDozMlrOGRdhZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NzIxOQ==", "bodyText": "This solution is a lot better!\nHowever, could we somehow delegate this very mavenish code to not be in the build package? Maybe a plugin? At least make all this maven support go to one place?\nNice work!", "url": "https://github.com/bndtools/bnd/pull/4020#discussion_r420957219", "createdAt": "2020-05-06T17:16:03Z", "author": {"login": "pkriens"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/ProjectBuilder.java", "diffHunk": "@@ -136,36 +136,57 @@ private void addClasspath(Parameters dependencies, Container c) throws IOExcepti\n \t\tJar jar = new Jar(file);\n \t\tsuper.addClasspath(jar);\n \t\tproject.unreferencedClasspathEntries.put(jar.getName(), c);\n-\t\tif ((dependencies != null) && !Boolean.parseBoolean(c.getAttributes()\n-\t\t\t.getOrDefault(\"maven-optional\", \"false\"))) {\n-\t\t\tjar.getResources(pomPropertiesFilter)\n-\t\t\t\t.forEachOrdered(r -> {\n-\t\t\t\t\tUTF8Properties pomProperties = new UTF8Properties();\n-\t\t\t\t\ttry (InputStream in = r.openInputStream()) {\n-\t\t\t\t\t\tpomProperties.load(in);\n-\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\tlogger.debug(\"unable to read pom.properties resource {}\", r, e);\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n-\t\t\t\t\tString depVersion = pomProperties.getProperty(\"version\");\n-\t\t\t\t\tString depGroupId = pomProperties.getProperty(\"groupId\");\n-\t\t\t\t\tString depArtifactId = pomProperties.getProperty(\"artifactId\");\n-\t\t\t\t\tif ((depGroupId != null) && (depArtifactId != null) && (depVersion != null)) {\n-\t\t\t\t\t\tAttrs attrs = new Attrs();\n-\t\t\t\t\t\tattrs.put(\"groupId\", depGroupId);\n-\t\t\t\t\t\tattrs.put(\"artifactId\", depArtifactId);\n-\t\t\t\t\t\tattrs.put(\"version\", depVersion);\n-\t\t\t\t\t\tattrs.put(\"scope\", c.getAttributes()\n-\t\t\t\t\t\t\t.getOrDefault(\"maven-scope\", getProperty(MAVEN_SCOPE, \"compile\")));\n-\t\t\t\t\t\tString key = new StringBuilder().append(depGroupId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depArtifactId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depVersion)\n-\t\t\t\t\t\t\t.toString();\n-\t\t\t\t\t\tdependencies.add(key, attrs);\n-\t\t\t\t\t}\n-\t\t\t\t});\n+\t\tMap<String, String> containerAttributes = c.getAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2f331dd57ed6e434bdd04277f42f492e3bfd32"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MjY2MA==", "bodyText": "It may be possible but we need to collect the maven dependency information at the time we make the classpath here in ProjectBuilder. Any later and we have lost the necessary information (the Containers). This is why the code generates the -maven-dependencies instruction so that the information collected here, when we have the information, can be communicated to the future when PomResource is generating the pom. By the time you get to PomResource, you have lost all information on the class path.\nThe -maven-dependencies instruction also allows the user to fix/replace the maven dependency information in their bnd file.\nFor now, I think this is fine for 5.1. We can always try and make it better in the next release.", "url": "https://github.com/bndtools/bnd/pull/4020#discussion_r420962660", "createdAt": "2020-05-06T17:24:32Z", "author": {"login": "bjhargrave"}, "path": "biz.aQute.bndlib/src/aQute/bnd/build/ProjectBuilder.java", "diffHunk": "@@ -136,36 +136,57 @@ private void addClasspath(Parameters dependencies, Container c) throws IOExcepti\n \t\tJar jar = new Jar(file);\n \t\tsuper.addClasspath(jar);\n \t\tproject.unreferencedClasspathEntries.put(jar.getName(), c);\n-\t\tif ((dependencies != null) && !Boolean.parseBoolean(c.getAttributes()\n-\t\t\t.getOrDefault(\"maven-optional\", \"false\"))) {\n-\t\t\tjar.getResources(pomPropertiesFilter)\n-\t\t\t\t.forEachOrdered(r -> {\n-\t\t\t\t\tUTF8Properties pomProperties = new UTF8Properties();\n-\t\t\t\t\ttry (InputStream in = r.openInputStream()) {\n-\t\t\t\t\t\tpomProperties.load(in);\n-\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\tlogger.debug(\"unable to read pom.properties resource {}\", r, e);\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n-\t\t\t\t\tString depVersion = pomProperties.getProperty(\"version\");\n-\t\t\t\t\tString depGroupId = pomProperties.getProperty(\"groupId\");\n-\t\t\t\t\tString depArtifactId = pomProperties.getProperty(\"artifactId\");\n-\t\t\t\t\tif ((depGroupId != null) && (depArtifactId != null) && (depVersion != null)) {\n-\t\t\t\t\t\tAttrs attrs = new Attrs();\n-\t\t\t\t\t\tattrs.put(\"groupId\", depGroupId);\n-\t\t\t\t\t\tattrs.put(\"artifactId\", depArtifactId);\n-\t\t\t\t\t\tattrs.put(\"version\", depVersion);\n-\t\t\t\t\t\tattrs.put(\"scope\", c.getAttributes()\n-\t\t\t\t\t\t\t.getOrDefault(\"maven-scope\", getProperty(MAVEN_SCOPE, \"compile\")));\n-\t\t\t\t\t\tString key = new StringBuilder().append(depGroupId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depArtifactId)\n-\t\t\t\t\t\t\t.append(':')\n-\t\t\t\t\t\t\t.append(depVersion)\n-\t\t\t\t\t\t\t.toString();\n-\t\t\t\t\t\tdependencies.add(key, attrs);\n-\t\t\t\t\t}\n-\t\t\t\t});\n+\t\tMap<String, String> containerAttributes = c.getAttributes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NzIxOQ=="}, "originalCommit": {"oid": "0a2f331dd57ed6e434bdd04277f42f492e3bfd32"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1411, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}