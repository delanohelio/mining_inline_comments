{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTIyODE2", "number": 12940, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1OTo1NVrODbAWEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1OTo1NVrODbAWEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQzNzkzOnYy", "diffSide": "RIGHT", "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/deployment/CDIExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1OTo1NVrOFiPq5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDoyMzo1N1rOFmLumg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1MjY0Ng==", "bodyText": "In the context of other MP specs I've seen a particular pattern of config property keys used for impl-specific config properties (something like mp..extension. -- @pferraro knows).  Is there such a thing for health? If not is it wise to act is if there was?", "url": "https://github.com/wildfly/wildfly/pull/12940#discussion_r371452646", "createdAt": "2020-01-27T19:59:55Z", "author": {"login": "bstansberry"}, "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/deployment/CDIExtension.java", "diffHunk": "@@ -96,12 +101,21 @@ private void afterDeploymentValidation(@Observes final AfterDeploymentValidation\n         addHealthChecks(HealthLiteral.INSTANCE, reporter::addHealthCheck, healthChecks);\n         addHealthChecks(LivenessLiteral.INSTANCE, reporter::addLivenessCheck, livenessChecks);\n         addHealthChecks(ReadinessLiteral.INSTANCE, reporter::addReadinessCheck, readinessChecks);\n+        if (readinessChecks.isEmpty()) {\n+            Config config = ConfigProvider.getConfig(module.getClassLoader());\n+            boolean disableDefaultprocedure = config.getOptionalValue(\"mp.health.disable-default-procedures\", Boolean.class).orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05cddc209455512ea8f95c9cc4ef51e88fdfefb7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY2NDA0MQ==", "bodyText": "I'm not sure to understand your comment.\nThis property mp.health.disable-default-procedures is defined by the spec itself", "url": "https://github.com/wildfly/wildfly/pull/12940#discussion_r371664041", "createdAt": "2020-01-28T08:35:27Z", "author": {"login": "jmesnil"}, "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/deployment/CDIExtension.java", "diffHunk": "@@ -96,12 +101,21 @@ private void afterDeploymentValidation(@Observes final AfterDeploymentValidation\n         addHealthChecks(HealthLiteral.INSTANCE, reporter::addHealthCheck, healthChecks);\n         addHealthChecks(LivenessLiteral.INSTANCE, reporter::addLivenessCheck, livenessChecks);\n         addHealthChecks(ReadinessLiteral.INSTANCE, reporter::addReadinessCheck, readinessChecks);\n+        if (readinessChecks.isEmpty()) {\n+            Config config = ConfigProvider.getConfig(module.getClassLoader());\n+            boolean disableDefaultprocedure = config.getOptionalValue(\"mp.health.disable-default-procedures\", Boolean.class).orElse(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1MjY0Ng=="}, "originalCommit": {"oid": "05cddc209455512ea8f95c9cc4ef51e88fdfefb7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4MjM2Mg==", "bodyText": "OK; thanks.", "url": "https://github.com/wildfly/wildfly/pull/12940#discussion_r375582362", "createdAt": "2020-02-06T00:23:57Z", "author": {"login": "bstansberry"}, "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/deployment/CDIExtension.java", "diffHunk": "@@ -96,12 +101,21 @@ private void afterDeploymentValidation(@Observes final AfterDeploymentValidation\n         addHealthChecks(HealthLiteral.INSTANCE, reporter::addHealthCheck, healthChecks);\n         addHealthChecks(LivenessLiteral.INSTANCE, reporter::addLivenessCheck, livenessChecks);\n         addHealthChecks(ReadinessLiteral.INSTANCE, reporter::addReadinessCheck, readinessChecks);\n+        if (readinessChecks.isEmpty()) {\n+            Config config = ConfigProvider.getConfig(module.getClassLoader());\n+            boolean disableDefaultprocedure = config.getOptionalValue(\"mp.health.disable-default-procedures\", Boolean.class).orElse(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1MjY0Ng=="}, "originalCommit": {"oid": "05cddc209455512ea8f95c9cc4ef51e88fdfefb7"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4012, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}