{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjczMDg4", "number": 13229, "title": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - Au\u2026", "bodyText": "\u2026thenticationClient for Authentication / SSL\nWFLY-13396\nRequires:\nRESTEASY-2366\nELY-1891", "createdAt": "2020-04-21T13:25:55Z", "url": "https://github.com/wildfly/wildfly/pull/13229", "merged": true, "mergeCommit": {"oid": "ad8e61ba61a82602dffa1e50fc88221a78a69b9f"}, "closed": true, "closedAt": "2020-09-18T00:42:00Z", "author": {"login": "Skyllarr"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcseHqIABqjM0NTgwMjM4NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJxCNfgBqjM3Nzc5ODU0MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76d04670e552c7c14824ebc75266ed958b8c2cc", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/b76d04670e552c7c14824ebc75266ed958b8c2cc", "committedDate": "2020-04-21T13:21:42Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}, "afterCommit": {"oid": "25a4ca7ecd1c9dd2a254d9f9a6aae69555a41179", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/25a4ca7ecd1c9dd2a254d9f9a6aae69555a41179", "committedDate": "2020-06-18T13:01:01Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4e3583bd198984b64cb97777eea4cb814fe76ea", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/c4e3583bd198984b64cb97777eea4cb814fe76ea", "committedDate": "2020-09-16T08:43:24Z", "message": "Merge branch 'WFLY-13396' of github.com:Skyllarr/wildfly into WFLY-13396"}, "afterCommit": {"oid": "a4057f84e27204e4be0043f26dd9e3d27b92b405", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a4057f84e27204e4be0043f26dd9e3d27b92b405", "committedDate": "2020-09-16T18:07:18Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDA4ODk0", "url": "https://github.com/wildfly/wildfly/pull/13229#pullrequestreview-490008894", "createdAt": "2020-09-16T20:48:13Z", "commit": {"oid": "a4057f84e27204e4be0043f26dd9e3d27b92b405"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMDo0ODoxNFrOHTDqdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMDo0ODoxNFrOHTDqdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0NTAxMw==", "bodyText": "The value returned from URL.getHost() is not valid input to new URI(String str).", "url": "https://github.com/wildfly/wildfly/pull/13229#discussion_r489745013", "createdAt": "2020-09-16T20:48:14Z", "author": {"login": "bstansberry"}, "path": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ssl/UndertowTwoWaySslNeedClientAuthTestCase.java", "diffHunk": "@@ -130,6 +146,153 @@ public void testSendingNoClientCertificateFails() {\n         closeClient(client);\n     }\n \n+    /**\n+     * RESTEasy client loads truststore from Elytron client configuration. This truststore contains correct server certificate.\n+     */\n+    @Test\n+    public void testResteasyElytronClientTrustedServer() {\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        context.run(() -> {\n+            ResteasyClientBuilder resteasyClientBuilder = (ResteasyClientBuilder) ClientBuilder.newBuilder().hostnameVerifier((s, sslSession) -> true);\n+            ResteasyClient client = resteasyClientBuilder.build();\n+            Response response = client.target(String.valueOf(securedRootUrl)).request().get();\n+            Assert.assertEquals(200, response.getStatus());\n+        });\n+    }\n+\n+    /**\n+     * RESTEasy client loads SSL Context from Elytron client config.\n+     * This SSL Context does not have truststore configured, so exception is expected.\n+     */\n+    @Test(expected = ProcessingException.class)\n+    public void testResteasyElytronClientMissingTruststore() {\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore-missing.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        context.run(() -> {\n+            ResteasyClientBuilder resteasyClientBuilder = (ResteasyClientBuilder) ClientBuilder.newBuilder();\n+            ResteasyClient client = resteasyClientBuilder.build();\n+            Response response = client.target(String.valueOf(securedRootUrl)).request().get();\n+            Assert.assertEquals(\"Hello World!\", response.readEntity(String.class));\n+            Assert.assertEquals(200, response.getStatus());\n+        });\n+    }\n+\n+    /**\n+     * Elytron client has configured truststore that does not contain server's certificate.\n+     * Test will pass because Elytron config is ignored since different ssl context is specified on RESTEasy client builder specifically.\n+     */\n+    @Test\n+    public void testClientConfigProviderSSLContextIgnoredIfDifferentIsSet() throws URISyntaxException, GeneralSecurityException {\n+        AuthenticationContextConfigurationClient AUTH_CONTEXT_CLIENT =\n+                AccessController.doPrivileged((PrivilegedAction<AuthenticationContextConfigurationClient>) AuthenticationContextConfigurationClient::new);\n+\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore-missing.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        AuthenticationContext contextWithTruststore = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        SSLContext sslContext = AUTH_CONTEXT_CLIENT.getSSLContext(new URI(securedRootUrl.getHost()), contextWithTruststore);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4057f84e27204e4be0043f26dd9e3d27b92b405"}, "originalPosition": 122}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4057f84e27204e4be0043f26dd9e3d27b92b405", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a4057f84e27204e4be0043f26dd9e3d27b92b405", "committedDate": "2020-09-16T18:07:18Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}, "afterCommit": {"oid": "a58a906a916462b5622137a5d9eb29279794cfdf", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a58a906a916462b5622137a5d9eb29279794cfdf", "committedDate": "2020-09-17T12:01:59Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "committedDate": "2020-09-17T13:30:03Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a58a906a916462b5622137a5d9eb29279794cfdf", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a58a906a916462b5622137a5d9eb29279794cfdf", "committedDate": "2020-09-17T12:01:59Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}, "afterCommit": {"oid": "a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "author": {"user": {"login": "Skyllarr", "name": "Diana K\u0159epinsk\u00e1 Vilkol\u00e1k"}}, "url": "https://github.com/wildfly/wildfly/commit/a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "committedDate": "2020-09-17T13:30:03Z", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3527, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}