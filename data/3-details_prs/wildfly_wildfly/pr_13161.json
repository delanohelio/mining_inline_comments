{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODQ0NjE4", "number": 13161, "title": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.", "bodyText": "Removing the producer and using a CDI extension injecting\n'synthetic' beans into the deployments.\nServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316", "createdAt": "2020-04-01T08:38:21Z", "url": "https://github.com/wildfly/wildfly/pull/13161", "merged": true, "mergeCommit": {"oid": "96719c34a429d407590290a46ca4c52e9068477c"}, "closed": true, "closedAt": "2020-04-01T16:30:12Z", "author": {"login": "ehsavoie"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTT4zYgBqjMxODY5MTI1NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTaK7tgFqTM4NTc0NTExOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d8d5b520839fbff0e795295b049ef72e12d4cfd", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/7d8d5b520839fbff0e795295b049ef72e12d4cfd", "committedDate": "2020-03-31T17:19:23Z", "message": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.\n\n * Removing the producer and using a CDI extension injecting\n    'synthetic' beans into the deployments.\n * ServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316"}, "afterCommit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/80e053595bf4cdd61857e446404a7ef07df4626e", "committedDate": "2020-04-01T09:00:31Z", "message": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.\n\n * Removing the producer and using a CDI extension injecting\n    'synthetic' beans into the deployments.\n * ServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NDA3NDE0", "url": "https://github.com/wildfly/wildfly/pull/13161#pullrequestreview-385407414", "createdAt": "2020-04-01T09:21:07Z", "commit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOToyMTowN1rOF-3-YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTozMzoyN1rOF-4d4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3MzEyMA==", "bodyText": "Remove this TODO, according to the log message, it is intentional to remove any other Trace implementation.", "url": "https://github.com/wildfly/wildfly/pull/13161#discussion_r401473120", "createdAt": "2020-04-01T09:21:07Z", "author": {"login": "manovotn"}, "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracingCDIExtension.java", "diffHunk": "@@ -19,26 +19,45 @@\n  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n-\n package org.wildfly.microprofile.opentracing.smallrye;\n \n import io.opentracing.Tracer;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.WeakHashMap;\n \n import javax.enterprise.event.Observes;\n-import javax.enterprise.inject.spi.BeanManager;\n-import javax.enterprise.inject.spi.BeforeBeanDiscovery;\n+import javax.enterprise.inject.spi.AfterBeanDiscovery;\n+import javax.enterprise.inject.spi.BeforeShutdown;\n import javax.enterprise.inject.spi.Extension;\n import javax.enterprise.inject.spi.ProcessAnnotatedType;\n \n public class TracingCDIExtension implements Extension {\n \n-    public void observeBeforeBeanDiscovery(@Observes BeforeBeanDiscovery bbd, BeanManager manager) {\n-        String extensionName = TracingCDIExtension.class.getName();\n-        bbd.addAnnotatedType(manager.createAnnotatedType(TracerProducer.class), extensionName + \"-\" + TracerProducer.class.getName());\n+    private static final Map<ClassLoader, Tracer> TRACERS = Collections.synchronizedMap(new WeakHashMap<>());\n+\n+    public static void registerApplicationTracer(ClassLoader classLoader, Tracer tracerInstance) {\n+        TRACERS.put(classLoader, tracerInstance);\n+    }\n+\n+    public void registerTracerBean(@Observes AfterBeanDiscovery abd) {\n+        abd.addBean().addTransitiveTypeClosure(Tracer.class).produceWith(i -> {\n+            return TRACERS.get(Thread.currentThread().getContextClassLoader());\n+        });\n     }\n \n+    // TODO I suppose this somehow prevents other tracer impls from being picked up? Needs confirmation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3Nzk4NA==", "bodyText": "You could probably remove this now, the only usage is in TracerDynamicFeature which again needs req. context active (not sure if it can be a problem there). Instead, you could either @Inject the Tracer if that's supported (not sure now, I might just be confused from Quarkus) or use CDI.current() to grab it.", "url": "https://github.com/wildfly/wildfly/pull/13161#discussion_r401477984", "createdAt": "2020-04-01T09:28:37Z", "author": {"login": "manovotn"}, "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/TracingDeploymentProcessor.java", "diffHunk": "@@ -210,6 +211,7 @@ private void injectTracer(DeploymentPhaseContext deploymentPhaseContext, Capabil\n                 tracer = WildFlyTracerFactory.getTracer(tracerConfigurationName, serviceName);\n             }\n         }\n+        TracingCDIExtension.registerApplicationTracer(moduleCL, tracer);\n         deploymentUnit.addToAttachmentList(ServletContextAttribute.ATTACHMENT_KEY, new ServletContextAttribute(SMALLRYE_OPENTRACING_SERVICE_NAME, serviceName));\n         deploymentUnit.addToAttachmentList(ServletContextAttribute.ATTACHMENT_KEY, new ServletContextAttribute(SMALLRYE_OPENTRACING_TRACER, tracer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MTE4Nw==", "bodyText": "Maybe also add .scope(ApplicationScoped.class). This won't have any functional impact (apart from using proxy) as you are already sharing the instance, but it is a \"cleaner\" way to declare a bean that in fact is app-wide.", "url": "https://github.com/wildfly/wildfly/pull/13161#discussion_r401481187", "createdAt": "2020-04-01T09:33:27Z", "author": {"login": "manovotn"}, "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracingCDIExtension.java", "diffHunk": "@@ -19,26 +19,45 @@\n  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n-\n package org.wildfly.microprofile.opentracing.smallrye;\n \n import io.opentracing.Tracer;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.WeakHashMap;\n \n import javax.enterprise.event.Observes;\n-import javax.enterprise.inject.spi.BeanManager;\n-import javax.enterprise.inject.spi.BeforeBeanDiscovery;\n+import javax.enterprise.inject.spi.AfterBeanDiscovery;\n+import javax.enterprise.inject.spi.BeforeShutdown;\n import javax.enterprise.inject.spi.Extension;\n import javax.enterprise.inject.spi.ProcessAnnotatedType;\n \n public class TracingCDIExtension implements Extension {\n \n-    public void observeBeforeBeanDiscovery(@Observes BeforeBeanDiscovery bbd, BeanManager manager) {\n-        String extensionName = TracingCDIExtension.class.getName();\n-        bbd.addAnnotatedType(manager.createAnnotatedType(TracerProducer.class), extensionName + \"-\" + TracerProducer.class.getName());\n+    private static final Map<ClassLoader, Tracer> TRACERS = Collections.synchronizedMap(new WeakHashMap<>());\n+\n+    public static void registerApplicationTracer(ClassLoader classLoader, Tracer tracerInstance) {\n+        TRACERS.put(classLoader, tracerInstance);\n+    }\n+\n+    public void registerTracerBean(@Observes AfterBeanDiscovery abd) {\n+        abd.addBean().addTransitiveTypeClosure(Tracer.class).produceWith(i -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b", "committedDate": "2020-04-01T14:33:17Z", "message": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.\n\n * Removing the producer and using a CDI extension injecting 'synthetic' beans into the deployments.\n * ServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80e053595bf4cdd61857e446404a7ef07df4626e", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/80e053595bf4cdd61857e446404a7ef07df4626e", "committedDate": "2020-04-01T09:00:31Z", "message": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.\n\n * Removing the producer and using a CDI extension injecting\n    'synthetic' beans into the deployments.\n * ServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316"}, "afterCommit": {"oid": "46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b", "committedDate": "2020-04-01T14:33:17Z", "message": "[WFLY-13316]: MicroProfile OpenTracing integration requires scope request.\n\n * Removing the producer and using a CDI extension injecting 'synthetic' beans into the deployments.\n * ServletContext for CDI injection is no longer used.\n\nJira: https://issues.redhat.com/browse/WFLY-13316"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Njc3MjEz", "url": "https://github.com/wildfly/wildfly/pull/13161#pullrequestreview-385677213", "createdAt": "2020-04-01T15:05:38Z", "commit": {"oid": "46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzQ1MTE5", "url": "https://github.com/wildfly/wildfly/pull/13161#pullrequestreview-385745119", "createdAt": "2020-04-01T16:20:07Z", "commit": {"oid": "46dfa6fbaf9b4439994f6af0de7450d6f0a9d90b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3586, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}