{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NTEyMjk1", "number": 13653, "title": "WFLY-13973 Writing default-mdb-instance-pool to ejb3 subsystem throws\u2026", "bodyText": "JIRA: https://issues.redhat.com/browse/WFLY-13973", "createdAt": "2020-10-16T03:03:56Z", "url": "https://github.com/wildfly/wildfly/pull/13653", "merged": true, "mergeCommit": {"oid": "f8ad4e7ae67aebd2fff878f9dab6499e581056d0"}, "closed": true, "closedAt": "2020-10-21T08:48:06Z", "author": {"login": "chengfang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUB8sPgFqTUxMTYzODM5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUIbQeAFqTUxMjA0MzEwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjM4Mzkw", "url": "https://github.com/wildfly/wildfly/pull/13653#pullrequestreview-511638390", "createdAt": "2020-10-19T10:51:55Z", "commit": {"oid": "c828176ac576f7ec065973a61d4bbe7ec83703aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo1MTo1NVrOHkIqOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo1MTo1NVrOHkIqOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MjY2Nw==", "bodyText": "@chengfang I think if you execute a :write-attribute with the same value that was there, you end up removing the capability requirement set a few lines above. Perhaps you need some guard to check that the new and old requirement names are not the same?\nEssentially AbstractWriteAttributeHandler doesn't do any comparison itself of the old and new values to check", "url": "https://github.com/wildfly/wildfly/pull/13653#discussion_r507652667", "createdAt": "2020-10-19T10:51:55Z", "author": {"login": "kabir"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/EJB3SubsystemDefaultPoolWriteHandler.java", "diffHunk": "@@ -78,44 +81,63 @@ protected void recordCapabilitiesAndRequirements(OperationContext context, Attri\n         ModelNode model = resource.getModel();\n \n         // de-register the default bean instance pool capability requirement on the default bean instance pool that supports it\n-        if (poolAttribute.getName().equals(DEFAULT_SLSB_INSTANCE_POOL) || model.hasDefined(DEFAULT_SLSB_INSTANCE_POOL)) {\n-\n-            // NOTE: the new value may contain an expression, so we need to resolve it first\n-            ModelNode resolvedNewValue = new ModelNode();\n-            try {\n-                resolvedNewValue = context.resolveExpressions(newValue);\n-\n-                // register the new requirement\n-                String newSLSBRequirementName = RuntimeCapability.buildDynamicCapabilityName(STRICT_MAX_POOL_CONFIG_CAPABILITY_NAME, resolvedNewValue.asString());\n-                context.registerAdditionalCapabilityRequirement(newSLSBRequirementName, DEFAULT_SLSB_POOL_CONFIG_CAPABILITY_NAME, DEFAULT_SLSB_INSTANCE_POOL);\n-            } catch(OperationFailedException ofe) {\n-                // if the new value cannot be resolved, deregister the old value only (in the finally clause)\n-                EjbLogger.ROOT_LOGGER.defaultPoolExpressionCouldNotBeResolved(DEFAULT_SLSB_INSTANCE_POOL, model.get(DEFAULT_SLSB_INSTANCE_POOL).asString());\n-\n-            } finally {\n-                // de-register the old requirement\n-                String oldSLSBRequirementName = RuntimeCapability.buildDynamicCapabilityName(STRICT_MAX_POOL_CONFIG_CAPABILITY_NAME, oldValue.asString());\n-                context.deregisterCapabilityRequirement(oldSLSBRequirementName, DEFAULT_SLSB_POOL_CONFIG_CAPABILITY_NAME, DEFAULT_SLSB_INSTANCE_POOL);\n+        if (poolAttribute.getName().equals(DEFAULT_SLSB_INSTANCE_POOL)) {\n+            if (oldValue.isDefined()) {\n+\n+                // NOTE: the new value may contain an expression, so we need to resolve it first\n+                try {\n+                    if (newValue.isDefined()) {\n+                        ModelNode resolvedNewValue = context.resolveExpressions(newValue);\n+\n+                        // register the new requirement\n+                        String newSLSBRequirementName = RuntimeCapability.buildDynamicCapabilityName(STRICT_MAX_POOL_CONFIG_CAPABILITY_NAME, resolvedNewValue.asString());\n+                        context.registerAdditionalCapabilityRequirement(newSLSBRequirementName, DEFAULT_SLSB_POOL_CONFIG_CAPABILITY_NAME, DEFAULT_SLSB_INSTANCE_POOL);\n+                    }\n+                } catch (OperationFailedException ofe) {\n+                    // if the new value cannot be resolved, deregister the old value only (in the finally clause)\n+                    EjbLogger.ROOT_LOGGER.defaultPoolExpressionCouldNotBeResolved(DEFAULT_SLSB_INSTANCE_POOL, model.get(DEFAULT_SLSB_INSTANCE_POOL).asString());\n+                } finally {\n+                    // de-register the old requirement\n+                    String oldSLSBRequirementName = RuntimeCapability.buildDynamicCapabilityName(STRICT_MAX_POOL_CONFIG_CAPABILITY_NAME, oldValue.asString());\n+                    context.deregisterCapabilityRequirement(oldSLSBRequirementName, DEFAULT_SLSB_POOL_CONFIG_CAPABILITY_NAME, DEFAULT_SLSB_INSTANCE_POOL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c828176ac576f7ec065973a61d4bbe7ec83703aa"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c53c4f1db35e25f4303b46b48fffa678b081879", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/7c53c4f1db35e25f4303b46b48fffa678b081879", "committedDate": "2020-10-19T17:50:13Z", "message": "WFLY-13973 Writing default-mdb-instance-pool to ejb3 subsystem throws IllegalStateException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c828176ac576f7ec065973a61d4bbe7ec83703aa", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/c828176ac576f7ec065973a61d4bbe7ec83703aa", "committedDate": "2020-10-16T03:00:51Z", "message": "WFLY-13973 Writing default-mdb-instance-pool to ejb3 subsystem throws IllegalStateException"}, "afterCommit": {"oid": "7c53c4f1db35e25f4303b46b48fffa678b081879", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/7c53c4f1db35e25f4303b46b48fffa678b081879", "committedDate": "2020-10-19T17:50:13Z", "message": "WFLY-13973 Writing default-mdb-instance-pool to ejb3 subsystem throws IllegalStateException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDQzMTA2", "url": "https://github.com/wildfly/wildfly/pull/13653#pullrequestreview-512043106", "createdAt": "2020-10-19T18:24:44Z", "commit": {"oid": "7c53c4f1db35e25f4303b46b48fffa678b081879"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3813, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}