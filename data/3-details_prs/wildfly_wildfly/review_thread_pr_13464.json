{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTA1NDM1", "number": 13464, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxNDoxNFrOEXrD_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxNDoxNFrOEXrD_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjU4MjM3OnYy", "diffSide": "RIGHT", "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/OffHeapMemoryResourceDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxNDoxNFrOG_l9Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoxNzo1M1rOG_ow5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNTM3OQ==", "bodyText": "Looks like this can be gone?", "url": "https://github.com/wildfly/wildfly/pull/13464#discussion_r469335379", "createdAt": "2020-08-12T15:14:14Z", "author": {"login": "rhusar"}, "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/OffHeapMemoryResourceDefinition.java", "diffHunk": "@@ -62,24 +102,101 @@\n         public AttributeDefinition getDefinition() {\n             return this.definition;\n         }\n+\n+        @Override\n+        public SimpleAttributeDefinitionBuilder apply(SimpleAttributeDefinitionBuilder builder) {\n+            return builder;\n+        }\n     }\n \n     static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n         if (InfinispanModel.VERSION_6_0_0.requiresTransformation(version)) {\n             parent.rejectChildResource(PATH);\n+        } else {\n+            ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n+            // We cannot convert these size values - as there is not guarantee that such a converter would run before the sizeUnitConverter\n+            for (MemorySizeUnit unit : EnumSet.complementOf(EnumSet.of(MemorySizeUnit.ENTRIES, MemorySizeUnit.BYTES))) {\n+                builder.getAttributeBuilder().addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(unit.name())), Attribute.SIZE_UNIT.getName());\n+            }\n+            SimpleAttributeConverter.Converter sizeUnitConverter = new SimpleAttributeConverter.Converter() {\n+                @SuppressWarnings(\"deprecation\")\n+                @Override\n+                public void convert(PathAddress address, String name, ModelNode value, ModelNode model, TransformationContext context) {\n+                    if (value.isDefined()) {\n+                        MemorySizeUnit unit = MemorySizeUnit.valueOf(value.asString());\n+                        if (unit == MemorySizeUnit.ENTRIES) {\n+                            value.clear();\n+                        } else {\n+                            value.set(org.infinispan.eviction.EvictionType.MEMORY.name());\n+                        }\n+                        //value.set((unit == MemorySizeUnit.ENTRIES ? org.infinispan.eviction.EvictionType.COUNT : org.infinispan.eviction.EvictionType.MEMORY).name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e362d12aefc0c7f34be2635d80837d6205bf7f1"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MTM1MA==", "bodyText": "Yup.", "url": "https://github.com/wildfly/wildfly/pull/13464#discussion_r469381350", "createdAt": "2020-08-12T16:17:53Z", "author": {"login": "pferraro"}, "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/OffHeapMemoryResourceDefinition.java", "diffHunk": "@@ -62,24 +102,101 @@\n         public AttributeDefinition getDefinition() {\n             return this.definition;\n         }\n+\n+        @Override\n+        public SimpleAttributeDefinitionBuilder apply(SimpleAttributeDefinitionBuilder builder) {\n+            return builder;\n+        }\n     }\n \n     static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n         if (InfinispanModel.VERSION_6_0_0.requiresTransformation(version)) {\n             parent.rejectChildResource(PATH);\n+        } else {\n+            ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n+            // We cannot convert these size values - as there is not guarantee that such a converter would run before the sizeUnitConverter\n+            for (MemorySizeUnit unit : EnumSet.complementOf(EnumSet.of(MemorySizeUnit.ENTRIES, MemorySizeUnit.BYTES))) {\n+                builder.getAttributeBuilder().addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(unit.name())), Attribute.SIZE_UNIT.getName());\n+            }\n+            SimpleAttributeConverter.Converter sizeUnitConverter = new SimpleAttributeConverter.Converter() {\n+                @SuppressWarnings(\"deprecation\")\n+                @Override\n+                public void convert(PathAddress address, String name, ModelNode value, ModelNode model, TransformationContext context) {\n+                    if (value.isDefined()) {\n+                        MemorySizeUnit unit = MemorySizeUnit.valueOf(value.asString());\n+                        if (unit == MemorySizeUnit.ENTRIES) {\n+                            value.clear();\n+                        } else {\n+                            value.set(org.infinispan.eviction.EvictionType.MEMORY.name());\n+                        }\n+                        //value.set((unit == MemorySizeUnit.ENTRIES ? org.infinispan.eviction.EvictionType.COUNT : org.infinispan.eviction.EvictionType.MEMORY).name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNTM3OQ=="}, "originalCommit": {"oid": "7e362d12aefc0c7f34be2635d80837d6205bf7f1"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4244, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}