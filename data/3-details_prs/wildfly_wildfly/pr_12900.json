{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjg1NDAy", "number": 12900, "title": "WFLY-12958 Calling Asynchronous EJB will use the propagated caller tr\u2026", "bodyText": "JIRA: https://issues.redhat.com/browse/WFLY-12958", "createdAt": "2020-01-11T02:32:53Z", "url": "https://github.com/wildfly/wildfly/pull/12900", "merged": true, "mergeCommit": {"oid": "7afa77c6021a0fbe1df385b5a93fff760caa4458"}, "closed": true, "closedAt": "2020-01-14T03:34:52Z", "author": {"login": "chengfang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5JtKKgH2gAyMzYxNjg1NDAyOjExYjczNzUxN2E0ZThlMjQwZjliODRiNjk1NWQ5YzA5NTljZDEzODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6N_2xgFqTM0MjQxMTU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11b737517a4e8e240f9b84b6955d9c0959cd1384", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/11b737517a4e8e240f9b84b6955d9c0959cd1384", "committedDate": "2020-01-11T02:27:05Z", "message": "WFLY-12958 Calling Asynchronous EJB will use the propagated caller transaction which is not according to the specification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5d8eda3ae6ff639de57b22fa168996e74608719", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/b5d8eda3ae6ff639de57b22fa168996e74608719", "committedDate": "2020-01-12T03:39:35Z", "message": "WFLY-12958 For Asynchronous EJB methods treat transaction attribute REQUIRED as REQUIRES_NEW since the caller's transaction context is not propagated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01", "author": {"user": {"login": "chengfang", "name": "Cheng Fang"}}, "url": "https://github.com/wildfly/wildfly/commit/707801c3ceaae6709987ab07b23778fb0efcaf01", "committedDate": "2020-01-13T21:17:29Z", "message": "WFLY-12958 add test to verify transaction attribute REQUIRED for async method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjQyNTIy", "url": "https://github.com/wildfly/wildfly/pull/12900#pullrequestreview-342242522", "createdAt": "2020-01-14T01:20:22Z", "commit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNDEwNzIz", "url": "https://github.com/wildfly/wildfly/pull/12900#pullrequestreview-342410723", "createdAt": "2020-01-14T09:59:51Z", "commit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo1OTo1MVrOFdR26Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo1OTo1MVrOFdR26Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0NTYwOQ==", "bodyText": "How did we get to the point of having a tx here during an async invocation?", "url": "https://github.com/wildfly/wildfly/pull/12900#discussion_r366245609", "createdAt": "2020-01-14T09:59:51Z", "author": {"login": "wolfc"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/tx/CMTTxInterceptor.java", "diffHunk": "@@ -141,6 +144,15 @@ public Object processInvocation(InterceptorContext invocation) throws Exception\n                 case NOT_SUPPORTED:\n                     return notSupported(invocation, component);\n                 case REQUIRED:\n+                    final ComponentView view = invocation.getPrivateData(ComponentView.class);\n+                    if (view != null && view.isAsynchronous(method)) {\n+                        // EJB 3.2 4.5.3 Transactions\n+                        // The client\u2019s transaction context does not propagate with an asynchronous method invocation. From the\n+                        // Bean Provider\u2019s point of view, there is never a transaction context flowing in from the client. This\n+                        // means, for example, that the semantics of the REQUIRED transaction attribute on an asynchronous\n+                        // method are exactly the same as REQUIRES_NEW.\n+                        return requiresNew(invocation, component, timeoutInSeconds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNDExNTQy", "url": "https://github.com/wildfly/wildfly/pull/12900#pullrequestreview-342411542", "createdAt": "2020-01-14T10:01:02Z", "commit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDowMTowM1rOFdR5dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDowMTowM1rOFdR5dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0NjI2Mg==", "bodyText": "You hold the Future, so better use it.", "url": "https://github.com/wildfly/wildfly/pull/12900#discussion_r366246262", "createdAt": "2020-01-14T10:01:03Z", "author": {"login": "wolfc"}, "path": "testsuite/integration/multinode/src/test/java/org/jboss/as/test/multinode/transaction/async/ClientBean.java", "diffHunk": "@@ -84,10 +84,28 @@ public void callToStatusByTransactionmanager() throws Exception {\n         final TransactionalRemote remote = getRemote(TransactionalStatusByManager.class);\n         userTransaction.begin();\n         try {\n-            Assert.assertEquals(\"No transaction expected as async call does not pass txn context\",\n+            assertEquals(\"No transaction expected as async call does not pass txn context\",\n                     (Integer) Status.STATUS_NO_TRANSACTION, remote.transactionStatus().get());\n         } finally {\n             userTransaction.rollback();\n         }\n     }\n+\n+    /**\n+     * Verifies async method invocation with REQUIRED transaction attribute.\n+     * The client transaction context should not be propagated to the invoked async method.\n+     * The invoked async method should execute in a new, separate transaction context.\n+     */\n+    public void callToRequired() throws Exception {\n+        final TransactionalRemote remote = getRemote(TransactionalStatusByManager.class);\n+        userTransaction.begin();\n+\n+        // asyncWithRequired() will throw RuntimeException and cause its transaction to rollback.\n+        // But it has no bearing on the transaction here, which should be able to commit okay.\n+        remote.asyncWithRequired();\n+\n+        // wait a bit for the transaction in asyncWithRequired method to rollback\n+        Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707801c3ceaae6709987ab07b23778fb0efcaf01"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3654, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}