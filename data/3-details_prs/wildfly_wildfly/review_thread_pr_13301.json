{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzgxMjUx", "number": 13301, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozMzo0MVrOD_wUyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozNDo0OFrOD_wWaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTc4NjMyOnYy", "diffSide": "RIGHT", "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozMzo0MVrOGamrIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzo1NzozOFrOGbLc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0OTc5Mw==", "bodyText": "I think we need to keep these at INFO since they often help debugging. @pferraro would you agree?", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r430549793", "createdAt": "2020-05-26T16:33:41Z", "author": {"login": "rhusar"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "diffHunk": "@@ -68,7 +68,7 @@ public void establishTopology(String containerName, String cacheName, long timeo\n                 long now = start;\n                 long endTime = start + timeout;\n                 while (!expectedMembers.equals(members)) {\n-                    logger.infof(\"%s != %s, waiting for a topology change event. Current topology id = %d\", expectedMembers, members, topology.getTopologyId());\n+                    logger.debugf(\"%s != %s, waiting for a topology change event. Current topology id = %d\", expectedMembers, members, topology.getTopologyId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1MjM1OA==", "bodyText": "yes - please leave this one as is.", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r431152358", "createdAt": "2020-05-27T13:57:38Z", "author": {"login": "pferraro"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "diffHunk": "@@ -68,7 +68,7 @@ public void establishTopology(String containerName, String cacheName, long timeo\n                 long now = start;\n                 long endTime = start + timeout;\n                 while (!expectedMembers.equals(members)) {\n-                    logger.infof(\"%s != %s, waiting for a topology change event. Current topology id = %d\", expectedMembers, members, topology.getTopologyId());\n+                    logger.debugf(\"%s != %s, waiting for a topology change event. Current topology id = %d\", expectedMembers, members, topology.getTopologyId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0OTc5Mw=="}, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTc4NjY5OnYy", "diffSide": "RIGHT", "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozMzo0N1rOGamrXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzo1ODowN1rOGbLehg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0OTg1NQ==", "bodyText": "I think we need to keep these at INFO since they often help debugging. @pferraro would you agree?", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r430549855", "createdAt": "2020-05-26T16:33:47Z", "author": {"login": "rhusar"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "diffHunk": "@@ -77,7 +77,7 @@ public void establishTopology(String containerName, String cacheName, long timeo\n                     topology = dist.getCacheTopology();\n                     members = getMembers(topology);\n                 }\n-                logger.infof(\"Cache %s/%s successfully established view %s within %d ms. Topology id = %d\", containerName, cacheName, expectedMembers, now - start, topology.getTopologyId());\n+                logger.debugf(\"Cache %s/%s successfully established view %s within %d ms. Topology id = %d\", containerName, cacheName, expectedMembers, now - start, topology.getTopologyId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1Mjc3NA==", "bodyText": "yes - please leave this one as is.", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r431152774", "createdAt": "2020-05-27T13:58:07Z", "author": {"login": "pferraro"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/TopologyChangeListenerBean.java", "diffHunk": "@@ -77,7 +77,7 @@ public void establishTopology(String containerName, String cacheName, long timeo\n                     topology = dist.getCacheTopology();\n                     members = getMembers(topology);\n                 }\n-                logger.infof(\"Cache %s/%s successfully established view %s within %d ms. Topology id = %d\", containerName, cacheName, expectedMembers, now - start, topology.getTopologyId());\n+                logger.debugf(\"Cache %s/%s successfully established view %s within %d ms. Topology id = %d\", containerName, cacheName, expectedMembers, now - start, topology.getTopologyId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0OTg1NQ=="}, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTc5MDUxOnYy", "diffSide": "RIGHT", "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/ejb/remote/byteman/LastNodeToLeaveRemoteEJBTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozNDo0OFrOGamt_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzo1ODoxNVrOGbLe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1MDUyNg==", "bodyText": "@rachmatowicz Could you look at these changes? I am not sure how often are these needed / useful for debugging.", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r430550526", "createdAt": "2020-05-26T16:34:48Z", "author": {"login": "rhusar"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/ejb/remote/byteman/LastNodeToLeaveRemoteEJBTestCase.java", "diffHunk": "@@ -130,7 +130,7 @@ public LastNodeToLeaveRemoteEJBTestCase() throws Exception {\n         public String selectNode(String clusterName, String[] connectedNodes, String[] totalAvailableNodes) {\n             Set<String> connectedNodesSet = Arrays.asList(connectedNodes).stream().collect(Collectors.toSet());\n             Set<String> totalNodesSet = Arrays.asList(totalAvailableNodes).stream().collect(Collectors.toSet());\n-            LOGGER.infof(\"Calling ClusterNodeSelector.selectNode(%s,%s,%s)\", clusterName, connectedNodesSet, totalNodesSet);\n+            LOGGER.debugf(\"Calling ClusterNodeSelector.selectNode(%s,%s,%s)\", clusterName, connectedNodesSet, totalNodesSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1Mjg3MA==", "bodyText": "this can be debug", "url": "https://github.com/wildfly/wildfly/pull/13301#discussion_r431152870", "createdAt": "2020-05-27T13:58:15Z", "author": {"login": "pferraro"}, "path": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/ejb/remote/byteman/LastNodeToLeaveRemoteEJBTestCase.java", "diffHunk": "@@ -130,7 +130,7 @@ public LastNodeToLeaveRemoteEJBTestCase() throws Exception {\n         public String selectNode(String clusterName, String[] connectedNodes, String[] totalAvailableNodes) {\n             Set<String> connectedNodesSet = Arrays.asList(connectedNodes).stream().collect(Collectors.toSet());\n             Set<String> totalNodesSet = Arrays.asList(totalAvailableNodes).stream().collect(Collectors.toSet());\n-            LOGGER.infof(\"Calling ClusterNodeSelector.selectNode(%s,%s,%s)\", clusterName, connectedNodesSet, totalNodesSet);\n+            LOGGER.debugf(\"Calling ClusterNodeSelector.selectNode(%s,%s,%s)\", clusterName, connectedNodesSet, totalNodesSet);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1MDUyNg=="}, "originalCommit": {"oid": "a9bf0c0fb92dbcbb14a34fe0a2d7b11960e09226"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4264, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}