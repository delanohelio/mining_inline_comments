{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MzIwNTMw", "number": 13810, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzoyNToyNVrOFDu-lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1Mjo0OFrOFDve6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDU5NzMyOnYy", "diffSide": "RIGHT", "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzoyNToyNVrOIDiGPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDo1MDo0NVrOIEM1bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg==", "bodyText": "What does 'newly created' mean? First request for the session id anywhere in the cluster? Locally?", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540575292", "createdAt": "2020-12-10T23:25:25Z", "author": {"login": "bstansberry"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5Njk5MQ==", "bodyText": "As defined by: https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpSession.html#isNew--", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540596991", "createdAt": "2020-12-11T00:18:06Z", "author": {"login": "pferraro"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwMjg3NA==", "bodyText": "This property was formerly implied by the fact that the creationTime != the lastAccessedTime.  However, since the semantics of lastAccessedTime have changed, isNew() must now be determined explicitly, hence this logic.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540602874", "createdAt": "2020-12-11T00:34:24Z", "author": {"login": "pferraro"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI3NTUwMQ==", "bodyText": "Thanks.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r541275501", "createdAt": "2020-12-11T20:50:45Z", "author": {"login": "bstansberry"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDYwNjY0OnYy", "diffSide": "RIGHT", "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzoyODoyMlrOIDiLMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozOTo0M1rOIES4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjU2Mw==", "bodyText": "What is the expected use of this? From looking at the PR it seems it's meant to be called at some point and that changes what isNew() would return. But 'close()' as a method name doesn't say that, which is ok so long as the expected use of close() will have that effect. But the expected use is ???.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540576563", "createdAt": "2020-12-10T23:28:22Z", "author": {"login": "bstansberry"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.\n+     * @return true, if this session was newly created, false otherwise.\n+     */\n+    boolean isNew();\n+\n+    @Override\n+    void close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5NjM4NQ==", "bodyText": "This is ultimately triggered by org.wildfly.clustering.web.session.Session#close which effectively ends the transient lifecycle of the session (typically spanning a single request).", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540596385", "createdAt": "2020-12-11T00:16:34Z", "author": {"login": "pferraro"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.\n+     * @return true, if this session was newly created, false otherwise.\n+     */\n+    boolean isNew();\n+\n+    @Override\n+    void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjU2Mw=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI3MzA0MA==", "bodyText": "@pferraro Thanks. I meant to ask in my previous comment whether the javadoc should say something about this, for the benefit of future maintainers.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r541273040", "createdAt": "2020-12-11T20:48:08Z", "author": {"login": "bstansberry"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.\n+     * @return true, if this session was newly created, false otherwise.\n+     */\n+    boolean isNew();\n+\n+    @Override\n+    void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjU2Mw=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM2Mzk4OQ==", "bodyText": "Ah - you're too subtle for me. I've added javadoc added to this and other closeable objects in this module to clarify the semantics.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r541363989", "createdAt": "2020-12-11T22:27:20Z", "author": {"login": "pferraro"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.\n+     * @return true, if this session was newly created, false otherwise.\n+     */\n+    boolean isNew();\n+\n+    @Override\n+    void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjU2Mw=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM3NDU2Nw==", "bodyText": "Thanks. That helps a lot. I think of a session as a long lived thing. Object implementing these interfaces might or might not be, so my brain had trouble grokking what the semantics of close would be.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r541374567", "createdAt": "2020-12-11T22:39:43Z", "author": {"login": "bstansberry"}, "path": "clustering/web/cache/src/main/java/org/wildfly/clustering/web/cache/session/SessionCreationMetaData.java", "diffHunk": "@@ -28,11 +28,31 @@\n  * The more static aspects of a session's meta-data.\n  * @author Paul Ferraro\n  */\n-public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData {\n-\n+public interface SessionCreationMetaData extends ImmutableSessionCreationMetaData, AutoCloseable {\n+    /**\n+     * Sets the maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     * @param a maximum duration of time this session may remain idle before it will be expired by the session manager.\n+     */\n     void setMaxInactiveInterval(Duration duration);\n \n+    /**\n+     * Indicates whether or not this session has been invalidated.\n+     * @return true, if this session was invalidated, false otherwise.\n+     */\n     boolean isValid();\n \n+    /**\n+     * Invalidates this session.\n+     * @return true, if this session was previous valid, false otherwise\n+     */\n     boolean invalidate();\n+\n+    /**\n+     * Indicates whether or not this session was newly created.\n+     * @return true, if this session was newly created, false otherwise.\n+     */\n+    boolean isNew();\n+\n+    @Override\n+    void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NjU2Mw=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDY4MDA5OnYy", "diffSide": "RIGHT", "path": "clustering/web/undertow/src/main/java/org/wildfly/clustering/web/undertow/session/DistributableSession.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1Mjo0OFrOIDizsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDoxNzo1N1rOIDjavw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NjkzMA==", "bodyText": "Is a new one of these DistributableSession objects created per request?\nMust be or startTime would not change and the Batch object passed to the c'tor doesn't sound like something that would span requests.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540586930", "createdAt": "2020-12-10T23:52:48Z", "author": {"login": "bstansberry"}, "path": "clustering/web/undertow/src/main/java/org/wildfly/clustering/web/undertow/session/DistributableSession.java", "diffHunk": "@@ -87,6 +90,11 @@ public void requestDone(HttpServerExchange exchange) {\n                     }\n                     // If batch is closed, close session in a new batch\n                     try (Batch batch = (this.batch.getState() == Batch.State.CLOSED) ? batcher.createBatch() : this.batch) {\n+                        if (this.startTime != null) {\n+                            // According to \u00a77.6 of the servlet specification:\n+                            // The session is considered to be accessed when a request that is part of the session is first handled by the servlet container.\n+                            session.getMetaData().setLastAccessedTime(this.startTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5NjkyNw==", "bodyText": "Is a new one of these DistributableSession objects created per request?\n\nYes.", "url": "https://github.com/wildfly/wildfly/pull/13810#discussion_r540596927", "createdAt": "2020-12-11T00:17:57Z", "author": {"login": "pferraro"}, "path": "clustering/web/undertow/src/main/java/org/wildfly/clustering/web/undertow/session/DistributableSession.java", "diffHunk": "@@ -87,6 +90,11 @@ public void requestDone(HttpServerExchange exchange) {\n                     }\n                     // If batch is closed, close session in a new batch\n                     try (Batch batch = (this.batch.getState() == Batch.State.CLOSED) ? batcher.createBatch() : this.batch) {\n+                        if (this.startTime != null) {\n+                            // According to \u00a77.6 of the servlet specification:\n+                            // The session is considered to be accessed when a request that is part of the session is first handled by the servlet container.\n+                            session.getMetaData().setLastAccessedTime(this.startTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NjkzMA=="}, "originalCommit": {"oid": "eb997287bf90663ce3ca9318c6dd041d7cee2202"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4041, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}