{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NzI3NzI3", "number": 13181, "title": "[WFLY-11566] Fix EJB validation - provide information about generics to validator", "bodyText": "https://issues.redhat.com/browse/WFLY-11566\nhttps://issues.redhat.com/browse/JBEAP-16121\nPlease make sure your PR meets the following requirements:\n\n Pull Request title is properly formatted: [WFLY-XYZ] Subject or WFLY-XYZ Subject\n Pull Request contains link to the JIRA issue(s)\n Pull Request contains description of the issue(s)\n Pull Request does not include fixes for issues other than the main ticket\n Attached commits represent units of work and are properly formatted\n\nFor bigger changes, major and minor component upgrades make sure your PR also meets following requirements:\n\n Pull Request requires a change to the documentation\n Documentation have been updated accordingly\n Tests were added to cover changes\n\nFor new features ensure as well:\n\n Analysis was done\n Test Plan has been done\n Tests were verified in advance\n\nIf you are not an active contributor of the WildFly project you can request sponsorship by one of the members to help guide you through the process.", "createdAt": "2020-04-04T20:18:53Z", "url": "https://github.com/wildfly/wildfly/pull/13181", "merged": true, "mergeCommit": {"oid": "1d49d2691453b4a8331ad2b4d5abdb24502fe78d"}, "closed": true, "closedAt": "2020-05-08T19:30:06Z", "author": {"login": "tadamski"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUbbwHgBqjMyMDA0OTM3Njg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce6363gBqjMzMTIyODM3NTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c61e87ca0be5a26d8d21b3ff71674321c84db4ea", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/c61e87ca0be5a26d8d21b3ff71674321c84db4ea", "committedDate": "2020-04-04T19:46:32Z", "message": "[WFLY-11566] EJB proxy validation integration test"}, "afterCommit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3", "committedDate": "2020-04-04T20:21:42Z", "message": "[WFLY-11566] EJB proxy validation integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzYxODY2", "url": "https://github.com/wildfly/wildfly/pull/13181#pullrequestreview-387761866", "createdAt": "2020-04-04T21:52:09Z", "commit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1MjowOVrOGA1jqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1MjowOVrOGA1jqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUzMDY2NA==", "bodyText": "This should handle the possibility that view.getMarkupClassName() will return null.", "url": "https://github.com/wildfly/wildfly/pull/13181#discussion_r403530664", "createdAt": "2020-04-04T21:52:09Z", "author": {"login": "bstansberry"}, "path": "ee/src/main/java/org/jboss/as/ee/component/DefaultComponentViewConfigurator.java", "diffHunk": "@@ -78,6 +78,14 @@ public void configure(final DeploymentPhaseContext context, final ComponentDescr\n                 }\n             }\n \n+            Class<?> markupClass;\n+            try {\n+                markupClass = module.getClassLoader().loadClass(view.getMarkupClassName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzYyMDE2", "url": "https://github.com/wildfly/wildfly/pull/13181#pullrequestreview-387762016", "createdAt": "2020-04-04T21:54:40Z", "commit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1NDo0MFrOGA1ksA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1NDo0MFrOGA1ksA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUzMDkyOA==", "bodyText": "If this is in the request handling path please use a constant.", "url": "https://github.com/wildfly/wildfly/pull/13181#discussion_r403530928", "createdAt": "2020-04-04T21:54:40Z", "author": {"login": "bstansberry"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/validator/EjbProxyBeanMetaDataClassNormalizer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.jboss.as.ejb3.validator;\n+\n+import org.hibernate.validator.cdi.spi.BeanNames;\n+import org.hibernate.validator.metadata.BeanMetaDataClassNormalizer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.literal.NamedLiteral;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.InjectionPoint;\n+import javax.enterprise.inject.spi.PassivationCapable;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * @author <a href=\"mailto:tadamski@redhat.com\">Tomasz Adamski</a>\n+ */\n+\n+public class EjbProxyBeanMetaDataClassNormalizer implements BeanMetaDataClassNormalizer, Bean<BeanMetaDataClassNormalizer>, PassivationCapable {\n+\n+    @Override\n+    public <T> Class<? super T> normalize(Class<T> clazz) {\n+        if (EjbProxy.class.isAssignableFrom(clazz)) {\n+            return clazz.getSuperclass();\n+        }\n+        return clazz;\n+    }\n+\n+    @Override\n+    public Class<?> getBeanClass() {\n+        return BeanMetaDataClassNormalizer.class;\n+    }\n+\n+    @Override\n+    public Set<InjectionPoint> getInjectionPoints() {\n+        return Collections.emptySet();\n+    }\n+\n+    @Override\n+    public boolean isNullable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public BeanMetaDataClassNormalizer create(CreationalContext<BeanMetaDataClassNormalizer> creationalContext) {\n+        return new EjbProxyBeanMetaDataClassNormalizer();\n+    }\n+\n+    @Override\n+    public void destroy(BeanMetaDataClassNormalizer beanMetaDataClassNormalizer, CreationalContext<BeanMetaDataClassNormalizer> creationalContext) {\n+\n+    }\n+\n+    @Override\n+    public Set<Type> getTypes() {\n+        return Collections.singleton( BeanMetaDataClassNormalizer.class );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzYyMDIw", "url": "https://github.com/wildfly/wildfly/pull/13181#pullrequestreview-387762020", "createdAt": "2020-04-04T21:54:45Z", "commit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1NDo0NVrOGA1ktQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTo1NDo0NVrOGA1ktQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUzMDkzMw==", "bodyText": "If this is in the request handling path please use a constant.", "url": "https://github.com/wildfly/wildfly/pull/13181#discussion_r403530933", "createdAt": "2020-04-04T21:54:45Z", "author": {"login": "bstansberry"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/validator/EjbProxyBeanMetaDataClassNormalizer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.jboss.as.ejb3.validator;\n+\n+import org.hibernate.validator.cdi.spi.BeanNames;\n+import org.hibernate.validator.metadata.BeanMetaDataClassNormalizer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.literal.NamedLiteral;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.InjectionPoint;\n+import javax.enterprise.inject.spi.PassivationCapable;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * @author <a href=\"mailto:tadamski@redhat.com\">Tomasz Adamski</a>\n+ */\n+\n+public class EjbProxyBeanMetaDataClassNormalizer implements BeanMetaDataClassNormalizer, Bean<BeanMetaDataClassNormalizer>, PassivationCapable {\n+\n+    @Override\n+    public <T> Class<? super T> normalize(Class<T> clazz) {\n+        if (EjbProxy.class.isAssignableFrom(clazz)) {\n+            return clazz.getSuperclass();\n+        }\n+        return clazz;\n+    }\n+\n+    @Override\n+    public Class<?> getBeanClass() {\n+        return BeanMetaDataClassNormalizer.class;\n+    }\n+\n+    @Override\n+    public Set<InjectionPoint> getInjectionPoints() {\n+        return Collections.emptySet();\n+    }\n+\n+    @Override\n+    public boolean isNullable() {\n+        return false;\n+    }\n+\n+    @Override\n+    public BeanMetaDataClassNormalizer create(CreationalContext<BeanMetaDataClassNormalizer> creationalContext) {\n+        return new EjbProxyBeanMetaDataClassNormalizer();\n+    }\n+\n+    @Override\n+    public void destroy(BeanMetaDataClassNormalizer beanMetaDataClassNormalizer, CreationalContext<BeanMetaDataClassNormalizer> creationalContext) {\n+\n+    }\n+\n+    @Override\n+    public Set<Type> getTypes() {\n+        return Collections.singleton( BeanMetaDataClassNormalizer.class );\n+    }\n+\n+    @Override\n+    public Set<Annotation> getQualifiers() {\n+        return Collections.singleton( NamedLiteral.of( BeanNames.BEAN_META_DATA_CLASS_NORMALIZER ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3"}, "originalPosition": 85}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/ccb8b6c940ad7366ebbfac56bef18eb7b66d0cd3", "committedDate": "2020-04-04T20:21:42Z", "message": "[WFLY-11566] EJB proxy validation integration test"}, "afterCommit": {"oid": "1e5050b3ee4291ff74c629edcd839a5731d69358", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/1e5050b3ee4291ff74c629edcd839a5731d69358", "committedDate": "2020-04-05T14:00:06Z", "message": "[WFLY-11566] EJB proxy validation integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e5050b3ee4291ff74c629edcd839a5731d69358", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/1e5050b3ee4291ff74c629edcd839a5731d69358", "committedDate": "2020-04-05T14:00:06Z", "message": "[WFLY-11566] EJB proxy validation integration test"}, "afterCommit": {"oid": "94a521543609f63766c14a463d1cf8da087af7d3", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/94a521543609f63766c14a463d1cf8da087af7d3", "committedDate": "2020-04-14T12:34:13Z", "message": "[WFLY-11566] Provide hibernate-validator with normalizer for EJB proxies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODg2NTg0", "url": "https://github.com/wildfly/wildfly/pull/13181#pullrequestreview-394886584", "createdAt": "2020-04-16T18:17:59Z", "commit": {"oid": "94a521543609f63766c14a463d1cf8da087af7d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTAzNjM4", "url": "https://github.com/wildfly/wildfly/pull/13181#pullrequestreview-394903638", "createdAt": "2020-04-16T18:41:19Z", "commit": {"oid": "94a521543609f63766c14a463d1cf8da087af7d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5e6038154b135a1fd5c92b312c1b477559f3384", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/f5e6038154b135a1fd5c92b312c1b477559f3384", "committedDate": "2020-05-07T10:29:21Z", "message": "[WFLY-11566] Provide hibernate-validator with normalizer for EJB proxies"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94a521543609f63766c14a463d1cf8da087af7d3", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/94a521543609f63766c14a463d1cf8da087af7d3", "committedDate": "2020-04-14T12:34:13Z", "message": "[WFLY-11566] Provide hibernate-validator with normalizer for EJB proxies"}, "afterCommit": {"oid": "f5e6038154b135a1fd5c92b312c1b477559f3384", "author": {"user": {"login": "tadamski", "name": "Tomasz Adamski"}}, "url": "https://github.com/wildfly/wildfly/commit/f5e6038154b135a1fd5c92b312c1b477559f3384", "committedDate": "2020-05-07T10:29:21Z", "message": "[WFLY-11566] Provide hibernate-validator with normalizer for EJB proxies"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3508, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}