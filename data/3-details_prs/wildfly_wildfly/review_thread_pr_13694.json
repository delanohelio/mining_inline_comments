{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjIwNTMy", "number": 13694, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozODoxM1rOE2reBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozODoxM1rOE2reBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzcwNzU3OnYy", "diffSide": "RIGHT", "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/HealthReporterService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozODoxM1rOHvmK1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0NjoxMlrOHvmexA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3MDQ4Nw==", "bodyText": "I haven't got time today to check into the code but I suspect this will be triggering a permissions check here.\nThe normal reaction to that would be \"I must add a doProvileged\" but I think this code is correct as the complete call stack will be initiated from the management endpoint.\nBut assuming my two assumptions are true it may be worth adding a comment so no one helpfully adds a \"missing doPrivileged\" at a later point.", "url": "https://github.com/wildfly/wildfly/pull/13694#discussion_r519670487", "createdAt": "2020-11-09T09:38:13Z", "author": {"login": "darranl"}, "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/HealthReporterService.java", "diffHunk": "@@ -85,7 +85,7 @@ public void start(StartContext context) {\n         final boolean defaultServerProceduresDisabled = ConfigProvider.getConfig().getOptionalValue(\"mp.health.disable-default-procedures\", Boolean.class).orElse(false);\n         healthReporter = new HealthReporter(emptyLivenessChecksStatus, emptyReadinessChecksStatus, defaultServerProceduresDisabled);\n \n-        modelControllerClient = modelControllerClientFactory.get().createClient(managementExecutor.get());\n+        modelControllerClient = modelControllerClientFactory.get().createSuperUserClient(managementExecutor.get(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ab1c3d01650c66321a2e6fae7e1d78d7335dfe2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3NTU4OA==", "bodyText": "@darranl I've added a comment based on your remark.\nI've manually tested that if RBAC is enabled, this code works (when security-enabled is false).\nWhen security-enabled is true, the authentication fails when the HTTP endpoint is accessed and this code is not invoked.", "url": "https://github.com/wildfly/wildfly/pull/13694#discussion_r519675588", "createdAt": "2020-11-09T09:46:12Z", "author": {"login": "jmesnil"}, "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/HealthReporterService.java", "diffHunk": "@@ -85,7 +85,7 @@ public void start(StartContext context) {\n         final boolean defaultServerProceduresDisabled = ConfigProvider.getConfig().getOptionalValue(\"mp.health.disable-default-procedures\", Boolean.class).orElse(false);\n         healthReporter = new HealthReporter(emptyLivenessChecksStatus, emptyReadinessChecksStatus, defaultServerProceduresDisabled);\n \n-        modelControllerClient = modelControllerClientFactory.get().createClient(managementExecutor.get());\n+        modelControllerClient = modelControllerClientFactory.get().createSuperUserClient(managementExecutor.get(), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3MDQ4Nw=="}, "originalCommit": {"oid": "3ab1c3d01650c66321a2e6fae7e1d78d7335dfe2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4148, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}