{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDc3MDcx", "number": 13226, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOTowOTo1MFrODzoEug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOTowOTo1MFrODzoEug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDYwNTM4OnYy", "diffSide": "RIGHT", "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOTowOTo1MFrOGIKwHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOToxNjoyMFrOGR1w6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzk1MQ==", "bodyText": "Would this class be better in WildFly Core so it can be shared?  I think there was a duplicate issue raised for the Undertow subsystem so we know at least two will need a solution for this.", "url": "https://github.com/wildfly/wildfly/pull/13226#discussion_r411217951", "createdAt": "2020-04-20T09:09:50Z", "author": {"login": "darranl"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "diffHunk": "@@ -236,4 +239,62 @@ public void execute(OperationContext context, ModelNode operation) throws Operat\n             return null;\n         };\n     }\n+\n+    private static class BooleanCapabilityReferenceRecorder implements CapabilityReferenceRecorder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a87bf8a8e15416130122c6b5d63e2278b90ff7a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0MDI4MQ==", "bodyText": "I wasn't sure because the usage is scarce and imo this class is a bit hacky. But I can push it to core as well.", "url": "https://github.com/wildfly/wildfly/pull/13226#discussion_r411240281", "createdAt": "2020-04-20T09:43:23Z", "author": {"login": "tadamski"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "diffHunk": "@@ -236,4 +239,62 @@ public void execute(OperationContext context, ModelNode operation) throws Operat\n             return null;\n         };\n     }\n+\n+    private static class BooleanCapabilityReferenceRecorder implements CapabilityReferenceRecorder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzk1MQ=="}, "originalCommit": {"oid": "4a87bf8a8e15416130122c6b5d63e2278b90ff7a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0MTQzNA==", "bodyText": "Lets see what others reviewing think, but if we know at least two subsystems need the same solution something common may be preferred.\nAlthough one thing we may keep in mind is at some point we will be removing these application-security-domain resources but we are not quite at that point yet.", "url": "https://github.com/wildfly/wildfly/pull/13226#discussion_r411241434", "createdAt": "2020-04-20T09:45:15Z", "author": {"login": "darranl"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "diffHunk": "@@ -236,4 +239,62 @@ public void execute(OperationContext context, ModelNode operation) throws Operat\n             return null;\n         };\n     }\n+\n+    private static class BooleanCapabilityReferenceRecorder implements CapabilityReferenceRecorder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzk1MQ=="}, "originalCommit": {"oid": "4a87bf8a8e15416130122c6b5d63e2278b90ff7a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODk5MA==", "bodyText": "I'm doubtful about putting this in the core 'controller' project. It is shared across two things but I don't think it's a great config style and I'm concerned about promoting it. We need to update Galleon's wildfly plugin to understand that 'true' means there's the requirement.  That's a necessary but pretty low priority thing.\nIn any case I don't think adding a shared thing should block this; it can be separate.", "url": "https://github.com/wildfly/wildfly/pull/13226#discussion_r421108990", "createdAt": "2020-05-06T21:40:27Z", "author": {"login": "bstansberry"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "diffHunk": "@@ -236,4 +239,62 @@ public void execute(OperationContext context, ModelNode operation) throws Operat\n             return null;\n         };\n     }\n+\n+    private static class BooleanCapabilityReferenceRecorder implements CapabilityReferenceRecorder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzk1MQ=="}, "originalCommit": {"oid": "4a87bf8a8e15416130122c6b5d63e2278b90ff7a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1OTg1MA==", "bodyText": "Ok that makes sense @bstansberry TBH I am also thinking about the steps needed to remove these application-security-domain resources so if this is the only use then we just need to make sure any replacement doesn't trigger the same kind of issue to solve.", "url": "https://github.com/wildfly/wildfly/pull/13226#discussion_r421359850", "createdAt": "2020-05-07T09:16:20Z", "author": {"login": "darranl"}, "path": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/ApplicationSecurityDomainDefinition.java", "diffHunk": "@@ -236,4 +239,62 @@ public void execute(OperationContext context, ModelNode operation) throws Operat\n             return null;\n         };\n     }\n+\n+    private static class BooleanCapabilityReferenceRecorder implements CapabilityReferenceRecorder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzk1MQ=="}, "originalCommit": {"oid": "4a87bf8a8e15416130122c6b5d63e2278b90ff7a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3895, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}