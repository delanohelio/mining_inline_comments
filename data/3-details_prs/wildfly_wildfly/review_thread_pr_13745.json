{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NjQyNjA2", "number": 13745, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTo0NTozOFrOE-CfYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMzoxN1rOFasy7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDg3OTY5OnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/main/resources/schema/wildfly-messaging-activemq_12_0.xsd", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTo0NTozOFrOH7Ck6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNzozMzoxMVrOH7FEgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MDI1MA==", "bodyText": "We should probably set default values for this and the other entries", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r531670250", "createdAt": "2020-11-27T15:45:38Z", "author": {"login": "kabir"}, "path": "messaging-activemq/src/main/resources/schema/wildfly-messaging-activemq_12_0.xsd", "diffHunk": "@@ -303,6 +303,23 @@\n                 </xs:complexType>\n             </xs:element>\n \n+            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"critical-analyzer\">\n+                <xs:complexType>\n+                    <xs:attribute name=\"critical-analyzer-enabled\" type=\"xs:boolean\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7ccbd5eadf510e74e15186201013192982a9d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcxMTEwNw==", "bodyText": "ok", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r531711107", "createdAt": "2020-11-27T17:33:11Z", "author": {"login": "ehsavoie"}, "path": "messaging-activemq/src/main/resources/schema/wildfly-messaging-activemq_12_0.xsd", "diffHunk": "@@ -303,6 +303,23 @@\n                 </xs:complexType>\n             </xs:element>\n \n+            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"critical-analyzer\">\n+                <xs:complexType>\n+                    <xs:attribute name=\"critical-analyzer-enabled\" type=\"xs:boolean\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MDI1MA=="}, "originalCommit": {"oid": "6b7ccbd5eadf510e74e15186201013192982a9d5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDg4NTYwOnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_12_0_transform.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTo0NzozNVrOH7Coag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTo1ODozNVrOH7C8pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MTE0Ng==", "bodyText": "Assuming this is for the 'working' configuration for transformation, I am curious why it allows transformation when these are defined. I would have thought they should get rejected (unless these values are what is implied in the old server version)?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r531671146", "createdAt": "2020-11-27T15:47:35Z", "author": {"login": "kabir"}, "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_12_0_transform.xml", "diffHunk": "@@ -72,6 +72,11 @@\n             network-check-ping6-command=\"ping6 -c 1 %2$s\"\n             network-check-timeout=\"1000\"/>\n \n+            <critical-analyzer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7ccbd5eadf510e74e15186201013192982a9d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3NjMyNg==", "bodyText": "Those are the default values and thus are ignored", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r531676326", "createdAt": "2020-11-27T15:58:35Z", "author": {"login": "ehsavoie"}, "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_12_0_transform.xml", "diffHunk": "@@ -72,6 +72,11 @@\n             network-check-ping6-command=\"ping6 -c 1 %2$s\"\n             network-check-timeout=\"1000\"/>\n \n+            <critical-analyzer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MTE0Ng=="}, "originalCommit": {"oid": "6b7ccbd5eadf510e74e15186201013192982a9d5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MDY0NjEwOnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0NDowMFrOIYORCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0NDowMFrOIYORCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjI3MDQ3NQ==", "bodyText": "s/criticial/critical", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r562270475", "createdAt": "2021-01-21T23:44:00Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "diffHunk": "@@ -341,6 +341,10 @@ server.commit-prepared-transaction=Heuristically commits a prepared transaction.\n server.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.\n server.create-bindings-dir=Whether the server should create the bindings directory on start up.\n server.create-journal-dir=Whether the server should create the journal directory on start up.\n+server.critical-analyzer-enabled=To enable or disable the criticial analyzer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858df5bcdcbcd9baae67c59d01f4e539a853e6a3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MDY0Njk2OnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0NDoxOVrOIYOReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0NDoxOVrOIYOReg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjI3MDU4Ng==", "bodyText": "s/default half/defaults to half/g", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r562270586", "createdAt": "2021-01-21T23:44:19Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "diffHunk": "@@ -341,6 +341,10 @@ server.commit-prepared-transaction=Heuristically commits a prepared transaction.\n server.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.\n server.create-bindings-dir=Whether the server should create the bindings directory on start up.\n server.create-journal-dir=Whether the server should create the journal directory on start up.\n+server.critical-analyzer-enabled=To enable or disable the criticial analyzer.\n+server.critical-analyzer-timeout=Timeout used to do the critical analysis.\n+server.critical-analyzer-check-period=Time used to check the response times (default half of critical-analyzer-timeout).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858df5bcdcbcd9baae67c59d01f4e539a853e6a3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MDY1NzQwOnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0ODozM1rOIYOXmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMzo0ODozM1rOIYOXmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjI3MjE1NA==", "bodyText": "Does this analyzer \"halt\" or \"shutdown\" the entire WildFly server, or just the messaging server?\nIf latter, perhaps s/the server log/the messaging server log/g", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r562272154", "createdAt": "2021-01-21T23:48:33Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/main/resources/org/wildfly/extension/messaging/activemq/LocalDescriptions.properties", "diffHunk": "@@ -341,6 +341,10 @@ server.commit-prepared-transaction=Heuristically commits a prepared transaction.\n server.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.\n server.create-bindings-dir=Whether the server should create the bindings directory on start up.\n server.create-journal-dir=Whether the server should create the journal directory on start up.\n+server.critical-analyzer-enabled=To enable or disable the criticial analyzer.\n+server.critical-analyzer-timeout=Timeout used to do the critical analysis.\n+server.critical-analyzer-check-period=Time used to check the response times (default half of critical-analyzer-timeout).\n+server.critical-analyzer-policy=Should the server log, be halted or shutdown upon failures.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858df5bcdcbcd9baae67c59d01f4e539a853e6a3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE0Mjc5OnYy", "diffSide": "RIGHT", "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMTo1NDozMFrOIjF6bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMTo1NDozMFrOIjF6bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY2Nzk0OQ==", "bodyText": "removeRules already seems to ignore exceptions. Is there a reason for try-catch block?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573667949", "createdAt": "2021-02-10T11:54:30Z", "author": {"login": "honza-kasik"}, "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Copyright 2021 JBoss by Red Hat.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.as.test.manualmode.messaging;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Properties;\n+import javax.jms.ConnectionFactory;\n+import javax.jms.JMSContext;\n+import javax.jms.JMSProducer;\n+import javax.jms.Queue;\n+import javax.jms.TextMessage;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.jboss.arquillian.container.test.api.ContainerController;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.arquillian.test.api.ArquillianResource;\n+import org.jboss.as.arquillian.container.ManagementClient;\n+import org.jboss.as.controller.client.helpers.Operations;\n+import org.jboss.as.test.integration.common.jms.JMSOperations;\n+import org.jboss.as.test.integration.common.jms.JMSOperationsProvider;\n+import org.jboss.as.test.shared.TestLogHandlerSetupTask;\n+import org.jboss.as.test.shared.TestSuiteEnvironment;\n+import org.jboss.as.test.shared.util.LoggingUtil;\n+import org.jboss.byteman.agent.submit.Submit;\n+import org.jboss.dmr.ModelNode;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ *\n+ * @author Emmanuel Hugonnet (c) 2020 Red Hat, Inc.\n+ */\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class CriticalAnalyzerTestCase {\n+\n+    private static final String DEFAULT_FULL_JBOSSAS = \"default-full-jbossas-byteman\";\n+    private static final String EXPORTED_PREFIX = \"java:jboss/exported/\";\n+    private static final ModelNode AIO_DISABLED_ADDRESS = Operations.createAddress(\"system-property\", \"org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory.DISABLED\");\n+\n+    @ArquillianResource\n+    protected static ContainerController container;\n+\n+    private LoggerSetup loggerSetup;\n+    private ManagementClient managementClient;\n+\n+    private final Submit bytemanSubmit = new Submit(\n+            System.getProperty(\"byteman.server.ipaddress\", Submit.DEFAULT_ADDRESS),\n+            Integer.getInteger(\"byteman.server.port\", Submit.DEFAULT_PORT));\n+\n+    private void deployRules() throws Exception {\n+        bytemanSubmit.addRulesFromResources(Collections.singletonList(\n+                CriticalAnalyzerTestCase.class.getClassLoader().getResourceAsStream(\"byteman/CriticalAnalyzerTestCase.btm\")));\n+    }\n+\n+    private void removeRules() {\n+        try {\n+            bytemanSubmit.deleteAllRules();\n+        } catch (Exception ex) {\n+\n+        }\n+    }\n+\n+    @Before\n+    public void setup() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        loggerSetup = new LoggerSetup();\n+        managementClient = createManagementClient();\n+        loggerSetup.setup(managementClient, DEFAULT_FULL_JBOSSAS);\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        jmsOperations.createJmsQueue(\"critical\", EXPORTED_PREFIX + \"queue/critical\");\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-policy\", \"SHUTDOWN\"));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-enabled\", ModelNode.TRUE));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-check-period\", new ModelNode(100L)));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-timeout\", new ModelNode(1000L)));\n+        jmsOperations.close();\n+        managementClient.close();\n+        container.stop(DEFAULT_FULL_JBOSSAS);\n+        container.start(DEFAULT_FULL_JBOSSAS);\n+        managementClient = createManagementClient();\n+    }\n+\n+    @After\n+    public void cleanAll() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        try {\n+            removeRules();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE2NTMxOnYy", "diffSide": "RIGHT", "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMDoxMlrOIjGH6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMDoxMlrOIjGH6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3MTQwMQ==", "bodyText": "Can you please add a short description?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573671401", "createdAt": "2021-02-10T12:00:12Z", "author": {"login": "honza-kasik"}, "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Copyright 2021 JBoss by Red Hat.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.as.test.manualmode.messaging;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Properties;\n+import javax.jms.ConnectionFactory;\n+import javax.jms.JMSContext;\n+import javax.jms.JMSProducer;\n+import javax.jms.Queue;\n+import javax.jms.TextMessage;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.jboss.arquillian.container.test.api.ContainerController;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.arquillian.test.api.ArquillianResource;\n+import org.jboss.as.arquillian.container.ManagementClient;\n+import org.jboss.as.controller.client.helpers.Operations;\n+import org.jboss.as.test.integration.common.jms.JMSOperations;\n+import org.jboss.as.test.integration.common.jms.JMSOperationsProvider;\n+import org.jboss.as.test.shared.TestLogHandlerSetupTask;\n+import org.jboss.as.test.shared.TestSuiteEnvironment;\n+import org.jboss.as.test.shared.util.LoggingUtil;\n+import org.jboss.byteman.agent.submit.Submit;\n+import org.jboss.dmr.ModelNode;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ *\n+ * @author Emmanuel Hugonnet (c) 2020 Red Hat, Inc.\n+ */\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class CriticalAnalyzerTestCase {\n+\n+    private static final String DEFAULT_FULL_JBOSSAS = \"default-full-jbossas-byteman\";\n+    private static final String EXPORTED_PREFIX = \"java:jboss/exported/\";\n+    private static final ModelNode AIO_DISABLED_ADDRESS = Operations.createAddress(\"system-property\", \"org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory.DISABLED\");\n+\n+    @ArquillianResource\n+    protected static ContainerController container;\n+\n+    private LoggerSetup loggerSetup;\n+    private ManagementClient managementClient;\n+\n+    private final Submit bytemanSubmit = new Submit(\n+            System.getProperty(\"byteman.server.ipaddress\", Submit.DEFAULT_ADDRESS),\n+            Integer.getInteger(\"byteman.server.port\", Submit.DEFAULT_PORT));\n+\n+    private void deployRules() throws Exception {\n+        bytemanSubmit.addRulesFromResources(Collections.singletonList(\n+                CriticalAnalyzerTestCase.class.getClassLoader().getResourceAsStream(\"byteman/CriticalAnalyzerTestCase.btm\")));\n+    }\n+\n+    private void removeRules() {\n+        try {\n+            bytemanSubmit.deleteAllRules();\n+        } catch (Exception ex) {\n+\n+        }\n+    }\n+\n+    @Before\n+    public void setup() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        loggerSetup = new LoggerSetup();\n+        managementClient = createManagementClient();\n+        loggerSetup.setup(managementClient, DEFAULT_FULL_JBOSSAS);\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        jmsOperations.createJmsQueue(\"critical\", EXPORTED_PREFIX + \"queue/critical\");\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-policy\", \"SHUTDOWN\"));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-enabled\", ModelNode.TRUE));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-check-period\", new ModelNode(100L)));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-timeout\", new ModelNode(1000L)));\n+        jmsOperations.close();\n+        managementClient.close();\n+        container.stop(DEFAULT_FULL_JBOSSAS);\n+        container.start(DEFAULT_FULL_JBOSSAS);\n+        managementClient = createManagementClient();\n+    }\n+\n+    @After\n+    public void cleanAll() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        try {\n+            removeRules();\n+        } catch (Exception e) {\n+        }\n+        loggerSetup.tearDown(managementClient, DEFAULT_FULL_JBOSSAS);\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        jmsOperations.removeJmsQueue(\"critical\");\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-policy\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-enabled\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-check-period\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-timeout\"));\n+        jmsOperations.close();\n+        managementClient.close();\n+        container.stop(DEFAULT_FULL_JBOSSAS);\n+    }\n+\n+    private static ManagementClient createManagementClient() throws UnknownHostException {\n+        return new ManagementClient(\n+                TestSuiteEnvironment.getModelControllerClient(),\n+                TestSuiteEnvironment.formatPossibleIpv6Address(TestSuiteEnvironment.getServerAddress()),\n+                TestSuiteEnvironment.getServerPort(),\n+                \"remote+http\");\n+    }\n+\n+    @Test\n+    public void testCriticalAnalyzer() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE2NjA2OnYy", "diffSide": "RIGHT", "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMDoyNFrOIjGIZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMDoyNFrOIjGIZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3MTUyNQ==", "bodyText": "Can you please add a short description?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573671525", "createdAt": "2021-02-10T12:00:24Z", "author": {"login": "honza-kasik"}, "path": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/messaging/CriticalAnalyzerTestCase.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Copyright 2021 JBoss by Red Hat.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.as.test.manualmode.messaging;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Properties;\n+import javax.jms.ConnectionFactory;\n+import javax.jms.JMSContext;\n+import javax.jms.JMSProducer;\n+import javax.jms.Queue;\n+import javax.jms.TextMessage;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.jboss.arquillian.container.test.api.ContainerController;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.arquillian.test.api.ArquillianResource;\n+import org.jboss.as.arquillian.container.ManagementClient;\n+import org.jboss.as.controller.client.helpers.Operations;\n+import org.jboss.as.test.integration.common.jms.JMSOperations;\n+import org.jboss.as.test.integration.common.jms.JMSOperationsProvider;\n+import org.jboss.as.test.shared.TestLogHandlerSetupTask;\n+import org.jboss.as.test.shared.TestSuiteEnvironment;\n+import org.jboss.as.test.shared.util.LoggingUtil;\n+import org.jboss.byteman.agent.submit.Submit;\n+import org.jboss.dmr.ModelNode;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ *\n+ * @author Emmanuel Hugonnet (c) 2020 Red Hat, Inc.\n+ */\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class CriticalAnalyzerTestCase {\n+\n+    private static final String DEFAULT_FULL_JBOSSAS = \"default-full-jbossas-byteman\";\n+    private static final String EXPORTED_PREFIX = \"java:jboss/exported/\";\n+    private static final ModelNode AIO_DISABLED_ADDRESS = Operations.createAddress(\"system-property\", \"org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory.DISABLED\");\n+\n+    @ArquillianResource\n+    protected static ContainerController container;\n+\n+    private LoggerSetup loggerSetup;\n+    private ManagementClient managementClient;\n+\n+    private final Submit bytemanSubmit = new Submit(\n+            System.getProperty(\"byteman.server.ipaddress\", Submit.DEFAULT_ADDRESS),\n+            Integer.getInteger(\"byteman.server.port\", Submit.DEFAULT_PORT));\n+\n+    private void deployRules() throws Exception {\n+        bytemanSubmit.addRulesFromResources(Collections.singletonList(\n+                CriticalAnalyzerTestCase.class.getClassLoader().getResourceAsStream(\"byteman/CriticalAnalyzerTestCase.btm\")));\n+    }\n+\n+    private void removeRules() {\n+        try {\n+            bytemanSubmit.deleteAllRules();\n+        } catch (Exception ex) {\n+\n+        }\n+    }\n+\n+    @Before\n+    public void setup() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        loggerSetup = new LoggerSetup();\n+        managementClient = createManagementClient();\n+        loggerSetup.setup(managementClient, DEFAULT_FULL_JBOSSAS);\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        jmsOperations.createJmsQueue(\"critical\", EXPORTED_PREFIX + \"queue/critical\");\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-policy\", \"SHUTDOWN\"));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-enabled\", ModelNode.TRUE));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-check-period\", new ModelNode(100L)));\n+        managementClient.getControllerClient().execute(Operations.createWriteAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-timeout\", new ModelNode(1000L)));\n+        jmsOperations.close();\n+        managementClient.close();\n+        container.stop(DEFAULT_FULL_JBOSSAS);\n+        container.start(DEFAULT_FULL_JBOSSAS);\n+        managementClient = createManagementClient();\n+    }\n+\n+    @After\n+    public void cleanAll() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        try {\n+            removeRules();\n+        } catch (Exception e) {\n+        }\n+        loggerSetup.tearDown(managementClient, DEFAULT_FULL_JBOSSAS);\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        jmsOperations.removeJmsQueue(\"critical\");\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-policy\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-enabled\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-check-period\"));\n+        managementClient.getControllerClient().execute(Operations.createUndefineAttributeOperation(jmsOperations.getServerAddress(), \"critical-analyzer-timeout\"));\n+        jmsOperations.close();\n+        managementClient.close();\n+        container.stop(DEFAULT_FULL_JBOSSAS);\n+    }\n+\n+    private static ManagementClient createManagementClient() throws UnknownHostException {\n+        return new ManagementClient(\n+                TestSuiteEnvironment.getModelControllerClient(),\n+                TestSuiteEnvironment.formatPossibleIpv6Address(TestSuiteEnvironment.getServerAddress()),\n+                TestSuiteEnvironment.getServerPort(),\n+                \"remote+http\");\n+    }\n+\n+    @Test\n+    public void testCriticalAnalyzer() throws Exception {\n+        if (!container.isStarted(DEFAULT_FULL_JBOSSAS)) {\n+            container.start(DEFAULT_FULL_JBOSSAS);\n+        }\n+        InitialContext remoteContext = createJNDIContext();\n+        managementClient = createManagementClient();\n+        JMSOperations jmsOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n+        ConnectionFactory cf = (ConnectionFactory) remoteContext.lookup(\"jms/RemoteConnectionFactory\");\n+        Queue queue = (Queue) remoteContext.lookup(\"queue/critical\");\n+        deployRules();\n+        try (JMSContext context = cf.createContext(\"guest\", \"guest\", JMSContext.AUTO_ACKNOWLEDGE)) {\n+            JMSProducer producer = context.createProducer();\n+            for (int i = 0; i < 20; i++) {\n+                TextMessage message = context.createTextMessage(RandomStringUtils.randomAlphabetic(10));\n+                producer.send(queue, message);\n+            }\n+            Assert.fail(\"Critical analyzer should have kicked in\");\n+        } catch (javax.jms.JMSRuntimeException ex) {\n+            Assert.assertTrue(\"Log should contains ActiveMQ connection failure error log message: [AMQ219016]\", ex.getMessage().contains(\"AMQ219016\"));\n+            Assert.assertTrue(\"Log should contains ActiveMQ critical measure \", LoggingUtil.hasLogMessage(managementClient, \"artemis-log\", \"\",\n+                    (line) -> (line.contains(\"[org.apache.activemq.artemis.utils.critical.CriticalMeasure]\"))));\n+            Assert.assertTrue(\"Log should contains ActiveMQ AMQ224080 : critical analyzer is stopping the broker\", LoggingUtil.hasLogMessage(managementClient, \"artemis-log\", \"\",\n+                    (line) -> (line.contains(\"AMQ224080\"))));\n+            Assert.assertTrue(\"Log should contains ActiveMQ AMQ222199 : Thread dump \", LoggingUtil.hasLogMessage(managementClient, \"artemis-log\", \"\",\n+                    (line) -> (line.contains(\"AMQ222199\"))));\n+        }\n+        remoteContext.close();\n+        ModelNode response = managementClient.getControllerClient().execute(Operations.createReadAttributeOperation(jmsOperations.getServerAddress(), \"started\"));\n+        assertTrue(response.toJSONString(true), Operations.isSuccessfulOutcome(response));\n+        assertFalse(Operations.readResult(response).asBoolean());\n+    }\n+\n+    @Test\n+    public void testCriticalAnalyzerDisabled() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE3MTIzOnYy", "diffSide": "RIGHT", "path": "testsuite/integration/manualmode/src/test/resources/byteman/CriticalAnalyzerTestCase.btm", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMTo0OVrOIjGLgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMTo0OVrOIjGLgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3MjMyMQ==", "bodyText": "Maybe missing a newline?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573672321", "createdAt": "2021-02-10T12:01:49Z", "author": {"login": "honza-kasik"}, "path": "testsuite/integration/manualmode/src/test/resources/byteman/CriticalAnalyzerTestCase.btm", "diffHunk": "@@ -0,0 +1,11 @@\n+RULE Simulate block on append record\n+CLASS org.apache.activemq.artemis.core.journal.impl.JournalImpl\n+METHOD appendAddRecord\n+AT ENTRY \n+BIND\n+  test:int = incrementCounter($0);\n+IF test > 10\n+DO\n+  traceln(\"counting \" + test);\n+  Thread.sleep(2000L);\n+ENDRULE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE3Mjc0OnYy", "diffSide": "RIGHT", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/messaging/mgmt/CriticalAnalyzerTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMjoxNFrOIjGMZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowMjoxNFrOIjGMZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3MjU1MA==", "bodyText": "Can you please include a short description?", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573672550", "createdAt": "2021-02-10T12:02:14Z", "author": {"login": "honza-kasik"}, "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/messaging/mgmt/CriticalAnalyzerTestCase.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2012, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.test.integration.messaging.mgmt;\n+\n+import java.io.IOException;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.as.arquillian.api.ContainerResource;\n+import org.jboss.as.arquillian.container.ManagementClient;\n+import org.jboss.as.cli.Util;\n+import org.jboss.as.controller.client.helpers.Operations;\n+\n+import static org.jboss.as.controller.client.helpers.Operations.isSuccessfulOutcome;\n+\n+import org.jboss.as.test.integration.common.jms.JMSOperations;\n+import org.jboss.as.test.integration.common.jms.JMSOperationsProvider;\n+import org.jboss.as.test.integration.management.base.ContainerResourceMgmtTestBase;\n+import org.jboss.as.test.integration.management.util.MgmtOperationException;\n+import org.jboss.as.test.shared.ServerReload;\n+import org.jboss.dmr.ModelNode;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ *\n+ * @author Emmanuel Hugonnet (c) 2020 Red Hat, Inc.\n+ */\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class CriticalAnalyzerTestCase extends ContainerResourceMgmtTestBase {\n+\n+    @ContainerResource\n+    private ManagementClient managementClient;\n+\n+    @Test\n+    public void testCriticalAnalyzerWrite() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE4MDY5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowNDozMVrOIjGRjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowODo0MFrOIjIoQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3Mzg2OA==", "bodyText": "From my understanding, shutdown is neither default behavior or only option...", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573673868", "createdAt": "2021-02-10T12:04:31Z", "author": {"login": "honza-kasik"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwNzk1Mg==", "bodyText": "also s/shtting/shutting", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573707952", "createdAt": "2021-02-10T13:01:26Z", "author": {"login": "bstansberry"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3Mzg2OA=="}, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcxMjQ0OQ==", "bodyText": "Made it clearer", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573712449", "createdAt": "2021-02-10T13:08:40Z", "author": {"login": "ehsavoie"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3Mzg2OA=="}, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjE4Mzg3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowNToyMlrOIjGTkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMjowNToyMlrOIjGTkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzY3NDM4Nw==", "bodyText": "Just a typo: cna, follwoing", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573674387", "createdAt": "2021-02-10T12:05:22Z", "author": {"login": "honza-kasik"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +\n+ If the response time goes beyond a configured timeout, the broker is considered unstable and an action will be taken to either shutdown the broker or halt the VM.\n+For this, the critical analyzer measures the response time in:\n+\n+ * Queue delivery (add to the queue)\n+ * Journal storage\n+ * Paging operations\n+\n+You can configure the critical analyzer on the broker using the CLI\n+To disable the critical analyzer, you cna do the follwoing CLI command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjM5NzEyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMDo1NVrOIjIVig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMDo1NVrOIjIVig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwNzY1OA==", "bodyText": "s/analyzis/analysis", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573707658", "createdAt": "2021-02-10T13:00:55Z", "author": {"login": "bstansberry"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjQwMDc4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMjowM1rOIjIX_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMjowM1rOIjIX_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwODI4NA==", "bodyText": "s/cna/can", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573708284", "createdAt": "2021-02-10T13:02:03Z", "author": {"login": "bstansberry"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +\n+ If the response time goes beyond a configured timeout, the broker is considered unstable and an action will be taken to either shutdown the broker or halt the VM.\n+For this, the critical analyzer measures the response time in:\n+\n+ * Queue delivery (add to the queue)\n+ * Journal storage\n+ * Paging operations\n+\n+You can configure the critical analyzer on the broker using the CLI\n+To disable the critical analyzer, you cna do the follwoing CLI command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjQwMTM2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMjoxMVrOIjIYVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowMjoxMVrOIjIYVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwODM3Mw==", "bodyText": "s/add/adding", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573708373", "createdAt": "2021-02-10T13:02:11Z", "author": {"login": "bstansberry"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +\n+ If the response time goes beyond a configured timeout, the broker is considered unstable and an action will be taken to either shutdown the broker or halt the VM.\n+For this, the critical analyzer measures the response time in:\n+\n+ * Queue delivery (add to the queue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjQwOTI3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowNDoyMFrOIjIdVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzowNDoyMFrOIjIdVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwOTY1NQ==", "bodyText": "Since you'r adding this section might as well add a table or set of bullets listing the other options. I don't think showing them in an example op is needed though.", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573709655", "createdAt": "2021-02-10T13:04:20Z", "author": {"login": "bstansberry"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/Messaging.adoc", "diffHunk": "@@ -639,6 +639,30 @@ This is done from the CLI:\n     }\n }\n ----\n+\n+=== Critical analyzis of the broker\n+\n+When things go wrong on the broker, the critical analyzer acts as a safeguard shtting down the broker. +\n+ If the response time goes beyond a configured timeout, the broker is considered unstable and an action will be taken to either shutdown the broker or halt the VM.\n+For this, the critical analyzer measures the response time in:\n+\n+ * Queue delivery (add to the queue)\n+ * Journal storage\n+ * Paging operations\n+\n+You can configure the critical analyzer on the broker using the CLI\n+To disable the critical analyzer, you cna do the follwoing CLI command:\n+----\n+[standalone@localhost:9990 /] /subsystem=messaging-activemq/server=default:write-attribute(name=critical-analyzer-enabled, value=false)\n+{\n+    \"outcome\" => \"success\",\n+    \"response-headers\" => {\n+        \"operation-requires-reload\" => true,\n+        \"process-state\" => \"reload-required\"\n+    }\n+}\n+----\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf2da0eff1f79cc2d7cb1a52880a8ed72ef67993"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNjQzOTk5OnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_13_0.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQxMzoxMjowM1rOIjIwIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQyMDoyNzo0N1rOIlLtUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcxNDQ2NA==", "bodyText": "Please use an expression for all attributes that support it. Network isolation section too.", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r573714464", "createdAt": "2021-02-10T13:12:03Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_13_0.xml", "diffHunk": "@@ -0,0 +1,719 @@\n+<subsystem xmlns=\"urn:jboss:domain:messaging-activemq:13.0\">\n+    <global-client thread-pool-max-size=\"${global.client.thread-pool-max-size:32}\"\n+                   scheduled-thread-pool-max-size=\"${global.client.scheduled.thread-pool-max-size:54}\" />\n+\n+    <http-connector name=\"client-http\"\n+                    socket-binding=\"http\"\n+                    endpoint=\"http\"\n+                    server-name=\"=foo\">\n+        <param name=\"batch-delay\" value=\"${batch.delay:50}\"/>\n+    </http-connector>\n+\n+    <remote-connector name=\"client-netty-throughput\"\n+                      socket-binding=\"messaging-throughput\">\n+        <param name=\"batch-delay\" value=\"${batch.delay:50}\"/>\n+    </remote-connector>\n+\n+    <in-vm-connector name=\"in-vm-client\"\n+                     server-id=\"${my.server-id:0}\"/>\n+\n+    <connector name=\"myconnector-client\"\n+               factory-class=\"org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnectorFactory\">\n+        <param name=\"host\" value=\"192.168.1.2\"/>\n+        <param name=\"port\" value=\"5445\"/>\n+        <param name=\"key-store-path\" value=\"path/to/server.jks\"/>\n+        <param name=\"key-store-password\" value=\"${VAULT::server-key::key-store-password::sharedKey}\"/>\n+    </connector>\n+\n+    <jgroups-discovery-group name=\"client-discovery-group-2\"\n+                     jgroups-channel=\"ee\"\n+                     jgroups-cluster=\"activemq-cluster\"\n+                     refresh-timeout=\"${discovery.group.refresh.timeout:2345}\"\n+                     initial-wait-timeout=\"${discovery.group.initial.wait.timeout:2345}\"/>\n+\n+    <socket-discovery-group name=\"client-discovery-group-1\"\n+                     socket-binding=\"group-t-binding\"/>\n+\n+    <connection-factory name=\"InVmConnectionFactory\"\n+                        connectors=\"in-vm client\"\n+                        entries=\"${connection-factory.entries.entry:java:/ClientConnectionFactory}\"\n+                        enable-amq1-prefix=\"true\"\n+                        use-topology-for-load-balancing=\"true\" />\n+\n+    <connection-factory name=\"RemoteClientConnectionFactory\"\n+                        factory-type=\"XA_QUEUE\"\n+                        connectors=\"client-http client-netty-throughput\"\n+                        entries=\"RemoteClientConnectionFactory java:/global/jms/RemoteClientConnectionFactory\" />\n+\n+    <connection-factory name=\"otherClientConnectionFactory\"\n+                        discovery-group=\"client-discovery-group-1\"\n+                        ha=\"${ha:true}\"\n+                        entries=\"otherClientConnectionFactory\"\n+                        use-topology-for-load-balancing=\"false\" />\n+\n+    <pooled-connection-factory name=\"hornetq-ra-local\"\n+                               transaction=\"local\"\n+                               user=\"alice\"\n+                               password=\"alicepassword\"\n+                               use-auto-recovery=\"${use.auto.recovery:true}\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"java:/JmsLocal\"\n+                               enable-amq1-prefix=\"true\"\n+                               use-topology-for-load-balancing=\"true\" />\n+\n+    <pooled-connection-factory name=\"activemq-ra-none\"\n+                               transaction=\"none\"\n+                               user=\"alice\"\n+                               password=\"alicepassword\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"java:/JmsNone\"\n+                               use-topology-for-load-balancing=\"false\" />\n+\n+    <pooled-connection-factory name=\"activemq-ra\"\n+                               transaction=\"${transaction:xa}\"\n+                               user=\"${user:alice}\"\n+                               password=\"${password:alicepassword}\"\n+                               min-pool-size=\"${min.pool.size:42}\"\n+                               max-pool-size=\"${max.pool.size:242}\"\n+                               managed-connection-pool=\"${managed.connection.pool:org.foo.bar.ConnectionPool}\"\n+                               enlistment-trace=\"${enlistment.trace:false}\"\n+                               initial-message-packet-size=\"${initial.message.packet.size:9876}\"\n+                               initial-connect-attempts=\"${initial.connect.attempts:5432}\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"${pooled-connection-factory.entries.entry:java:/JmsXA}\"\n+                               ha=\"${ha:true}\"\n+                               client-failure-check-period=\"${client.failure.check.period:12345}\"\n+                               connection-ttl=\"${connection.ttl:6789}\"\n+                               call-timeout=\"${call.timeout:123}\"\n+                               call-failover-timeout=\"${call.failover.timeout:456}\"\n+                               consumer-window-size=\"${consumer.window.size:456}\"\n+                               consumer-max-rate=\"${consumer.max.rate:789}\"\n+                               confirmation-window-size=\"${confirmation.window.size:-1}\"\n+                               producer-window-size=\"${producer.window.size:-1}\"\n+                               producer-max-rate=\"${producer.max.rate:1024}\"\n+                               protocol-manager-factory=\"com.foo.bar.ProtocolManagerFactory\"\n+                               compress-large-messages=\"${compress.large.messages:true}\"\n+                               cache-large-message-client=\"${cache.large.message.client:false}\"\n+                               min-large-message-size=\"${min.large.message.size:2048}\"\n+                               client-id=\"${client.id:myClientID}\"\n+                               dups-ok-batch-size=\"${dups.ok.batch.size:256}\"\n+                               transaction-batch-size=\"${transaction.batch.size:512}\"\n+                               block-on-acknowledge=\"${block.on.acknowledge:false}\"\n+                               block-on-non-durable-send=\"${block.on.non.durable.send:false}\"\n+                               block-on-durable-send=\"${block.on.durable.send:false}\"\n+                               auto-group=\"${auto.group:true}\"\n+                               pre-acknowledge=\"${pre.acknowledge:true}\"\n+                               retry-interval=\"${retry.interval:500}\"\n+                               retry-interval-multiplier=\"${retry.interval.multiplier:2.5}\"\n+                               max-retry-interval=\"${max.retry.interval:10000}\"\n+                               reconnect-attempts=\"${reconnect.attempts:2}\"\n+                               failover-on-initial-connection=\"${failover.on.initial.connection:true}\"\n+                               connection-load-balancing-policy-class-name=\"connection.load.balancing.policy.class\"\n+                               use-global-pools=\"${use.global.pools:true}\"\n+                               scheduled-thread-pool-max-size=\"${scheduled.thread.pool.max.size:24}\"\n+                               thread-pool-max-size=\"${thread.pool.max.size:48}\"\n+                               group-id=\"${group.id:myGroup}\"\n+                               deserialization-black-list=\"org.foo.Bar org.foo.Baz\"\n+                               deserialization-white-list=\"org.bar.Bar org.baz.Baz\"\n+                               statistics-enabled=\"${pcf.statistics-enabled:true}\">\n+        <inbound-config\n+            use-jndi=\"${use.jndi:false}\"\n+            jndi-params=\"${jndi.params:whatever}\"\n+            rebalance-connections=\"${inbound.rebalance-connections:true}\"\n+            use-local-tx=\"${use.local.tx:true}\"\n+            setup-attempts=\"${setup-attempts:123}\"\n+            setup-interval=\"${setup-interval:456}\" />\n+        <outbound-config\n+            allow-local-transactions=\"${allow.local.transactions:true}\" />\n+    </pooled-connection-factory>\n+\n+    <pooled-connection-factory name=\"pcf-with-credential-reference\"\n+                               entries=\"java:/JmsLocal2\"\n+                               connectors=\"in-vm-client\"\n+                               user=\"foo\">\n+        <credential-reference clear-text=\"passwordOut!\"/>\n+    </pooled-connection-factory>\n+\n+    <external-jms-queue name=\"testQueue\"\n+                   entries=\"${jms-queue.entry:queue/client-test}\"/>\n+    <external-jms-queue name=\"testQueue2\"\n+                   entries=\"java:/global/queue/test java:/global/queue/client-test2\"/>\n+    <external-jms-topic name=\"testTopic\"\n+                   entries=\"${jms-topic.entry:topic/client-test}\"/>\n+\n+    <server name=\"default\"\n+            persistence-enabled=\"${persistence.enabled:false}\"\n+            persist-id-cache=\"${persist.id.cache:false}\"\n+            persist-delivery-count-before-delivery=\"${persist.delivery.count.before.delivery:true}\"\n+            id-cache-size=\"${id.cache.size:102030}\"\n+            page-max-concurrent-io=\"${page.max.concurrent.io:10}\"\n+            scheduled-thread-pool-max-size=\"${messaging.scheduled.thread.pool.max.size:6}\"\n+            thread-pool-max-size=\"${messaging.thread.pool.max.size:5}\"\n+            wild-card-routing-enabled=\"${wild.card.routing.enabled:false}\"\n+            connection-ttl-override=\"${connection.ttl.override:5432}\"\n+            async-connection-execution-enabled=\"${async.connection.execution.enabled:false}\">\n+\n+        <incoming-interceptors>\n+            <class name=\"org.foo.incoming.myInterceptor\" module=\"org.foo\" />\n+            <class name=\"org.bar.incoming.myOtherInterceptor\" module=\"org.bar\" />\n+        </incoming-interceptors>\n+\n+        <outgoing-interceptors>\n+            <class name=\"org.foo.outgoing.myInterceptor\" module=\"org.foo\" />\n+            <class name=\"org.bar.outgoing.myOtherInterceptor\" module=\"org.bar\" />\n+        </outgoing-interceptors>\n+\n+        <security\n+            enabled=\"${security.enabled:false}\"\n+            elytron-domain=\"elytronDomain\"\n+            invalidation-interval=\"${security.invalidation.interval:1234}\"\n+            override-in-vm-security=\"${override.in-vm.security:false}\"/>\n+\n+        <cluster\n+            user=\"${messaging.cluster.user.name}\"\n+            password=\"${messaging.cluster.user.password}\"/>\n+\n+        <management\n+            address=\"${management.address:my.management.address}\"\n+            notification-address=\"${management.notification.address:my.management.notif.address}\"\n+            jmx-enabled=\"${jmx.management.enabled:false}\"\n+            jmx-domain=\"${jmx.domain:my.jmx.domain}\"/>\n+\n+        <journal\n+                type=\"${journal.type:NIO}\"\n+                buffer-timeout=\"${journal.buffer.timeout:1357}\"\n+                buffer-size=\"${journal.buffer.size:2468}\"\n+                sync-transactional=\"${journal.sync.transactional:false}\"\n+                sync-non-transactional=\"${journal.sync.non.transactional:true}\"\n+                log-write-rate=\"${log.journal.write.rate:true}\"\n+                file-size=\"${journal.file.size:102400}\"\n+                min-files=\"${journal.min.files:2}\"\n+                pool-files=\"${journal.pool.files:5}\"\n+                compact-percentage=\"${journal.compact.percentage:83}\"\n+                file-open-timeout=\"${journal.file.open.timeout:7}\"\n+                compact-min-files=\"${journal.compact.min.files:2}\"\n+                max-io=\"${journal.max.io:50}\"\n+                create-bindings-dir=\"${create.bindings.dir:false}\"\n+                create-journal-dir=\"${create.journal.dir:true}\"\n+                datasource=\"fooDS\"\n+                database=\"mysql\"\n+                jdbc-lock-expiration=\"${journal.jdbc.lock.expiration:891}\"\n+                jdbc-lock-renew-period=\"${journal.jdbc.lock.renew.period:892}\"\n+                jdbc-network-timeout=\"${journal.jdbc.network.timeout:4567}\"\n+                messages-table=\"${journal.message.table:MESSAGES}\"\n+                bindings-table=\"${journal.bindings.table:BINDINGS}\"\n+                jms-bindings-table=\"${journal.jms.bindings.table:JMS_BINDINGS}\"\n+                large-messages-table=\"${journal.large-messages.table:LARGE_MESSAGES}\"\n+                page-store-table=\"${journal.page-store.table:PAGE_STORE}\"\n+                node-manager-store-table=\"${journal.node-manager-store-table:NODE_MANAGER_STORE}\" />\n+\n+        <statistics\n+            enabled=\"${statistics.enabled:true}\"\n+            message-counter-sample-period=\"${message.counter.sample.period:7654}\"\n+            message-counter-max-day-history=\"${message.counter.max.day.history:23}\"/>\n+\n+        <transaction\n+            timeout=\"${transaction.timeout:4321}\"\n+            scan-period=\"${transaction.timeout.scan.period:5432}\"/>\n+\n+        <message-expiry\n+            scan-period=\"${message.expiry.scan.period:7654}\"\n+            thread-priority=\"${message.expiry.thread.priority:7}\"/>\n+\n+        <debug\n+            perf-blast-pages=\"${perf.blast.pages:70}\"\n+            run-sync-speed-test=\"${run.sync.speed.test:false}\"\n+            server-dump-interval=\"${server.dump.interval:8642}\"\n+            memory-warning-threshold=\"${memory.warning.threshold:1024}\"\n+            memory-measure-interval=\"${memory.measure.interval:2048}\"/>\n+\n+        <network-isolation\n+            network-check-list=\"127.0.0.1,[::1]\"\n+            network-check-nic=\"localhost\"\n+            network-check-period=\"5000\"\n+            network-check-ping-command=\"ping -c 1 -t %d %s\"\n+            network-check-ping6-command=\"ping6 -c 1 %2$s\"\n+            network-check-timeout=\"1000\"\n+            network-check-url-list=\"127.0.0.1\"/>\n+\n+        <critical-analyzer\n+            enabled=\"true\"\n+            check-period=\"0\"\n+            timeout=\"120000\"\n+            policy=\"LOG\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41aaa6cbd0860eba4a2615e4cb1e44e32790f50"}, "originalPosition": 243}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTg2MDA0OQ==", "bodyText": "@ehsavoie You resolved this comment but I don't see any change.", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r575860049", "createdAt": "2021-02-14T20:27:47Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_13_0.xml", "diffHunk": "@@ -0,0 +1,719 @@\n+<subsystem xmlns=\"urn:jboss:domain:messaging-activemq:13.0\">\n+    <global-client thread-pool-max-size=\"${global.client.thread-pool-max-size:32}\"\n+                   scheduled-thread-pool-max-size=\"${global.client.scheduled.thread-pool-max-size:54}\" />\n+\n+    <http-connector name=\"client-http\"\n+                    socket-binding=\"http\"\n+                    endpoint=\"http\"\n+                    server-name=\"=foo\">\n+        <param name=\"batch-delay\" value=\"${batch.delay:50}\"/>\n+    </http-connector>\n+\n+    <remote-connector name=\"client-netty-throughput\"\n+                      socket-binding=\"messaging-throughput\">\n+        <param name=\"batch-delay\" value=\"${batch.delay:50}\"/>\n+    </remote-connector>\n+\n+    <in-vm-connector name=\"in-vm-client\"\n+                     server-id=\"${my.server-id:0}\"/>\n+\n+    <connector name=\"myconnector-client\"\n+               factory-class=\"org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnectorFactory\">\n+        <param name=\"host\" value=\"192.168.1.2\"/>\n+        <param name=\"port\" value=\"5445\"/>\n+        <param name=\"key-store-path\" value=\"path/to/server.jks\"/>\n+        <param name=\"key-store-password\" value=\"${VAULT::server-key::key-store-password::sharedKey}\"/>\n+    </connector>\n+\n+    <jgroups-discovery-group name=\"client-discovery-group-2\"\n+                     jgroups-channel=\"ee\"\n+                     jgroups-cluster=\"activemq-cluster\"\n+                     refresh-timeout=\"${discovery.group.refresh.timeout:2345}\"\n+                     initial-wait-timeout=\"${discovery.group.initial.wait.timeout:2345}\"/>\n+\n+    <socket-discovery-group name=\"client-discovery-group-1\"\n+                     socket-binding=\"group-t-binding\"/>\n+\n+    <connection-factory name=\"InVmConnectionFactory\"\n+                        connectors=\"in-vm client\"\n+                        entries=\"${connection-factory.entries.entry:java:/ClientConnectionFactory}\"\n+                        enable-amq1-prefix=\"true\"\n+                        use-topology-for-load-balancing=\"true\" />\n+\n+    <connection-factory name=\"RemoteClientConnectionFactory\"\n+                        factory-type=\"XA_QUEUE\"\n+                        connectors=\"client-http client-netty-throughput\"\n+                        entries=\"RemoteClientConnectionFactory java:/global/jms/RemoteClientConnectionFactory\" />\n+\n+    <connection-factory name=\"otherClientConnectionFactory\"\n+                        discovery-group=\"client-discovery-group-1\"\n+                        ha=\"${ha:true}\"\n+                        entries=\"otherClientConnectionFactory\"\n+                        use-topology-for-load-balancing=\"false\" />\n+\n+    <pooled-connection-factory name=\"hornetq-ra-local\"\n+                               transaction=\"local\"\n+                               user=\"alice\"\n+                               password=\"alicepassword\"\n+                               use-auto-recovery=\"${use.auto.recovery:true}\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"java:/JmsLocal\"\n+                               enable-amq1-prefix=\"true\"\n+                               use-topology-for-load-balancing=\"true\" />\n+\n+    <pooled-connection-factory name=\"activemq-ra-none\"\n+                               transaction=\"none\"\n+                               user=\"alice\"\n+                               password=\"alicepassword\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"java:/JmsNone\"\n+                               use-topology-for-load-balancing=\"false\" />\n+\n+    <pooled-connection-factory name=\"activemq-ra\"\n+                               transaction=\"${transaction:xa}\"\n+                               user=\"${user:alice}\"\n+                               password=\"${password:alicepassword}\"\n+                               min-pool-size=\"${min.pool.size:42}\"\n+                               max-pool-size=\"${max.pool.size:242}\"\n+                               managed-connection-pool=\"${managed.connection.pool:org.foo.bar.ConnectionPool}\"\n+                               enlistment-trace=\"${enlistment.trace:false}\"\n+                               initial-message-packet-size=\"${initial.message.packet.size:9876}\"\n+                               initial-connect-attempts=\"${initial.connect.attempts:5432}\"\n+                               connectors=\"in-vm-client\"\n+                               entries=\"${pooled-connection-factory.entries.entry:java:/JmsXA}\"\n+                               ha=\"${ha:true}\"\n+                               client-failure-check-period=\"${client.failure.check.period:12345}\"\n+                               connection-ttl=\"${connection.ttl:6789}\"\n+                               call-timeout=\"${call.timeout:123}\"\n+                               call-failover-timeout=\"${call.failover.timeout:456}\"\n+                               consumer-window-size=\"${consumer.window.size:456}\"\n+                               consumer-max-rate=\"${consumer.max.rate:789}\"\n+                               confirmation-window-size=\"${confirmation.window.size:-1}\"\n+                               producer-window-size=\"${producer.window.size:-1}\"\n+                               producer-max-rate=\"${producer.max.rate:1024}\"\n+                               protocol-manager-factory=\"com.foo.bar.ProtocolManagerFactory\"\n+                               compress-large-messages=\"${compress.large.messages:true}\"\n+                               cache-large-message-client=\"${cache.large.message.client:false}\"\n+                               min-large-message-size=\"${min.large.message.size:2048}\"\n+                               client-id=\"${client.id:myClientID}\"\n+                               dups-ok-batch-size=\"${dups.ok.batch.size:256}\"\n+                               transaction-batch-size=\"${transaction.batch.size:512}\"\n+                               block-on-acknowledge=\"${block.on.acknowledge:false}\"\n+                               block-on-non-durable-send=\"${block.on.non.durable.send:false}\"\n+                               block-on-durable-send=\"${block.on.durable.send:false}\"\n+                               auto-group=\"${auto.group:true}\"\n+                               pre-acknowledge=\"${pre.acknowledge:true}\"\n+                               retry-interval=\"${retry.interval:500}\"\n+                               retry-interval-multiplier=\"${retry.interval.multiplier:2.5}\"\n+                               max-retry-interval=\"${max.retry.interval:10000}\"\n+                               reconnect-attempts=\"${reconnect.attempts:2}\"\n+                               failover-on-initial-connection=\"${failover.on.initial.connection:true}\"\n+                               connection-load-balancing-policy-class-name=\"connection.load.balancing.policy.class\"\n+                               use-global-pools=\"${use.global.pools:true}\"\n+                               scheduled-thread-pool-max-size=\"${scheduled.thread.pool.max.size:24}\"\n+                               thread-pool-max-size=\"${thread.pool.max.size:48}\"\n+                               group-id=\"${group.id:myGroup}\"\n+                               deserialization-black-list=\"org.foo.Bar org.foo.Baz\"\n+                               deserialization-white-list=\"org.bar.Bar org.baz.Baz\"\n+                               statistics-enabled=\"${pcf.statistics-enabled:true}\">\n+        <inbound-config\n+            use-jndi=\"${use.jndi:false}\"\n+            jndi-params=\"${jndi.params:whatever}\"\n+            rebalance-connections=\"${inbound.rebalance-connections:true}\"\n+            use-local-tx=\"${use.local.tx:true}\"\n+            setup-attempts=\"${setup-attempts:123}\"\n+            setup-interval=\"${setup-interval:456}\" />\n+        <outbound-config\n+            allow-local-transactions=\"${allow.local.transactions:true}\" />\n+    </pooled-connection-factory>\n+\n+    <pooled-connection-factory name=\"pcf-with-credential-reference\"\n+                               entries=\"java:/JmsLocal2\"\n+                               connectors=\"in-vm-client\"\n+                               user=\"foo\">\n+        <credential-reference clear-text=\"passwordOut!\"/>\n+    </pooled-connection-factory>\n+\n+    <external-jms-queue name=\"testQueue\"\n+                   entries=\"${jms-queue.entry:queue/client-test}\"/>\n+    <external-jms-queue name=\"testQueue2\"\n+                   entries=\"java:/global/queue/test java:/global/queue/client-test2\"/>\n+    <external-jms-topic name=\"testTopic\"\n+                   entries=\"${jms-topic.entry:topic/client-test}\"/>\n+\n+    <server name=\"default\"\n+            persistence-enabled=\"${persistence.enabled:false}\"\n+            persist-id-cache=\"${persist.id.cache:false}\"\n+            persist-delivery-count-before-delivery=\"${persist.delivery.count.before.delivery:true}\"\n+            id-cache-size=\"${id.cache.size:102030}\"\n+            page-max-concurrent-io=\"${page.max.concurrent.io:10}\"\n+            scheduled-thread-pool-max-size=\"${messaging.scheduled.thread.pool.max.size:6}\"\n+            thread-pool-max-size=\"${messaging.thread.pool.max.size:5}\"\n+            wild-card-routing-enabled=\"${wild.card.routing.enabled:false}\"\n+            connection-ttl-override=\"${connection.ttl.override:5432}\"\n+            async-connection-execution-enabled=\"${async.connection.execution.enabled:false}\">\n+\n+        <incoming-interceptors>\n+            <class name=\"org.foo.incoming.myInterceptor\" module=\"org.foo\" />\n+            <class name=\"org.bar.incoming.myOtherInterceptor\" module=\"org.bar\" />\n+        </incoming-interceptors>\n+\n+        <outgoing-interceptors>\n+            <class name=\"org.foo.outgoing.myInterceptor\" module=\"org.foo\" />\n+            <class name=\"org.bar.outgoing.myOtherInterceptor\" module=\"org.bar\" />\n+        </outgoing-interceptors>\n+\n+        <security\n+            enabled=\"${security.enabled:false}\"\n+            elytron-domain=\"elytronDomain\"\n+            invalidation-interval=\"${security.invalidation.interval:1234}\"\n+            override-in-vm-security=\"${override.in-vm.security:false}\"/>\n+\n+        <cluster\n+            user=\"${messaging.cluster.user.name}\"\n+            password=\"${messaging.cluster.user.password}\"/>\n+\n+        <management\n+            address=\"${management.address:my.management.address}\"\n+            notification-address=\"${management.notification.address:my.management.notif.address}\"\n+            jmx-enabled=\"${jmx.management.enabled:false}\"\n+            jmx-domain=\"${jmx.domain:my.jmx.domain}\"/>\n+\n+        <journal\n+                type=\"${journal.type:NIO}\"\n+                buffer-timeout=\"${journal.buffer.timeout:1357}\"\n+                buffer-size=\"${journal.buffer.size:2468}\"\n+                sync-transactional=\"${journal.sync.transactional:false}\"\n+                sync-non-transactional=\"${journal.sync.non.transactional:true}\"\n+                log-write-rate=\"${log.journal.write.rate:true}\"\n+                file-size=\"${journal.file.size:102400}\"\n+                min-files=\"${journal.min.files:2}\"\n+                pool-files=\"${journal.pool.files:5}\"\n+                compact-percentage=\"${journal.compact.percentage:83}\"\n+                file-open-timeout=\"${journal.file.open.timeout:7}\"\n+                compact-min-files=\"${journal.compact.min.files:2}\"\n+                max-io=\"${journal.max.io:50}\"\n+                create-bindings-dir=\"${create.bindings.dir:false}\"\n+                create-journal-dir=\"${create.journal.dir:true}\"\n+                datasource=\"fooDS\"\n+                database=\"mysql\"\n+                jdbc-lock-expiration=\"${journal.jdbc.lock.expiration:891}\"\n+                jdbc-lock-renew-period=\"${journal.jdbc.lock.renew.period:892}\"\n+                jdbc-network-timeout=\"${journal.jdbc.network.timeout:4567}\"\n+                messages-table=\"${journal.message.table:MESSAGES}\"\n+                bindings-table=\"${journal.bindings.table:BINDINGS}\"\n+                jms-bindings-table=\"${journal.jms.bindings.table:JMS_BINDINGS}\"\n+                large-messages-table=\"${journal.large-messages.table:LARGE_MESSAGES}\"\n+                page-store-table=\"${journal.page-store.table:PAGE_STORE}\"\n+                node-manager-store-table=\"${journal.node-manager-store-table:NODE_MANAGER_STORE}\" />\n+\n+        <statistics\n+            enabled=\"${statistics.enabled:true}\"\n+            message-counter-sample-period=\"${message.counter.sample.period:7654}\"\n+            message-counter-max-day-history=\"${message.counter.max.day.history:23}\"/>\n+\n+        <transaction\n+            timeout=\"${transaction.timeout:4321}\"\n+            scan-period=\"${transaction.timeout.scan.period:5432}\"/>\n+\n+        <message-expiry\n+            scan-period=\"${message.expiry.scan.period:7654}\"\n+            thread-priority=\"${message.expiry.thread.priority:7}\"/>\n+\n+        <debug\n+            perf-blast-pages=\"${perf.blast.pages:70}\"\n+            run-sync-speed-test=\"${run.sync.speed.test:false}\"\n+            server-dump-interval=\"${server.dump.interval:8642}\"\n+            memory-warning-threshold=\"${memory.warning.threshold:1024}\"\n+            memory-measure-interval=\"${memory.measure.interval:2048}\"/>\n+\n+        <network-isolation\n+            network-check-list=\"127.0.0.1,[::1]\"\n+            network-check-nic=\"localhost\"\n+            network-check-period=\"5000\"\n+            network-check-ping-command=\"ping -c 1 -t %d %s\"\n+            network-check-ping6-command=\"ping6 -c 1 %2$s\"\n+            network-check-timeout=\"1000\"\n+            network-check-url-list=\"127.0.0.1\"/>\n+\n+        <critical-analyzer\n+            enabled=\"true\"\n+            check-period=\"0\"\n+            timeout=\"120000\"\n+            policy=\"LOG\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcxNDQ2NA=="}, "originalCommit": {"oid": "a41aaa6cbd0860eba4a2615e4cb1e44e32790f50"}, "originalPosition": 243}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQxMjMxOnYy", "diffSide": "RIGHT", "path": "messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/MessagingTransformerRegistration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMzoxN1rOIl0DtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMzoxN1rOIl0DtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMTE0MA==", "bodyText": "These NETWORK_CHECK attributes were all in WF 22 and are handled in registerTransformers_WF_22.", "url": "https://github.com/wildfly/wildfly/pull/13745#discussion_r576521140", "createdAt": "2021-02-16T03:03:17Z", "author": {"login": "bstansberry"}, "path": "messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/MessagingTransformerRegistration.java", "diffHunk": "@@ -83,10 +84,27 @@ public void registerTransformers(SubsystemTransformerRegistration registration)\n         registerTransformers_EAP_7_1_0(builder.createBuilder(MessagingExtension.VERSION_3_0_0, MessagingExtension.VERSION_2_0_0));\n         registerTransformers_EAP_7_0_0(builder.createBuilder(MessagingExtension.VERSION_2_0_0, MessagingExtension.VERSION_1_0_0));\n \n-        builder.buildAndRegister(registration, new ModelVersion[] { MessagingExtension.VERSION_1_0_0, MessagingExtension.VERSION_2_0_0,\n+        builder.buildAndRegister(registration, new ModelVersion[]{MessagingExtension.VERSION_1_0_0, MessagingExtension.VERSION_2_0_0,\n             MessagingExtension.VERSION_3_0_0, MessagingExtension.VERSION_4_0_0, MessagingExtension.VERSION_5_0_0,\n             MessagingExtension.VERSION_6_0_0, MessagingExtension.VERSION_7_0_0, MessagingExtension.VERSION_8_0_0,\n-            MessagingExtension.VERSION_9_0_0, MessagingExtension.VERSION_10_0_0, MessagingExtension.VERSION_11_0_0, MessagingExtension.VERSION_12_0_0});\n+            MessagingExtension.VERSION_9_0_0, MessagingExtension.VERSION_10_0_0, MessagingExtension.VERSION_11_0_0,\n+            MessagingExtension.VERSION_12_0_0, MessagingExtension.VERSION_13_0_0});\n+    }\n+\n+    private static void registerTransformers_WF_23(ResourceTransformationDescriptionBuilder subsystem) {\n+        ResourceTransformationDescriptionBuilder server = subsystem.addChildResource(MessagingExtension.SERVER_PATH);\n+        rejectDefinedAttributeWithDefaultValue(server,\n+                ServerDefinition.NETWORK_CHECK_LIST,\n+                ServerDefinition.NETWORK_CHECK_NIC,\n+                ServerDefinition.NETWORK_CHECK_PERIOD,\n+                ServerDefinition.NETWORK_CHECK_PING6_COMMAND,\n+                ServerDefinition.NETWORK_CHECK_PING_COMMAND,\n+                ServerDefinition.NETWORK_CHECK_TIMEOUT,\n+                ServerDefinition.NETWORK_CHECK_URL_LIST,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732a7ea698e34353f694b99bae61e2f80c42a447"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4074, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}