{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDg3NTg2", "number": 12952, "title": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.", "bodyText": "Obtaining the socket-bindings when the tracer is being configured.\nAdding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042", "createdAt": "2020-01-31T09:26:39Z", "url": "https://github.com/wildfly/wildfly/pull/12952", "merged": true, "mergeCommit": {"oid": "37eae55871956de3cbc08126e562456aabe30dae"}, "closed": true, "closedAt": "2020-02-06T00:17:49Z", "author": {"login": "ehsavoie"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_s--bABqjI5OTY2NjQzMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBZmQQgFqTM1MzkwNDAzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf40d60f03aefe529fb5422604c9a91016f426fe", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/cf40d60f03aefe529fb5422604c9a91016f426fe", "committedDate": "2020-01-31T09:25:59Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}, "afterCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/cdb6e34b433efa6fc71da3052310b63c7c423a78", "committedDate": "2020-01-31T10:56:15Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTgyMzU5", "url": "https://github.com/wildfly/wildfly/pull/12952#pullrequestreview-351582359", "createdAt": "2020-01-31T15:29:10Z", "commit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNToyOToxMFrOFkO8Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0Nzo1MVrOFkPg6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUzNzg2Mw==", "bodyText": "Not a huge deal, but this should probably be final.", "url": "https://github.com/wildfly/wildfly/pull/12952#discussion_r373537863", "createdAt": "2020-01-31T15:29:10Z", "author": {"login": "jamezp"}, "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/resolver/JaegerTracerConfiguration.java", "diffHunk": "@@ -54,13 +54,15 @@\n     private final CodecConfiguration codecConfig;\n     private final SamplerConfiguration samplerConfig;\n     private final ReporterConfiguration reporterConfig;\n+    private Supplier<OutboundSocketBinding> outboundSocketBindingSupplier = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Mjg1Mg==", "bodyText": "I don't really know how this is used, but we might want to do something more like.\nfinal OutboundSocketBinding binding = outboundSocketBindingSupplier.get();\nif(outboundSocketBindingSupplier.get() != null) {\n    senderConfiguration.withAgentHost(binding.getUnresolvedDestinationAddress())\n            .withAgentPort(binding.getDestinationPort());\n}\n\nI don't know what the overhead of get() is in MSC, but it seems like a single get() would be better.", "url": "https://github.com/wildfly/wildfly/pull/12952#discussion_r373542852", "createdAt": "2020-01-31T15:38:58Z", "author": {"login": "jamezp"}, "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/resolver/JaegerTracerConfiguration.java", "diffHunk": "@@ -102,6 +100,11 @@ public String getName() {\n \n     @Override\n     public Tracer createTracer(String serviceName) {\n+        Configuration.SenderConfiguration senderConfiguration = reporterConfig.getSenderConfiguration();\n+        if(outboundSocketBindingSupplier.get() != null) {\n+            senderConfiguration.withAgentHost(outboundSocketBindingSupplier.get().getUnresolvedDestinationAddress())\n+                    .withAgentPort(outboundSocketBindingSupplier.get().getDestinationPort());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0NDUyMQ==", "bodyText": "This should be using TestSuiteEnvironment.getServerAddress(). That method already formats ipv6 addresses and also checks the two properties management.address and node0.", "url": "https://github.com/wildfly/wildfly/pull/12952#discussion_r373544521", "createdAt": "2020-01-31T15:42:26Z", "author": {"login": "jamezp"}, "path": "testsuite/integration/basic/src/test/java/org/wildfly/test/integration/microprofile/opentracing/SubsystemConfigurationTestCase.java", "diffHunk": "@@ -59,6 +65,14 @@\n @ServerSetup(SubsystemConfigurationTestCase.SetupTask.class)\n public class SubsystemConfigurationTestCase {\n \n+    private static final String OUTBOUND_BINDING = \"jaeger-sender\";\n+    private static final ModelNode OUTBOUND_BINDING_ADDRESS = PathAddress\n+            .pathAddress(SOCKET_BINDING_GROUP, \"standard-sockets\")\n+            .append(REMOTE_DESTINATION_OUTBOUND_SOCKET_BINDING, OUTBOUND_BINDING)\n+            .toModelNode();\n+    private static final int SENDER_PORT = 6832;\n+    private static final String SENDER_HOST = NetworkUtils.formatPossibleIpv6Address(System.getProperty(\"node0\", \"localhost\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0NzI0Mw==", "bodyText": "Should we not be throwing the error here?", "url": "https://github.com/wildfly/wildfly/pull/12952#discussion_r373547243", "createdAt": "2020-01-31T15:47:51Z", "author": {"login": "jamezp"}, "path": "testsuite/integration/basic/src/test/java/org/wildfly/test/integration/microprofile/opentracing/application/TracerConfigurationApplication.java", "diffHunk": "@@ -23,8 +27,37 @@\n         @GET\n         @Produces(\"text/plain\")\n         public String get() {\n+            if (JaegerTracer.class.isInstance(this.tracer)) {\n+                return tracer.toString() + getSenderConfiguration();\n+            }\n             return tracer.toString();\n         }\n \n+        private String getSenderConfiguration() {\n+            try {\n+                Field reporterField = this.tracer.getClass().getDeclaredField(\"reporter\");\n+                reporterField.setAccessible(true);\n+                Object reporter = reporterField.get(this.tracer);\n+                if (\"RemoteReporter\".equals(reporter.getClass().getSimpleName())) {\n+                    Field senderField = reporter.getClass().getDeclaredField(\"sender\");\n+                    senderField.setAccessible(true);\n+                    Object sender = senderField.get(reporter);\n+                    if (\"UdpSender\".equals(sender.getClass().getSimpleName())) {\n+                        Field transportField = sender.getClass().getDeclaredField(\"udpTransport\");\n+                        transportField.setAccessible(true);\n+                        Object transport = transportField.get(sender);\n+                        if (\"ThriftUdpTransport\".equals(transport.getClass().getSimpleName())) {\n+                            Field socketField = transport.getClass().getDeclaredField(\"socket\");\n+                            socketField.setAccessible(true);\n+                            DatagramSocket socket = (DatagramSocket) socketField.get(transport);\n+                            return \"sender-binding=\" + NetworkUtils.formatIPAddressForURI(socket.getInetAddress()) + \":\" + socket.getPort();\n+                        }\n+                    }\n+                }\n+            } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {\n+                ex.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdb6e34b433efa6fc71da3052310b63c7c423a78", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/cdb6e34b433efa6fc71da3052310b63c7c423a78", "committedDate": "2020-01-31T10:56:15Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}, "afterCommit": {"oid": "ce84996eaebfd84b72d0595d565def63ea139262", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/ce84996eaebfd84b72d0595d565def63ea139262", "committedDate": "2020-01-31T17:53:34Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjgzMzM4", "url": "https://github.com/wildfly/wildfly/pull/12952#pullrequestreview-351683338", "createdAt": "2020-01-31T18:12:21Z", "commit": {"oid": "ce84996eaebfd84b72d0595d565def63ea139262"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTA2NDMy", "url": "https://github.com/wildfly/wildfly/pull/12952#pullrequestreview-351906432", "createdAt": "2020-02-01T21:50:09Z", "commit": {"oid": "ce84996eaebfd84b72d0595d565def63ea139262"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce84996eaebfd84b72d0595d565def63ea139262", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/ce84996eaebfd84b72d0595d565def63ea139262", "committedDate": "2020-01-31T17:53:34Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}, "afterCommit": {"oid": "df5ed9643105924f733f0fd1c3fc089b0b7a4b4b", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/df5ed9643105924f733f0fd1c3fc089b0b7a4b4b", "committedDate": "2020-02-01T22:39:44Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae7ed119880e3766008ddc5ae5ddb7c1d97306cf", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/ae7ed119880e3766008ddc5ae5ddb7c1d97306cf", "committedDate": "2020-02-04T09:21:05Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df5ed9643105924f733f0fd1c3fc089b0b7a4b4b", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/df5ed9643105924f733f0fd1c3fc089b0b7a4b4b", "committedDate": "2020-02-01T22:39:44Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}, "afterCommit": {"oid": "ae7ed119880e3766008ddc5ae5ddb7c1d97306cf", "author": {"user": {"login": "ehsavoie", "name": "Emmanuel Hugonnet"}}, "url": "https://github.com/wildfly/wildfly/commit/ae7ed119880e3766008ddc5ae5ddb7c1d97306cf", "committedDate": "2020-02-04T09:21:05Z", "message": "[WFLY-13042]: Jaeger tracer sender-binding isn't configurable.\n\n* Obtaining the socket-bindings when the tracer is being configured.\n* Adding security constraint on the attribute definition.\n\nJira: https://issues.redhat.com/browse/WFLY-13042"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTA0MDMz", "url": "https://github.com/wildfly/wildfly/pull/12952#pullrequestreview-353904033", "createdAt": "2020-02-05T17:29:25Z", "commit": {"oid": "ae7ed119880e3766008ddc5ae5ddb7c1d97306cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3681, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}