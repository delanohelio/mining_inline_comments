{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMDk3OTU5", "number": 13410, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMDowNlrOER9PRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToyNjo0MFrOETTp1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjY0NTgyOnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMDowNlrOG2825g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMDowNlrOG2825g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3MzM4Mg==", "bodyText": "This is ok.", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460273382", "createdAt": "2020-07-24T20:30:06Z", "author": {"login": "emmartins"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {\n+        if (controlPoint == null || callable == null) {\n+            return callable;\n+        }\n+        try {\n+            RunResult result = controlPoint.forceBeginRequest();\n+            if (result == RunResult.REJECTED) {\n+                ROOT_LOGGER.rejectedDueToMaxRequests();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjY1MDE3OnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMTo0NlrOG285pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMTo0NlrOG285pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NDA4Nw==", "bodyText": "For exceptions in this line and below, request must be completed since forceBeginRequest succeeded.", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460274087", "createdAt": "2020-07-24T20:31:46Z", "author": {"login": "emmartins"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {\n+        if (controlPoint == null || callable == null) {\n+            return callable;\n+        }\n+        try {\n+            RunResult result = controlPoint.forceBeginRequest();\n+            if (result == RunResult.REJECTED) {\n+                ROOT_LOGGER.rejectedDueToMaxRequests();\n+            }\n+            final ControlledCallable controlledCallable = new ControlledCallable(callable, controlPoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjY1MDU0OnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMTo1OFrOG2856w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozMTo1OFrOG2856w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NDE1NQ==", "bodyText": "instead of adding a new method you should fix the existent method, any usage of it has the issue", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460274155", "createdAt": "2020-07-24T20:31:58Z", "author": {"login": "emmartins"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjY1NzQ5OnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozNDo1MFrOG28-QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozNDo1MFrOG28-QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NTI2NQ==", "bodyText": "this is not ok, for any exception the request should be completed, not just RejectedException", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460275265", "createdAt": "2020-07-24T20:34:50Z", "author": {"login": "emmartins"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "diffHunk": "@@ -58,17 +60,35 @@ public ManagedExecutorServiceImpl(String name, ManagedThreadFactoryImpl managedT\n \n     @Override\n     public <T> Future<T> submit(Callable<T> task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Callable<T> callable = doWrapOrThrowException(task, controlPoint);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjgwNDA1OnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToyNjo0MFrOG494Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo0MjozN1rOG5hThA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NzIxNQ==", "bodyText": "should be catching Exception here too", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r462387215", "createdAt": "2020-07-29T15:26:40Z", "author": {"login": "emmartins"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "diffHunk": "@@ -58,22 +59,46 @@ public ManagedExecutorServiceImpl(String name, ManagedThreadFactoryImpl managedT\n \n     @Override\n     public <T> Future<T> submit(Callable<T> task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Callable<T> callable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(callable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public <T> Future<T> submit(Runnable task, T result) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)), result);\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable), result);\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public Future<?> submit(Runnable task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public void execute(Runnable command) {\n-        super.execute(doIdentityWrap(doWrap(command, controlPoint)));\n+        final Runnable runnable = doWrap(command, controlPoint);\n+        try {\n+            super.execute(doIdentityWrap(runnable));\n+        } catch (RejectedExecutionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d405e05e2f59fab24925cef12ecd932296209d2"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NzY4NA==", "bodyText": "I am sorry I missed this.", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r462967684", "createdAt": "2020-07-30T12:42:37Z", "author": {"login": "istudens"}, "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "diffHunk": "@@ -58,22 +59,46 @@ public ManagedExecutorServiceImpl(String name, ManagedThreadFactoryImpl managedT\n \n     @Override\n     public <T> Future<T> submit(Callable<T> task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Callable<T> callable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(callable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public <T> Future<T> submit(Runnable task, T result) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)), result);\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable), result);\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public Future<?> submit(Runnable task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public void execute(Runnable command) {\n-        super.execute(doIdentityWrap(doWrap(command, controlPoint)));\n+        final Runnable runnable = doWrap(command, controlPoint);\n+        try {\n+            super.execute(doIdentityWrap(runnable));\n+        } catch (RejectedExecutionException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NzIxNQ=="}, "originalCommit": {"oid": "5d405e05e2f59fab24925cef12ecd932296209d2"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4205, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}