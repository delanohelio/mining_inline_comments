{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMDg4NjUw", "number": 13195, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjoyNzowOFrOD_6g4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjoyNzowOFrOD_6g4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzQ1NTcxOnYy", "diffSide": "RIGHT", "path": "ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjoyNzowOFrOGa3UxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjoxNjozMVrOGkzQ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgyMjU5Ng==", "bodyText": "LGTM. Some minor points: we can now remove throws DeploymentUnitProcessingException since the method already catches all exceptions. return; is now also redundant. final <class> componentClass can be combined with assignment.", "url": "https://github.com/wildfly/wildfly/pull/13195#discussion_r430822596", "createdAt": "2020-05-27T02:27:08Z", "author": {"login": "chengfang"}, "path": "ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java", "diffHunk": "@@ -82,13 +83,14 @@ private void processComponentConfig(final EEApplicationClasses applicationClasse\n         final Class<?> componentClass;\n         try {\n             componentClass = ClassLoadingUtils.loadClass(description.getComponentClassName(), deploymentUnit);\n+            handleAnnotations(applicationClasses, deploymentReflectionIndex, componentClass, description);\n         } catch (Throwable e) {\n             //just ignore the class for now.\n             //if it is an optional component this is ok, if it is not an optional component\n             //it will fail at configure time anyway\n+            EeLogger.ROOT_LOGGER.debugf(e,\"Ignoring failure to handle interceptor annotations for %s\", description.getComponentClassName());\n             return;\n         }\n-        handleAnnotations(applicationClasses, deploymentReflectionIndex, componentClass, description);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cea55bde74b62ceeaf678f8bad9cd53110f14a84"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0MTgxNw==", "bodyText": "Thanks; I cleaned those things up.", "url": "https://github.com/wildfly/wildfly/pull/13195#discussion_r441241817", "createdAt": "2020-06-17T02:16:31Z", "author": {"login": "bstansberry"}, "path": "ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java", "diffHunk": "@@ -82,13 +83,14 @@ private void processComponentConfig(final EEApplicationClasses applicationClasse\n         final Class<?> componentClass;\n         try {\n             componentClass = ClassLoadingUtils.loadClass(description.getComponentClassName(), deploymentUnit);\n+            handleAnnotations(applicationClasses, deploymentReflectionIndex, componentClass, description);\n         } catch (Throwable e) {\n             //just ignore the class for now.\n             //if it is an optional component this is ok, if it is not an optional component\n             //it will fail at configure time anyway\n+            EeLogger.ROOT_LOGGER.debugf(e,\"Ignoring failure to handle interceptor annotations for %s\", description.getComponentClassName());\n             return;\n         }\n-        handleAnnotations(applicationClasses, deploymentReflectionIndex, componentClass, description);\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgyMjU5Ng=="}, "originalCommit": {"oid": "cea55bde74b62ceeaf678f8bad9cd53110f14a84"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3886, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}