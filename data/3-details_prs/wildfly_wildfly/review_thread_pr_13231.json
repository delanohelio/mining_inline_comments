{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTE1MDMx", "number": 13231, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODozODo0NVrOEAoLcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowODoxNFrOEHnT3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDkzNzQ0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_high-availability/subsystem-support/mod_cluster_Subsystem.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODozODo0NVrOGcBySw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo1MTo0MVrOGhX2vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0MjU3MQ==", "bodyText": "s/preform/perform", "url": "https://github.com/wildfly/wildfly/pull/13231#discussion_r432042571", "createdAt": "2020-05-28T18:38:45Z", "author": {"login": "fjuma"}, "path": "docs/src/main/asciidoc/_high-availability/subsystem-support/mod_cluster_Subsystem.adoc", "diffHunk": "@@ -415,4 +415,19 @@ which corresponds the following in the xml configuration file:\n </subsystem>\n ----\n \n-include::SSL_Configuration_using_Elytron_Subsystem.adoc[leveloffset=+1]\n\\ No newline at end of file\n+include::SSL_Configuration_using_Elytron_Subsystem.adoc[leveloffset=+1]\n+\n+== Remote User Authentication with Elytron\n+\n+It is possible to accept a `REMOTE_USER` already authenticated by the Apache httpd server with Elytron via the AJP protocol.\n+This can be done by setting up Elytron to secure a WildFly deployment and specifying for the External HTTP mechanism to\n+be used. This is done by creating a security domain and specifying the External mechanism as one of the mechanism\n+configurations to be used by the `http-authentication-factory`:\n+\n+----\n+/subsystem=elytron/http-authentication-factory=web-tests:add(security-domain=example-domain, http-server-mechanism-factory=example-factory,\n+mechanism-configurations=[{mechanism-name=EXTERNAL}])\n+----\n+\n+Elytron will accept the externally authenticated user and use the specified security domain to preform role mapping to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42464a3c01a1c83b38e57bddcc4a7d6cec50b4cb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0NzAzOA==", "bodyText": "Fixed, thanks!", "url": "https://github.com/wildfly/wildfly/pull/13231#discussion_r437647038", "createdAt": "2020-06-09T18:51:41Z", "author": {"login": "ashley-abdelsayed98"}, "path": "docs/src/main/asciidoc/_high-availability/subsystem-support/mod_cluster_Subsystem.adoc", "diffHunk": "@@ -415,4 +415,19 @@ which corresponds the following in the xml configuration file:\n </subsystem>\n ----\n \n-include::SSL_Configuration_using_Elytron_Subsystem.adoc[leveloffset=+1]\n\\ No newline at end of file\n+include::SSL_Configuration_using_Elytron_Subsystem.adoc[leveloffset=+1]\n+\n+== Remote User Authentication with Elytron\n+\n+It is possible to accept a `REMOTE_USER` already authenticated by the Apache httpd server with Elytron via the AJP protocol.\n+This can be done by setting up Elytron to secure a WildFly deployment and specifying for the External HTTP mechanism to\n+be used. This is done by creating a security domain and specifying the External mechanism as one of the mechanism\n+configurations to be used by the `http-authentication-factory`:\n+\n+----\n+/subsystem=elytron/http-authentication-factory=web-tests:add(security-domain=example-domain, http-server-mechanism-factory=example-factory,\n+mechanism-configurations=[{mechanism-name=EXTERNAL}])\n+----\n+\n+Elytron will accept the externally authenticated user and use the specified security domain to preform role mapping to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0MjU3MQ=="}, "originalCommit": {"oid": "42464a3c01a1c83b38e57bddcc4a7d6cec50b4cb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDE5NTQ4OnYy", "diffSide": "RIGHT", "path": "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/security/external/UserHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowODoxNVrOGnFAcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo0NjoxM1rOGnGl2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyOTY4Mg==", "bodyText": "This is causing a compile error. The REMOTE_USER cannot be found.", "url": "https://github.com/wildfly/wildfly/pull/13231#discussion_r443629682", "createdAt": "2020-06-22T15:08:15Z", "author": {"login": "jamezp"}, "path": "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/security/external/UserHandler.java", "diffHunk": "@@ -20,6 +20,7 @@ public void handleRequest(HttpServerExchange exchange) throws Exception {\n         String user = exchange.getRequestHeaders().getFirst(\"User\");\n         if(user != null) {\n             exchange.putAttachment(ExternalAuthenticationMechanism.EXTERNAL_PRINCIPAL, user);\n+            exchange.putAttachment(HttpServerExchange.REMOTE_USER, user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5628a90e282515ab75645d89ad7ef785e26cd11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzODI5Nw==", "bodyText": "Ah yeah this error is because these tests depend on my changes from undertow-io/undertow#881 to be merged.", "url": "https://github.com/wildfly/wildfly/pull/13231#discussion_r443638297", "createdAt": "2020-06-22T15:20:54Z", "author": {"login": "ashley-abdelsayed98"}, "path": "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/security/external/UserHandler.java", "diffHunk": "@@ -20,6 +20,7 @@ public void handleRequest(HttpServerExchange exchange) throws Exception {\n         String user = exchange.getRequestHeaders().getFirst(\"User\");\n         if(user != null) {\n             exchange.putAttachment(ExternalAuthenticationMechanism.EXTERNAL_PRINCIPAL, user);\n+            exchange.putAttachment(HttpServerExchange.REMOTE_USER, user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyOTY4Mg=="}, "originalCommit": {"oid": "b5628a90e282515ab75645d89ad7ef785e26cd11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTY0Mg==", "bodyText": "Sorry I missed the core-upgrade-required already on here :)", "url": "https://github.com/wildfly/wildfly/pull/13231#discussion_r443655642", "createdAt": "2020-06-22T15:46:13Z", "author": {"login": "jamezp"}, "path": "testsuite/integration/web/src/test/java/org/jboss/as/test/integration/web/security/external/UserHandler.java", "diffHunk": "@@ -20,6 +20,7 @@ public void handleRequest(HttpServerExchange exchange) throws Exception {\n         String user = exchange.getRequestHeaders().getFirst(\"User\");\n         if(user != null) {\n             exchange.putAttachment(ExternalAuthenticationMechanism.EXTERNAL_PRINCIPAL, user);\n+            exchange.putAttachment(HttpServerExchange.REMOTE_USER, user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyOTY4Mg=="}, "originalCommit": {"oid": "b5628a90e282515ab75645d89ad7ef785e26cd11"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3899, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}