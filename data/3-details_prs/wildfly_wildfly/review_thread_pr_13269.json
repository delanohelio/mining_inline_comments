{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNTg5NjI0", "number": 13269, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMjowOFrOD6BGeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0NjozNFrOD72dYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTYyMDQwOnYy", "diffSide": "RIGHT", "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracerConfigurationConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMjowOFrOGRnhgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMjowOFrOGRnhgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEyNjUyOA==", "bodyText": "This can be any string, yes? IOW we are not exposing some smallrye feature here.\nIf it can be anything perhaps \"wildfly.smallrye.opentracing.mp.config\" to further reduce the chances of conflicting with something we don't know about?", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r421126528", "createdAt": "2020-05-06T22:22:08Z", "author": {"login": "bstansberry"}, "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracerConfigurationConstants.java", "diffHunk": "@@ -25,6 +25,8 @@\n     public static final String SMALLRYE_OPENTRACING_TRACER_CONFIGURATION = \"mp.opentracing.extensions.tracer.configuration\";\n     public static final String SMALLRYE_OPENTRACING_TRACER_MANAGED = \"mp.opentracing.extensions.tracer.managed\";\n \n+    public static final String MICROPROFILE_CONFIG_CONFIGURATION= \"smallrye.opentracing.mp.config\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ecaca21bfbba2fe30c7d21c220807b0086b7fa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjY4ODQwOnYy", "diffSide": "RIGHT", "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracerDynamicFeature.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxMTowNlrOGRxQqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxMTowNlrOGRxQqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4NjA1Ng==", "bodyText": "As TracerDynamicFeature is a CDI bean, why don't you simply @Inject Config?", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r421286056", "createdAt": "2020-05-07T07:11:06Z", "author": {"login": "jmesnil"}, "path": "microprofile/opentracing-smallrye/src/main/java/org/wildfly/microprofile/opentracing/smallrye/TracerDynamicFeature.java", "diffHunk": "@@ -37,6 +37,7 @@\n import javax.ws.rs.ext.Provider;\n import org.eclipse.microprofile.config.Config;\n import org.eclipse.microprofile.config.ConfigProvider;\n+import static org.wildfly.microprofile.opentracing.smallrye.TracerConfigurationConstants.MICROPROFILE_CONFIG_CONFIGURATION;\n \n @Provider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ecaca21bfbba2fe30c7d21c220807b0086b7fa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTEwMjczOnYy", "diffSide": "RIGHT", "path": "feature-pack/src/main/resources/modules/system/layers/base/org/wildfly/extension/microprofile/opentracing-smallrye/main/module.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMjo0MVrOGSI-Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMjo0MVrOGSI-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDUzOQ==", "bodyText": "I believe this is no longer needed.", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r421674539", "createdAt": "2020-05-07T17:32:41Z", "author": {"login": "bstansberry"}, "path": "feature-pack/src/main/resources/modules/system/layers/base/org/wildfly/extension/microprofile/opentracing-smallrye/main/module.xml", "diffHunk": "@@ -40,10 +40,12 @@\n         <module name=\"org.wildfly.security.elytron\"/>\n \n         <module name=\"javax.enterprise.api\" />\n+        <module name=\"org.eclipse.microprofile.config.api\"/>\n         <module name=\"io.opentracing.opentracing-api\"/>\n         <module name=\"io.opentracing.opentracing-noop\"/>\n         <module name=\"io.opentracing.opentracing-util\"/>\n         <module name=\"org.wildfly.microprofile.opentracing-smallrye\"/>\n+        <module name=\"org.wildfly.extension.microprofile.config-smallrye\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba6454c8df784e4747ee390be48f0e016d982b48"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg0MTA0OnYy", "diffSide": "RIGHT", "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/SubsystemDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0MzoyNVrOGUbgag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0MzoyNVrOGUbgag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3NTM3MA==", "bodyText": "This should be private IMO.", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r424075370", "createdAt": "2020-05-12T22:43:25Z", "author": {"login": "jamezp"}, "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/SubsystemDefinition.java", "diffHunk": "@@ -49,10 +49,11 @@\n \n     private static final String OPENTRACING_CAPABILITY_NAME = \"org.wildfly.microprofile.opentracing\";\n     public static final String DEFAULT_TRACER_CAPABILITY_NAME = \"org.wildfly.microprofile.opentracing.default-tracer\";\n+    public static final String MICROPROFILE_CONFIG_CAPABILITY_NAME = \"org.wildfly.microprofile.config\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21217126e1942b7aecf0571167fbbc3c402690e1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg0MjEzOnYy", "diffSide": "RIGHT", "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/TracingDeploymentProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0NDowMFrOGUbhGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0NDowMFrOGUbhGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3NTU0Ng==", "bodyText": "Not really a bit deal, but these changes could be reverted.", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r424075546", "createdAt": "2020-05-12T22:44:00Z", "author": {"login": "jamezp"}, "path": "microprofile/opentracing-extension/src/main/java/org/wildfly/extension/microprofile/opentracing/TracingDeploymentProcessor.java", "diffHunk": "@@ -46,6 +46,10 @@\n import org.jboss.as.weld.WeldCapability;\n import org.jboss.metadata.javaee.spec.ParamValueMetaData;\n import org.jboss.metadata.web.jboss.JBossWebMetaData;\n+\n+import org.wildfly.microprofile.opentracing.smallrye.TracingCDIExtension;\n+import org.wildfly.microprofile.opentracing.smallrye.TracingLogger;\n+import org.wildfly.microprofile.opentracing.smallrye.WildFlyTracerFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21217126e1942b7aecf0571167fbbc3c402690e1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg0ODMyOnYy", "diffSide": "RIGHT", "path": "testsuite/integration/basic/src/test/java/org/wildfly/test/integration/microprofile/opentracing/ConfigHttpPathTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0NjozNFrOGUbk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo0NjozNFrOGUbk4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3NjUxMw==", "bodyText": "This should probably be removed.", "url": "https://github.com/wildfly/wildfly/pull/13269#discussion_r424076513", "createdAt": "2020-05-12T22:46:34Z", "author": {"login": "jamezp"}, "path": "testsuite/integration/basic/src/test/java/org/wildfly/test/integration/microprofile/opentracing/ConfigHttpPathTask.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2018, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.wildfly.test.integration.microprofile.opentracing;\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.ADD;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.PROPERTIES;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.REMOVE;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;\n+\n+import java.io.IOException;\n+import java.util.LinkedList;\n+\n+import org.jboss.as.arquillian.api.ServerSetupTask;\n+import org.jboss.as.arquillian.container.ManagementClient;\n+import org.jboss.as.controller.client.ModelControllerClient;\n+import org.jboss.dmr.ModelNode;\n+\n+/**\n+ * Add a config-source with a property class in the microprofile-config-smallrye subsystem.\n+ * @author Emmanuel Hugonnet (c) 2020 Red Hat, Inc.\n+ */\n+public class ConfigHttpPathTask implements ServerSetupTask {\n+\n+    public static final String MICROPROFILE_SUBSYSTEM_NAME = \"microprofile-config-smallrye\";\n+    public static final String CONFIG_SOURCE = \"config-source\";\n+    public static final String MP_OPENTRACING_SKIP_PATTERN = \"mp.opentracing.server.skip-pattern\";\n+    public static final String MP_OPENTRACING_SERVER_OPERATION_NAME_PROVIDER = \"mp.opentracing.server.operation-name-provider\";\n+    public static final String MP_OPENTRACING_CONFIG = \"mpOpentracingConfig\";\n+\n+    // Contains list of created config sources --- this is used during tearDown\n+    private final LinkedList<String> registeredConfigSources = new LinkedList<>();\n+    @Override\n+    public void setup(ManagementClient managementClient, String containerId) throws Exception {\n+        ModelControllerClient mgmtCli = managementClient.getControllerClient();\n+//        addPropertiesConfigSource(mgmtCli, MP_OPENTRACING_CONFIG, MP_OPENTRACING_SKIP_PATTERN, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21217126e1942b7aecf0571167fbbc3c402690e1"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}