{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDI0ODYw", "number": 13395, "title": " WFLY-13643 Test Case of WFLY-13592 \"jndi-view doen't show values for EJB in java:jboss/exported\"", "bodyText": "Issue: https://issues.redhat.com/browse/WFLY-13643\nThis issue is a test case for https://issues.redhat.com/browse/WFLY-13592.", "createdAt": "2020-07-03T12:08:56Z", "url": "https://github.com/wildfly/wildfly/pull/13395", "merged": true, "mergeCommit": {"oid": "995fabb48b55233d87b9ffc66bb04597380bfa9b"}, "closed": true, "closedAt": "2020-07-07T01:43:34Z", "author": {"login": "parsharma"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcx_6ISgFqTQ0MjY5MjcxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcybxGpAFqTQ0MzUwNzE5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjkyNzEx", "url": "https://github.com/wildfly/wildfly/pull/13395#pullrequestreview-442692711", "createdAt": "2020-07-05T17:09:59Z", "commit": {"oid": "4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzowOTo1OVrOGtDoyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzoxNDo0OFrOGtDqTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5ODY5Nw==", "bodyText": "This test shouldn't subclass JcaMgmtBase just to pick up some utility code. In a later comment I'll explain how to avoid that.", "url": "https://github.com/wildfly/wildfly/pull/13395#discussion_r449898697", "createdAt": "2020-07-05T17:09:59Z", "author": {"login": "bstansberry"}, "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/naming/remote/ejb/RemoteNamingEjbTestCase.java", "diffHunk": "@@ -55,13 +59,15 @@\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n+import org.jboss.as.test.integration.jca.JcaMgmtBase;\n+\n \n /**\n  * @author John Bailey, Ondrej Chaloupka\n  */\n @RunWith(Arquillian.class)\n @RunAsClient\n-public class RemoteNamingEjbTestCase {\n+public class RemoteNamingEjbTestCase extends JcaMgmtBase{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5ODc4OQ==", "bodyText": "Please have a look at org.jboss.as.controller.operations.common.Util.createEmptyOperation.", "url": "https://github.com/wildfly/wildfly/pull/13395#discussion_r449898789", "createdAt": "2020-07-05T17:11:01Z", "author": {"login": "bstansberry"}, "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/naming/remote/ejb/RemoteNamingEjbTestCase.java", "diffHunk": "@@ -264,4 +282,17 @@ public void testSystemPropertyConfig() throws Exception {\n             Thread.currentThread().setContextClassLoader(current);\n         }\n     }\n+\n+    @Test\n+    public void testValue() throws Exception {\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTA4NQ==", "bodyText": "In the end this is a call to AbstractMgmtTestBase.executeOperation(operation, true) which is just a call to ManagementOperations.executeOperation(getModelControllerClient(), operation). So this is just ManagementOperations.executeOperation(managementClient.getControllerClient(), operation), which can be called directly.", "url": "https://github.com/wildfly/wildfly/pull/13395#discussion_r449899085", "createdAt": "2020-07-05T17:14:48Z", "author": {"login": "bstansberry"}, "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/naming/remote/ejb/RemoteNamingEjbTestCase.java", "diffHunk": "@@ -264,4 +282,17 @@ public void testSystemPropertyConfig() throws Exception {\n             Thread.currentThread().setContextClassLoader(current);\n         }\n     }\n+\n+    @Test\n+    public void testValue() throws Exception {\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);\n+        ModelNode res = executeOperation(operation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b89973007a771e93dd4e97a216f0f4261712369", "author": {"user": {"login": "parsharma", "name": "Parul Sharma"}}, "url": "https://github.com/wildfly/wildfly/commit/4b89973007a771e93dd4e97a216f0f4261712369", "committedDate": "2020-07-06T06:29:25Z", "message": " WFLY-13643 Test Case of WFLY-13592"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4", "author": {"user": {"login": "parsharma", "name": "Parul Sharma"}}, "url": "https://github.com/wildfly/wildfly/commit/4e5a94a9b626fb07c457c6dcd11aea33dd2e3cd4", "committedDate": "2020-07-03T12:04:15Z", "message": " WFLY-13643 Test Case of WFLY-13592"}, "afterCommit": {"oid": "4b89973007a771e93dd4e97a216f0f4261712369", "author": {"user": {"login": "parsharma", "name": "Parul Sharma"}}, "url": "https://github.com/wildfly/wildfly/commit/4b89973007a771e93dd4e97a216f0f4261712369", "committedDate": "2020-07-06T06:29:25Z", "message": " WFLY-13643 Test Case of WFLY-13592"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTA3MTk1", "url": "https://github.com/wildfly/wildfly/pull/13395#pullrequestreview-443507195", "createdAt": "2020-07-07T01:43:22Z", "commit": {"oid": "4b89973007a771e93dd4e97a216f0f4261712369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4016, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}