{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MjIyMDYw", "number": 13609, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOTowMDo1OFrOEpmPwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOTowMDo1OFrOEpmPwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDUzNjk3OnYy", "diffSide": "RIGHT", "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ThreadPoolServiceConfigurator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOTowMDo1OFrOHbXQ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOTowODozOFrOHbXfog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1NDc1Ng==", "bodyText": "The read-resource-description text description of these 2 attributes should mention that this multiplication occurs. (I think continuing to share the text across pool types is ok; the text can mention that the behavior is only for a non-blocking pool.)\nI don't think this point should block this change getting in for WF 21 if that is wanted; it can come later.", "url": "https://github.com/wildfly/wildfly/pull/13609#discussion_r498454756", "createdAt": "2020-10-01T19:00:58Z", "author": {"login": "bstansberry"}, "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ThreadPoolServiceConfigurator.java", "diffHunk": "@@ -61,7 +61,9 @@ public ServiceConfigurator configure(OperationContext context, ModelNode model)\n         long keepAliveTime = this.definition.getKeepAliveTime().resolveModelAttribute(context, model).asLong();\n         boolean nonBlocking = this.definition.isNonBlocking();\n         if (this.definition == ThreadPoolResourceDefinition.NON_BLOCKING) {\n-            maxThreads *= ProcessorInfo.availableProcessors();\n+            int availableProcessors = ProcessorInfo.availableProcessors();\n+            minThreads *= availableProcessors;\n+            maxThreads *= availableProcessors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad80eb151beb69273748069ae0583ec342904142"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1ODUzMA==", "bodyText": "That's valid.  I've opened https://issues.redhat.com/browse/WFLY-13927 to track this.", "url": "https://github.com/wildfly/wildfly/pull/13609#discussion_r498458530", "createdAt": "2020-10-01T19:08:38Z", "author": {"login": "pferraro"}, "path": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ThreadPoolServiceConfigurator.java", "diffHunk": "@@ -61,7 +61,9 @@ public ServiceConfigurator configure(OperationContext context, ModelNode model)\n         long keepAliveTime = this.definition.getKeepAliveTime().resolveModelAttribute(context, model).asLong();\n         boolean nonBlocking = this.definition.isNonBlocking();\n         if (this.definition == ThreadPoolResourceDefinition.NON_BLOCKING) {\n-            maxThreads *= ProcessorInfo.availableProcessors();\n+            int availableProcessors = ProcessorInfo.availableProcessors();\n+            minThreads *= availableProcessors;\n+            maxThreads *= availableProcessors;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1NDc1Ng=="}, "originalCommit": {"oid": "ad80eb151beb69273748069ae0583ec342904142"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4118, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}