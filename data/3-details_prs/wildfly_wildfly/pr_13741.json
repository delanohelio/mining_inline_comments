{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjM5NzM5", "number": 13741, "title": "WFLY-14118 Distributed session manager can throw UnsupportedOperationException", "bodyText": "\u2026  on concurrent calls to HttpServletRequest.getSession(...) for a given session\nhttps://issues.redhat.com/browse/WFLY-14118", "createdAt": "2020-11-25T18:58:35Z", "url": "https://github.com/wildfly/wildfly/pull/13741", "merged": true, "mergeCommit": {"oid": "2e604ef506b5ed230551420f7bd678e2a1f4912d"}, "closed": true, "closedAt": "2020-11-26T00:23:33Z", "author": {"login": "pferraro"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgDEcjgH2gAyNTI3NjM5NzM5OjEzNWU5ZjdiY2E4ZTdlZDEwM2NhZjI3NDk5YWZkN2Y1YzFiNzU3OGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgHQXCgFqTUzODkwOTMzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "135e9f7bca8e7ed103caf27499afd7f5c1b7578e", "author": {"user": {"login": "pferraro", "name": "Paul Ferraro"}}, "url": "https://github.com/wildfly/wildfly/commit/135e9f7bca8e7ed103caf27499afd7f5c1b7578e", "committedDate": "2020-11-25T18:57:23Z", "message": "WFLY-14118 Distributed session manager can throw UnsupportedOperationException on concurrent calls to HttpServletRequest.getSession(...) for a given session"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4OTA5MzM1", "url": "https://github.com/wildfly/wildfly/pull/13741#pullrequestreview-538909335", "createdAt": "2020-11-25T23:50:00Z", "commit": {"oid": "135e9f7bca8e7ed103caf27499afd7f5c1b7578e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMzo1MDowMFrOH6HNoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMzo1MDowMFrOH6HNoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY5NzYzMg==", "bodyText": "Perhaps s/new Integer(0)/Integer.valueOf(0)/g ?", "url": "https://github.com/wildfly/wildfly/pull/13741#discussion_r530697632", "createdAt": "2020-11-25T23:50:00Z", "author": {"login": "bstansberry"}, "path": "clustering/ee/cache/src/main/java/org/wildfly/clustering/ee/cache/ConcurrentManager.java", "diffHunk": "@@ -39,43 +40,47 @@\n  */\n public class ConcurrentManager<K, V> implements Manager<K, V> {\n \n-    private final Map<K, Map.Entry<Integer, V>> objects = new ConcurrentHashMap<>();\n-    private final BiFunction<K, Map.Entry<Integer, V>, Map.Entry<Integer, V>> addFunction = new BiFunction<K, Map.Entry<Integer, V>, Map.Entry<Integer, V>>() {\n+    private final Map<K, Map.Entry<Integer, VolatileReference<V>>> objects = new ConcurrentHashMap<>();\n+    private final BiFunction<K, Map.Entry<Integer, VolatileReference<V>>, Map.Entry<Integer, VolatileReference<V>>> addFunction = new BiFunction<K, Map.Entry<Integer, VolatileReference<V>>, Map.Entry<Integer, VolatileReference<V>>>() {\n         @Override\n-        public Map.Entry<Integer, V> apply(K id, Map.Entry<Integer, V> entry) {\n-            return entry != null ? new AbstractMap.SimpleImmutableEntry<>(Integer.valueOf(entry.getKey().intValue() + 1), entry.getValue()) : new VolatileEntry<>(new Integer(0));\n+        public Map.Entry<Integer, VolatileReference<V>> apply(K id, Map.Entry<Integer, VolatileReference<V>> entry) {\n+            Integer count = (entry != null) ? Integer.valueOf(entry.getKey().intValue() + 1) : new Integer(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "135e9f7bca8e7ed103caf27499afd7f5c1b7578e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}