{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTQ3Mzk3", "number": 13697, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTo1NjowMFrOE3Y81g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDoyNToxOVrOE3ufmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTE1OTI2OnYy", "diffSide": "RIGHT", "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTo1NjowMFrOHwtUvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNTozNzozOFrOHw-37w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzNjI4Ng==", "bodyText": "This will always return false as the keys are dependencyModule.getName().", "url": "https://github.com/wildfly/wildfly/pull/13697#discussion_r520836286", "createdAt": "2020-11-10T19:56:00Z", "author": {"login": "bstansberry"}, "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java", "diffHunk": "@@ -325,9 +328,13 @@ private Index tryLoadIndex(URL indexUrl) {\n      * @param dependencyModule\n      * @return the map of exported resources\n      */\n-    private Map<URL, URL> findExportedResources(Module dependencyModule) {\n+    private Map<URL, URL> findExportedResources(Module dependencyModule, Map<String, Map<URL, URL>> exportedResourcesCache) {\n+        if (exportedResourcesCache.containsKey(dependencyModule)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f4df73b14e357e710757a4e686bab597142862"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyMzgyMw==", "bodyText": "Thanks for spotting this @bstansberry! Should be fixed now.", "url": "https://github.com/wildfly/wildfly/pull/13697#discussion_r521123823", "createdAt": "2020-11-11T05:37:38Z", "author": {"login": "manovotn"}, "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java", "diffHunk": "@@ -325,9 +328,13 @@ private Index tryLoadIndex(URL indexUrl) {\n      * @param dependencyModule\n      * @return the map of exported resources\n      */\n-    private Map<URL, URL> findExportedResources(Module dependencyModule) {\n+    private Map<URL, URL> findExportedResources(Module dependencyModule, Map<String, Map<URL, URL>> exportedResourcesCache) {\n+        if (exportedResourcesCache.containsKey(dependencyModule)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzNjI4Ng=="}, "originalCommit": {"oid": "25f4df73b14e357e710757a4e686bab597142862"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODY4ODkxOnYy", "diffSide": "RIGHT", "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/BeanDeploymentArchiveImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDoyNToxOVrOHxPVWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMzoyMDozNVrOHxh2Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5MzQ5OA==", "bodyText": "This is the only part where I am not certain - the comparison takes the name of ModuleDependencySpec and that of a Module. But I assume that if their identifiers were comparable and those were replaced by String names, then the names should be comparable as well. Feel free to prove me wrong.", "url": "https://github.com/wildfly/wildfly/pull/13697#discussion_r521393498", "createdAt": "2020-11-11T14:25:19Z", "author": {"login": "manovotn"}, "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/BeanDeploymentArchiveImpl.java", "diffHunk": "@@ -239,11 +239,12 @@ public boolean isAccessible(BeanDeploymentArchive target) {\n             return true;\n         }\n \n+        final String thatIdentifier = that.getModule().getName();\n         // basic check whether the module is our dependency\n         for (DependencySpec dependency : module.getDependencies()) {\n             if (dependency instanceof ModuleDependencySpec) {\n                 ModuleDependencySpec moduleDependency = (ModuleDependencySpec) dependency;\n-                if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) {\n+                if (moduleDependency.getName().equals(thatIdentifier)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a7739a7328f7770a433f65a4563fca346b06bb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5Njg0Mw==", "bodyText": "@manovotn LGTM.  I'll just assume the existing equals is valid. If not, that's not the concern of this PR. ;)\nRe the change in both classes getIdentifier() is deprecated with javadoc saying to use getName(). And internally both implement getIdentfier() as ModuleIdentifier.fromString(name). So this change is valid according to both the implementation and the javadoc.", "url": "https://github.com/wildfly/wildfly/pull/13697#discussion_r521696843", "createdAt": "2020-11-11T23:20:35Z", "author": {"login": "bstansberry"}, "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/BeanDeploymentArchiveImpl.java", "diffHunk": "@@ -239,11 +239,12 @@ public boolean isAccessible(BeanDeploymentArchive target) {\n             return true;\n         }\n \n+        final String thatIdentifier = that.getModule().getName();\n         // basic check whether the module is our dependency\n         for (DependencySpec dependency : module.getDependencies()) {\n             if (dependency instanceof ModuleDependencySpec) {\n                 ModuleDependencySpec moduleDependency = (ModuleDependencySpec) dependency;\n-                if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) {\n+                if (moduleDependency.getName().equals(thatIdentifier)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5MzQ5OA=="}, "originalCommit": {"oid": "02a7739a7328f7770a433f65a4563fca346b06bb"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4151, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}