{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTQ3NDIy", "number": 12889, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzoyNzozNlrOFRuUGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzozNToxNVrOFRuZqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MTI4OTIyOnYy", "diffSide": "LEFT", "path": "undertow/src/main/java/org/wildfly/extension/undertow/HttpListenerService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzoyNzozNlrOIYUCVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzoyNzozNlrOIYUCVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM2NTAxMw==", "bodyText": "This comment and annotation should not have been removed.", "url": "https://github.com/wildfly/wildfly/pull/12889#discussion_r562365013", "createdAt": "2021-01-22T03:27:36Z", "author": {"login": "bstansberry"}, "path": "undertow/src/main/java/org/wildfly/extension/undertow/HttpListenerService.java", "diffHunk": "@@ -54,24 +55,21 @@\n /**\n  * @author Stuart Douglas\n  * @author Tomaz Cerar\n+ * @author <a href=\"mailto:ropalka@redhat.com\">Richard Opalka</a>\n  */\n public class HttpListenerService extends ListenerService {\n     private volatile AcceptingChannel<StreamConnection> server;\n \n     private final ChannelUpgradeHandler httpUpgradeHandler = new ChannelUpgradeHandler();\n-    protected final InjectedValue<ListenerRegistry> httpListenerRegistry = new InjectedValue<>();\n-    /**\n-     * @deprecated Replaced by HTTP_UPGRADE_REGISTRY.getCapabilityServiceName()\n-     */\n-    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78a20e5c897cfcea4b78619017b87c6bfdfdb86"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MTMwMzQ1OnYy", "diffSide": "RIGHT", "path": "undertow/src/main/java/org/wildfly/extension/undertow/Host.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzozNToxNVrOIYUKSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwMzo0MjoyMFrOIYUSEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM2NzA0OQ==", "bodyText": "@jasondlee fyi ^^^ is going to result in conflicts", "url": "https://github.com/wildfly/wildfly/pull/12889#discussion_r562367049", "createdAt": "2021-01-22T03:35:15Z", "author": {"login": "bstansberry"}, "path": "undertow/src/main/java/org/wildfly/extension/undertow/Host.java", "diffHunk": "@@ -132,13 +139,13 @@ private String getDeployedContextPath(DeploymentInfo deploymentInfo) {\n \n     @Override\n     public void start(StartContext context) throws StartException {\n-        suspendControllerInjectedValue.getValue().registerActivity(suspendListener);\n-        if(suspendControllerInjectedValue.getValue().getState() == SuspendController.State.RUNNING) {\n+        suspendController.get().registerActivity(suspendListener);\n+        if(suspendController.get().getState() == SuspendController.State.RUNNING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78a20e5c897cfcea4b78619017b87c6bfdfdb86"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM2OTA0MA==", "bodyText": "Noted. I'll keep an eye out so I can merge and resolve as soon as I can.", "url": "https://github.com/wildfly/wildfly/pull/12889#discussion_r562369040", "createdAt": "2021-01-22T03:42:20Z", "author": {"login": "jasondlee"}, "path": "undertow/src/main/java/org/wildfly/extension/undertow/Host.java", "diffHunk": "@@ -132,13 +139,13 @@ private String getDeployedContextPath(DeploymentInfo deploymentInfo) {\n \n     @Override\n     public void start(StartContext context) throws StartException {\n-        suspendControllerInjectedValue.getValue().registerActivity(suspendListener);\n-        if(suspendControllerInjectedValue.getValue().getState() == SuspendController.State.RUNNING) {\n+        suspendController.get().registerActivity(suspendListener);\n+        if(suspendController.get().getState() == SuspendController.State.RUNNING) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM2NzA0OQ=="}, "originalCommit": {"oid": "c78a20e5c897cfcea4b78619017b87c6bfdfdb86"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3999, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}