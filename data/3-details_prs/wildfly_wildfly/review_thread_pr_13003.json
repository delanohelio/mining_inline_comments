{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjU1ODky", "number": 13003, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoyMTowMlrODgsN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMToxODoyNFrODjx4mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjA1NDg3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoyMTowM1rOFrCCjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTowMDoxOFrOFrFrRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NjUxMA==", "bodyText": "propertied -> properties", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380666510", "createdAt": "2020-02-18T13:21:03Z", "author": {"login": "tterem"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "diffHunk": "@@ -44,43 +44,29 @@ This MicroProfile specification introduces the following interceptor bindings:\n * `@Bulkhead`\n * `@Asynchronous`\n \n-For usage please refer to MicroProfile Fault Tolerance 2.0 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.0/microprofile-fault-tolerance-spec.html[specification].\n+For usage please refer to MicroProfile Fault Tolerance 2.1 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html[specification].\n \n-== Hystrix Configuration\n+== Configuration\n \n-MicroProfile Fault Tolerance extension is implemented by the SmallRye Fault Tolerance project which uses https://github.com/Netflix/Hystrix[Hystrix] as an underlying library.\n+Apart from configuration propertied defined by the specification, the SmallRye implementation provides the following", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNjA4Nw==", "bodyText": "Fixed.", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380726087", "createdAt": "2020-02-18T15:00:18Z", "author": {"login": "rhusar"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "diffHunk": "@@ -44,43 +44,29 @@ This MicroProfile specification introduces the following interceptor bindings:\n * `@Bulkhead`\n * `@Asynchronous`\n \n-For usage please refer to MicroProfile Fault Tolerance 2.0 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.0/microprofile-fault-tolerance-spec.html[specification].\n+For usage please refer to MicroProfile Fault Tolerance 2.1 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html[specification].\n \n-== Hystrix Configuration\n+== Configuration\n \n-MicroProfile Fault Tolerance extension is implemented by the SmallRye Fault Tolerance project which uses https://github.com/Netflix/Hystrix[Hystrix] as an underlying library.\n+Apart from configuration propertied defined by the specification, the SmallRye implementation provides the following", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NjUxMA=="}, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjA3MjI4OnYy", "diffSide": "RIGHT", "path": "microprofile/fault-tolerance-smallrye/extension/src/main/java/org/wildfly/extension/microprofile/faulttolerance/MicroProfileFaultToleranceLogger.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoyNjowOFrOFrCM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTowMDowNVrOFrFqtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2OTE2MA==", "bodyText": "Can this be removed completely?", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380669160", "createdAt": "2020-02-18T13:26:08Z", "author": {"login": "tterem"}, "path": "microprofile/fault-tolerance-smallrye/extension/src/main/java/org/wildfly/extension/microprofile/faulttolerance/MicroProfileFaultToleranceLogger.java", "diffHunk": "@@ -43,8 +42,8 @@\n     @Message(id = 1, value = \"Activating MicroProfile Fault Tolerance subsystem.\")\n     void activatingSubsystem();\n \n-    @LogMessage(level = WARN)\n-    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n-    void hystrixAlreadyConfigured(String deploymentName);\n+//    @LogMessage(level = WARN)\n+//    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n+//    void hystrixAlreadyConfigured(String deploymentName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY3MzY2Mw==", "bodyText": "It can be removed, but best practice is to keep those in commented out so that messages do not get accidentally reused.", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380673663", "createdAt": "2020-02-18T13:34:44Z", "author": {"login": "rhusar"}, "path": "microprofile/fault-tolerance-smallrye/extension/src/main/java/org/wildfly/extension/microprofile/faulttolerance/MicroProfileFaultToleranceLogger.java", "diffHunk": "@@ -43,8 +42,8 @@\n     @Message(id = 1, value = \"Activating MicroProfile Fault Tolerance subsystem.\")\n     void activatingSubsystem();\n \n-    @LogMessage(level = WARN)\n-    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n-    void hystrixAlreadyConfigured(String deploymentName);\n+//    @LogMessage(level = WARN)\n+//    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n+//    void hystrixAlreadyConfigured(String deploymentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2OTE2MA=="}, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxNDI5Mg==", "bodyText": "Even if this message has never been part of a WildFly.Final version? It's just in WF19.Beta1, right?", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380714292", "createdAt": "2020-02-18T14:42:40Z", "author": {"login": "maeste"}, "path": "microprofile/fault-tolerance-smallrye/extension/src/main/java/org/wildfly/extension/microprofile/faulttolerance/MicroProfileFaultToleranceLogger.java", "diffHunk": "@@ -43,8 +42,8 @@\n     @Message(id = 1, value = \"Activating MicroProfile Fault Tolerance subsystem.\")\n     void activatingSubsystem();\n \n-    @LogMessage(level = WARN)\n-    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n-    void hystrixAlreadyConfigured(String deploymentName);\n+//    @LogMessage(level = WARN)\n+//    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n+//    void hystrixAlreadyConfigured(String deploymentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2OTE2MA=="}, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTk0MA==", "bodyText": "That's a good point \u2013 we don't have to be overly rigid here \u2013 since it was never in any Final version and this willl be backported. Removed now.", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r380725940", "createdAt": "2020-02-18T15:00:05Z", "author": {"login": "rhusar"}, "path": "microprofile/fault-tolerance-smallrye/extension/src/main/java/org/wildfly/extension/microprofile/faulttolerance/MicroProfileFaultToleranceLogger.java", "diffHunk": "@@ -43,8 +42,8 @@\n     @Message(id = 1, value = \"Activating MicroProfile Fault Tolerance subsystem.\")\n     void activatingSubsystem();\n \n-    @LogMessage(level = WARN)\n-    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n-    void hystrixAlreadyConfigured(String deploymentName);\n+//    @LogMessage(level = WARN)\n+//    @Message(id = 2, value = \"Hystrix was already configured! Skipping configuration from deployment '%s'.\")\n+//    void hystrixAlreadyConfigured(String deploymentName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2OTE2MA=="}, "originalCommit": {"oid": "c3270e277702de60c9c8ad950685fdcec2ad1f4a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODQ0MDU5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMToxODoyNFrOFvxr8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDo0MDoxOVrOFwh4Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY0MTQ1Ng==", "bodyText": "the the -> the", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r385641456", "createdAt": "2020-02-28T11:18:24Z", "author": {"login": "tterem"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "diffHunk": "@@ -44,43 +44,29 @@ This MicroProfile specification introduces the following interceptor bindings:\n * `@Bulkhead`\n * `@Asynchronous`\n \n-For usage please refer to MicroProfile Fault Tolerance 2.0 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.0/microprofile-fault-tolerance-spec.html[specification].\n+For usage please refer to MicroProfile Fault Tolerance 2.1 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html[specification].\n \n-== Hystrix Configuration\n+== Configuration\n \n-MicroProfile Fault Tolerance extension is implemented by the SmallRye Fault Tolerance project which uses https://github.com/Netflix/Hystrix[Hystrix] as an underlying library.\n+Apart from configuration properties defined by the specification, the SmallRye implementation provides the following\n+configuration properties:\n \n-MicroProfile Config is used to configure Hystrix properties.\n-The integration module picks up all `hystrix` prefixed properties to configure the library.\n-Please refer to https://github.com/Netflix/Hystrix/wiki/Configuration[configuration for configurable properties].\n+.SmallRye Fault Tolerance configuration properties\n+|===\n+|Name |Default |Description\n \n-NOTE: Deployments can supply configuration for Hystrix using the defined `META-INF/microprofile-config.properties` file.\n-      However, when multiple MicroProfile Fault Tolerance deployments are deployed in a single WildFly instance and since configuration of Hystrix is singleton\n-      it is recommended to use globally scoped properties in this case. Please refer to MicroProfile Config subsystem how to configure `ConfigSource`-s.\n+|`io.smallrye.faulttolerance.globalThreadPoolSize`\n+|100\n+|Number of threads used by the the fault tolerance mechanisms. This does not include bulkhead thread pools.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1f67abf4ee64f76e9c4e11aabe7748322a020b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQzMTAzOQ==", "bodyText": "Will by fixed by the next push - the wording was wrong upstream - will be fixed there too now smallrye/smallrye-fault-tolerance#200", "url": "https://github.com/wildfly/wildfly/pull/13003#discussion_r386431039", "createdAt": "2020-03-02T14:40:19Z", "author": {"login": "rhusar"}, "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Fault_Tolerance_SmallRye.adoc", "diffHunk": "@@ -44,43 +44,29 @@ This MicroProfile specification introduces the following interceptor bindings:\n * `@Bulkhead`\n * `@Asynchronous`\n \n-For usage please refer to MicroProfile Fault Tolerance 2.0 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.0/microprofile-fault-tolerance-spec.html[specification].\n+For usage please refer to MicroProfile Fault Tolerance 2.1 https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html[specification].\n \n-== Hystrix Configuration\n+== Configuration\n \n-MicroProfile Fault Tolerance extension is implemented by the SmallRye Fault Tolerance project which uses https://github.com/Netflix/Hystrix[Hystrix] as an underlying library.\n+Apart from configuration properties defined by the specification, the SmallRye implementation provides the following\n+configuration properties:\n \n-MicroProfile Config is used to configure Hystrix properties.\n-The integration module picks up all `hystrix` prefixed properties to configure the library.\n-Please refer to https://github.com/Netflix/Hystrix/wiki/Configuration[configuration for configurable properties].\n+.SmallRye Fault Tolerance configuration properties\n+|===\n+|Name |Default |Description\n \n-NOTE: Deployments can supply configuration for Hystrix using the defined `META-INF/microprofile-config.properties` file.\n-      However, when multiple MicroProfile Fault Tolerance deployments are deployed in a single WildFly instance and since configuration of Hystrix is singleton\n-      it is recommended to use globally scoped properties in this case. Please refer to MicroProfile Config subsystem how to configure `ConfigSource`-s.\n+|`io.smallrye.faulttolerance.globalThreadPoolSize`\n+|100\n+|Number of threads used by the the fault tolerance mechanisms. This does not include bulkhead thread pools.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY0MTQ1Ng=="}, "originalCommit": {"oid": "ad1f67abf4ee64f76e9c4e11aabe7748322a020b"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3971, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}