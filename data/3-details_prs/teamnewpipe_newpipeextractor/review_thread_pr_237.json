{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTExNTgy", "number": 237, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDowMTo0M1rODY7J7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDowMTo0M1rODY7J7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDYxNjEyOnYy", "diffSide": "RIGHT", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeCommentsExtractorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDowMTo0M1rOFfD1vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDoyNzoxOVrOFfEaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODExMzA4NA==", "bodyText": "assertTrue(\"what the fuck am i doing with my life\".equals(commentsInfo.getName()));\nCan you convert this to assertEquals() please?\nIn the line below this change (l.72) :D", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/237#discussion_r368113084", "createdAt": "2020-01-17T20:01:43Z", "author": {"login": "TobiGr"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeCommentsExtractorTest.java", "diffHunk": "@@ -41,13 +55,20 @@ public void testGetComments() throws IOException, ExtractionException {\n             result = findInComments(comments, \"s1ck m3m3\");\n         }\n \n-        assertTrue(result);\n+        return result;\n+\n     }\n \n     @Test\n     public void testGetCommentsFromCommentsInfo() throws IOException, ExtractionException {\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlYT));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidious));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidioush));\n+    }\n+\n+    private boolean getCommentsFromCommentsInfoHelper(String url) throws IOException, ExtractionException {\n         boolean result = false;\n-        CommentsInfo commentsInfo = CommentsInfo.getInfo(\"https://www.youtube.com/watch?v=D00Au7k3i6o\");\n+        CommentsInfo commentsInfo = CommentsInfo.getInfo(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8d00981f9a8c508469525ebe55c8e0334e22d5"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyMjE0Nw==", "bodyText": "done", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/237#discussion_r368122147", "createdAt": "2020-01-17T20:26:43Z", "author": {"login": "B0pol"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeCommentsExtractorTest.java", "diffHunk": "@@ -41,13 +55,20 @@ public void testGetComments() throws IOException, ExtractionException {\n             result = findInComments(comments, \"s1ck m3m3\");\n         }\n \n-        assertTrue(result);\n+        return result;\n+\n     }\n \n     @Test\n     public void testGetCommentsFromCommentsInfo() throws IOException, ExtractionException {\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlYT));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidious));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidioush));\n+    }\n+\n+    private boolean getCommentsFromCommentsInfoHelper(String url) throws IOException, ExtractionException {\n         boolean result = false;\n-        CommentsInfo commentsInfo = CommentsInfo.getInfo(\"https://www.youtube.com/watch?v=D00Au7k3i6o\");\n+        CommentsInfo commentsInfo = CommentsInfo.getInfo(url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODExMzA4NA=="}, "originalCommit": {"oid": "7e8d00981f9a8c508469525ebe55c8e0334e22d5"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyMjQyOQ==", "bodyText": "thanks", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/237#discussion_r368122429", "createdAt": "2020-01-17T20:27:19Z", "author": {"login": "TobiGr"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeCommentsExtractorTest.java", "diffHunk": "@@ -41,13 +55,20 @@ public void testGetComments() throws IOException, ExtractionException {\n             result = findInComments(comments, \"s1ck m3m3\");\n         }\n \n-        assertTrue(result);\n+        return result;\n+\n     }\n \n     @Test\n     public void testGetCommentsFromCommentsInfo() throws IOException, ExtractionException {\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlYT));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidious));\n+        assertTrue(getCommentsFromCommentsInfoHelper(urlInvidioush));\n+    }\n+\n+    private boolean getCommentsFromCommentsInfoHelper(String url) throws IOException, ExtractionException {\n         boolean result = false;\n-        CommentsInfo commentsInfo = CommentsInfo.getInfo(\"https://www.youtube.com/watch?v=D00Au7k3i6o\");\n+        CommentsInfo commentsInfo = CommentsInfo.getInfo(url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODExMzA4NA=="}, "originalCommit": {"oid": "7e8d00981f9a8c508469525ebe55c8e0334e22d5"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2825, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}