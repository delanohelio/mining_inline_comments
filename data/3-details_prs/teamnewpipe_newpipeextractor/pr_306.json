{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMzY4Mjc4", "number": 306, "title": "Extract metadata for youtube, soundcloud & mediaccc", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I have tested the API against NewPipe.\n I agree to create a pull request for NewPipe as soon as possible to make it compatible with the changed API.\n\nExtraction for metadata which were added not so long ago (now), but only for PeerTube\nfixes #393", "createdAt": "2020-04-09T11:25:29Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306", "merged": true, "mergeCommit": {"oid": "b4dee6d08f60738fd2a94f79b7672b8e5f5db94e"}, "closed": true, "closedAt": "2021-03-27T07:45:48Z", "author": {"login": "B0pol"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV8jRFgFqTM5MDc5MTIzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeEnEHsgBqjQ0ODA5ODkzNzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzkxMjMw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-390791230", "createdAt": "2020-04-09T13:28:34Z", "commit": {"oid": "d2ddd76951a9914d959126cbd5f00d1aec4b5d0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyODozNFrOGDYsdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToxM1rOGDYzqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMzUxMQ==", "bodyText": "You can't simply do that, see https://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r406203511", "createdAt": "2020-04-09T13:28:34Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCStreamExtractor.java", "diffHunk": "@@ -249,13 +250,18 @@ public String getLicence() throws ParsingException {\n \n     @Override\n     public Locale getLanguageInfo() throws ParsingException {\n-        return null;\n+        String code = JsonUtils.getString(data, \"original_language\");\n+        code = code.substring(0, 2); //remove the last letter. new Locale (three_letter_code) don't work", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2ddd76951a9914d959126cbd5f00d1aec4b5d0d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMzY5OQ==", "bodyText": "Why did you do this?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r406203699", "createdAt": "2020-04-09T13:28:50Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -121,12 +99,14 @@ public String getName() throws ParsingException {\n \n         try {\n             title = getTextFromObject(getVideoPrimaryInfoRenderer().getObject(\"title\"));\n-        } catch (Exception ignored) {}\n+        } catch (Exception ignored) {\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2ddd76951a9914d959126cbd5f00d1aec4b5d0d"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTM1Mg==", "bodyText": "Is there a reason why you don't just do data.getString(\"original_language\")?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r406205352", "createdAt": "2020-04-09T13:31:13Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCStreamExtractor.java", "diffHunk": "@@ -249,13 +250,18 @@ public String getLicence() throws ParsingException {\n \n     @Override\n     public Locale getLanguageInfo() throws ParsingException {\n-        return null;\n+        String code = JsonUtils.getString(data, \"original_language\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2ddd76951a9914d959126cbd5f00d1aec4b5d0d"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc6fa6080215f56c069c7d2a2af3c1afe5158f28", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/dc6fa6080215f56c069c7d2a2af3c1afe5158f28", "committedDate": "2020-04-12T08:46:25Z", "message": "create Localization.getLocaleFromThreeLetterCode -> improve getTags for mediaCCC (but also othe services)"}, "afterCommit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/9c853365b49c0a8bad913f7a01ccc28d3d5e49b8", "committedDate": "2020-04-12T08:48:36Z", "message": "create Localization.getLocaleFromThreeLetterCode -> improve getTags for mediaCCC (but also othe services)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzA4NzIw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-396708720", "createdAt": "2020-04-20T18:31:59Z", "commit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODozMTo1OVrOGIiDXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODozMTo1OVrOGIiDXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTcxMQ==", "bodyText": "I'm interested in why the JsonUtils is not sufficient here. Is it for performance reasons or the the unchecked cast?\nThis section to transform the JsonArray to a ArrayList is written once for youtube, peertube and mediaccc. This could be extracted into the JsonUtils", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r411599711", "createdAt": "2020-04-20T18:31:59Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/peertube/extractors/PeertubeStreamExtractor.java", "diffHunk": "@@ -236,10 +236,16 @@ public StreamInfoItemsCollector getRelatedStreams() throws IOException, Extracti\n         return collector;\n     }\n \n+    @Nonnull\n     @Override\n     public List<String> getTags() {\n         try {\n-            return (List) JsonUtils.getArray(json, \"tags\");\n+            JsonArray tagsArray = json.getArray(\"tags\");\n+            List<String> tagsList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzYwNjE3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-397360617", "createdAt": "2020-04-21T14:01:42Z", "commit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMTo0M1rOGJHY7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMjozM1rOGJHbtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMTQzOQ==", "bodyText": "According to https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getISO3Language--, it returns ISO 639-2/T, not ISO 639-3.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r412211439", "createdAt": "2020-04-21T14:01:43Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/Localization.java", "diffHunk": "@@ -99,4 +98,30 @@ public int hashCode() {\n         result = 31 * result + (countryCode != null ? countryCode.hashCode() : 0);\n         return result;\n     }\n+\n+    /**\n+     * Converts a three letter language code (ISO 639-3) to a Locale\n+     * in the limit of Java Locale class.\n+     * It can also handle 639-2/T but may return a wrong locale.\n+     * from https://stackoverflow.com/a/674122/12680950\n+     * <p>\n+     * It should not be used with 639-2/B, since java already handle it.\n+     * (Just use new Locale(\"an ISO 639-2/B code\")).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMTY3MQ==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r412211671", "createdAt": "2020-04-21T14:01:57Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/Localization.java", "diffHunk": "@@ -99,4 +98,30 @@ public int hashCode() {\n         result = 31 * result + (countryCode != null ? countryCode.hashCode() : 0);\n         return result;\n     }\n+\n+    /**\n+     * Converts a three letter language code (ISO 639-3) to a Locale\n+     * in the limit of Java Locale class.\n+     * It can also handle 639-2/T but may return a wrong locale.\n+     * from https://stackoverflow.com/a/674122/12680950\n+     * <p>\n+     * It should not be used with 639-2/B, since java already handle it.\n+     * (Just use new Locale(\"an ISO 639-2/B code\")).\n+     *\n+     * @param code a three letter language code\n+     * @return the Locale corresponding\n+     */\n+    public static Locale getLocaleFromThreeLetterCode(String code) {\n+        String[] languages = Locale.getISOLanguages();\n+        Map<String, Locale> localeMap = new HashMap<>(languages.length);\n+        for (String language : languages) {\n+            Locale locale = new Locale(language);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMjE0OQ==", "bodyText": "Remove this part, as it's technically incorrect. Just throw an exception if it's not in the localeMap.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r412212149", "createdAt": "2020-04-21T14:02:33Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/Localization.java", "diffHunk": "@@ -99,4 +98,30 @@ public int hashCode() {\n         result = 31 * result + (countryCode != null ? countryCode.hashCode() : 0);\n         return result;\n     }\n+\n+    /**\n+     * Converts a three letter language code (ISO 639-3) to a Locale\n+     * in the limit of Java Locale class.\n+     * It can also handle 639-2/T but may return a wrong locale.\n+     * from https://stackoverflow.com/a/674122/12680950\n+     * <p>\n+     * It should not be used with 639-2/B, since java already handle it.\n+     * (Just use new Locale(\"an ISO 639-2/B code\")).\n+     *\n+     * @param code a three letter language code\n+     * @return the Locale corresponding\n+     */\n+    public static Locale getLocaleFromThreeLetterCode(String code) {\n+        String[] languages = Locale.getISOLanguages();\n+        Map<String, Locale> localeMap = new HashMap<>(languages.length);\n+        for (String language : languages) {\n+            Locale locale = new Locale(language);\n+            localeMap.put(locale.getISO3Language(), locale);\n+        }\n+        if (localeMap.containsKey(code)) {\n+            return localeMap.get(code);\n+        } else {\n+            return new Locale(code.substring(0, 2));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c853365b49c0a8bad913f7a01ccc28d3d5e49b8"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddd06c96938db1974a6c99587a8a44c76e7db5ba", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ddd06c96938db1974a6c99587a8a44c76e7db5ba", "committedDate": "2020-04-22T09:42:27Z", "message": "use javax.annotation.Nonnull instead of edu.umd.cs.findbugs.annotations.NonNull"}, "afterCommit": {"oid": "5bb7234c4cd957fc27e847f2642334250dad2c36", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5bb7234c4cd957fc27e847f2642334250dad2c36", "committedDate": "2020-04-22T09:44:59Z", "message": "use javax.annotation.Nonnull instead of edu.umd.cs.findbugs.annotations.NonNull"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb7234c4cd957fc27e847f2642334250dad2c36", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5bb7234c4cd957fc27e847f2642334250dad2c36", "committedDate": "2020-04-22T09:44:59Z", "message": "use javax.annotation.Nonnull instead of edu.umd.cs.findbugs.annotations.NonNull"}, "afterCommit": {"oid": "de7515dddfcfa96e5df9922532a78f3ed845ea4c", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/de7515dddfcfa96e5df9922532a78f3ed845ea4c", "committedDate": "2020-04-22T09:47:23Z", "message": "use javax.annotation.Nonnull instead of edu.umd.cs.findbugs.annotations.NonNull"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDgxNzQ1", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-407481745", "createdAt": "2020-05-07T13:40:27Z", "commit": {"oid": "2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0MDoyN1rOGR_C4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0NDowOFrOGR_Nag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxMTkwNw==", "bodyText": "Could you change these to just track.getString()?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r421511907", "createdAt": "2020-05-07T13:40:27Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "diffHunk": "@@ -269,17 +260,17 @@ public String getHost() throws ParsingException {\n \n     @Override\n     public String getPrivacy() throws ParsingException {\n-        return \"\";\n+        return JsonUtils.getString(track, \"sharing\");\n     }\n \n     @Override\n     public String getCategory() throws ParsingException {\n-        return \"\";\n+        return JsonUtils.getString(track, \"genre\");\n     }\n \n     @Override\n     public String getLicence() throws ParsingException {\n-        return \"\";\n+        return JsonUtils.getString(track, \"license\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxMjkyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String tags_string = track.getString(\"tag_list\");\n          \n          \n            \n                    return new ArrayList<>(Arrays.asList(tags_string.split(\" \")));\n          \n          \n            \n                    final String tags = track.getString(\"tag_list\");\n          \n          \n            \n                    return Arrays.asList(tags.split(\" \"));", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r421512923", "createdAt": "2020-05-07T13:42:00Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "diffHunk": "@@ -290,7 +281,8 @@ public Locale getLanguageInfo() throws ParsingException {\n     @Nonnull\n     @Override\n     public List<String> getTags() throws ParsingException {\n-        return new ArrayList<>();\n+        String tags_string = track.getString(\"tag_list\");\n+        return new ArrayList<>(Arrays.asList(tags_string.split(\" \")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxNDYwMg==", "bodyText": "Do we have the possible options documented somewhere? And shouldn't we maybe use e.g. an Enum instead of just returning a String? Also for the getLicence() and maybe even for the getCategory() as well.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r421514602", "createdAt": "2020-05-07T13:44:08Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -980,20 +966,43 @@ public String getHost() {\n \n     @Nonnull\n     @Override\n-    public String getPrivacy() {\n-        return \"\";\n+    public String getPrivacy() throws ParsingException {\n+        boolean isUnlisted = playerResponse\n+                .getObject(\"microformat\")\n+                .getObject(\"playerMicroformatRenderer\")\n+                .getBoolean(\"isUnlisted\");\n+        return isUnlisted ? \"Unlisted\" : \"Public\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a"}, "originalPosition": 151}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/2e15bc41b8226fc1add76a6cf3a18c5f2ac8157a", "committedDate": "2020-05-05T13:21:27Z", "message": "fix one test"}, "afterCommit": {"oid": "4ad662789dc00eead7ba8c2705dc8102edba2de7", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4ad662789dc00eead7ba8c2705dc8102edba2de7", "committedDate": "2020-05-11T18:11:01Z", "message": "fix another test with timezone not set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "830e954821c2547d9502c1c8907bd45998ba636a", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/830e954821c2547d9502c1c8907bd45998ba636a", "committedDate": "2020-05-11T18:19:19Z", "message": "small refactoring"}, "afterCommit": {"oid": "b0ddc91fbfb9f7942c6201df1056818b214ba3b9", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/b0ddc91fbfb9f7942c6201df1056818b214ba3b9", "committedDate": "2020-05-14T09:51:32Z", "message": "small refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzA4NjE3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-411708617", "createdAt": "2020-05-14T11:24:04Z", "commit": {"oid": "4b45ac706bea8307954d29144d39390e5ebf9f1d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMToyNDowNFrOGVXzsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMToyNDowNFrOGVXzsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA2MzM0NA==", "bodyText": "This doesn't actually get the license, but the licensor. See e.g. https://www.youtube.com/watch?v=IuArYvVbUo0 for a video that has listed its license. Also: final.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r425063344", "createdAt": "2020-05-14T11:24:04Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -1000,20 +1006,43 @@ public String getHost() {\n \n     @Nonnull\n     @Override\n-    public String getPrivacy() {\n-        return \"\";\n+    public Privacy getPrivacy() {\n+        boolean isUnlisted = playerResponse\n+                .getObject(\"microformat\")\n+                .getObject(\"playerMicroformatRenderer\")\n+                .getBoolean(\"isUnlisted\");\n+        return isUnlisted ? Privacy.UNLISTED : Privacy.PUBLIC;\n     }\n \n     @Nonnull\n     @Override\n     public String getCategory() {\n-        return \"\";\n+        try {\n+            return playerResponse.getObject(\"microformat\")\n+                    .getObject(\"playerMicroformatRenderer\")\n+                    .getString(\"category\");\n+        } catch (Exception ignored) {\n+            return \"\";\n+        }\n     }\n \n     @Nonnull\n     @Override\n     public String getLicence() {\n-        return \"\";\n+        try {\n+            JsonArray rows = initialData.getObject(\"contents\")\n+                    .getObject(\"twoColumnWatchNextResults\").getObject(\"results\").getObject(\"results\")\n+                    .getArray(\"contents\").getObject(1).getObject(\"videoSecondaryInfoRenderer\")\n+                    .getObject(\"metadataRowContainer\").getObject(\"metadataRowContainerRenderer\").getArray(\"rows\");\n+            JsonObject metadataRowRenderer = rows.getObject(rows.size() - 1) // it is usually last\n+                    .getObject(\"metadataRowRenderer\");\n+            String probablyLicence = getTextFromObject(metadataRowRenderer.getArray(\"contents\").getObject(0));\n+            return getTextFromObject(metadataRowRenderer.getObject(\"title\")).toLowerCase().contains(\"licensed\")\n+                    ? probablyLicence\n+                    : \"\";\n+        } catch (Exception e) {\n+            return \"\";\n+        }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b45ac706bea8307954d29144d39390e5ebf9f1d"}, "originalPosition": 113}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba46efa242168f7309094ce9e596bed863c15da6", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ba46efa242168f7309094ce9e596bed863c15da6", "committedDate": "2020-06-29T10:32:11Z", "message": "Create Privacy enum"}, "afterCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/78e418ce130568a9d8a4a689a6c48e5f6a318375", "committedDate": "2020-07-15T18:34:49Z", "message": "Create Privacy enum"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NjE5MjYx", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-449619261", "createdAt": "2020-07-16T08:13:35Z", "commit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoxMzozNlrOGyf25w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoxNjowN1rOGygBEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMzk0Mw==", "bodyText": "YouTube themselves call it \"YouTube license\" so I wouldn't change the name even though you prefer \"licence\"", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455603943", "createdAt": "2020-07-16T08:13:36Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -1002,20 +1008,43 @@ public String getHost() {\n \n     @Nonnull\n     @Override\n-    public String getPrivacy() {\n-        return \"\";\n+    public Privacy getPrivacy() {\n+        boolean isUnlisted = playerResponse\n+                .getObject(\"microformat\")\n+                .getObject(\"playerMicroformatRenderer\")\n+                .getBoolean(\"isUnlisted\");\n+        return isUnlisted ? Privacy.UNLISTED : Privacy.PUBLIC;\n     }\n \n     @Nonnull\n     @Override\n     public String getCategory() {\n-        return \"\";\n+        try {\n+            return playerResponse.getObject(\"microformat\")\n+                    .getObject(\"playerMicroformatRenderer\")\n+                    .getString(\"category\");\n+        } catch (Exception ignored) {\n+            return \"\";\n+        }\n     }\n \n     @Nonnull\n     @Override\n     public String getLicence() {\n-        return \"\";\n+        try {\n+            final JsonObject metadataRowRenderer = getVideoSecondaryInfoRenderer()\n+                    .getObject(\"metadataRowContainer\").getObject(\"metadataRowContainerRenderer\").getArray(\"rows\")\n+                    .getObject(0)\n+                    .getObject(\"metadataRowRenderer\");\n+\n+            final String probablyLicence = getTextFromObject(metadataRowRenderer\n+                    .getArray(\"contents\").getObject(0));\n+\n+            return probablyLicence == null || !probablyLicence.contains(\"Creative Commons\")\n+                    ? \"YouTube licence\" : probablyLicence;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNDc3Mw==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455604773", "createdAt": "2020-07-16T08:14:21Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/Localization.java", "diffHunk": "@@ -99,4 +100,25 @@ public int hashCode() {\n         result = 31 * result + (countryCode != null ? countryCode.hashCode() : 0);\n         return result;\n     }\n+\n+    /**\n+     * Converts a three letter language code (ISO 639-2/T) to a Locale\n+     * in the limit of Java Locale class.\n+     *\n+     * @param code a three letter language code\n+     * @return the Locale corresponding\n+     */\n+    public static Locale getLocaleFromThreeLetterCode(@Nonnull String code) throws ParsingException {\n+        String[] languages = Locale.getISOLanguages();\n+        Map<String, Locale> localeMap = new HashMap<>(languages.length);\n+        for (String language : languages) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNTM5NA==", "bodyText": "final (and uploaderId as well)", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455605394", "createdAt": "2020-07-16T08:14:56Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -311,9 +316,9 @@ public long getDislikeCount() throws ParsingException {\n     public String getUploaderUrl() throws ParsingException {\n         assertPageFetched();\n \n-            String uploaderUrl = getUrlFromNavigationEndpoint(getVideoSecondaryInfoRenderer()\n-                    .getObject(\"owner\").getObject(\"videoOwnerRenderer\").getObject(\"navigationEndpoint\"));\n-            if (uploaderUrl != null && !uploaderUrl.isEmpty()) return uploaderUrl;\n+        String uploaderUrl = getUrlFromNavigationEndpoint(getVideoSecondaryInfoRenderer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNTQ4NQ==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455605485", "createdAt": "2020-07-16T08:15:03Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -1002,20 +1008,43 @@ public String getHost() {\n \n     @Nonnull\n     @Override\n-    public String getPrivacy() {\n-        return \"\";\n+    public Privacy getPrivacy() {\n+        boolean isUnlisted = playerResponse", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNTg5Mw==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455605893", "createdAt": "2020-07-16T08:15:28Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/JsonUtils.java", "diffHunk": "@@ -100,4 +100,14 @@ private static JsonObject getObject(@Nonnull JsonObject object, @Nonnull List<St\n         return result;\n     }\n \n+    public static List<String> getListStringFromJsonArray(@Nonnull JsonArray array) {\n+        List<String> tagsList = new ArrayList<>(array.size());\n+        for (Object tag : array) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNjA0MA==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455606040", "createdAt": "2020-07-16T08:15:35Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractorDefaultTest.java", "diffHunk": "@@ -159,5 +189,116 @@ public void bothHlsAndOpusAudioStreams() throws Exception {\n             extractor.getAudioStreams();\n         }\n     }\n+\n+    public static class YnwMellySuicidal {\n+        private static SoundcloudStreamExtractor extractor;\n+\n+        @BeforeClass\n+        public static void setUp() throws Exception {\n+            NewPipe.init(DownloaderTestImpl.getInstance());\n+            extractor = (SoundcloudStreamExtractor) SoundCloud.getStreamExtractor(\"https://soundcloud.com/ynwmelly/suicidal\");\n+            extractor.fetchPage();\n+        }\n+\n+        @Test\n+        public void testGetName() {\n+            assertEquals(\"Suicidal\", extractor.getName());\n+        }\n+\n+        @Test\n+        public void testGetUploaderName() {\n+            assertEquals(\"Ynw Melly\", extractor.getUploaderName());\n+        }\n+\n+        @Test\n+        public void testGetLength() {\n+            assertEquals(223, extractor.getLength());\n+        }\n+\n+        @Test\n+        public void testGetViewCount() {\n+            assertTrue(Long.toString(extractor.getViewCount()),\n+                    extractor.getViewCount() > 39000000);\n+        }\n+\n+        @Test\n+        public void testGetTextualUploadDate() throws ParsingException {\n+            Assert.assertEquals(\"2019-11-21 22:25:30\", extractor.getTextualUploadDate());\n+        }\n+\n+        @Test\n+        public void testGetUploadDate() throws ParsingException, ParseException {\n+            final Calendar instance = Calendar.getInstance();\n+            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss +0000\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNjI3MQ==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455606271", "createdAt": "2020-07-16T08:15:49Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractorDefaultTest.java", "diffHunk": "@@ -159,5 +189,116 @@ public void bothHlsAndOpusAudioStreams() throws Exception {\n             extractor.getAudioStreams();\n         }\n     }\n+\n+    public static class YnwMellySuicidal {\n+        private static SoundcloudStreamExtractor extractor;\n+\n+        @BeforeClass\n+        public static void setUp() throws Exception {\n+            NewPipe.init(DownloaderTestImpl.getInstance());\n+            extractor = (SoundcloudStreamExtractor) SoundCloud.getStreamExtractor(\"https://soundcloud.com/ynwmelly/suicidal\");\n+            extractor.fetchPage();\n+        }\n+\n+        @Test\n+        public void testGetName() {\n+            assertEquals(\"Suicidal\", extractor.getName());\n+        }\n+\n+        @Test\n+        public void testGetUploaderName() {\n+            assertEquals(\"Ynw Melly\", extractor.getUploaderName());\n+        }\n+\n+        @Test\n+        public void testGetLength() {\n+            assertEquals(223, extractor.getLength());\n+        }\n+\n+        @Test\n+        public void testGetViewCount() {\n+            assertTrue(Long.toString(extractor.getViewCount()),\n+                    extractor.getViewCount() > 39000000);\n+        }\n+\n+        @Test\n+        public void testGetTextualUploadDate() throws ParsingException {\n+            Assert.assertEquals(\"2019-11-21 22:25:30\", extractor.getTextualUploadDate());\n+        }\n+\n+        @Test\n+        public void testGetUploadDate() throws ParsingException, ParseException {\n+            final Calendar instance = Calendar.getInstance();\n+            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss +0000\");\n+            sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+            instance.setTime(sdf.parse(\"2019/11/21 22:25:30 +0000\"));\n+            assertEquals(instance, requireNonNull(extractor.getUploadDate()).date());\n+        }\n+\n+        @Test\n+        public void testGetUploaderUrl() {\n+            assertIsSecureUrl(extractor.getUploaderUrl());\n+            assertEquals(\"https://soundcloud.com/ynwmelly\", extractor.getUploaderUrl());\n+        }\n+\n+        @Test\n+        public void testGetThumbnailUrl() {\n+            assertIsSecureUrl(extractor.getThumbnailUrl());\n+        }\n+\n+        @Test\n+        public void testGetUploaderAvatarUrl() {\n+            assertIsSecureUrl(extractor.getUploaderAvatarUrl());\n+        }\n+\n+        @Test\n+        public void testGetAudioStreams() throws IOException, ExtractionException {\n+            assertFalse(extractor.getAudioStreams().isEmpty());\n+        }\n+\n+        @Test\n+        public void testStreamType() {\n+            assertTrue(extractor.getStreamType() == StreamType.AUDIO_STREAM);\n+        }\n+\n+        @Test\n+        public void testGetRelatedVideos() throws ExtractionException, IOException {\n+            StreamInfoItemsCollector relatedVideos = extractor.getRelatedStreams();\n+            assertFalse(relatedVideos.getItems().isEmpty());\n+            assertTrue(relatedVideos.getErrors().isEmpty());\n+        }\n+\n+        @Test\n+        public void testGetSubtitlesListDefault() throws IOException, ExtractionException {\n+            assertTrue(extractor.getSubtitlesDefault().isEmpty());\n+        }\n+\n+        @Test\n+        public void testGetSubtitlesList() throws IOException, ExtractionException {\n+            assertTrue(extractor.getSubtitlesDefault().isEmpty());\n+        }\n+\n+        @Test\n+        public void testGetPrivacy() {\n+            assertEquals(StreamExtractor.Privacy.PUBLIC, extractor.getPrivacy());\n+        }\n+\n+        @Test\n+        public void testGetLicence() {\n+            assertEquals(\"all-rights-reserved\", extractor.getLicence());\n+        }\n+\n+        @Test\n+        public void testGetCategory() {\n+            assertEquals(\"Hip-hop & Rap\", extractor.getCategory());\n+        }\n+\n+        @Test\n+        public void testGetTags() throws ParsingException {\n+            List<String> tags = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNjQ5MQ==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455606491", "createdAt": "2020-07-16T08:16:02Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractorDefaultTest.java", "diffHunk": "@@ -135,6 +139,32 @@ public void testGetSubtitlesList() throws IOException, ExtractionException {\n             // Video (/view?v=YQHsXMglC9A) set in the setUp() method has no captions => null\n             assertTrue(extractor.getSubtitlesDefault().isEmpty());\n         }\n+\n+        @Test\n+        public void testGetPrivacy() {\n+            assertEquals(StreamExtractor.Privacy.PUBLIC, extractor.getPrivacy());\n+        }\n+\n+        @Test\n+        public void testGetLicence() {\n+            assertEquals(\"all-rights-reserved\", extractor.getLicence());\n+        }\n+\n+        @Test\n+        public void testGetCategory() {\n+            assertEquals(\"\", extractor.getCategory());\n+        }\n+\n+        @Test\n+        public void testGetTags() {\n+            List<String> tags = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwNjU0Ng==", "bodyText": "final", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r455606546", "createdAt": "2020-07-16T08:16:07Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/media_ccc/MediaCCCStreamExtractorTest.java", "diffHunk": "@@ -114,6 +113,19 @@ public void testGetUploadDate() throws ParsingException, ParseException {\n             instance.setTime(new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2018-05-11\"));\n             assertEquals(instance, requireNonNull(extractor.getUploadDate()).date());\n         }\n+\n+        @Test\n+        public void testGetTags() throws ParsingException {\n+            List<String> tags = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78e418ce130568a9d8a4a689a6c48e5f6a318375", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/78e418ce130568a9d8a4a689a6c48e5f6a318375", "committedDate": "2020-07-15T18:34:49Z", "message": "Create Privacy enum"}, "afterCommit": {"oid": "79abc0551f43f11bf823260132e1fa06a68bdb11", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/79abc0551f43f11bf823260132e1fa06a68bdb11", "committedDate": "2021-01-24T14:37:57Z", "message": "Create Privacy enum"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79abc0551f43f11bf823260132e1fa06a68bdb11", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/79abc0551f43f11bf823260132e1fa06a68bdb11", "committedDate": "2021-01-24T14:37:57Z", "message": "Create Privacy enum"}, "afterCommit": {"oid": "d940e0ac69096eef81170b16d0c6c5d1033ce503", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d940e0ac69096eef81170b16d0c6c5d1033ce503", "committedDate": "2021-01-24T14:39:27Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d940e0ac69096eef81170b16d0c6c5d1033ce503", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d940e0ac69096eef81170b16d0c6c5d1033ce503", "committedDate": "2021-01-24T14:39:27Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}, "afterCommit": {"oid": "292b6c19ec1591f2da1afcea35785c63891ef8bb", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/292b6c19ec1591f2da1afcea35785c63891ef8bb", "committedDate": "2021-02-12T15:53:24Z", "message": "fix some tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "292b6c19ec1591f2da1afcea35785c63891ef8bb", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/292b6c19ec1591f2da1afcea35785c63891ef8bb", "committedDate": "2021-02-12T15:53:24Z", "message": "fix some tests"}, "afterCommit": {"oid": "89c1e70c149b905b6f6ee29dfb5ea87938ec495f", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/89c1e70c149b905b6f6ee29dfb5ea87938ec495f", "committedDate": "2021-02-12T16:23:03Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "078d7092c4ba7c0850b8f86f9b9b707ee3c6d73f", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/078d7092c4ba7c0850b8f86f9b9b707ee3c6d73f", "committedDate": "2021-02-12T16:43:25Z", "message": "license"}, "afterCommit": {"oid": "8e04979fc48943d7c890830f5e34697784444618", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8e04979fc48943d7c890830f5e34697784444618", "committedDate": "2021-02-12T18:06:48Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e04979fc48943d7c890830f5e34697784444618", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8e04979fc48943d7c890830f5e34697784444618", "committedDate": "2021-02-12T18:06:48Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}, "afterCommit": {"oid": "a0dd761d49082063c9852e463f306220258ba54f", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a0dd761d49082063c9852e463f306220258ba54f", "committedDate": "2021-02-12T19:03:43Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0dd761d49082063c9852e463f306220258ba54f", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a0dd761d49082063c9852e463f306220258ba54f", "committedDate": "2021-02-12T19:03:43Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}, "afterCommit": {"oid": "01a60f62e777ccda020a1da8d705293ceba2e614", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/01a60f62e777ccda020a1da8d705293ceba2e614", "committedDate": "2021-02-12T19:06:56Z", "message": "extract metadata for youtube, soundcloud & mediaccc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "782ecfcd9342ddf581b530a3aed4279a9b81eb9e", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/782ecfcd9342ddf581b530a3aed4279a9b81eb9e", "committedDate": "2021-02-12T19:34:46Z", "message": "address reviews"}, "afterCommit": {"oid": "ce0bf6a7394323be052456b309162ef2fcac4517", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ce0bf6a7394323be052456b309162ef2fcac4517", "committedDate": "2021-02-12T19:37:54Z", "message": "address reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODE0OTY1", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-589814965", "createdAt": "2021-02-12T20:30:10Z", "commit": {"oid": "ce0bf6a7394323be052456b309162ef2fcac4517"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQyMDozMDoxMVrOIk15ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQyMDozMDoxMVrOIk15ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTUwMjc1MA==", "bodyText": "I am not sure about these lines and the other test files. these changes make the tests longer and thus harder to read, because finding the important info takes longer.\nIMO, that can be kept in one line as long as that lines does not get way too long.\nCC @Stypox @XiangRongLin", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#discussion_r575502750", "createdAt": "2021-02-12T20:30:11Z", "author": {"login": "TobiGr"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/media_ccc/MediaCCCStreamExtractorTest.java", "diffHunk": "@@ -42,26 +44,43 @@ public static void setUp() throws Exception {\n         @Override public String expectedId() { return ID; }\n         @Override public String expectedUrlContains() { return URL; }\n         @Override public String expectedOriginalUrlContains() { return URL; }\n-\n         @Override public StreamType expectedStreamType() { return StreamType.VIDEO_STREAM; }\n         @Override public String expectedUploaderName() { return \"gpn18\"; }\n         @Override public String expectedUploaderUrl() { return \"https://media.ccc.de/c/gpn18\"; }\n         @Override public List<String> expectedDescriptionContains() { return Arrays.asList(\"SSH-Sessions\", \"\\\"Terminal Multiplexer\\\"\"); }\n         @Override public long expectedLength() { return 3097; }\n         @Override public long expectedViewCountAtLeast() { return 2380; }\n         @Nullable @Override public String expectedUploadDate() { return \"2018-05-11 00:00:00.000\"; }\n-        @Nullable @Override public String expectedTextualUploadDate() { return \"2018-05-11T02:00:00.000+02:00\"; }\n-        @Override public long expectedLikeCountAtLeast() { return -1; }\n-        @Override public long expectedDislikeCountAtLeast() { return -1; }\n-        @Override public boolean expectedHasRelatedStreams() { return false; }\n-        @Override public boolean expectedHasSubtitles() { return false; }\n-        @Override public boolean expectedHasFrames() { return false; }\n-        @Override public List<String> expectedTags() { return Arrays.asList(\"gpn18\", \"105\"); }\n-        @Override public int expectedStreamSegmentsCount() { return 0; }\n+        @Nullable @Override public String expectedTextualUploadDate() {\n+            return \"2018-05-11T02:00:00.000+02:00\";\n+        }\n+        @Override public long expectedLikeCountAtLeast() {\n+            return -1;\n+        }\n+        @Override public long expectedDislikeCountAtLeast() {\n+            return -1;\n+        }\n+        @Override public boolean expectedHasRelatedStreams() {\n+            return false;\n+        }\n+        @Override public boolean expectedHasSubtitles() {\n+            return false;\n+        }\n+        @Override public boolean expectedHasFrames() {\n+            return false;\n+        }\n+        @Override public List<String> expectedTags() {\n+            return Arrays.asList(\"gpn18\", \"105\");\n+        }\n+        @Override public int expectedStreamSegmentsCount() {\n+            return 0;\n+        }\n+        @Override public Locale expectedLanguageInfo() {\n+            return new Locale(\"de\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce0bf6a7394323be052456b309162ef2fcac4517"}, "originalPosition": 66}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce0bf6a7394323be052456b309162ef2fcac4517", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ce0bf6a7394323be052456b309162ef2fcac4517", "committedDate": "2021-02-12T19:37:54Z", "message": "address reviews"}, "afterCommit": {"oid": "350093c57b198847d1867bdad8d34f1c03f99686", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/350093c57b198847d1867bdad8d34f1c03f99686", "committedDate": "2021-02-13T00:08:02Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "350093c57b198847d1867bdad8d34f1c03f99686", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/350093c57b198847d1867bdad8d34f1c03f99686", "committedDate": "2021-02-13T00:08:02Z", "message": "address reviews"}, "afterCommit": {"oid": "a82cf1e580d82daf7b14cd0df28ccc23ab8275a3", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a82cf1e580d82daf7b14cd0df28ccc23ab8275a3", "committedDate": "2021-02-13T00:14:17Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a82cf1e580d82daf7b14cd0df28ccc23ab8275a3", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a82cf1e580d82daf7b14cd0df28ccc23ab8275a3", "committedDate": "2021-02-13T00:14:17Z", "message": "address reviews"}, "afterCommit": {"oid": "08ef081eacb840e1d60d84fcd04bff918aec3bec", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/08ef081eacb840e1d60d84fcd04bff918aec3bec", "committedDate": "2021-02-13T21:31:44Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08ef081eacb840e1d60d84fcd04bff918aec3bec", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/08ef081eacb840e1d60d84fcd04bff918aec3bec", "committedDate": "2021-02-13T21:31:44Z", "message": "address reviews"}, "afterCommit": {"oid": "8582682edbc5febd8ca854c69c2303ed2f58e9ac", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8582682edbc5febd8ca854c69c2303ed2f58e9ac", "committedDate": "2021-02-13T21:35:56Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8582682edbc5febd8ca854c69c2303ed2f58e9ac", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8582682edbc5febd8ca854c69c2303ed2f58e9ac", "committedDate": "2021-02-13T21:35:56Z", "message": "address reviews"}, "afterCommit": {"oid": "d04c35e33fc510bc86307e63ac7e97d6ab52cad8", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d04c35e33fc510bc86307e63ac7e97d6ab52cad8", "committedDate": "2021-02-13T21:44:30Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d04c35e33fc510bc86307e63ac7e97d6ab52cad8", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d04c35e33fc510bc86307e63ac7e97d6ab52cad8", "committedDate": "2021-02-13T21:44:30Z", "message": "address reviews"}, "afterCommit": {"oid": "61195df088d7a48658291d85eb4948e1c312209b", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/61195df088d7a48658291d85eb4948e1c312209b", "committedDate": "2021-02-13T21:50:16Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61195df088d7a48658291d85eb4948e1c312209b", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/61195df088d7a48658291d85eb4948e1c312209b", "committedDate": "2021-02-13T21:50:16Z", "message": "address reviews"}, "afterCommit": {"oid": "31c8e891f38e1402110a7c584a76c86724eefa8a", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/31c8e891f38e1402110a7c584a76c86724eefa8a", "committedDate": "2021-02-13T21:57:21Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31c8e891f38e1402110a7c584a76c86724eefa8a", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/31c8e891f38e1402110a7c584a76c86724eefa8a", "committedDate": "2021-02-13T21:57:21Z", "message": "address reviews"}, "afterCommit": {"oid": "8ee169532c4e50b12334a11f847ad53f28b3eeca", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8ee169532c4e50b12334a11f847ad53f28b3eeca", "committedDate": "2021-02-15T18:06:45Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee169532c4e50b12334a11f847ad53f28b3eeca", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8ee169532c4e50b12334a11f847ad53f28b3eeca", "committedDate": "2021-02-15T18:06:45Z", "message": "address reviews"}, "afterCommit": {"oid": "e0252d5b57b443010afaf081b4d97f71576b033c", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e0252d5b57b443010afaf081b4d97f71576b033c", "committedDate": "2021-02-15T18:16:47Z", "message": "address reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68ed95ca395c66f2abe0dede9e8abd97f3c1e739", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/68ed95ca395c66f2abe0dede9e8abd97f3c1e739", "committedDate": "2021-02-15T18:21:34Z", "message": "ignore a test with encoding problems"}, "afterCommit": {"oid": "b0434ecde1712395f5f258a73a6ad6732a252ada", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/b0434ecde1712395f5f258a73a6ad6732a252ada", "committedDate": "2021-02-15T18:21:59Z", "message": "ignore a test with encoding problems"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0434ecde1712395f5f258a73a6ad6732a252ada", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/b0434ecde1712395f5f258a73a6ad6732a252ada", "committedDate": "2021-02-15T18:21:59Z", "message": "ignore a test with encoding problems"}, "afterCommit": {"oid": "eb8411f81e2813a25761bf2fe27704bfad6163a9", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/eb8411f81e2813a25761bf2fe27704bfad6163a9", "committedDate": "2021-02-20T11:26:42Z", "message": "ignore a test with encoding problems"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb8411f81e2813a25761bf2fe27704bfad6163a9", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/eb8411f81e2813a25761bf2fe27704bfad6163a9", "committedDate": "2021-02-20T11:26:42Z", "message": "ignore a test with encoding problems"}, "afterCommit": {"oid": "4805e6848e65fa99b4aa0de53579d1c8b4036f1b", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4805e6848e65fa99b4aa0de53579d1c8b4036f1b", "committedDate": "2021-03-19T08:54:25Z", "message": "ignore a test with encoding problems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE2MTg4NTY3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/306#pullrequestreview-616188567", "createdAt": "2021-03-19T09:05:30Z", "commit": {"oid": "4805e6848e65fa99b4aa0de53579d1c8b4036f1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c47cc54908d14d3faa6326e62cb8c8add9463df2", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/c47cc54908d14d3faa6326e62cb8c8add9463df2", "committedDate": "2021-03-19T09:14:43Z", "message": "Extract metadata for YouTube, SoundCloud & MediaCCC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8806fb4e6bac52d657b74d8fd35a454456636b34", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8806fb4e6bac52d657b74d8fd35a454456636b34", "committedDate": "2021-03-19T09:14:43Z", "message": "address reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "152221c7fb30dfe27cb5e2b94f99c48e1256db32", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/152221c7fb30dfe27cb5e2b94f99c48e1256db32", "committedDate": "2021-03-19T09:14:43Z", "message": "ignore a test with encoding problems"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4805e6848e65fa99b4aa0de53579d1c8b4036f1b", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4805e6848e65fa99b4aa0de53579d1c8b4036f1b", "committedDate": "2021-03-19T08:54:25Z", "message": "ignore a test with encoding problems"}, "afterCommit": {"oid": "152221c7fb30dfe27cb5e2b94f99c48e1256db32", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/152221c7fb30dfe27cb5e2b94f99c48e1256db32", "committedDate": "2021-03-19T09:14:43Z", "message": "ignore a test with encoding problems"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3991, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}