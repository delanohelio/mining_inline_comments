{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTU0ODQ0", "number": 317, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMjozNFrODyo53g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTowMjo1M1rODzcqWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDI1NTY2OnYy", "diffSide": "RIGHT", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/stream/YoutubeStreamExtractorDefaultTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMjozNFrOGGzg6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxNTo0NVrOGGzn-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4ODY1MA==", "bodyText": "unused", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/317#discussion_r409788650", "createdAt": "2020-04-16T19:12:34Z", "author": {"login": "TobiGr"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/stream/YoutubeStreamExtractorDefaultTest.java", "diffHunk": "@@ -22,6 +22,7 @@\n import java.text.SimpleDateFormat;\n import java.util.Calendar;\n import java.util.List;\n+import java.util.concurrent.TimeUnit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e15de9cac8dbc95eff8244abb14f489222a95fc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MDQ1OA==", "bodyText": "Yup, I used that for getting JSON that nanojson fails to parse without spamming YouTube's servers.\nThis is why we need Checkstyle for NewPipeExtractor as well\u2026", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/317#discussion_r409790458", "createdAt": "2020-04-16T19:15:45Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/stream/YoutubeStreamExtractorDefaultTest.java", "diffHunk": "@@ -22,6 +22,7 @@\n import java.text.SimpleDateFormat;\n import java.util.Calendar;\n import java.util.List;\n+import java.util.concurrent.TimeUnit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4ODY1MA=="}, "originalCommit": {"oid": "5e15de9cac8dbc95eff8244abb14f489222a95fc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjcyMzQ5OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamInfoItemExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxODo1NDoyN1rOGH7duA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOToxOTowMFrOGH7vBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NzQ4MA==", "bodyText": "I don't understand that change.\nApart from that, I don't see how name can be null. I think getTextFromObject() can either return a String or throw a ParsingException.\nSite note: unlike before, getTextFromObject() does not throw an NPE when the JsonObject does not have the expected fields, but returns an empty String, this might be worth of a JDoc comment.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/317#discussion_r410967480", "createdAt": "2020-04-19T18:54:27Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamInfoItemExtractor.java", "diffHunk": "@@ -98,7 +93,7 @@ public String getUrl() throws ParsingException {\n     @Override\n     public String getName() throws ParsingException {\n         String name = getTextFromObject(videoInfo.getObject(\"title\"));\n-        if (name != null && !name.isEmpty()) return name;\n+        if (name == null || !name.isEmpty()) return name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979c5a75029275ebdd206db726d690a11b9d1db0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3MTkxMA==", "bodyText": "This change is indeed an error, and name could indeed not be null. There are probably other usages of getTextFromObject() where that check could be removed as well. I'll do that tomorrow.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/317#discussion_r410971910", "createdAt": "2020-04-19T19:19:00Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamInfoItemExtractor.java", "diffHunk": "@@ -98,7 +93,7 @@ public String getUrl() throws ParsingException {\n     @Override\n     public String getName() throws ParsingException {\n         String name = getTextFromObject(videoInfo.getObject(\"title\"));\n-        if (name != null && !name.isEmpty()) return name;\n+        if (name == null || !name.isEmpty()) return name;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NzQ4MA=="}, "originalCommit": {"oid": "979c5a75029275ebdd206db726d690a11b9d1db0"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjczNTYzOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeMusicSearchExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTowMjo1M1rOGH7jBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxOTowMjo1M1rOGH7jBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2ODgzOA==", "bodyText": "getUrlFromNavigationEndpoint(navigationEndpoint) returns null when navigationEndpoint is an empty Object or YouTube changed something in their JSON. In this case, we could not get the uploader URL and should throw a ParsingException. So please keep the null check for the URL.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/317#discussion_r410968838", "createdAt": "2020-04-19T19:02:53Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeMusicSearchExtractor.java", "diffHunk": "@@ -301,16 +294,7 @@ public String getUploaderUrl() throws ParsingException {\n                                         .getObject(1).getObject(\"musicResponsiveListItemFlexColumnRenderer\")\n                                         .getObject(\"text\").getArray(\"runs\").getObject(0).getObject(\"navigationEndpoint\");\n \n-                                if (navigationEndpoint == null) {\n-                                    return null;\n-                                }\n-\n-                                final String url = getUrlFromNavigationEndpoint(navigationEndpoint);\n-\n-                                if (url != null && !url.isEmpty()) {\n-                                    return url;\n-                                }\n-                                throw new ParsingException(\"Could not get uploader url\");\n+                                return getUrlFromNavigationEndpoint(navigationEndpoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979c5a75029275ebdd206db726d690a11b9d1db0"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2911, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}