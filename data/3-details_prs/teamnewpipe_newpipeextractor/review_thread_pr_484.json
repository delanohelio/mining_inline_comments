{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzI1ODU3", "number": 484, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo1MjoxMVrOFJJXkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo1MzowNFrOFJJXyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTM0OTk0OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo1MjoxMVrOILb5aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo1MjoxMVrOILb5aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjMxMg==", "bodyText": "Why don't you use isYoutubeMusicMixId(playlistId)?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548862312", "createdAt": "2020-12-25T11:52:11Z", "author": {"login": "B0pol"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTM1MDQ4OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo1MzowNFrOILb5qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxNzozMDoxNFrOILd7Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjM3Ng==", "bodyText": "Same, it should use isYoutubeChannelMix here", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548862376", "createdAt": "2020-12-25T11:53:04Z", "author": {"login": "B0pol"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix\n             return playlistId.substring(6);\n \n         } else if (playlistId.startsWith(\"RMCM\")) { //Channel mix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg3NjM1OA==", "bodyText": "Pushed and found an inconsistency (should ave been the other way :D). this line says playlistId.startsWith(\"RMCM\"), but the method for channel mix looks like this:\n``/**\n     * Checks if the given playlist id is a YouTube Channel Mix (auto-generated playlist)\n     * Ids from a YouTube channel Mix start with \"RDCM\"\n     * @return Whether given id belongs to a YouTube Channel Mix\n     */\n    public static boolean isYoutubeChannelMixId(final String playlistId) {\n        return playlistId.startsWith(\"RDCM\");\n    }", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548876358", "createdAt": "2020-12-25T14:03:49Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix\n             return playlistId.substring(6);\n \n         } else if (playlistId.startsWith(\"RMCM\")) { //Channel mix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjM3Ng=="}, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg3NjQyNA==", "bodyText": "CC @XiangRongLin", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548876424", "createdAt": "2020-12-25T14:04:20Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix\n             return playlistId.substring(6);\n \n         } else if (playlistId.startsWith(\"RMCM\")) { //Channel mix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjM3Ng=="}, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDc1Ng==", "bodyText": "@TobiGr yep, that RMCM is wrong, should be RDCM. See the unit test https://github.com/TeamNewPipe/NewPipeExtractor/blob/dev/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeMixPlaylistExtractorTest.java#L306", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548894756", "createdAt": "2020-12-25T17:20:41Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix\n             return playlistId.substring(6);\n \n         } else if (playlistId.startsWith(\"RMCM\")) { //Channel mix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjM3Ng=="}, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NTUxNA==", "bodyText": "thanks for clarifying!", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/484#discussion_r548895514", "createdAt": "2020-12-25T17:30:14Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -229,7 +229,7 @@ public static String extractVideoIdFromMixId(final String playlistId) throws Par\n         if (playlistId.startsWith(\"RDMM\")) { //My Mix\n             return playlistId.substring(4);\n \n-        } else if (playlistId.startsWith(\"RDAMVM\")) { //Music mix\n+        } else if (playlistId.startsWith(\"RDAMVM\") || playlistId.startsWith(\"RDCLAK\")) { //Music mix\n             return playlistId.substring(6);\n \n         } else if (playlistId.startsWith(\"RMCM\")) { //Channel mix", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MjM3Ng=="}, "originalCommit": {"oid": "3033c0b99334489a64c78e042bde3443073f4341"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2793, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}