{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjYzNzU4", "number": 394, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0MDozM1rOEgswKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoxMzoyMFrOExGcAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzIzMTEyOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0MDozM1rOHNpYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0MDozM1rOHNpYdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MTU0MA==", "bodyText": "Return null instead of an empty string, if you found nothing (also remember to add @Nullable to the function)", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/394#discussion_r484071540", "createdAt": "2020-09-06T13:40:33Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "diffHunk": "@@ -46,13 +48,25 @@ public static YoutubeStreamLinkHandlerFactory getInstance() {\n         return instance;\n     }\n \n+    private static String extractId(@Nullable String id) {\n+        if (id != null) {\n+            Matcher m = Pattern.compile(\"([a-zA-Z0-9_-]{11})\").matcher(id);\n+            return m.find() ? m.group(1) : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31129682af923705b99f4c173114b8d5d72a9e54"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzIzNDI0OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0NDoxNlrOHNpaFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0NDoxNlrOHNpaFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MTk1Nw==", "bodyText": "We might consider removing isId() altogether and replacing\nif (isId()) {\n    return extractId()\n}\nwith\nfinal String extractedId = extractId(id);\nif (extractedId != null) {\n    return extractedId;\n}\nwhich does one regex comparison less, and is even clearer imo", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/394#discussion_r484071957", "createdAt": "2020-09-06T13:44:16Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "diffHunk": "@@ -46,13 +48,25 @@ public static YoutubeStreamLinkHandlerFactory getInstance() {\n         return instance;\n     }\n \n+    private static String extractId(@Nullable String id) {\n+        if (id != null) {\n+            Matcher m = Pattern.compile(\"([a-zA-Z0-9_-]{11})\").matcher(id);\n+            return m.find() ? m.group(1) : \"\";\n+        }\n+        return \"\";\n+    }\n+\n     private static boolean isId(@Nullable String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31129682af923705b99f4c173114b8d5d72a9e54"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzIzNTQzOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0NTozNlrOHNpasQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMzo0NTozNlrOHNpasQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MjExMw==", "bodyText": "Move Pattern.compile(\"([a-zA-Z0-9_-]{11})\") to a public static final class field, to prevent compiling it every time.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/394#discussion_r484072113", "createdAt": "2020-09-06T13:45:36Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "diffHunk": "@@ -46,13 +48,25 @@ public static YoutubeStreamLinkHandlerFactory getInstance() {\n         return instance;\n     }\n \n+    private static String extractId(@Nullable String id) {\n+        if (id != null) {\n+            Matcher m = Pattern.compile(\"([a-zA-Z0-9_-]{11})\").matcher(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31129682af923705b99f4c173114b8d5d72a9e54"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDA5OTMyOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzo1MjowM1rOHOn73g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzo1MjowM1rOHOn73g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5NjQxNA==", "bodyText": "Merge this and the above line into\nfinal String possiblyId = extractId(schemeSpecificPart.substring(2));", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/394#discussion_r485096414", "createdAt": "2020-09-08T17:52:03Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "diffHunk": "@@ -82,8 +91,9 @@ public String getId(String urlString) throws ParsingException, IllegalArgumentEx\n                 String schemeSpecificPart = uri.getSchemeSpecificPart();\n                 if (schemeSpecificPart.startsWith(\"//\")) {\n                     final String possiblyId = schemeSpecificPart.substring(2);\n-                    if (isId(possiblyId)) {\n-                        return possiblyId;\n+                    final String extractedId = extractId(possiblyId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29cd72a749bb11bac31ceeeb9a05792175347960"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTIxMTU1OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoxMzoyMFrOHnDYBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoxMzoyMFrOHnDYBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxMTgxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Matcher m = YOUTUBE_VIDEO_ID_REGEX_PATTERN.matcher(id);\n          \n          \n            \n                        final Matcher m = YOUTUBE_VIDEO_ID_REGEX_PATTERN.matcher(id);", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/394#discussion_r510711812", "createdAt": "2020-10-23T08:13:20Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeStreamLinkHandlerFactory.java", "diffHunk": "@@ -46,13 +49,19 @@ public static YoutubeStreamLinkHandlerFactory getInstance() {\n         return instance;\n     }\n \n-    private static boolean isId(@Nullable String id) {\n-        return id != null && id.matches(\"[a-zA-Z0-9_-]{11}\");\n+    @Nullable\n+    private static String extractId(@Nullable final String id) {\n+        if (id != null) {\n+            Matcher m = YOUTUBE_VIDEO_ID_REGEX_PATTERN.matcher(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "995c167fcbca185a86a34d7ed74c9fdb1c0be91e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2753, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}