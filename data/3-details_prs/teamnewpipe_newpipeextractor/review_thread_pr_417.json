{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDMyNDY0", "number": 417, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo1MDoyMlrOE0KZYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo1MDoyMlrOE0KZYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTMxNzQ2OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/DateWrapper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo1MDoyMlrOHrwdVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjozOToyOFrOHr3zJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDc1OQ==", "bodyText": "you should use\nthis(OffsetDateTime.ofInstant(calendar.toInstant(), ZoneOffset.UTC), isApproximation);", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/417#discussion_r515644759", "createdAt": "2020-11-01T16:50:22Z", "author": {"login": "B0pol"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/DateWrapper.java", "diffHunk": "@@ -3,30 +3,61 @@\n import edu.umd.cs.findbugs.annotations.NonNull;\n \n import java.io.Serializable;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n import java.util.Calendar;\n+import java.util.GregorianCalendar;\n \n /**\n- * A wrapper class that provides a field to describe if the date is precise or just an approximation.\n+ * A wrapper class that provides a field to describe if the date/time is precise or just an approximation.\n  */\n public class DateWrapper implements Serializable {\n-    @NonNull private final Calendar date;\n+    @NonNull private final OffsetDateTime offsetDateTime;\n     private final boolean isApproximation;\n \n-    public DateWrapper(@NonNull Calendar date) {\n-        this(date, false);\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar) {\n+        this(calendar, false);\n+    }\n+\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime, boolean)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar, boolean isApproximation) {\n+        offsetDateTime = OffsetDateTime.ofInstant(calendar.toInstant(), ZoneOffset.UTC);\n+        this.isApproximation = isApproximation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcdfe7d939cbf77af50de42d425c67871429d1ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyMjI4Mw==", "bodyText": "Shall I commit this in a separate PR?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/417#discussion_r515722283", "createdAt": "2020-11-02T03:20:06Z", "author": {"login": "Isira-Seneviratne"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/DateWrapper.java", "diffHunk": "@@ -3,30 +3,61 @@\n import edu.umd.cs.findbugs.annotations.NonNull;\n \n import java.io.Serializable;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n import java.util.Calendar;\n+import java.util.GregorianCalendar;\n \n /**\n- * A wrapper class that provides a field to describe if the date is precise or just an approximation.\n+ * A wrapper class that provides a field to describe if the date/time is precise or just an approximation.\n  */\n public class DateWrapper implements Serializable {\n-    @NonNull private final Calendar date;\n+    @NonNull private final OffsetDateTime offsetDateTime;\n     private final boolean isApproximation;\n \n-    public DateWrapper(@NonNull Calendar date) {\n-        this(date, false);\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar) {\n+        this(calendar, false);\n+    }\n+\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime, boolean)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar, boolean isApproximation) {\n+        offsetDateTime = OffsetDateTime.ofInstant(calendar.toInstant(), ZoneOffset.UTC);\n+        this.isApproximation = isApproximation;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDc1OQ=="}, "originalCommit": {"oid": "fcdfe7d939cbf77af50de42d425c67871429d1ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc2NTAyOA==", "bodyText": "That would be ideal, thanks", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/417#discussion_r515765028", "createdAt": "2020-11-02T06:39:28Z", "author": {"login": "B0pol"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/localization/DateWrapper.java", "diffHunk": "@@ -3,30 +3,61 @@\n import edu.umd.cs.findbugs.annotations.NonNull;\n \n import java.io.Serializable;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n import java.util.Calendar;\n+import java.util.GregorianCalendar;\n \n /**\n- * A wrapper class that provides a field to describe if the date is precise or just an approximation.\n+ * A wrapper class that provides a field to describe if the date/time is precise or just an approximation.\n  */\n public class DateWrapper implements Serializable {\n-    @NonNull private final Calendar date;\n+    @NonNull private final OffsetDateTime offsetDateTime;\n     private final boolean isApproximation;\n \n-    public DateWrapper(@NonNull Calendar date) {\n-        this(date, false);\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar) {\n+        this(calendar, false);\n+    }\n+\n+    /**\n+     * @deprecated Use {@link #DateWrapper(OffsetDateTime, boolean)} instead.\n+     */\n+    @Deprecated\n+    public DateWrapper(@NonNull Calendar calendar, boolean isApproximation) {\n+        offsetDateTime = OffsetDateTime.ofInstant(calendar.toInstant(), ZoneOffset.UTC);\n+        this.isApproximation = isApproximation;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDc1OQ=="}, "originalCommit": {"oid": "fcdfe7d939cbf77af50de42d425c67871429d1ec"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2768, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}