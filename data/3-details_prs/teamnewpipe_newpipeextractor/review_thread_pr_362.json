{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTE1MjA4", "number": 362, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNTo1MTo0M1rOEJdZRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNzowOVrOEJdejw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzU0MjQ1OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNTo1MTo0M1rOGp-YAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMDo0NDo0MFrOGqAKjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2Njc1Mg==", "bodyText": "You forgot to remove this", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446666752", "createdAt": "2020-06-28T15:51:43Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "diffHunk": "@@ -181,13 +181,38 @@ public static String removeUTF8BOM(String s) {\n     }\n \n     public static String getBaseUrl(String url) throws ParsingException {\n-        URL uri;\n         try {\n-            uri = stringToURL(url);\n+            final URL uri = stringToURL(url);\n+            return uri.getProtocol() + \"://\" + uri.getAuthority();\n         } catch (MalformedURLException e) {\n+            final String message = e.getMessage();\n+            if (message.startsWith(\"unknown protocol: \")) {\n+                System.out.println(message.substring(18));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY5NjA3OA==", "bodyText": "Ooops ;-)", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446696078", "createdAt": "2020-06-28T20:44:40Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "diffHunk": "@@ -181,13 +181,38 @@ public static String removeUTF8BOM(String s) {\n     }\n \n     public static String getBaseUrl(String url) throws ParsingException {\n-        URL uri;\n         try {\n-            uri = stringToURL(url);\n+            final URL uri = stringToURL(url);\n+            return uri.getProtocol() + \"://\" + uri.getAuthority();\n         } catch (MalformedURLException e) {\n+            final String message = e.getMessage();\n+            if (message.startsWith(\"unknown protocol: \")) {\n+                System.out.println(message.substring(18));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2Njc1Mg=="}, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzU0ODAzOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNTo1ODoyMFrOGp-a3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzowNTo0M1rOGrGL-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2NzQ4NQ==", "bodyText": "I would replace the 18 with \"unknown protocol: \".length(). Since on first view i could not see why it was 18", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446667485", "createdAt": "2020-06-28T15:58:20Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "diffHunk": "@@ -181,13 +181,38 @@ public static String removeUTF8BOM(String s) {\n     }\n \n     public static String getBaseUrl(String url) throws ParsingException {\n-        URL uri;\n         try {\n-            uri = stringToURL(url);\n+            final URL uri = stringToURL(url);\n+            return uri.getProtocol() + \"://\" + uri.getAuthority();\n         } catch (MalformedURLException e) {\n+            final String message = e.getMessage();\n+            if (message.startsWith(\"unknown protocol: \")) {\n+                System.out.println(message.substring(18));\n+                return message.substring(18); // return just the protocol (e.g. vnd.youtube)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY0MzM2Nw==", "bodyText": "I disagree on how to explain what 18 is.\nIf you do this way, you'll create a String object, call a method; all of that is useless. Just let 18 and add // \"unknown protocol\".lenght(), you'll understand too and no object is created for nothing", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r447643367", "createdAt": "2020-06-30T12:28:30Z", "author": {"login": "B0pol"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "diffHunk": "@@ -181,13 +181,38 @@ public static String removeUTF8BOM(String s) {\n     }\n \n     public static String getBaseUrl(String url) throws ParsingException {\n-        URL uri;\n         try {\n-            uri = stringToURL(url);\n+            final URL uri = stringToURL(url);\n+            return uri.getProtocol() + \"://\" + uri.getAuthority();\n         } catch (MalformedURLException e) {\n+            final String message = e.getMessage();\n+            if (message.startsWith(\"unknown protocol: \")) {\n+                System.out.println(message.substring(18));\n+                return message.substring(18); // return just the protocol (e.g. vnd.youtube)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2NzQ4NQ=="}, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0MzMyMg==", "bodyText": "Wouldn't those things be optimized away by the compiler?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r447843322", "createdAt": "2020-06-30T17:05:43Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/utils/Utils.java", "diffHunk": "@@ -181,13 +181,38 @@ public static String removeUTF8BOM(String s) {\n     }\n \n     public static String getBaseUrl(String url) throws ParsingException {\n-        URL uri;\n         try {\n-            uri = stringToURL(url);\n+            final URL uri = stringToURL(url);\n+            return uri.getProtocol() + \"://\" + uri.getAuthority();\n         } catch (MalformedURLException e) {\n+            final String message = e.getMessage();\n+            if (message.startsWith(\"unknown protocol: \")) {\n+                System.out.println(message.substring(18));\n+                return message.substring(18); // return just the protocol (e.g. vnd.youtube)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2NzQ4NQ=="}, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzU1MzczOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/linkhandler/LinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNDoyOVrOGp-dkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNDoyOVrOGp-dkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2ODE3OQ==", "bodyText": "The input parameter shouldn't be reassigned. Especially since with the new checkstyle rules in the NewPipe repo forcing every input parameter to be final.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446668179", "createdAt": "2020-06-28T16:04:29Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/linkhandler/LinkHandlerFactory.java", "diffHunk": "@@ -42,12 +42,30 @@ public String getUrl(String id, String baseUrl) throws ParsingException {\n     // Logic\n     ///////////////////////////////////\n \n+    /**\n+     * Builds a {@link LinkHandler} from a url.<br>\n+     * Be sure to call {@link Utils#followGoogleRedirectIfNeeded(String)} on the url if overriding\n+     * this function.\n+     * @param url the url to extract path and id from\n+     * @return a {@link LinkHandler} complete with information\n+     */\n     public LinkHandler fromUrl(String url) throws ParsingException {\n         if (url == null) throw new IllegalArgumentException(\"url can not be null\");\n+        url = Utils.followGoogleRedirectIfNeeded(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzU1NTAzOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/linkhandler/ListLinkHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNjowNlrOGp-eMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNjowNlrOGp-eMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2ODMzOA==", "bodyText": "Same here, no reassignement", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446668338", "createdAt": "2020-06-28T16:06:06Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/linkhandler/ListLinkHandlerFactory.java", "diffHunk": "@@ -32,7 +32,8 @@ public String getUrl(String id, List<String> contentFilter, String sortFilter, S\n \n     @Override\n     public ListLinkHandler fromUrl(String url) throws ParsingException {\n-        String baseUrl = Utils.getBaseUrl(url);\n+        url = Utils.followGoogleRedirectIfNeeded(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzU1NTk5OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/StreamingService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNzowOVrOGp-epA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNjowNzowOVrOGp-epA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2ODQ1Mg==", "bodyText": "Same here, no reassignement", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/362#discussion_r446668452", "createdAt": "2020-06-28T16:07:09Z", "author": {"login": "XiangRongLin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/StreamingService.java", "diffHunk": "@@ -277,12 +278,13 @@ public CommentsExtractor getCommentsExtractor(String url) throws ExtractionExcep\n      * Figures out where the link is pointing to (a channel, a video, a playlist, etc.)\n      * @param url the url on which it should be decided of which link type it is\n      * @return the link type of url\n-     * @throws ParsingException\n      */\n     public final LinkType getLinkTypeByUrl(String url) throws ParsingException {\n-        LinkHandlerFactory sH = getStreamLHFactory();\n-        LinkHandlerFactory cH = getChannelLHFactory();\n-        LinkHandlerFactory pH = getPlaylistLHFactory();\n+        url = Utils.followGoogleRedirectIfNeeded(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed38b703d06b1d4285f9c17d62c917aa40190e0"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2745, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}