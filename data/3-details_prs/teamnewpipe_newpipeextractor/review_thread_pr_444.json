{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjg2MDg4", "number": 444, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMTo1NFrOEysY_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzozMFrOEysa2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxNTQ5OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMTo1NFrOHpeNtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowOTowOFrOHpx8Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY5NQ==", "bodyText": "This doesn't seem okay to me. That name is string matched against the page contents. You shouldn't change it.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513248695", "createdAt": "2020-10-28T08:11:54Z", "author": {"login": "TheAssassin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -632,7 +632,7 @@ public String getErrorMessage() {\n     private static final String FORMATS = \"formats\";\n     private static final String ADAPTIVE_FORMATS = \"adaptiveFormats\";\n     private static final String HTTPS = \"https:\";\n-    private static final String DEOBFUSCATION_FUNC_NAME = \"decrypt\";\n+    private static final String DEOBFUSCATION_FUNC_NAME = \"deobfuscate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3MTkzNQ==", "bodyText": "No, that name is not string-matched anywhere. It is only used as the name of the JS function that is manually built to then call the other functions inside the player's JS.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513571935", "createdAt": "2020-10-28T16:09:08Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -632,7 +632,7 @@ public String getErrorMessage() {\n     private static final String FORMATS = \"formats\";\n     private static final String ADAPTIVE_FORMATS = \"adaptiveFormats\";\n     private static final String HTTPS = \"https:\";\n-    private static final String DEOBFUSCATION_FUNC_NAME = \"decrypt\";\n+    private static final String DEOBFUSCATION_FUNC_NAME = \"deobfuscate\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY5NQ=="}, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxODE5OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMjo0MlrOHpePXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToyMDoyOVrOHp53uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTExNw==", "bodyText": "Heh, good catch, that \"not\". I'd remove the \"restricted\", though:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Could not load deobfuscation code for YouTube restricted video\", e);\n          \n          \n            \n                                \"Could not load deobfuscation code for YouTube video\", e);", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249117", "createdAt": "2020-10-28T08:12:42Z", "author": {"login": "TheAssassin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -770,7 +770,7 @@ private EmbeddedInfo getEmbeddedInfo() throws ParsingException, ReCaptchaExcepti\n \n         } catch (IOException e) {\n             throw new ParsingException(\n-                    \"Could load deobfuscation code form restricted video for the Youtube service.\", e);\n+                    \"Could not load deobfuscation code for YouTube restricted video\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMTgxNg==", "bodyText": "Oh, yes, this is not only used for restricted videos anymore", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513701816", "createdAt": "2020-10-28T19:20:29Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -770,7 +770,7 @@ private EmbeddedInfo getEmbeddedInfo() throws ParsingException, ReCaptchaExcepti\n \n         } catch (IOException e) {\n             throw new ParsingException(\n-                    \"Could load deobfuscation code form restricted video for the Youtube service.\", e);\n+                    \"Could not load deobfuscation code for YouTube restricted video\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTExNw=="}, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxOTkxOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzoyM1rOHpeQhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToyMjowM1rOHp57Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQxNA==", "bodyText": "Same as above. Pretty sure you may not change this. However, you should consider extracting it into a global constant, too.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249414", "createdAt": "2020-10-28T08:13:23Z", "author": {"login": "TheAssassin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -815,8 +815,8 @@ private String deobfuscateSignature(String obfuscatedSig, String deobfuscationCo\n         final Object result;\n         try {\n             final ScriptableObject scope = context.initSafeStandardObjects();\n-            context.evaluateString(scope, deobfuscationCode, \"decryptionCode\", 1, null);\n-            final Function deobfuscateFunc = (Function) scope.get(\"decrypt\", scope);\n+            context.evaluateString(scope, deobfuscationCode, \"deobfuscationCode\", 1, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMjY5NA==", "bodyText": "\"deobfuscationCode\" is only the name of the JS file to be interpreted, which could be anything and for us has no effect whatsoever on code execution", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513702694", "createdAt": "2020-10-28T19:22:03Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -815,8 +815,8 @@ private String deobfuscateSignature(String obfuscatedSig, String deobfuscationCo\n         final Object result;\n         try {\n             final ScriptableObject scope = context.initSafeStandardObjects();\n-            context.evaluateString(scope, deobfuscationCode, \"decryptionCode\", 1, null);\n-            final Function deobfuscateFunc = (Function) scope.get(\"decrypt\", scope);\n+            context.evaluateString(scope, deobfuscationCode, \"deobfuscationCode\", 1, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQxNA=="}, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkyMDI2OnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzozMFrOHpeQwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzozMFrOHpeQwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQ3NA==", "bodyText": "Good catch.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249474", "createdAt": "2020-10-28T08:13:30Z", "author": {"login": "TheAssassin"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -815,8 +815,8 @@ private String deobfuscateSignature(String obfuscatedSig, String deobfuscationCo\n         final Object result;\n         try {\n             final ScriptableObject scope = context.initSafeStandardObjects();\n-            context.evaluateString(scope, deobfuscationCode, \"decryptionCode\", 1, null);\n-            final Function deobfuscateFunc = (Function) scope.get(\"decrypt\", scope);\n+            context.evaluateString(scope, deobfuscationCode, \"deobfuscationCode\", 1, null);\n+            final Function deobfuscateFunc = (Function) scope.get(DEOBFUSCATION_FUNC_NAME, scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2776, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}