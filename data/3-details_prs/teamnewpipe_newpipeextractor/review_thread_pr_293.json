{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODkxNTk1", "number": 293, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxMjo1MlrODo2mYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxODowNFrODo2sbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY0MTk1OnYy", "diffSide": "RIGHT", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxMjo1MlrOF3qZcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozODoyN1rOF3rMzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMDY0Mg==", "bodyText": "What are you even doing here? getNextPageUrl should always return the same URL, as it's the next page relative to the initial page, see https://github.com/TeamNewPipe/NewPipeExtractor/blob/dev/extractor/src/main/java/org/schabi/newpipe/extractor/ListExtractor.java#L36.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393910642", "createdAt": "2020-03-17T19:12:52Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -229,6 +234,15 @@ public static void setUp() throws Exception {\n         public void testGetPageInNewExtractor() throws Exception {\n             final PlaylistExtractor newExtractor = SoundCloud.getPlaylistExtractor(extractor.getUrl());\n             defaultTestGetPageInNewExtractor(extractor, newExtractor);\n+            String page1 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // there has to be another page\n+            String page2 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // and another one\n+            String page3 = newExtractor.getNextPageUrl();\n+\n+            assertNotEquals(\"Same pages\", page1, page2);\n+            assertNotEquals(\"Same pages\", page2, page3);\n+            assertNotEquals(\"Same pages\", page3, page1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTg5NQ==", "bodyText": "So why did the old extractor do the same thing as I do? Every time getPage was called it overwrote nextPageUrl with the url of the page coming after the one provided as the argument of getPage, thus having the same behaviour as now.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393915895", "createdAt": "2020-03-17T19:23:17Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -229,6 +234,15 @@ public static void setUp() throws Exception {\n         public void testGetPageInNewExtractor() throws Exception {\n             final PlaylistExtractor newExtractor = SoundCloud.getPlaylistExtractor(extractor.getUrl());\n             defaultTestGetPageInNewExtractor(extractor, newExtractor);\n+            String page1 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // there has to be another page\n+            String page2 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // and another one\n+            String page3 = newExtractor.getNextPageUrl();\n+\n+            assertNotEquals(\"Same pages\", page1, page2);\n+            assertNotEquals(\"Same pages\", page2, page3);\n+            assertNotEquals(\"Same pages\", page3, page1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMDY0Mg=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxODczNw==", "bodyText": "I don't know, that would be a bug. YouTube doesn't do it: https://github.com/TeamNewPipe/NewPipeExtractor/blob/dev/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubePlaylistExtractor.java#L81, and YouTube is the 'golden' service implementation.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393918737", "createdAt": "2020-03-17T19:28:38Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -229,6 +234,15 @@ public static void setUp() throws Exception {\n         public void testGetPageInNewExtractor() throws Exception {\n             final PlaylistExtractor newExtractor = SoundCloud.getPlaylistExtractor(extractor.getUrl());\n             defaultTestGetPageInNewExtractor(extractor, newExtractor);\n+            String page1 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // there has to be another page\n+            String page2 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // and another one\n+            String page3 = newExtractor.getNextPageUrl();\n+\n+            assertNotEquals(\"Same pages\", page1, page2);\n+            assertNotEquals(\"Same pages\", page2, page3);\n+            assertNotEquals(\"Same pages\", page3, page1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMDY0Mg=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyMzc5MA==", "bodyText": "Ok, will change this ;-)", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393923790", "createdAt": "2020-03-17T19:38:27Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -229,6 +234,15 @@ public static void setUp() throws Exception {\n         public void testGetPageInNewExtractor() throws Exception {\n             final PlaylistExtractor newExtractor = SoundCloud.getPlaylistExtractor(extractor.getUrl());\n             defaultTestGetPageInNewExtractor(extractor, newExtractor);\n+            String page1 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // there has to be another page\n+            String page2 = newExtractor.getNextPageUrl();\n+            defaultTestMoreItems(newExtractor); // and another one\n+            String page3 = newExtractor.getNextPageUrl();\n+\n+            assertNotEquals(\"Same pages\", page1, page2);\n+            assertNotEquals(\"Same pages\", page2, page3);\n+            assertNotEquals(\"Same pages\", page3, page1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMDY0Mg=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY0NzczOnYy", "diffSide": "LEFT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxNDo0OFrOF3qdRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyMzowNVrOF3qtkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTYyMA==", "bodyText": "Why did you remove the code for better resolution? Does api-v2 return that by default?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393911620", "createdAt": "2020-03-17T19:14:48Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractor.java", "diffHunk": "@@ -64,21 +74,20 @@ public String getThumbnailUrl() {\n             // if it also fails, return null\n             try {\n                 final InfoItemsPage<StreamInfoItem> infoItems = getInitialPage();\n-                if (infoItems.getItems().isEmpty()) return null;\n \n                 for (StreamInfoItem item : infoItems.getItems()) {\n-                    final String thumbnailUrl = item.getThumbnailUrl();\n-                    if (thumbnailUrl == null || thumbnailUrl.isEmpty()) continue;\n-\n-                    String thumbnailUrlBetterResolution = thumbnailUrl.replace(\"large.jpg\", \"crop.jpg\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNDA4MQ==", "bodyText": "I didn't remove it, I just moved it below", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393914081", "createdAt": "2020-03-17T19:19:41Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractor.java", "diffHunk": "@@ -64,21 +74,20 @@ public String getThumbnailUrl() {\n             // if it also fails, return null\n             try {\n                 final InfoItemsPage<StreamInfoItem> infoItems = getInitialPage();\n-                if (infoItems.getItems().isEmpty()) return null;\n \n                 for (StreamInfoItem item : infoItems.getItems()) {\n-                    final String thumbnailUrl = item.getThumbnailUrl();\n-                    if (thumbnailUrl == null || thumbnailUrl.isEmpty()) continue;\n-\n-                    String thumbnailUrlBetterResolution = thumbnailUrl.replace(\"large.jpg\", \"crop.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTYyMA=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTc5NA==", "bodyText": "Sorry for not noticing this, didn't I tell you I was tired?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393915794", "createdAt": "2020-03-17T19:23:05Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractor.java", "diffHunk": "@@ -64,21 +74,20 @@ public String getThumbnailUrl() {\n             // if it also fails, return null\n             try {\n                 final InfoItemsPage<StreamInfoItem> infoItems = getInitialPage();\n-                if (infoItems.getItems().isEmpty()) return null;\n \n                 for (StreamInfoItem item : infoItems.getItems()) {\n-                    final String thumbnailUrl = item.getThumbnailUrl();\n-                    if (thumbnailUrl == null || thumbnailUrl.isEmpty()) continue;\n-\n-                    String thumbnailUrlBetterResolution = thumbnailUrl.replace(\"large.jpg\", \"crop.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTYyMA=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY1MTUyOnYy", "diffSide": "RIGHT", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxNjowM1rOF3qf1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozODo0MVrOF3rNRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMjI3Nw==", "bodyText": "Why did you change this? This test was to check that this playlist indeed doesn't have a next page of items.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393912277", "createdAt": "2020-03-17T19:16:03Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -70,7 +73,9 @@ public void testRelatedItems() throws Exception {\n         }\n \n         @Test\n-        public void testMoreRelatedItems() {\n+        public void testMoreRelatedItems() throws Exception {\n+            defaultTestMoreItems(extractor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNDQwNw==", "bodyText": "Now the first page of items does not contain the 10 items, but only 3 of them", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393914407", "createdAt": "2020-03-17T19:20:22Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -70,7 +73,9 @@ public void testRelatedItems() throws Exception {\n         }\n \n         @Test\n-        public void testMoreRelatedItems() {\n+        public void testMoreRelatedItems() throws Exception {\n+            defaultTestMoreItems(extractor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMjI3Nw=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNjIxNQ==", "bodyText": "Then the lines below should be deleted, however it would be better to change it to a playlist with less than 3 streams.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393916215", "createdAt": "2020-03-17T19:23:48Z", "author": {"login": "wb9688"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -70,7 +73,9 @@ public void testRelatedItems() throws Exception {\n         }\n \n         @Test\n-        public void testMoreRelatedItems() {\n+        public void testMoreRelatedItems() throws Exception {\n+            defaultTestMoreItems(extractor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMjI3Nw=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyMzkxMA==", "bodyText": "Ok, will do", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393923910", "createdAt": "2020-03-17T19:38:41Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudPlaylistExtractorTest.java", "diffHunk": "@@ -70,7 +73,9 @@ public void testRelatedItems() throws Exception {\n         }\n \n         @Test\n-        public void testMoreRelatedItems() {\n+        public void testMoreRelatedItems() throws Exception {\n+            defaultTestMoreItems(extractor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMjI3Nw=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY1NzQxOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxODowNFrOF3qjzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyNjo1NVrOF3q1lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMzI5NQ==", "bodyText": "Why is this change needed? Also, I don't think those additional imports are needed here.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393913295", "createdAt": "2020-03-17T19:18:04Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "diffHunk": "@@ -55,14 +57,14 @@ public String getName() {\n \n     @Nonnull\n     @Override\n-    public String getTextualUploadDate() {\n-        return track.getString(\"created_at\");\n+    public String getTextualUploadDate() throws ParsingException {\n+        return track.getString(\"created_at\").replace(\"T\",\" \").replace(\"Z\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzY5MQ==", "bodyText": "For some reason SoundCloud api-v2 returns upload date in format \"2016-07-31 18:18:07\" instead of \"2016/07/31T18:18:07Z+0000\", so even though getTextualUploadDate should return the scraped date as a fallback, I converted it to a human readable one since it takes no effort and works reliably.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393917691", "createdAt": "2020-03-17T19:26:37Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "diffHunk": "@@ -55,14 +57,14 @@ public String getName() {\n \n     @Nonnull\n     @Override\n-    public String getTextualUploadDate() {\n-        return track.getString(\"created_at\");\n+    public String getTextualUploadDate() throws ParsingException {\n+        return track.getString(\"created_at\").replace(\"T\",\" \").replace(\"Z\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMzI5NQ=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzg0NA==", "bodyText": "Will remove the imports though", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/293#discussion_r393917844", "createdAt": "2020-03-17T19:26:55Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudStreamExtractor.java", "diffHunk": "@@ -55,14 +57,14 @@ public String getName() {\n \n     @Nonnull\n     @Override\n-    public String getTextualUploadDate() {\n-        return track.getString(\"created_at\");\n+    public String getTextualUploadDate() throws ParsingException {\n+        return track.getString(\"created_at\").replace(\"T\",\" \").replace(\"Z\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMzI5NQ=="}, "originalCommit": {"oid": "4389fd3b7b37608be495a17f93e63cf1b6feba8b"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2874, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}