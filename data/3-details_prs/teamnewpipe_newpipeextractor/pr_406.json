{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDM1MDcy", "number": 406, "title": "[YouTube] Fix some decryption exceptions by retrying", "bodyText": "I carefully read the contribution guidelines and agree to them.\n\nBy looking at the HAR from TeamNewPipe/NewPipe#3753 (comment) it seems like YouTube sometimes does not provide the player config object even though it should. In that case the extractor would crash, since it didn't have the needed information to decrypt the signatures. Therefore this PR detects when there is no player config object, and in that case runs the same request again, with at most 3 attempts. This should drastically reduce the number of exceptions caused by YouTube not providing the needed information (e.g. if the probability was 1% before, now it should be 0.0001%. Small, isn't it? ;-) ).\nCloses TeamNewPipe/NewPipe#3753", "createdAt": "2020-10-04T13:38:41Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406", "merged": true, "mergeCommit": {"oid": "527945eadb1c0772895b14ff4fec97faf16ecb93"}, "closed": true, "closedAt": "2020-10-15T20:03:26Z", "author": {"login": "Stypox"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPPX8tABqjM4Mzc1NzM0Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS3X0YAFqTUwOTczNTg0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a00a59f37a5cfb433e8f5ba28a916e4a161e5ed3", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a00a59f37a5cfb433e8f5ba28a916e4a161e5ed3", "committedDate": "2020-10-04T13:30:17Z", "message": "[YouTube] Fix some decryption exceptions by retrying"}, "afterCommit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0f80cb3c99ac66507ee13ffe666f0dab6b449076", "committedDate": "2020-10-04T13:40:35Z", "message": "[YouTube] Fix some decryption exceptions by retrying"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjI2Nzcz", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#pullrequestreview-501626773", "createdAt": "2020-10-04T14:06:37Z", "commit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDowNjozN1rOHcH09Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDowNjozN1rOHcH09Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MDQyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (attempts <= 0) {\n          \n          \n            \n                            if (attempts == 0) {", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r499250421", "createdAt": "2020-10-04T14:06:37Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -647,12 +646,31 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n             final String infoPageResponse = downloader.get(videoInfoUrl, getExtractorLocalization()).responseBody();\n             videoInfoPage.putAll(Parser.compatParseMap(infoPageResponse));\n             playerUrl = info.url;\n+\n         } else {\n-            initialData = initialAjaxJson.getObject(3).getObject(\"response\");\n             ageLimit = NO_AGE_LIMIT;\n+            JsonObject playerConfig;\n+\n+            // sometimes at random YouTube does not provide the player config,\n+            // so just retry the same request three times\n+            int attempts = 2;\n+            while (true) {\n+                playerConfig = initialAjaxJson.getObject(2).getObject(\"player\", null);\n+                if (playerConfig != null) {\n+                    break;\n+                }\n+\n+                if (attempts <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTk2MjM4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#pullrequestreview-506196238", "createdAt": "2020-10-11T16:37:30Z", "commit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxNjozNzozMFrOHfo5PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxNjozNzo1MlrOHfo5Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkzNzkxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ParsingException(\"Could not extract js url from YouTube player config\");\n          \n          \n            \n                        throw new ParsingException(\"Could not extract js URL from YouTube player config\");", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r502937917", "createdAt": "2020-10-11T16:37:30Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -674,36 +692,27 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n         }\n     }\n \n-    private JsonObject getPlayerArgs(JsonObject playerConfig) throws ParsingException {\n-        JsonObject playerArgs;\n-\n+    private JsonObject getPlayerArgs(final JsonObject playerConfig) throws ParsingException {\n         //attempt to load the youtube js player JSON arguments\n-        try {\n-            playerArgs = playerConfig.getObject(\"args\");\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not parse yt player config\", e);\n+        final JsonObject playerArgs = playerConfig.getObject(\"args\", null);\n+        if (playerArgs == null) {\n+            throw new ParsingException(\"Could not extract args from YouTube player config\");\n         }\n-\n         return playerArgs;\n     }\n \n-    private String getPlayerUrl(JsonObject playerConfig) throws ParsingException {\n-        try {\n-            // The Youtube service needs to be initialized by downloading the\n-            // js-Youtube-player. This is done in order to get the algorithm\n-            // for decrypting cryptic signatures inside certain stream urls.\n-            String playerUrl;\n-\n-            JsonObject ytAssets = playerConfig.getObject(\"assets\");\n-            playerUrl = ytAssets.getString(\"js\");\n+    private String getPlayerUrl(final JsonObject playerConfig) throws ParsingException {\n+        // The Youtube service needs to be initialized by downloading the\n+        // js-Youtube-player. This is done in order to get the algorithm\n+        // for decrypting cryptic signatures inside certain stream urls.\n+        final String playerUrl = playerConfig.getObject(\"assets\").getString(\"js\");\n \n-            if (playerUrl.startsWith(\"//\")) {\n-                playerUrl = HTTPS + playerUrl;\n-            }\n-            return playerUrl;\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not load decryption code for the Youtube service.\", e);\n+        if (playerUrl == null) {\n+            throw new ParsingException(\"Could not extract js url from YouTube player config\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkzNzk0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // for decrypting cryptic signatures inside certain stream urls.\n          \n          \n            \n                    // for decrypting cryptic signatures inside certain stream URLs.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r502937942", "createdAt": "2020-10-11T16:37:52Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -674,36 +692,27 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n         }\n     }\n \n-    private JsonObject getPlayerArgs(JsonObject playerConfig) throws ParsingException {\n-        JsonObject playerArgs;\n-\n+    private JsonObject getPlayerArgs(final JsonObject playerConfig) throws ParsingException {\n         //attempt to load the youtube js player JSON arguments\n-        try {\n-            playerArgs = playerConfig.getObject(\"args\");\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not parse yt player config\", e);\n+        final JsonObject playerArgs = playerConfig.getObject(\"args\", null);\n+        if (playerArgs == null) {\n+            throw new ParsingException(\"Could not extract args from YouTube player config\");\n         }\n-\n         return playerArgs;\n     }\n \n-    private String getPlayerUrl(JsonObject playerConfig) throws ParsingException {\n-        try {\n-            // The Youtube service needs to be initialized by downloading the\n-            // js-Youtube-player. This is done in order to get the algorithm\n-            // for decrypting cryptic signatures inside certain stream urls.\n-            String playerUrl;\n-\n-            JsonObject ytAssets = playerConfig.getObject(\"assets\");\n-            playerUrl = ytAssets.getString(\"js\");\n+    private String getPlayerUrl(final JsonObject playerConfig) throws ParsingException {\n+        // The Youtube service needs to be initialized by downloading the\n+        // js-Youtube-player. This is done in order to get the algorithm\n+        // for decrypting cryptic signatures inside certain stream urls.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19e862657a821d133aae38a3011235a584c740cd", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/19e862657a821d133aae38a3011235a584c740cd", "committedDate": "2020-10-15T18:16:44Z", "message": "[YouTube] Fix some decryption exceptions by retrying"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0f80cb3c99ac66507ee13ffe666f0dab6b449076", "committedDate": "2020-10-04T13:40:35Z", "message": "[YouTube] Fix some decryption exceptions by retrying"}, "afterCommit": {"oid": "19e862657a821d133aae38a3011235a584c740cd", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/19e862657a821d133aae38a3011235a584c740cd", "committedDate": "2020-10-15T18:16:44Z", "message": "[YouTube] Fix some decryption exceptions by retrying"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NzM1ODQz", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#pullrequestreview-509735843", "createdAt": "2020-10-15T19:58:41Z", "commit": {"oid": "19e862657a821d133aae38a3011235a584c740cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3949, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}