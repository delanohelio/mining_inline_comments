{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzM4ODc3", "number": 233, "title": "Youtube stream extractor improvements by using playerResponse json", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I did test the API against NewPipe.\n\nSummary\nSome time ago me and @theScrabi agreed that it would be better to extract data using the playerResponse json data, since it is faster to query, less error-prone and less subject to changes.\nSo with this PR the extractor will use playerResponse whenever possible as the first method of obtaining data. Fallback methods based on HTML querying have been kept. In case of error the thrown exception contains the data about the playerResponse failure, that should be clearer than a NPE caused by not-found HTML tags.\nMade error messages more consistant and fixed some related copy-paste mistakes.\nAdded tests for video ratings.\nFunction-specific changes\n\ngetName, getTextualUploadDate, getViewCount, getUploaderName: add playerResponse method as the primary one;\ngetThumbnailUrl: add playerResponse method as the primary one; remove playerArgs method that would never work;\ngetDescription: the HTML-based approach is the only one that provides an HTML-formatted description so it has to be kept as the primary method; add playerResponse method as fallback that provides raw text;\ngetLength: first try to get the length from playerResponse[\"videoDetails\"]\ngetLikeCount, getDislikeCount: assert that ratings are disabled when the button is missing\ngetUploaderUrl: add playerResponse method as the primary one; the returned channel url could be different from the one returned before with music channels, but I don't think this is an issue since YouTube picks one at random, too.\ngetUploaderAvatarUrl: assure @Nonnull is respected;\ngetStreamType: first check inside playerResponse, only if it failed use playerArgs\n\nParsingException vs ExtractionException\nI have a question: what is the difference between ParsingException and ExtractionException? I see that they are used interchangeably in all services, though ParsingException  is used more often.", "createdAt": "2020-01-06T22:20:52Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233", "merged": true, "mergeCommit": {"oid": "b9afc9807cf1948ad262702b2fedf6bb98fa6fef"}, "closed": true, "closedAt": "2020-01-20T22:17:37Z", "author": {"login": "Stypox"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3xkeQgH2gAyMzU5NzM4ODc3OjFlZDg5YWFkM2VmZjcyMjMxYmZlYzZjMGQ4ZDFmY2Y2YjhjMmM4ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8UFAIgFqTM0NTU1MjU5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ed89aad3eff72231bfec6c0d8d1fcf6b8c2c8e8", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1ed89aad3eff72231bfec6c0d8d1fcf6b8c2c8e8", "committedDate": "2020-01-06T19:45:57Z", "message": "Use more often playerResponse in yt stream extractor\n\nThis enhances performance and should make the extractor more reliable since it get info from a stable json structure that shouldn't be subject to many changes. Fallback html methods have been kept. In case of error the thrown exception contains the data about the playerResponse failure, that should be clearer than a NPE caused by not-found html tags."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1689037b0115d440bce5ee5e612ab646cafa496f", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1689037b0115d440bce5ee5e612ab646cafa496f", "committedDate": "2020-01-06T19:49:08Z", "message": "Fix getLength() tests now that the value is rounded (not floor-ed)\n\nIn yt stream extractor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ca02f3f69690b1bab065639db139747a4997b4", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d5ca02f3f69690b1bab065639db139747a4997b4", "committedDate": "2020-01-06T20:41:15Z", "message": " Fix test failing because music channel could be Vevo\n\nIn yt stream extractor test.\nThe Vevo and the normal music channel are equivalent, so Youtube picks one of them at random, and in playerResponse the channel id is Vevo's one."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb6cdee225a8544bdc87311523f4abb859efcd6", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1bb6cdee225a8544bdc87311523f4abb859efcd6", "committedDate": "2020-01-06T20:43:24Z", "message": "Enable commented-out test for yt stream extractor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba04836ebe15268e12c5055d0919d61a8dfe1f4", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/7ba04836ebe15268e12c5055d0919d61a8dfe1f4", "committedDate": "2020-01-06T22:57:08Z", "message": "Add tests for ratings in yt stream extractor tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0567c20549bd6f60ffe41514229a49b251a42937", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0567c20549bd6f60ffe41514229a49b251a42937", "committedDate": "2020-01-06T23:10:06Z", "message": "Merge branch 'dev' into yt-stream-ext"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjgxODQ5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#pullrequestreview-345281849", "createdAt": "2020-01-20T12:42:17Z", "commit": {"oid": "0567c20549bd6f60ffe41514229a49b251a42937"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMjo0MjoxN1rOFfdJzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMjo1NzoyOVrOFfdhdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUyNzgyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return thumbnails.getObject(thumbnails.size()-1).getString(\"url\");\n          \n          \n            \n                        return thumbnails.getObject(thumbnails.size() - 1).getString(\"url\");", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#discussion_r368527822", "createdAt": "2020-01-20T12:42:17Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -149,34 +159,39 @@ public DateWrapper getUploadDate() throws ParsingException {\n     @Override\n     public String getThumbnailUrl() throws ParsingException {\n         assertPageFetched();\n-        // Try to get high resolution thumbnail first, if it fails, use low res from the player instead\n         try {\n-            return doc.select(\"link[itemprop=\\\"thumbnailUrl\\\"]\").first().attr(\"abs:href\");\n-        } catch (Exception ignored) {\n-            // Try other method...\n-        }\n+            JsonArray thumbnails = playerResponse.getObject(\"videoDetails\").getObject(\"thumbnail\").getArray(\"thumbnails\");\n+            // the last thumbnail is the one with the highest resolution\n+            return thumbnails.getObject(thumbnails.size()-1).getString(\"url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0567c20549bd6f60ffe41514229a49b251a42937"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzMzg3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return Math.round(Long.parseLong(durationMs)/1000.0f);\n          \n          \n            \n                            return Math.round(Long.parseLong(durationMs) / 1000f);", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#discussion_r368533879", "createdAt": "2020-01-20T12:57:29Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -269,25 +284,22 @@ public int getAgeLimit() throws ParsingException {\n     public long getLength() throws ParsingException {\n         assertPageFetched();\n \n-        // try getting duration from playerargs\n-        try {\n-            String durationMs = playerResponse\n-                    .getObject(\"streamingData\")\n-                    .getArray(\"formats\")\n-                    .getObject(0)\n-                    .getString(\"approxDurationMs\");\n-            return Long.parseLong(durationMs)/1000;\n-        } catch (Exception e) {\n-        }\n-\n-        //try getting value from age gated video\n         try {\n             String duration = playerResponse\n                     .getObject(\"videoDetails\")\n                     .getString(\"lengthSeconds\");\n             return Long.parseLong(duration);\n         } catch (Exception e) {\n-            throw new ParsingException(\"Every methode to get the duration has failed: \", e);\n+            try {\n+                String durationMs = playerResponse\n+                        .getObject(\"streamingData\")\n+                        .getArray(\"formats\")\n+                        .getObject(0)\n+                        .getString(\"approxDurationMs\");\n+                return Math.round(Long.parseLong(durationMs)/1000.0f);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0567c20549bd6f60ffe41514229a49b251a42937"}, "originalPosition": 136}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1100ef76c2a9cb917759374bc0bc2dddb53c47", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1e1100ef76c2a9cb917759374bc0bc2dddb53c47", "committedDate": "2020-01-20T21:52:36Z", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\nCo-Authored-By: Tobias Groza <TobiGr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfdc4547a41a70caa6b368b7267b68d04531e53", "author": {"user": {"login": "Stypox", "name": "Stypox"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1cfdc4547a41a70caa6b368b7267b68d04531e53", "committedDate": "2020-01-20T21:52:48Z", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\nCo-Authored-By: Tobias Groza <TobiGr@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTUyNTkz", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#pullrequestreview-345552593", "createdAt": "2020-01-20T22:13:57Z", "commit": {"oid": "1cfdc4547a41a70caa6b368b7267b68d04531e53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3970, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}