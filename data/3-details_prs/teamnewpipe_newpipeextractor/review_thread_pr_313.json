{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyODUxOTIy", "number": 313, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMjo0MlrODxmZeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzoxODoyMlrOD4-8Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzM1OTMwOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyMjo0MlrOGFKEoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzoxOTo0N1rOGGDzfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ==", "bodyText": "Use {@link ChannelExtractor} instead", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408061089", "createdAt": "2020-04-14T11:22:42Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5ODcxNg==", "bodyText": "hmm, truth is I just copied the correspond comment from getUploaderUrl. How can I use {@link ChannelExtractor}?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408398716", "createdAt": "2020-04-14T19:59:04Z", "author": {"login": "Royosef"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ=="}, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNjk3Mw==", "bodyText": "@Royosef: Just change the whole <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a> to {@link ChannelExtractor}.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r409006973", "createdAt": "2020-04-15T17:19:47Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ=="}, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzM3NDczOnYy", "diffSide": "RIGHT", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMToyNzozOFrOGFKOKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzoxNzo1OFrOGGDu_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA==", "bodyText": "Should we add a getParentChannelUrl or a getSubchannelUrl here? Same thing for name and avatar URL obviously,\nImho we should add getSubchannelUrl, as currently we return the parent channel's URL, so the values returned by getChannelUrl stays the same. I want someone else's opinion here first though.\nEdit: it looks like you're returning the subchannel's URL here, so that's obviously not correct anyway.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408063530", "createdAt": "2020-04-14T11:27:38Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n+     * this url.\n+     *\n+     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @throws ParsingException\n+     */\n+    @Nonnull\n+    public abstract String getParentChannelUrl() throws ParsingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NjExNQ==", "bodyText": "I'm not really sure myself what will be the right naming. In Peertube it's \"account page\" and \"channel page\", maybe we should do the same?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408396115", "createdAt": "2020-04-14T19:54:30Z", "author": {"login": "Royosef"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n+     * this url.\n+     *\n+     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @throws ParsingException\n+     */\n+    @Nonnull\n+    public abstract String getParentChannelUrl() throws ParsingException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA=="}, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNTgyMg==", "bodyText": "@Royosef: No, just change it to getSubchannelUrl(). We aren't going to call it accounts and channels as that's unclear and only PeerTube calls it that.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r409005822", "createdAt": "2020-04-15T17:17:58Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n+     * this url.\n+     *\n+     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @throws ParsingException\n+     */\n+    @Nonnull\n+    public abstract String getParentChannelUrl() throws ParsingException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA=="}, "originalCommit": {"oid": "48b397567813a8b78a21d47e830e879b49e7036c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDc4MTAzOnYy", "diffSide": "RIGHT", "path": "extractor/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzoxODoyMlrOGP_3vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzoxODoyMlrOGP_3vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyODI4NA==", "bodyText": "This is unrelated to the PR.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r419428284", "createdAt": "2020-05-04T13:18:22Z", "author": {"login": "wb9688"}, "path": "extractor/build.gradle", "diffHunk": "@@ -1,3 +1,6 @@\n+compileJava.options.encoding = \"UTF-8\"\n+compileTestJava.options.encoding = \"UTF-8\"\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc3968f95cd0685871be8b0b4494fd60125768b0"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2905, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}