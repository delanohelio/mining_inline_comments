{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NjQ4NDIz", "number": 440, "title": "Fix redirect channels", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I have tested the API against NewPipe.\n I agree to create a pull request for NewPipe as soon as possible to make it compatible with the changed API.\n\nLeading to \"Could not get channel id\"\nException\n\nUser Action: requested channel\nRequest: https://www.youtube.com/channel/UCITk7Ky4iE5_xISw9IaHqpQ\nContent Country: FR\nContent Language: fr-FR\nApp Language: fr_FR\nService: YouTube\nVersion: 0.20.1\nOS: Linux Android 9 - 28\n\nCrash log \norg.schabi.newpipe.extractor.exceptions.ParsingException: Could not get channel id\n\tat org.schabi.newpipe.extractor.services.youtube.extractors.YoutubeChannelExtractor.getId(YoutubeChannelExtractor.java:133)\n\tat org.schabi.newpipe.extractor.channel.ChannelInfo.getInfo(ChannelInfo.java:60)\n\tat org.schabi.newpipe.extractor.channel.ChannelInfo.getInfo(ChannelInfo.java:48)\n\tat org.schabi.newpipe.util.ExtractorHelper.lambda$getChannelInfo$4(ExtractorHelper.java:124)\n\tat org.schabi.newpipe.util.-$$Lambda$ExtractorHelper$u5W7VszTe8AoEexIsFM9huQfbkM.call(Unknown Source:4)\n\tat io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(SingleFromCallable.java:44)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.single.SingleDoOnSuccess.subscribeActual(SingleDoOnSuccess.java:35)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.maybe.MaybeFromSingle.subscribeActual(MaybeFromSingle.java:41)\n\tat io.reactivex.Maybe.subscribe(Maybe.java:4290)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver.drain(MaybeConcatArray.java:153)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver.request(MaybeConcatArray.java:78)\n\tat io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber.onSubscribe(FlowableElementAtMaybe.java:66)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray.subscribeActual(MaybeConcatArray.java:42)\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\n\tat io.reactivex.internal.operators.flowable.FlowableElementAtMaybe.subscribeActual(FlowableElementAtMaybe.java:36)\n\tat io.reactivex.Maybe.subscribe(Maybe.java:4290)\n\tat io.reactivex.internal.operators.maybe.MaybeToSingle.subscribeActual(MaybeToSingle.java:46)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\n\tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\n\tat java.lang.Thread.run(Thread.java:764)\n\n\n\n\nit's being used in a test", "createdAt": "2020-10-25T19:33:55Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440", "merged": true, "mergeCommit": {"oid": "943334ba497191c1e33f8967a1859dde3057b6fc"}, "closed": true, "closedAt": "2020-10-26T19:00:07Z", "author": {"login": "B0pol"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWX1ragFqTUxNzAwOTk4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWZH-_gFqTUxNzA4NzQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDA5OTg3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#pullrequestreview-517009987", "createdAt": "2020-10-26T17:22:47Z", "commit": {"oid": "852e515aa5fd36b044ab45695ae15500a6101c98"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzoyMjo0N1rOHoaakw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzoyMjo0N1rOHoaakw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzNzg3NQ==", "bodyText": "This test is now actually wrong, since the subscriber count should be ITEM_COUNT_UNKNOWN = -1, not 0, when the subscriber count is hidden, otherwise NewPipe wouldn't know it should hide the subscriber count", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512137875", "createdAt": "2020-10-26T17:22:47Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java", "diffHunk": "@@ -518,9 +518,8 @@ public void testFeedUrl() throws Exception {\n \n         @Test\n         public void testSubscriberCount() throws Exception {\n-            // there is no \"Subscribe\" button\n             long subscribers = extractor.getSubscriberCount();\n-            assertEquals(\"Wrong subscriber count\", -1, subscribers);\n+            assertEquals(\"Wrong subscriber count\", 0, subscribers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852e515aa5fd36b044ab45695ae15500a6101c98"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDM4OTI0", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#pullrequestreview-517038924", "createdAt": "2020-10-26T17:56:47Z", "commit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDM5MzA0", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#pullrequestreview-517039304", "createdAt": "2020-10-26T17:57:14Z", "commit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzo1NzoxNVrOHobzUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzo1NzoxNVrOHobzUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDU5Mg==", "bodyText": "why -1 and not ITEM_COUNT_UNKNOWN?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512160592", "createdAt": "2020-10-26T17:57:15Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java", "diffHunk": "@@ -191,12 +190,7 @@ public long getSubscriberCount() throws ParsingException {\n                 throw new ParsingException(\"Could not get subscriber count\", e);\n             }\n         } else {\n-            // If there's no subscribe button, the channel has the subscriber count disabled\n-            if (c4TabbedHeaderRenderer.has(\"subscribeButton\")) {\n-                return 0;\n-            } else {\n-                return -1;\n-            }\n+            return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDM5NDE5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#pullrequestreview-517039419", "createdAt": "2020-10-26T17:57:22Z", "commit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzo1NzoyMlrOHobzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzo1NzoyMlrOHobzqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDY4Mg==", "bodyText": "Oh, you need to rebase. While rebasing undo this.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512160682", "createdAt": "2020-10-26T17:57:22Z", "author": {"login": "Stypox"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java", "diffHunk": "@@ -518,7 +518,6 @@ public void testFeedUrl() throws Exception {\n \n         @Test\n         public void testSubscriberCount() throws Exception {\n-            // there is no \"Subscribe\" button", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "committedDate": "2020-10-26T18:05:19Z", "message": "fix redirect channels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e98579603412118d022333ba5dd1ce15fbb8fa", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/c1e98579603412118d022333ba5dd1ce15fbb8fa", "committedDate": "2020-10-26T18:06:01Z", "message": "fix subscriber count when subscribe is disabled\n\nfixes #305"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b05a142497c7737bddd291027b6c321b87d2646", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5b05a142497c7737bddd291027b6c321b87d2646", "committedDate": "2020-10-26T17:48:20Z", "message": "fix subscriber count when subscribe is disabled\n\nfixes #305"}, "afterCommit": {"oid": "c1e98579603412118d022333ba5dd1ce15fbb8fa", "author": {"user": {"login": "B0pol", "name": "bopol"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/c1e98579603412118d022333ba5dd1ce15fbb8fa", "committedDate": "2020-10-26T18:06:01Z", "message": "fix subscriber count when subscribe is disabled\n\nfixes #305"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDg3NDc3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#pullrequestreview-517087477", "createdAt": "2020-10-26T18:59:55Z", "commit": {"oid": "c1e98579603412118d022333ba5dd1ce15fbb8fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3954, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}