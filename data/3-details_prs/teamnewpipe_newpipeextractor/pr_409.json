{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNjc4MDEz", "number": 409, "title": "Support short custom YouTube channel URLs", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I have tested the API against NewPipe.\n I agree to create a pull request for NewPipe as soon as possible to make it compatible with the changed API.\n\nWhat is it ?\nfixes TeamNewPipe/NewPipe#3608", "createdAt": "2020-10-09T15:48:16Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409", "merged": true, "mergeCommit": {"oid": "8026304a0a043ea42ef9317a40f327942f8eeb95"}, "closed": true, "closedAt": "2020-10-25T10:43:51Z", "author": {"login": "Bartoshr"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ3mnjgH2gAyNTAwNjc4MDEzOjRlMDQ5OTE3NjJhNmMzZDJhYTRmY2UxMjZlOGVmMTQxYTZiYjBmY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdV9Z77gFqTUxNjM0NTQzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "committedDate": "2020-10-09T15:06:59Z", "message": "Support short custom youtube channel urls"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODEwNDAy", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-505810402", "createdAt": "2020-10-09T16:07:42Z", "commit": {"oid": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjowNzo0M1rOHfQKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjoxOTo1OVrOHfQkrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMjc2OQ==", "bodyText": "There is no need to make this method public", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502532769", "createdAt": "2020-10-09T16:07:43Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,17 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not\n+     */\n+    public boolean isCustomShortChannelUrl(String[] splitPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTQzNw==", "bodyText": "http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare is a stream URL, but is accepted by your regex.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502539437", "createdAt": "2020-10-09T16:19:59Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,17 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not\n+     */\n+    public boolean isCustomShortChannelUrl(String[] splitPath) {\n+        return splitPath.length == 1 && !splitPath[0].matches(\"playlist|watch\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "committedDate": "2020-10-09T17:07:38Z", "message": "Prevent attribution_link urls to be accepted by channel links handler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTMxNzI2", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-506131726", "createdAt": "2020-10-10T23:08:44Z", "commit": {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzowODo0NFrOHfjDXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzoxNzozMFrOHfjF6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjIwNQ==", "bodyText": "I think, we can improve the test cases here (and should also improve the ones for playlists, streams and feeds in an additional PR).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));\n          \n          \n            \n                    // do not accept URLs which are not channels\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/watch?v=jZViOEv90dI&t=100\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/watch_popup?v=uEJuoEs1UxY\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/playlist?list=PLW5y1tjAOzI3orQNF1yGGVL5x-pR2K1d\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/embed/jZViOEv90dI\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/feed/subscriptions?list=PLz8YL4HVC87WJQDzVoY943URKQCsHS9XV\"));", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842205", "createdAt": "2020-10-10T23:08:44Z", "author": {"login": "TobiGr"}, "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelLinkHandlerFactoryTest.java", "diffHunk": "@@ -44,6 +47,8 @@ public void acceptUrlTest() throws ParsingException {\n \n         assertTrue(linkHandler.acceptUrl(\"https://invidio.us/channel/UClq42foiSgl7sSpLupnugGA\"));\n         assertTrue(linkHandler.acceptUrl(\"https://invidio.us/channel/UClq42foiSgl7sSpLupnugGA/videos?disable_polymer=1\"));\n+\n+        assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjgzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Handle custom short channel urls like youtube.com/yourcustomname\n          \n          \n            \n                        // Handle custom short channel URLs like youtube.com/yourcustomname", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842833", "createdAt": "2020-10-10T23:16:59Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -60,14 +72,20 @@ public String getId(String url) throws ParsingException {\n                 throw new ParsingException(\"the URL given is not a Youtube-URL\");\n             }\n \n-            if (!path.startsWith(\"/user/\") && !path.startsWith(\"/channel/\") && !path.startsWith(\"/c/\")) {\n-                throw new ParsingException(\"the URL given is neither a channel nor an user\");\n-            }\n-\n             // remove leading \"/\"\n             path = path.substring(1);\n-\n             String[] splitPath = path.split(\"/\");\n+\n+            // Handle custom short channel urls like youtube.com/yourcustomname", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mjg1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * custom short channel urls like youtube.com/yourcustomname\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param splitPath path segments array\n          \n          \n            \n                 * @return true - if value conform to short channel url, false - not\n          \n          \n            \n                 * custom short channel URLs like youtube.com/yourcustomname\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param splitPath path segments array\n          \n          \n            \n                 * @return true - if value conform to short channel URL, false - not", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842858", "createdAt": "2020-10-10T23:17:30Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d63211a6694c6263bcc02dd4303aa3a4a4e9cbc", "author": {"user": {"login": "Bartoshr", "name": "Bartosz Rumi\u0144ski"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/9d63211a6694c6263bcc02dd4303aa3a4a4e9cbc", "committedDate": "2020-10-12T17:56:53Z", "message": "Fix typos\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7abb4b371381dea969cbd90f2f332e751047d3c3", "author": {"user": {"login": "Bartoshr", "name": "Bartosz Rumi\u0144ski"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/7abb4b371381dea969cbd90f2f332e751047d3c3", "committedDate": "2020-10-12T17:57:45Z", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java\r\n\r\nFix typos\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab1b053d2c8629076c3ac894af1df73916ee36e", "author": {"user": {"login": "Bartoshr", "name": "Bartosz Rumi\u0144ski"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5ab1b053d2c8629076c3ac894af1df73916ee36e", "committedDate": "2020-10-12T18:11:28Z", "message": "Update youtube channel link handler tests\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f996e014a0b0d06f6183bf3ae5a195be2cf6fe", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e3f996e014a0b0d06f6183bf3ae5a195be2cf6fe", "committedDate": "2020-10-12T18:59:56Z", "message": "Exlude links which are not channels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "committedDate": "2020-10-20T18:06:06Z", "message": "Exlude links which are not channels"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NDMxNzY1", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-514431765", "createdAt": "2020-10-22T07:27:29Z", "commit": {"oid": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzoyNzoyOVrOHmUHBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzozNzoxMlrOHmUcKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkzNzQxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean isCustomShortChannelUrl(String[] splitPath) {\n          \n          \n            \n                private boolean isCustomShortChannelUrl(final String[] splitPath) {", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r509937413", "createdAt": "2020-10-22T07:27:29Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(String[] splitPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0MjgyNQ==", "bodyText": "Please compile this regex as a static variable in the class, otherwise it will be compiled every time", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r509942825", "createdAt": "2020-10-22T07:37:12Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(String[] splitPath) {\n+        return splitPath.length == 1 &&\n+          !splitPath[0].matches(\"playlist|watch|attribution_link|watch_popup|embed|feed|select_site\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5", "committedDate": "2020-10-22T18:13:29Z", "message": "Use static regex pattern for excluded path segments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzExNjYw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-515711660", "createdAt": "2020-10-23T14:19:27Z", "commit": {"oid": "0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDoxOToyN1rOHnP6PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDoxOToyN1rOHnP6PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxNzE4MA==", "bodyText": "Please move this up to the other class attribute", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r510917180", "createdAt": "2020-10-23T14:19:27Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,26 +50,47 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+\n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(final String[] splitPath) {\n+        return splitPath.length == 1 && !excludedSegments.matcher(splitPath[0]).matches();\n+    }\n+\n+  private static final Pattern excludedSegments =\n+    Pattern.compile(\"playlist|watch|attribution_link|watch_popup|embed|feed|select_site\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29695aed0a295f7bf84fea435a7dfd304989fcd2", "author": {"user": null}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/29695aed0a295f7bf84fea435a7dfd304989fcd2", "committedDate": "2020-10-23T14:42:30Z", "message": "Small field refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1ODYyMTI2", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-515862126", "createdAt": "2020-10-23T17:19:56Z", "commit": {"oid": "29695aed0a295f7bf84fea435a7dfd304989fcd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzQ1NDMy", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#pullrequestreview-516345432", "createdAt": "2020-10-25T10:42:11Z", "commit": {"oid": "29695aed0a295f7bf84fea435a7dfd304989fcd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3950, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}