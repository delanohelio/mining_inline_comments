{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMDcyMjY0", "number": 410, "title": "Fix parsing Soundcloud tracks that contain the term 'sets'", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I have tested the API against NewPipe.\n I agree to create a pull request for NewPipe as soon as possible to make it compatible with the changed API.\n\nIn the current builds of newpipe, if a track contained the term sets in their url, regardless of position, it would be treated as a playlist, causing a ParsingException.\nOn the assumption that all sets on the soundcloud URL scheme that playlist sets are always within slashes, this should provide an adequate solution\nBefore the change, the following Exception would be displayed\nException\n\nUser Action: requested stream\nRequest: https://soundcloud.com/armadamusic/armin-van-buuren-a-state-of-trance-650-warm-up-sets-out-now\nContent Country: AU\nContent Language: en-AU\nApp Language: en_AU\nService: SoundCloud\nVersion: 0.20.0\nOS: Linux Android 8.1.0 - 27\n\nCrash log \norg.schabi.newpipe.extractor.exceptions.ParsingException: failed to find pattern \"\"uri\":\\s*\"https:\\/\\/api\\.soundcloud\\.com\\/playlists\\/((\\d)*?)\"\n\tat org.schabi.newpipe.extractor.services.soundcloud.linkHandler.SoundcloudStreamLinkHandlerFactory.getId(SoundcloudStreamLinkHandlerFactory.java:37)\n\tat org.schabi.newpipe.extractor.linkhandler.LinkHandlerFactory.fromUrl(LinkHandlerFactory.java:57)\n\tat org.schabi.newpipe.extractor.linkhandler.LinkHandlerFactory.fromUrl(LinkHandlerFactory.java:48)\n\tat org.schabi.newpipe.extractor.StreamingService.getStreamExtractor(StreamingService.java:261)\n\tat org.schabi.newpipe.extractor.stream.StreamInfo.getInfo(StreamInfo.java:64)\n\tat org.schabi.newpipe.util.ExtractorHelper.lambda$getStreamInfo$3(ExtractorHelper.java:116)\n\tat org.schabi.newpipe.util.-$$Lambda$ExtractorHelper$5fJcha6Sq5APJBLdG6osaJby-mc.call(Unknown Source:4)\n\tat io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(SingleFromCallable.java:44)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.single.SingleDoOnSuccess.subscribeActual(SingleDoOnSuccess.java:35)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.maybe.MaybeFromSingle.subscribeActual(MaybeFromSingle.java:41)\n\tat io.reactivex.Maybe.subscribe(Maybe.java:4290)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver.drain(MaybeConcatArray.java:153)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver.request(MaybeConcatArray.java:78)\n\tat io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber.onSubscribe(FlowableElementAtMaybe.java:66)\n\tat io.reactivex.internal.operators.maybe.MaybeConcatArray.subscribeActual(MaybeConcatArray.java:42)\n\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\n\tat io.reactivex.internal.operators.flowable.FlowableElementAtMaybe.subscribeActual(FlowableElementAtMaybe.java:36)\n\tat io.reactivex.Maybe.subscribe(Maybe.java:4290)\n\tat io.reactivex.internal.operators.maybe.MaybeToSingle.subscribeActual(MaybeToSingle.java:46)\n\tat io.reactivex.Single.subscribe(Single.java:3666)\n\tat io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\n\tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\n\tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\n\tat java.lang.Thread.run(Thread.java:764)\nCaused by: org.schabi.newpipe.extractor.utils.Parser$RegexException: failed to find pattern \"\"uri\":\\s*\"https:\\/\\/api\\.soundcloud\\.com\\/playlists\\/((\\d)*?)\"\n\tat org.schabi.newpipe.extractor.utils.Parser.matchGroup(Parser.java:72)\n\tat org.schabi.newpipe.extractor.utils.Parser.matchGroup(Parser.java:61)\n\tat org.schabi.newpipe.extractor.utils.Parser.matchGroup1(Parser.java:52)\n\tat org.schabi.newpipe.extractor.services.soundcloud.SoundcloudParsingHelper.resolveIdWithEmbedPlayer(SoundcloudParsingHelper.java:157)\n\tat org.schabi.newpipe.extractor.services.soundcloud.linkHandler.SoundcloudStreamLinkHandlerFactory.getId(SoundcloudStreamLinkHandlerFactory.java:35)\n\t... 30 more\n\n\n\n\nand now the given URL is parsed correctly", "createdAt": "2020-10-11T03:30:24Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410", "merged": true, "mergeCommit": {"oid": "6cc50b57e3e19cccd87bb55f7dee8607d2fefc1c"}, "closed": true, "closedAt": "2020-10-31T20:43:21Z", "author": {"login": "Scrxtchy"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRdDGjgFqTUwNjE2NjgyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYBl_SgFqTUyMTE2ODM0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY2ODIw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-506166820", "createdAt": "2020-10-11T10:44:35Z", "commit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTcyOTcw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-506172970", "createdAt": "2020-10-11T12:06:07Z", "commit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Mjg4Mjgx", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-508288281", "createdAt": "2020-10-14T12:24:38Z", "commit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MDU5NzQ0", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-509059744", "createdAt": "2020-10-15T06:41:31Z", "commit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0MTozMVrOHhzlAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0MTozMVrOHhzlAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxMDExMw==", "bodyText": "Actually I think I was wrong above and that this should be changed to url.contains(\"/sets/\") && !url.endsWith(\"/sets\") && !url.endsWith(\"/sets/\") so that it only doesn't get soundcloud.com/artist/sets URLs, while e.g. soundcloud.com/artist/track-ending-with-sets still works.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#discussion_r505210113", "createdAt": "2020-10-15T06:41:31Z", "author": {"login": "wb9688"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/SoundcloudParsingHelper.java", "diffHunk": "@@ -153,7 +153,7 @@ public static String resolveIdWithEmbedPlayer(String url) throws IOException, Re\n         String response = NewPipe.getDownloader().get(\"https://w.soundcloud.com/player/?url=\"\n                 + URLEncoder.encode(url, \"UTF-8\"), SoundCloud.getLocalization()).responseBody();\n         // handle playlists / sets different and get playlist id via uir field in JSON\n-        if (url.contains(\"sets\") && !url.endsWith(\"sets\") && !url.endsWith(\"sets/\"))\n+        if (url.contains(\"/sets/\") && !url.endsWith(\"sets\") && !url.endsWith(\"sets/\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "313720fe37e6ddea33b4770f51be99c7db525475", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/313720fe37e6ddea33b4770f51be99c7db525475", "committedDate": "2020-10-11T03:12:38Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}, "afterCommit": {"oid": "ba8eaaf80e913bb6d61787eb12deba6818e439f3", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ba8eaaf80e913bb6d61787eb12deba6818e439f3", "committedDate": "2020-10-15T07:01:43Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba8eaaf80e913bb6d61787eb12deba6818e439f3", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ba8eaaf80e913bb6d61787eb12deba6818e439f3", "committedDate": "2020-10-15T07:01:43Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}, "afterCommit": {"oid": "f803558d1d3c87f9cefcbec2819615721d71d05a", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/f803558d1d3c87f9cefcbec2819615721d71d05a", "committedDate": "2020-10-16T08:42:31Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDc3MTk5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-517077199", "createdAt": "2020-10-26T18:46:00Z", "commit": {"oid": "f803558d1d3c87f9cefcbec2819615721d71d05a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODo0NjowMFrOHododw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODo0NjowMFrOHododw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE5MDU4Mw==", "bodyText": "Why not moving this inside resolveIdWithEmbedPlayer?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#discussion_r512190583", "createdAt": "2020-10-26T18:46:00Z", "author": {"login": "Stypox"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/soundcloud/linkHandler/SoundcloudChannelLinkHandlerFactory.java", "diffHunk": "@@ -21,6 +21,8 @@ public static SoundcloudChannelLinkHandlerFactory getInstance() {\n     @Override\n     public String getId(String url) throws ParsingException {\n         Utils.checkUrl(URL_PATTERN, url);\n+        // Remove the tailing slash from URLs due to issues with the SoundCloud API\n+        if (url.charAt(url.length() -1) == '/') url = url.substring(0, url.length()-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f803558d1d3c87f9cefcbec2819615721d71d05a"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f803558d1d3c87f9cefcbec2819615721d71d05a", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/f803558d1d3c87f9cefcbec2819615721d71d05a", "committedDate": "2020-10-16T08:42:31Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}, "afterCommit": {"oid": "687d321584188809cbefa9e1c73828a541b5dc85", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/687d321584188809cbefa9e1c73828a541b5dc85", "committedDate": "2020-10-26T22:50:17Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3Mzg0MTY5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-517384169", "createdAt": "2020-10-27T06:37:42Z", "commit": {"oid": "687d321584188809cbefa9e1c73828a541b5dc85"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "687d321584188809cbefa9e1c73828a541b5dc85", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/687d321584188809cbefa9e1c73828a541b5dc85", "committedDate": "2020-10-26T22:50:17Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}, "afterCommit": {"oid": "56a6b7c42c23e1e3eddd2ee0640488df7ec7e19b", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/56a6b7c42c23e1e3eddd2ee0640488df7ec7e19b", "committedDate": "2020-10-27T10:00:33Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "947ce3ee10d3a68947cfd7f3a3df6196f8414174", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/947ce3ee10d3a68947cfd7f3a3df6196f8414174", "committedDate": "2020-10-27T20:55:02Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56a6b7c42c23e1e3eddd2ee0640488df7ec7e19b", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/56a6b7c42c23e1e3eddd2ee0640488df7ec7e19b", "committedDate": "2020-10-27T10:00:33Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}, "afterCommit": {"oid": "947ce3ee10d3a68947cfd7f3a3df6196f8414174", "author": {"user": {"login": "Scrxtchy", "name": "Scratch"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/947ce3ee10d3a68947cfd7f3a3df6196f8414174", "committedDate": "2020-10-27T20:55:02Z", "message": "Fix parsing Soundcloud tracks that contain the term 'sets'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY4MzQx", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/410#pullrequestreview-521168341", "createdAt": "2020-10-31T20:42:49Z", "commit": {"oid": "947ce3ee10d3a68947cfd7f3a3df6196f8414174"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3951, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}