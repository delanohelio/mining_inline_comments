{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2ODQzOTU4", "number": 479, "title": "Extract stream segments for YouTube", "bodyText": "I carefully read the contribution guidelines and agree to them.\n I have tested the API against NewPipe.\n I agree to create a pull request for NewPipe as soon as possible to make it compatible with the changed API.\n\nThis PR extracts the stream segments data provided by YouTube and makes them accessible inside StreamInfo. Other services which don't support this data return an empty list when trying getting them. This also applies to streams in YouTube which aren't divided by the uploader.\n\n    \n        Video chapters of a longer stream (desktop version)\n        \n    \n\nThe added data class StreamSegment contains the following data:\n\nString title:  Title of the chapter set by the uploader\nint startTimeSeconds: Starting point of the chapter in seconds\nString url: Direct link to the segment (...?t=)\nString previewUrl: Url to the image at the start position\n\nTest against NewPipe\nDemo video in NewPipe's player: https://streamable.com/e/3e27wa\nDebug app: app-debug-segments-20201212.zip", "createdAt": "2020-12-11T12:03:07Z", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479", "merged": true, "mergeCommit": {"oid": "22a415156ffaaad00fce103241dbe9cd74070bd2"}, "closed": true, "closedAt": "2020-12-19T10:12:22Z", "author": {"login": "vkay94"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlIizIgFqTU1MDEyNzU5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnp6yWAFqTU1NTkzMTcyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTI3NTkw", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#pullrequestreview-550127590", "createdAt": "2020-12-11T14:08:26Z", "commit": {"oid": "c10100f290252296d5a1883f310e81362cbdadfd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowODoyNlrOID6Tfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDowODoyNlrOID6Tfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk3MTkwMw==", "bodyText": "Throwing Exceptions is expensive, because generating the tree of calls can take some time. Please invert the if statement as you are ignoring the thrown Exception anyway.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#discussion_r540971903", "createdAt": "2020-12-11T14:08:26Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -1061,4 +1062,54 @@ public Locale getLanguageInfo() {\n     public String getSupportInfo() {\n         return \"\";\n     }\n+\n+    @Nonnull\n+    @Override\n+    public List<StreamSegment> getStreamSegments() {\n+        final ArrayList<StreamSegment> segments = new ArrayList<>();\n+        try {\n+            final JsonArray panels = initialData.getArray(\"engagementPanels\");\n+            JsonArray segmentArray = null;\n+\n+            // Search for correct JsonObject containing the data => panelIdentifier == engagement-panel-macro-markers\n+            for (int i = 0; i < panels.size(); i++) {\n+                if (panels.getObject(i).getObject(\"engagementPanelSectionListRenderer\")\n+                        .getString(\"panelIdentifier\").equals(\"engagement-panel-macro-markers\")) {\n+                    segmentArray = panels.getObject(i).getObject(\"engagementPanelSectionListRenderer\")\n+                            .getObject(\"content\").getObject(\"macroMarkersListRenderer\").getArray(\"contents\");\n+                    break;\n+                }\n+            }\n+\n+            if (segmentArray == null) {\n+                throw new Exception(\"Couldn't find valid segments\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10100f290252296d5a1883f310e81362cbdadfd"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjEyNTYy", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#pullrequestreview-550612562", "createdAt": "2020-12-11T22:14:05Z", "commit": {"oid": "34642c228ee84e771726d0cd4502f2d873a17b67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjoxNDowNVrOIERfFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjoxNDowNVrOIERfFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM1MTcwMQ==", "bodyText": "why do you ignore all exceptions?", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#discussion_r541351701", "createdAt": "2020-12-11T22:14:05Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -1061,4 +1062,54 @@ public Locale getLanguageInfo() {\n     public String getSupportInfo() {\n         return \"\";\n     }\n+\n+    @Nonnull\n+    @Override\n+    public List<StreamSegment> getStreamSegments() {\n+        final ArrayList<StreamSegment> segments = new ArrayList<>();\n+        try {\n+            final JsonArray panels = initialData.getArray(\"engagementPanels\");\n+            JsonArray segmentArray = null;\n+\n+            // Search for correct JsonObject containing the data => panelIdentifier == engagement-panel-macro-markers\n+            for (int i = 0; i < panels.size(); i++) {\n+                if (panels.getObject(i).getObject(\"engagementPanelSectionListRenderer\")\n+                        .getString(\"panelIdentifier\").equals(\"engagement-panel-macro-markers\")) {\n+                    segmentArray = panels.getObject(i).getObject(\"engagementPanelSectionListRenderer\")\n+                            .getObject(\"content\").getObject(\"macroMarkersListRenderer\").getArray(\"contents\");\n+                    break;\n+                }\n+            }\n+\n+            if (segmentArray != null) {\n+                final long duration = getLength();\n+\n+                for (final Object object : segmentArray) {\n+                    final JsonObject segmentJson = ((JsonObject) object).getObject(\"macroMarkersListItemRenderer\");\n+\n+                    final int startTimeSeconds = segmentJson.getObject(\"onTap\").getObject(\"watchEndpoint\")\n+                            .getInt(\"startTimeSeconds\", -1);\n+\n+                    if (startTimeSeconds > duration) {\n+                        // Rarely there are streams which show a greater length in the search results\n+                        // than it's parsed on the details page, so ignore invalid segments set by uploader.\n+                        break;\n+                    }\n+\n+                    final String title = getTextFromObject(segmentJson.getObject(\"title\"));\n+                    final JsonArray previewsArray = segmentJson.getObject(\"thumbnail\").getArray(\"thumbnails\");\n+\n+                    final StreamSegment segment = new StreamSegment(title, startTimeSeconds);\n+                    if (!previewsArray.isEmpty()) {\n+                        // Assume that the thumbnail with the highest resolution is at the last position\n+                        segment.setPreviewUrl(previewsArray.getObject(previewsArray.size() - 1).getString(\"url\"));\n+                    }\n+                    segment.setUrl(getUrl() + \"?t=\" + startTimeSeconds);\n+                    segments.add(segment);\n+                }\n+            }\n+        } catch (Exception ignored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34642c228ee84e771726d0cd4502f2d873a17b67"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3eea4f4be1acd721047ffbe1e3eff16244fc857", "author": {"user": {"login": "vkay94", "name": "Viktor K"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d3eea4f4be1acd721047ffbe1e3eff16244fc857", "committedDate": "2020-12-12T09:24:29Z", "message": "Add stream segments to StreamInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a7a224a545e0dd5036b14e7e7a83e923be03d6a", "author": {"user": {"login": "vkay94", "name": "Viktor K"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/9a7a224a545e0dd5036b14e7e7a83e923be03d6a", "committedDate": "2020-12-12T09:24:55Z", "message": "Add tests for stream segments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34642c228ee84e771726d0cd4502f2d873a17b67", "author": {"user": {"login": "vkay94", "name": "Viktor K"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/34642c228ee84e771726d0cd4502f2d873a17b67", "committedDate": "2020-12-11T15:01:02Z", "message": "Stream segments: Remove exception throwing"}, "afterCommit": {"oid": "9a7a224a545e0dd5036b14e7e7a83e923be03d6a", "author": {"user": {"login": "vkay94", "name": "Viktor K"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/9a7a224a545e0dd5036b14e7e7a83e923be03d6a", "committedDate": "2020-12-12T09:24:55Z", "message": "Add tests for stream segments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzE2NDUz", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#pullrequestreview-550716453", "createdAt": "2020-12-12T12:36:33Z", "commit": {"oid": "9a7a224a545e0dd5036b14e7e7a83e923be03d6a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjozNjozM1rOIEes3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjozNjozM1rOIEes3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2ODIyMw==", "bodyText": "this looks YouTube specific and should therefore be moved from within the function to the function call.", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#discussion_r541568223", "createdAt": "2020-12-12T12:36:33Z", "author": {"login": "TobiGr"}, "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamSegment.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.schabi.newpipe.extractor.stream;\n+\n+\n+import javax.annotation.Nullable;\n+import java.io.Serializable;\n+\n+public class StreamSegment implements Serializable {\n+    /**\n+     * Title of this segment\n+     */\n+    private String title;\n+\n+    /**\n+     * Timestamp of the starting point in seconds\n+     */\n+    private int startTimeSeconds;\n+\n+    /**\n+     * Direct url to this segment. This can be null if the service doesn't provide such function.\n+     */\n+    @Nullable\n+    public String url;\n+\n+    /**\n+     * Preview url for this segment. This can be null if the service doesn't provide such function\n+     * or there is no resource found.\n+     */\n+    @Nullable\n+    private String previewUrl = null;\n+\n+    public StreamSegment(String title, int startTimeSeconds) {\n+        this.title = title;\n+        this.startTimeSeconds = startTimeSeconds;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(final String title) {\n+        this.title = title;\n+    }\n+\n+    public int getStartTimeSeconds() {\n+        return startTimeSeconds;\n+    }\n+\n+    public void setStartTimeSeconds(final int startTimeSeconds) {\n+        this.startTimeSeconds = startTimeSeconds;\n+    }\n+\n+    @Nullable\n+    public String getUrl() {\n+        return url;\n+    }\n+\n+    public void setUrl(@Nullable final String url) {\n+        this.url = url;\n+    }\n+\n+    @Nullable\n+    public String getPreviewUrl() {\n+        return previewUrl;\n+    }\n+\n+    public void setPreviewUrl(@Nullable final String previewUrl) {\n+        this.previewUrl = previewUrl.replaceAll(\"\\\\u0026\", \"&\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a7a224a545e0dd5036b14e7e7a83e923be03d6a"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba27b39af2a5e19cc9ecd0f813fe1f7de072c86", "author": {"user": {"login": "vkay94", "name": "Viktor K"}}, "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/2ba27b39af2a5e19cc9ecd0f813fe1f7de072c86", "committedDate": "2020-12-12T14:00:45Z", "message": "Stream segments: Remove replaceAll from setPreviewUrl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTMxNzIx", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/479#pullrequestreview-555931721", "createdAt": "2020-12-19T10:10:36Z", "commit": {"oid": "2ba27b39af2a5e19cc9ecd0f813fe1f7de072c86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3959, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}