{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjkxMDU0", "number": 3160, "title": "DB-9012 Flatten half outer joins", "bodyText": "", "createdAt": "2020-01-27T20:35:50Z", "url": "https://github.com/splicemachine/spliceengine/pull/3160", "merged": true, "mergeCommit": {"oid": "b2c63ce64c70cf536606fbfcc4a89decff791992"}, "closed": true, "closedAt": "2020-01-30T04:43:11Z", "author": {"login": "yxia92"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-i4qnAH2gAyMzY3NjkxMDU0OmU5YzVhNGJjNzc1NmUzZTAwYmMxMmQ3NWVmNzQzNjFhODA1MDhmZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_S-aMgH2gAyMzY3NjkxMDU0OmZmMmYyZWVkZjcyMzMxMTU3ZmM1MjlmYjg3MDAzMGQ5NTNlOTFjMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd", "author": {"user": {"login": "yxia92", "name": "Yi Xia"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e9c5a4bc7756e3e00bc12d75ef74361a80508fdd", "committedDate": "2020-01-27T20:36:54Z", "message": "DB-9012 Flatten half outer joins"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "786e9bbdfe82187d771792f02be5005052bc55d7", "author": {"user": {"login": "yxia92", "name": "Yi Xia"}}, "url": "https://github.com/splicemachine/spliceengine/commit/786e9bbdfe82187d771792f02be5005052bc55d7", "committedDate": "2020-01-27T19:58:48Z", "message": "DB-9012 Flatten half outer joins"}, "afterCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd", "author": {"user": {"login": "yxia92", "name": "Yi Xia"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e9c5a4bc7756e3e00bc12d75ef74361a80508fdd", "committedDate": "2020-01-27T20:36:54Z", "message": "DB-9012 Flatten half outer joins"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTIyODM0", "url": "https://github.com/splicemachine/spliceengine/pull/3160#pullrequestreview-349122834", "createdAt": "2020-01-28T04:23:04Z", "commit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5Mjg1NjE1", "url": "https://github.com/splicemachine/spliceengine/pull/3160#pullrequestreview-349285615", "createdAt": "2020-01-28T10:55:48Z", "commit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDo1NTo0OFrOFig0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDo1OToxM1rOFig65g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMzU4NQ==", "bodyText": "Minor nitpick, but can you rename this field so it doesn't start with an upper case letter? By convention that's reserved for classes. I think outerJoinLevel is not much more verbose", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r371733585", "createdAt": "2020-01-28T10:55:48Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromTable.java", "diffHunk": "@@ -123,6 +123,12 @@\n      * SSQ join related variables\n      */\n     public boolean fromSSQ;\n+\n+    /* variable tracking the info of a FromTable node flattened from a HalfJoinNode.\n+     * if OJLevel = 0, the table is free to join with other tables in the FromList, if OJLevel > 0, it can only\n+     * join with its left table indicated in the dependencyMap */\n+    protected int OJLevel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNTI3MA==", "bodyText": "Same here", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r371735270", "createdAt": "2020-01-28T10:59:13Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java", "diffHunk": "@@ -67,6 +67,8 @@\n     protected boolean isQualifier;\n     // Whether this is full outer join predicate\n     protected boolean  forFullJoin;\n+    // indicate whether the predicate is from the ON cluase of a particular half outer join\n+    protected int OJLevel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODkwOTk2", "url": "https://github.com/splicemachine/spliceengine/pull/3160#pullrequestreview-349890996", "createdAt": "2020-01-29T06:51:14Z", "commit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo1MToxNVrOFi-HAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo1MToxNVrOFi-HAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxMzUwNw==", "bodyText": "Can you expand on the \"why\" for this?  \"To stay safe\" is a bit more nebulous than \"if we push this to the right side of the outer join, there's a chance for incorrect results or bad performance because we're postponing excluding matches.  No need to hold up the review for this, but if you're changing other things anyway", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372213507", "createdAt": "2020-01-29T06:51:15Z", "author": {"login": "carolp-503"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromList.java", "diffHunk": "@@ -700,6 +703,10 @@ void pushPredicates(PredicateList predicateList) throws StandardException{\n         int size=size();\n         for(int index=0;index<size;index++){\n             FromTable fromTable=(FromTable)elementAt(index);\n+            // to stay safe, we will not push where clause condition(including flattened outer join", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDQ3MDI1", "url": "https://github.com/splicemachine/spliceengine/pull/3160#pullrequestreview-350047025", "createdAt": "2020-01-29T11:47:55Z", "commit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0Nzo1NVrOFjFpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjoxMTo1NFrOFjGRkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNzA0Mg==", "bodyText": "outerJoinFatteningDisabled -> outerJoinFlatteningDisabled", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372337042", "createdAt": "2020-01-29T11:47:55Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java", "diffHunk": "@@ -564,6 +564,19 @@ else if (nativeSparkAggregationModeString.equals(\"forced\"))\n             }\n             cc.setCurrentTimestampPrecision(currentTimestampPrecision);\n \n+            String outerJoinFlatteningDisabledString =\n+                    PropertyUtil.getCachedDatabaseProperty(lcc, Property.OUTERJOIN_FLATTENING_DISABLED);\n+            boolean outerJoinFatteningDisabled = CompilerContext.DEFAULT_OUTERJOIN_FLATTENING_DISABLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzOTcwOQ==", "bodyText": "Boolean.valueOf does not throw an exception as far as I know.\nIt returns\n       ((s != null) && s.equalsIgnoreCase(\"true\"));\nSo you can remove the try catch", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372339709", "createdAt": "2020-01-29T11:54:16Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java", "diffHunk": "@@ -564,6 +564,19 @@ else if (nativeSparkAggregationModeString.equals(\"forced\"))\n             }\n             cc.setCurrentTimestampPrecision(currentTimestampPrecision);\n \n+            String outerJoinFlatteningDisabledString =\n+                    PropertyUtil.getCachedDatabaseProperty(lcc, Property.OUTERJOIN_FLATTENING_DISABLED);\n+            boolean outerJoinFatteningDisabled = CompilerContext.DEFAULT_OUTERJOIN_FLATTENING_DISABLED;\n+            try {\n+                if (outerJoinFlatteningDisabledString != null)\n+                    outerJoinFatteningDisabled =\n+                            Boolean.valueOf(outerJoinFlatteningDisabledString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MDkzOQ==", "bodyText": "indent", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372340939", "createdAt": "2020-01-29T11:57:17Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CompilerContextImpl.java", "diffHunk": "@@ -141,6 +141,8 @@ public\tvoid\tresetContext()\n         selectivityEstimationIncludingSkewedDefault = false;\n         projectionPruningEnabled = false;\n         maxMulticolumnProbeValues = DEFAULT_MAX_MULTICOLUMN_PROBE_VALUES;\n+        nextOJLevel = 1;\n+\t\touterJoinFlatteningDisabled = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0NTQ3NA==", "bodyText": "rename to maxNumTables", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372345474", "createdAt": "2020-01-29T12:07:40Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/JoinNode.java", "diffHunk": "@@ -873,6 +873,7 @@ public void pushExpressions(PredicateList outerPredicateList) throws StandardExc\n      * @param sql          The SubqueryList from the outer query\n      * @param gbl          The group by list, if any\n      * @param havingClause The HAVING clause, if any\n+     * @param numTables     maximum number of tables in the query", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0NzI4MQ==", "bodyText": "remove duplicated line", "url": "https://github.com/splicemachine/spliceengine/pull/3160#discussion_r372347281", "createdAt": "2020-01-29T12:11:54Z", "author": {"login": "arnaud-splice"}, "path": "hbase_sql/src/test/java/com/splicemachine/hbase/CostEstimationIT.java", "diffHunk": "@@ -225,23 +225,25 @@ public void testOuterJoinRowCount() throws Exception {\n             The plan is similar to the following:\n             --------------------------------------------------------------------\n             Cursor(n=10,rows=1,updateMode=READ_ONLY (1),engine=control)\n-              ->  ScrollInsensitive(n=9,totalCost=131.717,outputRows=1,outputHeapSize=0 B,partitions=1)\n-                ->  ProjectRestrict(n=8,totalCost=29.575,outputRows=1,outputHeapSize=0 B,partitions=1)\n-                  ->  GroupBy(n=7,totalCost=29.575,outputRows=1,outputHeapSize=0 B,partitions=1)\n-                    ->  ProjectRestrict(n=6,totalCost=24.84,outputRows=219,outputHeapSize=296 B,partitions=1)\n-                      ->  BroadcastJoin(n=5,totalCost=24.84,outputRows=219,outputHeapSize=296 B,partitions=1,preds=[(A1[8:1] = A2[8:2])])\n-                        ->  BroadcastLeftOuterJoin(n=4,totalCost=12.28,outputRows=18,outputHeapSize=78 B,partitions=1,preds=[(A2[6:1] = A3[6:2])])\n-                          ->  TableScan[T33(1920)](n=3,totalCost=4.04,scannedRows=20,outputRows=20,outputHeapSize=78 B,partitions=1)\n-                          ->  TableScan[T22(1904)](n=2,totalCost=4.04,scannedRows=20,outputRows=18,outputHeapSize=18 B,partitions=1,preds=[(A2[2:1] = 90)])\n-                        ->  TableScan[T11(1888)](n=1,totalCost=4.6,scannedRows=300,outputRows=270,outputHeapSize=270 B,partitions=1,preds=[(A1[0:1] = 90)])\n+              ->  ScrollInsensitive(n=9,totalCost=141.458,outputRows=1,outputHeapSize=0 B,partitions=1)\n+                ->  ProjectRestrict(n=8,totalCost=39.315,outputRows=1,outputHeapSize=0 B,partitions=1)\n+                  ->  GroupBy(n=7,totalCost=39.315,outputRows=1,outputHeapSize=0 B,partitions=1)\n+                    ->  ProjectRestrict(n=6,totalCost=21.497,outputRows=219,outputHeapSize=332 B,partitions=1)\n+                      ->  BroadcastLeftOuterJoin(n=5,totalCost=21.497,outputRows=219,outputHeapSize=332 B,partitions=1,preds=[(A2[8:2] = A3[8:3])])\n+                        ->  TableScan[T33(48224)](n=4,totalCost=4.04,scannedRows=20,outputRows=20,outputHeapSize=332 B,partitions=1)\n+                        ->  BroadcastJoin(n=3,totalCost=13.039,outputRows=219,outputHeapSize=272 B,partitions=1,preds=[(A1[4:1] = A2[4:2])])\n+                          ->  TableScan[T22(48208)](n=2,totalCost=4.04,scannedRows=20,outputRows=18,outputHeapSize=272 B,partitions=1,preds=[(A2[2:1] = 90)])\n+                          ->  TableScan[T11(48192)](n=1,totalCost=4.6,scannedRows=300,outputRows=270,outputHeapSize=270 B,partitions=1,preds=[(A1[0:1] = 90)])\n+\n+            10 rows selected\n \n             10 rows selected", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c5a4bc7756e3e00bc12d75ef74361a80508fdd"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2f2eedf72331157fc529fb870030d953e91c0b", "author": {"user": {"login": "yxia92", "name": "Yi Xia"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ff2f2eedf72331157fc529fb870030d953e91c0b", "committedDate": "2020-01-30T04:38:37Z", "message": "DB-9012 address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 951, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}