{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDQ2NzI5", "number": 4306, "title": "DB-10448: improve restore performance", "bodyText": "", "createdAt": "2020-10-15T23:14:31Z", "url": "https://github.com/splicemachine/spliceengine/pull/4306", "merged": true, "mergeCommit": {"oid": "4dfad58b5084499672240e450c3a0a27d7d6acae"}, "closed": true, "closedAt": "2020-10-27T16:46:38Z", "author": {"login": "jyuanca"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS58TuAH2gAyNTA0NDQ2NzI5OmQ1ZjdmYjY2ZGNjNTAwMjUwNGJlYWIyNTU2YTk3ZjYzOWQ4ZjRkOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWhhz5AFqTUxNzM0NTU3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/d5f7fb66dcc5002504beab2556a97f639d8f4d92", "committedDate": "2020-10-15T22:58:20Z", "message": "DB-10448: improve restore performance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDc3MDQ5", "url": "https://github.com/splicemachine/spliceengine/pull/4306#pullrequestreview-512477049", "createdAt": "2020-10-20T08:51:10Z", "commit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MToxMFrOHkxoDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MzoxM1rOHkxtdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyMzg1NQ==", "bodyText": "If we are sleeping, can you use PipelineUtils.getPauseTime() or something similar to do an exponential backoff and add jitter?", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508323855", "createdAt": "2020-10-20T08:51:10Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java", "diffHunk": "@@ -315,10 +317,17 @@ public static long nextSequenceId(String counterNode) throws IOException{\n \t\t */\n \n         RecoverableZooKeeper rzk=ZkUtils.getRecoverableZooKeeper();\n-        int maxTries=10;\n+        int maxTries=Integer.MAX_VALUE;\n         int tries=0;\n         while(tries<=maxTries){\n             tries++;\n+            if (tries > 1) {\n+                try {\n+                    Thread.sleep(50);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTIzOA==", "bodyText": "Not used, remove", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508325238", "createdAt": "2020-10-20T08:53:13Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java", "diffHunk": "@@ -151,16 +155,25 @@ protected void create(boolean isExternal,\n         }\n         try{\n //            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n+\n+            TxnView txnView = null;\n+            if (rawtran instanceof SpliceTransaction) {\n+                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n+            }\n+            else if (rawtran instanceof SpliceTransactionView) {\n+                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDc5NzI4", "url": "https://github.com/splicemachine/spliceengine/pull/4306#pullrequestreview-512479728", "createdAt": "2020-10-20T08:54:17Z", "commit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1NDoxN1rOHkxv7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1NjoyMVrOHkx1oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTg2OQ==", "bodyText": "TxnView does not seem to be used in the following code. Looks like line 169 covers both cases here.", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508325869", "createdAt": "2020-10-20T08:54:17Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java", "diffHunk": "@@ -151,16 +155,25 @@ protected void create(boolean isExternal,\n         }\n         try{\n //            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n+\n+            TxnView txnView = null;\n+            if (rawtran instanceof SpliceTransaction) {\n+                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n+            }\n+            else if (rawtran instanceof SpliceTransactionView) {\n+                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNzMyOA==", "bodyText": "Is this common in zk code? I'm not very familiar with this but loop forever gives a strange feel...", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508327328", "createdAt": "2020-10-20T08:56:21Z", "author": {"login": "ascend1"}, "path": "hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java", "diffHunk": "@@ -315,10 +317,17 @@ public static long nextSequenceId(String counterNode) throws IOException{\n \t\t */\n \n         RecoverableZooKeeper rzk=ZkUtils.getRecoverableZooKeeper();\n-        int maxTries=10;\n+        int maxTries=Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "committedDate": "2020-10-20T15:57:15Z", "message": "incorporate review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzODQ5NDc4", "url": "https://github.com/splicemachine/spliceengine/pull/4306#pullrequestreview-513849478", "createdAt": "2020-10-21T16:01:21Z", "commit": {"oid": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzgwOTU1", "url": "https://github.com/splicemachine/spliceengine/pull/4306#pullrequestreview-515780955", "createdAt": "2020-10-23T15:31:13Z", "commit": {"oid": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MzQ1NTc3", "url": "https://github.com/splicemachine/spliceengine/pull/4306#pullrequestreview-517345577", "createdAt": "2020-10-27T04:47:22Z", "commit": {"oid": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1107, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}