{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDA3MDM2", "number": 3882, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjowMjozN1rOER4SaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo1NzoyNVrOER6mBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTgzNDY1OnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjowMjozN1rOG21EPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjowNjowMFrOG21L4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0NTcyNA==", "bodyText": "So, if I understand correctly, we will remove the FIRST_WRITE_TOKEN cell from the list of WAL edits, therefore it will be written to the HFile causing a proper deletion to happen when compaction kicks in, right?", "url": "https://github.com/splicemachine/spliceengine/pull/3882#discussion_r460145724", "createdAt": "2020-07-24T16:02:37Z", "author": {"login": "hatyo"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -508,4 +510,22 @@ protected boolean aclCheck(Scan scan) throws IOException, StandardException {\n             }\n         }\n     }\n+\n+    @Override\n+    public void preWALRestore(ObserverContext<? extends RegionCoprocessorEnvironment> ctx, RegionInfo info, WALKey logKey, WALEdit logEdit) throws IOException {\n+\n+        SConfiguration config = HConfiguration.getConfiguration();\n+        String namespace = logKey.getTableName().getNamespaceAsString();\n+        if (namespace.equals(config.getNamespace())) {\n+            ArrayList<Cell> cells = logEdit.getCells();\n+            Iterator<Cell> it = cells.iterator();\n+            while (it.hasNext()) {\n+                Cell cell = it.next();\n+                CellType cellType = CellUtils.getKeyValueType(cell);\n+                if (cellType == CellType.FIRST_WRITE_TOKEN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b98075445b07784075249d941dc4df218fe6fc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0NzY4MA==", "bodyText": "+1", "url": "https://github.com/splicemachine/spliceengine/pull/3882#discussion_r460147680", "createdAt": "2020-07-24T16:06:00Z", "author": {"login": "jyuanca"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -508,4 +510,22 @@ protected boolean aclCheck(Scan scan) throws IOException, StandardException {\n             }\n         }\n     }\n+\n+    @Override\n+    public void preWALRestore(ObserverContext<? extends RegionCoprocessorEnvironment> ctx, RegionInfo info, WALKey logKey, WALEdit logEdit) throws IOException {\n+\n+        SConfiguration config = HConfiguration.getConfiguration();\n+        String namespace = logKey.getTableName().getNamespaceAsString();\n+        if (namespace.equals(config.getNamespace())) {\n+            ArrayList<Cell> cells = logEdit.getCells();\n+            Iterator<Cell> it = cells.iterator();\n+            while (it.hasNext()) {\n+                Cell cell = it.next();\n+                CellType cellType = CellUtils.getKeyValueType(cell);\n+                if (cellType == CellType.FIRST_WRITE_TOKEN) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0NTcyNA=="}, "originalCommit": {"oid": "e9b98075445b07784075249d941dc4df218fe6fc"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjIxMjU0OnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo1NzoyNVrOG24sAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODowNDoxMFrOG245BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNTA1OQ==", "bodyText": "Please add a comment here explaining why this is needed, or at least a pointer to\nDB-9895 and add the full explanation there.", "url": "https://github.com/splicemachine/spliceengine/pull/3882#discussion_r460205059", "createdAt": "2020-07-24T17:57:25Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -508,4 +510,22 @@ protected boolean aclCheck(Scan scan) throws IOException, StandardException {\n             }\n         }\n     }\n+\n+    @Override\n+    public void preWALRestore(ObserverContext<? extends RegionCoprocessorEnvironment> ctx, RegionInfo info, WALKey logKey, WALEdit logEdit) throws IOException {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b98075445b07784075249d941dc4df218fe6fc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwODM4OQ==", "bodyText": "I had a hard time reproducing this manually. I can only verify that the token is removed and rows are not purged during WAL replay. Will prepare a parcel to run Stephanie's test on cloud", "url": "https://github.com/splicemachine/spliceengine/pull/3882#discussion_r460208389", "createdAt": "2020-07-24T18:04:10Z", "author": {"login": "jyuanca"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -508,4 +510,22 @@ protected boolean aclCheck(Scan scan) throws IOException, StandardException {\n             }\n         }\n     }\n+\n+    @Override\n+    public void preWALRestore(ObserverContext<? extends RegionCoprocessorEnvironment> ctx, RegionInfo info, WALKey logKey, WALEdit logEdit) throws IOException {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNTA1OQ=="}, "originalCommit": {"oid": "e9b98075445b07784075249d941dc4df218fe6fc"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3125, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}