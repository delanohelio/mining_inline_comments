{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDEyNjg3", "number": 3579, "title": "DB-9562 NSDS Update and Delete should handle Partial Rows and Empty Inputs", "bodyText": "", "createdAt": "2020-05-16T19:30:23Z", "url": "https://github.com/splicemachine/spliceengine/pull/3579", "merged": true, "mergeCommit": {"oid": "08ae1526f0dc3f09ad5eba2b7637cd959b855296"}, "closed": true, "closedAt": "2020-05-19T21:52:45Z", "author": {"login": "jpanko1"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch7d6JgH2gAyNDE5MDEyNjg3OjViYjA0ZDk4MGY0NjU1ZThiMDkxNzFhNzM2OTlkNTMyM2M3NTM4Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci7kiggFqTQxNDg0NTQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5bb04d980f4655e8b09171a73699d5323c7538cb", "author": {"user": {"login": "jpanko1", "name": null}}, "url": "https://github.com/splicemachine/spliceengine/commit/5bb04d980f4655e8b09171a73699d5323c7538cb", "committedDate": "2020-05-16T19:02:39Z", "message": "DB-9562 NSDS update and delete handling partial rows and empty input."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbaba3dbdf08968331698b3da204ba7f7a88ad5", "author": {"user": {"login": "jpanko1", "name": null}}, "url": "https://github.com/splicemachine/spliceengine/commit/ddbaba3dbdf08968331698b3da204ba7f7a88ad5", "committedDate": "2020-05-16T19:03:47Z", "message": "DB-9562 Increased timeout in SparkStreamingIT."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fb6bba4383b516ac84cc260fae0565971d64dd8", "author": {"user": {"login": "jpanko1", "name": null}}, "url": "https://github.com/splicemachine/spliceengine/commit/4fb6bba4383b516ac84cc260fae0565971d64dd8", "committedDate": "2020-05-18T03:22:08Z", "message": "Fix Spotbugs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904", "author": {"user": {"login": "jpanko1", "name": null}}, "url": "https://github.com/splicemachine/spliceengine/commit/12bad63aaa86c6286c8b5bee849482c4807d4904", "committedDate": "2020-05-18T04:14:02Z", "message": "DB-9562 Fix Spotbugs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjY5OTIx", "url": "https://github.com/splicemachine/spliceengine/pull/3579#pullrequestreview-414669921", "createdAt": "2020-05-19T17:29:43Z", "commit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODI1MjUz", "url": "https://github.com/splicemachine/spliceengine/pull/3579#pullrequestreview-414825253", "createdAt": "2020-05-19T21:09:37Z", "commit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODIxMDQw", "url": "https://github.com/splicemachine/spliceengine/pull/3579#pullrequestreview-414821040", "createdAt": "2020-05-19T21:02:51Z", "commit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTowMjo1MVrOGXyhng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToxMTozMFrOGXyyUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5ODIzOA==", "bodyText": "What fields was it complaining about?", "url": "https://github.com/splicemachine/spliceengine/pull/3579#discussion_r427598238", "createdAt": "2020-05-19T21:02:51Z", "author": {"login": "dgomezferro"}, "path": "splice_spark/src/main/spark2.1/com/splicemachine/spark/splicemachine/SplicemachineContext.scala", "diffHunk": "@@ -39,10 +39,16 @@ import org.apache.hadoop.hbase.util.Bytes\n import org.apache.log4j.Logger\n import org.apache.spark.api.java.JavaRDD\n import org.apache.spark.scheduler.{SparkListener, SparkListenerApplicationEnd}\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings\n \n+@SerialVersionUID(20200513211L)\n object Holder extends Serializable {\n   @transient lazy val log = Logger.getLogger(getClass.getName)\n }\n+@SerialVersionUID(20200513212L)\n+@SuppressFBWarnings(value = Array(\"ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD\"), justification = \"Need to set SpliceClient.connectionString\")\n+@SuppressFBWarnings(value = Array(\"NP_ALWAYS_NULL\"), justification = \"These fields usually are not null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMTk4Ng==", "bodyText": "Does this work for quoted columns?\ncreate table a (\"notEQUAL\" int, \"NOTequal\" int);", "url": "https://github.com/splicemachine/spliceengine/pull/3579#discussion_r427601986", "createdAt": "2020-05-19T21:10:36Z", "author": {"login": "dgomezferro"}, "path": "splice_spark2/src/main/spark2.2/com/splicemachine/spark2/splicemachine/SplicemachineContext.scala", "diffHunk": "@@ -595,11 +595,13 @@ class SplicemachineContext(options: Map[String, String]) extends Serializable {\n     )\n   \n   /** Schema string built from JDBC metadata. */\n-  def schemaString(schemaTableName: String): String =\n+  def schemaString(schemaTableName: String, schema: StructType = new StructType()): String =\n     SpliceJDBCUtil.retrieveColumnInfo(\n       new JDBCOptions(Map(\n         JDBCOptions.JDBC_URL -> url,\n         JDBCOptions.JDBC_TABLE_NAME -> schemaTableName))\n+    ).filter(\n+      col => schema.isEmpty || schema.exists( field => field.name.toUpperCase.equals( col(0).toUpperCase ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb04d980f4655e8b09171a73699d5323c7538cb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMjUxNQ==", "bodyText": "This could force a computation of the RDD, ideally we'd want to make sure the RDD is only computed once.\nWhat's the error if the RDD is empty?", "url": "https://github.com/splicemachine/spliceengine/pull/3579#discussion_r427602515", "createdAt": "2020-05-19T21:11:30Z", "author": {"login": "dgomezferro"}, "path": "splice_spark2/src/main/spark2.2/com/splicemachine/spark2/splicemachine/SplicemachineContext.scala", "diffHunk": "@@ -577,7 +577,7 @@ class SplicemachineContext(options: Map[String, String]) extends Serializable {\n    * @param schema\n    * @param schemaTableName table to delete from\n    */\n-  def delete(rdd: JavaRDD[Row], schema: StructType, schemaTableName: String): Unit = {\n+  def delete(rdd: JavaRDD[Row], schema: StructType, schemaTableName: String): Unit = if( !rdd.isEmpty ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb04d980f4655e8b09171a73699d5323c7538cb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODQ1NDgz", "url": "https://github.com/splicemachine/spliceengine/pull/3579#pullrequestreview-414845483", "createdAt": "2020-05-19T21:43:49Z", "commit": {"oid": "12bad63aaa86c6286c8b5bee849482c4807d4904"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1349, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}