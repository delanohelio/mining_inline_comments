{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjI0MjMx", "number": 3205, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTozODo0MFrODhvPMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMzo1MDo0MFrODkRfsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzAzNTM3OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTozODo0MFrOFspEqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTozODo0MFrOFspEqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDYwMw==", "bodyText": "typo in the result string, I guess it should be \"Information not available\".", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r382354603", "createdAt": "2020-02-21T01:38:40Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "diffHunk": "@@ -61,6 +62,19 @@\n \n     private static Logger LOG = Logger.getLogger(ReplicationSystemProcedure.class);\n \n+    public static void GET_REPLICATION_PROGRESS(ResultSet[] resultSets) throws StandardException, SQLException {\n+        ReplicationManager replicationManager = EngineDriver.driver().manager().getReplicationManager();\n+        long ts = replicationManager.getReplicationProgress();\n+        if (ts > 0) {\n+            DateTime dateTime = new DateTime(ts);\n+            resultSets[0] = ProcedureUtils.generateResult(\n+                    \"Replication progress\", dateTime.toString());\n+        }\n+        else {\n+            resultSets[0] = ProcedureUtils.generateResult(\"Error\", \"Information for available\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b875c587e9226695263764da33998d61c1a05eda"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzAzNzQyOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTo0MDowNVrOFspF_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNTowNzoxNVrOFsr0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDk0MQ==", "bodyText": "It seems that we assume only one replication slave cluster for this system procedure. Can this logic be extended in the future if we have  multiple slave clusters?", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r382354941", "createdAt": "2020-02-21T01:40:05Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "diffHunk": "@@ -61,6 +62,19 @@\n \n     private static Logger LOG = Logger.getLogger(ReplicationSystemProcedure.class);\n \n+    public static void GET_REPLICATION_PROGRESS(ResultSet[] resultSets) throws StandardException, SQLException {\n+        ReplicationManager replicationManager = EngineDriver.driver().manager().getReplicationManager();\n+        long ts = replicationManager.getReplicationProgress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b875c587e9226695263764da33998d61c1a05eda"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5ODQyMA==", "bodyText": "This system procedure is run on a slave cluster", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r382398420", "createdAt": "2020-02-21T05:01:18Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "diffHunk": "@@ -61,6 +62,19 @@\n \n     private static Logger LOG = Logger.getLogger(ReplicationSystemProcedure.class);\n \n+    public static void GET_REPLICATION_PROGRESS(ResultSet[] resultSets) throws StandardException, SQLException {\n+        ReplicationManager replicationManager = EngineDriver.driver().manager().getReplicationManager();\n+        long ts = replicationManager.getReplicationProgress();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDk0MQ=="}, "originalCommit": {"oid": "b875c587e9226695263764da33998d61c1a05eda"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5OTY3Nw==", "bodyText": "I see. Thanks!", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r382399677", "createdAt": "2020-02-21T05:07:15Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/replication/ReplicationSystemProcedure.java", "diffHunk": "@@ -61,6 +62,19 @@\n \n     private static Logger LOG = Logger.getLogger(ReplicationSystemProcedure.class);\n \n+    public static void GET_REPLICATION_PROGRESS(ResultSet[] resultSets) throws StandardException, SQLException {\n+        ReplicationManager replicationManager = EngineDriver.driver().manager().getReplicationManager();\n+        long ts = replicationManager.getReplicationProgress();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDk0MQ=="}, "originalCommit": {"oid": "b875c587e9226695263764da33998d61c1a05eda"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzA2NTEzOnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/main/java/com/splicemachine/hbase/SpliceReplicationSinkChore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTo1NjoyM1rOFspWOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTo1NjoyM1rOFspWOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1OTA5OQ==", "bodyText": "The call to CellUtil.cloneQualifier(cell) here seems redundant, should we just use colName?", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r382359099", "createdAt": "2020-02-21T01:56:23Z", "author": {"login": "yxia92"}, "path": "hbase_sql/src/main/java/com/splicemachine/hbase/SpliceReplicationSinkChore.java", "diffHunk": "@@ -260,19 +264,29 @@ private void updateProgress() throws IOException, KeeperException, InterruptedEx\n                     SpliceLogUtils.info(LOG, \"Checking snapshot taken at %d\", timestamp);\n                 //}\n                 CellScanner s = r.cellScanner();\n+                long ts = -1;\n                 while (s.advance()) {\n                     Cell cell = s.current();\n-                    String walName = Bytes.toString(CellUtil.cloneQualifier(cell));\n-                    Long position = Bytes.toLong(CellUtil.cloneValue(cell));\n-                    if (replicationProgress.containsKey(walName)) {\n-                        long appliedPosition = replicationProgress.get(walName);\n+                    byte[] colName = CellUtil.cloneQualifier(cell);\n+                    if(Arrays.equals(colName, HBaseConfiguration.REPLICATION_SNAPSHOT_TSCOL_BYTES)){\n+                        ts = Bytes.toLong(CellUtil.cloneValue(cell));\n                         //if (LOG.isDebugEnabled()) {\n+                        SpliceLogUtils.info(LOG, \"Process snapshot take at %s\", new DateTime(ts).toString());\n+                        //}\n+                    }\n+                    else {\n+                        String walName = Bytes.toString(CellUtil.cloneQualifier(cell));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b875c587e9226695263764da33998d61c1a05eda"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzYxOTcxOnYy", "diffSide": "RIGHT", "path": "platform_it/src/test/java/com/splicemachine/test/SpliceTestPlatformConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMzo1MDo0MFrOFwgJzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzo0MDo1MVrOFxanxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMjc2NA==", "bodyText": "Why is that necessary?", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r386402764", "createdAt": "2020-03-02T13:50:40Z", "author": {"login": "arnaud-splice"}, "path": "platform_it/src/test/java/com/splicemachine/test/SpliceTestPlatformConfig.java", "diffHunk": "@@ -321,8 +321,8 @@ public static Configuration create(String hbaseRootDirUri,\n         // Replication\n         //\n         config.setBoolean(\"replication.source.eof.autorecovery\", true);\n-        config.set(\"hbase.replication.source.service\", \"com.splicemachine.replication.SpliceReplication\");\n-        config.set(\"hbase.replication.sink.service\", \"com.splicemachine.replication.SpliceReplication\");\n+        //config.set(\"hbase.replication.source.service\", \"com.splicemachine.replication.SpliceReplication\");\n+        //config.set(\"hbase.replication.sink.service\", \"com.splicemachine.replication.SpliceReplication\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ee40083254205c30678165acdff3ac02d878d6c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2MDcwOQ==", "bodyText": "Comment them out so that splice can be started w/o building ee branch, because SpliceReplication is only available on ee branch. Without commenting them out, the following command will fail\n./start-splice-cluster -pcdh6.3.0\nYou have to always build with ee branch\nstart-splice-cluster -pcdh6.3.0,ee", "url": "https://github.com/splicemachine/spliceengine/pull/3205#discussion_r387360709", "createdAt": "2020-03-03T23:40:51Z", "author": {"login": "jyuanca"}, "path": "platform_it/src/test/java/com/splicemachine/test/SpliceTestPlatformConfig.java", "diffHunk": "@@ -321,8 +321,8 @@ public static Configuration create(String hbaseRootDirUri,\n         // Replication\n         //\n         config.setBoolean(\"replication.source.eof.autorecovery\", true);\n-        config.set(\"hbase.replication.source.service\", \"com.splicemachine.replication.SpliceReplication\");\n-        config.set(\"hbase.replication.sink.service\", \"com.splicemachine.replication.SpliceReplication\");\n+        //config.set(\"hbase.replication.source.service\", \"com.splicemachine.replication.SpliceReplication\");\n+        //config.set(\"hbase.replication.sink.service\", \"com.splicemachine.replication.SpliceReplication\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMjc2NA=="}, "originalCommit": {"oid": "0ee40083254205c30678165acdff3ac02d878d6c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3366, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}