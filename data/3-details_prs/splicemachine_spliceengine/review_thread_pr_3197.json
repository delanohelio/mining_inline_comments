{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMzc0MDk4", "number": 3197, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjowODoyNFrODdixNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjowODoyNFrODdixNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzA0OTUxOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/ast/PlanPrinter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjowODoyNFrOFmNT6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMTo0MDo1MFrOFmYMzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODI5OA==", "bodyText": "Do we really need line 97? I think the dataSetProcessorType obtained from rsn.getCompilerContext().getDataSetProcessorType() is the final decision, and also the one that is passed to activation, so we don't need to go through every node in orderedNodes.", "url": "https://github.com/splicemachine/spliceengine/pull/3197#discussion_r375608298", "createdAt": "2020-02-06T02:08:24Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/ast/PlanPrinter.java", "diffHunk": "@@ -93,10 +93,10 @@ public Visitable defaultVisit(Visitable node) throws StandardException {\n             m.put(query,orderedNodes);\n             if (LOG.isDebugEnabled()){\n                 DataSetProcessorType currentType = rsn.getLanguageConnectionContext().getDataSetProcessorType();\n-                currentType = currentType.combine(queryHintedForcedType(orderedNodes));\n-                boolean useSpark = currentType.isSpark() || currentType.isDefaultControl() && PlanPrinter.shouldUseSpark(orderedNodes, true);\n+                currentType = currentType.combine(rsn.getCompilerContext().getDataSetProcessorType());\n+                currentType = currentType.combine(determineSpark(orderedNodes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a60ac4f3de9662fab99ffe1eddf89d45b41407"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4NjcwMw==", "bodyText": "You're right, I merely refactored that function while keeping the behaviour intact, but we don't need that anymore. We also don't need the languagecontext.type as this one was put in compilercontext.type during the optimisation phase.", "url": "https://github.com/splicemachine/spliceengine/pull/3197#discussion_r375786703", "createdAt": "2020-02-06T11:40:50Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/ast/PlanPrinter.java", "diffHunk": "@@ -93,10 +93,10 @@ public Visitable defaultVisit(Visitable node) throws StandardException {\n             m.put(query,orderedNodes);\n             if (LOG.isDebugEnabled()){\n                 DataSetProcessorType currentType = rsn.getLanguageConnectionContext().getDataSetProcessorType();\n-                currentType = currentType.combine(queryHintedForcedType(orderedNodes));\n-                boolean useSpark = currentType.isSpark() || currentType.isDefaultControl() && PlanPrinter.shouldUseSpark(orderedNodes, true);\n+                currentType = currentType.combine(rsn.getCompilerContext().getDataSetProcessorType());\n+                currentType = currentType.combine(determineSpark(orderedNodes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODI5OA=="}, "originalCommit": {"oid": "33a60ac4f3de9662fab99ffe1eddf89d45b41407"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3355, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}