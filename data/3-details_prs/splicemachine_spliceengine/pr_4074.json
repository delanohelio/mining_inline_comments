{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTc5MDg0", "number": 4074, "title": "DB-9803 Implement GET_NEAREST_TRANSACTION sql function.", "bodyText": "", "createdAt": "2020-09-02T17:05:12Z", "url": "https://github.com/splicemachine/spliceengine/pull/4074", "merged": true, "mergeCommit": {"oid": "ee13662615930459b25cb691c0eaa05fab7774e4"}, "closed": true, "closedAt": "2020-09-28T17:00:35Z", "author": {"login": "hatyo"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE_G0cAH2gAyNDc3OTc5MDg0OmI1N2FmNzEyZjdiZWU5NDBlMTcyMjA4NDk2Zjc3YWYwMTY2YzYyMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLP_Y8gFqTQ5MzExNTYwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b57af712f7bee940e172208496f77af0166c6237", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b57af712f7bee940e172208496f77af0166c6237", "committedDate": "2020-09-02T17:04:24Z", "message": "DB-9803 Implement GET_NEAREST_TRANSACTION sql function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a6e034051cb4b8aaf4e8164551563ce4a611d7c", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/0a6e034051cb4b8aaf4e8164551563ce4a611d7c", "committedDate": "2020-09-02T17:26:54Z", "message": "Merge remote-tracking branch 'origin/master' into DB-9803"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7019b47f1536da0ce877d3d22dd4a31e969bcd8", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/f7019b47f1536da0ce877d3d22dd4a31e969bcd8", "committedDate": "2020-09-02T17:45:07Z", "message": "DB-9803 fix spotbug issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzY1OTgy", "url": "https://github.com/splicemachine/spliceengine/pull/4074#pullrequestreview-482365982", "createdAt": "2020-09-04T05:23:29Z", "commit": {"oid": "f7019b47f1536da0ce877d3d22dd4a31e969bcd8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToyMzoyOVrOHM__0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyNzo1NFrOHNBNdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MzQ5MA==", "bodyText": "This token should not be put in the reserved kyeword section, it should be put in the nonReservedKeyword() section.", "url": "https://github.com/splicemachine/spliceengine/pull/4074#discussion_r483393490", "createdAt": "2020-09-04T05:23:29Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/sqlgrammar.jj", "diffHunk": "@@ -17796,6 +17818,7 @@ reservedKeyword() :\n |    tok = <FUNCTION>\n |    tok = <GET>\n |    tok = <GET_CURRENT_CONNECTION>\n+|    tok = <GET_NEAREST_TRANSACTION>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7019b47f1536da0ce877d3d22dd4a31e969bcd8"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMzM2NA==", "bodyText": "If there are other ITs running concurrently at the time of this test, and there is another write txn goes in between the two calls of values get_nearest_transaction(current_timestamp), would we guarantee to get result1=result2?", "url": "https://github.com/splicemachine/spliceengine/pull/4074#discussion_r483413364", "createdAt": "2020-09-04T06:27:54Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/transactions/GetNearestTransactionIT.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.splicemachine.derby.transactions;\n+\n+import com.splicemachine.derby.test.framework.SpliceSchemaWatcher;\n+import com.splicemachine.derby.test.framework.SpliceTableWatcher;\n+import com.splicemachine.derby.test.framework.SpliceWatcher;\n+import com.splicemachine.derby.test.framework.TestConnection;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.rules.TestRule;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.Matchers.lessThan;\n+\n+public class GetNearestTransactionIT {\n+\n+    private static final String schemaName = GetNearestTransactionIT.class.getSimpleName().toUpperCase();\n+\n+    private static final SpliceSchemaWatcher schemaWatcher = new SpliceSchemaWatcher(schemaName);\n+\n+    private static final SpliceTableWatcher table = new SpliceTableWatcher(\"A\",schemaWatcher.schemaName,\"(a INT)\");\n+\n+    private static final SpliceWatcher classWatcher = new SpliceWatcher();\n+\n+    @ClassRule\n+    public static TestRule chain = RuleChain.outerRule(classWatcher)\n+            .around(schemaWatcher)\n+            .around(table);\n+\n+    private static TestConnection conn;\n+    private static TestConnection connACOff;\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+        conn = classWatcher.getOrCreateConnection();\n+        connACOff = classWatcher.createConnection();\n+        connACOff.setAutoCommit(false);\n+    }\n+\n+    long resultOf(String query, TestConnection conn) throws SQLException {\n+        ResultSet rs = conn.query(query);\n+        Assert.assertTrue(rs.next());\n+        long result = rs.getLong(1);\n+        Assert.assertFalse(rs.wasNull());\n+        Assert.assertFalse(rs.next());\n+        return result;\n+    }\n+\n+    @Test\n+    public void GetNearestTransactionBeforeFirstTransactionReturnsNull() throws Exception {\n+        ResultSet rs = conn.query(\"VALUES get_nearest_Transaction(TIMESTAMPADD(SQL_TSI_MONTH, -10, CURRENT_TIMESTAMP ))\");\n+        Assert.assertTrue(rs.next());\n+        Assert.assertEquals(0, rs.getLong(1));\n+        Assert.assertTrue(rs.wasNull());\n+        Assert.assertFalse(rs.next());\n+    }\n+\n+    @Test\n+    public void GetNearestTransactionWorksCorrectlyWithAutoCommit() throws Exception {\n+        try {\n+            long result1 = resultOf(\"VALUES get_nearest_Transaction(CURRENT_TIMESTAMP)\", connACOff);\n+            long result2 = resultOf(\"VALUES get_nearest_Transaction(CURRENT_TIMESTAMP)\", connACOff);\n+            Assert.assertEquals(result1, result2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7019b47f1536da0ce877d3d22dd4a31e969bcd8"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTk5OTI0", "url": "https://github.com/splicemachine/spliceengine/pull/4074#pullrequestreview-482999924", "createdAt": "2020-09-04T22:51:23Z", "commit": {"oid": "f7019b47f1536da0ce877d3d22dd4a31e969bcd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29c8d9fd3320b13c6c3d9c2f3cee2ea171ac2b61", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/29c8d9fd3320b13c6c3d9c2f3cee2ea171ac2b61", "committedDate": "2020-09-17T13:12:32Z", "message": "DB-9803 address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8536efca6aa5cd8fc2dfae68741d059cdeb86bce", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/8536efca6aa5cd8fc2dfae68741d059cdeb86bce", "committedDate": "2020-09-17T13:12:46Z", "message": "Merge remote-tracking branch 'origin/master' into DB-9803"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e18307d5af4137727c9c308c3df6a624fec48e", "author": {"user": {"login": "hatyo", "name": "Youssef Hatem"}}, "url": "https://github.com/splicemachine/spliceengine/commit/33e18307d5af4137727c9c308c3df6a624fec48e", "committedDate": "2020-09-17T14:37:19Z", "message": "DB-9803 moved GetNearestTransactionIT test to hbase tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODI3MTA1", "url": "https://github.com/splicemachine/spliceengine/pull/4074#pullrequestreview-490827105", "createdAt": "2020-09-17T17:24:45Z", "commit": {"oid": "33e18307d5af4137727c9c308c3df6a624fec48e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTAyNjg2", "url": "https://github.com/splicemachine/spliceengine/pull/4074#pullrequestreview-493102686", "createdAt": "2020-09-22T03:11:02Z", "commit": {"oid": "33e18307d5af4137727c9c308c3df6a624fec48e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTE1NjAx", "url": "https://github.com/splicemachine/spliceengine/pull/4074#pullrequestreview-493115601", "createdAt": "2020-09-22T04:08:13Z", "commit": {"oid": "33e18307d5af4137727c9c308c3df6a624fec48e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1203, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}