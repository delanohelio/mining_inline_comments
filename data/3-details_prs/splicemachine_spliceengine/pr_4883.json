{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDQyNzkx", "number": 4883, "title": "DB-11047 add option splice.function.preserveLineEndings", "bodyText": "if splice.function.preserveLineEndings = true, multiline strings imported into the database will contain the \\r, \\r\\n, \\n exactly like in file. Otherwise (current default) all these will be replaced by \\n.", "createdAt": "2020-12-16T21:14:39Z", "url": "https://github.com/splicemachine/spliceengine/pull/4883", "merged": true, "mergeCommit": {"oid": "d58aba22b0fc4cd9f319e2facdbfb1cb368f9665"}, "closed": true, "closedAt": "2021-01-06T00:49:32Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnO6NcAFqTU1NTEzMDIyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtCOFIgFqTU2MTQ5MDA2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTMwMjIy", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-555130222", "createdAt": "2020-12-18T02:24:28Z", "commit": {"oid": "c45bf3cc9d6030b474820efe3af9b562d6f10fe9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjoyNTowMVrOIIQlgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjozNzoyM1rOIIQ1gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMTI2Ng==", "bodyText": "License header is missing", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r545531266", "createdAt": "2020-12-18T02:25:01Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/CsvParserConfig.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.splicemachine.derby.stream.function.csv;\n+import org.supercsv.prefs.CsvPreference;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45bf3cc9d6030b474820efe3af9b562d6f10fe9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzNTM2MA==", "bodyText": "is0D0Amode is always false and never true, then why we need this flag?", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r545535360", "createdAt": "2020-12-18T02:37:23Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/QuoteTrackingTokenizer.java", "diffHunk": "@@ -310,8 +314,10 @@ private String getCurrentLine() {\n             return currentRow.last();\n         }\n     }\n+    boolean is0D0Amode = false;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45bf3cc9d6030b474820efe3af9b562d6f10fe9"}, "originalPosition": 102}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c45bf3cc9d6030b474820efe3af9b562d6f10fe9", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/c45bf3cc9d6030b474820efe3af9b562d6f10fe9", "committedDate": "2020-12-16T21:12:04Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}, "afterCommit": {"oid": "5a31a9bb7f0668875dd2fdc910bc1a258a556ddf", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5a31a9bb7f0668875dd2fdc910bc1a258a556ddf", "committedDate": "2020-12-18T09:51:54Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a31a9bb7f0668875dd2fdc910bc1a258a556ddf", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5a31a9bb7f0668875dd2fdc910bc1a258a556ddf", "committedDate": "2020-12-18T09:51:54Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}, "afterCommit": {"oid": "3a3c30b7b30881c59bf86bb733c7442259ee6b01", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3a3c30b7b30881c59bf86bb733c7442259ee6b01", "committedDate": "2020-12-18T09:52:53Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a3c30b7b30881c59bf86bb733c7442259ee6b01", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3a3c30b7b30881c59bf86bb733c7442259ee6b01", "committedDate": "2020-12-18T09:52:53Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}, "afterCommit": {"oid": "a62b782ed6540d3549cdace2cff7022e8fa7c285", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/a62b782ed6540d3549cdace2cff7022e8fa7c285", "committedDate": "2020-12-18T23:12:07Z", "message": "DB-11047 own code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "315ed04de6a8fe965c58ecd591aa0b3ff9cb860a", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/315ed04de6a8fe965c58ecd591aa0b3ff9cb860a", "committedDate": "2020-12-19T22:41:23Z", "message": "DB-11047 remove other code"}, "afterCommit": {"oid": "5a3e0941441d6ea830aee68f0e0797e358d91b1b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5a3e0941441d6ea830aee68f0e0797e358d91b1b", "committedDate": "2020-12-21T20:00:52Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a3e0941441d6ea830aee68f0e0797e358d91b1b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5a3e0941441d6ea830aee68f0e0797e358d91b1b", "committedDate": "2020-12-21T20:00:52Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}, "afterCommit": {"oid": "35b898bba707296c119f8f2752752426da902444", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/35b898bba707296c119f8f2752752426da902444", "committedDate": "2020-12-21T20:46:18Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35b898bba707296c119f8f2752752426da902444", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/35b898bba707296c119f8f2752752426da902444", "committedDate": "2020-12-21T20:46:18Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}, "afterCommit": {"oid": "00f29d93d4d2dd6097834ad5bb8d33bc9b55c1d7", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/00f29d93d4d2dd6097834ad5bb8d33bc9b55c1d7", "committedDate": "2020-12-21T20:49:24Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NzQzODcz", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-556743873", "createdAt": "2020-12-22T00:24:02Z", "commit": {"oid": "00f29d93d4d2dd6097834ad5bb8d33bc9b55c1d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTAxMTE5", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-556901119", "createdAt": "2020-12-22T08:28:17Z", "commit": {"oid": "b4208bafdc5a941345f49c175fe431c5fbd290f2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NjQ5NTQz", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-557649543", "createdAt": "2020-12-23T05:32:52Z", "commit": {"oid": "de62ce5b96e78a4b86989da80b0699564323a26d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzUyOTgy", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-557752982", "createdAt": "2020-12-23T09:38:56Z", "commit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwOTozODo1NlrOIKe9Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowMjowN1rOIKisQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg2MzgyMg==", "bodyText": "This logic looks reversed to me, it shouldn't have the ! I think.", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547863822", "createdAt": "2020-12-23T09:38:56Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/storage/SpliceRegionAdmin.java", "diffHunk": "@@ -782,8 +782,14 @@ public static  ConglomerateDescriptor getIndex(TableDescriptor td, String indexN\n \n         boolean quotedEmptyIsNull = !PropertyUtil.getCachedDatabaseBoolean(\n                 lcc, Property.SPLICE_DB2_IMPORT_EMPTY_STRING_COMPATIBLE);\n-        MutableCSVTokenizer tokenizer = new MutableCSVTokenizer(reader,preference, false, quotedEmptyIsNull,\n+        boolean preserveLineEndings = !PropertyUtil.getCachedDatabaseBoolean(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg5MzU1Nw==", "bodyText": "I don't think reusing the StringBuilder makes a big difference, but if you want to reuse it I'd call sb.setLength(0) rather than sb.delete() to clear it, since the latter ends up calling a native method.", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547893557", "createdAt": "2020-12-23T10:41:00Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/QuoteTrackingTokenizer.java", "diffHunk": "@@ -110,7 +110,10 @@ public String at(int index) {\n         }\n \n         public String toString() {\n-            StringBuilder sb = new StringBuilder(length());\n+            if(sb == null)\n+                 sb = new StringBuilder(length());\n+            else\n+                sb.delete(0, sb.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg5NjEzOA==", "bodyText": "Is it possible to remove this BufferedReader then?", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547896138", "createdAt": "2020-12-23T10:47:11Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/StreamFileFunction.java", "diffHunk": "@@ -80,12 +86,13 @@ public boolean hasNext() {\n                                 return hasNext;\n                             try {\n                                 if (!initialized) {\n+                                    // BUFFERED? it's buffered again...\n                                     reader = new BufferedReader(new InputStreamReader(s,charset));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkxNDgzMw==", "bodyText": "This file is not used, remove", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547914833", "createdAt": "2020-12-23T11:34:58Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/test/test-data/newline.csv", "diffHunk": "@@ -0,0 +1,4 @@\n+\"Hello\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkyNTA1OA==", "bodyText": "Can you repeat this same case with sizes 4 and 6 (buffer ending just before the carriage return, and just after the line feed)?", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547925058", "createdAt": "2020-12-23T12:02:07Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/load/CsvLineReaderCRTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.splicemachine.derby.impl.load;\n+\n+import com.splicemachine.derby.stream.function.csv.CsvLineReaderCR;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+\n+public class CsvLineReaderCRTest {\n+    void test(String s, String[] expected, int configBufferSize) throws IOException {\n+        CsvLineReaderCR r = new CsvLineReaderCR(new StringReader(s), 1024, configBufferSize);\n+\n+        for(int i=0; ; i++) {\n+            String line = r.readLine();\n+            if( line == null ) break;\n+            Assert.assertTrue( i < expected.length );\n+            Assert.assertEquals(r.getLineNumber(), i+1);\n+            Assert.assertEquals( expected[i*2], line);\n+            Assert.assertEquals( expected[i*2+1], r.getCurrentLineEnding());\n+        }\n+        Assert.assertEquals( expected.length/2, r.getLineNumber() );\n+\n+    }\n+    @Test\n+    public void testSimple() throws IOException {\n+        test( \"Hello\\nWorld\\n\", new String[]{\"Hello\", \"\\n\", \"World\", \"\\n\"}, 1024);\n+        test( \"Hello\\r\\nWorld\\n\", new String[]{\"Hello\", \"\\r\\n\", \"World\", \"\\n\"}, 1024);\n+        test( \"Hello\\nWorld\\r\", new String[]{\"Hello\", \"\\n\", \"World\", \"\\r\"}, 1024);\n+        test( \"Hello\\r\\nWorld\\r\\n\", new String[]{\"Hello\", \"\\r\\n\", \"World\", \"\\r\\n\"}, 1024);\n+        test( \"Hello\\rWorld\", new String[]{\"Hello\", \"\\r\", \"World\", \"\"}, 1024);\n+    }\n+\n+    @Test\n+    public void testAllCases() throws IOException {\n+        boolean crNewline = true;\n+        test(\"\", new String[]{}, 5);\n+\n+        // CASE 1 : configBufferSize=10\n+        // 1234\\n\n+        test(\"1234\\n\", new String[]{\"1234\", \"\\n\"}, 10);\n+        // CASE 2 : configBufferSize=10\n+        // 1234<EOF>\n+        test(\"1234\", new String[]{\"1234\", \"\"}, 10);\n+\n+        // CASE 3 : configBufferSize=20\n+        // 123\\r\\n123\\r\\n\n+        test(\"123\\r\\n123\\r\\nabc\\n\", new String[]{\"123\", \"\\r\\n\", \"123\", \"\\r\\n\", \"abc\", \"\\n\"}, 20);\n+\n+\n+        // CASE 4 : configBufferSize=20\n+        // 123\\r123\\r\\n\n+\n+        test(\"123\\r123\\r\\nabc\\n\", new String[]{\"123\", \"\\r\", \"123\", \"\\r\\n\", \"abc\", \"\\n\"}, 20);\n+\n+        // CASE 5 : configBufferSize=5\n+        // 1234\\r<EOF>\n+        test(\"1234\\r\", new String[]{\"1234\", \"\\r\"}, 5);\n+        //test(\"1234\\r\", new String[]{\"1234\\r\"}, false, 5);\n+\n+        // CASE 6 : configBufferSize=5\n+        // 1234\\r\\n\n+        // abc\\r\\n\n+        test(\"1234\\r\\nabc\\r\\n\", new String[]{\"1234\", \"\\r\\n\", \"abc\", \"\\r\\n\"}, 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODI3ODkz", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-557827893", "createdAt": "2020-12-23T12:05:29Z", "commit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNTozMFrOIKixUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjowNTozMFrOIKixUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkyNjM1NQ==", "bodyText": "I think this could be protected since it's only accessed from a subclass", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547926355", "createdAt": "2020-12-23T12:05:30Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/AbstractFileFunction.java", "diffHunk": "@@ -268,7 +270,7 @@ else if (values.size() < returnRow.nColumns()) {\n         }\n     }\n \n-    void checkPreference() {\n+    public void checkPreference() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODMyMTUw", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-557832150", "createdAt": "2020-12-23T12:14:56Z", "commit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoxNDo1N1rOIKi_Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoxNDo1N1rOIKi_Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkyOTk0Ng==", "bodyText": "We should use StringBuilder (non thread safe version, recommended)", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547929946", "createdAt": "2020-12-23T12:14:57Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/function/csv/CsvLineReaderCR.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.splicemachine.derby.stream.function.csv;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+import java.io.IOException;\n+import java.io.Reader;\n+\n+/**\n+ * A buffered CSV line reader which is able to return the current line ending's type via\n+ * getCurrentLineEndingType / getCurrentLineEnding (like \"\\r\\n\", \"\\r\", \"\\n\", or \"\" = EOF)\n+ */\n+public class CsvLineReaderCR {\n+    private final Reader reader;\n+    private final int configInitialStringBufferSize;\n+    private final int configBufferSize;\n+\n+    private char bufferBytes[];\n+    private int bufferSize, bufferPos;\n+    private int lineNumber = 0;\n+\n+    private StringBuffer res = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODM3ODUx", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-557837851", "createdAt": "2020-12-23T12:27:16Z", "commit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoyNzoxNlrOIKjR-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoyNzoxNlrOIKjR-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzNDcxNA==", "bodyText": "@OlegMazurov does HdfsImportIT work with the remote ITs? Do we need to ignore these added tests for the remote profile?", "url": "https://github.com/splicemachine/spliceengine/pull/4883#discussion_r547934714", "createdAt": "2020-12-23T12:27:16Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/load/HdfsImportIT.java", "diffHunk": "@@ -2117,4 +2122,95 @@ public void testVarbitColumn() throws Exception {\n         Assert.assertEquals(expected, result);\n     }\n \n+    @Test\n+    public void testAnalyzeExternalTable() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d723b8e2d0ae517660f5c5d65f6158ec5a90a26f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d723b8e2d0ae517660f5c5d65f6158ec5a90a26f", "committedDate": "2020-12-22T21:51:09Z", "message": "DB-11047 fix QuoteTrackingTokenizerTest"}, "afterCommit": {"oid": "a39cf3692a4ca737a8c7e65b99542935e1e4ca72", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/a39cf3692a4ca737a8c7e65b99542935e1e4ca72", "committedDate": "2020-12-28T20:30:45Z", "message": "DB-11047 fix mem platform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17a4e0ba782ee8b3b2b5ee60ee5e068391b77d1a", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/17a4e0ba782ee8b3b2b5ee60ee5e068391b77d1a", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 add option splice.function.skipCarriageReturn to configure if we skip 0D"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae94dbbe01025734e29d1d66f2a70771b820b3f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/eae94dbbe01025734e29d1d66f2a70771b820b3f", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 renamed to splice.function.skipCarriageReturnIn0D0A, added QuoteTrackingTokenizer Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07123e4c23044317f2062a37fcbfc1ef65c058cb", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/07123e4c23044317f2062a37fcbfc1ef65c058cb", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 renamed to splice.function.preserveLineEndings, fix single line problems\n\n- splice.function.preserveLineEndings (default = false)\n- if splice.function.preserveLineEndings = true, multiline strings will contain the \\r, \\r\\n, \\n\nexactly like in file. Otherwise all are \\n."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3270b8b2a44f9b208eced1a512ca41e4c057af83", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3270b8b2a44f9b208eced1a512ca41e4c057af83", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 fix some namings, test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccfa025d439862de7c616ac6bf2110b8f1edb041", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ccfa025d439862de7c616ac6bf2110b8f1edb041", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 fix QuoteTrackingTokenizerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cdf62c0700994bccf0647d2391ba36ce62b9e83", "author": {"user": {"login": "dgomezferro", "name": "Daniel G\u00f3mez Ferro"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9cdf62c0700994bccf0647d2391ba36ce62b9e83", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40b1426088b8fd0510f08104cb4676c3f503234", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/c40b1426088b8fd0510f08104cb4676c3f503234", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 fix mem platform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab5aed71ab226fcadfd5679c72dc30c638007e5c", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ab5aed71ab226fcadfd5679c72dc30c638007e5c", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 remove double testAnalyzeExternalTable causing mem failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13d86693e38ea1eefc8df9c77a8a1e1282eb75e7", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/13d86693e38ea1eefc8df9c77a8a1e1282eb75e7", "committedDate": "2020-12-29T15:01:05Z", "message": "DB-11047 remove double testAnalyzeExternalTable causing mem failure"}, "afterCommit": {"oid": "ab5aed71ab226fcadfd5679c72dc30c638007e5c", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ab5aed71ab226fcadfd5679c72dc30c638007e5c", "committedDate": "2021-01-04T08:44:20Z", "message": "DB-11047 remove double testAnalyzeExternalTable causing mem failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6e1b22efc00ec731ab4f5f80797740b338afde5", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/c6e1b22efc00ec731ab4f5f80797740b338afde5", "committedDate": "2021-01-04T13:06:59Z", "message": "DB-11047 fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMTAxNDkw", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-561101490", "createdAt": "2021-01-04T15:06:13Z", "commit": {"oid": "c6e1b22efc00ec731ab4f5f80797740b338afde5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDkwMDYx", "url": "https://github.com/splicemachine/spliceengine/pull/4883#pullrequestreview-561490061", "createdAt": "2021-01-05T03:19:01Z", "commit": {"oid": "c6e1b22efc00ec731ab4f5f80797740b338afde5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 986, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}