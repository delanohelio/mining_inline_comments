{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Mjc3NDQy", "number": 4547, "title": "DB-10708 SpliceCK interactive mode and other improvements", "bodyText": "./spliceck.sh interactive starts spliceck in \"interactive shell\" spliceck> mode. Commands stay the same, however since -we're caching the hbase connection, it's much faster. exit with exit\nrget can now also get all rows (use all instead of rowid)\nsince this can be quite a lot, --limit X limits the number of rows to X. Default is 100.\nrget can limit the version it prints with e.g. -V 1 (like default for hbase shell)\nrget can print additional cells like hbase (--hbase)\ntlist can accept filters e.g. tlist *DUMMY list all schema.table that end with DUMMY\ntxlist also limits output by default to 100 (change with --limit)\nboth rget and txlist notify when they cut off results due to --limit.", "createdAt": "2020-11-11T15:36:12Z", "url": "https://github.com/splicemachine/spliceengine/pull/4547", "merged": true, "mergeCommit": {"oid": "7a3414a9e988ffa68910f42611d5d66cf2052a4c"}, "closed": true, "closedAt": "2020-11-23T14:43:20Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb52T1ABqjM5OTA4NDQ2MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfSPXrAH2gAyNTE5Mjc3NDQyOjZiYzViZDc2MDllMWMwYjA2MjM0ZTY0ZGM4YmIyYmFhNzg5MzE4NTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "868a8298d87c7ea77af8627b0013c92696596061", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/868a8298d87c7ea77af8627b0013c92696596061", "committedDate": "2020-11-12T19:01:11Z", "message": "DB-10708 more"}, "afterCommit": {"oid": "1319c246be285b62f5951d7d670f50344e13c56a", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1319c246be285b62f5951d7d670f50344e13c56a", "committedDate": "2020-11-12T21:54:47Z", "message": "DB-10708 spliceck: more options for rget / tlist filter\n\n-L / --limit maximum number of rows to print (default is 100)\nall : print all rows\n-V / --versions : versions to display. 0 = all (default is 0)\n--hbase : output data like hbase\n\ntlist <asterix filter>\n\ne.g. tlist *SYS????S\nor tlist SPLICE*"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1319c246be285b62f5951d7d670f50344e13c56a", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1319c246be285b62f5951d7d670f50344e13c56a", "committedDate": "2020-11-12T21:54:47Z", "message": "DB-10708 spliceck: more options for rget / tlist filter\n\n-L / --limit maximum number of rows to print (default is 100)\nall : print all rows\n-V / --versions : versions to display. 0 = all (default is 0)\n--hbase : output data like hbase\n\ntlist <asterix filter>\n\ne.g. tlist *SYS????S\nor tlist SPLICE*"}, "afterCommit": {"oid": "94dafd7146db65456b70f792a492c90406ceaea4", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/94dafd7146db65456b70f792a492c90406ceaea4", "committedDate": "2020-11-12T22:00:48Z", "message": "DB-10708 spliceck: more options for rget / tlist filter\n\n-L / --limit maximum number of rows to print (default is 100)\nall : print all rows\n-V / --versions : versions to display. 0 = all (default is 0)\n--hbase : output data like hbase\n\ntlist <asterix filter>\n\ne.g. tlist *SYS????S\nor tlist SPLICE*"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzE1Mzkx", "url": "https://github.com/splicemachine/spliceengine/pull/4547#pullrequestreview-531315391", "createdAt": "2020-11-16T13:25:11Z", "commit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoyNToxMVrOHz-ktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0MDo1MFrOHz_KXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2NDYzMQ==", "bodyText": "Rename to ConnectionSingleton.", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524264631", "createdAt": "2020-11-16T13:25:11Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/ConnectionCache.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.splicemachine.ck;\n+\n+import com.splicemachine.ck.hwrap.ConnectionWrapper;\n+import org.apache.hadoop.conf.Configuration;\n+\n+import java.io.IOException;\n+\n+public class ConnectionCache {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2NTQ3Ng==", "bodyText": "move to Utils.java.", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524265476", "createdAt": "2020-11-16T13:26:33Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/HBaseInspector.java", "diffHunk": "@@ -54,41 +57,66 @@ public HBaseInspector(final Configuration config) {\n         this.config = config;\n     }\n \n-    public String scanRow(final String region, final String rowKey, final Utils.SQLType[] cols) throws Exception {\n+    String limitString(int limit)\n+    {\n+        return \"   .\\n   .\\n   .\\n\" + Utils.Colored.red(\n+                \"--- Result list was limited to \" + limit + \" entries, \" + \"result was cut off ---\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2NjMwMw==", "bodyText": "Needs rephrasing maybe?", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524266303", "createdAt": "2020-11-16T13:27:52Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/HBaseInspector.java", "diffHunk": "@@ -54,41 +57,66 @@ public HBaseInspector(final Configuration config) {\n         this.config = config;\n     }\n \n-    public String scanRow(final String region, final String rowKey, final Utils.SQLType[] cols) throws Exception {\n+    String limitString(int limit)\n+    {\n+        return \"   .\\n   .\\n   .\\n\" + Utils.Colored.red(\n+                \"--- Result list was limited to \" + limit + \" entries, \" + \"result was cut off ---\");\n+    }\n+\n+    public String scanRow(final String region, final String rowKey, final Utils.SQLType[] cols,\n+                          int limit, int versions, boolean hbase) throws Exception {\n+\n         StringBuilder result = new StringBuilder();\n-        try(final ConnectionWrapper connectionWrapper = new ConnectionWrapper();\n-            final ResultScanner rs = connectionWrapper.withConfiguration(config).connect().withRegion(region).scanSingleRowAllVersions(rowKey)) {\n-            TableRowPrinter rowVisitor = new TableRowPrinter(cols == null ? null : new UserDefinedDataDecoder(cols, 4));\n+        UserDataDecoder decoder = cols == null ? null : new UserDefinedDataDecoder(cols, 4);\n+\n+        // scan for one more than the limit so now if we truncated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2NzQ4Mw==", "bodyText": "please put in a separate method (something like: generateRowId) and put it in Utils.java, or, even better, make it part of the processRow method.", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524267483", "createdAt": "2020-11-16T13:29:41Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/HBaseInspector.java", "diffHunk": "@@ -54,41 +57,66 @@ public HBaseInspector(final Configuration config) {\n         this.config = config;\n     }\n \n-    public String scanRow(final String region, final String rowKey, final Utils.SQLType[] cols) throws Exception {\n+    String limitString(int limit)\n+    {\n+        return \"   .\\n   .\\n   .\\n\" + Utils.Colored.red(\n+                \"--- Result list was limited to \" + limit + \" entries, \" + \"result was cut off ---\");\n+    }\n+\n+    public String scanRow(final String region, final String rowKey, final Utils.SQLType[] cols,\n+                          int limit, int versions, boolean hbase) throws Exception {\n+\n         StringBuilder result = new StringBuilder();\n-        try(final ConnectionWrapper connectionWrapper = new ConnectionWrapper();\n-            final ResultScanner rs = connectionWrapper.withConfiguration(config).connect().withRegion(region).scanSingleRowAllVersions(rowKey)) {\n-            TableRowPrinter rowVisitor = new TableRowPrinter(cols == null ? null : new UserDefinedDataDecoder(cols, 4));\n+        UserDataDecoder decoder = cols == null ? null : new UserDefinedDataDecoder(cols, 4);\n+\n+        // scan for one more than the limit so now if we truncated\n+        int scanLimit = limit == 0 ? 0 : limit+1;\n+        int count = 0;\n+        ConnectionWrapper c = getCachedConnection().withRegion(region);\n+        try(final ResultScanner rs = rowKey == null ?\n+                c.scanVersions(scanLimit, versions) :\n+                c.scanSingleRow(rowKey, versions)) {\n             for(Result row : rs) {\n+                if( count++ == limit ) {\n+                    result.append(limitString(limit));\n+                    break;\n+                }\n+                TableRowPrinter rowVisitor = new TableRowPrinter(decoder, hbase);\n+                String hbaseStr = !hbase ? \"\" : \" / \" + com.splicemachine.primitives.Bytes.toStringBinary(row.getRow());\n+                result.append(Utils.Colored.red(\"[ Row \" + Hex.encodeHexString(row.getRow()) + hbaseStr + \" ]\\n\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3MTY2OQ==", "bodyText": "is this necessary?", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524271669", "createdAt": "2020-11-16T13:36:33Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/command/RootCommand.java", "diffHunk": "@@ -14,19 +14,54 @@\n \n package com.splicemachine.ck.command;\n \n+import com.splicemachine.ck.ConnectionCache;\n+import com.splicemachine.ck.Utils;\n import org.apache.log4j.Level;\n import org.apache.log4j.Logger;\n import picocli.CommandLine;\n import picocli.CommandLine.Command;\n \n-@Command(mixinStandardHelpOptions = true, name = \"spliceck\", description = \"SpliceMachine check command suite\", descriptionHeading = \"Description:%n\",\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+@Command(mixinStandardHelpOptions = true, name = \"spliceck\", description = \"SpliceMachine check command suite\",\n+        descriptionHeading = \"Description:%n\",\n         optionListHeading = \"Options:%n\", subcommands = {TListCommand.class,\n         TColsCommand.class, RegionOfCommand.class, TableOfCommand.class, RGetCommand.class, RPutCommand.class,\n         TxListCommand.class, SListCommand.class})\n class RootCommand {\n     public static void main(String... args) {\n         Logger.getRootLogger().setLevel(Level.OFF);\n-        int exitCode = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast()).execute(args);\n+        ConnectionCache c = new ConnectionCache();\n+\n+        int exitCode = 0;\n+        if(!args[0].equals(\"interactive\")) {\n+            exitCode = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast()).execute(args);\n+        }\n+        else {\n+            Scanner command = new Scanner(System.in);\n+            CommandLine cl = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast());\n+            while (true) {\n+                System.out.print(\"spliceck> \");\n+                String s = command.nextLine();\n+                if (s.equals(\"exit\")) break;\n+                if (s.trim().length() == 0) continue;\n+                String[] args2 = s.split(\" \");\n+                exitCode = cl.execute(args2);\n+                if( exitCode == 0 )\n+                    System.out.println(Utils.Colored.green( \"return code \" + exitCode + \"\\n\") );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3NDA3OA==", "bodyText": "I think this is redundant, ConnectionWrapper is AutoCloseable, the static object will be destroyed when the process finishes closing it resource.", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524274078", "createdAt": "2020-11-16T13:40:30Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/command/RootCommand.java", "diffHunk": "@@ -14,19 +14,54 @@\n \n package com.splicemachine.ck.command;\n \n+import com.splicemachine.ck.ConnectionCache;\n+import com.splicemachine.ck.Utils;\n import org.apache.log4j.Level;\n import org.apache.log4j.Logger;\n import picocli.CommandLine;\n import picocli.CommandLine.Command;\n \n-@Command(mixinStandardHelpOptions = true, name = \"spliceck\", description = \"SpliceMachine check command suite\", descriptionHeading = \"Description:%n\",\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+@Command(mixinStandardHelpOptions = true, name = \"spliceck\", description = \"SpliceMachine check command suite\",\n+        descriptionHeading = \"Description:%n\",\n         optionListHeading = \"Options:%n\", subcommands = {TListCommand.class,\n         TColsCommand.class, RegionOfCommand.class, TableOfCommand.class, RGetCommand.class, RPutCommand.class,\n         TxListCommand.class, SListCommand.class})\n class RootCommand {\n     public static void main(String... args) {\n         Logger.getRootLogger().setLevel(Level.OFF);\n-        int exitCode = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast()).execute(args);\n+        ConnectionCache c = new ConnectionCache();\n+\n+        int exitCode = 0;\n+        if(!args[0].equals(\"interactive\")) {\n+            exitCode = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast()).execute(args);\n+        }\n+        else {\n+            Scanner command = new Scanner(System.in);\n+            CommandLine cl = new CommandLine(new RootCommand()).setExecutionStrategy(new CommandLine.RunLast());\n+            while (true) {\n+                System.out.print(\"spliceck> \");\n+                String s = command.nextLine();\n+                if (s.equals(\"exit\")) break;\n+                if (s.trim().length() == 0) continue;\n+                String[] args2 = s.split(\" \");\n+                exitCode = cl.execute(args2);\n+                if( exitCode == 0 )\n+                    System.out.println(Utils.Colored.green( \"return code \" + exitCode + \"\\n\") );\n+                else\n+                    System.out.println(Utils.Colored.red( \"return code \" + exitCode + \"\\n\") );\n+\n+            }\n+            command.close();\n+        }\n+\n+        try {\n+            c.close();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3NDI3MQ==", "bodyText": "probably not needed.", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r524274271", "createdAt": "2020-11-16T13:40:50Z", "author": {"login": "hatyo"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/ConnectionCache.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.splicemachine.ck;\n+\n+import com.splicemachine.ck.hwrap.ConnectionWrapper;\n+import org.apache.hadoop.conf.Configuration;\n+\n+import java.io.IOException;\n+\n+public class ConnectionCache {\n+\n+    static ConnectionWrapper c;\n+    public static ConnectionWrapper getConnection(final Configuration config) throws IOException {\n+        if( c == null ) {\n+            System.out.print(\"Trying to connect... \");\n+            c = new ConnectionWrapper().withConfiguration(config).connect();\n+            System.out.println(\"connected!\");\n+        }\n+        return c;\n+    }\n+\n+    public static void close() throws Exception {\n+        if( c != null ) {\n+            c.close();\n+            c = null;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfccf3907742766757ab805616da2c095de4906e", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cfccf3907742766757ab805616da2c095de4906e", "committedDate": "2020-11-17T09:10:02Z", "message": "DB-10708 SpliceCK interactive mode / keep connection open"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366660e8641638c66eff448062958e44afc25c11", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/366660e8641638c66eff448062958e44afc25c11", "committedDate": "2020-11-17T09:10:02Z", "message": "DB-10708 spliceck: more options for rget / tlist filter\n\n-L / --limit maximum number of rows to print (default is 100)\nall : print all rows\n-V / --versions : versions to display. 0 = all (default is 0)\n--hbase : output data like hbase\n\ntlist <asterix filter>\n\ne.g. tlist *SYS????S\nor tlist SPLICE*"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd939d9970752ace42f5c16046cbc872775ddb80", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cd939d9970752ace42f5c16046cbc872775ddb80", "committedDate": "2020-11-17T09:10:02Z", "message": "DB-10708 spliceck: limit for txlist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10c19432fdccdaac6e7e38c6e87d5f80c25f2175", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/10c19432fdccdaac6e7e38c6e87d5f80c25f2175", "committedDate": "2020-11-17T09:34:35Z", "message": "DB-10708 address code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f323ab356d2d50aaeb3ac1b2e625cddcb619950", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2f323ab356d2d50aaeb3ac1b2e625cddcb619950", "committedDate": "2020-11-13T09:17:37Z", "message": "DB-10708 spliceck: limit for txlist"}, "afterCommit": {"oid": "10c19432fdccdaac6e7e38c6e87d5f80c25f2175", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/10c19432fdccdaac6e7e38c6e87d5f80c25f2175", "committedDate": "2020-11-17T09:34:35Z", "message": "DB-10708 address code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTg2MjAw", "url": "https://github.com/splicemachine/spliceengine/pull/4547#pullrequestreview-532186200", "createdAt": "2020-11-17T09:45:43Z", "commit": {"oid": "10c19432fdccdaac6e7e38c6e87d5f80c25f2175"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjMzMDgw", "url": "https://github.com/splicemachine/spliceengine/pull/4547#pullrequestreview-532233080", "createdAt": "2020-11-17T10:41:21Z", "commit": {"oid": "10c19432fdccdaac6e7e38c6e87d5f80c25f2175"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo0MToyMVrOH0uyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo0MToyMVrOH0uyYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA1NDU2Mw==", "bodyText": "maybe separate to two lines instead of using comma", "url": "https://github.com/splicemachine/spliceengine/pull/4547#discussion_r525054563", "createdAt": "2020-11-17T10:41:21Z", "author": {"login": "ascend1"}, "path": "splice_ck/src/main/java/com/splicemachine/ck/HBaseInspector.java", "diffHunk": "@@ -125,40 +144,52 @@ private String schemaIdOf(String schemaName) throws Exception {\n         return schemaId.get().getSecond();\n     }\n \n-    private Utils.Tabular getListTransactions() throws Exception {\n+    public String getListTransactions(int limit) throws Exception {\n         String region = SPLICE_PREFIX + HBaseConfiguration.TRANSACTION_TABLE;\n         Utils.Tabular tabular = new Utils.Tabular(Utils.Tabular.SortHint.AsInteger,\n                 TBL_TXN_COL0, TBL_TXN_COL1, TBL_TXN_COL2, TBL_TXN_COL3, TBL_TXN_COL4,\n                 TBL_TXN_COL5, TBL_TXN_COL6, TBL_TXN_COL7, TBL_TXN_COL8, TBL_TXN_COL9);\n         TxnTableRowPrinter rowVisitor = new TxnTableRowPrinter();\n-        try(final ConnectionWrapper connectionWrapper = new ConnectionWrapper();\n-            final ResultScanner rs = connectionWrapper.withConfiguration(config).connect().withRegion(region).scan()) {\n+\n+        // scan for one more than the limit so the we know if we truncated\n+        int scanLimit = limit == 0 ? 0 : limit+1, count = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c19432fdccdaac6e7e38c6e87d5f80c25f2175"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f170458e0065874c69fdf29c36b9c61a9be6498f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/f170458e0065874c69fdf29c36b9c61a9be6498f", "committedDate": "2020-11-17T11:09:16Z", "message": "DB-10708 code review 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "786bba77264a9a79af5b42a590fa1851fa100fa5", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/786bba77264a9a79af5b42a590fa1851fa100fa5", "committedDate": "2020-11-17T12:16:31Z", "message": "DB-10708 fix Spotbugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMzEwMDQ1", "url": "https://github.com/splicemachine/spliceengine/pull/4547#pullrequestreview-532310045", "createdAt": "2020-11-17T12:25:34Z", "commit": {"oid": "786bba77264a9a79af5b42a590fa1851fa100fa5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e12f3ef5fc8fd7906a894bee488ffc4f91a9c0dc", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e12f3ef5fc8fd7906a894bee488ffc4f91a9c0dc", "committedDate": "2020-11-18T19:49:26Z", "message": "Merge remote-tracking branch 'origin/master' into DB-10708"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Mjc4NDE2", "url": "https://github.com/splicemachine/spliceengine/pull/4547#pullrequestreview-536278416", "createdAt": "2020-11-23T09:07:33Z", "commit": {"oid": "e12f3ef5fc8fd7906a894bee488ffc4f91a9c0dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc5bd7609e1c0b06234e64dc8bb2baa78931853", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/6bc5bd7609e1c0b06234e64dc8bb2baa78931853", "committedDate": "2020-11-23T10:03:58Z", "message": "DB-10708 add newline after row id"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1067, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}