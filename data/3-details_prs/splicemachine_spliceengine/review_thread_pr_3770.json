{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODU0ODU3", "number": 3770, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNjoyMVrOEL_hsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNzoxNlrOEL_jIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDEwNjExOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/sqlgrammar.jj", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNjoyMlrOGt2BIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODowNzoyMVrOGuc08Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDEzMQ==", "bodyText": "Is it possible to simplify this pattern a little bit? At least remove the \"notTok\" and \"existsTok\" variables, I don't think those are needed, and then haveboolean ifNotExists = ifTok != null || ifTok2 != null;", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r450724131", "createdAt": "2020-07-07T09:16:22Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/sqlgrammar.jj", "diffHunk": "@@ -4785,13 +4787,25 @@ declareTemporaryTableDeclaration() throws StandardException :\n     TableName            tableName;\n     TableElementList tableElementList;\n     Object[] declareTableClauses = new Object[3];\n+    Token ifTok = null;\n+    Token notTok = null;\n+    Token existsTok = null;\n+    Token ifTok2 = null;\n+    Token notTok2 = null;\n+    Token existsTok2 = null;\n }\n {\n-    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH)\n+    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> [ ifTok = <IF> notTok = <NOT> existsTok = <EXISTS> ] tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH) [ ifTok2 = <IF> notTok2 = <NOT> existsTok2 = <EXISTS> ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4ODExMQ==", "bodyText": "I'll give it a try. I'm not yet familiar with javacc grammar and got this from CREATE SCHEMA IF NOT EXISTS ... implementation.", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r450988111", "createdAt": "2020-07-07T16:21:21Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/sqlgrammar.jj", "diffHunk": "@@ -4785,13 +4787,25 @@ declareTemporaryTableDeclaration() throws StandardException :\n     TableName            tableName;\n     TableElementList tableElementList;\n     Object[] declareTableClauses = new Object[3];\n+    Token ifTok = null;\n+    Token notTok = null;\n+    Token existsTok = null;\n+    Token ifTok2 = null;\n+    Token notTok2 = null;\n+    Token existsTok2 = null;\n }\n {\n-    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH)\n+    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> [ ifTok = <IF> notTok = <NOT> existsTok = <EXISTS> ] tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH) [ ifTok2 = <IF> notTok2 = <NOT> existsTok2 = <EXISTS> ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDEzMQ=="}, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM1OTk4NQ==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r451359985", "createdAt": "2020-07-08T08:07:21Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/sqlgrammar.jj", "diffHunk": "@@ -4785,13 +4787,25 @@ declareTemporaryTableDeclaration() throws StandardException :\n     TableName            tableName;\n     TableElementList tableElementList;\n     Object[] declareTableClauses = new Object[3];\n+    Token ifTok = null;\n+    Token notTok = null;\n+    Token existsTok = null;\n+    Token ifTok2 = null;\n+    Token notTok2 = null;\n+    Token existsTok2 = null;\n }\n {\n-    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH)\n+    <DECLARE> <GLOBAL> <TEMPORARY> <TABLE> [ ifTok = <IF> notTok = <NOT> existsTok = <EXISTS> ] tableName = qualifiedName(Limits.MAX_IDENTIFIER_LENGTH) [ ifTok2 = <IF> notTok2 = <NOT> existsTok2 = <EXISTS> ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDEzMQ=="}, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDEwOTc2OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/conn/GenericLanguageConnectionContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNzoxN1rOGt2DXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0MDowMlrOGvLmeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDcwMw==", "bodyText": "Why do we need this?", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r450724703", "createdAt": "2020-07-07T09:17:17Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/conn/GenericLanguageConnectionContext.java", "diffHunk": "@@ -1333,6 +1333,10 @@ public void removeStatement(GenericStatement statement) throws StandardException\n     public PreparedStatement lookupStatement(GenericStatement statement) throws StandardException{\n         GenericStorablePreparedStatement ps = getDataDictionary().getDataDictionaryCache().statementCacheFind(statement);\n         if (ps==null) {\n+            String sqlText = statement.getSource().toUpperCase();\n+            if ((sqlText.startsWith(\"CREATE\") || sqlText.startsWith(\"DECLARE\")) && sqlText.contains(\"IF NOT EXISTS\")){\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4NjA4Mw==", "bodyText": "CREATE TABLE statements are cached if they have run through once. So if we run CREATE TABLE IF NOT EXISTS T ... twice, the second execution will bypass all checks in bind phase, including the newly added \"if not exists\" check. As a result, the execution returns an error. That should not be the case when \"if not exists\" presents.\nIt seems that CREATE SCHEMA statement is never cached, that's why \"if not exists\" works just fine there.\nAn alternative would be to pass this createBehavior all the way down to the engine and check there. Not sure that's a better way, though.", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r450986083", "createdAt": "2020-07-07T16:18:06Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/conn/GenericLanguageConnectionContext.java", "diffHunk": "@@ -1333,6 +1333,10 @@ public void removeStatement(GenericStatement statement) throws StandardException\n     public PreparedStatement lookupStatement(GenericStatement statement) throws StandardException{\n         GenericStorablePreparedStatement ps = getDataDictionary().getDataDictionaryCache().statementCacheFind(statement);\n         if (ps==null) {\n+            String sqlText = statement.getSource().toUpperCase();\n+            if ((sqlText.startsWith(\"CREATE\") || sqlText.startsWith(\"DECLARE\")) && sqlText.contains(\"IF NOT EXISTS\")){\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDcwMw=="}, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNjMyOQ==", "bodyText": "I just found that it's better to remove the hack in statement cache and add the check in its constant action. Will improve it with a new commit.", "url": "https://github.com/splicemachine/spliceengine/pull/3770#discussion_r452126329", "createdAt": "2020-07-09T10:40:02Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/conn/GenericLanguageConnectionContext.java", "diffHunk": "@@ -1333,6 +1333,10 @@ public void removeStatement(GenericStatement statement) throws StandardException\n     public PreparedStatement lookupStatement(GenericStatement statement) throws StandardException{\n         GenericStorablePreparedStatement ps = getDataDictionary().getDataDictionaryCache().statementCacheFind(statement);\n         if (ps==null) {\n+            String sqlText = statement.getSource().toUpperCase();\n+            if ((sqlText.startsWith(\"CREATE\") || sqlText.startsWith(\"DECLARE\")) && sqlText.contains(\"IF NOT EXISTS\")){\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyNDcwMw=="}, "originalCommit": {"oid": "45b1f4143db7aec0d39eece647b9bafb7f77882c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3157, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}