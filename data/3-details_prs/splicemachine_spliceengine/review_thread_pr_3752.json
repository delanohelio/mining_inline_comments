{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMDY4MTI1", "number": 3752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxMjo0NVrOEK6hpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODoxMDoyN1rOEL-CDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODgwMTAxOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxMjo0NVrOGsOurQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzozNDozN1rOGtyfyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMTg1Mw==", "bodyText": "Use EngineUtils.validateSchemat()/validateTable() instead, they deal with quoted names. This would also be needed in many other procedures here.", "url": "https://github.com/splicemachine/spliceengine/pull/3752#discussion_r449031853", "createdAt": "2020-07-02T14:12:45Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1383,6 +1383,8 @@ public static void SYSCS_SAVE_SOURCECODE(String schemaName, String objectName, S\n     }\n \n     public static void SET_PURGE_DELETED_ROWS (String schemaName, String tableName, String enable) throws Exception{\n+        schemaName = schemaName.toUpperCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efc08f0af1ccc785aff3fca87aa6207517d892b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MzEyMQ==", "bodyText": "Done. Short question though, validate{Schema, Table} do not seem to be idempotent. Are they?", "url": "https://github.com/splicemachine/spliceengine/pull/3752#discussion_r450373121", "createdAt": "2020-07-06T17:26:43Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1383,6 +1383,8 @@ public static void SYSCS_SAVE_SOURCECODE(String schemaName, String objectName, S\n     }\n \n     public static void SET_PURGE_DELETED_ROWS (String schemaName, String tableName, String enable) throws Exception{\n+        schemaName = schemaName.toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMTg1Mw=="}, "originalCommit": {"oid": "3efc08f0af1ccc785aff3fca87aa6207517d892b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NjQ0MA==", "bodyText": "No, they are not.", "url": "https://github.com/splicemachine/spliceengine/pull/3752#discussion_r450666440", "createdAt": "2020-07-07T07:34:37Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1383,6 +1383,8 @@ public static void SYSCS_SAVE_SOURCECODE(String schemaName, String objectName, S\n     }\n \n     public static void SET_PURGE_DELETED_ROWS (String schemaName, String tableName, String enable) throws Exception{\n+        schemaName = schemaName.toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMTg1Mw=="}, "originalCommit": {"oid": "3efc08f0af1ccc785aff3fca87aa6207517d892b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTg2MTI0OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODoxMDoyN1rOGtzosg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMTowNDoxMlrOGwJMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTEwNg==", "bodyText": "IT failed due to this, SYSCS_PERFORM_MAJOR_COMPACTION_ON_SCHEMA calls this function with tableName set to null. We could perform the validate here and move all the logic into a separate function that gets called both by SYSCS_PERFORM_MAJOR_COMPACTION_ON_TABLE and SYSCS_PERFORM_MAJOR_COMPACTION_ON_SCHEMA", "url": "https://github.com/splicemachine/spliceengine/pull/3752#discussion_r450685106", "createdAt": "2020-07-07T08:10:27Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -693,9 +693,12 @@ public static void SYSCS_PERFORM_MAJOR_COMPACTION_ON_SCHEMA(String schemaName) t\n      */\n     public static void SYSCS_PERFORM_MAJOR_COMPACTION_ON_TABLE(String schemaName,String tableName) throws SQLException {\n         LanguageConnectionContext lcc = (LanguageConnectionContext) ContextService.getContext(LanguageConnectionContext.CONTEXT_ID);\n+        assert lcc != null;\n         DataDictionary dd = lcc.getDataDictionary();\n         // sys query for table conglomerate for in schema\n         PartitionFactory tableFactory = SIDriver.driver().getTableFactory();\n+        schemaName = EngineUtils.validateSchema(schemaName);\n+        tableName = EngineUtils.validateTable(tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1959ffb3bf6e1032966e290f88498dd27ef9985f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzNTU2NQ==", "bodyText": "Fixed!", "url": "https://github.com/splicemachine/spliceengine/pull/3752#discussion_r453135565", "createdAt": "2020-07-11T01:04:12Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -693,9 +693,12 @@ public static void SYSCS_PERFORM_MAJOR_COMPACTION_ON_SCHEMA(String schemaName) t\n      */\n     public static void SYSCS_PERFORM_MAJOR_COMPACTION_ON_TABLE(String schemaName,String tableName) throws SQLException {\n         LanguageConnectionContext lcc = (LanguageConnectionContext) ContextService.getContext(LanguageConnectionContext.CONTEXT_ID);\n+        assert lcc != null;\n         DataDictionary dd = lcc.getDataDictionary();\n         // sys query for table conglomerate for in schema\n         PartitionFactory tableFactory = SIDriver.driver().getTableFactory();\n+        schemaName = EngineUtils.validateSchema(schemaName);\n+        tableName = EngineUtils.validateTable(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTEwNg=="}, "originalCommit": {"oid": "1959ffb3bf6e1032966e290f88498dd27ef9985f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3151, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}