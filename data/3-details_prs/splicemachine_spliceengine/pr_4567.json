{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzU0OTA4", "number": 4567, "title": "DB-10718 fix HEX function for non-ASCII Strings", "bodyText": "", "createdAt": "2020-11-12T09:42:54Z", "url": "https://github.com/splicemachine/spliceengine/pull/4567", "merged": true, "mergeCommit": {"oid": "b3240812216d9a78894436649593f02fb3db77a3"}, "closed": true, "closedAt": "2020-11-13T00:37:22Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbvT_lAH2gAyNTE5NzU0OTA4OmViZmIxZWJkN2Q3YzJmYWQ3ZTYxMTcxNDJlMGY4OWE1MGQ0MDg2YjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbznPygFqTUyOTE1MjUzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6", "committedDate": "2020-11-12T09:40:34Z", "message": "DB-10718 fix HEX function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTIwNDA5", "url": "https://github.com/splicemachine/spliceengine/pull/4567#pullrequestreview-528920409", "createdAt": "2020-11-12T09:54:15Z", "commit": {"oid": "ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo1NDoxNVrOHxy9og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo1Nzo1NlrOHxzH2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3NzI1MA==", "bodyText": "please make this null friendly:\nString result = rs.getString(index);\nrs.wasNull() ? null : result;", "url": "https://github.com/splicemachine/spliceengine/pull/4567#discussion_r521977250", "createdAt": "2020-11-12T09:54:15Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceWatcher.java", "diffHunk": "@@ -377,4 +378,13 @@ public long getConglomId(String tableName, String schemaName) throws Exception {\n         }\n         return -1l;\n     }\n+\n+    public String executeGetString(String sql, int index) throws SQLException {\n+        try( Statement s = getOrCreateConnection().createStatement();\n+             ResultSet rs = s.executeQuery(sql))\n+        {\n+            Assert.assertTrue(rs.next());\n+            return rs.getString(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3NzUwMg==", "bodyText": "see above, in order to test null properly.", "url": "https://github.com/splicemachine/spliceengine/pull/4567#discussion_r521977502", "createdAt": "2020-11-12T09:54:35Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/utils/SpliceStringFunctionsIT.java", "diffHunk": "@@ -702,40 +702,37 @@ public void testCastToFixedLengthCharType() throws Exception {\n \n     @Test\n     public void testHEX() throws Exception {\n-        String sqlText = \"values hex('B')\";\n-        ResultSet rs = methodWatcher.executeQuery(sqlText);\n-        rs.next();\n-        Assert.assertEquals(\"Wrong result value\", \"42\", rs.getString(1) );\n-\n-        sqlText = \"values hex('000020')\";\n-        rs = methodWatcher.executeQuery(sqlText);\n-        rs.next();\n-        Assert.assertEquals(\"Wrong result value\", \"303030303230\", rs.getString(1) );\n-\n-        sqlText = \"values hex(concat('a','b'))\";\n-        rs = methodWatcher.executeQuery(sqlText);\n-        rs.next();\n-        Assert.assertEquals(\"Wrong result value\", \"6162\", rs.getString(1) );\n \n-        sqlText = \"values hex(null)\";\n-        rs = methodWatcher.executeQuery(sqlText);\n-        rs.next();\n-        Assert.assertEquals(\"Wrong result value\", null, rs.getString(1) );\n-\n-        sqlText = \"values hex('')\";\n-        rs = methodWatcher.executeQuery(sqlText);\n-        rs.next();\n-        Assert.assertEquals(\"Wrong result value\",\"\", rs.getString(1) );\n+        // note that HEX is using getBytes(\"UTF-8\") to get a fixed representation\n+\n+        String tests[] = {\n+                \"'B'\",              \"42\",\n+                \"'000020'\",         \"303030303230\",\n+                \"'000020'\" ,        \"303030303230\",\n+                \"'\u00df'\",              \"C39F\",\n+                \"'\\u00E4'\",         \"C3A4\",     // \u00e4  https://www.compart.com/de/unicode/U+00E4\n+                \"'\\uD83D\\uDE02'\",   \"F09F9882\", // \ud83d\ude02 https://www.compart.com/de/unicode/U+1F602\n+                \"'Hello, World!'\",    \"48656C6C6F2C20576F726C6421\",\n+\n+                \"''\",               \"\",\n+                \"null\",             null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3OTg2NQ==", "bodyText": "I would rather use a constant such as com.splicemachine.primitives.Bytes.UTF8_CHARSET", "url": "https://github.com/splicemachine/spliceengine/pull/4567#discussion_r521979865", "createdAt": "2020-11-12T09:57:56Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceStringFunctions.java", "diffHunk": "@@ -134,17 +135,15 @@ else if (i >= 256)\n      * @param s An expression that returns a value with a maximum length of 16 336 bytes.\n      * @return Returns a hexadecimal representation of a value as a character string\n      */\n-    @SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"DB-9844\")\n-    public static String HEX(String s)\n-    {\n+    public static String HEX(String s) throws UnsupportedEncodingException {\n         if (s == null)\n             return null;\n-        else\n-            return StringUtil.toHexString(s.getBytes(),0,s.length()).toUpperCase();\n-\n+        else {\n+            byte[] b = s.getBytes(\"UTF-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebfb1ebd7d7c2fad7e6117142e0f89a50d4086b6"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2050dcb33d96ce48f8e1af5b3b4bab5404d759", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/0c2050dcb33d96ce48f8e1af5b3b4bab5404d759", "committedDate": "2020-11-12T10:21:25Z", "message": "DB-10718 address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTQ2ODY5", "url": "https://github.com/splicemachine/spliceengine/pull/4567#pullrequestreview-528946869", "createdAt": "2020-11-12T10:25:57Z", "commit": {"oid": "0c2050dcb33d96ce48f8e1af5b3b4bab5404d759"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTk2NDQ3", "url": "https://github.com/splicemachine/spliceengine/pull/4567#pullrequestreview-528996447", "createdAt": "2020-11-12T11:30:32Z", "commit": {"oid": "0c2050dcb33d96ce48f8e1af5b3b4bab5404d759"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTUyNTM1", "url": "https://github.com/splicemachine/spliceengine/pull/4567#pullrequestreview-529152535", "createdAt": "2020-11-12T14:41:13Z", "commit": {"oid": "0c2050dcb33d96ce48f8e1af5b3b4bab5404d759"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1044, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}