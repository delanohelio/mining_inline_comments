{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTQ4NDMy", "number": 4105, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo1Nzo1NlrOEkaeRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDoyNzoyNlrOEmBSMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE3OTI1OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo1Nzo1NlrOHTWB_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTozNjoxNFrOHVLoEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NTk1MQ==", "bodyText": "We should check not only SysSchemaDescriptor and SysIBMSchemaDescriptor here, but also the below list of system schemas:\n    protected SchemaDescriptor sysIBMADMSchemaDesc;\n    protected SchemaDescriptor systemUtilSchemaDesc;\n    protected SchemaDescriptor sysFunSchemaDesc;\n    protected SchemaDescriptor sysViewSchemaDesc;\n\nOtherwise, we cannot query objects in these schemas from other databases.", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r490045951", "createdAt": "2020-09-17T07:57:56Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -994,6 +994,9 @@ public SchemaDescriptor getSchemaDescriptor(String schemaName,\n         if(tc==null){\n             tc=getTransactionCompile();\n         }\n+        if (dbId == null) {\n+            dbId = getLCC().getDatabaseId();\n+        }\n \n         if(getSystemSchemaDescriptor().getSchemaName().equals(schemaName)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2e8349e2c2da05b0aa2031fb117111bc3e2524"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3MjYyNg==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r491972626", "createdAt": "2020-09-21T11:36:14Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -994,6 +994,9 @@ public SchemaDescriptor getSchemaDescriptor(String schemaName,\n         if(tc==null){\n             tc=getTransactionCompile();\n         }\n+        if (dbId == null) {\n+            dbId = getLCC().getDatabaseId();\n+        }\n \n         if(getSystemSchemaDescriptor().getSchemaName().equals(schemaName)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NTk1MQ=="}, "originalCommit": {"oid": "ff2e8349e2c2da05b0aa2031fb117111bc3e2524"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzAyMzg1OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/ddl/DDLUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDoyNzoyNlrOHVztCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDoyNzoyNlrOHVztCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyOTI1OQ==", "bodyText": "code to get lcc.getDatabaseId()", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r492629259", "createdAt": "2020-09-22T10:27:26Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/ddl/DDLUtils.java", "diffHunk": "@@ -376,9 +377,23 @@ public static void preAlterStats(DDLMessage.DDLChange change, DataDictionary dd,\n     public static void preDropSchema(DDLMessage.DDLChange change, DataDictionary dd, DependencyManager dm) throws StandardException {\n         if (LOG.isDebugEnabled())\n             SpliceLogUtils.debug(LOG,\"preDropSchema with change=%s\",change);\n-        dd.getDataDictionaryCache().schemaCacheRemove(change.getDropSchema().getSchemaName());\n-        dd.getDataDictionaryCache().oidSchemaCacheRemove(ProtoUtil.getDerbyUUID(change.getDropSchema().getSchemaUUID()));\n-\n+        SpliceTransactionResourceImpl transactionResource = null;\n+        boolean prepared = false;\n+        try {\n+            TxnView txn = DDLUtils.getLazyTransaction(change.getTxnId());\n+            transactionResource = new SpliceTransactionResourceImpl();\n+            prepared = transactionResource.marshallTransaction(txn);\n+            LanguageConnectionContext lcc = transactionResource.getLcc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9883778ad9ef42aafa8952dcb69553e6194d7c99"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2977, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}