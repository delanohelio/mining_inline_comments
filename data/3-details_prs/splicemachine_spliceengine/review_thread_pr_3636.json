{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTkzMDY2", "number": 3636, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMjo0MVrOECJozw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyNjoyNlrOECo6LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjkwNTExOnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMjo0MVrOGebjRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo1NDozM1rOGeftxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTg2Mg==", "bodyText": "I think we can remove this check", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434561862", "createdAt": "2020-06-03T13:22:41Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMDA4Nw==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434630087", "createdAt": "2020-06-03T14:54:33Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTg2Mg=="}, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjkwNjA0OnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMjo1MlrOGebj1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo1NDozOFrOGefuCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MjAwNg==", "bodyText": "This one too.", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434562006", "createdAt": "2020-06-03T13:22:52Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }\n+            if (LOG.isTraceEnabled()) {\n+                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size() +\n+                        \". mayHaveMoreCellsInARow=\" + HRegionUtil.mayHaveMoreCellsInARow(scannerContext));\n+                SpliceLogUtils.trace(LOG, \"Next: actual output: %s\" + outResult);\n+            }\n             return true;\n         }\n+        if (didWeFlush()) {\n+            SpliceLogUtils.warn(LOG, \"Flush happened after didWeFlush returned false\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMDE1NQ==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434630155", "createdAt": "2020-06-03T14:54:38Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }\n+            if (LOG.isTraceEnabled()) {\n+                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size() +\n+                        \". mayHaveMoreCellsInARow=\" + HRegionUtil.mayHaveMoreCellsInARow(scannerContext));\n+                SpliceLogUtils.trace(LOG, \"Next: actual output: %s\" + outResult);\n+            }\n             return true;\n         }\n+        if (didWeFlush()) {\n+            SpliceLogUtils.warn(LOG, \"Flush happened after didWeFlush returned false\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MjAwNg=="}, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjkyMTU2OnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyNjozMlrOGebtig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo1NjowNlrOGefyVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NDQ5MA==", "bodyText": "We should append a NULL byte, not the RowId of the Flush cell.", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434564490", "createdAt": "2020-06-03T13:26:32Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "diffHunk": "@@ -59,16 +63,35 @@ public boolean advance(){\n \n     public boolean nextResult() throws IOException{\n         cellScannerIndex=0;\n-        currentResult=this.resultScanner.next();\n-        if(currentResult!=null){\n-            cells=currentResult.rawCells();\n-            peakKeyValue=(KeyValue)current();\n-            rows++;\n-            return true;\n-        }else{\n+        previousResult = currentResult;\n+        currentResult = this.resultScanner.next();\n+        if(currentResult == null) {\n             // This shouldn't happen, throw exception and re-init the scanner\n             throw new DoNotRetryIOException(\"Memstore scanner shouldn't end prematurely\");\n         }\n+        if (currentResult.rawCells() != null && CellUtil.matchingFamily(currentResult.rawCells()[0], FLUSH) ) {\n+            if (LOG.isTraceEnabled())\n+                LOG.trace(\"CURRENT CELL: \" + currentResult.rawCells()[0]);\n+            assert currentResult.rawCells().length == 1;\n+            if (previousResult != null && previousResult.rawCells() != null) {\n+                assert previousResult.rawCells().length > 0;\n+                KeyValue previousCell = (KeyValue) previousResult.rawCells()[previousResult.rawCells().length - 1];\n+                if (LOG.isTraceEnabled())\n+                    LOG.trace(\"PREVIOUS CELL: \" + previousCell);\n+                if (CellUtil.matchingRows(currentResult.rawCells()[0], HConstants.EMPTY_START_ROW)) {\n+                    byte[] rowId = Bytes.add(\n+                            CellUtil.cloneRow(previousCell),\n+                            CellUtil.cloneRow(currentResult.rawCells()[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMTI1Mw==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434631253", "createdAt": "2020-06-03T14:56:06Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "diffHunk": "@@ -59,16 +63,35 @@ public boolean advance(){\n \n     public boolean nextResult() throws IOException{\n         cellScannerIndex=0;\n-        currentResult=this.resultScanner.next();\n-        if(currentResult!=null){\n-            cells=currentResult.rawCells();\n-            peakKeyValue=(KeyValue)current();\n-            rows++;\n-            return true;\n-        }else{\n+        previousResult = currentResult;\n+        currentResult = this.resultScanner.next();\n+        if(currentResult == null) {\n             // This shouldn't happen, throw exception and re-init the scanner\n             throw new DoNotRetryIOException(\"Memstore scanner shouldn't end prematurely\");\n         }\n+        if (currentResult.rawCells() != null && CellUtil.matchingFamily(currentResult.rawCells()[0], FLUSH) ) {\n+            if (LOG.isTraceEnabled())\n+                LOG.trace(\"CURRENT CELL: \" + currentResult.rawCells()[0]);\n+            assert currentResult.rawCells().length == 1;\n+            if (previousResult != null && previousResult.rawCells() != null) {\n+                assert previousResult.rawCells().length > 0;\n+                KeyValue previousCell = (KeyValue) previousResult.rawCells()[previousResult.rawCells().length - 1];\n+                if (LOG.isTraceEnabled())\n+                    LOG.trace(\"PREVIOUS CELL: \" + previousCell);\n+                if (CellUtil.matchingRows(currentResult.rawCells()[0], HConstants.EMPTY_START_ROW)) {\n+                    byte[] rowId = Bytes.add(\n+                            CellUtil.cloneRow(previousCell),\n+                            CellUtil.cloneRow(currentResult.rawCells()[0]));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NDQ5MA=="}, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjkzNDYxOnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/SkeletonClientSideRegionScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyOTozN1rOGeb1_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo1NTo1OVrOGefx_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NjY1Mw==", "bodyText": "This is not correct, this appends 4 NULL bytes instead of a single NULL byte.", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434566653", "createdAt": "2020-06-03T13:29:37Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/SkeletonClientSideRegionScanner.java", "diffHunk": "@@ -155,29 +155,29 @@ public boolean nextRaw(List<Cell> result) throws IOException {\n      * created by MemStore flushes or current scanner fails due to compaction\n      */\n     public void updateScanner() throws IOException {\n-            if (LOG.isDebugEnabled()) {\n-                SpliceLogUtils.debug(LOG,\n-                        \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n-                        hri, htd.getNameAsString(), rootDir, scan);\n-            }\n-            if (flushed) {\n+        if (LOG.isDebugEnabled()) {\n+            SpliceLogUtils.debug(LOG,\n+                    \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n+                    hri, htd.getNameAsString(), rootDir, scan);\n+        }\n+        if (flushed) {\n+            if (LOG.isDebugEnabled())\n+                SpliceLogUtils.debug(LOG, \"Flush occurred\");\n+            if (this.topCell != null) {\n                 if (LOG.isDebugEnabled())\n-                    SpliceLogUtils.debug(LOG, \"Flush occurred\");\n-                if (this.topCell != null) {\n-                    if (LOG.isDebugEnabled())\n-                        SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n-                    //noinspection deprecation\n-                    scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), new byte[]{0}));\n-                }\n+                    SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n+                //noinspection deprecation\n+                scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), Bytes.toBytes(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMTE2NA==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434631164", "createdAt": "2020-06-03T14:55:59Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/SkeletonClientSideRegionScanner.java", "diffHunk": "@@ -155,29 +155,29 @@ public boolean nextRaw(List<Cell> result) throws IOException {\n      * created by MemStore flushes or current scanner fails due to compaction\n      */\n     public void updateScanner() throws IOException {\n-            if (LOG.isDebugEnabled()) {\n-                SpliceLogUtils.debug(LOG,\n-                        \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n-                        hri, htd.getNameAsString(), rootDir, scan);\n-            }\n-            if (flushed) {\n+        if (LOG.isDebugEnabled()) {\n+            SpliceLogUtils.debug(LOG,\n+                    \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n+                    hri, htd.getNameAsString(), rootDir, scan);\n+        }\n+        if (flushed) {\n+            if (LOG.isDebugEnabled())\n+                SpliceLogUtils.debug(LOG, \"Flush occurred\");\n+            if (this.topCell != null) {\n                 if (LOG.isDebugEnabled())\n-                    SpliceLogUtils.debug(LOG, \"Flush occurred\");\n-                if (this.topCell != null) {\n-                    if (LOG.isDebugEnabled())\n-                        SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n-                    //noinspection deprecation\n-                    scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), new byte[]{0}));\n-                }\n+                    SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n+                //noinspection deprecation\n+                scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), Bytes.toBytes(0)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NjY1Mw=="}, "originalCommit": {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjAyODYxOnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyNjoyNlrOGfOCfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyNjoyNlrOGfOCfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4OTA1Mw==", "bodyText": "Minor comment, I would add a short version of the PR description here to explain what's going on with the RowKey rewrite for future reference", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r435389053", "createdAt": "2020-06-04T16:26:26Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "diffHunk": "@@ -59,16 +63,33 @@ public boolean advance(){\n \n     public boolean nextResult() throws IOException{\n         cellScannerIndex=0;\n-        currentResult=this.resultScanner.next();\n-        if(currentResult!=null){\n-            cells=currentResult.rawCells();\n-            peakKeyValue=(KeyValue)current();\n-            rows++;\n-            return true;\n-        }else{\n+        previousResult = currentResult;\n+        currentResult = this.resultScanner.next();\n+        if(currentResult == null) {\n             // This shouldn't happen, throw exception and re-init the scanner\n             throw new DoNotRetryIOException(\"Memstore scanner shouldn't end prematurely\");\n         }\n+        if (currentResult.rawCells() != null && CellUtil.matchingFamily(currentResult.rawCells()[0], FLUSH) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9a1af974638af17248ef541acff38f89868da08"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3181, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}