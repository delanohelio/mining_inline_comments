{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDQyMTE0", "number": 4182, "title": "DB-10230 Prioritize bringing metadata tables online after a failure", "bodyText": "", "createdAt": "2020-09-23T21:10:00Z", "url": "https://github.com/splicemachine/spliceengine/pull/4182", "merged": true, "mergeCommit": {"oid": "f41b09848ab1111c708907d741f8866b1e2f7861"}, "closed": true, "closedAt": "2020-10-06T08:23:25Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL9dfCgBqjM4MDIxODQ2MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOgi0TAH2gAyNDkyMDQyMTE0OmI0MGEyZmQyYmVlMWYzZTU4ZDhiNDJlNTEwMGE1ODJhOTI2MDRlMWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f836c9d15b954b76ae5e3322d7f5525e01c2c0eb", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/f836c9d15b954b76ae5e3322d7f5525e01c2c0eb", "committedDate": "2020-09-23T21:09:42Z", "message": "DB-10230 Prioritize bringing metadata tables online after a failure"}, "afterCommit": {"oid": "ba7931ab879253e1248c8692395dad7840b3fed3", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ba7931ab879253e1248c8692395dad7840b3fed3", "committedDate": "2020-09-24T09:06:41Z", "message": "DB-10230 Prioritize bringing metadata tables online after a failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba7931ab879253e1248c8692395dad7840b3fed3", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ba7931ab879253e1248c8692395dad7840b3fed3", "committedDate": "2020-09-24T09:06:41Z", "message": "DB-10230 Prioritize bringing metadata tables online after a failure"}, "afterCommit": {"oid": "7295271066a3fc6dcae711ebe32dad096fa5bfc8", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7295271066a3fc6dcae711ebe32dad096fa5bfc8", "committedDate": "2020-09-24T09:41:04Z", "message": "DB-10230 Prioritize bringing metadata tables online after a failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MjgxODg1", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-496281885", "createdAt": "2020-09-25T09:59:52Z", "commit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwOTo1OTo1MlrOHX9PiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDoxNzowMFrOHX9xaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MjY5Nw==", "bodyText": "Address SE_NO_SERIALVERSIONID spotbugs", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494882697", "createdAt": "2020-09-25T09:59:52Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericResultDescription.java", "diffHunk": "@@ -57,8 +58,7 @@\n  *\n  */\n public final class GenericResultDescription", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MzEyNA==", "bodyText": "Use Constant enum instead.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494883124", "createdAt": "2020-09-25T10:00:40Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -6693,8 +6693,8 @@ public void makeCatalog(TabInfoImpl ti,SchemaDescriptor sd,\n                         tc,\n                         ti.getCatalogRowFactory().makeEmptyRowForLatestVersion(),\n                         heapProperties,\n-                        columnOrder\n-                )\n+                        columnOrder,\n+                        100)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MzI2Mg==", "bodyText": "use constant enum instead.\nAlso, the //not temporary comment refers to TransactionController.IS_DEFAULT, which becomes less apparent after your change. I suggest bringing the priority to the next line.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494883262", "createdAt": "2020-09-25T10:00:55Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -7134,7 +7135,7 @@ protected ConglomerateDescriptor bootstrapOneIndex(SchemaDescriptor sd,\n                 null, //default sort order\n                 null, //default collation id's for collumns in all system congloms\n                 indexProperties, // default properties\n-                TransactionController.IS_DEFAULT); // not temporary\n+                TransactionController.IS_DEFAULT, 100); // not temporary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDE2Nw==", "bodyText": "Same comment about // not temporary", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494884167", "createdAt": "2020-09-25T10:02:45Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -7296,7 +7298,7 @@ protected long createConglomerate(TransactionController tc,\n                 columnOrdering,\n                 null, // default collation ids\n                 properties, // default properties\n-                TransactionController.IS_DEFAULT); // not temporary\n+                TransactionController.IS_DEFAULT, priority); // not temporary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDI3Ng==", "bodyText": "Use a constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494884276", "createdAt": "2020-09-25T10:02:57Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -10635,7 +10637,8 @@ public void run(){\n                 heapProperties.setProperty(\"tableDisplayName\", ti.getTableName());\n                 heapProperties.setProperty(\"catalogVersion\", version);\n                 ExecRow rowTemplate=ti.getCatalogRowFactory().makeEmptyRowForLatestVersion();\n-                long conglomerate=createConglomerate(tc,rowTemplate,heapProperties);\n+\n+                long conglomerate=createConglomerate(tc,rowTemplate,heapProperties, 100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDM1OQ==", "bodyText": "Use a constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494884359", "createdAt": "2020-09-25T10:03:05Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/conn/GenericLanguageConnectionContext.java", "diffHunk": "@@ -1640,7 +1640,7 @@ private TableDescriptor cleanupTempTableOnCommitOrRollback(TableDescriptor td,\n                         td.getColumnCollationIds(),  // same ids as old conglomerate\n                         null, // properties\n                         (TransactionController.IS_TEMPORARY|\n-                                TransactionController.IS_KEPT));\n+                                TransactionController.IS_KEPT), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDcyMg==", "bodyText": "Use constant (also later in this file)", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494884722", "createdAt": "2020-09-25T10:03:51Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/TemporaryRowHolderImpl.java", "diffHunk": "@@ -282,7 +280,7 @@ public void insert(ExecRow inputRow)\n                     collation_ids,\n                     properties,\n                     TransactionController.IS_TEMPORARY | \n-                    TransactionController.IS_KEPT);\n+                    TransactionController.IS_KEPT, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NTQ4Mw==", "bodyText": "Same as above.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494885483", "createdAt": "2020-09-25T10:05:13Z", "author": {"login": "arnaud-splice"}, "path": "db-testing/src/test/java/com/splicemachine/dbTesting/unitTests/store/T_XA.java", "diffHunk": "@@ -221,7 +221,7 @@ void XATest_1(\n \t\t\t\tnull,  \t//column sort order - not required for heap\n \t\t\t\tnull,  \t//default collation\n                 null,         // default properties\n-                TransactionController.IS_DEFAULT);       // not temporary\n+                TransactionController.IS_DEFAULT, 0);       // not temporary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NjEwMQ==", "bodyText": "Remove import", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494886101", "createdAt": "2020-09-25T10:06:28Z", "author": {"login": "arnaud-splice"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -23,6 +23,7 @@\n import com.splicemachine.si.constants.SIConstants;\n import com.splicemachine.test.LongerThanTwoMinutes;\n import com.splicemachine.test.SerialTest;\n+import org.apache.commons.lang.ArrayUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NjY0Mg==", "bodyText": "Should we really use such a high number? If I understand correctly, hbase's own system tables use 200, so I don't think we should go above that.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494886642", "createdAt": "2020-09-25T10:07:37Z", "author": {"login": "arnaud-splice"}, "path": "hbase_sql/src/main/java/com/splicemachine/lifecycle/RegionServerLifecycle.java", "diffHunk": "@@ -64,7 +64,7 @@ public void distributedStart() throws IOException{\n                             .newBuilder(spliceInit)\n                             .setColumnFamily(\n                                     ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(\"FOO\")).build()\n-                            ).build();\n+                            ).setPriority(1000).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4Njc0Nw==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494886747", "createdAt": "2020-09-25T10:07:49Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HBaseConnectionFactory.java", "diffHunk": "@@ -151,12 +151,14 @@ public ServerName getMasterServer() throws SQLException{\n \n     public HTableDescriptor generateDefaultSIGovernedTable(String tableName){\n         HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(namespace,tableName));\n+        desc.setPriority(110);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4ODA5MQ==", "bodyText": "Define a separate withPriority instead of conflating name and priority setters in one method.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494888091", "createdAt": "2020-09-25T10:10:28Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HPartitionCreator.java", "diffHunk": "@@ -54,9 +54,15 @@ public HPartitionCreator(HBaseTableInfoFactory tableInfoFactory,Connection conne\n \n     @Override\n     public PartitionCreator withName(String name){\n+        return withName(name, 0);\n+    }\n+\n+    @Override\n+    public PartitionCreator withName(String name, int priority){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4ODIzNA==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494888234", "createdAt": "2020-09-25T10:10:43Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptForReplication.java", "diffHunk": "@@ -39,12 +39,12 @@ protected void upgradeSystemTables() throws StandardException {\n             PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n             if (!admin.tableExists(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME)) {\n                 LOG.info(\"Creating \" + HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME);\n-                admin.newPartition().withName(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME).create();\n+                admin.newPartition().withName(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME, 100).create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4ODMwNA==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494888304", "createdAt": "2020-09-25T10:10:50Z", "author": {"login": "arnaud-splice"}, "path": "mem_sql/src/main/java/com/splicemachine/derby/lifecycle/PipelinePartitionCreator.java", "diffHunk": "@@ -42,6 +42,10 @@ public PipelinePartitionCreator(PartitionCreator baseCreator){\n     }\n \n     public PartitionCreator withName(String name){\n+        return withName(name, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4ODM0MA==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494888340", "createdAt": "2020-09-25T10:10:56Z", "author": {"login": "arnaud-splice"}, "path": "mem_storage/src/main/java/com/splicemachine/storage/MPartitionFactory.java", "diffHunk": "@@ -67,6 +67,11 @@ public PartitionAdmin getAdmin() throws IOException{\n \n         @Override\n         public PartitionCreator withName(String name){\n+            return withName(name, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MDM1Ng==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494890356", "createdAt": "2020-09-25T10:14:56Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/TriggerRowHolderImpl.java", "diffHunk": "@@ -306,7 +309,7 @@ private void createConglomerate(ExecRow templateRow) throws StandardException{\n                  null, //collation_ids\n                  properties,\n                  TransactionController.IS_TEMPORARY |\n-                 TransactionController.IS_KEPT);\n+                 TransactionController.IS_KEPT, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTAyMA==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891020", "createdAt": "2020-09-25T10:16:12Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/actions/AlterTableConstantOperation.java", "diffHunk": "@@ -412,7 +405,7 @@ private void executeDropPrimaryKey(Activation activation,\n             properties, // properties\n             tableType == TableDescriptor.GLOBAL_TEMPORARY_TABLE_TYPE ?\n                 (TransactionController.IS_TEMPORARY | TransactionController.IS_KEPT) :\n-                TransactionController.IS_DEFAULT);\n+                TransactionController.IS_DEFAULT, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTEwOQ==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891109", "createdAt": "2020-09-25T10:16:25Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/actions/CreateIndexConstantOperation.java", "diffHunk": "@@ -850,7 +850,7 @@ private void createAndPopulateIndex(Activation activation,\n              */\n             conglomId = tc.createConglomerate(td.isExternal(),indexType, indexTemplateRow.getRowArray(),\n                     getColumnOrderings(isAscending.length), indexRowGenerator.getColumnCollationIds(\n-                            td.getColumnDescriptorList()), indexProperties, TransactionController.IS_DEFAULT, splitKeys);\n+                            td.getColumnDescriptorList()), indexProperties, TransactionController.IS_DEFAULT, splitKeys, 0 /* priority = 0 */);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTE3OA==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891178", "createdAt": "2020-09-25T10:16:36Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/actions/CreateTableConstantOperation.java", "diffHunk": "@@ -315,7 +315,7 @@ protected void createTable(Activation activation) throws StandardException {\n                 tableType == TableDescriptor.GLOBAL_TEMPORARY_TABLE_TYPE ?\n                         (TransactionController.IS_TEMPORARY | TransactionController.IS_KEPT) :\n                         TransactionController.IS_DEFAULT,\n-                splitKeys);\n+                splitKeys, 0 /* priority = 0 */ );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTI0Nw==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891247", "createdAt": "2020-09-25T10:16:43Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/actions/TruncateTableConstantOperation.java", "diffHunk": "@@ -190,7 +190,7 @@ private void truncateTable(TableDescriptor td, Activation activation) throws Sta\n                         columnOrdering, //column sort order - not required for heap\n                         td.getColumnCollationIds(),\n                         properties,\n-                        TransactionController.IS_DEFAULT);\n+                        TransactionController.IS_DEFAULT, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTI5Nw==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891297", "createdAt": "2020-09-25T10:16:50Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/PropertyConglomerate.java", "diffHunk": "@@ -94,7 +94,7 @@ public PropertyConglomerate(TransactionController tc, boolean create, Properties\n                     null,\n \t\t\t\t\t\tnull, // use default collation for property conglom.\n                     conglomProperties, \n-                    TransactionController.IS_DEFAULT);\n+                    TransactionController.IS_DEFAULT, 100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5MTM2OQ==", "bodyText": "Use constant", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r494891369", "createdAt": "2020-09-25T10:17:00Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java", "diffHunk": "@@ -616,7 +617,7 @@ public long recreateAndLoadConglomerate(boolean isExternal, String implementatio\n         // RESOLVE: this create the conglom LOGGED, this is slower than\n         // necessary although still correct.\n         long conglomId = createConglomerate(isExternal,implementation, template,\n-                columnOrder, collationIds, properties, temporaryFlag);\n+                columnOrder, collationIds, properties, temporaryFlag, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2Nzg4ODA1", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-496788805", "createdAt": "2020-09-25T20:08:46Z", "commit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDowODo0NlrOHYRD_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDoyMToyMFrOHYRYWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIwNzQyMg==", "bodyText": "SPLICE_INIT table should not be created, so no need to change its priority.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r495207422", "createdAt": "2020-09-25T20:08:46Z", "author": {"login": "jyuanca"}, "path": "hbase_sql/src/main/java/com/splicemachine/lifecycle/RegionServerLifecycle.java", "diffHunk": "@@ -64,7 +64,7 @@ public void distributedStart() throws IOException{\n                             .newBuilder(spliceInit)\n                             .setColumnFamily(\n                                     ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(\"FOO\")).build()\n-                            ).build();\n+                            ).setPriority(1000).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NjY0Mg=="}, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxMjYzNA==", "bodyText": "replace it with HConstants.ADMIN_QOS", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r495212634", "createdAt": "2020-09-25T20:21:20Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -6693,8 +6693,8 @@ public void makeCatalog(TabInfoImpl ti,SchemaDescriptor sd,\n                         tc,\n                         ti.getCatalogRowFactory().makeEmptyRowForLatestVersion(),\n                         heapProperties,\n-                        columnOrder\n-                )\n+                        columnOrder,\n+                        100)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MzEyNA=="}, "originalCommit": {"oid": "225eca6056527ca6aeb3b526a7e478ce8dea6cba"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14971d3cbeec3e15ead76e8d8900ece01c4cfa5b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/14971d3cbeec3e15ead76e8d8900ece01c4cfa5b", "committedDate": "2020-09-28T11:29:05Z", "message": "DB-10230 code review 1: use constants"}, "afterCommit": {"oid": "d66d9af371d7f58f8012666ea18b295c82176077", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d66d9af371d7f58f8012666ea18b295c82176077", "committedDate": "2020-09-28T11:35:25Z", "message": "DB-10230 code review 1: use constants"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d66d9af371d7f58f8012666ea18b295c82176077", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d66d9af371d7f58f8012666ea18b295c82176077", "committedDate": "2020-09-28T11:35:25Z", "message": "DB-10230 code review 1: use constants"}, "afterCommit": {"oid": "ed0d72d11cc46a8ad7ebbf9e0425ef28a9856dc5", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ed0d72d11cc46a8ad7ebbf9e0425ef28a9856dc5", "committedDate": "2020-09-28T11:35:57Z", "message": "DB-10230 code review 1: use constants"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed0d72d11cc46a8ad7ebbf9e0425ef28a9856dc5", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ed0d72d11cc46a8ad7ebbf9e0425ef28a9856dc5", "committedDate": "2020-09-28T11:35:57Z", "message": "DB-10230 code review 1: use constants"}, "afterCommit": {"oid": "eb5b08e33be8fdadbf3167717adf979d2536b2af", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/eb5b08e33be8fdadbf3167717adf979d2536b2af", "committedDate": "2020-09-28T14:23:00Z", "message": "DB-10230 code review 1: use constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mjc3ODc5", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-498277879", "createdAt": "2020-09-29T09:24:21Z", "commit": {"oid": "eb5b08e33be8fdadbf3167717adf979d2536b2af"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToyNDoyMlrOHZkRMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToyNDoyMlrOHZkRMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU3MDY3NQ==", "bodyText": "Please use first lower case for method names", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r496570675", "createdAt": "2020-09-29T09:24:22Z", "author": {"login": "dgomezferro"}, "path": "db-testing/src/test/java/com/splicemachine/dbTesting/unitTests/store/T_XA.java", "diffHunk": "@@ -266,6 +260,17 @@ void XATest_1(\n         REPORT(\"(XATest_1) finishing\");\n     }\n \n+    private long CreateHeapConglomerate(TransactionController tc, T_AccessRow template_row) throws StandardException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb5b08e33be8fdadbf3167717adf979d2536b2af"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c3618c7f56da8841311401d814453bf4c229e14", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9c3618c7f56da8841311401d814453bf4c229e14", "committedDate": "2020-09-29T09:35:32Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}, "afterCommit": {"oid": "fdfa2afedbc9b83fa9e38684fe2232db12bcbf3b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/fdfa2afedbc9b83fa9e38684fe2232db12bcbf3b", "committedDate": "2020-09-29T09:37:25Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdfa2afedbc9b83fa9e38684fe2232db12bcbf3b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/fdfa2afedbc9b83fa9e38684fe2232db12bcbf3b", "committedDate": "2020-09-29T09:37:25Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}, "afterCommit": {"oid": "5057785e6c1ccf338fd904e048a887e973e76366", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5057785e6c1ccf338fd904e048a887e973e76366", "committedDate": "2020-09-29T09:38:53Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5057785e6c1ccf338fd904e048a887e973e76366", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5057785e6c1ccf338fd904e048a887e973e76366", "committedDate": "2020-09-29T09:38:53Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}, "afterCommit": {"oid": "d49aa3c9e2df21d09f19ab00dc240eb336628f3d", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d49aa3c9e2df21d09f19ab00dc240eb336628f3d", "committedDate": "2020-09-29T11:33:20Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d49aa3c9e2df21d09f19ab00dc240eb336628f3d", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d49aa3c9e2df21d09f19ab00dc240eb336628f3d", "committedDate": "2020-09-29T11:33:20Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}, "afterCommit": {"oid": "21a2d6343ba867e3dd0a8c9e1551c037bf131266", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/21a2d6343ba867e3dd0a8c9e1551c037bf131266", "committedDate": "2020-09-29T14:52:49Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21a2d6343ba867e3dd0a8c9e1551c037bf131266", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/21a2d6343ba867e3dd0a8c9e1551c037bf131266", "committedDate": "2020-09-29T14:52:49Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}, "afterCommit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/71ec0bdc926efd0f28b2393e28b0d526b917ebe2", "committedDate": "2020-09-29T15:38:07Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTc1NTU4", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-498975558", "createdAt": "2020-09-29T22:41:00Z", "commit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjo0MTowMFrOHaEujA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjo0MTowMFrOHaEujA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEwMjQ3Ng==", "bodyText": "The change are not necessary, because priority will be bumped up in UpgradeScriptForTablePriorities", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497102476", "createdAt": "2020-09-29T22:41:00Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptForReplication.java", "diffHunk": "@@ -39,12 +40,14 @@ protected void upgradeSystemTables() throws StandardException {\n             PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n             if (!admin.tableExists(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME)) {\n                 LOG.info(\"Creating \" + HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME);\n-                admin.newPartition().withName(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME).create();\n+                admin.newPartition().withName(HBaseConfiguration.MASTER_SNAPSHOTS_TABLE_NAME,\n+                        Conglomerate.Priority.HIGH).create();\n             }\n \n             if (!admin.tableExists(HBaseConfiguration.REPLICA_REPLICATION_PROGRESS_TABLE_NAME)) {\n                 LOG.info(\"Creating \" + HBaseConfiguration.REPLICA_REPLICATION_PROGRESS_TABLE_NAME);\n-                admin.newPartition().withName(HBaseConfiguration.REPLICA_REPLICATION_PROGRESS_TABLE_NAME).create();\n+                admin.newPartition().withName(HBaseConfiguration.REPLICA_REPLICATION_PROGRESS_TABLE_NAME,\n+                        Conglomerate.Priority.HIGH).create();\n             }\n         } catch (IOException e) {\n             LOG.warn(\"Exception while creating while creating replication tables\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDAwNDM1", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499000435", "createdAt": "2020-09-29T23:50:25Z", "commit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzo1MDoyNVrOHaH0vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowMjowMFrOHaITtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1MzIxMg==", "bodyText": "Try not to use deprecated HTableDescripor", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497153212", "createdAt": "2020-09-29T23:50:25Z", "author": {"login": "jyuanca"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HBasePartitionAdmin.java", "diffHunk": "@@ -720,4 +724,65 @@ private UserPermission getPermission(List<UserPermission> permissions, String us\n         }\n         return null;\n     }\n+\n+    static public int getPriorityShouldHave(HTableDescriptor td)\n+    {\n+        String s = td.getValue(\"tableDisplayName\");\n+        if( s == null ) {\n+            return HConstants.HIGH_QOS;\n+        }\n+        else {\n+            if (s.startsWith(\"SYS\") || s.startsWith(\"splice:\") || s.equals(\"MON_GET_CONNECTION\")) {\n+                return HConstants.ADMIN_QOS;\n+            } else {\n+                return HConstants.NORMAL_QOS;\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public int upgradeTablePriorities() throws Exception {\n+        return upgradeTablePriorities(admin);\n+    }\n+\n+    public static int upgradeTablePriorities(Admin admin) throws Exception\n+    {\n+        final int NUM_THREADS = 10;\n+        ExecutorService executor = null;\n+        try {\n+            HTableDescriptor[] tableDescriptors = admin.listTables();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTE0Mw==", "bodyText": "We only need to set priority for splice system tables, so no need to check for all tables in HBase, especially when there are 100K+ tables on the cluster. It will take a while to read all the table descriptors.\nYou can get all tables and indexes in schema SYS, SYSIBM, and SYSIBMADMIN are available at DataDicitonaryImpl.coreInfo and DataDicitonaryImpl.noncoreInfo. Other important tables are HBaseBackupUtils.spliceSystemTables. Only processing these tables can make upgrade time independent of cluster size. An example to add a property value to table descriptor is UpgradeScriptToAddCatalogVersion.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497161143", "createdAt": "2020-09-30T00:02:00Z", "author": {"login": "jyuanca"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HBasePartitionAdmin.java", "diffHunk": "@@ -720,4 +724,65 @@ private UserPermission getPermission(List<UserPermission> permissions, String us\n         }\n         return null;\n     }\n+\n+    static public int getPriorityShouldHave(HTableDescriptor td)\n+    {\n+        String s = td.getValue(\"tableDisplayName\");\n+        if( s == null ) {\n+            return HConstants.HIGH_QOS;\n+        }\n+        else {\n+            if (s.startsWith(\"SYS\") || s.startsWith(\"splice:\") || s.equals(\"MON_GET_CONNECTION\")) {\n+                return HConstants.ADMIN_QOS;\n+            } else {\n+                return HConstants.NORMAL_QOS;\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public int upgradeTablePriorities() throws Exception {\n+        return upgradeTablePriorities(admin);\n+    }\n+\n+    public static int upgradeTablePriorities(Admin admin) throws Exception\n+    {\n+        final int NUM_THREADS = 10;\n+        ExecutorService executor = null;\n+        try {\n+            HTableDescriptor[] tableDescriptors = admin.listTables();\n+\n+            List<Callable<Void>> upgradeTasks = Arrays.stream(tableDescriptors)\n+                    .filter( td -> td.getPriority() != getPriorityShouldHave(td))\n+                    .map( td -> (Callable<Void>) () -> {\n+                        setHTablePriority(admin, td, getPriorityShouldHave(td));\n+                        return null;\n+                    })\n+                    .collect(Collectors.toList());\n+            executor = Executors.newFixedThreadPool( NUM_THREADS );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjA1OTcz", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499205973", "createdAt": "2020-09-30T08:38:14Z", "commit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9fb6478114a12924ebad0921862b46c30951adb2", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9fb6478114a12924ebad0921862b46c30951adb2", "committedDate": "2020-09-30T14:40:00Z", "message": "DB-10230 upgrade script 2"}, "afterCommit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5907b48e4e07eba02078cf13f8a67780b057118f", "committedDate": "2020-09-30T15:17:57Z", "message": "DB-10230 upgrade script 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTUzMDY2", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499553066", "createdAt": "2020-09-30T15:26:03Z", "commit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToyNjowM1rOHajIdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToyNjowM1rOHajIdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMDYzMA==", "bodyText": "ok, fixed. sdd.upgradeTablePriorities will have a list of tables to check", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497600630", "createdAt": "2020-09-30T15:26:03Z", "author": {"login": "martinrupp"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HBasePartitionAdmin.java", "diffHunk": "@@ -720,4 +724,65 @@ private UserPermission getPermission(List<UserPermission> permissions, String us\n         }\n         return null;\n     }\n+\n+    static public int getPriorityShouldHave(HTableDescriptor td)\n+    {\n+        String s = td.getValue(\"tableDisplayName\");\n+        if( s == null ) {\n+            return HConstants.HIGH_QOS;\n+        }\n+        else {\n+            if (s.startsWith(\"SYS\") || s.startsWith(\"splice:\") || s.equals(\"MON_GET_CONNECTION\")) {\n+                return HConstants.ADMIN_QOS;\n+            } else {\n+                return HConstants.NORMAL_QOS;\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public int upgradeTablePriorities() throws Exception {\n+        return upgradeTablePriorities(admin);\n+    }\n+\n+    public static int upgradeTablePriorities(Admin admin) throws Exception\n+    {\n+        final int NUM_THREADS = 10;\n+        ExecutorService executor = null;\n+        try {\n+            HTableDescriptor[] tableDescriptors = admin.listTables();\n+\n+            List<Callable<Void>> upgradeTasks = Arrays.stream(tableDescriptors)\n+                    .filter( td -> td.getPriority() != getPriorityShouldHave(td))\n+                    .map( td -> (Callable<Void>) () -> {\n+                        setHTablePriority(admin, td, getPriorityShouldHave(td));\n+                        return null;\n+                    })\n+                    .collect(Collectors.toList());\n+            executor = Executors.newFixedThreadPool( NUM_THREADS );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTE0Mw=="}, "originalCommit": {"oid": "71ec0bdc926efd0f28b2393e28b0d526b917ebe2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTY5OTEy", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499569912", "createdAt": "2020-09-30T15:43:39Z", "commit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTo0MzozOVrOHaj6Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTo0MzozOVrOHaj6Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYxMzM4Mw==", "bodyText": "Nitpick: use getNonCoreTI(), which invokes faultInTabInfo for you.", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497613383", "createdAt": "2020-09-30T15:43:39Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "diffHunk": "@@ -1331,6 +1333,37 @@ public void removeFKDependencyOnPrivileges(TransactionController tc) throws Stan\n                 \"SYS.SYSDEPENDS updated: Foreign keys dependencies on RoleDescriptors or permission descriptors deleted, total rows deleted: \" + rowsToDelete.size());\n     }\n \n+    public int upgradeTablePriorities(TransactionController tc) throws Exception {\n+        PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n+        ArrayList<String> toUpgrade = new ArrayList<>();\n+        Function<TabInfoImpl, Void> addTabInfo =  (TabInfoImpl info ) ->\n+                {\n+                    toUpgrade.add( Long.toString(info.getHeapConglomerate()) );\n+                    for( int j = 0; j < info.getNumberOfIndexes(); j++ )\n+                        toUpgrade.add( Long.toString(info.getIndexConglomerate(j)) );\n+                    return null;\n+                };\n+        for (int i = 0; i < coreInfo.length; ++i) {\n+            assert coreInfo[i] != null;\n+            addTabInfo.apply(coreInfo[i]);\n+        }\n+        for (int i = 0; i < NUM_NONCORE; ++i) {\n+            // noncoreInfo[x] will be null otherwise\n+            TabInfoImpl ti = getNonCoreTIByNumber(i+NUM_CORE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTkyMTE3", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499592117", "createdAt": "2020-09-30T16:07:13Z", "commit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjowNzoxNFrOHak7BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjowNzoxNFrOHak7BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyOTk1Ng==", "bodyText": "Nitpick: I would not even include VERY_HIGH since it maps to something that may be dangerous to use. (HIGH_QOS being even greater than SYSTEMTABLE_QOS that is used for HBASE system tables)", "url": "https://github.com/splicemachine/spliceengine/pull/4182#discussion_r497629956", "createdAt": "2020-09-30T16:07:14Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HPartitionCreator.java", "diffHunk": "@@ -54,9 +56,25 @@ public HPartitionCreator(HBaseTableInfoFactory tableInfoFactory,Connection conne\n \n     @Override\n     public PartitionCreator withName(String name){\n+        return withName(name, Conglomerate.Priority.NORMAL);\n+    }\n+\n+    public static int GetHBasePriority(Conglomerate.Priority priority)\n+    {\n+        switch(priority){\n+            case NORMAL:    return HConstants.NORMAL_QOS;\n+            case HIGH:      return HConstants.ADMIN_QOS;\n+            case VERY_HIGH: return HConstants.HIGH_QOS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e47cb10387c1b64bfce399f41bac4251e671d64", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2e47cb10387c1b64bfce399f41bac4251e671d64", "committedDate": "2020-09-30T21:01:31Z", "message": "DB-10230 Prioritize bringing metadata tables online after a failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0abf18a426a12d869fc5e053fc9c4db74e5833", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3c0abf18a426a12d869fc5e053fc9c4db74e5833", "committedDate": "2020-09-30T21:01:31Z", "message": "DB-10230 fix SpotBugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7c26db28fd4f4c9e469222f7f03a15aa41f55e0", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b7c26db28fd4f4c9e469222f7f03a15aa41f55e0", "committedDate": "2020-09-30T21:01:31Z", "message": "DB-10230 extract HTablePrioritiesIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89ea206d7ae10e497c86a523fee0635daac2bd5b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/89ea206d7ae10e497c86a523fee0635daac2bd5b", "committedDate": "2020-09-30T21:02:43Z", "message": "DB-10230 code review 1: use constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "971a356f2bcd0d8d26dd78584449c05dec0e0731", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/971a356f2bcd0d8d26dd78584449c05dec0e0731", "committedDate": "2020-09-30T21:02:43Z", "message": "[WIP] DB-10230 code review 2: upgrade script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4995af729680f01509a0c6c8d02b4c1f9d31cb05", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/4995af729680f01509a0c6c8d02b4c1f9d31cb05", "committedDate": "2020-09-30T21:02:43Z", "message": "DB-10230 upgrade script 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5907b48e4e07eba02078cf13f8a67780b057118f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5907b48e4e07eba02078cf13f8a67780b057118f", "committedDate": "2020-09-30T15:17:57Z", "message": "DB-10230 upgrade script 2"}, "afterCommit": {"oid": "bd4cfb28179a88754fb953ee96246fc66bf0fc01", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/bd4cfb28179a88754fb953ee96246fc66bf0fc01", "committedDate": "2020-09-30T21:02:43Z", "message": "DB-10230 fix / code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTQ5MTU4", "url": "https://github.com/splicemachine/spliceengine/pull/4182#pullrequestreview-499949158", "createdAt": "2020-10-01T01:04:35Z", "commit": {"oid": "bd4cfb28179a88754fb953ee96246fc66bf0fc01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9856a69583a038b0dc59f84b0d58f7f5343c9fa1", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9856a69583a038b0dc59f84b0d58f7f5343c9fa1", "committedDate": "2020-10-01T05:45:49Z", "message": "DB-10230 fix / code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd4cfb28179a88754fb953ee96246fc66bf0fc01", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/bd4cfb28179a88754fb953ee96246fc66bf0fc01", "committedDate": "2020-09-30T21:02:43Z", "message": "DB-10230 fix / code review"}, "afterCommit": {"oid": "9856a69583a038b0dc59f84b0d58f7f5343c9fa1", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9856a69583a038b0dc59f84b0d58f7f5343c9fa1", "committedDate": "2020-10-01T05:45:49Z", "message": "DB-10230 fix / code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d077042f111667826b9f2385b586bdf235297bc", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3d077042f111667826b9f2385b586bdf235297bc", "committedDate": "2020-10-01T17:18:31Z", "message": "Merge remote-tracking branch 'origin/master' into DB-10230"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b40a2fd2bee1f3e58d8b42e5100a582a92604e1d", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b40a2fd2bee1f3e58d8b42e5100a582a92604e1d", "committedDate": "2020-10-02T07:07:10Z", "message": "Merge branch 'master' into DB-10230"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1128, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}