{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzA1OTY0", "number": 3910, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjoxNzoxMFrOEUOBjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTozMzozM1rOEVjHPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjM2NzQ5OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjoxNzoxMFrOG6YWMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo0NzozNFrOG8WN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2OTQ4OQ==", "bodyText": "Is it possible to return this warning as part of the analyze output in addition to the warning in the log? so that user is aware that some column stats are skipped.", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r463869489", "createdAt": "2020-07-31T22:17:10Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1045,8 +1045,19 @@ public boolean hasNext() {\n                                                 ObjectInputStream ois = new ObjectInputStream(bais);\n                                                 // compose the entry for a given column\n                                                 ExecRow statsRow = StatisticsAdmin.generateRowFromStats(conglomId, \"-All-\", columnId, (ColumnStatisticsImpl) ois.readObject());\n-                                                dataDictionary.addColumnStatistics(statsRow, tc);\n-                                                bais.close();\n+                                                try {\n+                                                    dataDictionary.addColumnStatistics(statsRow, tc);\n+                                                } catch (StandardException e) {\n+                                                    // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n+                                                    if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                        SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n+                                                                conglomId, columnId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d8ff4177b4f233e2def6e5ac530d51f34ac1a0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI5ODM4NA==", "bodyText": "I was thinking of something similar but not sure what's the correct way of doing it. It seems the standard way is to throw an exception and set the severity to warning. But we cannot throw here since we want to continue. Building the warning message into the result table would misuse the a char column, unless we add an extra column to the result table schema and set the message there. Not sure we should do that, either.\nDo you have any suggestions?", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r464298384", "createdAt": "2020-08-03T09:27:03Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1045,8 +1045,19 @@ public boolean hasNext() {\n                                                 ObjectInputStream ois = new ObjectInputStream(bais);\n                                                 // compose the entry for a given column\n                                                 ExecRow statsRow = StatisticsAdmin.generateRowFromStats(conglomId, \"-All-\", columnId, (ColumnStatisticsImpl) ois.readObject());\n-                                                dataDictionary.addColumnStatistics(statsRow, tc);\n-                                                bais.close();\n+                                                try {\n+                                                    dataDictionary.addColumnStatistics(statsRow, tc);\n+                                                } catch (StandardException e) {\n+                                                    // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n+                                                    if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                        SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n+                                                                conglomId, columnId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2OTQ4OQ=="}, "originalCommit": {"oid": "95d8ff4177b4f233e2def6e5ac530d51f34ac1a0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxMTQzNA==", "bodyText": "I'm thinking of adding an extra column in the analyze output to indicate whether some column stats were not saved due to space limitation. Thanks!", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r465811434", "createdAt": "2020-08-05T15:27:23Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1045,8 +1045,19 @@ public boolean hasNext() {\n                                                 ObjectInputStream ois = new ObjectInputStream(bais);\n                                                 // compose the entry for a given column\n                                                 ExecRow statsRow = StatisticsAdmin.generateRowFromStats(conglomId, \"-All-\", columnId, (ColumnStatisticsImpl) ois.readObject());\n-                                                dataDictionary.addColumnStatistics(statsRow, tc);\n-                                                bais.close();\n+                                                try {\n+                                                    dataDictionary.addColumnStatistics(statsRow, tc);\n+                                                } catch (StandardException e) {\n+                                                    // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n+                                                    if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                        SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n+                                                                conglomId, columnId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2OTQ4OQ=="}, "originalCommit": {"oid": "95d8ff4177b4f233e2def6e5ac530d51f34ac1a0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNzkwNg==", "bodyText": "Got it, will add another commit.", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r465827906", "createdAt": "2020-08-05T15:51:28Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1045,8 +1045,19 @@ public boolean hasNext() {\n                                                 ObjectInputStream ois = new ObjectInputStream(bais);\n                                                 // compose the entry for a given column\n                                                 ExecRow statsRow = StatisticsAdmin.generateRowFromStats(conglomId, \"-All-\", columnId, (ColumnStatisticsImpl) ois.readObject());\n-                                                dataDictionary.addColumnStatistics(statsRow, tc);\n-                                                bais.close();\n+                                                try {\n+                                                    dataDictionary.addColumnStatistics(statsRow, tc);\n+                                                } catch (StandardException e) {\n+                                                    // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n+                                                    if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                        SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n+                                                                conglomId, columnId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2OTQ4OQ=="}, "originalCommit": {"oid": "95d8ff4177b4f233e2def6e5ac530d51f34ac1a0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMTczMw==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r465931733", "createdAt": "2020-08-05T18:47:34Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1045,8 +1045,19 @@ public boolean hasNext() {\n                                                 ObjectInputStream ois = new ObjectInputStream(bais);\n                                                 // compose the entry for a given column\n                                                 ExecRow statsRow = StatisticsAdmin.generateRowFromStats(conglomId, \"-All-\", columnId, (ColumnStatisticsImpl) ois.readObject());\n-                                                dataDictionary.addColumnStatistics(statsRow, tc);\n-                                                bais.close();\n+                                                try {\n+                                                    dataDictionary.addColumnStatistics(statsRow, tc);\n+                                                } catch (StandardException e) {\n+                                                    // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n+                                                    if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                        SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n+                                                                conglomId, columnId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2OTQ4OQ=="}, "originalCommit": {"oid": "95d8ff4177b4f233e2def6e5ac530d51f34ac1a0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDMwODQ3OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTozMzozM1rOG8Xssw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo0OToxNlrOG8YMfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1NjAxOQ==", "bodyText": "For non-merged stats (that is, we output one row in the table stats table for each partition, so are the column stats), that means, we may add the same columnId multiple times to the skippedColIds list. Non-merged stats is a mode that we are not using currently, still I prefer to maintain it (in consideration in the future to support incremental stats) and add duplicate checks for this path. You may collect non-merged stats by calling the system procedure COLLECT_NONMERGED_TABLE_STATISTICS.", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r465956019", "createdAt": "2020-08-05T19:33:33Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1135,9 +1146,11 @@ public boolean hasNext() {\n                                             } catch (StandardException e) {\n                                                 // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n                                                 if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                    int columnId = nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.COLUMNID).getInt();\n                                                     SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n                                                             nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.CONGLOMID).getInt(),\n-                                                            nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.COLUMNID).getInt());\n+                                                            columnId);\n+                                                    skippedColIds.add(columnId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc78c9b88a5517c53d096585a7aa75e4c0c78267"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2NDE1OA==", "bodyText": "I see. I pushed a new commit and use HashSet instead of ArrayList.", "url": "https://github.com/splicemachine/spliceengine/pull/3910#discussion_r465964158", "createdAt": "2020-08-05T19:49:16Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1135,9 +1146,11 @@ public boolean hasNext() {\n                                             } catch (StandardException e) {\n                                                 // DB-9890 Skip a column if its statistics object doesn't fit into HBase cell.\n                                                 if (e.getCause().getMessage().contains(\"KeyValue size too large\")) {\n+                                                    int columnId = nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.COLUMNID).getInt();\n                                                     SpliceLogUtils.warn(LOG, \"Statistics object of [ConglomID=%d, ColumnID=%d] exceeds max KeyValue size. Try increase hbase.client.keyvalue.maxsize.\",\n                                                             nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.CONGLOMID).getInt(),\n-                                                            nextRow.getColumn(SYSCOLUMNSTATISTICSRowFactory.COLUMNID).getInt());\n+                                                            columnId);\n+                                                    skippedColIds.add(columnId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1NjAxOQ=="}, "originalCommit": {"oid": "dc78c9b88a5517c53d096585a7aa75e4c0c78267"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3043, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}