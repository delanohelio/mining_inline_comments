{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzg2NDIx", "number": 4093, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMTozNzo0MVrOEh3iTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoxNzowMFrOEjGLgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTQ4MzY1OnYy", "diffSide": "RIGHT", "path": "db-tools-ij/src/main/grammar/ij.jj", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMTozNzo0MVrOHPbMaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjoxOTo0M1rOHPw0GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkzNjIzMw==", "bodyText": "SYS tables are not open for public to SELECT. So normally we don't directly query SYS but views in SYSVW. Please see if there is a need to create a corresponding view in SYSVW, and query the view instead.", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r485936233", "createdAt": "2020-09-09T21:37:41Z", "author": {"login": "yxia92"}, "path": "db-tools-ij/src/main/grammar/ij.jj", "diffHunk": "@@ -983,168 +983,197 @@ class ij {\n         }\n     }\n \n-\t/**\n-\t   Return a resultset of schemas from database metadata\n-\t */\n-\tpublic ijResult showSchemas() throws SQLException {\n-\t\tResultSet rs = null;\n-\t\ttry {\n-\t\t\thaveConnection();\n+    /**\n+       Return a resultset of schemas from database metadata\n+     */\n+    public ijResult showSchemas() throws SQLException {\n+        ResultSet rs = null;\n+        try {\n+            haveConnection();\n \n-\t\t\tDatabaseMetaData dbmd = theConnection.getMetaData();\n-\t\t\trs = dbmd.getSchemas();\n+            DatabaseMetaData dbmd = theConnection.getMetaData();\n+            rs = dbmd.getSchemas();\n \n-\t\t\tint[] displayColumns = new int[] {\n-\t\t\t\trs.findColumn(\"TABLE_SCHEM\")\n-\t\t\t};\n-\t\t\tint[] columnWidths = new int[] {\n-\t\t\t\t30\n-\t\t\t};\n+            int[] displayColumns = new int[] {\n+                rs.findColumn(\"TABLE_SCHEM\")\n+            };\n+            int[] columnWidths = new int[] {\n+                30\n+            };\n \n-\t\t\treturn new ijResultSetResult(rs, displayColumns, columnWidths);\n-\t\t} catch (SQLException e) {\n+            return new ijResultSetResult(rs, displayColumns, columnWidths);\n+        } catch (SQLException e) {\n+            try {\n+                if(rs!=null)\n+                    rs.close();\n+            } catch (SQLException se) {\n+            }\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+       Return a resultset of databases from database metadata\n+     */\n+    public ijResult showDatabases() throws SQLException {\n+        ResultSet rs = null;\n+        try {\n+            haveConnection();\n+\n+            rs = theConnection.createStatement().executeQuery\n+                (\"SELECT DATABASENAME FROM SYS.SYSDATABASES\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a33748eaf83acd39ca0ac3bd9375ac5bb29294"}, "originalPosition": 1388}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI5MDQ1Ng==", "bodyText": "Done!", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r486290456", "createdAt": "2020-09-10T12:19:43Z", "author": {"login": "arnaud-splice"}, "path": "db-tools-ij/src/main/grammar/ij.jj", "diffHunk": "@@ -983,168 +983,197 @@ class ij {\n         }\n     }\n \n-\t/**\n-\t   Return a resultset of schemas from database metadata\n-\t */\n-\tpublic ijResult showSchemas() throws SQLException {\n-\t\tResultSet rs = null;\n-\t\ttry {\n-\t\t\thaveConnection();\n+    /**\n+       Return a resultset of schemas from database metadata\n+     */\n+    public ijResult showSchemas() throws SQLException {\n+        ResultSet rs = null;\n+        try {\n+            haveConnection();\n \n-\t\t\tDatabaseMetaData dbmd = theConnection.getMetaData();\n-\t\t\trs = dbmd.getSchemas();\n+            DatabaseMetaData dbmd = theConnection.getMetaData();\n+            rs = dbmd.getSchemas();\n \n-\t\t\tint[] displayColumns = new int[] {\n-\t\t\t\trs.findColumn(\"TABLE_SCHEM\")\n-\t\t\t};\n-\t\t\tint[] columnWidths = new int[] {\n-\t\t\t\t30\n-\t\t\t};\n+            int[] displayColumns = new int[] {\n+                rs.findColumn(\"TABLE_SCHEM\")\n+            };\n+            int[] columnWidths = new int[] {\n+                30\n+            };\n \n-\t\t\treturn new ijResultSetResult(rs, displayColumns, columnWidths);\n-\t\t} catch (SQLException e) {\n+            return new ijResultSetResult(rs, displayColumns, columnWidths);\n+        } catch (SQLException e) {\n+            try {\n+                if(rs!=null)\n+                    rs.close();\n+            } catch (SQLException se) {\n+            }\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+       Return a resultset of databases from database metadata\n+     */\n+    public ijResult showDatabases() throws SQLException {\n+        ResultSet rs = null;\n+        try {\n+            haveConnection();\n+\n+            rs = theConnection.createStatement().executeQuery\n+                (\"SELECT DATABASENAME FROM SYS.SYSDATABASES\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkzNjIzMw=="}, "originalCommit": {"oid": "09a33748eaf83acd39ca0ac3bd9375ac5bb29294"}, "originalPosition": 1388}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjA3MDEzOnYy", "diffSide": "RIGHT", "path": "db-client/src/main/java/com/splicemachine/db/client/am/PreparedStatement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo0Nzo0OVrOHROLjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToyNDowMFrOHRaV_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMDE3NQ==", "bodyText": "this call is not assign to any variable, usually paramType. Looks like not needed any more and can be removed.", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r487820175", "createdAt": "2020-09-14T10:47:49Z", "author": {"login": "ipraznik-splice"}, "path": "db-client/src/main/java/com/splicemachine/db/client/am/PreparedStatement.java", "diffHunk": "@@ -941,8 +944,8 @@ public void setRowId(int parameterIndex, java.sql.RowId x) throws SQLException{\n                     agent_.logWriter_.traceEntry(this, \"setRowId\", parameterIndex, x);\n                 }\n \n-                final int paramType =\n-                        getColumnMetaDataX().getColumnType(parameterIndex);\n+                getColumnMetaDataX().getColumnType(parameterIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxOTQ1Mw==", "bodyText": "(spotbug) I would leave this like this since getColumnType can throw. We never used paramType, but if we want to keep the current behaviour, then we should continue calling this function.", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r488019453", "createdAt": "2020-09-14T15:24:00Z", "author": {"login": "arnaud-splice"}, "path": "db-client/src/main/java/com/splicemachine/db/client/am/PreparedStatement.java", "diffHunk": "@@ -941,8 +944,8 @@ public void setRowId(int parameterIndex, java.sql.RowId x) throws SQLException{\n                     agent_.logWriter_.traceEntry(this, \"setRowId\", parameterIndex, x);\n                 }\n \n-                final int paramType =\n-                        getColumnMetaDataX().getColumnType(parameterIndex);\n+                getColumnMetaDataX().getColumnType(parameterIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMDE3NQ=="}, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjA4ODg3OnYy", "diffSide": "RIGHT", "path": "db-client/src/main/java/com/splicemachine/db/client/net/NetConnectionReply.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo1MzoyMFrOHROWjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToyNTowM1rOHRaY_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjk5MA==", "bodyText": "this call is not assign to any variable", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r487822990", "createdAt": "2020-09-14T10:53:20Z", "author": {"login": "ipraznik-splice"}, "path": "db-client/src/main/java/com/splicemachine/db/client/net/NetConnectionReply.java", "diffHunk": "@@ -296,8 +289,9 @@ private void parseSECCHKreply(NetConnection netConnection) throws DisconnectExce\n             // incorrect but consider it a conversation protocol error\n             // 0x03 - OBJDSS sent when not allowed.\n             //parseSECTKN (true);\n-            boolean done = false;\n-            byte[] bytes = parseSECTKN(false);\n+            //boolean done = false;\n+            //byte[] bytes = parseSECTKN(false);\n+            parseSECTKN(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyMDIyMw==", "bodyText": "(spotbug) It simply moves the parser forward. We don't do anything with the result.", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r488020223", "createdAt": "2020-09-14T15:25:03Z", "author": {"login": "arnaud-splice"}, "path": "db-client/src/main/java/com/splicemachine/db/client/net/NetConnectionReply.java", "diffHunk": "@@ -296,8 +289,9 @@ private void parseSECCHKreply(NetConnection netConnection) throws DisconnectExce\n             // incorrect but consider it a conversation protocol error\n             // 0x03 - OBJDSS sent when not allowed.\n             //parseSECTKN (true);\n-            boolean done = false;\n-            byte[] bytes = parseSECTKN(false);\n+            //boolean done = false;\n+            //byte[] bytes = parseSECTKN(false);\n+            parseSECTKN(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjk5MA=="}, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjE2MzYxOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/jdbc/EmbedConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToxNToyM1rOHRPCpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToyNzo0NFrOHRaiaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNDI3OQ==", "bodyText": "is it used somewhere in subclasses? in EmbedConnection I see only .set and .remove", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r487834279", "createdAt": "2020-09-14T11:15:23Z", "author": {"login": "ipraznik-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/jdbc/EmbedConnection.java", "diffHunk": "@@ -101,7 +102,8 @@\n  */\n public abstract class EmbedConnection implements EngineConnection\n {\n-\tprotected static final StandardException exceptionClose = StandardException.closeException();\n+    public static final ThreadLocal<Boolean> isCreate = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyMjYzNQ==", "bodyText": "It is used in SpliceDatabase.bootStore\nIt is quite similar to EngineLifecycleService.isCreate that we use when creating the very first splicedb. However, when we create a new database, we don't go all the way to EngineLifecycleService.start() so we cannot use that one class variable.", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r488022635", "createdAt": "2020-09-14T15:27:44Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/jdbc/EmbedConnection.java", "diffHunk": "@@ -101,7 +102,8 @@\n  */\n public abstract class EmbedConnection implements EngineConnection\n {\n-\tprotected static final StandardException exceptionClose = StandardException.closeException();\n+    public static final ThreadLocal<Boolean> isCreate = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNDI3OQ=="}, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjM2ODY1OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/jdbc/SpliceTransactionResourceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoxNzowMFrOHRQ9kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToyODoxNVrOHRak3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2NTc0Ng==", "bodyText": "Should be removed?:)", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r487865746", "createdAt": "2020-09-14T12:17:00Z", "author": {"login": "ipraznik-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/jdbc/SpliceTransactionResourceImpl.java", "diffHunk": "@@ -51,14 +51,18 @@\n     protected LanguageConnectionContext lcc;\n     protected String ipAddress;\n \n-    public SpliceTransactionResourceImpl() throws SQLException{\n-        this(CONNECTION_STRING, new Properties());\n+    public SpliceTransactionResourceImpl() throws SQLException{ // XXX Remove this one and properly pass the right DB", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyMzI2MA==", "bodyText": "This will be addressed in the following jiras", "url": "https://github.com/splicemachine/spliceengine/pull/4093#discussion_r488023260", "createdAt": "2020-09-14T15:28:15Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/jdbc/SpliceTransactionResourceImpl.java", "diffHunk": "@@ -51,14 +51,18 @@\n     protected LanguageConnectionContext lcc;\n     protected String ipAddress;\n \n-    public SpliceTransactionResourceImpl() throws SQLException{\n-        this(CONNECTION_STRING, new Properties());\n+    public SpliceTransactionResourceImpl() throws SQLException{ // XXX Remove this one and properly pass the right DB", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2NTc0Ng=="}, "originalCommit": {"oid": "d080b39e81b476882b750fc41fdaf85254ab3f30"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2974, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}