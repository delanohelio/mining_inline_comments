{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTQwMjYw", "number": 3497, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoyNzowNVrOD3v8Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODozMjozOFrOD3wDpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzgzNjgyOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ResultColumnList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoyNzowNVrOGOLlQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoyNzowNVrOGOLlQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyMzAxMQ==", "bodyText": "from spotbugs", "url": "https://github.com/splicemachine/spliceengine/pull/3497#discussion_r417523011", "createdAt": "2020-04-29T18:27:05Z", "author": {"login": "martinrupp"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ResultColumnList.java", "diffHunk": "@@ -3622,7 +3640,7 @@ private static void updateArrays(int[] mapArray,\n     }\n \n \n-    public class ColumnMapping{\n+    public static class ColumnMapping{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7975b4310384d9a89fa18ea785f5416817e97f0"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Nzg1NjM5OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/OrderByIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODozMjozOFrOGOLxzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODozMjozOFrOGOLxzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyNjIyMw==", "bodyText": "As the comment says, this makes sure we disable access to alias for WHERE, HAVING and GROUP BY.\nCurrently, this is not supported. If we remove the line with clearAliases we can enable this. @yxia92 and i agreed on it might be safe currently to not change the behavior here.", "url": "https://github.com/splicemachine/spliceengine/pull/3497#discussion_r417526223", "createdAt": "2020-04-29T18:32:38Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/OrderByIT.java", "diffHunk": "@@ -377,4 +382,48 @@ public void testOrderByClauseWithNullInWindowFunctionThroughSparkPath() throws E\n         rs.close();\n     }\n \n+    @Test\n+    public void testAliasInOrderComplex() throws Exception {\n+        String sqlText = \"select sum(a1) as ALIAS from t2 order by -ALIAS\";\n+        String expected = \"ALIAS |\\n\" +\n+                         \"--------\\n\" +\n+                         \"  15   |\" ;\n+        SqlExpectToString( methodWatcher, sqlText, expected, false );\n+\n+        sqlText = \"select sqrt(a1*a1)*2 as ALIAS from t2 order by -2*ALIAS+a1\";\n+        expected = \"ALIAS |\\n\" +\n+                  \"--------\\n\" +\n+                  \" 10.0  |\\n\" +\n+                  \"  8.0  |\\n\" +\n+                  \"  6.0  |\\n\" +\n+                  \"  4.0  |\\n\" +\n+                  \"  2.0  |\";\n+        SqlExpectToString( methodWatcher, sqlText, expected, false );\n+    }\n+\n+    @Test\n+    public void testAliasInOrderSimple() throws Exception {\n+        // use these TWO order by to make sure ResultColumnList correctly calculates getFirstOrderByIndex.\n+        String sqlText = \"select a1 as ALIAS from t2 order by -ALIAS, -2*ALIAS\";\n+        String expected = \"ALIAS |\\n--------\\n   5   |\\n   4   |\\n   3   |\\n   2   |\\n   1   |\";\n+        SqlExpectToString( methodWatcher, sqlText, expected, false );\n+    }\n+\n+    // make sure we disable access to alias for WHERE, HAVING and GROUP BY\n+    @Test\n+    public void testUsingAliasOnlyInOrderBy() throws Exception {\n+        String sqlTexts[] =\n+                {       \"select a1+1 as ALIAS from t2 WHERE ALIAS > 0 ORDER BY -ALIAS\",\n+                        \"select a1+1 as ALIAS from t2 GROUP BY ALIAS ORDER BY -ALIAS\",\n+                        \"select a1, sum(b1+1) as ALIAS from t1 GROUP BY a1 HAVING ALIAS > 0 ORDER BY -ALIAS\"\n+                        };\n+        for( String sqlText : sqlTexts ) {\n+            SqlExpectException( methodWatcher, sqlText, \"42X04\" );\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7975b4310384d9a89fa18ea785f5416817e97f0"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3205, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}