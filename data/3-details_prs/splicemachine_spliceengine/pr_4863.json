{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDIyMzkz", "number": 4863, "title": "DB-10773 Honor joinStrategy hints on the target table of an UPDATE.", "bodyText": "This allows joinStragegy query hints to be applied to the target table of an UPDATE, for example, if there is a join predicate on the primary key and you'd like to use nested loop join to avoid scanning the entire table:\nexplain update t4 --splice-properties joinStrategy=nestedloop\n                             set (a4,b4) = (select 1,1 from t1 where c1 = a4);\n\nSometimes such hints may be inside a trigger, but often the optimizer cost estimates are so low on triggers that the parsing time limit is set to less than a millisecond, and the query planner gives up before even considering the hinted join.  In general prepared statements such as triggers are recompiled infrequently, so it is OK if parsing uses a little extra time, especially if it means that will allow more optimal plans and plans including all query hints to get built.\nA fix is added to give extra allowed parsing time to prepared statements.", "createdAt": "2020-12-15T06:50:36Z", "url": "https://github.com/splicemachine/spliceengine/pull/4863", "merged": true, "mergeCommit": {"oid": "80abcb4d262b33cf15b4718b92a9cd1536bb23c7"}, "closed": true, "closedAt": "2020-12-21T09:38:45Z", "author": {"login": "msirek"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmUi36gH2gAyNTQwMDIyMzkzOmNmYTY5ZDlhYzVmOWUzOWVkZDU1ZmNjZTBhZmZjMjdmMzIzNWE1ZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoQdFHgFqTU1NjE2Njc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cfa69d9ac5f9e39edd55fcce0affc27f3235a5d5", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cfa69d9ac5f9e39edd55fcce0affc27f3235a5d5", "committedDate": "2020-12-15T06:42:33Z", "message": "DB-10773 Honor joinStrategy hints on the target table of an UPDATE."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyODI4NDg0", "url": "https://github.com/splicemachine/spliceengine/pull/4863#pullrequestreview-552828484", "createdAt": "2020-12-15T20:09:14Z", "commit": {"oid": "cfa69d9ac5f9e39edd55fcce0affc27f3235a5d5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDowOToxNFrOIGd64Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDowOToxNFrOIGd64Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1MjU3Nw==", "bodyText": "Nitpick, can you make it a static constant instead of a hardcoded number?", "url": "https://github.com/splicemachine/spliceengine/pull/4863#discussion_r543652577", "createdAt": "2020-12-15T20:09:14Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OptimizerImpl.java", "diffHunk": "@@ -2178,6 +2196,17 @@ private void rememberBestCost(CostEstimate currentCost,int planType) throws Stan\n         // Consider consolidating all these into nanoseconds in the future.\n         if((bestCost.getEstimatedCost()/NANOS_TO_MILLIS)<timeLimit) {\n             timeLimit=bestCost.getEstimatedCost()/NANOS_TO_MILLIS;\n+\n+            // Triggers and other prepared statements may have a very low\n+            // cost estimate because the size of the involved trigger rows\n+            // is not known up-front.  We don't want to quit query compilation\n+            // early, resulting in a bad query plan or a plan which fails to\n+            // pick up query hints, especially since the\n+            // prepared statement does not need to be compiled on every\n+            // invocation, just once in a while.  So, it is time well\n+            // spent if it means we can compile a more optimal plan.\n+            if (timeLimit < 2000 && isPreparedStatement())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa69d9ac5f9e39edd55fcce0affc27f3235a5d5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f92cde1b9ef85dfa51e67592e7c419d75e36bf", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/63f92cde1b9ef85dfa51e67592e7c419d75e36bf", "committedDate": "2020-12-15T21:23:20Z", "message": "DB-10773 Address review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODc0NzIy", "url": "https://github.com/splicemachine/spliceengine/pull/4863#pullrequestreview-555874722", "createdAt": "2020-12-18T23:19:49Z", "commit": {"oid": "63f92cde1b9ef85dfa51e67592e7c419d75e36bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ5NjYx", "url": "https://github.com/splicemachine/spliceengine/pull/4863#pullrequestreview-555949661", "createdAt": "2020-12-19T15:41:37Z", "commit": {"oid": "63f92cde1b9ef85dfa51e67592e7c419d75e36bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTY2NzYy", "url": "https://github.com/splicemachine/spliceengine/pull/4863#pullrequestreview-556166762", "createdAt": "2020-12-21T07:04:27Z", "commit": {"oid": "63f92cde1b9ef85dfa51e67592e7c419d75e36bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 983, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}