{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODA1MzAx", "number": 4199, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyMTozNlrOEo5ppw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyOTo0N1rOEo50SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzIzMDQ3OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddSysKeyColUseViewInSYSIBM.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyMTozNlrOHaQZ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToyMzozM1rOHajA_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5Mzc5NQ==", "bodyText": "Please use the right view name in the log message.", "url": "https://github.com/splicemachine/spliceengine/pull/4199#discussion_r497293795", "createdAt": "2020-09-30T07:21:36Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddSysKeyColUseViewInSYSIBM.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.splicemachine.derby.impl.sql.catalog.upgrade;\n+\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.store.access.TransactionController;\n+import com.splicemachine.derby.impl.sql.catalog.SpliceDataDictionary;\n+import com.splicemachine.utils.SpliceLogUtils;\n+\n+public class UpgradeScriptToAddSysKeyColUseViewInSYSIBM extends UpgradeScriptBase {\n+    public UpgradeScriptToAddSysKeyColUseViewInSYSIBM(SpliceDataDictionary sdd, TransactionController tc) {\n+        super(sdd, tc);\n+    }\n+\n+    @Override\n+    protected void upgradeSystemTables() throws StandardException {\n+        sdd.createKeyColumnUseViewInSysIBM(tc);\n+\n+        SpliceLogUtils.info(LOG, \"Catalog upgraded: updated syscolumns view in SYSIBM schema\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f06ec57d3b736cced43ce72a8c7f60252b9781d4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5ODcxNg==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/4199#discussion_r497598716", "createdAt": "2020-09-30T15:23:33Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddSysKeyColUseViewInSYSIBM.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.splicemachine.derby.impl.sql.catalog.upgrade;\n+\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.store.access.TransactionController;\n+import com.splicemachine.derby.impl.sql.catalog.SpliceDataDictionary;\n+import com.splicemachine.utils.SpliceLogUtils;\n+\n+public class UpgradeScriptToAddSysKeyColUseViewInSYSIBM extends UpgradeScriptBase {\n+    public UpgradeScriptToAddSysKeyColUseViewInSYSIBM(SpliceDataDictionary sdd, TransactionController tc) {\n+        super(sdd, tc);\n+    }\n+\n+    @Override\n+    protected void upgradeSystemTables() throws StandardException {\n+        sdd.createKeyColumnUseViewInSysIBM(tc);\n+\n+        SpliceLogUtils.info(LOG, \"Catalog upgraded: updated syscolumns view in SYSIBM schema\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5Mzc5NQ=="}, "originalCommit": {"oid": "f06ec57d3b736cced43ce72a8c7f60252b9781d4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzI1NzY4OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyOTo0N1rOHaQqsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToyMTozOFrOHai7WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5ODA5OQ==", "bodyText": "I think we can use sys.syschemas here instead. I'm considering two reasons: 1) So far, schema restriction hasn't been applied to all the views in sysibm schema yet, so we can be consistent here. 2) the schemasview in your view definition is used only in the second UNION branch, so the schema restriction is not applied in a complete way.", "url": "https://github.com/splicemachine/spliceengine/pull/4199#discussion_r497298099", "createdAt": "2020-09-30T07:29:47Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "diffHunk": "@@ -616,4 +618,68 @@ protected int getConstraintType(ExecRow row) throws StandardException{\n         };\n     }\n \n+    public List<ColumnDescriptor[]> getViewColumns(TableDescriptor view, UUID viewId) throws StandardException {\n+        List<ColumnDescriptor[]> cdsl = new ArrayList<>();\n+\n+        // SYSIBM.SYSKEYCOLUSE\n+        cdsl.add(\n+            new ColumnDescriptor[]{\n+                new ColumnDescriptor(\"CONSTNAME\",1,1,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"TBCREATOR\",2,2,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"TBNAME\",3,3,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLNAME\",4,4,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLSEQ\",5,5,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.SMALLINT, false),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLNO\",6,6,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.SMALLINT, false),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"IBMREQD\",7,7,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.CHAR, false, 1),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"PERIOD\",8,8,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.CHAR, false, 1),\n+                        null,null,view,viewId,0,0,0)\n+            });\n+        return cdsl;\n+    }\n+\n+    public static String SYSKEYCOLUSE_VIEW_IN_SYSIBM = \"create view SYSKEYCOLUSE as \\n\" +\n+            \"SELECT\\n\" +\n+            \"  C.CONSTRAINTNAME AS CONSTNAME,\\n\" +\n+            \"  S.SCHEMANAME AS TBCREATOR,\\n\" +\n+            \"  T.TABLENAME AS TBNAME,\\n\" +\n+            \"  COLS.COLUMNNAME AS COLNAME,\\n\" +\n+            \"  CAST(CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS COLSEQ,\\n\" +\n+            \"  CAST(COLS.COLUMNNUMBER AS SMALLINT) AS COLNO,\\n\" +\n+            \"  'N' AS IBMREQD, -- IBM release depencency indicators, default 'N'\\n\" +\n+            \"  '' AS PERIOD    -- indicates whether the column is the start or end column for the BUSINESS_TIME period, default blank\\n\" +\n+            \"FROM\\n\" +\n+            \"  (SELECT SC.CONSTRAINTNAME, SC.SCHEMAID, SC.TABLEID, K.CONGLOMERATEID\\n\" +\n+            \"     FROM SYS.SYSCONSTRAINTS SC, SYS.SYSKEYS K   -- get all unique constraint conglomerate IDs\\n\" +\n+            \"     WHERE K.CONSTRAINTID = SC.CONSTRAINTID\\n\" +\n+            \"   UNION\\n\" +\n+            \"   SELECT SC.CONSTRAINTNAME, SC.SCHEMAID, SC.TABLEID, PK.CONGLOMERATEID\\n\" +\n+            \"     FROM SYS.SYSCONSTRAINTS SC, SYS.SYSPRIMARYKEYS PK\\n\" +\n+            \"     WHERE PK.CONSTRAINTID = SC.CONSTRAINTID) C, -- get all primary key conglomerate IDs\\n\" +\n+            \"  SYSVW.SYSSCHEMASVIEW S,\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f06ec57d3b736cced43ce72a8c7f60252b9781d4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzI3Mw==", "bodyText": "Good to know, I change it to SYS.SYSSCHEMAS in the latest commit.", "url": "https://github.com/splicemachine/spliceengine/pull/4199#discussion_r497597273", "createdAt": "2020-09-30T15:21:38Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "diffHunk": "@@ -616,4 +618,68 @@ protected int getConstraintType(ExecRow row) throws StandardException{\n         };\n     }\n \n+    public List<ColumnDescriptor[]> getViewColumns(TableDescriptor view, UUID viewId) throws StandardException {\n+        List<ColumnDescriptor[]> cdsl = new ArrayList<>();\n+\n+        // SYSIBM.SYSKEYCOLUSE\n+        cdsl.add(\n+            new ColumnDescriptor[]{\n+                new ColumnDescriptor(\"CONSTNAME\",1,1,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"TBCREATOR\",2,2,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"TBNAME\",3,3,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLNAME\",4,4,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 128),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLSEQ\",5,5,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.SMALLINT, false),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"COLNO\",6,6,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.SMALLINT, false),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"IBMREQD\",7,7,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.CHAR, false, 1),\n+                        null,null,view,viewId,0,0,0),\n+                new ColumnDescriptor(\"PERIOD\",8,8,\n+                        DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.CHAR, false, 1),\n+                        null,null,view,viewId,0,0,0)\n+            });\n+        return cdsl;\n+    }\n+\n+    public static String SYSKEYCOLUSE_VIEW_IN_SYSIBM = \"create view SYSKEYCOLUSE as \\n\" +\n+            \"SELECT\\n\" +\n+            \"  C.CONSTRAINTNAME AS CONSTNAME,\\n\" +\n+            \"  S.SCHEMANAME AS TBCREATOR,\\n\" +\n+            \"  T.TABLENAME AS TBNAME,\\n\" +\n+            \"  COLS.COLUMNNAME AS COLNAME,\\n\" +\n+            \"  CAST(CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS COLSEQ,\\n\" +\n+            \"  CAST(COLS.COLUMNNUMBER AS SMALLINT) AS COLNO,\\n\" +\n+            \"  'N' AS IBMREQD, -- IBM release depencency indicators, default 'N'\\n\" +\n+            \"  '' AS PERIOD    -- indicates whether the column is the start or end column for the BUSINESS_TIME period, default blank\\n\" +\n+            \"FROM\\n\" +\n+            \"  (SELECT SC.CONSTRAINTNAME, SC.SCHEMAID, SC.TABLEID, K.CONGLOMERATEID\\n\" +\n+            \"     FROM SYS.SYSCONSTRAINTS SC, SYS.SYSKEYS K   -- get all unique constraint conglomerate IDs\\n\" +\n+            \"     WHERE K.CONSTRAINTID = SC.CONSTRAINTID\\n\" +\n+            \"   UNION\\n\" +\n+            \"   SELECT SC.CONSTRAINTNAME, SC.SCHEMAID, SC.TABLEID, PK.CONGLOMERATEID\\n\" +\n+            \"     FROM SYS.SYSCONSTRAINTS SC, SYS.SYSPRIMARYKEYS PK\\n\" +\n+            \"     WHERE PK.CONSTRAINTID = SC.CONSTRAINTID) C, -- get all primary key conglomerate IDs\\n\" +\n+            \"  SYSVW.SYSSCHEMASVIEW S,\\n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5ODA5OQ=="}, "originalCommit": {"oid": "f06ec57d3b736cced43ce72a8c7f60252b9781d4"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2930, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}