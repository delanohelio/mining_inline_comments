{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODczNjA4", "number": 3684, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDowNVrOEF2Giw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDowNVrOEF2Giw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTY0NzQ3OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDowNVrOGkRxyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToxOTo1MVrOGkpzlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MzE5NA==", "bodyText": "I think you could use here a try-with-resources here to simplify the code a bit:\ntry (Partition root = SIDriver.driver().getTableFactory().getTable(table)) {\n        return root != null ?  root.subPartitions(true).size() : 1;\n} catch (Exception ioe) {\n        throw StandardException.plainWrapException(ioe);\n}\n\nIf I'm not mistaken the catch block will also catch an exception on root.close()", "url": "https://github.com/splicemachine/spliceengine/pull/3684#discussion_r440693194", "createdAt": "2020-06-16T08:54:05Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1140,6 +1152,28 @@ public ExecRow next() {\n         }\n     }\n \n+    private static long getNumOfPartitions(TableDescriptor td) throws StandardException {\n+        String tableId = Long.toString(td.getBaseConglomerateDescriptor().getConglomerateNumber());\n+        byte[] table = Bytes.toBytes(tableId);\n+        Partition root = null;\n+        try {\n+            long result = 1;\n+            root = SIDriver.driver().getTableFactory().getTable(table);\n+            if (root != null)\n+                result = root.subPartitions(true).size();\n+            return result;\n+        } catch (Exception ioe) {\n+            throw StandardException.plainWrapException(ioe);\n+        } finally {\n+            try {\n+                if (root != null)\n+                    root.close();\n+            } catch (IOException e) {\n+                throw StandardException.plainWrapException(e);\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b64f6b7f593af2e2ce2ef20de6144cb30cb6b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4Njg3MA==", "bodyText": "Thanks @dgomezferro ! I've made the simplification as suggested.", "url": "https://github.com/splicemachine/spliceengine/pull/3684#discussion_r441086870", "createdAt": "2020-06-16T19:19:51Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsAdmin.java", "diffHunk": "@@ -1140,6 +1152,28 @@ public ExecRow next() {\n         }\n     }\n \n+    private static long getNumOfPartitions(TableDescriptor td) throws StandardException {\n+        String tableId = Long.toString(td.getBaseConglomerateDescriptor().getConglomerateNumber());\n+        byte[] table = Bytes.toBytes(tableId);\n+        Partition root = null;\n+        try {\n+            long result = 1;\n+            root = SIDriver.driver().getTableFactory().getTable(table);\n+            if (root != null)\n+                result = root.subPartitions(true).size();\n+            return result;\n+        } catch (Exception ioe) {\n+            throw StandardException.plainWrapException(ioe);\n+        } finally {\n+            try {\n+                if (root != null)\n+                    root.close();\n+            } catch (IOException e) {\n+                throw StandardException.plainWrapException(e);\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MzE5NA=="}, "originalCommit": {"oid": "7e7b64f6b7f593af2e2ce2ef20de6144cb30cb6b"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3202, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}