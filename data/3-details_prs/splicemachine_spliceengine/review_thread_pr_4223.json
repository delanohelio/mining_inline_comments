{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDk1OTEw", "number": 4223, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOTowODoyM1rOEqovPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMzozOFrOEqqaTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTQzMTAyOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SubqueryNode.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOTowODoyM1rOHc9C1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMjoyN1rOHd2ZIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMjMyNg==", "bodyText": "This method is very similar to generateExpression(), would it be possible to extract the commonalities so that there isn't so much copy paste?", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500122326", "createdAt": "2020-10-06T09:08:23Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SubqueryNode.java", "diffHunk": "@@ -1386,6 +1386,209 @@ public void generateExpression(ExpressionClassBuilder expressionBuilder,\n             mbex.pushThis();\n             mbex.callMethod(VMOpcode.INVOKEVIRTUAL,null,mb.getName(),subqueryTypeString,0);\n         }\n+\n+        generateSubqueryResultSet(expressionBuilder);\n+    }\n+\n+    public void generateSubqueryResultSet(ExpressionClassBuilder expressionBuilder) throws StandardException {\n+        CompilerContext cc=getCompilerContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1OTczMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500159730", "createdAt": "2020-10-06T10:11:00Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SubqueryNode.java", "diffHunk": "@@ -1386,6 +1386,209 @@ public void generateExpression(ExpressionClassBuilder expressionBuilder,\n             mbex.pushThis();\n             mbex.callMethod(VMOpcode.INVOKEVIRTUAL,null,mb.getName(),subqueryTypeString,0);\n         }\n+\n+        generateSubqueryResultSet(expressionBuilder);\n+    }\n+\n+    public void generateSubqueryResultSet(ExpressionClassBuilder expressionBuilder) throws StandardException {\n+        CompilerContext cc=getCompilerContext();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMjMyNg=="}, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTkyMg==", "bodyText": "Refactored and extracted common code.", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r501061922", "createdAt": "2020-10-07T14:32:27Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SubqueryNode.java", "diffHunk": "@@ -1386,6 +1386,209 @@ public void generateExpression(ExpressionClassBuilder expressionBuilder,\n             mbex.pushThis();\n             mbex.callMethod(VMOpcode.INVOKEVIRTUAL,null,mb.getName(),subqueryTypeString,0);\n         }\n+\n+        generateSubqueryResultSet(expressionBuilder);\n+    }\n+\n+    public void generateSubqueryResultSet(ExpressionClassBuilder expressionBuilder) throws StandardException {\n+        CompilerContext cc=getCompilerContext();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMjMyNg=="}, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTQ0MDI4OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOToxMDo0MlrOHc9Iag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMToyN1rOHd2WIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMzc1NA==", "bodyText": "Why do we need this one to be externalizable?", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500123754", "createdAt": "2020-10-06T09:10:42Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -34,12 +34,13 @@\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.log4j.Logger;\n \n+import java.io.Externalizable;\n import java.io.IOException;\n import java.io.ObjectInput;\n import java.io.ObjectOutput;\n import java.util.Arrays;\n \n-public abstract class ScanOperation extends SpliceBaseOperation{\n+public abstract class ScanOperation extends SpliceBaseOperation implements Externalizable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTE1Mw==", "bodyText": "Removed", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r501061153", "createdAt": "2020-10-07T14:31:27Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -34,12 +34,13 @@\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.log4j.Logger;\n \n+import java.io.Externalizable;\n import java.io.IOException;\n import java.io.ObjectInput;\n import java.io.ObjectOutput;\n import java.util.Arrays;\n \n-public abstract class ScanOperation extends SpliceBaseOperation{\n+public abstract class ScanOperation extends SpliceBaseOperation implements Externalizable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMzc1NA=="}, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY3MDgzOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoxMzoyNlrOHc_aGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MFrOHd2W2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2MTA1MA==", "bodyText": "please remove (same below)", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500161050", "createdAt": "2020-10-06T10:13:26Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -135,7 +136,7 @@ public ScanOperation(long conglomId,Activation activation,int resultSetNumber,\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException{\n-        super.readExternal(in);\n+        //super.readExternal(in);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTMzNw==", "bodyText": "Removed", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r501061337", "createdAt": "2020-10-07T14:31:40Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -135,7 +136,7 @@ public ScanOperation(long conglomId,Activation activation,int resultSetNumber,\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException{\n-        super.readExternal(in);\n+        //super.readExternal(in);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2MTA1MA=="}, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTcwNTA4OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/CachedOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMzozOFrOHc_vuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzozMzoyOFrOHdhYnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2NjU4NA==", "bodyText": "source.openCore(); is already called once in populateCache(), is it necessary to call it again here?", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500166584", "createdAt": "2020-10-06T10:23:38Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/CachedOperation.java", "diffHunk": "@@ -134,6 +109,8 @@ public String prettyPrint(int indentLevel) {\n     public DataSet<ExecRow> getDataSet(DataSetProcessor dsp) throws StandardException {\n         if (!isOpen)\n             throw new IllegalStateException(\"Operation is not open\");\n+        populateCache();\n+        source.openCore(dsp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcxNzcyNQ==", "bodyText": "It it closed by populateCache() eventually", "url": "https://github.com/splicemachine/spliceengine/pull/4223#discussion_r500717725", "createdAt": "2020-10-07T03:33:28Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/CachedOperation.java", "diffHunk": "@@ -134,6 +109,8 @@ public String prettyPrint(int indentLevel) {\n     public DataSet<ExecRow> getDataSet(DataSetProcessor dsp) throws StandardException {\n         if (!isOpen)\n             throw new IllegalStateException(\"Operation is not open\");\n+        populateCache();\n+        source.openCore(dsp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2NjU4NA=="}, "originalCommit": {"oid": "a8a0eb0788ba7eb099ff981c583965a3e88f3f3f"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2942, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}