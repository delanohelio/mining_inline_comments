{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzA5MDU0", "number": 4290, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NzozMVrOEteIZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowMFrOEtmiRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE1MDQ1OnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NzozMVrOHhRqlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODo1MDoyNFrOHhgl4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA==", "bodyText": "Can you create a JIRA to remove this and reference it here?", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504654484", "createdAt": "2020-10-14T12:57:31Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NzI2MQ==", "bodyText": "ok", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504767261", "createdAt": "2020-10-14T15:22:50Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2ODAxNw==", "bodyText": "https://splicemachine.atlassian.net/browse/DB-10490", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504768017", "createdAt": "2020-10-14T15:23:54Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzOTA1Mw==", "bodyText": "I meant referencing the JIRA in a comment as a TODO for instance", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504839053", "createdAt": "2020-10-14T17:09:02Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg5OTA0MA==", "bodyText": "done", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504899040", "createdAt": "2020-10-14T18:50:24Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE1MTQ0OnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1Nzo0NFrOHhRrLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowNzowOFrOHhc2Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDYzNw==", "bodyText": "Should this be a LOG instead of println?", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504654637", "createdAt": "2020-10-14T12:57:44Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NzE5NQ==", "bodyText": "log would be only visible when logging is enabled for this class, i would rather use println here to have this prominently visible in the output.", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504767195", "createdAt": "2020-10-14T15:22:45Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDYzNw=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzNzY0Mg==", "bodyText": "Logging at INFO level should be visible by default, but if it's too much of a hassle println is fine since this is only a test", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504837642", "createdAt": "2020-10-14T17:07:08Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDYzNw=="}, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjUyMjMwOnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowNzoyN1rOHhfBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowNzoyN1rOHhfBxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MzQxMw==", "bodyText": "To check if the result is empty:\nif(!rs.next()) {\n  return;\n}", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504873413", "createdAt": "2020-10-14T18:07:27Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjUyNzQyOnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowMFrOHhfFCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowMFrOHhfFCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDI1MQ==", "bodyText": "maybe we should just ignore the test instead of failing since VacuumIT itself didn't even start.", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504874251", "createdAt": "2020-10-14T18:09:00Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);\n+            }\n+        }\n+        Assert.fail(\"VacuumIT can't run with active transactions still happening. This is a bug in other \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 110}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2875, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}