{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDY5MTgz", "number": 4302, "title": "DB-10176 Support expression-based indexes in cost estimation", "bodyText": "", "createdAt": "2020-10-15T12:33:58Z", "url": "https://github.com/splicemachine/spliceengine/pull/4302", "merged": true, "mergeCommit": {"oid": "3abfffd1eda3333dc3f9c1ae9e8778c2a7ecf548"}, "closed": true, "closedAt": "2020-11-13T16:16:41Z", "author": {"login": "ascend1"}, "timelineItems": {"totalCount": 61, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQNkEPgH2gAyNTA0MDY5MTgzOjVjN2UyNjQxOTVjNWNkMTA1OTMzMmM1MmQ1MzA3NzkxYmYyOTZlOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcIdbfAFqTUzMDEzMTU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c7e264195c5cd1059332c52d5307791bf296e95", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5c7e264195c5cd1059332c52d5307791bf296e95", "committedDate": "2020-10-07T14:08:11Z", "message": "DB-10175 Expression-based index scan with relational operator preds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e22d448f521f0b4e81a9edae44a00a40fbe90cfd", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e22d448f521f0b4e81a9edae44a00a40fbe90cfd", "committedDate": "2020-10-07T14:08:11Z", "message": "DB-10175 Expression-based index scan with in-list predicates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57ce9e16fc3de1c64638575483938d57d6795e42", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/57ce9e16fc3de1c64638575483938d57d6795e42", "committedDate": "2020-10-07T14:08:11Z", "message": "DB-10175 Fix SpotBugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44ec6f37735acf851ff4a82268c0d544693b4790", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/44ec6f37735acf851ff4a82268c0d544693b4790", "committedDate": "2020-10-07T14:08:11Z", "message": "DB-10175 Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b965fdf6ac44f431b541813d79344aec6776bde4", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b965fdf6ac44f431b541813d79344aec6776bde4", "committedDate": "2020-10-15T11:22:30Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNTAxNjgx", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-512501681", "createdAt": "2020-10-20T09:18:36Z", "commit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxODozNlrOHkyx8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyNzoxOFrOHkzJNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0Mjc2OA==", "bodyText": "afaik you can just do SpliceUnitTest.rowContainsQuery(levels, query, \"rows=10\",\"MergeJoin\"); which does the try/createStatement for you", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508342768", "createdAt": "2020-10-20T09:18:36Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/test/java/com/splicemachine/db/impl/sql/compile/MergeJoinSelectivityIT.java", "diffHunk": "@@ -51,6 +51,16 @@ public void innerJoin() throws Exception {\n                     \"explain select * from --splice-properties joinOrder=fixed\\n ts_10_spk, ts_5_spk --splice-properties joinStrategy=MERGE\\n where ts_10_spk.c1 = ts_5_spk.c1\",\n                     \"rows=10\",\"MergeJoin\");\n         }\n+\n+        try(Statement s = methodWatcher.getOrCreateConnection().createStatement()){\n+            rowContainsQuery(s,\n+                    new int[]{1,3},\n+                    \"explain select upper(ts_10_spk.c2), upper(ts_5_spk.c2) from --splice-properties joinOrder=fixed\\n \" +\n+                            \"ts_10_spk --splice-properties index=ts_10_spk_expr_idx\\n, \" +\n+                            \"ts_5_spk --splice-properties index=ts_5_spk_expr_idx, joinStrategy=MERGE\\n \" +\n+                            \"where upper(ts_10_spk.c2) = upper(ts_5_spk.c2)\",\n+                    \"rows=10\",\"MergeJoin\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NTE2Mg==", "bodyText": "i would do a slightly reordering here:\nif (outerColumnInfo == null) continuel\n\nint outerTableNum = outerColumnInfo.getFirst();\nint outerColNum = outerColumnInfo.getSecond();\n\nthat way, there's no doubt outerTableNum and outerColNum are initialized.", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508345162", "createdAt": "2020-10-20T09:22:09Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/compile/MergeJoinStrategy.java", "diffHunk": "@@ -277,29 +283,37 @@ private boolean mergeable(RowOrdering outerRowOrdering,\n                         \"Programmer error: RelationalOperator of type \"+ relop.getClass()+\" detected\";\n                 BinaryRelationalOperatorNode bron = (BinaryRelationalOperatorNode)relop;\n                 if (bron.getOperator() == RelationalOperator.EQUALS_RELOP) {\n-                    ColumnReference innerColumn = relop.getColumnOperand(innerTable);\n-                    ColumnReference outerColumn = getOuterColumn(bron, innerColumn);\n-                    if (innerColumn == null || outerColumn == null) continue;\n-                    int innerColumnNumber = innerColumn.getColumnNumber();\n+                    ColumnReference innerColumn = null;\n+                    int innerColumnNumber;\n+                    int outerTableNum;\n+                    int outerColNum;\n+\n+                    if (isIndexOnExpr) {\n+                        innerColumnNumber = pred.hasEqualOnIndexExpression(innerTable);\n+                    } else {\n+                        innerColumn = relop.getColumnOperand(innerTable);\n+                        if (innerColumn == null) {\n+                            continue;\n+                        }\n+                        innerColumnNumber = innerColumn.getColumnNumber();\n+                    }\n+\n+                    Pair<Integer, Integer> outerColumnInfo = getOuterColumnInfo(bron, innerTable, innerColumn);\n+                    if (outerColumnInfo != null) {\n+                        outerTableNum = outerColumnInfo.getFirst();\n+                        outerColNum = outerColumnInfo.getSecond();\n+                    } else {\n+                        continue;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NjI1NQ==", "bodyText": "reorder\nif (outerColumnInfo == null) continue;\nint outerTableNum = outerColumnInfo.getFirst();\nint outerColNum = outerColumnInfo.getSecond();\n\n(now clear everything is initialized)", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508346255", "createdAt": "2020-10-20T09:23:44Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/compile/MergeJoinStrategy.java", "diffHunk": "@@ -218,33 +219,38 @@ private boolean mergeable(RowOrdering outerRowOrdering,\n                                 IndexRowGenerator innerRowGenerator,\n                                 OptimizablePredicateList predList,\n                                 Optimizable innerTable) throws StandardException{\n-        int[] keyColumnPositionMap = innerRowGenerator.baseColumnPositions();\n+        boolean isIndexOnExpr = innerRowGenerator.isOnExpression();\n+        int[] keyColumnPositionMap = isIndexOnExpr ? null : innerRowGenerator.baseColumnPositions();\n         boolean[] keyAscending = innerRowGenerator.isAscending();\n \n-        BitSet innerColumns = new BitSet(keyColumnPositionMap.length);\n-        BitSet outerColumns = new BitSet(keyColumnPositionMap.length);\n+        BitSet innerColumns = new BitSet(keyAscending.length);\n+        BitSet outerColumns = new BitSet(keyAscending.length);\n         for(int p = 0;p<predList.size();p++){\n             Predicate pred = (Predicate)predList.getOptPredicate(p);\n             if(pred.isJoinPredicate()) continue; //we'll deal with these later\n             RelationalOperator relop=pred.getRelop();\n             if(!(relop instanceof BinaryRelationalOperatorNode)) continue;\n             if(relop.getOperator()==RelationalOperator.EQUALS_RELOP) {\n-                int innerEquals = pred.hasEqualOnColumnList(keyColumnPositionMap, innerTable);\n-                if (innerEquals >= 0) innerColumns.set(innerEquals);\n-                else {\n-\n+                int innerEquals = isIndexOnExpr ? pred.hasEqualOnIndexExpression(innerTable)\n+                                                : pred.hasEqualOnColumnList(keyColumnPositionMap, innerTable);\n+                if (innerEquals >= 0) {\n+                    innerColumns.set(innerEquals);\n+                } else {\n                     BinaryRelationalOperatorNode bron = (BinaryRelationalOperatorNode) relop;\n-                    ValueNode vn = bron.getLeftOperand();\n-                    if (!(vn instanceof ColumnReference))\n-                        vn = bron.getRightOperand();\n-                    if (!(vn instanceof ColumnReference)) continue;\n-                    ColumnReference outerColumn = (ColumnReference) vn;\n+                    int outerTableNum;\n+                    int outerColNum;\n+\n                     /*\n                      * We are still sortable if we have constant predicates on the first N keys on the outer\n                      * side of the join, as long as we match the inner columns\n                      */\n-                    int outerTableNum = outerColumn.getTableNumber();\n-                    int outerColNum = outerColumn.getColumnNumber();\n+                    Pair<Integer, Integer> outerColumnInfo = getOuterColumnInfo(bron, innerTable, null);\n+                    if (outerColumnInfo != null) {\n+                        outerTableNum = outerColumnInfo.getFirst();\n+                        outerColNum = outerColumnInfo.getSecond();\n+                    } else {\n+                        continue;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NzUzNg==", "bodyText": "(nitpic) 0.0f is float, you mean 0.0 (double)", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508347536", "createdAt": "2020-10-20T09:25:35Z", "author": {"login": "martinrupp"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryOperatorNode.java", "diffHunk": "@@ -915,4 +915,10 @@ public boolean isConstantOrParameterTreeNode() {\n         // for count(*), operand is null\n         return operand != null && operand.isConstantOrParameterTreeNode();\n     }\n+\n+    public double getBaseOperationCost() throws StandardException { return getOperandCost(); }\n+\n+    protected double getOperandCost() throws StandardException {\n+        return operand == null ? 0.0f : operand.getBaseOperationCost();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0ODQwMg==", "bodyText": "you have consts for everything but not for 1.0 and 2.0, and i'm not sure what they represent. Why is the cost twice if there's an operand?", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508348402", "createdAt": "2020-10-20T09:26:52Z", "author": {"login": "martinrupp"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryDateTimestampOperatorNode.java", "diffHunk": "@@ -181,4 +183,12 @@ public void generateExpression(ExpressionClassBuilder acb,\n         mb.cast(ClassName.DataValueDescriptor);\n         mb.callMethod(VMOpcode.INVOKEINTERFACE,(String)null,methodName,getTypeCompiler().interfaceName(),1);\n     } // end of generateExpression\n+\n+    @Override\n+    public double getBaseOperationCost() throws StandardException {\n+        double lowerCost = getOperandCost();\n+        double localCost = SIMPLE_OP_COST * (operand == null ? 1.0 : 2.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0ODcyNA==", "bodyText": "why 2", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508348724", "createdAt": "2020-10-20T09:27:18Z", "author": {"login": "martinrupp"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/TimestampOperatorNode.java", "diffHunk": "@@ -162,4 +162,10 @@ public ValueNode getClone() throws StandardException {\n         return newTS;\n     }\n \n+\t@Override\n+\tpublic double getBaseOperationCost() throws StandardException {\n+\t\tdouble localCost = SIMPLE_OP_COST * 2.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNTM1NTA4", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-512535508", "createdAt": "2020-10-20T09:57:46Z", "commit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1Nzo0N1rOHk0YVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyMDoxMFrOHk1O-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2ODk4MA==", "bodyText": "I wonder if rather than sprinkling boolean forExprIndex in many methods, would it make sense to have a StoreCostController implementation for index expressions? It could extend our current StoreCostControllerImpl and override only the desired methods. It might even be enough to modify the initialization.\nThis is just a suggestion, not sure if it would actually simplify things.", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508368980", "createdAt": "2020-10-20T09:57:47Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/store/access/StoreCostController.java", "diffHunk": "@@ -120,9 +123,10 @@\n      * @throws StandardException Standard exception policy.\n      * @see RowUtil\n      */\n-    void getFetchFromFullKeyCost(BitSet validColumns,\n+    void getFetchFromFullKeyCost(boolean forExprIndex,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MjYyMg==", "bodyText": "This class is not used, it can be removed", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508382622", "createdAt": "2020-10-20T10:19:38Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/compile/HalfMergeSortJoinStrategy.java", "diffHunk": "@@ -144,29 +144,39 @@ public int maxCapacity(int userSpecifiedCapacity, int maxMemoryPerTable, double\n     private boolean mergeable(IndexRowGenerator innerRowGenerator,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4Mjk3MA==", "bodyText": "This test is ignored, and the class is unused, it can be removed.", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r508382970", "createdAt": "2020-10-20T10:20:10Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/HalfMergeSortSparkIT.java", "diffHunk": "@@ -156,6 +151,7 @@ public void testHalfSortMergeAfterSplit() throws Throwable {\n             \"(c1 int, c2 int, c3 int, c4 int)\");\n \n     protected static SpliceIndexWatcher aIndex = new SpliceIndexWatcher(A, CLASS_NAME, A_IDX,CLASS_NAME,\"(c1 desc, c2 asc, c3 desc)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1516c436841f204c294d1ac4329eeea983ef3802", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1516c436841f204c294d1ac4329eeea983ef3802", "committedDate": "2020-10-22T09:06:54Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d12ed61478bccf565395f8029144a5314879b4", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/c5d12ed61478bccf565395f8029144a5314879b4", "committedDate": "2020-10-23T12:46:54Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e583648cc30a7d7c79e19c5d7a8a3c21fb7aa676", "committedDate": "2020-10-15T12:31:23Z", "message": "DB-10431 Fix row decoding in inserting into table with expr index"}, "afterCommit": {"oid": "7331a098e8a4abcb90f2fbac1c570f5447be0f28", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7331a098e8a4abcb90f2fbac1c570f5447be0f28", "committedDate": "2020-10-23T12:49:13Z", "message": "DB-10176 Fix SpotBugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c65948d27940e0e3567baa1adc0839afc56da45", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/4c65948d27940e0e3567baa1adc0839afc56da45", "committedDate": "2020-10-26T08:16:31Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06325c12c5c50abc3cc93e6c3b406ce657a5c77", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e06325c12c5c50abc3cc93e6c3b406ce657a5c77", "committedDate": "2020-10-26T08:17:27Z", "message": "DB-10236 Rewrite query for a covering expression-based index\n\nIn this change, rewriting happens in:\n\n- where clause\n- group by clause\n- order by clause\n- having clause, including aggregates\n- select list, including aggregates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c1e30772a08c639076530ca35d0220475f6190b", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7c1e30772a08c639076530ca35d0220475f6190b", "committedDate": "2020-10-26T08:17:27Z", "message": "DB-10236 Make joins work correctly for covering expr index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7554fbf220cd6282423c68ce60e6ec3e5021056e", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7554fbf220cd6282423c68ce60e6ec3e5021056e", "committedDate": "2020-10-26T08:17:27Z", "message": "DB-10236 Fix SpotBugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c136be91f09b0a1fa2c9b9786fb30c61fced173d", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/c136be91f09b0a1fa2c9b9786fb30c61fced173d", "committedDate": "2020-10-26T08:17:27Z", "message": "DB-10236 Fix TernaryOperator handling in index expression rewriting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "420f279bee374ad844e7add536c34c328118191c", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/420f279bee374ad844e7add536c34c328118191c", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Support index on expressions in ScanCostFunction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33899b82e02f478b24e95bc7b2b1107f3974e6ca", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/33899b82e02f478b24e95bc7b2b1107f3974e6ca", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Fix a potential inconsistency in IndexDescriptorImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1034acbfb815c3318a0f50e20b79a36d0ddb8acb", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1034acbfb815c3318a0f50e20b79a36d0ddb8acb", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Support expr index statistics in StoreCostController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70359659aed762cc96199285e2c4de9e42ef8f2d", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/70359659aed762cc96199285e2c4de9e42ef8f2d", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Push between predicates down when they use index expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e8f2b60ef322303d66152a558b58c60b8ebde74", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/8e8f2b60ef322303d66152a558b58c60b8ebde74", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Refactor utilities of retieving known constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff5dea02a670968ba416ef93f1fc21cb130726d", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cff5dea02a670968ba416ef93f1fc21cb130726d", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Fix pushing down qualifiers referencing index expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120d40805af4243d299968f14fd3a7417f1b8641", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/120d40805af4243d299968f14fd3a7417f1b8641", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Cost between predicate referencing index expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da4ba4396bd4d16bae9fb496ce413b686996d61", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3da4ba4396bd4d16bae9fb496ce413b686996d61", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Add expression evaluation cost to scan cost estimation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e15ec5b3304bb315229b0c8a77aef4cf1666e28", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7e15ec5b3304bb315229b0c8a77aef4cf1666e28", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Make join selectivity estimation use index expression stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46e4d96b154b378cbea777b06e2292bd5568be4e", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/46e4d96b154b378cbea777b06e2292bd5568be4e", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Make MergeJoin feasible for index expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5982fa36c9900e822250c4c5f5f88a77044602be", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5982fa36c9900e822250c4c5f5f88a77044602be", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Support index expressions in HalfMergeSortJoin (currently disabled)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d802991e5d2ccb715d30a82d9c72f0eee5766ca7", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d802991e5d2ccb715d30a82d9c72f0eee5766ca7", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Fix SpotBugs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7331a098e8a4abcb90f2fbac1c570f5447be0f28", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7331a098e8a4abcb90f2fbac1c570f5447be0f28", "committedDate": "2020-10-23T12:49:13Z", "message": "DB-10176 Fix SpotBugs"}, "afterCommit": {"oid": "d802991e5d2ccb715d30a82d9c72f0eee5766ca7", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d802991e5d2ccb715d30a82d9c72f0eee5766ca7", "committedDate": "2020-10-26T08:18:33Z", "message": "DB-10176 Fix SpotBugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9f90256bb404ab2ad137a4fee677c2b0dc3a3d5", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d9f90256bb404ab2ad137a4fee677c2b0dc3a3d5", "committedDate": "2020-10-27T15:47:00Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9602776fbe57fac0d07cbe0dff0c086932f8e4", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/bf9602776fbe57fac0d07cbe0dff0c086932f8e4", "committedDate": "2020-10-27T15:56:25Z", "message": "DB-10175 Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4236cac5c473ac58a99061323b366d5edc70eda8", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/4236cac5c473ac58a99061323b366d5edc70eda8", "committedDate": "2020-10-28T14:38:13Z", "message": "Merge branch 'master' into DB-10175\n\nConflicts:\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cf8db9f4c07e7ecbdf84a340c73c407a3ee70ca", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2cf8db9f4c07e7ecbdf84a340c73c407a3ee70ca", "committedDate": "2020-10-29T20:24:59Z", "message": "DB-10175 Address comments / add semanticallyEquals()\n\nDB-10312 Cache index expression ASTs is partially applied here so that\nthe code binding index expressions is not duplicated everywhere."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83a20d4c2342308c196697fa55929e49e997c901", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/83a20d4c2342308c196697fa55929e49e997c901", "committedDate": "2020-10-29T20:26:10Z", "message": "Merge branch 'master' into DB-10175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35654b5f5111273d24a3a795f0ab4adcca2f8f70", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/35654b5f5111273d24a3a795f0ab4adcca2f8f70", "committedDate": "2020-10-30T10:09:08Z", "message": "DB-10175 Address comments / fix potential concurrent issue\n\nIndex expression ASTs should not be cached in IndexDescriptor because\nit is in turns cached in data dictionary cache, which is global to all\nqueries. For now, always return a copy of ASTs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e84193961ad090ee1047773f57b3d810224cdde1", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e84193961ad090ee1047773f57b3d810224cdde1", "committedDate": "2020-10-30T10:43:27Z", "message": "Merge branch 'DB-10175' into DB-10236\n\nConflicts:\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/PredicateList.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/TernaryOperatorNode.java\n\tsplice_machine/src/test/java/com/splicemachine/derby/impl/sql/actions/index/IndexIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e15d6ad1db16a17112f3cf80e4e2b87c46039d20", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/e15d6ad1db16a17112f3cf80e4e2b87c46039d20", "committedDate": "2020-10-30T14:49:11Z", "message": "DB-10236 Adapt to the latest changes made in DB-10175\n\nNote: IndexIT.testCoveringExpressionBasedIndexSubquery fails in\ncurrent state because we cannot bind expressions after resultColumns\nare changed to index columns after changeAccessPath(). As a result,\nindex expressions containing JavaToSQLValueNode do not work."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d5dd9183c6871c1822362d45225f14e8734abf", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/93d5dd9183c6871c1822362d45225f14e8734abf", "committedDate": "2020-10-30T17:50:59Z", "message": "DB-10236 Fix IndexIT.testCoveringExpressionBasedIndexSubquery\n\nThe fix is done by allowing binding base table columns even after\ntable's access path has been changed to index columns. This ability is\nlimited to index on expressions only."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b3b65435c343fca40c91a1d99ae948a147461e", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d1b3b65435c343fca40c91a1d99ae948a147461e", "committedDate": "2020-11-02T08:52:12Z", "message": "DB-10312 Add hashCode() to ValueNode class hierarchy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd0881cf1a975079c18a51632f64ac0eb77a36b", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/edd0881cf1a975079c18a51632f64ac0eb77a36b", "committedDate": "2020-11-02T15:29:40Z", "message": "DB-10236 Address comments / fix expr collecting and derived tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f192d6f3a9ee4bf31a6f7120b5db18543bc380b", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1f192d6f3a9ee4bf31a6f7120b5db18543bc380b", "committedDate": "2020-11-02T16:57:50Z", "message": "DB-10236 Address comments / fix index expr in RHS of in-list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dec647dfb3287c8ab6cc63e298cee3454ae3ba42", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/dec647dfb3287c8ab6cc63e298cee3454ae3ba42", "committedDate": "2020-11-04T16:25:58Z", "message": "WIP: DB-10236 Address comments / fix count(*) and index expr in window"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fbed9d56a55f3be3bd4f02f9b6af7eee168ff2e", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/6fbed9d56a55f3be3bd4f02f9b6af7eee168ff2e", "committedDate": "2020-11-04T23:19:18Z", "message": "Merge branch 'master' into DB-10236\n\nConflicts:\n\tdb-engine/src/main/java/com/splicemachine/db/catalog/types/IndexDescriptorImpl.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ArrayConstantNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryListOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CastNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ConditionalNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/GenerationClauseNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/JavaToSQLValueNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/JavaValueNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/MethodCallNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/PredicateList.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SQLToJavaValueNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/StaticClassFieldReferenceNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/TernaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ValueNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ValueTupleNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/VirtualColumnNode.java\n\tsplice_machine/src/test/java/com/splicemachine/derby/impl/sql/actions/index/IndexIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87fbb50fa6439543ca5a01ab2b4851000aba3662", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/87fbb50fa6439543ca5a01ab2b4851000aba3662", "committedDate": "2020-11-04T23:45:54Z", "message": "Resolved missed conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzkwMjk0", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-524790294", "createdAt": "2020-11-06T01:11:35Z", "commit": {"oid": "d802991e5d2ccb715d30a82d9c72f0eee5766ca7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMToxMTozNVrOHucmaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMToxMTozNVrOHucmaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2NTEyOA==", "bodyText": "Is the cost really multiplied by the length of the data type?  What if you have a really long string, is it really that expensive?", "url": "https://github.com/splicemachine/spliceengine/pull/4302#discussion_r518465128", "createdAt": "2020-11-06T01:11:35Z", "author": {"login": "msirek"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/DB2LengthOperatorNode.java", "diffHunk": "@@ -194,5 +194,17 @@ private int getConstantNodeLength() throws StandardException\n         if( operand instanceof ConstantNode)\n             return ((ConstantNode) operand).getValue().getLength();\n         return -1;\n-    }        \n+    }\n+\n+    @Override\n+    public double getBaseOperationCost() throws StandardException {\n+        double cost = 0.0;\n+        if (operand != null) {\n+            if (getConstantLength() == -1) {\n+                cost += SIMPLE_OP_COST * operand.getTypeServices().getNull().getLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d802991e5d2ccb715d30a82d9c72f0eee5766ca7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Nzk1MzIw", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-524795320", "createdAt": "2020-11-06T01:26:02Z", "commit": {"oid": "d802991e5d2ccb715d30a82d9c72f0eee5766ca7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "713a0d727e775503dd2374aaba512d3794026d10", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/713a0d727e775503dd2374aaba512d3794026d10", "committedDate": "2020-11-07T03:02:29Z", "message": "DB-10236 Column mapping manipulation for index on expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d908f867665b138a317911e3caafb2ac6be60073", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d908f867665b138a317911e3caafb2ac6be60073", "committedDate": "2020-11-07T03:04:11Z", "message": "Merge branch 'master' into DB-10236"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50554af111bb803018025226236573fc4b3e8976", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/50554af111bb803018025226236573fc4b3e8976", "committedDate": "2020-11-09T08:28:12Z", "message": "Merge branch 'master' into DB-10236"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6aef41c1efc752ed870edc5016410a283c57e7", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/6b6aef41c1efc752ed870edc5016410a283c57e7", "committedDate": "2020-11-09T10:57:04Z", "message": "DB-10236 Fix outer join without correcting column references"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc00f89ca5d25c80a135036925b7298607d57ab", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/4dc00f89ca5d25c80a135036925b7298607d57ab", "committedDate": "2020-11-12T04:10:57Z", "message": "DB-10236 Address comments / fix collecting expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2208d1c4f7a8b2cb3b207e07d658704a5580eefd", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2208d1c4f7a8b2cb3b207e07d658704a5580eefd", "committedDate": "2020-11-12T06:38:51Z", "message": "DB-10236 Address comment / fix post join condition replacing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "012cfcfeb4bf8fbd28ceb8b39c5465fb803563ed", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/012cfcfeb4bf8fbd28ceb8b39c5465fb803563ed", "committedDate": "2020-11-12T12:03:28Z", "message": "Merge branch 'DB-10236' into DB-10176\n\nConflicts:\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryRelationalOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ColumnReference.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/PredicateList.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ResultColumn.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ScanCostFunction.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/SelectivityUtil.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryComparisonOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryDateTimestampOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryOperatorNode.java\n\tsplice_machine/src/main/java/com/splicemachine/derby/impl/stats/StoreCostControllerImpl.java\n\tsplice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cb06b63e05fca90f6eab19508783dceb8d11e03", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2cb06b63e05fca90f6eab19508783dceb8d11e03", "committedDate": "2020-11-12T16:07:08Z", "message": "DB-10176 Fix faling tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f4de2df9887b56ed0cea7e091a2a536c458361f", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9f4de2df9887b56ed0cea7e091a2a536c458361f", "committedDate": "2020-11-12T22:34:32Z", "message": "DB-10176 Add expression evaluation cost to GroupByNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d947bb0afeb5a974e0284def9190d63ac34d3a9", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3d947bb0afeb5a974e0284def9190d63ac34d3a9", "committedDate": "2020-11-13T01:20:29Z", "message": "DB-10176 Fix sporadic tests temporarily"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjU0OTIz", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-529654923", "createdAt": "2020-11-13T02:15:12Z", "commit": {"oid": "2cb06b63e05fca90f6eab19508783dceb8d11e03"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3564c93ad724b40da5714f6110e588d890512c68", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3564c93ad724b40da5714f6110e588d890512c68", "committedDate": "2020-11-13T08:59:48Z", "message": "DB-10176 Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afbceae720671ef6afba980748c63693efb7e4fc", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/afbceae720671ef6afba980748c63693efb7e4fc", "committedDate": "2020-11-13T11:00:42Z", "message": "Merge branch 'master' into DB-10176\n\nConflicts:\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryArithmeticOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryListOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryLogicalOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/Predicate.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/PredicateList.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ResultColumn.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/TernaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/UnaryOperatorNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ValueNode.java\n\tdb-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ValueTupleNode.java\n\tsplice_machine/src/test/java/com/splicemachine/derby/impl/sql/actions/index/IndexIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25f669ca5fbf337e1ccce93d5cd0effa05223b69", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/25f669ca5fbf337e1ccce93d5cd0effa05223b69", "committedDate": "2020-11-13T13:00:08Z", "message": "DB-10176 Fix failing test temporarily"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTEwMTQ0", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-530110144", "createdAt": "2020-11-13T14:33:39Z", "commit": {"oid": "25f669ca5fbf337e1ccce93d5cd0effa05223b69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTMxNTQy", "url": "https://github.com/splicemachine/spliceengine/pull/4302#pullrequestreview-530131542", "createdAt": "2020-11-13T14:58:30Z", "commit": {"oid": "25f669ca5fbf337e1ccce93d5cd0effa05223b69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1103, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}