{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMDQ1Nzkw", "number": 4776, "title": "DB-10896 Keep track of compacted files in HFiles for crash recovery", "bodyText": "", "createdAt": "2020-12-03T19:27:37Z", "url": "https://github.com/splicemachine/spliceengine/pull/4776", "merged": true, "mergeCommit": {"oid": "41b19f0278d01b2a0df1c78452512c74421cf880"}, "closed": true, "closedAt": "2020-12-10T16:52:10Z", "author": {"login": "dgomezferro"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdioPTtgH2gAyNTMyMDQ1NzkwOmQ2MmMyYTg1YTQ2ODY0NTRmOWEwNTU3YTI3YWVmN2U3Zjg1MGZiNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk15vqgFqTU0OTM3NTk1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d62c2a85a4686454f9a0557a27aef7e7f850fb47", "author": {"user": {"login": "dgomezferro", "name": "Daniel G\u00f3mez Ferro"}}, "url": "https://github.com/splicemachine/spliceengine/commit/d62c2a85a4686454f9a0557a27aef7e7f850fb47", "committedDate": "2020-12-03T19:23:35Z", "message": "DB-10896 Keep track of compacted files in HFiles for crash recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "151ba2079e408fdea0d34708d2132d157e8cb374", "author": {"user": {"login": "dgomezferro", "name": "Daniel G\u00f3mez Ferro"}}, "url": "https://github.com/splicemachine/spliceengine/commit/151ba2079e408fdea0d34708d2132d157e8cb374", "committedDate": "2020-12-03T19:32:23Z", "message": "DB-10896 Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4", "author": {"user": {"login": "dgomezferro", "name": "Daniel G\u00f3mez Ferro"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cdb5cf0a1647d232dca286be24c442030ef818a4", "committedDate": "2020-12-03T20:56:43Z", "message": "DB-10896 Added test based on HBase fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MDYxNTgx", "url": "https://github.com/splicemachine/spliceengine/pull/4776#pullrequestreview-547061581", "createdAt": "2020-12-08T10:39:33Z", "commit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDozOTozM1rOIBS39A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDo0NDowNFrOIBTGlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyODcyNA==", "bodyText": "Could you make this a construction parameter of SpliceDefaultCompactor instead?\nThis non final allowSpark only for the sake of tests is a bit scary in my opinion.", "url": "https://github.com/splicemachine/spliceengine/pull/4776#discussion_r538228724", "createdAt": "2020-12-08T10:39:33Z", "author": {"login": "arnaud-splice"}, "path": "hbase_sql/src/main/java/com/splicemachine/compactions/SpliceDefaultCompactor.java", "diffHunk": "@@ -81,7 +83,8 @@\n  *\n  */\n public class SpliceDefaultCompactor extends DefaultCompactor {\n-    private static final boolean allowSpark = true;\n+    public static boolean allowSpark = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIzMjQ3MQ==", "bodyText": "Can you rename this to CleanupCompactedFileAfterFailoverTest instead to adhere to our naming conventions?", "url": "https://github.com/splicemachine/spliceengine/pull/4776#discussion_r538232471", "createdAt": "2020-12-08T10:44:04Z", "author": {"login": "arnaud-splice"}, "path": "hbase_sql/src/test/java/org/apache/hadoop/hbase/regionserver/TestCleanupCompactedFileAfterFailover.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ *  version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.apache.hadoop.hbase.regionserver;\n+\n+import com.splicemachine.compactions.SpliceDefaultCompactionPolicy;\n+import com.splicemachine.compactions.SpliceDefaultCompactor;\n+import com.splicemachine.si.data.hbase.coprocessor.SIObserver;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.Admin;\n+import org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder;\n+import org.apache.hadoop.hbase.client.Delete;\n+import org.apache.hadoop.hbase.client.Get;\n+import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.client.Result;\n+import org.apache.hadoop.hbase.client.Scan;\n+import org.apache.hadoop.hbase.client.Table;\n+import org.apache.hadoop.hbase.client.TableDescriptorBuilder;\n+import org.apache.hadoop.hbase.master.cleaner.TimeToLiveHFileCleaner;\n+import org.apache.hadoop.hbase.regionserver.compactions.CompactionConfiguration;\n+import org.apache.hadoop.hbase.regionserver.compactions.CompactionPolicy;\n+import org.apache.hadoop.hbase.regionserver.compactions.Compactor;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.hadoop.hbase.util.JVMClusterUtil;\n+import org.apache.log4j.Logger;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class TestCleanupCompactedFileAfterFailover {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTY3NzE2", "url": "https://github.com/splicemachine/spliceengine/pull/4776#pullrequestreview-547567716", "createdAt": "2020-12-08T19:37:58Z", "commit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOTozNzo1OVrOIBy1Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOTozNzo1OVrOIBy1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1MjMxNA==", "bodyText": "Awesome fix!   So glad this issue is finally understood.  Do you think we need to do something similar in paths that don't use snapshot isolation, for example, table and schema backup, so that the backup doesn't include the compacted store files?", "url": "https://github.com/splicemachine/spliceengine/pull/4776#discussion_r538752314", "createdAt": "2020-12-08T19:37:59Z", "author": {"login": "msirek"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -92,6 +97,45 @@\n     protected boolean authTokenEnabled;\n     protected Optional<RegionObserver> optionalRegionObserver = Optional.empty();\n \n+    /**\n+     * We need to keep track of compacted files in HFiles in order to avoid forgetting about any of them when\n+     * recovering from a crash, since the compaction marker might have been lost due to a WAL roll or another crash\n+     * See DB-10896 and HBASE-20724 for more details\n+     */\n+    @Override\n+    public void postOpen(ObserverContext<RegionCoprocessorEnvironment> c) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTQ0ODEw", "url": "https://github.com/splicemachine/spliceengine/pull/4776#pullrequestreview-548544810", "createdAt": "2020-12-09T19:40:29Z", "commit": {"oid": "cdb5cf0a1647d232dca286be24c442030ef818a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02d28f6761781b075fea1ad455b0da6bdea78980", "author": {"user": {"login": "dgomezferro", "name": "Daniel G\u00f3mez Ferro"}}, "url": "https://github.com/splicemachine/spliceengine/commit/02d28f6761781b075fea1ad455b0da6bdea78980", "committedDate": "2020-12-10T11:48:50Z", "message": "DB-10896 Address reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTM5NTcy", "url": "https://github.com/splicemachine/spliceengine/pull/4776#pullrequestreview-549139572", "createdAt": "2020-12-10T12:18:45Z", "commit": {"oid": "02d28f6761781b075fea1ad455b0da6bdea78980"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mzc1OTU5", "url": "https://github.com/splicemachine/spliceengine/pull/4776#pullrequestreview-549375959", "createdAt": "2020-12-10T16:26:33Z", "commit": {"oid": "02d28f6761781b075fea1ad455b0da6bdea78980"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 994, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}