{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjA4NDk1", "number": 3869, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowOToyM1rOEZRh0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo1OTozNlrOEmB8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTM3MDQzOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowOToyM1rOHB_1zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMzoxOTowMlrOHEs0iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjU4OA==", "bodyText": "Remove this?", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r471856588", "createdAt": "2020-08-18T01:09:23Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "diffHunk": "@@ -59,7 +57,7 @@\n {\n \tboolean\t\t\t\tunique;\n \tboolean\t\t\t\tuniqueWithDuplicateNulls;\n-\tDataDictionary\t\tdd = null;\n+//\tDataDictionary\t\tdd = null;\n \tProperties\t\t\tproperties;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY5MDY5Ng==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r474690696", "createdAt": "2020-08-21T13:19:02Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "diffHunk": "@@ -59,7 +57,7 @@\n {\n \tboolean\t\t\t\tunique;\n \tboolean\t\t\t\tuniqueWithDuplicateNulls;\n-\tDataDictionary\t\tdd = null;\n+//\tDataDictionary\t\tdd = null;\n \tProperties\t\t\tproperties;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjU4OA=="}, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTM3MDg3OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowOTo0M1rOHB_2GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMzoxOTo0NVrOHEs2HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjY2NA==", "bodyText": "Same here", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r471856664", "createdAt": "2020-08-18T01:09:43Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "diffHunk": "@@ -292,9 +297,9 @@ public ConstantAction\tmakeConstantAction() throws StandardException\n \t{\n \t\tSchemaDescriptor\t\tsd = getSchemaDescriptor();\n \n-\t\tint columnCount = columnNames.length;\n+//\t\tint columnCount = columnNames.length;\n \t\tint approxLength = 0;\n-\t\tboolean index_has_long_column = false;\n+//\t\tboolean index_has_long_column = false;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY5MTEwMQ==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r474691101", "createdAt": "2020-08-21T13:19:45Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/CreateIndexNode.java", "diffHunk": "@@ -292,9 +297,9 @@ public ConstantAction\tmakeConstantAction() throws StandardException\n \t{\n \t\tSchemaDescriptor\t\tsd = getSchemaDescriptor();\n \n-\t\tint columnCount = columnNames.length;\n+//\t\tint columnCount = columnNames.length;\n \t\tint approxLength = 0;\n-\t\tboolean index_has_long_column = false;\n+//\t\tboolean index_has_long_column = false;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjY2NA=="}, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTY3MDM0OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/QueryTreeNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNDowMzo1MVrOHCCiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMzoyNDo0N1rOHEtBqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMDcwMg==", "bodyText": "Session schema is for storing global temporary tables.\nhttp://db.apache.org/derby/docs/10.0/manuals/reference/sqlj33.html\nHowever, it seems we never implement global temporary tables correctly. We may want to file a Jira and fix it.", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r471900702", "createdAt": "2020-08-18T04:03:51Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/QueryTreeNode.java", "diffHunk": "@@ -1408,13 +1424,20 @@ protected final TableDescriptor getTableDescriptor(String tableName,\n         if(schema.getUUID()==null)\n             return null;\n \n+        //If not in session schema, look for local temporary table first.\n+        //If tables is not under SESSION schema, don't get it from LCC. Table version is not set there.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY5NDA1Nw==", "bodyText": "Yes, I had a discussion with Gene and Carol about this issue, and they think we should keep the current temporary tables implementation (not in SESSION schema) for now. This renders many places in derby useless since referencesSessionSchema() doesn't work for temporary tables. And it's the main reason that I introduce a new \"referencesTemporaryTables()\".", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r474694057", "createdAt": "2020-08-21T13:24:47Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/QueryTreeNode.java", "diffHunk": "@@ -1408,13 +1424,20 @@ protected final TableDescriptor getTableDescriptor(String tableName,\n         if(schema.getUUID()==null)\n             return null;\n \n+        //If not in session schema, look for local temporary table first.\n+        //If tables is not under SESSION schema, don't get it from LCC. Table version is not set there.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMDcwMg=="}, "originalCommit": {"oid": "9b10842d89126273d5d2d0eae46939cb8dfb81ed"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzEzMjk0OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericPreparedStatement.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo1OTozNlrOHV0uZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODoyMzo1MFrOHXPSJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0NTk4OQ==", "bodyText": "setValid() ?", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r492645989", "createdAt": "2020-09-22T10:59:36Z", "author": {"login": "martinrupp"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericPreparedStatement.java", "diffHunk": "@@ -905,7 +905,9 @@ public void completeCompile(StatementNode qt) throws StandardException {\n                 updateMode = cursorInfo.updateMode;\n             }\n         }\n-        isValid = true;\n+        synchronized (this) {\n+            isValid = true;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48c041520ea001c74236dec86737d79924881211"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5NTM3NA==", "bodyText": "Second that.", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r493695374", "createdAt": "2020-09-23T15:40:25Z", "author": {"login": "OlegMazurov"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericPreparedStatement.java", "diffHunk": "@@ -905,7 +905,9 @@ public void completeCompile(StatementNode qt) throws StandardException {\n                 updateMode = cursorInfo.updateMode;\n             }\n         }\n-        isValid = true;\n+        synchronized (this) {\n+            isValid = true;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0NTk4OQ=="}, "originalCommit": {"oid": "48c041520ea001c74236dec86737d79924881211"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEyOTcwMg==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3869#discussion_r494129702", "createdAt": "2020-09-24T08:23:50Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericPreparedStatement.java", "diffHunk": "@@ -905,7 +905,9 @@ public void completeCompile(StatementNode qt) throws StandardException {\n                 updateMode = cursorInfo.updateMode;\n             }\n         }\n-        isValid = true;\n+        synchronized (this) {\n+            isValid = true;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0NTk4OQ=="}, "originalCommit": {"oid": "48c041520ea001c74236dec86737d79924881211"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3116, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}