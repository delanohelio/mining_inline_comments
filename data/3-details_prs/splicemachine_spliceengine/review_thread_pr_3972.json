{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NzUzODUy", "number": 3972, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozNToxMlrOEYA1yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozNToxMlrOEYA1yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjE1MDQ5OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataTypeDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozNToxMlrOHAHmTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo1NzowNVrOHAPczA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjU0Mw==", "bodyText": "Why do we need to create it with maximumWidth instead of 0?", "url": "https://github.com/splicemachine/spliceengine/pull/3972#discussion_r469886543", "createdAt": "2020-08-13T11:35:12Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataTypeDescriptor.java", "diffHunk": "@@ -1756,6 +1756,10 @@ public void setChildren(DataTypeDescriptor[] children) {\n      }\n \n     public DataValueDescriptor getDefault() throws StandardException {\n+        if (typeId.getTypeFormatId() == StoredFormatIds.BIT_TYPE_ID) {\n+            return new SQLBit(new byte[typeDescriptor.getMaximumWidth()]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ced5d90d551694cf35f525309b0e3aaac815aa6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxNTE4MA==", "bodyText": "We mimic what DB2 is doing. For char(n) for bit data, their default is a byte array of size n, filled with 0x0", "url": "https://github.com/splicemachine/spliceengine/pull/3972#discussion_r470015180", "createdAt": "2020-08-13T14:57:05Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataTypeDescriptor.java", "diffHunk": "@@ -1756,6 +1756,10 @@ public void setChildren(DataTypeDescriptor[] children) {\n      }\n \n     public DataValueDescriptor getDefault() throws StandardException {\n+        if (typeId.getTypeFormatId() == StoredFormatIds.BIT_TYPE_ID) {\n+            return new SQLBit(new byte[typeDescriptor.getMaximumWidth()]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjU0Mw=="}, "originalCommit": {"oid": "3ced5d90d551694cf35f525309b0e3aaac815aa6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3069, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}