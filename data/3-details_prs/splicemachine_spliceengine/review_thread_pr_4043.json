{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNjM3NjUx", "number": 4043, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTo1Nzo1OVrOEcwztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMzo0ODoxOVrOEfz3Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTk1MjUyOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTo1Nzo1OVrOHHfLBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1Njo1OFrOHIZK6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMjgwNw==", "bodyText": "We need to use SYSVW.SYSTABLESVIEW instead of SYS.SYSTABLES as with schema restriction feature, regular user cannot acces the SYS schema.", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r477612807", "createdAt": "2020-08-26T21:57:59Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1090,6 +1090,21 @@ public static String getSqlConglomsInSchema(){\n         return sqlConglomsInSchema;\n     }\n \n+    private static final String sqlGetTablesInSchema= \"SELECT TABLEID FROM SYS.SYSTABLES WHERE SCHEMAID = ?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc3987debfa0938adcda9018584e9a9c4b2e8c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MzA1MQ==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r478563051", "createdAt": "2020-08-27T16:56:58Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1090,6 +1090,21 @@ public static String getSqlConglomsInSchema(){\n         return sqlConglomsInSchema;\n     }\n \n+    private static final String sqlGetTablesInSchema= \"SELECT TABLEID FROM SYS.SYSTABLES WHERE SCHEMAID = ?\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMjgwNw=="}, "originalCommit": {"oid": "bbc3987debfa0938adcda9018584e9a9c4b2e8c2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTk1MzQ0OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTo1ODoxOVrOHHfLjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1NzowMlrOHIZLEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMjk0MA==", "bodyText": "Could you close the resultSet at the end?", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r477612940", "createdAt": "2020-08-26T21:58:19Z", "author": {"login": "yxia92"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1090,6 +1090,21 @@ public static String getSqlConglomsInSchema(){\n         return sqlConglomsInSchema;\n     }\n \n+    private static final String sqlGetTablesInSchema= \"SELECT TABLEID FROM SYS.SYSTABLES WHERE SCHEMAID = ?\";\n+\n+    private static List<TableDescriptor> getTablesInSchema(DataDictionary dataDictionary,\n+                                                           Connection connection,\n+                                                           String schemaId) throws SQLException, StandardException {\n+        PreparedStatement statement = connection.prepareStatement(sqlGetTablesInSchema);\n+        statement.setString(1, schemaId);\n+        ResultSet resultSet = statement.executeQuery();\n+        List<TableDescriptor> tableDescriptors = new ArrayList<>();\n+        while(resultSet.next()) {\n+            tableDescriptors.add(dataDictionary.getTableDescriptor(new BasicUUID(resultSet.getString(1))));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc3987debfa0938adcda9018584e9a9c4b2e8c2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MzA5MQ==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r478563091", "createdAt": "2020-08-27T16:57:02Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/SpliceAdmin.java", "diffHunk": "@@ -1090,6 +1090,21 @@ public static String getSqlConglomsInSchema(){\n         return sqlConglomsInSchema;\n     }\n \n+    private static final String sqlGetTablesInSchema= \"SELECT TABLEID FROM SYS.SYSTABLES WHERE SCHEMAID = ?\";\n+\n+    private static List<TableDescriptor> getTablesInSchema(DataDictionary dataDictionary,\n+                                                           Connection connection,\n+                                                           String schemaId) throws SQLException, StandardException {\n+        PreparedStatement statement = connection.prepareStatement(sqlGetTablesInSchema);\n+        statement.setString(1, schemaId);\n+        ResultSet resultSet = statement.executeQuery();\n+        List<TableDescriptor> tableDescriptors = new ArrayList<>();\n+        while(resultSet.next()) {\n+            tableDescriptors.add(dataDictionary.getTableDescriptor(new BasicUUID(resultSet.getString(1))));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMjk0MA=="}, "originalCommit": {"oid": "bbc3987debfa0938adcda9018584e9a9c4b2e8c2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzkxMDIzOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceSystemProcedures.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMzo0ODoxOVrOHMU0_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToxMzo0M1rOHO-Ssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY4NjIwNg==", "bodyText": "you may use .catalog(\"tableName\") and .catalog(\"schemaName\")", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r482686206", "createdAt": "2020-09-03T03:48:19Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceSystemProcedures.java", "diffHunk": "@@ -1186,6 +1186,16 @@ public SpliceSystemProcedures(DataDictionary dictionary) {\n                             .build();\n                     procedures.add(purgeDeletedRows);\n \n+                    Procedure minRetentionPeriod = Procedure.newBuilder().name(\"SET_MIN_RETENTION_PERIOD\")\n+                            .varchar(\"schemaName\", 128)\n+                            .varchar(\"tableName\", 128)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cbd2a3d53fa0fe4cf33d90d6893b19f1dfe2124"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2MjcwNg==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4043#discussion_r485462706", "createdAt": "2020-09-09T09:13:43Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceSystemProcedures.java", "diffHunk": "@@ -1186,6 +1186,16 @@ public SpliceSystemProcedures(DataDictionary dictionary) {\n                             .build();\n                     procedures.add(purgeDeletedRows);\n \n+                    Procedure minRetentionPeriod = Procedure.newBuilder().name(\"SET_MIN_RETENTION_PERIOD\")\n+                            .varchar(\"schemaName\", 128)\n+                            .varchar(\"tableName\", 128)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY4NjIwNg=="}, "originalCommit": {"oid": "4cbd2a3d53fa0fe4cf33d90d6893b19f1dfe2124"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3011, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}