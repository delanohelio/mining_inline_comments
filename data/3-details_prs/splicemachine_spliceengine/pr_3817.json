{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDYzMTY3", "number": 3817, "title": "DB-9745: add version number to dictionary tables", "bodyText": "", "createdAt": "2020-07-13T20:09:25Z", "url": "https://github.com/splicemachine/spliceengine/pull/3817", "merged": true, "mergeCommit": {"oid": "4d7b3d9dcc211f37b29d1249c5480d40440093b8"}, "closed": true, "closedAt": "2020-08-20T01:48:58Z", "author": {"login": "jyuanca"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0nPJPgBqjM1NDExMjM1ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAd2QugH2gAyNDQ4NDYzMTY3OjE2ZjFkODMxMzAzNWI5ZDQxOTYwNzJiMDk4MTQ0MWZhMDRkN2Q3NDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94ca09fc8d4dbeaa072961e71cf3208ba7191273", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/94ca09fc8d4dbeaa072961e71cf3208ba7191273", "committedDate": "2020-07-13T18:58:40Z", "message": "clean up"}, "afterCommit": {"oid": "f83552b4f30fb0a725b317252bf0e3717681086b", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/f83552b4f30fb0a725b317252bf0e3717681086b", "committedDate": "2020-07-13T20:12:37Z", "message": "DB-9745: add version number to dictionary tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4ODI5NDQw", "url": "https://github.com/splicemachine/spliceengine/pull/3817#pullrequestreview-448829440", "createdAt": "2020-07-15T10:32:40Z", "commit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODg0NzAz", "url": "https://github.com/splicemachine/spliceengine/pull/3817#pullrequestreview-454884703", "createdAt": "2020-07-24T13:27:33Z", "commit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoyNzozNFrOG2vTVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo0NDoyNlrOG2yJuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MTI4Ng==", "bodyText": "maybe add a justification for suppressing this warning", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460051286", "createdAt": "2020-07-24T13:27:34Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/CatalogRowFactory.java", "diffHunk": "@@ -48,6 +49,7 @@\n  * @version 0.2\n  */\n \n+@SuppressFBWarnings(value=\"EI_EXPOSE_REP2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NTE1OA==", "bodyText": "Could use a not-null assertion here.", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460055158", "createdAt": "2020-07-24T13:34:38Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/CatalogRowFactory.java", "diffHunk": "@@ -337,4 +360,16 @@ public ExecRow makeRow(TupleDescriptor td, TupleDescriptor parent) throws Standa\n \tpublic List<ColumnDescriptor[]> getViewColumns(TableDescriptor view, UUID viewId) throws StandardException {\n \t\treturn null;\n \t}\n+\n+\tpublic void setHeapConglomerate (long heapConglomerate) {\n+\t\tthis.heapConglomerate = heapConglomerate;\n+\t}\n+\n+\tpublic void setDataDictionary(DataDictionary dd) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NzcxMw==", "bodyText": "I would use a Map<Name, String> where Name is an Enumeration of catalog names (SYSCONGLOMERATES, SYSTABLES, SYSCOLUMNS, ...). This makes it easier to change and work with IMHO.", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460057713", "createdAt": "2020-07-24T13:39:09Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/DataDictionary.java", "diffHunk": "@@ -254,6 +250,42 @@\n     int DROP_CONSTRAINT=5;\n     int FOREIGNKEY_CONSTRAINT=6;\n \n+    List<String> catalogVersions = Collections.unmodifiableList(Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA2NjA5Mw==", "bodyText": "nice! \ud83d\udc4d", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460066093", "createdAt": "2020-07-24T13:53:07Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryCache.java", "diffHunk": "@@ -85,11 +86,15 @@\n     private ManagedCache<Pair<String, String>, Optional<RoleGrantDescriptor>> roleGrantCache;\n     private ManagedCache<ByteSlice,TokenDescriptor> tokenCache;\n     private ManagedCache<String, Optional<String>> propertyCache;\n+    private ManagedCache<Long, Optional<String>> catalogVersionCache;\n     private DataDictionary dd;\n-    public static final String [] cacheNames = new String[] {\"oidTdCache\", \"nameTdCache\", \"spsNameCache\", \"sequenceGeneratorCache\", \"permissionsCache\", \"partitionStatisticsCache\",\n+    private static final String [] cacheNames = new String[] {\"oidTdCache\", \"nameTdCache\", \"spsNameCache\", \"sequenceGeneratorCache\", \"permissionsCache\", \"partitionStatisticsCache\",\n             \"storedPreparedStatementCache\", \"conglomerateCache\", \"statementCache\", \"schemaCache\", \"aliasDescriptorCache\", \"roleCache\", \"defaultRoleCache\", \"roleGrantCache\",\n-            \"tokenCache\", \"propertyCache\", \"conglomerateDescriptorCache\", \"oldSchemaCache\"};\n+            \"tokenCache\", \"propertyCache\", \"conglomerateDescriptorCache\", \"oldSchemaCache\", \"catalogVersionCache\"};\n \n+    public static List<String> getCacheNames() {\n+        return Collections.unmodifiableList(Arrays.asList(cacheNames));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3OTg2NQ==", "bodyText": "what's is SysIBMSchema and why do we search it if we can't find the table in the SystemSchema?", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460079865", "createdAt": "2020-07-24T14:15:40Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -7852,7 +7865,11 @@ public void faultInTabInfo(TabInfoImpl ti) throws StandardException{\n             // Just return in this case, so we don't get a null pointer\n             // exception.\n             if(td==null){\n-                return;\n+                // look up from SYSIBM schema\n+                td=getTableDescriptor(ti.getTableName(),getSysIBMSchemaDescriptor(),null);\n+                if ( td == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA4NDkzMA==", "bodyText": "hmm .. we always return an empty row here, why is that?", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460084930", "createdAt": "2020-07-24T14:23:28Z", "author": {"login": "hatyo"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSSTATEMENTSRowFactory.java", "diffHunk": "@@ -352,6 +351,11 @@ public TupleDescriptor buildDescriptor(\n         return descriptor;\n     }\n \n+\tpublic ExecRow makeRow(boolean latestVersion, TupleDescriptor td, TupleDescriptor parent) throws StandardException\n+\t{\n+\t\treturn makeEmptyRow();\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5MjY4OQ==", "bodyText": "maybe you should again after exiting the while loop that the table is enabled (and throw exception if it is not), because wait could've reached 2000 retries and the loop exited however the table is still not enabled yet.", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460092689", "createdAt": "2020-07-24T14:35:39Z", "author": {"login": "hatyo"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/hbase/HBasePartitionAdmin.java", "diffHunk": "@@ -595,6 +595,45 @@ public boolean replicationEnabled(String tableName) throws IOException {\n         return false;\n     }\n \n+    @Override\n+    public void setCatalogVersion(long conglomerateNumber, String version) throws IOException {\n+\n+        TableName tn = tableInfoFactory.getTableInfo(Long.toString(conglomerateNumber));\n+        try {\n+            org.apache.hadoop.hbase.client.TableDescriptor td = admin.getDescriptor(tn);\n+            ((TableDescriptorBuilder.ModifyableTableDescriptor) td).setValue(SIConstants.CATALOG_VERSION_ATTR, version);\n+            boolean tableEnabled = admin.isTableEnabled(tn);\n+            if (tableEnabled) {\n+                admin.disableTable(tn);\n+            }\n+            admin.modifyTable(td);\n+        }\n+        finally {\n+            int wait = 0;\n+            if (tn != null && !admin.isTableEnabled(tn)) {\n+                admin.enableTable(tn);\n+                while (wait < 2000 && !admin.isTableEnabled(tn)) {\n+                    try {\n+                        Thread.sleep(100);\n+                        wait++;\n+                    } catch (InterruptedException e) {\n+                        throw new IOException(e);\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5Mzc0Mw==", "bodyText": "I would throw, this could be misleading for users.", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460093743", "createdAt": "2020-07-24T14:37:26Z", "author": {"login": "hatyo"}, "path": "mem_storage/src/main/java/com/splicemachine/storage/MPartitionFactory.java", "diffHunk": "@@ -101,6 +101,11 @@ public PartitionCreator withSplitKeys(byte[][] splitKeys) {\n             return this;\n         }\n \n+        @Override\n+        public PartitionCreator withCatalogVersion(String version) {\n+            //no-op", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5NTExNQ==", "bodyText": "should be 1966 right?", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460095115", "createdAt": "2020-07-24T14:39:44Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/SpliceCatalogUpgradeScripts.java", "diffHunk": "@@ -85,6 +85,7 @@ else if(v1==v2)\n         scripts.put(new Splice_DD_Version(sdd,3,1,0, 1959), new UpgradeScriptForTriggerMultipleStatements(sdd,tc));\n         scripts.put(new Splice_DD_Version(sdd,3,1,0, 1962), new UpgradeScriptForAddDefaultToColumnViewInSYSVW(sdd,tc));\n         scripts.put(new Splice_DD_Version(sdd,3,1,0, 1964), new UpgradeScriptForAliasToTableView(sdd,tc));\n+        scripts.put(new Splice_DD_Version(sdd,3,1,0, 1965), new UpgradeScriptToAddCatalogVersion(sdd,tc));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5Nzk3Nw==", "bodyText": "Or maybe:\nfor(String s : mc) {\n  managedCache.add(getNewMBeanProxy(mbsc.getSecond(), MANAGED_CACHE + s, ManagedCacheMBean.class));\n}", "url": "https://github.com/splicemachine/spliceengine/pull/3817#discussion_r460097977", "createdAt": "2020-07-24T14:44:26Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/hbase/jmx/JMXUtils.java", "diffHunk": "@@ -112,18 +112,17 @@ public static ObjectName getRegionServerStatistics() throws MalformedObjectNameE\n         }\n         return jmxThreadList;\n     }\n-    public static List<ManagedCacheMBean> getManagedCache(List<Pair<String,JMXConnector>> mbscArray, String [] mc) throws MalformedObjectNameException, IOException {\n+    public static List<ManagedCacheMBean> getManagedCache(List<Pair<String,JMXConnector>> mbscArray, List<String> mc) throws MalformedObjectNameException, IOException {\n         List<ManagedCacheMBean> managedCache =new ArrayList<>();\n         for (Pair<String,JMXConnector> mbsc: mbscArray) {\n-            for(int i = 0; i < mc.length; i++) {\n-                managedCache.add(getNewMBeanProxy(mbsc.getSecond(), MANAGED_CACHE + mc[i], ManagedCacheMBean.class));\n+            for(int i = 0; i < mc.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "883a987df38d6ea4351d0cc7243e1099700c5bab", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/883a987df38d6ea4351d0cc7243e1099700c5bab", "committedDate": "2020-07-14T17:47:17Z", "message": "fix IT"}, "afterCommit": {"oid": "cbe358dd993f374392fa2d16c474a50bb4fa5da3", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/cbe358dd993f374392fa2d16c474a50bb4fa5da3", "committedDate": "2020-08-07T23:25:17Z", "message": "address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4cc4d73f414c21472b317f346dab56dd965c5bc", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/b4cc4d73f414c21472b317f346dab56dd965c5bc", "committedDate": "2020-08-08T00:33:41Z", "message": "fix startup"}, "afterCommit": {"oid": "27334dc4d433622fc0dac7b1733e14b03d164fec", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/27334dc4d433622fc0dac7b1733e14b03d164fec", "committedDate": "2020-08-15T18:25:07Z", "message": "fix startup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27334dc4d433622fc0dac7b1733e14b03d164fec", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/27334dc4d433622fc0dac7b1733e14b03d164fec", "committedDate": "2020-08-15T18:25:07Z", "message": "fix startup"}, "afterCommit": {"oid": "625159506ee2b4f857767736f74a88c533a3d1fc", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/625159506ee2b4f857767736f74a88c533a3d1fc", "committedDate": "2020-08-15T19:09:44Z", "message": "fix startup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDUzNTE0", "url": "https://github.com/splicemachine/spliceengine/pull/3817#pullrequestreview-468053514", "createdAt": "2020-08-16T10:47:55Z", "commit": {"oid": "625159506ee2b4f857767736f74a88c533a3d1fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "625159506ee2b4f857767736f74a88c533a3d1fc", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/625159506ee2b4f857767736f74a88c533a3d1fc", "committedDate": "2020-08-15T19:09:44Z", "message": "fix startup"}, "afterCommit": {"oid": "9dcd86645f7125fccb08ee419ac01e023621d19c", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/9dcd86645f7125fccb08ee419ac01e023621d19c", "committedDate": "2020-08-17T15:48:32Z", "message": "DB-9745: add version number to dictionary tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjUxMTEx", "url": "https://github.com/splicemachine/spliceengine/pull/3817#pullrequestreview-470251111", "createdAt": "2020-08-19T08:47:47Z", "commit": {"oid": "9dcd86645f7125fccb08ee419ac01e023621d19c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "704a9efe6271cdd2f6b75eadbb1f6f71cfde84a3", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/704a9efe6271cdd2f6b75eadbb1f6f71cfde84a3", "committedDate": "2020-08-19T15:18:33Z", "message": "DB-9745: add version number to dictionary tables"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dcd86645f7125fccb08ee419ac01e023621d19c", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/9dcd86645f7125fccb08ee419ac01e023621d19c", "committedDate": "2020-08-17T15:48:32Z", "message": "DB-9745: add version number to dictionary tables"}, "afterCommit": {"oid": "704a9efe6271cdd2f6b75eadbb1f6f71cfde84a3", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/704a9efe6271cdd2f6b75eadbb1f6f71cfde84a3", "committedDate": "2020-08-19T15:18:33Z", "message": "DB-9745: add version number to dictionary tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16f1d8313035b9d4196072b0981441fa04d7d740", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/16f1d8313035b9d4196072b0981441fa04d7d740", "committedDate": "2020-08-19T16:03:45Z", "message": "fix spotbugs warning"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1242, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}