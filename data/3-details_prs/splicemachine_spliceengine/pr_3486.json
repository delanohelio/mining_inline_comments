{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjUzODMy", "number": 3486, "title": "DB-9109 fix problems with parallel runs of tests all writing to xxx/target/external", "bodyText": "every test that needs a temporary output dir will now on-demand create a temp directory,\nthat will be deleted automatically after the test has run, using the @after annotation of JUnit.", "createdAt": "2020-04-24T16:38:53Z", "url": "https://github.com/splicemachine/spliceengine/pull/3486", "merged": true, "mergeCommit": {"oid": "50f227ca51d1e296160050f1eb5f317e6db2c082"}, "closed": true, "closedAt": "2020-04-27T17:42:59Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca0ME3AH2gAyNDA4NjUzODMyOjM3YjliNzhlZGE5MDE4NTM3MjA3M2E4ZjZkMDQ2Mjc2MWY0MTA2MGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbyL8OAFqTQwMTE0MDAxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37b9b78eda90185372073a8f6d0462761f41060b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/37b9b78eda90185372073a8f6d0462761f41060b", "committedDate": "2020-04-24T16:36:22Z", "message": "DB-9109 fix problems with parallel runs of tests all writing to xxx/target/external\n\nevery test that needs a temporary output dir will now on-demand create a temp directory,\nthat will be deleted automatically after the test has run, using the @After annotation of JUnit."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b", "committedDate": "2020-04-24T18:20:17Z", "message": "Merge remote-tracking branch 'origin/master' into DB-9109"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjEzMzI0", "url": "https://github.com/splicemachine/spliceengine/pull/3486#pullrequestreview-400213324", "createdAt": "2020-04-24T19:25:07Z", "commit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToyNTowN1rOGLmAsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToyNTowN1rOGLmAsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxMDI5MQ==", "bodyText": "I think \"null_test_location_avro\" should be \"/null_test_location_avro\", otherwise, the temporary directory used would be something like \"SpliceUnitTest_temp_xxxxnull_test_location_avro\" instead of \"SpliceUnitTest_temp_xxxxn/ull_test_location_avro\". And the after test call deleteTempDirectory() wouldn't be able to delete this directory.  Everything else looks good to me.", "url": "https://github.com/splicemachine/spliceengine/pull/3486#discussion_r414810291", "createdAt": "2020-04-24T19:25:07Z", "author": {"login": "yxia92"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -572,7 +562,7 @@ public void testWriteReadNullValues() throws Exception {\n     @Test\n     public void testWriteReadNullValuesAvro() throws Exception {\n \n-        String tablePath = getExternalResourceDirectory()+\"null_test_location_avro\";\n+        String tablePath = getTempOutputDirectory() + \"null_test_location_avro\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "originalPosition": 279}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjQzNjYy", "url": "https://github.com/splicemachine/spliceengine/pull/3486#pullrequestreview-400243662", "createdAt": "2020-04-24T20:17:44Z", "commit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoxNzo0NFrOGLntQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoyMDoxOVrOGLnyXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzODA4Mw==", "bodyText": "Better create temp directories in \"/target\" as previously - build is self-contained, more control, less surprises.", "url": "https://github.com/splicemachine/spliceengine/pull/3486#discussion_r414838083", "createdAt": "2020-04-24T20:17:44Z", "author": {"login": "OlegMazurov"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceUnitTestWithTempDirectory.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.splicemachine.derby.test.framework;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.junit.After;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/// this class extends SpliceUnitTest so that each test\n+/// can access a temporary output directory that is removed after the test is run\n+/// the temporary output directory is created only on demand.\n+/// might be also doable like SpliceSchemaWatcher extends TestWatcher\n+public class SpliceUnitTestWithTempDirectory extends SpliceUnitTest\n+{\n+    /// set the following boolean to true to prevent deletion of temporary files (e.g. for debugging)\n+    public boolean debug_no_delete = false;\n+    /// the temporary directory (created on demand)\n+    private Path tempDir = null;\n+\n+    /// this will be called after each test, deleting possible temp directories.\n+    @After\n+    public void deleteTempDirectory() throws Exception\n+    {\n+        if( tempDir == null )\n+            return;\n+        else if( debug_no_delete )\n+            System.out.println( \"Not deleting test temporary directory \" + tempDir );\n+        else\n+            FileUtils.deleteDirectory( tempDir.toFile() );\n+    }\n+\n+    /// this will return the temp directory, that is created on demand once for each test\n+    public String getTempOutputDirectory() throws Exception\n+    {\n+        if( tempDir == null)\n+            tempDir = Files.createTempDirectory( \"SpliceUnitTest_temp_\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzODQwMQ==", "bodyText": "Why not merge the content of this class into SpliceUnitTest. We already have createBadLogDirectory there, f.e.\nDevelopers creating new unit tests won't need to differentiate between SpliceUnitTest and SpliceUnitTestWithTempDirectory: either you use the temporary directory or not. Passive overhead is negligible.", "url": "https://github.com/splicemachine/spliceengine/pull/3486#discussion_r414838401", "createdAt": "2020-04-24T20:18:20Z", "author": {"login": "OlegMazurov"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceUnitTestWithTempDirectory.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.splicemachine.derby.test.framework;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.junit.After;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/// this class extends SpliceUnitTest so that each test\n+/// can access a temporary output directory that is removed after the test is run\n+/// the temporary output directory is created only on demand.\n+/// might be also doable like SpliceSchemaWatcher extends TestWatcher\n+public class SpliceUnitTestWithTempDirectory extends SpliceUnitTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzOTM5MA==", "bodyText": "Not used?", "url": "https://github.com/splicemachine/spliceengine/pull/3486#discussion_r414839390", "createdAt": "2020-04-24T20:20:19Z", "author": {"login": "OlegMazurov"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceUnitTest.java", "diffHunk": "@@ -17,7 +17,9 @@\n import com.splicemachine.homeless.TestUtils;\n import com.splicemachine.utils.Pair;\n import org.apache.commons.io.FileUtils;\n+import org.junit.AfterClass;\n import org.junit.Assert;\n+import org.junit.BeforeClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0f076aef9c07ef99d334cf0c81c9fffc6bb67b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b0e07f773291341050fcc7e592ea69b12f54118", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7b0e07f773291341050fcc7e592ea69b12f54118", "committedDate": "2020-04-24T22:07:49Z", "message": "DB-9109 fix / missing in directory leading to temp dir leak\n\ndelete temporary files created in two places"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88f17ecf5029932f5f91bd6ff187338c877871a0", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/88f17ecf5029932f5f91bd6ff187338c877871a0", "committedDate": "2020-04-25T08:26:07Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}, "afterCommit": {"oid": "b7525f1a7075dfb1b40d0eca66c0217957f2ae96", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b7525f1a7075dfb1b40d0eca66c0217957f2ae96", "committedDate": "2020-04-25T08:32:50Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7525f1a7075dfb1b40d0eca66c0217957f2ae96", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b7525f1a7075dfb1b40d0eca66c0217957f2ae96", "committedDate": "2020-04-25T08:32:50Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}, "afterCommit": {"oid": "0f2ecf0c2910bb4064c0389ad6d6f57192cb3e26", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/0f2ecf0c2910bb4064c0389ad6d6f57192cb3e26", "committedDate": "2020-04-25T08:37:45Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecf6ef36a644ddcc0bc48bebfa37001439e9e4c6", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ecf6ef36a644ddcc0bc48bebfa37001439e9e4c6", "committedDate": "2020-04-25T08:41:55Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f2ecf0c2910bb4064c0389ad6d6f57192cb3e26", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/0f2ecf0c2910bb4064c0389ad6d6f57192cb3e26", "committedDate": "2020-04-25T08:37:45Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}, "afterCommit": {"oid": "ecf6ef36a644ddcc0bc48bebfa37001439e9e4c6", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ecf6ef36a644ddcc0bc48bebfa37001439e9e4c6", "committedDate": "2020-04-25T08:41:55Z", "message": "DB-9109 create temp files in /target/external so build is self-contained"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMTQwMDEw", "url": "https://github.com/splicemachine/spliceengine/pull/3486#pullrequestreview-401140010", "createdAt": "2020-04-27T16:50:20Z", "commit": {"oid": "ecf6ef36a644ddcc0bc48bebfa37001439e9e4c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1379, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}