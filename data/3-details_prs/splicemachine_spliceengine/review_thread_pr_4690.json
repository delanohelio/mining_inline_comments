{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Njk3MTMw", "number": 4690, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTo1Njo0M1rOE85kOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjozNTo1M1rOE9-yoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjkzMTc5OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTo1Njo0M1rOH5S9Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0ODowOFrOH-cfYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MTQ2Mg==", "bodyText": "This drops SYSCONSTRAINTS table. However, you only want to drop a column from it.\nIf this is an extra column that's to be ignored, it is OK not to drop it.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r529841462", "createdAt": "2020-11-24T19:56:43Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "diffHunk": "@@ -1925,4 +1904,18 @@ public long getSystablesMinRetentionPeriod() {\n     public boolean useTxnAwareCache() {\n         return !SpliceClient.isRegionServer;\n     }\n+\n+    public void updateSysConstraintTable(TransactionController tc) throws StandardException {\n+        SchemaDescriptor sd = getSystemSchemaDescriptor();\n+        tc.elevate(\"dictionary\");\n+\n+        TableDescriptor td = getTableDescriptor(\"SYSCONSTRAINTS\", sd, tc);\n+        if (td != null) {\n+            dropAllColumnDescriptors(td.getUUID(), tc);\n+            dropTableDescriptor(td, sd, tc);\n+        }\n+\n+        createNaturalNumbersTable(tc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNzE2NQ==", "bodyText": "I'm interested to see the final code here before reviewing this.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r530107165", "createdAt": "2020-11-25T04:53:08Z", "author": {"login": "msirek"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "diffHunk": "@@ -1925,4 +1904,18 @@ public long getSystablesMinRetentionPeriod() {\n     public boolean useTxnAwareCache() {\n         return !SpliceClient.isRegionServer;\n     }\n+\n+    public void updateSysConstraintTable(TransactionController tc) throws StandardException {\n+        SchemaDescriptor sd = getSystemSchemaDescriptor();\n+        tc.elevate(\"dictionary\");\n+\n+        TableDescriptor td = getTableDescriptor(\"SYSCONSTRAINTS\", sd, tc);\n+        if (td != null) {\n+            dropAllColumnDescriptors(td.getUUID(), tc);\n+            dropTableDescriptor(td, sd, tc);\n+        }\n+\n+        createNaturalNumbersTable(tc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MTQ2Mg=="}, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0MDU0Ng==", "bodyText": "I've rolled back my changes. The field will not be dropped.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r535240546", "createdAt": "2020-12-03T13:48:08Z", "author": {"login": "ipraznik-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "diffHunk": "@@ -1925,4 +1904,18 @@ public long getSystablesMinRetentionPeriod() {\n     public boolean useTxnAwareCache() {\n         return !SpliceClient.isRegionServer;\n     }\n+\n+    public void updateSysConstraintTable(TransactionController tc) throws StandardException {\n+        SchemaDescriptor sd = getSystemSchemaDescriptor();\n+        tc.elevate(\"dictionary\");\n+\n+        TableDescriptor td = getTableDescriptor(\"SYSCONSTRAINTS\", sd, tc);\n+        if (td != null) {\n+            dropAllColumnDescriptors(td.getUUID(), tc);\n+            dropTableDescriptor(td, sd, tc);\n+        }\n+\n+        createNaturalNumbersTable(tc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MTQ2Mg=="}, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTQ2NDI0OnYy", "diffSide": "LEFT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTozNzozMFrOH5qvEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0ODoxOVrOH-cf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzMTA1OQ==", "bodyText": "Should we keep writing something here to prevent issues if we rollback to a previous version?\nSay we upgrade to this version, create a constraint, we write only 6 values. There's an issue with the upgrade, so we rollback to the previous version. When deserializing the descriptor for the new constraint we try to read the 7th column but fail.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r530231059", "createdAt": "2020-11-25T09:37:30Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "diffHunk": "@@ -198,9 +195,6 @@ public ExecRow makeRow(boolean latestVersion, TupleDescriptor td,TupleDescriptor\n \t\t/* 6th column is STATE (char(1)) */\n         row.setColumn(SYSCONSTRAINTS_STATE,new SQLChar(isEnabled?\"E\":\"D\"));\n \n-\t\t/* 7th column is REFERENCED */\n-        row.setColumn(SYSCONSTRAINTS_REFERENCECOUNT,new SQLInteger(referenceCount));\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0ODA4OA==", "bodyText": "I recommend not to drop the column even it is not used", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r530548088", "createdAt": "2020-11-25T17:44:40Z", "author": {"login": "jyuanca"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "diffHunk": "@@ -198,9 +195,6 @@ public ExecRow makeRow(boolean latestVersion, TupleDescriptor td,TupleDescriptor\n \t\t/* 6th column is STATE (char(1)) */\n         row.setColumn(SYSCONSTRAINTS_STATE,new SQLChar(isEnabled?\"E\":\"D\"));\n \n-\t\t/* 7th column is REFERENCED */\n-        row.setColumn(SYSCONSTRAINTS_REFERENCECOUNT,new SQLInteger(referenceCount));\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzMTA1OQ=="}, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0MDY3NA==", "bodyText": "I've rolled back my changes. The field will not be dropped.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r535240674", "createdAt": "2020-12-03T13:48:19Z", "author": {"login": "ipraznik-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/SYSCONSTRAINTSRowFactory.java", "diffHunk": "@@ -198,9 +195,6 @@ public ExecRow makeRow(boolean latestVersion, TupleDescriptor td,TupleDescriptor\n \t\t/* 6th column is STATE (char(1)) */\n         row.setColumn(SYSCONSTRAINTS_STATE,new SQLChar(isEnabled?\"E\":\"D\"));\n \n-\t\t/* 7th column is REFERENCED */\n-        row.setColumn(SYSCONSTRAINTS_REFERENCECOUNT,new SQLInteger(referenceCount));\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzMTA1OQ=="}, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTQ4OTUwOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTo0MzozM1rOH5q-_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTo0NToyNVrOH5rEbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzNTEzMw==", "bodyText": "The optimization in getForeignKeyConstraints() no longer applies, because for the \"fast\" path we are getting the list of foreign keys from the data dictionary. It actually hurts because if we have the list cached we will always request it from the DD first. Please remove the optimization there and coordinate with @hatyo to make sure this doesn't make the creation of large FK hierarchies too slow.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r530235133", "createdAt": "2020-11-25T09:43:33Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "diffHunk": "@@ -270,9 +263,8 @@ else if (type == DISABLED)\n \t *\n \t * @return false\n \t */\n-\tpublic boolean isReferenced()\n-\t{\n-\t\treturn referenceCount != 0;\n+\tpublic boolean isReferenced() throws StandardException {\n+\t\treturn getReferenceCount() > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzNjUyNA==", "bodyText": "Thinking a bit more about it, we could use the same cache field fkConstraintList in getReferenceCount(), if it's already populated we have the list and don't need to retrieve it from the DD. If we haven't, we retrieve the list and update the field.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r530236524", "createdAt": "2020-11-25T09:45:25Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "diffHunk": "@@ -270,9 +263,8 @@ else if (type == DISABLED)\n \t *\n \t * @return false\n \t */\n-\tpublic boolean isReferenced()\n-\t{\n-\t\treturn referenceCount != 0;\n+\tpublic boolean isReferenced() throws StandardException {\n+\t\treturn getReferenceCount() > 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzNTEzMw=="}, "originalCommit": {"oid": "0046fb4beb7e77bc9998995da4b0c7d844e2d38a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDIzNDUxOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoyMjozMVrOH68ioA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoxNDo0NVrOH8ki9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MTM2MA==", "bodyText": "Do we need the throws here?", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r531571360", "createdAt": "2020-11-27T12:22:31Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "diffHunk": "@@ -318,8 +284,7 @@ public int decrementReferenceCount()\n \t *\n \t * @return true/false\n \t */\n-\tpublic boolean needsToFire(int stmtType, int[] modifiedCols)\n-\t{\n+\tpublic boolean needsToFire(int stmtType, int[] modifiedCols) throws StandardException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f14f3d85d2dd7fde75911844e911d94168f99fa"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3NTM4MA==", "bodyText": "please see below", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r533275380", "createdAt": "2020-12-01T10:14:45Z", "author": {"login": "ipraznik-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java", "diffHunk": "@@ -318,8 +284,7 @@ public int decrementReferenceCount()\n \t *\n \t * @return true/false\n \t */\n-\tpublic boolean needsToFire(int stmtType, int[] modifiedCols)\n-\t{\n+\tpublic boolean needsToFire(int stmtType, int[] modifiedCols) throws StandardException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MTM2MA=="}, "originalCommit": {"oid": "1f14f3d85d2dd7fde75911844e911d94168f99fa"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDI3MzYwOnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ConstraintDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjozNTo1M1rOH686cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoxNDoyNVrOH8khbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NzQ1OA==", "bodyText": "Is the throws needed?", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r531577458", "createdAt": "2020-11-27T12:35:53Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ConstraintDescriptor.java", "diffHunk": "@@ -308,7 +306,7 @@ public int getReferenceCount()\n \t *\n \t * @return true/false\n \t */\n-\tpublic abstract boolean needsToFire(int stmtType, int[] modifiedCols);\n+\tpublic abstract boolean needsToFire(int stmtType, int[] modifiedCols) throws StandardException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f14f3d85d2dd7fde75911844e911d94168f99fa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3NDk4OA==", "bodyText": "the methods isReferenced and getReferenceCount are changed to use fkConstraintList directly or to load from DataDictionary via getForeignKeys. The method getForeignKeys throws StandardException. I've added throws StandardException to this chain of methods. I can of course wrap with try/catch in getOrLoadFKConstraintList, but with throws is cleaner from my point of view.", "url": "https://github.com/splicemachine/spliceengine/pull/4690#discussion_r533274988", "createdAt": "2020-12-01T10:14:25Z", "author": {"login": "ipraznik-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/dictionary/ConstraintDescriptor.java", "diffHunk": "@@ -308,7 +306,7 @@ public int getReferenceCount()\n \t *\n \t * @return true/false\n \t */\n-\tpublic abstract boolean needsToFire(int stmtType, int[] modifiedCols);\n+\tpublic abstract boolean needsToFire(int stmtType, int[] modifiedCols) throws StandardException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NzQ1OA=="}, "originalCommit": {"oid": "1f14f3d85d2dd7fde75911844e911d94168f99fa"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2754, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}