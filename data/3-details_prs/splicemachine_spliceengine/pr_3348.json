{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjY1NzY5", "number": 3348, "title": "DB-9313 Move getpartitionedstmt to external table related scope in SHOW_CREATE_TABLE", "bodyText": "", "createdAt": "2020-03-26T16:07:42Z", "url": "https://github.com/splicemachine/spliceengine/pull/3348", "merged": true, "mergeCommit": {"oid": "4b180338b91977af6130cc006e889aad3129c586"}, "closed": true, "closedAt": "2020-04-16T05:13:33Z", "author": {"login": "changli6"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcReUPHgH2gAyMzk0MjY1NzY5OmNhODE1NDY3YTUwODQyYmZiMTBkZmE0MWNhYWRkOWMyMGI1MDk0MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYDlqXgFqTM5NDI2NDI1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca815467a50842bfb10dfa41caadd9c20b509424", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/ca815467a50842bfb10dfa41caadd9c20b509424", "committedDate": "2020-03-26T16:02:03Z", "message": "DB-9313 Move getpartitionedstmt to external table related scope in SHOW_CREATE_TABLE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1bd2bcaf6c6684f39f7addc0304736d5551054b", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/f1bd2bcaf6c6684f39f7addc0304736d5551054b", "committedDate": "2020-03-26T16:03:56Z", "message": "Merge branch 'master' into DB-9313"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fc1a40f14a909c822fb4b6829b4d8e57c18c450", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/0fc1a40f14a909c822fb4b6829b4d8e57c18c450", "committedDate": "2020-03-26T18:32:03Z", "message": "Address test case on hbase only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzYxMzk2", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-385361396", "createdAt": "2020-04-01T08:19:54Z", "commit": {"oid": "0fc1a40f14a909c822fb4b6829b4d8e57c18c450"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoxOTo1NVrOF-1vXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoxOTo1NVrOF-1vXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNjUwOQ==", "bodyText": "Did you mean to call this on the view instead of the system table?", "url": "https://github.com/splicemachine/spliceengine/pull/3348#discussion_r401436509", "createdAt": "2020-04-01T08:19:55Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/utils/ShowCreateTableIT.java", "diffHunk": "@@ -382,4 +397,93 @@ public void testTextDefaultUserRole() throws Exception\n                 \") ;\", rs.getString(1));\n \n     }\n+\n+    @Category(HBaseTest.class)\n+    @Test\n+    public void testExternalTablePlainText() throws Exception {\n+        //Plain text\n+        String textDLL = String.format(\"CREATE EXTERNAL TABLE SHOWCREATETABLEIT.testCsvFile (id INT, c_text varchar(30)) \\n\" +\n+                \"ROW FORMAT DELIMITED \\n\" +\n+                \"FIELDS TERMINATED BY ','\\n\" +\n+                \"STORED AS TEXTFILE\\n\" +\n+                \"location '%s'\", getExternalResourceDirectory() + \"testCsvFile\");\n+        methodWatcher.executeUpdate(textDLL);\n+        ResultSet rs = methodWatcher.executeQuery(\"call syscs_util.SHOW_CREATE_TABLE('SHOWCREATETABLEIT','TESTCSVFILE')\");\n+        rs.next();\n+        Assert.assertEquals(\"CREATE EXTERNAL TABLE \\\"SHOWCREATETABLEIT\\\".\\\"TESTCSVFILE\\\" (\\n\" +\n+                \"\\\"ID\\\" INTEGER\\n\" +\n+                \",\\\"C_TEXT\\\" VARCHAR(30)\\n\" +\n+                \") \\n\" +\n+                \"ROW FORMAT DELIMITED FIELDS TERMINATED BY ','\\n\" +\n+                \"STORED AS TEXTFILE\\n\" +\n+                \"LOCATION '\"+getExternalResourceDirectory()+\"testCsvFile';\", rs.getString(1));\n+    }\n+\n+    @Category(HBaseTest.class)\n+    @Test\n+    public void testExternalTableParquetWithoutCompression() throws Exception {\n+        //Parquet Without compression\n+        String parquetDDL = String.format(\"create external table SHOWCREATETABLEIT.testParquet (col1 int, col2 varchar(24))\" +\n+                \"partitioned by (col1) STORED AS parquet LOCATION '%s'\", getExternalResourceDirectory() + \"testParquet\");\n+\n+        methodWatcher.executeUpdate(parquetDDL);\n+        ResultSet rs = methodWatcher.executeQuery(\"call syscs_util.SHOW_CREATE_TABLE('SHOWCREATETABLEIT','TESTPARQUET')\");\n+        rs.next();\n+        Assert.assertEquals(\"CREATE EXTERNAL TABLE \\\"SHOWCREATETABLEIT\\\".\\\"TESTPARQUET\\\" (\\n\" +\n+                \"\\\"COL1\\\" INTEGER\\n\" +\n+                \",\\\"COL2\\\" VARCHAR(24)\\n\" +\n+                \") \\n\" +\n+                \"PARTITIONED BY (COL1)\\n\" +\n+                \"STORED AS PARQUET\\n\" +\n+                \"LOCATION '\"+getExternalResourceDirectory()+\"testParquet';\", rs.getString(1));\n+    }\n+\n+    @Category(HBaseTest.class)\n+    @Test\n+    public void testExternalTableOrcSnappy() throws Exception {\n+        //Orc With compression\n+        String orcDDL = String.format(\"create external table SHOWCREATETABLEIT.testOrcSnappy (col1 int, col2 varchar(24))\" +\n+                \"compressed with snappy partitioned by (col2) STORED AS ORC LOCATION '%s'\", getExternalResourceDirectory()+\"testOrcSnappy\");\n+        methodWatcher.executeUpdate(orcDDL);\n+        ResultSet rs = methodWatcher.executeQuery(\"call syscs_util.SHOW_CREATE_TABLE('SHOWCREATETABLEIT','TESTORCSNAPPY')\");\n+        rs.next();\n+        Assert.assertEquals(\"CREATE EXTERNAL TABLE \\\"SHOWCREATETABLEIT\\\".\\\"TESTORCSNAPPY\\\" (\\n\" +\n+                \"\\\"COL1\\\" INTEGER\\n\" +\n+                \",\\\"COL2\\\" VARCHAR(24)\\n\" +\n+                \") \\n\" +\n+                \"COMPRESSED WITH snappy\\n\" +\n+                \"PARTITIONED BY (COL2)\\n\" +\n+                \"STORED AS ORC\\n\" +\n+                \"LOCATION '\"+getExternalResourceDirectory()+\"testOrcSnappy';\", rs.getString(1));\n+    }\n+\n+    @Test\n+    public void testSystemTable() throws Exception {\n+        try\n+        {\n+            methodWatcher.execute(\"call syscs_util.SHOW_CREATE_TABLE('SYS','SYSTABLES')\");\n+            Assert.fail(\"Expected to fail\");\n+        }\n+        catch (SQLException e)\n+        {\n+            String sqlState = e.getSQLState();\n+            Assert.assertEquals(\"42X62\",sqlState);\n+        }\n+    }\n+\n+    @Test\n+    public void testView() throws Exception {\n+        try\n+        {\n+            methodWatcher.executeUpdate(\"create view v1 as (select a1 from showcreatetableit.t1)\");\n+            methodWatcher.execute(\"call syscs_util.SHOW_CREATE_TABLE('SYS','SYSTABLES')\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fc1a40f14a909c822fb4b6829b4d8e57c18c450"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222c5557a5915970906d592e7aec346a06d8351f", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/222c5557a5915970906d592e7aec346a06d8351f", "committedDate": "2020-04-01T11:42:25Z", "message": "Fix test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTgyMjQx", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-386182241", "createdAt": "2020-04-02T07:50:21Z", "commit": {"oid": "222c5557a5915970906d592e7aec346a06d8351f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDk0ODcw", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-388094870", "createdAt": "2020-04-06T09:51:12Z", "commit": {"oid": "222c5557a5915970906d592e7aec346a06d8351f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjYxNDY3", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-388661467", "createdAt": "2020-04-06T22:25:45Z", "commit": {"oid": "222c5557a5915970906d592e7aec346a06d8351f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3ebe94ad5889102d7818a43cc4716e061d1c9db", "author": {"user": null}, "url": "https://github.com/splicemachine/spliceengine/commit/c3ebe94ad5889102d7818a43cc4716e061d1c9db", "committedDate": "2020-04-13T22:20:36Z", "message": "Clean spotbugs errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNjI1NTQ4", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-393625548", "createdAt": "2020-04-15T09:54:34Z", "commit": {"oid": "c3ebe94ad5889102d7818a43cc4716e061d1c9db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjY0MjUz", "url": "https://github.com/splicemachine/spliceengine/pull/3348#pullrequestreview-394264253", "createdAt": "2020-04-16T02:51:07Z", "commit": {"oid": "c3ebe94ad5889102d7818a43cc4716e061d1c9db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1397, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}