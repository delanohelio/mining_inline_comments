{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTM3ODA0", "number": 3922, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDozNTo0OFrOEVxfsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDozNTo0OFrOEVxfsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjY2NDgyOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/CreateTableIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDozNTo0OFrOG8uAOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo0NTowM1rOG80Mlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMTQ2Ng==", "bodyText": "You don't need to catch anything here, just let the exception bubble up and if any is raised the test will fail with the appropriate stacktrace and message.", "url": "https://github.com/splicemachine/spliceengine/pull/3922#discussion_r466321466", "createdAt": "2020-08-06T10:35:48Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/CreateTableIT.java", "diffHunk": "@@ -224,4 +224,18 @@ public void testCreateTableIfNotExists_GlobalTempTable() throws Exception {\n     public void testCreateTableIfNotExists_ExternalTable() throws Exception {\n         testCreateTableIfNotExists(\"external\");\n     }\n+\n+    @Test\n+    public void testCommentBeforeCreateTableAs() throws Exception {\n+        methodWatcher.executeUpdate(\"create table test_comment_before_create_as_dep_tbl (col int)\");\n+\n+        String createStmt = \"create table %s as select * from test_comment_before_create_as_dep_tbl\";\n+        try {\n+            methodWatcher.executeUpdate(\"-- some SQL-style comment here\\n\" + String.format(createStmt, generateTableName()));\n+            methodWatcher.executeUpdate(\"/* some C-style comment here */\\n\" + String.format(createStmt, generateTableName()));\n+            methodWatcher.executeUpdate(\"/* some mixed */\\n-- comments\\n\" + String.format(createStmt, generateTableName()));\n+        } catch (SQLException e) {\n+            Assert.fail(\"No exception should be thrown\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead8c1ffbdf5c7dd4876f6d1c1bcdd94a91c7798"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMjkzNQ==", "bodyText": "Done.", "url": "https://github.com/splicemachine/spliceengine/pull/3922#discussion_r466422935", "createdAt": "2020-08-06T13:45:03Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/CreateTableIT.java", "diffHunk": "@@ -224,4 +224,18 @@ public void testCreateTableIfNotExists_GlobalTempTable() throws Exception {\n     public void testCreateTableIfNotExists_ExternalTable() throws Exception {\n         testCreateTableIfNotExists(\"external\");\n     }\n+\n+    @Test\n+    public void testCommentBeforeCreateTableAs() throws Exception {\n+        methodWatcher.executeUpdate(\"create table test_comment_before_create_as_dep_tbl (col int)\");\n+\n+        String createStmt = \"create table %s as select * from test_comment_before_create_as_dep_tbl\";\n+        try {\n+            methodWatcher.executeUpdate(\"-- some SQL-style comment here\\n\" + String.format(createStmt, generateTableName()));\n+            methodWatcher.executeUpdate(\"/* some C-style comment here */\\n\" + String.format(createStmt, generateTableName()));\n+            methodWatcher.executeUpdate(\"/* some mixed */\\n-- comments\\n\" + String.format(createStmt, generateTableName()));\n+        } catch (SQLException e) {\n+            Assert.fail(\"No exception should be thrown\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMTQ2Ng=="}, "originalCommit": {"oid": "ead8c1ffbdf5c7dd4876f6d1c1bcdd94a91c7798"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}