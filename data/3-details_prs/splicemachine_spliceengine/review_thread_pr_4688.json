{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjA1MDY4", "number": 4688, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOToxMjoxMVrOE84lyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTozNDo0MlrOE85Fxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjc3MTkyOnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOToxMjoxMVrOH5RcQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMToyMzo0NVrOH5u9GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNjY0Mg==", "bodyText": "log -> LOG for consistency", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529816642", "createdAt": "2020-11-24T19:12:11Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -97,6 +97,8 @@\n \n     private static final Logger AUDITLOG =Logger.getLogger(\"splice-audit\");\n \n+    private static final Logger log = Logger.getLogger(DRDAConnThread.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwMDE4NQ==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530300185", "createdAt": "2020-11-25T11:23:45Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -97,6 +97,8 @@\n \n     private static final Logger AUDITLOG =Logger.getLogger(\"splice-audit\");\n \n+    private static final Logger log = Logger.getLogger(DRDAConnThread.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNjY0Mg=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjc5MDkyOnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOToxNzozMVrOH5Rntw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTozMDoxNFrOH5vMnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxOTU3NQ==", "bodyText": "The reason we redundantly check if Debug/Trace levels are enabled outside the logging methods is to avoid argument evaluation which is done unconditionally and may have quite noticeable overhead.\nIntroducing an intermediate convenience method apparently defeats the purpose.\nThe existing trace() method doesn't conform to that principle and should be reworked (separately from this PR; also to use Logger). It should not be considered as acceptable still.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529819575", "createdAt": "2020-11-24T19:17:31Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -306,13 +309,22 @@ private void parsePRDDTA() throws DRDAProtocolException\n         initialize();\n     }\n \n+    private String getSessionName() {\n+        return session == null ? \"\" : session.toString();\n+    }\n+\n+    private void debug(String message) {\n+        if(log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwNDE1OQ==", "bodyText": "The reason we redundantly check if Debug/Trace levels are enabled outside the logging methods is to avoid argument evaluation which is done unconditionally and may have quite noticeable overhead.\nIntroducing an intermediate convenience method apparently defeats the purpose.\n\nGood point, I will remove it, it looks like org.apache.log4j.Category#debug(java.lang.Object) itself it doing the check again:\n   public void debug(Object message) {\n        if (!this.repository.isDisabled(10000)) {\n            if (Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel())) {\n                this.forcedLog(FQCN, Level.DEBUG, message, (Throwable)null);\n            }\n\n        }\n    }\n\nIf the cost of evaluation is considerable, maybe we should extend the implementation and add a new version of debug which accepts a vararg and does the evaluation only inside the if branch, i.e. something like this:\n    public void debug(String format, Object... args ) {\n        if (!this.repository.isDisabled(10000)) {\n            if (Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel())) {\n                this.forcedLog(FQCN, Level.DEBUG, String.format(format, args), (Throwable)null);\n            }\n        }\n    }\n\n\n\nThe existing trace() method doesn't conform to that principle and should be reworked (separately from this PR; also to use Logger). It should not be considered as acceptable still.\n\nYes, I also think we should change trace() to use our Logger but I would do it separately since it is orthogonal to this change.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530304159", "createdAt": "2020-11-25T11:30:14Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -306,13 +309,22 @@ private void parsePRDDTA() throws DRDAProtocolException\n         initialize();\n     }\n \n+    private String getSessionName() {\n+        return session == null ? \"\" : session.toString();\n+    }\n+\n+    private void debug(String message) {\n+        if(log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxOTU3NQ=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjgzMTYyOnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOToyODozOVrOH5SAYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo0ODowNlrOH5v0Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyNTg5MQ==", "bodyText": "Use LOG.debug(message, error). It will also print the error.getMessage() and the stack trace.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529825891", "createdAt": "2020-11-24T19:28:39Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -380,6 +393,8 @@ public void run() {\n                 // TODO: Could make use of Throwable.addSuppressed here when\n                 //       compiled as Java 7 (or newer).\n                 try {\n+                    debug(\"encountered error \" + error.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxNDI3MA==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530314270", "createdAt": "2020-11-25T11:48:06Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -380,6 +393,8 @@ public void run() {\n                 // TODO: Could make use of Throwable.addSuppressed here when\n                 //       compiled as Java 7 (or newer).\n                 try {\n+                    debug(\"encountered error \" + error.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyNTg5MQ=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjg0NTc3OnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTozMjoyMlrOH5SJCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo1NDowNlrOH5wBdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODEwNg==", "bodyText": "Use LOG. Ideally we'll have just one logging system and it won't be the Derby one.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529828106", "createdAt": "2020-11-24T19:32:22Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -1188,6 +1200,9 @@ private void processCommands() throws DRDAProtocolException\n                     server.consoleExceptionPrint(sqle);\n                     SanityManager.THROWASSERT(\"Unexpected exception after \" +\n                             \"codePoint \"+cpStr, sqle);\n+                } catch (Exception e) {\n+                    server.consoleExceptionPrint(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxNzY4NA==", "bodyText": "Yes, that's definitely something we should do, I didn't want to introduce that here because I thought it is out of scope. Will should at least have a JIRA for tracking this.\nFor now, I would prefer to keep it like this, because the error will appear anyway (although in a different log file).", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530317684", "createdAt": "2020-11-25T11:54:06Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -1188,6 +1200,9 @@ private void processCommands() throws DRDAProtocolException\n                     server.consoleExceptionPrint(sqle);\n                     SanityManager.THROWASSERT(\"Unexpected exception after \" +\n                             \"codePoint \"+cpStr, sqle);\n+                } catch (Exception e) {\n+                    server.consoleExceptionPrint(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODEwNg=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjg0ODQyOnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTozMzowOVrOH5SKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo1NjoxMVrOH5wGJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODUwOQ==", "bodyText": "LOG.debug(message, error)", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529828509", "createdAt": "2020-11-24T19:33:09Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -8697,14 +8714,24 @@ private void closeSession()\n         server.removeFromSessionTable(session.connNum);\n         try {\n             session.close();\n-        } catch (SQLException se)\n+            debug(getSessionName() + \" closed\");\n+        }\n+        catch (SQLException se)\n         {\n             // If something went wrong closing down the session.\n             // Print an error to the console and close this\n             //thread. (6013)\n+            debug(\"encountered exception while closing session \" + getSessionName());\n             sendUnexpectedException(se);\n             close();\n         }\n+        catch (Exception e)\n+        {\n+            // log the exception and rethrow.\n+            debug(\"encountered exception while closing session \"+ getSessionName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxODg4NQ==", "bodyText": "done.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530318885", "createdAt": "2020-11-25T11:56:11Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -8697,14 +8714,24 @@ private void closeSession()\n         server.removeFromSessionTable(session.connNum);\n         try {\n             session.close();\n-        } catch (SQLException se)\n+            debug(getSessionName() + \" closed\");\n+        }\n+        catch (SQLException se)\n         {\n             // If something went wrong closing down the session.\n             // Print an error to the console and close this\n             //thread. (6013)\n+            debug(\"encountered exception while closing session \" + getSessionName());\n             sendUnexpectedException(se);\n             close();\n         }\n+        catch (Exception e)\n+        {\n+            // log the exception and rethrow.\n+            debug(\"encountered exception while closing session \"+ getSessionName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODUwOQ=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjg0OTY5OnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTozMzozNFrOH5SLdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo1NzozMlrOH5wI-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODcyNg==", "bodyText": "LOG.debug(message, error)", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529828726", "createdAt": "2020-11-24T19:33:34Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -8725,6 +8752,7 @@ private void handleException(Exception e)\n             if (e instanceof DRDAProtocolException) {\n                 // protocol error - write error message\n                 sendProtocolException((DRDAProtocolException) e);\n+                server.consoleExceptionPrintTrace(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxOTYxMA==", "bodyText": "I would make it part of this JIRA.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530319610", "createdAt": "2020-11-25T11:57:32Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/DRDAConnThread.java", "diffHunk": "@@ -8725,6 +8752,7 @@ private void handleException(Exception e)\n             if (e instanceof DRDAProtocolException) {\n                 // protocol error - write error message\n                 sendProtocolException((DRDAProtocolException) e);\n+                server.consoleExceptionPrintTrace(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyODcyNg=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjg1MzgzOnYy", "diffSide": "RIGHT", "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/NetworkServerControlImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTozNDo0MlrOH5SN-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo1Nzo1N1rOH5wJwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyOTM3MQ==", "bodyText": "LOG.debug(message, error)", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r529829371", "createdAt": "2020-11-24T19:34:42Z", "author": {"login": "OlegMazurov"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/NetworkServerControlImpl.java", "diffHunk": "@@ -3973,6 +3972,10 @@ void addSession(Socket clientSocket) throws Exception {\n                 if ((maxThreads == 0) || (threadList.size() < maxThreads)) {\n                     thread = new DRDAConnThread(session, this, getTimeSlice(),\n                                                 getLogConnections());\n+                    thread.setUncaughtExceptionHandler((t, e) -> {\n+                        consoleMessage(\"tracing unhandled exception originating from thread: '\" + t.getName() + \"'\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxOTgwOA==", "bodyText": "I would make it part of this JIRA.", "url": "https://github.com/splicemachine/spliceengine/pull/4688#discussion_r530319808", "createdAt": "2020-11-25T11:57:57Z", "author": {"login": "hatyo"}, "path": "db-drda/src/main/java/com/splicemachine/db/impl/drda/NetworkServerControlImpl.java", "diffHunk": "@@ -3973,6 +3972,10 @@ void addSession(Socket clientSocket) throws Exception {\n                 if ((maxThreads == 0) || (threadList.size() < maxThreads)) {\n                     thread = new DRDAConnThread(session, this, getTimeSlice(),\n                                                 getLogConnections());\n+                    thread.setUncaughtExceptionHandler((t, e) -> {\n+                        consoleMessage(\"tracing unhandled exception originating from thread: '\" + t.getName() + \"'\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyOTM3MQ=="}, "originalCommit": {"oid": "eabf7d6e7a40ad9d890e268061ba2f43c645b4f8"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}