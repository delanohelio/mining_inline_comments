{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTUyMjk1", "number": 3341, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1Njo0MFrODrQIzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowMjowNFrOD3PRfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njc5NzU2OnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/si/impl/server/AbstractSICompactionScanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1Njo0MFrOF7fJAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDozOTo1M1rOF_D2kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyMDUxMw==", "bodyText": "Shouldn't the permit be release if an exception was thrown and we are in the catch block?", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r397920513", "createdAt": "2020-03-25T14:56:40Z", "author": {"login": "arnaud-splice"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/impl/server/AbstractSICompactionScanner.java", "diffHunk": "@@ -75,13 +78,15 @@ public boolean next(List<Cell> list) throws IOException{\n         Entry entry;\n         try {\n             entry = queue.take();\n+            int toRelease = entry.cells.size();\n             final boolean more = entry.more;\n             List<TxnView> txns = waitFor(entry.txns);\n             compactionState.mutate(entry.cells, txns, list, purgeConfig);\n             if (!more) {\n                 timer.cancel();\n-                    context.close();\n+                context.close();\n             }\n+            permits.release(toRelease);\n             return more;\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412f837ece0d9b77ba6fdda84c5b34757d11c52b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NzczMA==", "bodyText": "That's a good point, I added some code to explicitly stop the Reading thread and unblock it if there's any exception here.", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r401667730", "createdAt": "2020-04-01T14:39:53Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/impl/server/AbstractSICompactionScanner.java", "diffHunk": "@@ -75,13 +78,15 @@ public boolean next(List<Cell> list) throws IOException{\n         Entry entry;\n         try {\n             entry = queue.take();\n+            int toRelease = entry.cells.size();\n             final boolean more = entry.more;\n             List<TxnView> txns = waitFor(entry.txns);\n             compactionState.mutate(entry.cells, txns, list, purgeConfig);\n             if (!more) {\n                 timer.cancel();\n-                    context.close();\n+                context.close();\n             }\n+            permits.release(toRelease);\n             return more;\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyMDUxMw=="}, "originalCommit": {"oid": "412f837ece0d9b77ba6fdda84c5b34757d11c52b"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjgxNzY1OnYy", "diffSide": "RIGHT", "path": "start-splice-cluster", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowMDoyOVrOF7fVvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNDozNVrOF7gBEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyMzc3NA==", "bodyText": "Why?", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r397923774", "createdAt": "2020-03-25T15:00:29Z", "author": {"login": "arnaud-splice"}, "path": "start-splice-cluster", "diffHunk": "@@ -48,7 +48,7 @@ wait_for () {\n }\n \n BASE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n-DEFAULT_PROFILE=\"hdp3.1.0\"  # default hbase platform profile\n+DEFAULT_PROFILE=\"cdh6.3.0\"  # default hbase platform profile", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412f837ece0d9b77ba6fdda84c5b34757d11c52b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNDg2NA==", "bodyText": "We use cdh more often and it's a pain to switch profiles back and forth in intellij, if people don't mind I'd rather have it be the default profile.", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r397934864", "createdAt": "2020-03-25T15:14:35Z", "author": {"login": "dgomezferro"}, "path": "start-splice-cluster", "diffHunk": "@@ -48,7 +48,7 @@ wait_for () {\n }\n \n BASE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n-DEFAULT_PROFILE=\"hdp3.1.0\"  # default hbase platform profile\n+DEFAULT_PROFILE=\"cdh6.3.0\"  # default hbase platform profile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyMzc3NA=="}, "originalCommit": {"oid": "412f837ece0d9b77ba6fdda84c5b34757d11c52b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjQ4NTEwOnYy", "diffSide": "RIGHT", "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowMjowNFrOGNYi2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzo1NDoxOVrOGRysHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwOQ==", "bodyText": "Why the buffer size is set to LocalCompactionResolutionBufferSize for precompact()? Should it be used for preFlush() instead?", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r416686809", "createdAt": "2020-04-28T15:02:04Z", "author": {"login": "jyuanca"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -230,7 +229,7 @@ public InternalScanner preCompact(ObserverContext<RegionCoprocessorEnvironment>\n                 }\n                 SICompactionScanner siScanner = new SICompactionScanner(\n                         state, scanner, purgeConfig,\n-                        conf.getOlapCompactionResolutionShare(), conf.getOlapCompactionResolutionBufferSize(), context);\n+                        conf.getOlapCompactionResolutionShare(), conf.getLocalCompactionResolutionBufferSize(), context);\n                 siScanner.start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f76f824c95e33ef7686c5da50a710afa715b30"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMwOTQ2OQ==", "bodyText": "This affects compactions that couldn't be run in Spark and fallback to run in HBase. I think flushes are fine because we are dealing with less data and the data itself is already in the MemStore, we are not bringing new data from a file into memory, so having a larger buffer shouldn't be a problem.", "url": "https://github.com/splicemachine/spliceengine/pull/3341#discussion_r421309469", "createdAt": "2020-05-07T07:54:19Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/si/data/hbase/coprocessor/SIObserver.java", "diffHunk": "@@ -230,7 +229,7 @@ public InternalScanner preCompact(ObserverContext<RegionCoprocessorEnvironment>\n                 }\n                 SICompactionScanner siScanner = new SICompactionScanner(\n                         state, scanner, purgeConfig,\n-                        conf.getOlapCompactionResolutionShare(), conf.getOlapCompactionResolutionBufferSize(), context);\n+                        conf.getOlapCompactionResolutionShare(), conf.getLocalCompactionResolutionBufferSize(), context);\n                 siScanner.start();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwOQ=="}, "originalCommit": {"oid": "34f76f824c95e33ef7686c5da50a710afa715b30"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3292, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}