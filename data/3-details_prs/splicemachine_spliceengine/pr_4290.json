{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzA5MDU0", "number": 4290, "title": "DB-10487 VacuumIT needs to wait for possibly still open Transactions", "bodyText": "", "createdAt": "2020-10-14T11:35:31Z", "url": "https://github.com/splicemachine/spliceengine/pull/4290", "merged": true, "mergeCommit": {"oid": "fce56834a8fc33b37b50400be76fc3dc9615bc3e"}, "closed": true, "closedAt": "2020-10-14T18:53:48Z", "author": {"login": "martinrupp"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSbHNZgH2gAyNTAzMzA5MDU0OjkxMmVmNTAxNWRhOWUwNzhhYmI1YWQ0NGI0ZjIxYTNmM2U4Y2ZjNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdShw6hAH2gAyNTAzMzA5MDU0Ojg5OTY5NzczZjYzYjEwZjE2MDM5ZWU4ZGRjZmMwMzRmOTQzZWVkNWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "912ef5015da9e078abb5ad44b4f21a3f3e8cfc65", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/912ef5015da9e078abb5ad44b4f21a3f3e8cfc65", "committedDate": "2020-10-14T11:03:11Z", "message": "DB-10487 VacuumIT needs to wait for possibly still open Transactions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04", "committedDate": "2020-10-14T11:34:16Z", "message": "DB-10487 fix SpotBugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MzE1NTcy", "url": "https://github.com/splicemachine/spliceengine/pull/4290#pullrequestreview-508315572", "createdAt": "2020-10-14T12:57:30Z", "commit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NzozMVrOHhRqlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1Nzo0NFrOHhRrLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDQ4NA==", "bodyText": "Can you create a JIRA to remove this and reference it here?", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504654484", "createdAt": "2020-10-14T12:57:31Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NDYzNw==", "bodyText": "Should this be a LOG instead of println?", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504654637", "createdAt": "2020-10-14T12:57:44Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NjAzMTE2", "url": "https://github.com/splicemachine/spliceengine/pull/4290#pullrequestreview-508603116", "createdAt": "2020-10-14T18:07:27Z", "commit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowNzoyN1rOHhfBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowMFrOHhfFCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MzQxMw==", "bodyText": "To check if the result is empty:\nif(!rs.next()) {\n  return;\n}", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504873413", "createdAt": "2020-10-14T18:07:27Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDI1MQ==", "bodyText": "maybe we should just ignore the test instead of failing since VacuumIT itself didn't even start.", "url": "https://github.com/splicemachine/spliceengine/pull/4290#discussion_r504874251", "createdAt": "2020-10-14T18:09:00Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/utils/VacuumIT.java", "diffHunk": "@@ -105,46 +100,77 @@\n             .around(spliceTableIWatcher)\n             .around(spliceTableJWatcher);\n \n+    @Before\n+    public void waitForStaleTransactions() throws Exception\n+    {\n+        // wait at max 60s for other transactions to finish\n+        // we have defined SerialTest.class, so no other test should run in parallel\n+        for(int i=0; i<60; i++) {\n+            try (ResultSet rs = methodWatcher.executeQuery(\n+                    \"call SYSCS_UTIL.SYSCS_GET_ACTIVE_TRANSACTION_IDS()\")) {\n+                String actual = TestUtils.FormattedResult.ResultFactory.toString(rs);\n+                if( actual.equals(\"\") ) return;\n+                Thread.sleep(1000);\n+                System.out.println(\"VacuumIT: Waiting for active transactions:\\n\" + actual);\n+            }\n+        }\n+        Assert.fail(\"VacuumIT can't run with active transactions still happening. This is a bug in other \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7568aedf01fbbe8ad778fd77a9cbffe3da4b0b04"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89969773f63b10f16039ee8ddcfc034f943eed5f", "author": {"user": {"login": "martinrupp", "name": "Martin Rupp"}}, "url": "https://github.com/splicemachine/spliceengine/commit/89969773f63b10f16039ee8ddcfc034f943eed5f", "committedDate": "2020-10-14T18:48:10Z", "message": "DB-10487 address code review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1099, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}