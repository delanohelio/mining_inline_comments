{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzAxMjkw", "number": 4071, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTo1NzowM1rOEhF3Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTo1NzowM1rOEhF3Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTM0NDk4OnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTo1NzowM1rOHONukQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMjo1OToyNVrOHSAlAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NzAyNQ==", "bodyText": "I think it is better to do the following:\n\nMake sure you create all tables under the schema you set (line 55). Put all create table statements in the test preamble if possible.\nUse unique table names in the same test suite.\nRemove all drop statements, the schema watcher will take care of that for you since it is dropping the schema when the test suite is finished.", "url": "https://github.com/splicemachine/spliceengine/pull/4071#discussion_r484667025", "createdAt": "2020-09-08T05:57:03Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -1010,6 +1010,23 @@ public void testReadTextMismatchSchema() throws Exception {\n                             \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n                     e.getMessage() );\n         }\n+        methodWatcher.execute(\"drop table external_t2\");\n+\n+        methodWatcher.executeUpdate(String.format(\"create external table external_t3 (col1 int, col2 varchar(20) )\" +\n+                \"ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' ESCAPED BY '\\\\\\\\' LINES TERMINATED BY '\\\\n'\" +\n+                \" STORED AS TEXTFILE LOCATION '%s'\", file));\n+        try {\n+            methodWatcher.executeQuery(\"select * from external_t3\");\n+            Assert.fail(\"Exception not thrown\");\n+        } catch (SQLException e) {\n+            Assert.assertEquals(\"Wrong Exception (\" + e.getMessage() + \")\", EXTERNAL_TABLES_READ_FAILURE, e.getSQLState());\n+            Assert.assertEquals( \"wrong exception message\",\n+                    \"External Table read failed with exception '2 attribute(s) defined but 3 present \" +\n+                            \"in the external file : '\" + file + \"'. Suggested Schema is 'CREATE EXTERNAL TABLE T \" +\n+                            \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n+                    e.getMessage() );\n+        }\n+        methodWatcher.execute(\"drop table external_t3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98b1f2d6545460a0a37e7d057885070b964649e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0MDAzNQ==", "bodyText": "Hi you're correct for other tests, however here we create many different tables, adding them to the preamble would mean creating 50 tables there, which is - in context of external tables - not really great for overview.", "url": "https://github.com/splicemachine/spliceengine/pull/4071#discussion_r488640035", "createdAt": "2020-09-15T12:50:53Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -1010,6 +1010,23 @@ public void testReadTextMismatchSchema() throws Exception {\n                             \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n                     e.getMessage() );\n         }\n+        methodWatcher.execute(\"drop table external_t2\");\n+\n+        methodWatcher.executeUpdate(String.format(\"create external table external_t3 (col1 int, col2 varchar(20) )\" +\n+                \"ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' ESCAPED BY '\\\\\\\\' LINES TERMINATED BY '\\\\n'\" +\n+                \" STORED AS TEXTFILE LOCATION '%s'\", file));\n+        try {\n+            methodWatcher.executeQuery(\"select * from external_t3\");\n+            Assert.fail(\"Exception not thrown\");\n+        } catch (SQLException e) {\n+            Assert.assertEquals(\"Wrong Exception (\" + e.getMessage() + \")\", EXTERNAL_TABLES_READ_FAILURE, e.getSQLState());\n+            Assert.assertEquals( \"wrong exception message\",\n+                    \"External Table read failed with exception '2 attribute(s) defined but 3 present \" +\n+                            \"in the external file : '\" + file + \"'. Suggested Schema is 'CREATE EXTERNAL TABLE T \" +\n+                            \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n+                    e.getMessage() );\n+        }\n+        methodWatcher.execute(\"drop table external_t3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NzAyNQ=="}, "originalCommit": {"oid": "e98b1f2d6545460a0a37e7d057885070b964649e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0NTg5MQ==", "bodyText": "ok :)", "url": "https://github.com/splicemachine/spliceengine/pull/4071#discussion_r488645891", "createdAt": "2020-09-15T12:59:25Z", "author": {"login": "hatyo"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -1010,6 +1010,23 @@ public void testReadTextMismatchSchema() throws Exception {\n                             \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n                     e.getMessage() );\n         }\n+        methodWatcher.execute(\"drop table external_t2\");\n+\n+        methodWatcher.executeUpdate(String.format(\"create external table external_t3 (col1 int, col2 varchar(20) )\" +\n+                \"ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' ESCAPED BY '\\\\\\\\' LINES TERMINATED BY '\\\\n'\" +\n+                \" STORED AS TEXTFILE LOCATION '%s'\", file));\n+        try {\n+            methodWatcher.executeQuery(\"select * from external_t3\");\n+            Assert.fail(\"Exception not thrown\");\n+        } catch (SQLException e) {\n+            Assert.assertEquals(\"Wrong Exception (\" + e.getMessage() + \")\", EXTERNAL_TABLES_READ_FAILURE, e.getSQLState());\n+            Assert.assertEquals( \"wrong exception message\",\n+                    \"External Table read failed with exception '2 attribute(s) defined but 3 present \" +\n+                            \"in the external file : '\" + file + \"'. Suggested Schema is 'CREATE EXTERNAL TABLE T \" +\n+                            \"(_c0 CHAR/VARCHAR(x), _c1 CHAR/VARCHAR(x), _c2 CHAR/VARCHAR(x));'.'\",\n+                    e.getMessage() );\n+        }\n+        methodWatcher.execute(\"drop table external_t3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NzAyNQ=="}, "originalCommit": {"oid": "e98b1f2d6545460a0a37e7d057885070b964649e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3031, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}