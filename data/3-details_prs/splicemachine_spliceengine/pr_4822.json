{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NzMxMTkw", "number": 4822, "title": "DB-10728 Fix maxExecutorCores calculation on clusters.", "bodyText": "SPLICE-2289 reads spark properties from the wrong location on cluster configurations, causing the estimated number of parallel tasks to always be 1, which can negatively affect costing of join plans for OLAP queries.\nexplain select * from lineitem:\n\nCursor(n=5,rows=1,updateMode=,engine=OLAP (cost))\n->  ScrollInsensitive(n=5,totalCost=60721.573,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=1)\n->  ProjectRestrict(n=4,totalCost=705.423,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=1)\n->  GroupBy(n=3,totalCost=705.423,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=1)\n->  ProjectRestrict(n=2,totalCost=11286.284,outputRows=6001215,outputHeapSize=0 B,partitions=2,parallelTasks=1)\n->  TableScan[LINEITEM(129456)](n=0,totalCost=11286.284,scannedRows=6001215,outputRows=6001215,outputHeapSize=0 B,partitions=2,parallelTasks=1)\n\nThis change picks up the spark and yarn properties from the proper structures.\nAfter the fix:\n\nCursor(n=5,rows=1,updateMode=,engine=OLAP (cost))\n->  ScrollInsensitive(n=5,totalCost=60721.573,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=16)\n->  ProjectRestrict(n=4,totalCost=705.423,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=16)\n->  GroupBy(n=3,totalCost=705.423,outputRows=1,outputHeapSize=0 B,partitions=1,parallelTasks=16)\n->  ProjectRestrict(n=2,totalCost=11286.284,outputRows=6001215,outputHeapSize=0 B,partitions=2,parallelTasks=16)\n->  TableScan[LINEITEM(129456)](n=0,totalCost=11286.284,scannedRows=6001215,outputRows=6001215,outputHeapSize=0 B,partitions=2,parallelTasks=16)", "createdAt": "2020-12-10T07:40:31Z", "url": "https://github.com/splicemachine/spliceengine/pull/4822", "merged": true, "mergeCommit": {"oid": "b4faf1c4a77c198142175b27adbf0af4c9cf3d3f"}, "closed": true, "closedAt": "2020-12-21T09:37:09Z", "author": {"login": "msirek"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkuUEqAH2gAyNTM1NzMxMTkwOjYxZTFmMTljMTc5NWVkZjY2ZGUwMWU1YTdiNGNkNTBiMWEwMGE3NTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdn9GwMAFqTU1NTk5Njc5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61e1f19c1795edf66de01e5a7b4cd50b1a00a758", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/61e1f19c1795edf66de01e5a7b4cd50b1a00a758", "committedDate": "2020-12-10T07:36:04Z", "message": "DB-10728 Fix maxExecutorCores calculation on clusters."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjg2MDc0", "url": "https://github.com/splicemachine/spliceengine/pull/4822#pullrequestreview-552286074", "createdAt": "2020-12-15T10:01:39Z", "commit": {"oid": "61e1f19c1795edf66de01e5a7b4cd50b1a00a758"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzAzMTM2", "url": "https://github.com/splicemachine/spliceengine/pull/4822#pullrequestreview-552303136", "createdAt": "2020-12-15T10:21:03Z", "commit": {"oid": "61e1f19c1795edf66de01e5a7b4cd50b1a00a758"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyNjoxMlrOIGDufw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyNjoxMlrOIGDufw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMzQyMw==", "bodyText": "I'd rather not add this dependency, since we are only using .deepEquals() it should be easy to remove.", "url": "https://github.com/splicemachine/spliceengine/pull/4822#discussion_r543223423", "createdAt": "2020-12-15T10:26:12Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/pom.xml", "diffHunk": "@@ -136,6 +136,11 @@\n             <version>${project.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+          <groupId>com.cedarsoftware</groupId>\n+          <artifactId>java-util</artifactId>\n+          <version>1.61.0</version>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61e1f19c1795edf66de01e5a7b4cd50b1a00a758"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2d97817d4f512072883c924bcf9402baa303107", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/f2d97817d4f512072883c924bcf9402baa303107", "committedDate": "2020-12-16T02:17:58Z", "message": "DB-10728 Remove dependency on cedarsoftware DeepEquals."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3302cbdeffe8e07ad432887b51e7fecc1d78ff10", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/3302cbdeffe8e07ad432887b51e7fecc1d78ff10", "committedDate": "2020-12-16T05:19:13Z", "message": "DB-10728 Fix Spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/94546d92d1d082d0b604bf430476c1f0955863db", "committedDate": "2020-12-16T05:24:26Z", "message": "DB-10728 Fix Spotbugs, take 2."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NTAyMTc1", "url": "https://github.com/splicemachine/spliceengine/pull/4822#pullrequestreview-555502175", "createdAt": "2020-12-18T13:54:50Z", "commit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo1NDo1MFrOIIjulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo1Nzo0MlrOIIj08g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NDg4NA==", "bodyText": "I think this is not used, remove if so", "url": "https://github.com/splicemachine/spliceengine/pull/4822#discussion_r545844884", "createdAt": "2020-12-18T13:54:50Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/main/java/com/splicemachine/derby/lifecycle/HEngineSqlEnv.java", "diffHunk": "@@ -68,6 +71,8 @@\n     // numNodes is written to zookeeper by OlapServerMaster, so we have\n     // to wait until the Olap Server comes up before getting numNodes from zookeeper.\n     private static int MAX_EXECUTOR_CORES = -1;\n+    // A value to use until the Olap Server comes up.\n+    private static int DEFAULT_MAX_EXECUTOR_CORES = 8;\n     private static int numSparkNodes = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NTc3MA==", "bodyText": "I'd rather have this function in OlapServerMaster or a class logically close to the OlapServer, I think this class shouldn't have that much knowledge about YARN. Ideally we should just read the number of executor cores from Zookeeper.", "url": "https://github.com/splicemachine/spliceengine/pull/4822#discussion_r545845770", "createdAt": "2020-12-18T13:56:21Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/main/java/com/splicemachine/derby/lifecycle/HEngineSqlEnv.java", "diffHunk": "@@ -265,21 +270,38 @@ public int getMaxExecutorCores() {\n         if (MAX_EXECUTOR_CORES != -1)\n             return MAX_EXECUTOR_CORES;\n         synchronized (HEngineSqlEnv.class) {\n-            int sparkNodes = getNumSparkNodes();\n+            byte [] sparkYarnConfigBytes = getSparkYarnConfigBytes();\n+            if (sparkYarnConfigBytes == null)\n+                return DEFAULT_MAX_EXECUTOR_CORES;\n+\n+            SparkYarnConfiguration conf = null;\n+            try {\n+                ByteArrayInputStream bis = new ByteArrayInputStream(sparkYarnConfigBytes);\n+                ObjectInput in = new ObjectInputStream(bis);\n+                conf = (SparkYarnConfiguration) in.readObject();\n+            }\n+            catch (Exception e) {\n+                return DEFAULT_MAX_EXECUTOR_CORES;\n+            }\n+            if (conf == null)\n+                return DEFAULT_MAX_EXECUTOR_CORES;\n+\n             int maxExecutorCores =\n-              calculateMaxExecutorCores(HConfiguration.unwrapDelegate().get(\"yarn.nodemanager.resource.memory-mb\"),\n-                                        getProperty(\"splice.spark.dynamicAllocation.enabled\"),\n-                                        getProperty(\"splice.spark.executor.instances\"),\n-                                        getProperty(\"splice.spark.executor.cores\"),\n-                                        getProperty(\"splice.spark.executor.memory\"),\n-                                        getProperty(\"splice.spark.dynamicAllocation.maxExecutors\"),\n-                                        getProperty(\"splice.spark.executor.memoryOverhead\"),\n-                                        getProperty(\"splice.spark.yarn.executor.memoryOverhead\"),\n-                                        sparkNodes > 0 ? sparkNodes : 1);\n-            if (sparkNodes > 0) {\n-                numSparkNodes = sparkNodes;\n+              calculateMaxExecutorCores(conf.getYarnNodemanagerResourceMemoryMB(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NjAxNw==", "bodyText": "If it's not a lot of work make this a Protobuf message for future extendability.", "url": "https://github.com/splicemachine/spliceengine/pull/4822#discussion_r545846017", "createdAt": "2020-12-18T13:56:50Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/main/java/com/splicemachine/derby/lifecycle/HEngineSqlEnv.java", "diffHunk": "@@ -78,22 +83,22 @@\n     private OlapClient olapClient;\n     private OperationManager operationManager;\n     private ZkServiceDiscovery serviceDiscovery;\n-    private static final String sparkNumNodesZkPath =\n-            HConfiguration.getConfiguration().getSpliceRootPath() + SPARK_NUM_NODES_PATH;\n+    private static final String sparkYarnConfigZkPath =\n+            HConfiguration.getConfiguration().getSpliceRootPath() + SPARK_YARN_CONFIG_PATH;\n \n \n-    // Find the number of nodes on which Spark executors can be run.\n-    private static int getNumSparkNodes() {\n-        int numNodes = -1;\n+    // Find the Spark and YARN configuration from Zookeeper.\n+    private static byte [] getSparkYarnConfigBytes() {\n+        byte [] returnData = null;\n         try {\n-            byte [] data = ZkUtils.getData(sparkNumNodesZkPath);\n+            byte [] data = ZkUtils.getData(sparkYarnConfigZkPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NjUxNA==", "bodyText": "If we compute the number of cores in OlapServerMaster (or close by) I don't think we need this class anymore", "url": "https://github.com/splicemachine/spliceengine/pull/4822#discussion_r545846514", "createdAt": "2020-12-18T13:57:42Z", "author": {"login": "dgomezferro"}, "path": "hbase_storage/src/main/java/com/splicemachine/access/SparkYarnConfiguration.java", "diffHunk": "@@ -0,0 +1,213 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.splicemachine.access;\n+\n+import java.io.*;\n+\n+/**\n+ * A serializable class for storing YARN and Spark properties in Zookeeper.\n+ *\n+ */\n+public class SparkYarnConfiguration implements Externalizable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94546d92d1d082d0b604bf430476c1f0955863db"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e50e5b26610891d22c088f3114ef9233533034", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/40e50e5b26610891d22c088f3114ef9233533034", "committedDate": "2020-12-18T15:05:48Z", "message": "DB-10728 Move maxExecutorCores calculation to OlapServerMaster."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NTg5NTc1", "url": "https://github.com/splicemachine/spliceengine/pull/4822#pullrequestreview-555589575", "createdAt": "2020-12-18T15:31:04Z", "commit": {"oid": "40e50e5b26610891d22c088f3114ef9233533034"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbed83f6313b513ba011bff6db7430134e3fe574", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/fbed83f6313b513ba011bff6db7430134e3fe574", "committedDate": "2020-12-18T16:29:07Z", "message": "Merge branch 'master' into DB-10728"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTk2Nzk1", "url": "https://github.com/splicemachine/spliceengine/pull/4822#pullrequestreview-555996795", "createdAt": "2020-12-20T08:31:52Z", "commit": {"oid": "fbed83f6313b513ba011bff6db7430134e3fe574"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1003, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}