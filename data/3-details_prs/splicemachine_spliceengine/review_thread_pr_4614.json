{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxODI3ODU1", "number": 4614, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0ODoyMFrOE57zqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0ODoyMFrOE57zqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTg0MTcwOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/pipeline/foreignkey/ForeignKeyChildInterceptWriteHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0ODoyMFrOH0spYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1MToxNVrOH0sxhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAxOTQ4OA==", "bodyText": "does it make sense still to use switch here, as most of the cases empty? Maybe \"if\" will look simpler", "url": "https://github.com/splicemachine/spliceengine/pull/4614#discussion_r525019488", "createdAt": "2020-11-17T09:48:20Z", "author": {"login": "ipraznik-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/pipeline/foreignkey/ForeignKeyChildInterceptWriteHandler.java", "diffHunk": "@@ -159,24 +159,20 @@ public void close(WriteContext ctx) throws IOException {\n \n     private boolean hasData(DataResult result,SimpleTxnFilter filter) throws IOException {\n         if(result!=null && !result.isEmpty()) {\n-            int cellCount = result.size();\n             for (DataCell dc : result) {\n                 DataFilter.ReturnCode returnCode = filter.filterCell(dc);\n                 switch (returnCode) {\n-                    case NEXT_ROW:\n-                        return false; //the entire row is filtered\n-                    case SKIP:\n-                    case NEXT_COL:\n-                    case SEEK:\n-                        cellCount--; //the cell is filtered\n-                        break;\n-                    case INCLUDE:\n+                    case INCLUDE: // fallthrough\n                     case INCLUDE_AND_NEXT_COL: //the cell is included, so we have some data\n-                    default: //do nothing\n+                        return true;\n+                    case SKIP: // fallthrough\n+                    case NEXT_COL: // fallthrough\n+                    case SEEK: // fallthrough\n+                    case NEXT_ROW: // fallthrough\n+                    default: //do nothing, keep trying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b466eac594b38926069598ed3f427eda2ba99c2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyMTU3Mg==", "bodyText": "If it is OK, I would rather keep it this way mainly to illustrate the exact purpose of the algorithm for each DataFilter.ReturnCode return type. But I don't have strong opinion about it and can still change it if you think this doesn't make too much sense.", "url": "https://github.com/splicemachine/spliceengine/pull/4614#discussion_r525021572", "createdAt": "2020-11-17T09:51:15Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/pipeline/foreignkey/ForeignKeyChildInterceptWriteHandler.java", "diffHunk": "@@ -159,24 +159,20 @@ public void close(WriteContext ctx) throws IOException {\n \n     private boolean hasData(DataResult result,SimpleTxnFilter filter) throws IOException {\n         if(result!=null && !result.isEmpty()) {\n-            int cellCount = result.size();\n             for (DataCell dc : result) {\n                 DataFilter.ReturnCode returnCode = filter.filterCell(dc);\n                 switch (returnCode) {\n-                    case NEXT_ROW:\n-                        return false; //the entire row is filtered\n-                    case SKIP:\n-                    case NEXT_COL:\n-                    case SEEK:\n-                        cellCount--; //the cell is filtered\n-                        break;\n-                    case INCLUDE:\n+                    case INCLUDE: // fallthrough\n                     case INCLUDE_AND_NEXT_COL: //the cell is included, so we have some data\n-                    default: //do nothing\n+                        return true;\n+                    case SKIP: // fallthrough\n+                    case NEXT_COL: // fallthrough\n+                    case SEEK: // fallthrough\n+                    case NEXT_ROW: // fallthrough\n+                    default: //do nothing, keep trying", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAxOTQ4OA=="}, "originalCommit": {"oid": "7b466eac594b38926069598ed3f427eda2ba99c2"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2794, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}