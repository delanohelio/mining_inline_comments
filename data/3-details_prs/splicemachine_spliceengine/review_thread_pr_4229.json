{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Nzg2ODA2", "number": 4229, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NDowMVrOEqoZ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOToxMTozMVrOEqoz_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTM3NjU0OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NDowMVrOHc8gHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowMzoxMVrOHhJYCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExMzQzOQ==", "bodyText": "Given the code for SQLTimestamp above, it seems supporting SQLTime is trivial. Any reason to leave it for now?", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r500113439", "createdAt": "2020-10-06T08:54:01Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3323e25407471c83337caa59887f632bd274a3cd"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUxODY2Ng==", "bodyText": "It was not required so far and I am not exactly sure about its semantics since SQLTime is a time period ranging from 00:00:00.0000000 to 23:59:59.9999999 I think we need to map it to a point of time correctly (to act similar to Timestamp), i.e. let's say the current date is 01.01.2020 and given SQLTime is 01:02:03.456789, the resulting Timestamp would be 01.01.2020 01:02:03.456789. I think SQLTime#getTimestamp(Calendar) provides this functionality already.\nBut to answer your question, I will add support for this data type later since it wasn't required so far IIRC.", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r504518666", "createdAt": "2020-10-14T09:03:11Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExMzQzOQ=="}, "originalCommit": {"oid": "3323e25407471c83337caa59887f632bd274a3cd"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTM5MDg4OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NzozNVrOHc8pKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowOToyM1rOHhJnlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNTc1NA==", "bodyText": "Is it sufficient to get one from activation.getLanguageConnectionContext().getContextManager()?", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r500115754", "createdAt": "2020-10-06T08:57:35Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.\n+        }\n+    }\n+\n+    /**\n+     * @param pastTx The ID of the past transaction.\n+     * @return a view of a past transaction.\n+     */\n+    protected TxnView getPastTransaction(long pastTx) throws StandardException {\n+        TransactionController transactionExecute=activation.getLanguageConnectionContext().getTransactionExecute();\n+        ContextManager cm = ContextService.getFactory().newContextManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3323e25407471c83337caa59887f632bd274a3cd"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMDM0MA==", "bodyText": "I am not sure but I changed it as proposed to reuse existing  ContextManager instead of creating a new one.", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r504520340", "createdAt": "2020-10-14T09:05:37Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.\n+        }\n+    }\n+\n+    /**\n+     * @param pastTx The ID of the past transaction.\n+     * @return a view of a past transaction.\n+     */\n+    protected TxnView getPastTransaction(long pastTx) throws StandardException {\n+        TransactionController transactionExecute=activation.getLanguageConnectionContext().getTransactionExecute();\n+        ContextManager cm = ContextService.getFactory().newContextManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNTc1NA=="}, "originalCommit": {"oid": "3323e25407471c83337caa59887f632bd274a3cd"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMjY0NQ==", "bodyText": "With reusing the ContextManager many tests are failing in SelectTimeTravelIT, I think it has something to do with time travel (see the line below: TransactionController pastTC = transactionExecute.getAccessManager().getReadOnlyTransaction(cm, pastTx);).", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r504522645", "createdAt": "2020-10-14T09:09:23Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.\n+        }\n+    }\n+\n+    /**\n+     * @param pastTx The ID of the past transaction.\n+     * @return a view of a past transaction.\n+     */\n+    protected TxnView getPastTransaction(long pastTx) throws StandardException {\n+        TransactionController transactionExecute=activation.getLanguageConnectionContext().getTransactionExecute();\n+        ContextManager cm = ContextService.getFactory().newContextManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNTc1NA=="}, "originalCommit": {"oid": "3323e25407471c83337caa59887f632bd274a3cd"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTQ0MzE4OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOToxMTozMVrOHc9KOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxOTo0MFrOHhKAXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyNDIxOA==", "bodyText": "NOT_IMPLEMENTED is \"Feature not implemented: {0}.\", so requires a parameter.\ne.g.\nthrow StandardException.newException(SQLState.NOT_IMPLEMENTED, dataValue.getClass().getSimpleName() + \" can't be used in mapToTxId\" );", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r500124218", "createdAt": "2020-10-06T09:11:31Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e399e44abdd0cf400127a707d333da76decfbcc4"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNTI2Mw==", "bodyText": "Thanks Martin for the nice catch!\nI changed it, and now we get a better error message:\nsplice> select * from t1 as of time('12:11:11');\nERROR 0A000: Feature not implemented: SQLTime can not be used with time travel query.\nsplice> select * from t1 as of 3.4;\nERROR 0A000: Feature not implemented: SQLDecimal can not be used with time travel query.", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r504525263", "createdAt": "2020-10-14T09:13:41Z", "author": {"login": "hatyo"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyNDIxOA=="}, "originalCommit": {"oid": "e399e44abdd0cf400127a707d333da76decfbcc4"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODk5MQ==", "bodyText": "awesome!", "url": "https://github.com/splicemachine/spliceengine/pull/4229#discussion_r504528991", "createdAt": "2020-10-14T09:19:40Z", "author": {"login": "martinrupp"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/ScanOperation.java", "diffHunk": "@@ -450,4 +472,40 @@ public int getSplits() {\n     public FormatableBitSet getAccessedColumns() throws StandardException{\n         return scanInformation.getAccessedColumns();\n     }\n+\n+    private long mapToTxId(DataValueDescriptor dataValue) throws StandardException {\n+        if(dataValue instanceof SQLTimestamp) {\n+            Timestamp ts = ((SQLTimestamp)dataValue).getTimestamp(null);\n+            SpliceLogUtils.trace(LOG,\"time travel ts=%s\", ts.toString());\n+            try {\n+                return SIDriver.driver().getTxnStore().getTxnAt(ts.getTime());\n+            } catch (IOException e) {\n+                throw Exceptions.parseException(e);\n+            }\n+        }else if(dataValue instanceof SQLTinyint || dataValue instanceof SQLSmallint || dataValue instanceof SQLInteger || dataValue instanceof SQLLongint) {\n+            return dataValue.getLong();\n+        }else {\n+            throw StandardException.newException(SQLState.NOT_IMPLEMENTED); // fix me, we should read SqlTime as well.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyNDIxOA=="}, "originalCommit": {"oid": "e399e44abdd0cf400127a707d333da76decfbcc4"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2948, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}