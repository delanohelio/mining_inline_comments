{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NjYzNDk3", "number": 4206, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNlQyMjowMjowN1rOGHD_uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNlQyMjowMjowN1rOGHD_uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDEwMDU4NjgwOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddMultiDatabaseSupport.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNlQyMjowMjowN1rOJoQiNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0xMFQxMzoxODo1MlrOJrGeUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjE5MzcxNw==", "bodyText": "This is not necessary because it is always executed(SpliceCatalogUpgradeScripts.runUpgrades) for database upgrade", "url": "https://github.com/splicemachine/spliceengine/pull/4206#discussion_r646193717", "createdAt": "2021-06-06T22:02:07Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddMultiDatabaseSupport.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.splicemachine.derby.impl.sql.catalog.upgrade;\n+\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.store.access.TransactionController;\n+import com.splicemachine.derby.impl.sql.catalog.SpliceDataDictionary;\n+import com.splicemachine.utils.SpliceLogUtils;\n+\n+import java.util.Properties;\n+\n+public class UpgradeScriptToAddMultiDatabaseSupport extends UpgradeScriptBase {\n+    public UpgradeScriptToAddMultiDatabaseSupport(SpliceDataDictionary sdd, TransactionController tc, Properties startParams) {\n+        super(sdd, tc);\n+        this.startParams = startParams;\n+    }\n+\n+    private Properties startParams;\n+\n+    @Override\n+    protected void upgradeSystemTables() throws StandardException {\n+        sdd.createSysDatabasesTableAndAddDatabaseIdColumnsToSysTables(tc, startParams);\n+\n+        // Refresh views\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSCHEMASVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSALLROLES\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSTABLESVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSCOLPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSROUTINEPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSCHEMAPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSTABLEPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSIBM\", \"SYSCOLUMNS\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSIBM\", \"SYSTABLES\");\n+\n+        // Add new views\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSEQUENCESVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSDATABASESVIEW\");\n+\n+        sdd.updateMetadataSPSes(tc);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a03bf7ec678bdb89b42094af620b7eace56dfa8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTE3NDYxMQ==", "bodyText": "Done", "url": "https://github.com/splicemachine/spliceengine/pull/4206#discussion_r649174611", "createdAt": "2021-06-10T13:18:52Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeScriptToAddMultiDatabaseSupport.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2012 - 2020 Splice Machine, Inc.\n+ *\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.splicemachine.derby.impl.sql.catalog.upgrade;\n+\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.store.access.TransactionController;\n+import com.splicemachine.derby.impl.sql.catalog.SpliceDataDictionary;\n+import com.splicemachine.utils.SpliceLogUtils;\n+\n+import java.util.Properties;\n+\n+public class UpgradeScriptToAddMultiDatabaseSupport extends UpgradeScriptBase {\n+    public UpgradeScriptToAddMultiDatabaseSupport(SpliceDataDictionary sdd, TransactionController tc, Properties startParams) {\n+        super(sdd, tc);\n+        this.startParams = startParams;\n+    }\n+\n+    private Properties startParams;\n+\n+    @Override\n+    protected void upgradeSystemTables() throws StandardException {\n+        sdd.createSysDatabasesTableAndAddDatabaseIdColumnsToSysTables(tc, startParams);\n+\n+        // Refresh views\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSCHEMASVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSALLROLES\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSTABLESVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSCOLPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSROUTINEPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSCHEMAPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSTABLEPERMSVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSIBM\", \"SYSCOLUMNS\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSIBM\", \"SYSTABLES\");\n+\n+        // Add new views\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSSEQUENCESVIEW\");\n+        sdd.createOrUpdateSystemView(tc, \"SYSVW\", \"SYSDATABASESVIEW\");\n+\n+        sdd.updateMetadataSPSes(tc);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjE5MzcxNw=="}, "originalCommit": {"oid": "7a03bf7ec678bdb89b42094af620b7eace56dfa8"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2936, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}