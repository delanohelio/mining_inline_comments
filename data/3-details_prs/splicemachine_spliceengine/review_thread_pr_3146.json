{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTE5Nzcy", "number": 3146, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyOTo0NVrODZUO3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo0NTo1NlrODZWXZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODcyNDc2OnYy", "diffSide": "RIGHT", "path": "splice_machine/src/main/java/com/splicemachine/tools/StringConcat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyOTo0NVrOFfoocg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyOTo0NVrOFfoocg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNTg5MA==", "bodyText": "Minor issue - license header is missing", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368715890", "createdAt": "2020-01-20T20:29:45Z", "author": {"login": "jyuanca"}, "path": "splice_machine/src/main/java/com/splicemachine/tools/StringConcat.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.splicemachine.tools;\n+\n+import com.splicemachine.db.agg.Aggregator;\n+import com.splicemachine.db.iapi.error.StandardException;\n+\n+public class StringConcat implements Aggregator<String, String, StringConcat> {\n+    private StringBuilder agg;\n+\n+    public StringConcat() {\n+    }\n+\n+    @Override\n+    public void init() {\n+        agg = new StringBuilder();\n+    }\n+\n+    @Override\n+    public void accumulate(String value) throws StandardException {\n+        agg.append(value);\n+    }\n+\n+    @Override\n+    public void merge(StringConcat otherAggregator) {\n+        agg.append(otherAggregator.agg);\n+    }\n+\n+    @Override\n+    public String terminate() {\n+        return agg.toString();\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA1NjE5OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDoyODoxMlrOFfrt0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDoyODoxMlrOFfrt0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2NjQxNg==", "bodyText": "[minor] replace tabs with spaces", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368766416", "createdAt": "2020-01-21T00:28:12Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "diffHunk": "@@ -180,9 +185,15 @@ public ExecAggregator newAggregator()\n \t */\n \tpublic void writeExternal(ObjectOutput out) throws IOException\n \t{\n-\t\tout.writeInt( FIRST_VERSION );\n-        \n-        out.writeObject( _aggregator );\n+\t\tout.writeInt( SECOND_VERSION );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA1NjI4OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDoyODoxOVrOFfrt3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDoyODoxOVrOFfrt3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2NjQzMQ==", "bodyText": "[minor] replace tabs with spaces", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368766431", "createdAt": "2020-01-21T00:28:19Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "diffHunk": "@@ -63,6 +67,7 @@\n     ///////////////////////////////////////////////////////////////////////////////////\n \n     private static final int FIRST_VERSION = 0;\n+\tprivate static final int SECOND_VERSION = 1; // use java serialization for _aggregator since it will not be registered in our Kryo registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA1ODE0OnYy", "diffSide": "RIGHT", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDozMDozNlrOFfrvGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMTozMzo1NVrOFf27TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2Njc0Nw==", "bodyText": "[minor] replace tabs with spaces", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368766747", "createdAt": "2020-01-21T00:30:36Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "diffHunk": "@@ -195,9 +206,18 @@ public void writeExternal(ObjectOutput out) throws IOException\n \tpublic void readExternal(ObjectInput in) \n \t\tthrows IOException, ClassNotFoundException\n \t{\n-\t\tin.readInt();   // unused until we have a second rev of this class\n-\n-        _aggregator = (Aggregator) in.readObject();\n+\t\tint v = in.readInt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk1MDA5Mg==", "bodyText": "This file has mixed indenting, both options would look bad. I'd rather fix this with a repository wide reformatting effort.", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368950092", "createdAt": "2020-01-21T11:33:55Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/execute/UserDefinedAggregator.java", "diffHunk": "@@ -195,9 +206,18 @@ public void writeExternal(ObjectOutput out) throws IOException\n \tpublic void readExternal(ObjectInput in) \n \t\tthrows IOException, ClassNotFoundException\n \t{\n-\t\tin.readInt();   // unused until we have a second rev of this class\n-\n-        _aggregator = (Aggregator) in.readObject();\n+\t\tint v = in.readInt();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2Njc0Nw=="}, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA3NDMxOnYy", "diffSide": "RIGHT", "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/SpliceUDTIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo0NTo1NlrOFfr4Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo0NTo1NlrOFfr4Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2OTEyMw==", "bodyText": "assertThat(res, allOf(containsString(\"a\"), containsString(\"b\"), containsString(\"c\"), containsString(\"d\")))\nwould bring a better error message.", "url": "https://github.com/splicemachine/spliceengine/pull/3146#discussion_r368769123", "createdAt": "2020-01-21T00:45:56Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/SpliceUDTIT.java", "diffHunk": "@@ -202,4 +205,23 @@ public void testConnection() throws Exception {\n         Assert.assertNotNull(result);\n         Assert.assertTrue(result, result.compareTo(\"Got an internal connection\")==0);\n     }\n+\n+\n+    @Test\n+    public void testSparkUDA() throws Exception {\n+        methodWatcher.execute(\"create derby aggregate string_concat for varchar(2000) external name 'com.splicemachine.tools.StringConcat'\");\n+\n+        methodWatcher.execute(\"create table strings (v varchar(20))\");\n+        methodWatcher.execute(\"insert into strings values 'a','b','c','d'\");\n+\n+        for (boolean useSpark : Arrays.asList(true, false)) {\n+            ResultSet rs = methodWatcher.executeQuery(\"select string_concat(v) from strings --splice-properties useSpark=\"+useSpark);\n+            Assert.assertTrue(rs.next());\n+            String res = rs.getString(1);\n+            Assert.assertTrue(res.contains(\"a\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dc17a709e4ccf35911e0ceabc078696b78ef82f"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3391, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}