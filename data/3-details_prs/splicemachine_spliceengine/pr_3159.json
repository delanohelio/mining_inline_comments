{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTY1OTUw", "number": 3159, "title": "DB-9048 Support empty and cast default values", "bodyText": "", "createdAt": "2020-01-27T15:51:40Z", "url": "https://github.com/splicemachine/spliceengine/pull/3159", "merged": true, "mergeCommit": {"oid": "bcbf6e98bbe3040f1e818f43a63934cbc2e751e2"}, "closed": true, "closedAt": "2020-01-30T04:15:03Z", "author": {"login": "arnaud-splice"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9g2gAAH2gAyMzY3NTY1OTUwOjQ0NTIwMmNkOTRjMTA5NzA5YzUzMzE2M2ZlZjAzMWM1YWNlNDNmZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_HIx6gFqTM1MDE2NDQ5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "445202cd94c109709c533163fef031c5ace43ff2", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/445202cd94c109709c533163fef031c5ace43ff2", "committedDate": "2020-01-24T15:40:48Z", "message": "DB-9048 Support Blob default values via cast(x as blob)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/5c977becb355bfb051f55590d2414b1d9cd9b4ef", "committedDate": "2020-01-27T15:12:49Z", "message": "DB-9048 Support empty default syntax in create table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDM2Mzc2", "url": "https://github.com/splicemachine/spliceengine/pull/3159#pullrequestreview-349036376", "createdAt": "2020-01-27T23:02:31Z", "commit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzowMjozMVrOFiUeCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzowODoxOFrOFiUlwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMTI3NQ==", "bodyText": "Please correct the comments that refer to UntypedNullConstantNode.", "url": "https://github.com/splicemachine/spliceengine/pull/3159#discussion_r371531275", "createdAt": "2020-01-27T23:02:31Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/EmptyDefaultConstantNode.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Some parts of this source code are based on Apache Derby, and the following notices apply to\n+ * Apache Derby:\n+ *\n+ * Apache Derby is a subproject of the Apache DB project, and is licensed under\n+ * the Apache License, Version 2.0 (the \"License\"); you may not use these files\n+ * except in compliance with the License. You may obtain a copy of the License at:\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * Splice Machine, Inc. has modified the Apache Derby code in this file.\n+ *\n+ * All such Splice Machine modifications are Copyright 2012 - 2020 Splice Machine, Inc.,\n+ * and are licensed to you under the GNU Affero General Public License.\n+ */\n+\n+package com.splicemachine.db.impl.sql.compile;\n+\n+import com.splicemachine.db.iapi.services.compiler.MethodBuilder;\n+import com.splicemachine.db.iapi.services.sanity.SanityManager;\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.types.DataValueDescriptor;\n+import com.splicemachine.db.iapi.types.DataTypeDescriptor;\n+\n+import java.util.List;\n+import java.util.Vector;\n+/**\n+ * An UntypedNullConstantNode represents a SQL NULL before it has", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMTQ0OA==", "bodyText": "Correct comment referring to UntypedNullConstantNode.", "url": "https://github.com/splicemachine/spliceengine/pull/3159#discussion_r371531448", "createdAt": "2020-01-27T23:03:03Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/EmptyDefaultConstantNode.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Some parts of this source code are based on Apache Derby, and the following notices apply to\n+ * Apache Derby:\n+ *\n+ * Apache Derby is a subproject of the Apache DB project, and is licensed under\n+ * the Apache License, Version 2.0 (the \"License\"); you may not use these files\n+ * except in compliance with the License. You may obtain a copy of the License at:\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * Splice Machine, Inc. has modified the Apache Derby code in this file.\n+ *\n+ * All such Splice Machine modifications are Copyright 2012 - 2020 Splice Machine, Inc.,\n+ * and are licensed to you under the GNU Affero General Public License.\n+ */\n+\n+package com.splicemachine.db.impl.sql.compile;\n+\n+import com.splicemachine.db.iapi.services.compiler.MethodBuilder;\n+import com.splicemachine.db.iapi.services.sanity.SanityManager;\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.types.DataValueDescriptor;\n+import com.splicemachine.db.iapi.types.DataTypeDescriptor;\n+\n+import java.util.List;\n+import java.util.Vector;\n+/**\n+ * An UntypedNullConstantNode represents a SQL NULL before it has\n+ * been bound.  The bind() operation will replace the UntypedNullConstantNodes\n+ * with typed ConstantNodes.\n+ */\n+\n+public final class EmptyDefaultConstantNode extends ConstantNode\n+{\n+    /**\n+     * Constructor for an UntypedNullConstantNode.  Untyped constants", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMjY2OQ==", "bodyText": "Same here, correct the error messages.", "url": "https://github.com/splicemachine/spliceengine/pull/3159#discussion_r371532669", "createdAt": "2020-01-27T23:06:34Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/EmptyDefaultConstantNode.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Some parts of this source code are based on Apache Derby, and the following notices apply to\n+ * Apache Derby:\n+ *\n+ * Apache Derby is a subproject of the Apache DB project, and is licensed under\n+ * the Apache License, Version 2.0 (the \"License\"); you may not use these files\n+ * except in compliance with the License. You may obtain a copy of the License at:\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * Splice Machine, Inc. has modified the Apache Derby code in this file.\n+ *\n+ * All such Splice Machine modifications are Copyright 2012 - 2020 Splice Machine, Inc.,\n+ * and are licensed to you under the GNU Affero General Public License.\n+ */\n+\n+package com.splicemachine.db.impl.sql.compile;\n+\n+import com.splicemachine.db.iapi.services.compiler.MethodBuilder;\n+import com.splicemachine.db.iapi.services.sanity.SanityManager;\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.types.DataValueDescriptor;\n+import com.splicemachine.db.iapi.types.DataTypeDescriptor;\n+\n+import java.util.List;\n+import java.util.Vector;\n+/**\n+ * An UntypedNullConstantNode represents a SQL NULL before it has\n+ * been bound.  The bind() operation will replace the UntypedNullConstantNodes\n+ * with typed ConstantNodes.\n+ */\n+\n+public final class EmptyDefaultConstantNode extends ConstantNode\n+{\n+    /**\n+     * Constructor for an UntypedNullConstantNode.  Untyped constants\n+     * contain no state (not too surprising).\n+     */\n+\n+    public EmptyDefaultConstantNode()\n+    {\n+        super();\n+    }\n+\n+    /**\n+     * Should never be called for UntypedNullConstantNode because\n+     * we shouldn't make it to generate\n+     *\n+     * @param acb\tThe ExpressionClassBuilder for the class being built\n+     * @param mb\tThe method the expression will go into\n+     */\n+    void generateConstant(ExpressionClassBuilder acb, MethodBuilder mb)\n+    {\n+        if (SanityManager.DEBUG)\n+        {\n+            SanityManager.THROWASSERT(\"generateConstant() not expected to be called for UntypedNullConstantNode because we have implemented our own generateExpression().\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMzI0OA==", "bodyText": "This comment is for UntypedNullConstantNode, please remove.", "url": "https://github.com/splicemachine/spliceengine/pull/3159#discussion_r371533248", "createdAt": "2020-01-27T23:08:18Z", "author": {"login": "yxia92"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/EmptyDefaultConstantNode.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of Splice Machine.\n+ * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the\n+ * GNU Affero General Public License as published by the Free Software Foundation, either\n+ * version 3, or (at your option) any later version.\n+ * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ * See the GNU Affero General Public License for more details.\n+ * You should have received a copy of the GNU Affero General Public License along with Splice Machine.\n+ * If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Some parts of this source code are based on Apache Derby, and the following notices apply to\n+ * Apache Derby:\n+ *\n+ * Apache Derby is a subproject of the Apache DB project, and is licensed under\n+ * the Apache License, Version 2.0 (the \"License\"); you may not use these files\n+ * except in compliance with the License. You may obtain a copy of the License at:\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * Splice Machine, Inc. has modified the Apache Derby code in this file.\n+ *\n+ * All such Splice Machine modifications are Copyright 2012 - 2020 Splice Machine, Inc.,\n+ * and are licensed to you under the GNU Affero General Public License.\n+ */\n+\n+package com.splicemachine.db.impl.sql.compile;\n+\n+import com.splicemachine.db.iapi.services.compiler.MethodBuilder;\n+import com.splicemachine.db.iapi.services.sanity.SanityManager;\n+import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.iapi.types.DataValueDescriptor;\n+import com.splicemachine.db.iapi.types.DataTypeDescriptor;\n+\n+import java.util.List;\n+import java.util.Vector;\n+/**\n+ * An UntypedNullConstantNode represents a SQL NULL before it has\n+ * been bound.  The bind() operation will replace the UntypedNullConstantNodes\n+ * with typed ConstantNodes.\n+ */\n+\n+public final class EmptyDefaultConstantNode extends ConstantNode\n+{\n+    /**\n+     * Constructor for an UntypedNullConstantNode.  Untyped constants\n+     * contain no state (not too surprising).\n+     */\n+\n+    public EmptyDefaultConstantNode()\n+    {\n+        super();\n+    }\n+\n+    /**\n+     * Should never be called for UntypedNullConstantNode because\n+     * we shouldn't make it to generate\n+     *\n+     * @param acb\tThe ExpressionClassBuilder for the class being built\n+     * @param mb\tThe method the expression will go into\n+     */\n+    void generateConstant(ExpressionClassBuilder acb, MethodBuilder mb)\n+    {\n+        if (SanityManager.DEBUG)\n+        {\n+            SanityManager.THROWASSERT(\"generateConstant() not expected to be called for UntypedNullConstantNode because we have implemented our own generateExpression().\");\n+        }\n+    }\n+\n+    /**\n+     * Translate a Default node into a default value, given a type descriptor.\n+     *\n+     * @param typeDescriptor\tA description of the required data type.\n+     *\n+     */\n+    public DataValueDescriptor convertDefaultNode(DataTypeDescriptor typeDescriptor)\n+            throws StandardException\n+    {\n+        /*\n+         ** The default value is null, so set nullability to TRUE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b1d9a02d97276b34ca89a18b9ea42a453ac05c1", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/0b1d9a02d97276b34ca89a18b9ea42a453ac05c1", "committedDate": "2020-01-28T12:48:12Z", "message": "DB-9048 Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzQ3MTU4", "url": "https://github.com/splicemachine/spliceengine/pull/3159#pullrequestreview-349347158", "createdAt": "2020-01-28T12:48:44Z", "commit": {"oid": "5c977becb355bfb051f55590d2414b1d9cd9b4ef"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzkwNjUy", "url": "https://github.com/splicemachine/spliceengine/pull/3159#pullrequestreview-349790652", "createdAt": "2020-01-29T00:07:41Z", "commit": {"oid": "0b1d9a02d97276b34ca89a18b9ea42a453ac05c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODA3MDI1", "url": "https://github.com/splicemachine/spliceengine/pull/3159#pullrequestreview-349807025", "createdAt": "2020-01-29T01:01:47Z", "commit": {"oid": "0b1d9a02d97276b34ca89a18b9ea42a453ac05c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTY0NDk4", "url": "https://github.com/splicemachine/spliceengine/pull/3159#pullrequestreview-350164498", "createdAt": "2020-01-29T14:51:05Z", "commit": {"oid": "0b1d9a02d97276b34ca89a18b9ea42a453ac05c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 949, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}