{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjExMTU1", "number": 4808, "title": "DB-10819 Fix inconsistent results with substr between spark and native spark ", "bodyText": "", "createdAt": "2020-12-08T17:34:31Z", "url": "https://github.com/splicemachine/spliceengine/pull/4808", "merged": true, "mergeCommit": {"oid": "9371b4920a37e502c35b12e32686a4a47bb06b8f"}, "closed": true, "closedAt": "2020-12-10T03:59:21Z", "author": {"login": "arnaud-splice"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkNqC8AH2gAyNTM0NjExMTU1OmE1NmJlMDM0NTY2NjliZTQyYWVhYThmNTE1MzdjOTgyOGVmOTMwMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkqppugFqTU0ODc4OTI1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a56be03456669be42aeaa8f51537c9828ef93019", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/a56be03456669be42aeaa8f51537c9828ef93019", "committedDate": "2020-12-08T17:33:12Z", "message": "DB-10819 Fix inconsistent results with substr between spark and native spark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/1f6f5957f6fa127610e09803273551b9969c2c07", "committedDate": "2020-12-08T18:05:41Z", "message": "DB-10819 Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTgyMTI2", "url": "https://github.com/splicemachine/spliceengine/pull/4808#pullrequestreview-547582126", "createdAt": "2020-12-08T19:58:03Z", "commit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOTo1ODowNFrOIBzmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOTo1ODowNFrOIBzmQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc2NDg2Nw==", "bodyText": "Is there a comma missing here in the parameter list?", "url": "https://github.com/splicemachine/spliceengine/pull/4808#discussion_r538764867", "createdAt": "2020-12-08T19:58:04Z", "author": {"login": "msirek"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java", "diffHunk": "@@ -679,23 +679,26 @@ else if (vars.buildExpressionTree)\n                 }\n                 else if (operand.getClass() == TernaryOperatorNode.class) {\n                     vars.relationalOpDepth.increment();\n-                    if (top.getOperator().equals(\"LOCATE\") ||\n-                        top.getOperator().equals(\"replace\") ||\n-                        (top.getOperator().equals(\"substring\") && top.getRightOperand() != null)) {\n-\n+                    if (top.getOperator().equals(\"LOCATE\") || top.getOperator().equals(\"replace\")) {\n                         vars.relationalOpDepth.decrement();\n                         String retval = format(\"%s(%s, %s, %s) \", top.getOperator(), opToString2(top.getReceiver(), vars),\n                                 opToString2(top.getLeftOperand(), vars), opToString2(top.getRightOperand(), vars));\n                         vars.relationalOpDepth.decrement();\n                         return retval;\n                     } else if (top.getOperator().equals(\"substring\")) {\n-                        assert top.getRightOperand() == null;\n                         vars.relationalOpDepth.decrement();\n-                        String retval = format(\"%s(%s, %s) \", top.getOperator(), opToString2(top.getReceiver(), vars),\n-                                opToString2(top.getLeftOperand(), vars));\n+                        String retval = format(\"%s(%s, %s %s)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDM4Njkw", "url": "https://github.com/splicemachine/spliceengine/pull/4808#pullrequestreview-548038690", "createdAt": "2020-12-09T10:24:45Z", "commit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNDo0NVrOICNRlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNToyMlrOICNTRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NTU1Nw==", "bodyText": "This logic is available as firstRowContainsQuery() in the same file. But it's just a minor issue and should not prevent the change from being merged.", "url": "https://github.com/splicemachine/spliceengine/pull/4808#discussion_r539185557", "createdAt": "2020-12-09T10:24:45Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceUnitTest.java", "diffHunk": "@@ -1195,6 +1195,21 @@ protected void checkBooleanExpression(String input, boolean output, TestConnecti\n             rs.next();\n             Assert.assertEquals(output, rs.getBoolean(1));\n         }\n+    }\n+\n+    protected void checkExpressionType(String input, String expectedType, TestConnection conn) throws SQLException {\n+        String sql = format(\"select typeof(%s)\", input);\n+        try(ResultSet rs = conn.query(sql)) {\n+            rs.next();\n+            Assert.assertEquals(expectedType, rs.getString(1));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NTk4OQ==", "bodyText": "Ditto.", "url": "https://github.com/splicemachine/spliceengine/pull/4808#discussion_r539185989", "createdAt": "2020-12-09T10:25:22Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/test/java/com/splicemachine/derby/test/framework/SpliceUnitTest.java", "diffHunk": "@@ -1195,6 +1195,21 @@ protected void checkBooleanExpression(String input, boolean output, TestConnecti\n             rs.next();\n             Assert.assertEquals(output, rs.getBoolean(1));\n         }\n+    }\n+\n+    protected void checkExpressionType(String input, String expectedType, TestConnection conn) throws SQLException {\n+        String sql = format(\"select typeof(%s)\", input);\n+        try(ResultSet rs = conn.query(sql)) {\n+            rs.next();\n+            Assert.assertEquals(expectedType, rs.getString(1));\n+        }\n+    }\n \n+    protected void checkStringExpression(String input, String expectedOutput, TestConnection conn) throws SQLException {\n+        String sql = format(\"select %s\", input);\n+        try(ResultSet rs = conn.query(sql)) {\n+            rs.next();\n+            Assert.assertEquals(expectedOutput, rs.getString(1));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDQ5NjI1", "url": "https://github.com/splicemachine/spliceengine/pull/4808#pullrequestreview-548049625", "createdAt": "2020-12-09T10:37:57Z", "commit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Nzg5MjU3", "url": "https://github.com/splicemachine/spliceengine/pull/4808#pullrequestreview-548789257", "createdAt": "2020-12-10T03:20:01Z", "commit": {"oid": "1f6f5957f6fa127610e09803273551b9969c2c07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1000, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}