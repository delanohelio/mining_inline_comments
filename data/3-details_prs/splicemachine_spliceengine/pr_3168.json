{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzkzOTc2", "number": 3168, "title": "SPLICE-2379 SparkExplain Statement", "bodyText": "Add a SPARKEXPLAIN statement, similar to EXPLAIN, which prints the query execution plan, but in the case of SPARKEXPLAIN the Splice operations which are executed natively in Spark are replaced with text describing the Spark execution plan.  For example:\nsparkexplain select SUM(a1) from t1 inner join t2 on b1=b2;\nNative Spark Execution Plan\n----------------------------\n-> NativeSparkDataSet\n     *HashAggregate(keys=[], functions=[sum(cast(c1#144 as bigint))], output=[c0#179L])\n     +- Exchange SinglePartition\n        +- *HashAggregate(keys=[], functions=[partial_sum(cast(c1#144 as bigint))], output=[sum#183L])\n           +- *Project [c0#94 AS c1#144]\n              +- *BroadcastHashJoin [c1#95], [c0#105], Inner, BuildRight\n                 :- *Filter isnotnull(c1#95)\n                 :  +- Scan ExistingRDD[c0#94,c1#95]\n                       -> TableScan[T1(8064)](RS=0,totalCost=4.04, scannedRows=20,outputRows=20, outputHeapSize=60 B,partitions=1)\n                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)))\n                    +- *Filter isnotnull(c0#105)\n                       +- Scan ExistingRDD[c0#105]\n                          -> TableScan[T2(8080)](RS=2,totalCost=4.04, scannedRows=20,outputRows=20, outputHeapSize=108 B,partitions=1)\n\nUse the sqlshell.sh command \"maximumdisplaywidth 0;\" for best formatting.\nSplice operations start with \"->\", except the \"-> NativeSparkDataSet\" tag, which is just an indicator that a subtree of spark operations lies below it.\nNote that display of Spark operations underneath a Splice Subquery node is currently unsupported, but an abbreviated SubqueryNode subtree with one or two Splice operation child nodes is displayed as a place marker.  Compare the plan with normal EXPLAIN output to fill in the blanks.\nThere are 3 extra variations of SparkExplain which display different representations of the operation tree corresponding to different phases of planning and optimization in the Catalyst optimizer:\nsparkexplain_logical\nsparkexplain_analyzed\nsparkexplain_optimized\nUse these in the same manner as the regular sparkexplain statement, as in the example above.\nFor more details and example output, see SPLICE-2379.", "createdAt": "2020-01-29T06:28:29Z", "url": "https://github.com/splicemachine/spliceengine/pull/3168", "merged": true, "mergeCommit": {"oid": "c8f6890b4b91a8f1fba608282fc57881c792754f"}, "closed": true, "closedAt": "2020-02-26T13:20:07Z", "author": {"login": "msirek"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-_w5uAH2gAyMzY4MzkzOTc2OmFkOTkzOTc5N2E4Mzc5YThjODYwNTNmYmMxMzhiNjJkOTM4NGZhYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGQuxoAFqTM2MjE5MjkxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ad9939797a8379a8c86053fbc138b62d9384fab7", "committedDate": "2020-01-29T06:15:40Z", "message": "SPLICE-2379 SparkExplain Statement\n            Prefix a query with \"sparkexplain\" to display the query plan\n\t    including both native Spark operations and Splice operations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzU3Nzgx", "url": "https://github.com/splicemachine/spliceengine/pull/3168#pullrequestreview-350757781", "createdAt": "2020-01-30T11:35:18Z", "commit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTozNToxOFrOFjn9_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTo0NzoxNFrOFjoQfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5OTMyNg==", "bodyText": "Why is this change needed?", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372899326", "createdAt": "2020-01-30T11:35:18Z", "author": {"login": "dgomezferro"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/compile/CompilerContext.java", "diffHunk": "@@ -656,9 +656,9 @@\n \t */\n \tboolean isReferenced(SequenceDescriptor sd);\n \n-    void setDataSetProcessorType(DataSetProcessorType type);\n+\tvoid setDataSetProcessorType(DataSetProcessorType type, boolean setDSPTypeinLCC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDg0MA==", "bodyText": "You could return an empty dataset instead if this could be a problem, sampling might actually read the data from Splice anyway", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372900840", "createdAt": "2020-01-30T11:39:01Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/main/java/com/splicemachine/derby/stream/spark/SparkScanSetBuilder.java", "diffHunk": "@@ -102,6 +101,14 @@ else if (storedAs.equals(\"O\"))\n                 // The predicates have variant qualifiers (or we are reading ORC with our own reader), we couldn't push them down to the scan, process them here\n                 return locatedRows.filter(new TableScanPredicateFunction<>(operationContext));\n             }\n+            if (dsp.isSparkExplain()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDk1MA==", "bodyText": "I'd either remove these blocks or make them return an empty dataset", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372900950", "createdAt": "2020-01-30T11:39:17Z", "author": {"login": "dgomezferro"}, "path": "hbase_sql/src/main/java/com/splicemachine/derby/stream/spark/SparkScanSetBuilder.java", "diffHunk": "@@ -113,7 +120,19 @@ else if (storedAs.equals(\"O\"))\n         if (oneSplitPerRegion) {\n             conf.set(MRConstants.ONE_SPLIT_PER_REGION, \"true\");\n         }\n-        if (useSample) {\n+        if (dsp.isSparkExplain()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwNDA2Mw==", "bodyText": "Couldn't you use here dsp.getEmpty() ?", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372904063", "createdAt": "2020-01-30T11:47:14Z", "author": {"login": "dgomezferro"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/RowCountOperation.java", "diffHunk": "@@ -199,8 +202,31 @@ public void writeExternal(ObjectOutput out) throws IOException {\n         final long fetchLimit = getFetchLimit();\n         long offset = getTotalOffset();\n         OperationContext operationContext = dsp.createOperationContext(this);\n-        DataSet<ExecRow> sourceSet = source.getDataSet(dsp).map(new CloneFunction<>(operationContext));\n-        return sourceSet.zipWithIndex(operationContext).mapPartitions(new OffsetFunction<SpliceOperation, ExecRow>(operationContext, offset, fetchLimit));\n+        dsp.incrementOpDepth();\n+        DataSet<ExecRow> sourceDS = source.getDataSet(dsp);\n+        dsp.decrementOpDepth();\n+        DataSet<ExecRow> sourceSet = sourceDS.map(new CloneFunction<>(operationContext));\n+        if (dsp.isSparkExplain()) {\n+                        DataSet<ExecRow> ds = dsp.createDataSet(Iterators.transform(Collections.emptyIterator(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6e04baa2724dac95951a6b1dbabbc5c8a77661", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/6b6e04baa2724dac95951a6b1dbabbc5c8a77661", "committedDate": "2020-01-30T18:09:52Z", "message": "SPLICE-2379 Address review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6da9b3abd05efb8d51ab7b62029a1523718cfc09", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/6da9b3abd05efb8d51ab7b62029a1523718cfc09", "committedDate": "2020-02-07T06:20:29Z", "message": "Merge branch 'master' into SPLICE-2379"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00362df318bdf7097c45be4e2b4769b2d438d4bd", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/00362df318bdf7097c45be4e2b4769b2d438d4bd", "committedDate": "2020-02-07T06:32:22Z", "message": "SPLICE-2379 Fix compilation failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd075f68da5e39879e250acc466079135ab72e7", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7dd075f68da5e39879e250acc466079135ab72e7", "committedDate": "2020-02-20T12:11:04Z", "message": "Merge branch 'master' into SPLICE-2379"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49b509c7fdabf758ac753b094690dfc79dd36ab9", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/49b509c7fdabf758ac753b094690dfc79dd36ab9", "committedDate": "2020-02-20T19:04:35Z", "message": "SPLICE-2379 Fix tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4af637e2a989de0de19e66c4d77221edcc4e221e", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/4af637e2a989de0de19e66c4d77221edcc4e221e", "committedDate": "2020-02-20T18:59:38Z", "message": "SPLICE-2379 Fix tests"}, "afterCommit": {"oid": "49b509c7fdabf758ac753b094690dfc79dd36ab9", "author": {"user": {"login": "arnaud-splice", "name": "Arnaud Lacurie"}}, "url": "https://github.com/splicemachine/spliceengine/commit/49b509c7fdabf758ac753b094690dfc79dd36ab9", "committedDate": "2020-02-20T19:04:35Z", "message": "SPLICE-2379 Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTkyOTEw", "url": "https://github.com/splicemachine/spliceengine/pull/3168#pullrequestreview-362192910", "createdAt": "2020-02-20T19:59:12Z", "commit": {"oid": "49b509c7fdabf758ac753b094690dfc79dd36ab9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 956, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}