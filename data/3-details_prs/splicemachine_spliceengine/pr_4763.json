{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDg0MzI4", "number": 4763, "title": "DB-10918 DB-10940 Allow parameters on both sides of a binary comparison operator", "bodyText": "", "createdAt": "2020-12-02T15:12:04Z", "url": "https://github.com/splicemachine/spliceengine/pull/4763", "merged": true, "mergeCommit": {"oid": "a78d0111929e03c3b79a6d23ff7ea4523b022087"}, "closed": true, "closedAt": "2020-12-03T04:29:27Z", "author": {"login": "ascend1"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiPrIkgH2gAyNTMxMDg0MzI4OmNhZTczODI2MzQzMmFlNzQ0MGE2YmFlZjYyMjg1NmI2NGI5M2IwZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiaC0KAFqTU0MzQwMjQxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cae738263432ae7440a6baef622856b64b93b0e2", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/cae738263432ae7440a6baef622856b64b93b0e2", "committedDate": "2020-12-02T14:46:21Z", "message": "DB-10940 Fix parameterized constant restriction in prepared statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/162127727c1941f2285c4d146a685e8063f4a72a", "committedDate": "2020-12-02T14:48:35Z", "message": "DB-10918 Allow parameters on both sides of a binary comparison operator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDAyMjAx", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543002201", "createdAt": "2020-12-02T16:16:01Z", "commit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxNjowMVrOH9iznA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxNjowMVrOH9iznA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5NTQ1Mg==", "bodyText": "Change this to 'else if'", "url": "https://github.com/splicemachine/spliceengine/pull/4763#discussion_r534295452", "createdAt": "2020-12-02T16:16:01Z", "author": {"login": "msirek"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryComparisonOperatorNode.java", "diffHunk": "@@ -116,6 +116,24 @@ boolean getBetweenSelectivity() {\n         return betweenSelectivity;\n     }\n \n+    @Override\n+    protected void bindParameters() throws StandardException {\n+        if (leftOperand.requiresTypeFromContext()) {\n+            if (rightOperand.requiresTypeFromContext()) {\n+                // DB2 compatible behavior\n+                DataTypeDescriptor dtd = DataTypeDescriptor.getBuiltInDataTypeDescriptor(Types.VARCHAR, false, 254);\n+                leftOperand.setType(dtd);\n+                rightOperand.setType(dtd);\n+                return;\n+            } else {\n+                leftOperand.setType(rightOperand.getTypeServices());\n+            }\n+        }\n+\n+        if (rightOperand.requiresTypeFromContext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDAyNzU5", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543002759", "createdAt": "2020-12-02T16:16:35Z", "commit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxNjozNlrOH9i1nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxNjozNlrOH9i1nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5NTk2NQ==", "bodyText": "Change to 'else if'", "url": "https://github.com/splicemachine/spliceengine/pull/4763#discussion_r534295965", "createdAt": "2020-12-02T16:16:36Z", "author": {"login": "msirek"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/BinaryOperatorNode.java", "diffHunk": "@@ -322,6 +322,31 @@ public void printSubNodes(int depth)\n         }\n     }\n \n+    protected void bindParameters() throws StandardException {\n+        /* Is there a ? parameter on the left? */\n+        if (leftOperand.requiresTypeFromContext()) {\n+            /* Default Splice behavior:\n+             * It's an error if both operands are ? parameters.\n+             * This is overridden is some of the derived classes to be DB2 compatible.\n+             * DB2 doc on this:\n+             * https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0053561.html\n+             */\n+            if (rightOperand.requiresTypeFromContext()) {\n+                throw StandardException.newException(SQLState.LANG_BINARY_OPERANDS_BOTH_PARMS,\n+                        operator);\n+            }\n+\n+            /* Set the left operand to the type of right parameter. */\n+            leftOperand.setType(rightOperand.getTypeServices());\n+        }\n+\n+        /* Is there a ? parameter on the right? */\n+        if (rightOperand.requiresTypeFromContext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDA2MTM0", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543006134", "createdAt": "2020-12-02T16:19:55Z", "commit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxOTo1NVrOH9i_tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoxOTo1NVrOH9i_tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5ODU0OA==", "bodyText": "Since you are not using the collected nodes, it would be more efficient to have a mode where CollectNodesVisitor stops searching once the first node is found.  Maybe create a new constructor that accepts a boolean as a 2nd parameter.", "url": "https://github.com/splicemachine/spliceengine/pull/4763#discussion_r534298548", "createdAt": "2020-12-02T16:19:55Z", "author": {"login": "msirek"}, "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/ProjectRestrictNode.java", "diffHunk": "@@ -1719,6 +1721,10 @@ private void generateMinion(ExpressionClassBuilder acb,\n             // which is the static field that \"points\" to the userExprFun\n             // that evaluates the where clause.\n             acb.pushMethodReference(mb,userExprFun);\n+\n+            CollectNodesVisitor cnv = new CollectNodesVisitor(ParameterNode.class);\n+            constantRestriction.accept(cnv);\n+            mb.push(!cnv.getList().isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDQ0MjMy", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543044232", "createdAt": "2020-12-02T16:58:12Z", "commit": {"oid": "162127727c1941f2285c4d146a685e8063f4a72a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2278b3bb07f5112c4273f1956f073a8b4574bcd3", "author": {"user": {"login": "ascend1", "name": "Zhen Li"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2278b3bb07f5112c4273f1956f073a8b4574bcd3", "committedDate": "2020-12-02T17:19:57Z", "message": "DB-10918 Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTUxMDk2", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543151096", "createdAt": "2020-12-02T19:05:35Z", "commit": {"oid": "2278b3bb07f5112c4273f1956f073a8b4574bcd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDAyNDE2", "url": "https://github.com/splicemachine/spliceengine/pull/4763#pullrequestreview-543402416", "createdAt": "2020-12-03T02:51:16Z", "commit": {"oid": "2278b3bb07f5112c4273f1956f073a8b4574bcd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 993, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}