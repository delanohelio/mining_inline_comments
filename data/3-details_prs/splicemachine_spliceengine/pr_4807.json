{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MjI1MTg2", "number": 4807, "title": "DB-10579 Use truly nested transactions for triggers.", "bodyText": "This fixes trigger rollback cases where data is not fully rolled back upon an error, or when we exceed the 1 million row OLTP trigger limit, so roll back the work and start over from scratch on Spark.\nPreviously, nested triggers (one nested inside the other) shared the same parent transaction, that of the top-level DML statement.\nNow, each nested trigger will use the transaction of the containing trigger as the parent transaction of the child transaction it creates and uses for its own execution.\nThis allows us to wait until the very end of each operation to commit it, since child transactions can see rows written by their active parent transaction.  Previously we had to commit before firing triggers, which makes rollback problematic.", "createdAt": "2020-12-08T07:52:58Z", "url": "https://github.com/splicemachine/spliceengine/pull/4807", "merged": true, "mergeCommit": {"oid": "a8680fe549e9c899e84624d2d35902d0fc2d3c24"}, "closed": true, "closedAt": "2021-01-14T16:51:29Z", "author": {"login": "msirek"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkFYx5ABqjQwODM0MDQyMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvzWebgFqTU2NzQ2ODAzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "747a98864b00cdb501a5c25dfafc68e4895f19ea", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/747a98864b00cdb501a5c25dfafc68e4895f19ea", "committedDate": "2020-12-08T07:38:09Z", "message": "DB-10579 Use truly nested transactions for triggers."}, "afterCommit": {"oid": "da1c1caa4fd730fe7d1dbafc29ee305b0691fbb4", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/da1c1caa4fd730fe7d1dbafc29ee305b0691fbb4", "committedDate": "2020-12-08T07:54:33Z", "message": "DB-10579 Use truly nested transactions for triggers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2becd2604b9a227fa25f2d6a3711bf816b6b0b", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2f2becd2604b9a227fa25f2d6a3711bf816b6b0b", "committedDate": "2020-12-08T21:45:16Z", "message": "DB-10579 Use truly nested transactions for triggers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a0f7816631550427223453c183fbcecc39c5b26", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/2a0f7816631550427223453c183fbcecc39c5b26", "committedDate": "2020-12-08T21:45:25Z", "message": "DB-10579 Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f844a9368531c311ba3c7fc07ff329ca61a3333", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7f844a9368531c311ba3c7fc07ff329ca61a3333", "committedDate": "2020-12-08T21:45:36Z", "message": "DB-10579 Fix Spotbugs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9f7050be2633dd21fc87cbbf041bdc9f385dd62", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/b9f7050be2633dd21fc87cbbf041bdc9f385dd62", "committedDate": "2020-12-08T15:02:56Z", "message": "DB-10579 Fix Spotbugs"}, "afterCommit": {"oid": "7f844a9368531c311ba3c7fc07ff329ca61a3333", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/7f844a9368531c311ba3c7fc07ff329ca61a3333", "committedDate": "2020-12-08T21:45:36Z", "message": "DB-10579 Fix Spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/211edba5647ee24ab8b38a66331ff3923e7b0ee6", "committedDate": "2020-12-09T03:35:16Z", "message": "DB-10579 Fix leak checks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MTk5Njcx", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-564199671", "createdAt": "2021-01-08T11:44:07Z", "commit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDcyMjcx", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-564472271", "createdAt": "2021-01-08T18:06:08Z", "commit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxODowNjowOFrOIQb-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxODoyMjo1MVrOIQcfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEwNjYwMQ==", "bodyText": "Indentation is weird in this newly added block. Comment lines start to shift to the right and method parameters are not aligned.", "url": "https://github.com/splicemachine/spliceengine/pull/4807#discussion_r554106601", "createdAt": "2021-01-08T18:06:08Z", "author": {"login": "ascend1"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java", "diffHunk": "@@ -804,6 +804,52 @@ TransactionController startNestedUserTransaction(\n \t\t\tboolean flush_log_on_xact_end)\n         throws StandardException;\n \n+    /**\n+     * Get a nested internal transaction.\n+     * <p>\n+     * A nested internal transaction is used in place of a user transaction\n+\t * when a DML statement is executing its operation tree and a new writable\n+\t * child transaction needs to be created with the possibility that within", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDExMTgzMg==", "bodyText": "I don't quite understand this branch. It seems right in case of !needsfullyNestedTransaction. But if it's needsfullyNestedTransaction && lcc.hasNestedTransaction(), I assume that's because some other write operation enters the branch above earlier? In that case, what does the code mean in this branch? Does it start a child transaction in a different way and push into a different stack? But what happens if a third write operation comes?\nSorry this might be a stupid question. I haven't worked on transactions in Splice yet.", "url": "https://github.com/splicemachine/spliceengine/pull/4807#discussion_r554111832", "createdAt": "2021-01-08T18:16:31Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/DMLWriteOperation.java", "diffHunk": "@@ -179,15 +182,44 @@ protected TxnView getTransactionForWrite(DataSetProcessor dsp) throws StandardEx\n         try {\n             if (dsp.getType() == DataSetProcessor.Type.SPARK || isOlapServer())\n             {\n-                nestedTxn =\n+                WriteCursorConstantOperation constantAction=(WriteCursorConstantOperation)writeInfo.getConstantAction();\n+                TriggerInfo triggerInfo=constantAction.getTriggerInfo();\n+                boolean needsfullyNestedTransaction = triggerInfo != null;\n+\n+                LanguageConnectionContext lcc = getActivation().getLanguageConnectionContext();\n+                TransactionController transactionExecute = lcc.getTransactionExecute();\n+                if (needsfullyNestedTransaction && !lcc.hasNestedTransaction()) {\n+                    // Start a nested transaction controller that deals only with internal\n+                    // transactions, not savepoints.\n+                    transactionController =\n+                        transactionExecute.startNestedInternalTransaction(false,\n+                                            Bytes.toBytes(Long.toString(heapConglom)),\n+                                            false);\n+                    lcc.pushNestedTransaction(transactionController);\n+                    Transaction rawStoreXact = ((TransactionManager) transactionController).getRawStoreXact();\n+                    if (!(((BaseSpliceTransaction) rawStoreXact).getActiveStateTxn() instanceof Txn))\n+                        throw StandardException.newException(LANG_INTERNAL_ERROR,\n+                                        \"DMLWriteOperation cannot make child Txn out of TxnView.\");\n+                    Txn childTxn = (Txn) ((BaseSpliceTransaction) rawStoreXact).getActiveStateTxn();\n+                    nestedTxn = childTxn;\n+                    txn = (TxnView) childTxn;\n+                }\n+                else {\n+                    nestedTxn =\n                     SIDriver.driver().lifecycleManager().beginChildTransaction(\n-                            parent,\n-                            parent.getIsolationLevel(),\n-                            parent.isAdditive(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDExNDk5Mw==", "bodyText": "Also weird indentation here.", "url": "https://github.com/splicemachine/spliceengine/pull/4807#discussion_r554114993", "createdAt": "2021-01-08T18:22:51Z", "author": {"login": "ascend1"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionFactory.java", "diffHunk": "@@ -119,16 +119,27 @@ public Transaction startTransaction(HBaseStore hbaseStore,ContextManager context\n      * @param hbaseStore the hbase store relevant to the transaction\n      * @param contextMgr the context manager\n      * @param parentTxn  the parent transaction\n+\t * @param destinationTable The byte representation of the conglomerate\n+\t *                         number of the target table as a String.\n+\t * @param inMemoryTxn If true, attempt to begin the child transaction\n+\t *                    as an in-memory transaction.  This is only\n+\t *                    applicable to non-Spark queries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211edba5647ee24ab8b38a66331ff3923e7b0ee6"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced514bc49333b71b7095f44ed21b9953c365e89", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/ced514bc49333b71b7095f44ed21b9953c365e89", "committedDate": "2021-01-09T05:38:26Z", "message": "DB-10579 Address review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f563afcc0ee2e47b77d1e8ff9b404a2841d459", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/24f563afcc0ee2e47b77d1e8ff9b404a2841d459", "committedDate": "2021-01-09T05:42:54Z", "message": "Merge branch 'master' into DB-10579"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82", "author": {"user": {"login": "msirek", "name": "Mark Sirek"}}, "url": "https://github.com/splicemachine/spliceengine/commit/9ca55752f275d1930621155dc8b525125727fc82", "committedDate": "2021-01-09T15:19:10Z", "message": "DB-10579 Fix compilation error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2MTAzMTg0", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-566103184", "createdAt": "2021-01-12T09:53:53Z", "commit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwOTo1Mzo1M1rOIR51ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxMDoyOTozOVrOIR7Qog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY0NDI5OA==", "bodyText": "Awesome notes!", "url": "https://github.com/splicemachine/spliceengine/pull/4807#discussion_r555644298", "createdAt": "2021-01-12T09:53:53Z", "author": {"login": "arnaud-splice"}, "path": "db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java", "diffHunk": "@@ -799,15 +799,61 @@ long findContainerid(long conglomid)\n      *                                 works correctly if a commit can be lost\n      *                                 on system crash.\n      *\n-\t * @return The new nested user transaction.\n+     * @return The new nested user transaction.\n      *\n-\t * @exception  StandardException  Standard exception policy.\n+     * @exception  StandardException  Standard exception policy.\n      **/\n \tTransactionController startNestedUserTransaction(\n \t\t\tboolean readOnly,\n \t\t\tboolean flush_log_on_xact_end)\n         throws StandardException;\n \n+    /**\n+     * Get a nested internal transaction.\n+     * <p>\n+     * A nested internal transaction is used in place of a user transaction\n+     * when a DML statement is executing its operation tree and a new writable\n+     * child transaction needs to be created with the possibility that within\n+     * that statement another substatement may be run, requiring a nested transaction.\n+     *\n+     * @param readOnly True to begin a readOnly transaction, otherwise false.\n+     * @param destinationTable The byte representation of the conglomerate\n+     *                         number of the target table as a String.\n+     * @param inMemoryTxn If true, attempt to begin the child transaction\n+     *                    as an in-memory transaction.  This is only\n+     *                    applicable to non-Spark queries.\n+     * @return SpliceInternalTransactionManager object for tracking the latest child transaction.\n+     *\n+     * @notes The purpose of this method is to produce a new SpliceInternalTransactionManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY2NzYxOA==", "bodyText": "Why is !SpliceClient.isClient needed here? (And why wasn't it needed before this PR?)", "url": "https://github.com/splicemachine/spliceengine/pull/4807#discussion_r555667618", "createdAt": "2021-01-12T10:29:39Z", "author": {"login": "arnaud-splice"}, "path": "splice_machine/src/main/java/com/splicemachine/derby/stream/control/ControlDataSetWriter.java", "diffHunk": "@@ -64,26 +76,59 @@ public ControlDataSetWriter(ControlDataSet<ExecRow> dataSet, AbstractPipelineWri\n     @Override\n     public DataSet<ExecRow> write() throws StandardException{\n         SpliceOperation operation=operationContext.getOperation();\n-\n+        LanguageConnectionContext lcc =\n+            operationContext.getActivation().getLanguageConnectionContext();\n         try{\n-            boolean inMemoryTxn = !operation.isOlapServer();\n+            boolean inMemoryTxn = !operation.isOlapServer() && !SpliceClient.isClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2Nzk3MjY0", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-566797264", "createdAt": "2021-01-12T23:59:39Z", "commit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODg4Nzk3", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-566888797", "createdAt": "2021-01-13T04:41:55Z", "commit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NDY4MDMx", "url": "https://github.com/splicemachine/spliceengine/pull/4807#pullrequestreview-567468031", "createdAt": "2021-01-13T17:41:23Z", "commit": {"oid": "9ca55752f275d1930621155dc8b525125727fc82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 999, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}