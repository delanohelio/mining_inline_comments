{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2ODE5NjQy", "number": 3461, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMToxNTowNVrOD0gnjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMToxNTowNVrOD0gnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mzg2OTU3OnYy", "diffSide": "RIGHT", "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMToxNTowNVrOGJe9ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODoyMzo0NVrOGKEtRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ==", "bodyText": "There are currently four ITs putting the test files in this directory: ExternalTableIT, ExternalTablePartitionIT, ShowCreateTableIT, ViewsInSysibmIT. When these tests are running in parallel, would this call accidentally delete the files that are generated by other tests?  Could this be a possible source of intermittent test failure or wrong result?", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r412597699", "createdAt": "2020-04-22T01:15:05Z", "author": {"login": "yxia92"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -54,19 +54,13 @@\n     public static TestRule chain = RuleChain.outerRule(spliceClassWatcher)\n             .around(spliceSchemaWatcher);\n \n+    // this will cleanup all files created in the dir getExternalResourceDirectory()\n+    // (if you insert into external tables, you create files)\n     @BeforeClass\n     public static void cleanoutDirectory() {\n-        try {\n-            File file = new File(getExternalResourceDirectory());\n-            if (file.exists())\n-                FileUtils.deleteDirectory(new File(getExternalResourceDirectory()));\n-            file.mkdir();\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        SpliceUnitTest.clearDirectory( getExternalResourceDirectory() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b0dc79b22d46eef8bc5bc3fb80187e7022105da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxNTQ2OQ==", "bodyText": "yes, this is problematic. didn't knew they are running in parallel.\na better solution is to use Files.createTempDirectory, copy files/directories there, then delete after use, e.g. with java.lang.AutoCloseable. A small downside of this is that in the case of errors we don't see the failed files at the end, but i think this is acceptable. If people really need to investigate output files, one can uncomment the FileUtils.deleteDirectory line.", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r413215469", "createdAt": "2020-04-22T18:22:49Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -54,19 +54,13 @@\n     public static TestRule chain = RuleChain.outerRule(spliceClassWatcher)\n             .around(spliceSchemaWatcher);\n \n+    // this will cleanup all files created in the dir getExternalResourceDirectory()\n+    // (if you insert into external tables, you create files)\n     @BeforeClass\n     public static void cleanoutDirectory() {\n-        try {\n-            File file = new File(getExternalResourceDirectory());\n-            if (file.exists())\n-                FileUtils.deleteDirectory(new File(getExternalResourceDirectory()));\n-            file.mkdir();\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        SpliceUnitTest.clearDirectory( getExternalResourceDirectory() );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ=="}, "originalCommit": {"oid": "2b0dc79b22d46eef8bc5bc3fb80187e7022105da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxNjA3MA==", "bodyText": "will do another change", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r413216070", "createdAt": "2020-04-22T18:23:45Z", "author": {"login": "martinrupp"}, "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -54,19 +54,13 @@\n     public static TestRule chain = RuleChain.outerRule(spliceClassWatcher)\n             .around(spliceSchemaWatcher);\n \n+    // this will cleanup all files created in the dir getExternalResourceDirectory()\n+    // (if you insert into external tables, you create files)\n     @BeforeClass\n     public static void cleanoutDirectory() {\n-        try {\n-            File file = new File(getExternalResourceDirectory());\n-            if (file.exists())\n-                FileUtils.deleteDirectory(new File(getExternalResourceDirectory()));\n-            file.mkdir();\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        SpliceUnitTest.clearDirectory( getExternalResourceDirectory() );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ=="}, "originalCommit": {"oid": "2b0dc79b22d46eef8bc5bc3fb80187e7022105da"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3265, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}