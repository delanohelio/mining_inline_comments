{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzExNzM1", "number": 1392, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo1MzowNlrODuXUEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyOToyNVrODuYLSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTQzMDU5OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo1MzowNlrOGAUJGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo1MzowNlrOGAUJGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4MzE5NQ==", "bodyText": "Extra import needs to remove.", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r402983195", "createdAt": "2020-04-03T12:53:06Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -1,11 +1,14 @@\n package org.edx.mobile.util\n \n import android.text.TextUtils\n+import androidx.annotation.NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTQzMDkxOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo1MzoxMVrOGAUJTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo1MzoxMVrOGAUJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4MzI0Ng==", "bodyText": "Extra import needs to remove.", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r402983246", "createdAt": "2020-04-03T12:53:11Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -1,11 +1,14 @@\n package org.edx.mobile.util\n \n import android.text.TextUtils\n+import androidx.annotation.NonNull\n import com.google.firebase.remoteconfig.FirebaseRemoteConfig\n import com.google.gson.Gson\n import com.google.gson.reflect.TypeToken\n import org.edx.mobile.BuildConfig\n+import org.edx.mobile.core.IEdxEnvironment\n import java.util.*\n+import javax.inject.Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTUzNDMxOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDoyNVrOGAVJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDoyNVrOGAVJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5OTU4MQ==", "bodyText": "IMO: this would be the better code.\n        /**\n         * Utility method to check the Course Discovery status\n         *\n         * @param environment       Relevant configuration environment.\n         * @return true if Discovery enabled in configurations false else wise\n         */\n        fun isCourseDiscoveryEnabled(environment: IEdxEnvironment): Boolean {\n            return environment.config.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n        }", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r402999581", "createdAt": "2020-04-03T13:20:25Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -27,6 +30,56 @@ class ConfigUtil {\n             return false\n         }\n \n+        /**\n+         * Utility method to check the Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Discovery enabled in configurations false else wise\n+         */\n+        fun isDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTUzNjIyOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDo1MlrOGAVKWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDo1MlrOGAVKWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5OTg5Ng==", "bodyText": "IMO: this would be the better code.\n        /**\n         * Utility method to check the Degree Discovery status\n         *\n         * @param environment       Relevant configuration environment.\n         * @return true if Degree Discovery enabled in configurations false else wise\n         */\n        fun isDegreeDiscoveryEnabled(environment: IEdxEnvironment): Boolean {\n            return environment.config.discoveryConfig?.degreeDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n        }", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r402999896", "createdAt": "2020-04-03T13:20:52Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -27,6 +30,56 @@ class ConfigUtil {\n             return false\n         }\n \n+        /**\n+         * Utility method to check the Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Discovery enabled in configurations false else wise\n+         */\n+        fun isDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Degree Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Degree Discovery enabled in configurations false else wise\n+         */\n+        fun isDegreeDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.degreeDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU0NDU2OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMzowMVrOGAVPfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMzowMVrOGAVPfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMTIxNA==", "bodyText": "IMO: this would be the better code.\n        /**\n         * Utility method to check the Course Webview Discovery status\n         *\n         * @param environment       Relevant configuration environment.\n         * @return true if Course Webview Discovery enabled in configurations false else wise\n         */\n        fun isCourseWebviewDiscoveryEnabled(environment: IEdxEnvironment): Boolean {\n            return environment.config.discoveryConfig?.courseDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n        }", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r403001214", "createdAt": "2020-04-03T13:23:01Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -27,6 +30,56 @@ class ConfigUtil {\n             return false\n         }\n \n+        /**\n+         * Utility method to check the Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Discovery enabled in configurations false else wise\n+         */\n+        fun isDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Degree Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Degree Discovery enabled in configurations false else wise\n+         */\n+        fun isDegreeDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.degreeDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }\n+\n+        /**\n+         * Utility method to check the Webview Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Webview Discovery enabled in configurations false else wise\n+         */\n+        fun isWebviewDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU1Mzc5OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNTowN1rOGAVVNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNTowN1rOGAVVNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMjY3Ng==", "bodyText": "IMO: this would be the better code.\n        /**\n         * Utility method to check the Program Discovery status\n         *\n         * @param environment       Relevant configuration environment.\n         * @return true if Program Discovery enabled in configurations false else wise\n         */\n        fun isProgramDiscoveryEnabled(environment: IEdxEnvironment): Boolean {\n            return environment.config.discoveryConfig?.programDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n        }", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r403002676", "createdAt": "2020-04-03T13:25:07Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -27,6 +30,56 @@ class ConfigUtil {\n             return false\n         }\n \n+        /**\n+         * Utility method to check the Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Discovery enabled in configurations false else wise\n+         */\n+        fun isDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Degree Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Degree Discovery enabled in configurations false else wise\n+         */\n+        fun isDegreeDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.degreeDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }\n+\n+        /**\n+         * Utility method to check the Webview Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Webview Discovery enabled in configurations false else wise\n+         */\n+        fun isWebviewDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Program Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Program Discovery enabled in configurations false else wise\n+         */\n+        fun isProgramDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.programDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU1ODkzOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNjozM1rOGAVYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNjozM1rOGAVYnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzU1MQ==", "bodyText": "IMO: this would be the better code.\n        /**\n         * Utility method to check the Program Webview Discovery status\n         *\n         * @param environment       Relevant configuration environment.\n         * @return true if Program Webview Discovery enabled in configurations false else wise\n         */\n        fun isProgramWebviewDiscoveryEnabled(environment: IEdxEnvironment): Boolean {\n            return environment.config.discoveryConfig?.programDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n        }", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r403003551", "createdAt": "2020-04-03T13:26:33Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -27,6 +30,56 @@ class ConfigUtil {\n             return false\n         }\n \n+        /**\n+         * Utility method to check the Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Discovery enabled in configurations false else wise\n+         */\n+        fun isDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Degree Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Degree Discovery enabled in configurations false else wise\n+         */\n+        fun isDegreeDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.degreeDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }\n+\n+        /**\n+         * Utility method to check the Webview Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Webview Discovery enabled in configurations false else wise\n+         */\n+        fun isWebviewDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.courseDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n+        }\n+\n+        /**\n+         * Utility method to check the Program Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Program Discovery enabled in configurations false else wise\n+         */\n+        fun isProgramDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.programDiscoveryConfig?.isDiscoveryEnabled(environment) == true\n+        }\n+\n+        /**\n+         * Utility method to check the Program Webview Discovery status\n+         *\n+         * @param environment       Relevant configuration environment.\n+         * @return True if Program Webview Discovery enabled in configurations false else wise\n+         */\n+        fun isProgramWebviewDiscoveryEnabled(environment: IEdxEnvironment? = null): Boolean {\n+            return environment?.config?.discoveryConfig?.programDiscoveryConfig?.isWebviewDiscoveryEnabled == true\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU3MTkzOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyOToyNVrOGAVgWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyOToyNVrOGAVgWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTUzMQ==", "bodyText": "irrelevant code should not be changed, needs to revert this code.", "url": "https://github.com/edx/edx-app-android/pull/1392#discussion_r403005531", "createdAt": "2020-04-03T13:29:25Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -39,19 +92,19 @@ class ConfigUtil {\n             if (config.firebaseConfig.isEnabled) {\n                 val firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n                 firebaseRemoteConfig.fetchAndActivate().addOnCompleteListener {\n-                        val whiteListedReleasesJson = firebaseRemoteConfig\n-                                .getString(AppConstants.FirebaseConstants.REV_934_WHITELISTED_RELEASES)\n-                        if (!TextUtils.isEmpty(whiteListedReleasesJson)) {\n-                            val whiteListedReleases = Gson().fromJson<ArrayList<String>>(whiteListedReleasesJson,\n-                                    object : TypeToken<ArrayList<String>>() {}.type)\n-                            // Check current release is white listed in firebase remote config\n-                            for (release in whiteListedReleases) {\n-                                if (BuildConfig.VERSION_NAME.equals(release, ignoreCase = true)) {\n-                                    listener.onCourseUpgradeResult(true)\n-                                    return@addOnCompleteListener\n-                                }\n+                    val whiteListedReleasesJson = firebaseRemoteConfig\n+                            .getString(AppConstants.FirebaseConstants.REV_934_WHITELISTED_RELEASES)\n+                    if (!TextUtils.isEmpty(whiteListedReleasesJson)) {\n+                        val whiteListedReleases = Gson().fromJson<ArrayList<String>>(whiteListedReleasesJson,\n+                                object : TypeToken<ArrayList<String>>() {}.type)\n+                        // Check current release is white listed in firebase remote config\n+                        for (release in whiteListedReleases) {\n+                            if (BuildConfig.VERSION_NAME.equals(release, ignoreCase = true)) {\n+                                listener.onCourseUpgradeResult(true)\n+                                return@addOnCompleteListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a422807d56a821de803541cca40eb788b5c7086"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 511, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}