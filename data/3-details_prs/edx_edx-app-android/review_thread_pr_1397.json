{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDc3NzM3", "number": 1397, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDo0M1rOD3jFCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNDoyNTo1N1rOD4xwLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTczMDAzOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountActivity.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDo0M1rOGN25uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMDo0M1rOGN25uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NDE4NQ==", "bodyText": "newIntent should be in the first place as in java class.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417184185", "createdAt": "2020-04-29T09:30:43Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountActivity.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.edx.mobile.view\n+\n+import android.content.Context\n+import android.content.Intent\n+import androidx.fragment.app.Fragment\n+import org.edx.mobile.base.BaseSingleFragmentActivity\n+import org.edx.mobile.deeplink.ScreenDef\n+\n+class AccountActivity : BaseSingleFragmentActivity() {\n+\n+    override fun getFirstFragment(): Fragment {\n+        return AccountFragment.newInstance(intent.extras)\n+    }\n+\n+    companion object {\n+        @JvmStatic\n+        fun newIntent(activity: Context?, @ScreenDef screenName: String?): Intent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTczMjgwOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountActivity.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMToyN1rOGN27aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMToyN1rOGN27aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NDYxOQ==", "bodyText": "Need one new line as EOF.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417184619", "createdAt": "2020-04-29T09:31:27Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountActivity.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.edx.mobile.view\n+\n+import android.content.Context\n+import android.content.Intent\n+import androidx.fragment.app.Fragment\n+import org.edx.mobile.base.BaseSingleFragmentActivity\n+import org.edx.mobile.deeplink.ScreenDef\n+\n+class AccountActivity : BaseSingleFragmentActivity() {\n+\n+    override fun getFirstFragment(): Fragment {\n+        return AccountFragment.newInstance(intent.extras)\n+    }\n+\n+    companion object {\n+        @JvmStatic\n+        fun newIntent(activity: Context?, @ScreenDef screenName: String?): Intent {\n+            val intent = Intent(activity, AccountActivity::class.java)\n+            intent.putExtra(Router.EXTRA_SCREEN_NAME, screenName)\n+            intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT)\n+            return intent\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTc0MDk5OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMzo0OFrOGN3AdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMzo0OFrOGN3AdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTkwOQ==", "bodyText": "Use return binding.root instated.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417185909", "createdAt": "2020-04-29T09:33:48Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")\n+            }\n+        } else {\n+            binding.profileBtn.visibility = View.GONE\n+        }\n+        binding.settingsBtn.setOnClickListener { environment?.router?.showSettings(activity) }\n+        binding.feedbackBtn.setOnClickListener { environment?.router?.showFeedbackScreen(activity!!, getString(R.string.email_subject)) }\n+        binding.logoutBtn.setOnClickListener {\n+            environment?.router?.performManualLogout(activity,\n+                    environment.analyticsRegistry, environment.notificationDelegate)\n+        }\n+        binding.tvVersionNo.text = String.format(\"%s %s %s\", getString(R.string.label_version),\n+                BuildConfig.VERSION_NAME, environment?.config?.environmentDisplayName)\n+        return binding.getRoot()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTc1NjcxOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozODoyMlrOGN3KOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozODoyMlrOGN3KOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4ODQxMQ==", "bodyText": "Need one new line as EOF.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417188411", "createdAt": "2020-04-29T09:38:22Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")\n+            }\n+        } else {\n+            binding.profileBtn.visibility = View.GONE\n+        }\n+        binding.settingsBtn.setOnClickListener { environment?.router?.showSettings(activity) }\n+        binding.feedbackBtn.setOnClickListener { environment?.router?.showFeedbackScreen(activity!!, getString(R.string.email_subject)) }\n+        binding.logoutBtn.setOnClickListener {\n+            environment?.router?.performManualLogout(activity,\n+                    environment.analyticsRegistry, environment.notificationDelegate)\n+        }\n+        binding.tvVersionNo.text = String.format(\"%s %s %s\", getString(R.string.label_version),\n+                BuildConfig.VERSION_NAME, environment?.config?.environmentDisplayName)\n+        return binding.getRoot()\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+        handleIntentBundle(arguments)\n+    }\n+\n+    override fun onNewIntent(intent: Intent) {\n+        super.onNewIntent(intent)\n+        handleIntentBundle(intent.extras)\n+    }\n+\n+    private fun handleIntentBundle(bundle: Bundle?) {\n+        if (bundle != null) {\n+            @ScreenDef val screenName = bundle.getString(Router.EXTRA_SCREEN_NAME)\n+            if (!TextUtils.isEmpty(screenName) && screenName == Screen.SETTINGS) {\n+                environment?.router?.showSettings(activity)\n+            }\n+        }\n+    }\n+\n+    companion object {\n+        private val TAG = AccountFragment::class.java.canonicalName\n+        @JvmStatic\n+        fun newInstance(@Nullable bundle: Bundle?): AccountFragment {\n+            val fragment = AccountFragment()\n+            fragment.arguments = bundle\n+            return fragment\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTc1Njc0OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozODoyMlrOGN3KPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozODoyMlrOGN3KPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4ODQxNA==", "bodyText": "should be in the first position as java file.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417188414", "createdAt": "2020-04-29T09:38:22Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")\n+            }\n+        } else {\n+            binding.profileBtn.visibility = View.GONE\n+        }\n+        binding.settingsBtn.setOnClickListener { environment?.router?.showSettings(activity) }\n+        binding.feedbackBtn.setOnClickListener { environment?.router?.showFeedbackScreen(activity!!, getString(R.string.email_subject)) }\n+        binding.logoutBtn.setOnClickListener {\n+            environment?.router?.performManualLogout(activity,\n+                    environment.analyticsRegistry, environment.notificationDelegate)\n+        }\n+        binding.tvVersionNo.text = String.format(\"%s %s %s\", getString(R.string.label_version),\n+                BuildConfig.VERSION_NAME, environment?.config?.environmentDisplayName)\n+        return binding.getRoot()\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+        handleIntentBundle(arguments)\n+    }\n+\n+    override fun onNewIntent(intent: Intent) {\n+        super.onNewIntent(intent)\n+        handleIntentBundle(intent.extras)\n+    }\n+\n+    private fun handleIntentBundle(bundle: Bundle?) {\n+        if (bundle != null) {\n+            @ScreenDef val screenName = bundle.getString(Router.EXTRA_SCREEN_NAME)\n+            if (!TextUtils.isEmpty(screenName) && screenName == Screen.SETTINGS) {\n+                environment?.router?.showSettings(activity)\n+            }\n+        }\n+    }\n+\n+    companion object {\n+        private val TAG = AccountFragment::class.java.canonicalName\n+        @JvmStatic\n+        fun newInstance(@Nullable bundle: Bundle?): AccountFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTc1OTkxOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozOToxMVrOGN3MJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozOToxMVrOGN3MJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4ODkwMg==", "bodyText": "TAG is unused and can be removed.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417188902", "createdAt": "2020-04-29T09:39:11Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")\n+            }\n+        } else {\n+            binding.profileBtn.visibility = View.GONE\n+        }\n+        binding.settingsBtn.setOnClickListener { environment?.router?.showSettings(activity) }\n+        binding.feedbackBtn.setOnClickListener { environment?.router?.showFeedbackScreen(activity!!, getString(R.string.email_subject)) }\n+        binding.logoutBtn.setOnClickListener {\n+            environment?.router?.performManualLogout(activity,\n+                    environment.analyticsRegistry, environment.notificationDelegate)\n+        }\n+        binding.tvVersionNo.text = String.format(\"%s %s %s\", getString(R.string.label_version),\n+                BuildConfig.VERSION_NAME, environment?.config?.environmentDisplayName)\n+        return binding.getRoot()\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+        handleIntentBundle(arguments)\n+    }\n+\n+    override fun onNewIntent(intent: Intent) {\n+        super.onNewIntent(intent)\n+        handleIntentBundle(intent.extras)\n+    }\n+\n+    private fun handleIntentBundle(bundle: Bundle?) {\n+        if (bundle != null) {\n+            @ScreenDef val screenName = bundle.getString(Router.EXTRA_SCREEN_NAME)\n+            if (!TextUtils.isEmpty(screenName) && screenName == Screen.SETTINGS) {\n+                environment?.router?.showSettings(activity)\n+            }\n+        }\n+    }\n+\n+    companion object {\n+        private val TAG = AccountFragment::class.java.canonicalName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTgwMDU2OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1MTowNFrOGN3leQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1MTowNFrOGN3leQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NTM4NQ==", "bodyText": "Use let method instated of !! as activity!! throws NullpointerException.\nRef: https://kotlinlang.org/docs/tutorials/kotlin-for-py/null-safety.html#not-null-assertion-operator", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417195385", "createdAt": "2020-04-29T09:51:04Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTgyMjc0OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1Nzo0MFrOGN3zXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1Nzo0MFrOGN3zXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5ODk0MQ==", "bodyText": "Use let method instated of !! as activity!! throws NullpointerException.\nRef: https://kotlinlang.org/docs/tutorials/kotlin-for-py/null-safety.html#not-null-assertion-operator", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417198941", "createdAt": "2020-04-29T09:57:40Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+    private lateinit var binding: FragmentAccountBinding\n+    @Inject\n+    private val config: Config? = null\n+    @Inject\n+    private val environment: IEdxEnvironment? = null\n+    @Inject\n+    private val loginPrefs: LoginPrefs? = null\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+                              savedInstanceState: Bundle?): View? {\n+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_account, container, false)\n+        if (config?.isUserProfilesEnabled == true) {\n+            binding.profileBtn.setOnClickListener {\n+                environment?.router?.showUserProfile(activity!!, loginPrefs?.username ?: \"\")\n+            }\n+        } else {\n+            binding.profileBtn.visibility = View.GONE\n+        }\n+        binding.settingsBtn.setOnClickListener { environment?.router?.showSettings(activity) }\n+        binding.feedbackBtn.setOnClickListener { environment?.router?.showFeedbackScreen(activity!!, getString(R.string.email_subject)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTg2Njk0OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxMTowOVrOGN4PDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjowNDoxM1rOGOmOYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNjAzMQ==", "bodyText": "Are we need this dependency? if then why.\nas test cases are already running without this.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417206031", "createdAt": "2020-04-29T10:11:09Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/build.gradle", "diffHunk": "@@ -209,6 +209,7 @@ dependencies {\n \n     // test project configuration\n     testImplementation 'junit:junit:4.12'\n+    testImplementation 'androidx.test.ext:junit:1.1.1'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTUyMA==", "bodyText": "still pending.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417959520", "createdAt": "2020-04-30T12:04:13Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/build.gradle", "diffHunk": "@@ -209,6 +209,7 @@ dependencies {\n \n     // test project configuration\n     testImplementation 'junit:junit:4.12'\n+    testImplementation 'androidx.test.ext:junit:1.1.1'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNjAzMQ=="}, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTg2NzE2OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxMToxMVrOGN4PKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjowNDoxOFrOGOmOfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNjA1OQ==", "bodyText": "Are we need this dependency? if then why.\nas test cases are already running without this.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417206059", "createdAt": "2020-04-29T10:11:11Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/build.gradle", "diffHunk": "@@ -239,6 +240,7 @@ dependencies {\n     androidTestImplementation 'junit:junit:4.12'\n     androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n     androidTestImplementation 'androidx.test:rules:1.2.0'\n+    androidTestImplementation 'androidx.test:runner:1.2.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTU1MQ==", "bodyText": "still pending.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417959551", "createdAt": "2020-04-30T12:04:18Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/build.gradle", "diffHunk": "@@ -239,6 +240,7 @@ dependencies {\n     androidTestImplementation 'junit:junit:4.12'\n     androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n     androidTestImplementation 'androidx.test:rules:1.2.0'\n+    androidTestImplementation 'androidx.test:runner:1.2.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNjA1OQ=="}, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTg3NzUzOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxNDoxOFrOGN4VmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxNDoxOFrOGN4VmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzcwNA==", "bodyText": "config is already defined in BaseTestCase.java.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417207704", "createdAt": "2020-04-29T10:14:18Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "diffHunk": "@@ -21,11 +22,13 @@\n @Ignore\n public class UiTest extends HttpBaseTestCase {\n     protected IEdxEnvironment environment;\n+    protected Config config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTg3ODU4OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxNDozN1rOGN4WNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxNDozN1rOGN4WNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzg2Mw==", "bodyText": "config is already initialized in BaseTestCase.java.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417207863", "createdAt": "2020-04-29T10:14:37Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "diffHunk": "@@ -21,11 +22,13 @@\n @Ignore\n public class UiTest extends HttpBaseTestCase {\n     protected IEdxEnvironment environment;\n+    protected Config config;\n \n     @Override\n     protected void inject(Injector injector) throws Exception {\n         super.inject(injector);\n         environment = injector.getInstance(IEdxEnvironment.class);\n+        config = injector.getInstance(Config.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTk0MDk1OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/AccountFragmentTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDozMzo1OVrOGN48_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDozMzo1OVrOGN48_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxNzc5MQ==", "bodyText": "Add new line as EOF.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417217791", "createdAt": "2020-04-29T10:33:59Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/AccountFragmentTest.kt", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.edx.mobile.view\n+\n+import android.os.Bundle\n+import android.view.View\n+import kotlinx.android.synthetic.main.fragment_account.*\n+import org.assertj.core.api.Assertions\n+import org.junit.Assert.assertNotNull\n+import org.junit.Test\n+import org.mockito.Mockito.mock\n+import org.robolectric.shadows.support.v4.SupportFragmentController\n+import roboguice.activity.RoboFragmentActivity\n+\n+class AccountFragmentTest : UiTest() {\n+\n+    private lateinit var fragment: AccountFragment\n+\n+    override fun setUp() {\n+        super.setUp()\n+        fragment = AccountFragment.newInstance(null)\n+        SupportFragmentController.setupFragment(fragment, RoboFragmentActivity::class.java, android.R.id.content, mock(Bundle::class.java))\n+    }\n+\n+    @Test\n+    fun initializeTest() {\n+        assertNotNull(fragment.view)\n+    }\n+\n+    @Test\n+    fun checkButtonsVisibility() {\n+        if (config.isUserProfilesEnabled) {\n+            Assertions.assertThat(fragment.profile_btn.visibility).isEqualTo(View.VISIBLE)\n+        } else {\n+            Assertions.assertThat(fragment.profile_btn.visibility).isEqualTo(View.GONE)\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTk2MzE0OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDo0MToyMFrOGN5LMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDo0MToyMFrOGN5LMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyMTQyNQ==", "bodyText": "Add new line as EOF.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417221425", "createdAt": "2020-04-29T10:41:20Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.edx.mobile.view\n+\n+import android.app.Activity\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.action.ViewActions\n+import androidx.test.espresso.matcher.ViewMatchers\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import androidx.test.rule.ActivityTestRule\n+import com.facebook.testing.screenshot.Screenshot\n+import org.edx.mobile.R\n+import org.junit.Assert.assertEquals\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.rules.TestName\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class AccountActivityTest {\n+\n+    @Rule\n+    @JvmField\n+    val rule: ActivityTestRule<AccountActivity> = ActivityTestRule(AccountActivity::class.java)\n+\n+    @Rule\n+    var testName = TestName()\n+\n+    private lateinit var activity: Activity\n+\n+    @Before\n+    fun before() {\n+        this.activity = rule.activity\n+    }\n+\n+    @Test\n+    fun useAppContext() {\n+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\n+        assertEquals(\"org.edx.mobile\", appContext.packageName)\n+        println(\"useAppContext : Test Ran\")\n+    }\n+\n+    @Test\n+    fun checkProfileClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.profile_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkSettingClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.settings_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkFeedbackClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.feedback_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkLogoutClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.logout_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    @Throws(Throwable::class)\n+    fun testScreenshotRecordAccountActivity() {\n+        activity.runOnUiThread { Screenshot.snap(activity.findViewById(R.id.my_groups_list_container)).setName(javaClass.name + \"_\" + testName.methodName).record() }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA2Njc3OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxNDoxNVrOGN6K-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxNDoxNVrOGN6K-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNzc1Mw==", "bodyText": "The screenshot test case is not just to record the screenshot. They are also used to verify that screen design should not be changed.\ne.g DiscoveryLaunchScreenshotTests and their screenshots in screenshots directory.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417237753", "createdAt": "2020-04-29T11:14:15Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.edx.mobile.view\n+\n+import android.app.Activity\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.action.ViewActions\n+import androidx.test.espresso.matcher.ViewMatchers\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import androidx.test.rule.ActivityTestRule\n+import com.facebook.testing.screenshot.Screenshot\n+import org.edx.mobile.R\n+import org.junit.Assert.assertEquals\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.rules.TestName\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class AccountActivityTest {\n+\n+    @Rule\n+    @JvmField\n+    val rule: ActivityTestRule<AccountActivity> = ActivityTestRule(AccountActivity::class.java)\n+\n+    @Rule\n+    var testName = TestName()\n+\n+    private lateinit var activity: Activity\n+\n+    @Before\n+    fun before() {\n+        this.activity = rule.activity\n+    }\n+\n+    @Test\n+    fun useAppContext() {\n+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\n+        assertEquals(\"org.edx.mobile\", appContext.packageName)\n+        println(\"useAppContext : Test Ran\")\n+    }\n+\n+    @Test\n+    fun checkProfileClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.profile_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkSettingClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.settings_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkFeedbackClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.feedback_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkLogoutClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.logout_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    @Throws(Throwable::class)\n+    fun testScreenshotRecordAccountActivity() {\n+        activity.runOnUiThread { Screenshot.snap(activity.findViewById(R.id.my_groups_list_container)).setName(javaClass.name + \"_\" + testName.methodName).record() }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA4NzIwOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyMTowNFrOGN6XWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyMTowNFrOGN6XWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MDkyMQ==", "bodyText": "IMO, there is no sense to just perform view click action, as we are not checking any flow after that.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417240921", "createdAt": "2020-04-29T11:21:04Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.edx.mobile.view\n+\n+import android.app.Activity\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.action.ViewActions\n+import androidx.test.espresso.matcher.ViewMatchers\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import androidx.test.rule.ActivityTestRule\n+import com.facebook.testing.screenshot.Screenshot\n+import org.edx.mobile.R\n+import org.junit.Assert.assertEquals\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.rules.TestName\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class AccountActivityTest {\n+\n+    @Rule\n+    @JvmField\n+    val rule: ActivityTestRule<AccountActivity> = ActivityTestRule(AccountActivity::class.java)\n+\n+    @Rule\n+    var testName = TestName()\n+\n+    private lateinit var activity: Activity\n+\n+    @Before\n+    fun before() {\n+        this.activity = rule.activity\n+    }\n+\n+    @Test\n+    fun useAppContext() {\n+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\n+        assertEquals(\"org.edx.mobile\", appContext.packageName)\n+        println(\"useAppContext : Test Ran\")\n+    }\n+\n+    @Test\n+    fun checkProfileClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.profile_btn)).perform(ViewActions.click())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA5OTU4OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyNDo1N1rOGN6fJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyNDo1N1rOGN6fJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MjkxOA==", "bodyText": "we have to check that pref should be clear or not, after perform the click action.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417242918", "createdAt": "2020-04-29T11:24:57Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/view/AccountActivityTest.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.edx.mobile.view\n+\n+import android.app.Activity\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.action.ViewActions\n+import androidx.test.espresso.matcher.ViewMatchers\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import androidx.test.rule.ActivityTestRule\n+import com.facebook.testing.screenshot.Screenshot\n+import org.edx.mobile.R\n+import org.junit.Assert.assertEquals\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.rules.TestName\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class AccountActivityTest {\n+\n+    @Rule\n+    @JvmField\n+    val rule: ActivityTestRule<AccountActivity> = ActivityTestRule(AccountActivity::class.java)\n+\n+    @Rule\n+    var testName = TestName()\n+\n+    private lateinit var activity: Activity\n+\n+    @Before\n+    fun before() {\n+        this.activity = rule.activity\n+    }\n+\n+    @Test\n+    fun useAppContext() {\n+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\n+        assertEquals(\"org.edx.mobile\", appContext.packageName)\n+        println(\"useAppContext : Test Ran\")\n+    }\n+\n+    @Test\n+    fun checkProfileClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.profile_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkSettingClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.settings_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkFeedbackClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.feedback_btn)).perform(ViewActions.click())\n+    }\n+\n+    @Test\n+    fun checkLogoutClick() {\n+        Espresso.onView(ViewMatchers.withId(R.id.logout_btn)).perform(ViewActions.click())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ee372a86fc571207baf42a8e387cba048346e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDQyMTgzOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTowNDo0M1rOGOkcXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTowNDo0M1rOGOkcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzMDMzMw==", "bodyText": "import needs to remove.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417930333", "createdAt": "2020-04-30T11:04:43Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/test/java/org/edx/mobile/view/UiTest.java", "diffHunk": "@@ -8,6 +8,7 @@\n \n import org.edx.mobile.core.IEdxEnvironment;\n import org.edx.mobile.test.http.HttpBaseTestCase;\n+import org.edx.mobile.util.Config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da130574b94c0d04e3f0122d84111b0a2af7787c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDYxNzE1OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjowNzo1MlrOGOmU2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjowNzo1MlrOGOmU2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk2MTE3OQ==", "bodyText": "it should be defined just after the data members. in this case, just before the onCreateView method.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r417961179", "createdAt": "2020-04-30T12:07:52Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/AccountFragment.kt", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.edx.mobile.view\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.databinding.DataBindingUtil\n+import com.google.inject.Inject\n+import org.edx.mobile.BuildConfig\n+import org.edx.mobile.R\n+import org.edx.mobile.annotation.Nullable\n+import org.edx.mobile.base.BaseFragment\n+import org.edx.mobile.core.IEdxEnvironment\n+import org.edx.mobile.databinding.FragmentAccountBinding\n+import org.edx.mobile.deeplink.Screen\n+import org.edx.mobile.deeplink.ScreenDef\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.util.Config\n+\n+class AccountFragment : BaseFragment() {\n+\n+    companion object {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b061abd2b44b8e3303ce2d572bbe77795d8caae"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODYxOTk4OnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/test/screenshot/test/AccountActivityScreenshotTests.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNDoyNTo1N1rOGPsglw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNDoyNTo1N1rOGPsglw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExMTA2Mw==", "bodyText": "Need a new line as EOF.", "url": "https://github.com/edx/edx-app-android/pull/1397#discussion_r419111063", "createdAt": "2020-05-03T14:25:57Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/androidTest/java/org/edx/mobile/test/screenshot/test/AccountActivityScreenshotTests.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.test.screenshot.test\n+\n+import android.view.View\n+import android.widget.TextView\n+import androidx.test.rule.ActivityTestRule\n+import com.facebook.testing.screenshot.Screenshot\n+import org.edx.mobile.R\n+import org.edx.mobile.base.MainApplication\n+import org.edx.mobile.module.prefs.LoginPrefs\n+import org.edx.mobile.test.feature.data.TestValues\n+import org.edx.mobile.view.AccountActivity\n+import org.junit.After\n+import org.junit.Before\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.rules.TestName\n+\n+class AccountActivityScreenshotTests {\n+\n+    @get:Rule\n+    var mActivityRule = ActivityTestRule(AccountActivity::class.java, true, false)\n+    @get:Rule\n+    var testName = TestName()\n+    private var loginPrefs: LoginPrefs? = null\n+    private var activity: AccountActivity? = null\n+\n+    @Before\n+    fun before() {\n+        loginPrefs = LoginPrefs(MainApplication.application.baseContext)\n+        loginPrefs?.storeUserProfile(TestValues.DUMMY_PROFILE)\n+        activity = mActivityRule.launchActivity(null)\n+    }\n+\n+    @Test\n+    fun testScreenshot_recordAccountActivity() {\n+        activity?.runOnUiThread {\n+            (activity?.findViewById<View>(R.id.tv_version_no) as TextView).text = String.format(\"%s %s\",\n+                    activity?.getString(R.string.label_version), TestValues.DUMMY_APP_VERSION)\n+            Screenshot.snap(activity?.findViewById(android.R.id.content)).setName(javaClass.name + \"_\" + testName.methodName).record()\n+        }\n+    }\n+\n+    @After\n+    fun after() {\n+        loginPrefs?.clear()\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98c2a6ba56f2601df8764477a4460e5a944cfac8"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 514, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}