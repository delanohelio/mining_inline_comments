{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTgzMjU1", "number": 1369, "title": "Add Whitelisted Releases validation for Course Upgrade to Verified", "bodyText": "Description\nLEARNER-7604\n\nAdd validation to check the current release is enabled to use 'Upgrade to Verified' feature including the API call, and banner visibility.\nFor more details see the Jira story.", "createdAt": "2020-02-11T10:37:39Z", "url": "https://github.com/edx/edx-app-android/pull/1369", "merged": true, "mergeCommit": {"oid": "9d34e7fd5f128e76e58fd9ece4ecc79fe27dab1c"}, "closed": true, "closedAt": "2020-02-12T12:19:19Z", "author": {"login": "farhan-arshad-dev"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDkF8oAFqTM1NzIzODAzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDk_cUAFqTM1NzM5MzAxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjM4MDMz", "url": "https://github.com/edx/edx-app-android/pull/1369#pullrequestreview-357238033", "createdAt": "2020-02-12T07:37:36Z", "commit": {"oid": "4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzozNzozNlrOFokOAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMDo0OTo1OVrOFop89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MDc3MQ==", "bodyText": "We shouldn't make it a singleton class and make the utility functions as static methods.", "url": "https://github.com/edx/edx-app-android/pull/1369#discussion_r378080771", "createdAt": "2020-02-12T07:37:36Z", "author": {"login": "farhan"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.edx.mobile.util\n+\n+import android.text.TextUtils\n+import com.google.firebase.remoteconfig.FirebaseRemoteConfig\n+import com.google.gson.Gson\n+import com.google.gson.reflect.TypeToken\n+import org.edx.mobile.BuildConfig\n+import java.util.*\n+\n+/**\n+ * Created by rohan on 3/12/15.\n+ */\n+object ConfigUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MDk0MA==", "bodyText": "Remove these docs, please \ud83d\ude09", "url": "https://github.com/edx/edx-app-android/pull/1369#discussion_r378080940", "createdAt": "2020-02-12T07:38:04Z", "author": {"login": "farhan"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.edx.mobile.util\n+\n+import android.text.TextUtils\n+import com.google.firebase.remoteconfig.FirebaseRemoteConfig\n+import com.google.gson.Gson\n+import com.google.gson.reflect.TypeToken\n+import org.edx.mobile.BuildConfig\n+import java.util.*\n+\n+/**\n+ * Created by rohan on 3/12/15.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE3NDcwOQ==", "bodyText": "As per discussion, following code is more optimized.\n    /**\n     * Utility method to check the status of the course upgrade.\n     *\n     * @param config   [Config]\n     * @param listener [OnCourseUpgradeStatusListener] callback for the status of the course upgrade.\n     */\n    fun checkCourseUpgradeEnabled(config: Config,\n                                  listener: OnCourseUpgradeStatusListener) {\n        // Check firebase enabled in config\n        if (config.firebaseConfig.isEnabled) {\n            val firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n            firebaseRemoteConfig.fetchAndActivate().addOnCompleteListener {\n                val courseUpgradeEnabled = firebaseRemoteConfig\n                        .getBoolean(AppConstants.FirebaseConstants.REV_934_ENABLED)\n                // Check course upgrade enabled in firebase remote config\n                if (courseUpgradeEnabled) {\n                    val whiteListedReleasesJson = firebaseRemoteConfig\n                            .getString(AppConstants.FirebaseConstants.REV_934_WHITELISTED_RELEASES)\n                    if (!TextUtils.isEmpty(whiteListedReleasesJson)) {\n                        val whiteListedReleases = Gson().fromJson<ArrayList<String>>(whiteListedReleasesJson,\n                                object : TypeToken<ArrayList<String>>() {}.type)\n                        // Check current release is white listed in firebase remote config\n                        for (release in whiteListedReleases) {\n                            if (BuildConfig.VERSION_NAME.equals(release, ignoreCase = true)) {\n                                listener.onCourseUpgradeResult(true)\n                                return@addOnCompleteListener\n                            }\n                        }\n                    }\n                }\n                listener.onCourseUpgradeResult(false)\n            }\n        }\n    }\n\n    /**\n     * Interface to provide the callback for the status of the course upgrade.\n     */\n    interface OnCourseUpgradeStatusListener {\n        /**\n         * Callback to send course upgrade status result.\n         */\n        fun onCourseUpgradeResult(enabled: Boolean)\n    }", "url": "https://github.com/edx/edx-app-android/pull/1369#discussion_r378174709", "createdAt": "2020-02-12T10:49:59Z", "author": {"login": "farhan"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/ConfigUtil.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.edx.mobile.util\n+\n+import android.text.TextUtils\n+import com.google.firebase.remoteconfig.FirebaseRemoteConfig\n+import com.google.gson.Gson\n+import com.google.gson.reflect.TypeToken\n+import org.edx.mobile.BuildConfig\n+import java.util.*\n+\n+/**\n+ * Created by rohan on 3/12/15.\n+ */\n+object ConfigUtil {\n+\n+    /**\n+     * Returns true if domain of the given URL is white-listed in the configuration,\n+     * false otherwise.\n+     *\n+     * @param url\n+     * @return\n+     */\n+    fun isWhiteListedURL(url: String, config: Config): Boolean {\n+        // check if this URL is a white-listed URL, anything outside the white-list is EXTERNAL LINK\n+        for (domain in config.zeroRatingConfig.whiteListedDomains) {\n+            if (BrowserUtil.isUrlOfHost(url, domain)) {\n+                // this is white-listed URL\n+                return true\n+            }\n+        }\n+        return false\n+    }\n+\n+    /**\n+     * Utility method to check the current build is white listed in Firebase remote config.\n+     *\n+     * @param config   [Config]\n+     * @param listener [OnCourseUpgradeStateListener] callback for the white listed release\n+     */\n+    fun isReleaseWhiteListed(config: Config,\n+                             listener: OnCourseUpgradeStateListener?) {\n+        if (config.firebaseConfig.isEnabled) {\n+            val firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n+            firebaseRemoteConfig.fetchAndActivate().addOnCompleteListener {\n+                val courseUpgradeEnabled = firebaseRemoteConfig\n+                        .getBoolean(AppConstants.FirebaseConstants.REV_934_ENABLED)\n+                var releaseWhiteListed = false\n+                if (courseUpgradeEnabled) {\n+                    val whiteListedReleasesJson = firebaseRemoteConfig\n+                            .getString(AppConstants.FirebaseConstants.REV_934_WHITELISTED_RELEASES)\n+                    if (!TextUtils.isEmpty(whiteListedReleasesJson)) {\n+                        val whiteListReleases = Gson().fromJson<ArrayList<String>>(whiteListedReleasesJson,\n+                                object : TypeToken<ArrayList<String>>() {}.type)\n+                        for (WhiteListedRelease in whiteListReleases) {\n+                            if (BuildConfig.VERSION_NAME.equals(WhiteListedRelease, ignoreCase = true)) {\n+                                listener?.onWhiteListedRelease()\n+                                releaseWhiteListed = true\n+                                break\n+                            }\n+                        }\n+                    }\n+                }\n+                if (!releaseWhiteListed) {\n+                    listener?.onCourseUpgradeDisable()\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Interface to provide the callback for the status of the course update.\n+     */\n+    interface OnCourseUpgradeStateListener {\n+        /**\n+         * Callback about to know the current release is white listed for the course upgrade feature\n+         * */\n+        fun onWhiteListedRelease()\n+\n+        /**\n+         * Callback to know that the course update is enabled or current release is block for the\n+         * course upgrade feature\n+         * */\n+        fun onCourseUpgradeDisable()\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196", "author": {"user": {"login": "farhan-arshad-dev", "name": "Farhan Arshad"}}, "url": "https://github.com/edx/edx-app-android/commit/4d7f8afcfe59e0ba1ebd790fa46dfe160a3d9196", "committedDate": "2020-02-11T10:33:06Z", "message": "Add Whitelisted Releases validation for Upgrade to Verified\n\n- LEARNER-7604\n- Add validation to check the current release is enabled to use\n  'Upgrade to Verified' feature including the API call, and\n  banner visibility."}, "afterCommit": {"oid": "da76fb4d48d7afe5b1d7b6eecce3654c03650368", "author": {"user": {"login": "farhan-arshad-dev", "name": "Farhan Arshad"}}, "url": "https://github.com/edx/edx-app-android/commit/da76fb4d48d7afe5b1d7b6eecce3654c03650368", "committedDate": "2020-02-12T11:32:13Z", "message": "Add Whitelisted Releases validation for Upgrade to Verified\n\n- LEARNER-7604\n- Add validation to check the current release is enabled to use\n  'Upgrade to Verified' feature including the API call, and\n  banner visibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "435694a3e857bf60ec6fce8688bc35c86b5ff82a", "author": {"user": {"login": "farhan-arshad-dev", "name": "Farhan Arshad"}}, "url": "https://github.com/edx/edx-app-android/commit/435694a3e857bf60ec6fce8688bc35c86b5ff82a", "committedDate": "2020-02-12T11:37:33Z", "message": "Add Whitelisted Releases validation for Upgrade to Verified\n\n- LEARNER-7604\n- Add validation to check the current release is enabled to use\n  'Upgrade to Verified' feature including the API call, and\n  banner visibility."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da76fb4d48d7afe5b1d7b6eecce3654c03650368", "author": {"user": {"login": "farhan-arshad-dev", "name": "Farhan Arshad"}}, "url": "https://github.com/edx/edx-app-android/commit/da76fb4d48d7afe5b1d7b6eecce3654c03650368", "committedDate": "2020-02-12T11:32:13Z", "message": "Add Whitelisted Releases validation for Upgrade to Verified\n\n- LEARNER-7604\n- Add validation to check the current release is enabled to use\n  'Upgrade to Verified' feature including the API call, and\n  banner visibility."}, "afterCommit": {"oid": "435694a3e857bf60ec6fce8688bc35c86b5ff82a", "author": {"user": {"login": "farhan-arshad-dev", "name": "Farhan Arshad"}}, "url": "https://github.com/edx/edx-app-android/commit/435694a3e857bf60ec6fce8688bc35c86b5ff82a", "committedDate": "2020-02-12T11:37:33Z", "message": "Add Whitelisted Releases validation for Upgrade to Verified\n\n- LEARNER-7604\n- Add validation to check the current release is enabled to use\n  'Upgrade to Verified' feature including the API call, and\n  banner visibility."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MzkzMDEz", "url": "https://github.com/edx/edx-app-android/pull/1369#pullrequestreview-357393013", "createdAt": "2020-02-12T11:53:44Z", "commit": {"oid": "435694a3e857bf60ec6fce8688bc35c86b5ff82a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4131, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}