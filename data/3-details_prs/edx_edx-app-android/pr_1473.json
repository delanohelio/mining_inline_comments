{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTI0MTQx", "number": 1473, "title": "Add Course Reset Dates banner on Assessment View", "bodyText": "Description\nLEARNER-7945\n\nAdded the Shift Course Dates banner in Assessment View\nImplement CourseDatesViewModel into CourseUnitWebViewFragment.java\nAdded a custom popup window for response msg", "createdAt": "2020-10-23T12:12:19Z", "url": "https://github.com/edx/edx-app-android/pull/1473", "merged": true, "mergeCommit": {"oid": "bbbae9ba064b82257beffb8adfb0cef94a620861"}, "closed": true, "closedAt": "2020-11-04T14:32:20Z", "author": {"login": "omerhabib26"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWvdYcAFqTUxODE0NzM1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZOUwWgBqjM5NTc3NTIwMDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MTQ3MzU3", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-518147357", "createdAt": "2020-10-27T21:01:12Z", "commit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Njg1NjQ2", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-518685646", "createdAt": "2020-10-28T13:55:20Z", "commit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1NToyMFrOHprPrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzozODo1OFrOHp2B0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2MjE4OA==", "bodyText": "Can remove this file after adding snackbar for the messages.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513462188", "createdAt": "2020-10-28T13:55:20Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/res/drawable/ic_cross.xml", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2MjM5Mw==", "bodyText": "better to replace with match_parent.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513462393", "createdAt": "2020-10-28T13:55:35Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/res/layout/fragment_authenticated_webview.xml", "diffHunk": "@@ -1,12 +1,25 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <androidx.swiperefreshlayout.widget.SwipeRefreshLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n     android:id=\"@+id/swipe_container\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\">\n \n-    <org.edx.mobile.view.custom.AuthenticatedWebView\n-        android:id=\"@+id/auth_webview\"\n+    <LinearLayout\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\"\n-        android:background=\"@color/white\" />\n+        android:layout_height=\"wrap_content\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2NjE3NA==", "bodyText": "Can remove this file after adding snackbar for the messages.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513466174", "createdAt": "2020-10-28T14:00:15Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/res/layout/popup_due_date_shifted.xml", "diffHunk": "@@ -0,0 +1,53 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2NjU5NQ==", "bodyText": "Can remove this file after adding snackbar", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513466595", "createdAt": "2020-10-28T14:00:47Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/res/values/dimens.xml", "diffHunk": "@@ -244,6 +244,7 @@\n     <dimen name=\"whats_new_image_horizontal_margin\">25dp</dimen>\n     <dimen name=\"shadow_view_height\">4dp</dimen>\n     <dimen name=\"container_padding\">12dp</dimen>\n+    <dimen name=\"widget_padding\">4dp</dimen>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5MjU3OA==", "bodyText": "private void showPopupWindow(boolean isSuccess) {\n        SnackbarErrorNotification snackbarErrorNotification = new SnackbarErrorNotification(authWebView);\n        if (isSuccess) {\n            snackbarErrorNotification.showError(R.string.assessment_shift_dates_success_msg,\n                    null, R.string.assessment_view_all_dates, new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            Log.i(\"showPopupWindow\", \"Error Click\");\n                        }\n                    });\n        } else {\n            snackbarErrorNotification.showError(R.string.course_dates_reset_unsuccessful, null,\n                    0, null);\n        }\n    }\nAlso\n\nUpdated method name with the appropriate label.\nSnackbar should be hidden after 5-6 sec.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513592578", "createdAt": "2020-10-28T16:36:02Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +118,108 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void isProblemXBlock() {\n+        if (unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initPopupWindow();\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), false);\n+        }\n+    }\n+\n+    private void initPopupWindow() {\n+        popupView = getLayoutInflater().inflate(R.layout.popup_due_date_shifted, null, false);\n+        (popupView.findViewById(R.id.btn_dismiss)).setOnClickListener(v -> {\n+            popupWindow.dismiss();\n+        });\n+\n+        popupWindow = new PopupWindow(popupView, LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT, false);\n+        popupWindow.setOutsideTouchable(false);\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void initObserver() {\n+        courseDateViewModel.getBannerInfo().observe(this, this::initInfoBanner);\n+\n+        courseDateViewModel.getShowLoader().observe(this, flag ->\n+                preloadingListener.setLoadingState(flag ?\n+                        PreLoadingListener.State.MAIN_UNIT_LOADING :\n+                        PreLoadingListener.State.MAIN_UNIT_LOADED));\n+\n+        courseDateViewModel.getResetCourseDates().observe(this, resetCourseDates -> {\n+            if (resetCourseDates != null) {\n+                showPopupWindow(true);\n+                authWebView.loadUrl(true, unit.getBlockUrl());\n+            }\n+        });\n+\n+        courseDateViewModel.getErrorMessage().observe(this, errorMessage -> {\n+            if (errorMessage != null) {\n+                if (errorMessage.getThrowable() instanceof AuthException || errorMessage.getThrowable() instanceof HttpStatusException &&\n+                        ((HttpStatusException) errorMessage.getThrowable()).getStatusCode() == HttpStatus.UNAUTHORIZED) {\n+                    environment.getRouter().forceLogout(getContextOrThrow(),\n+                            environment.getAnalyticsRegistry(),\n+                            environment.getNotificationDelegate());\n+                } else {\n+                    switch (errorMessage.getErrorCode()) {\n+                        case ErrorMessage.BANNER_INFO_CODE:\n+                            initInfoBanner(null);\n+                            break;\n+                        case ErrorMessage.COURSE_RESET_DATES_CODE:\n+                            showPopupWindow(false);\n+                            break;\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    private void showPopupWindow(boolean isSuccess) {\n+        ((TextView) popupView.findViewById(R.id.txt_msg)).setText(isSuccess ?\n+                R.string.assessment_shift_dates_success_msg : R.string.course_dates_reset_unsuccessful);\n+        popupWindow.showAtLocation(authWebView, Gravity.CENTER | Gravity.BOTTOM, 0, 0);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5NjQ3Mw==", "bodyText": "IMO, better to convert into kotlin class", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513596473", "createdAt": "2020-10-28T16:41:11Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -1,23 +1,38 @@\n package org.edx.mobile.view;\n \n import android.os.Bundle;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\n-\n+import android.text.TextUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYzNjI0Nw==", "bodyText": "I think the app should be a loader while fetching the date banner data.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513636247", "createdAt": "2020-10-28T17:35:06Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +118,108 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void isProblemXBlock() {\n+        if (unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initPopupWindow();\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYzNzI4Ng==", "bodyText": "better to rename like fetchDataBannerInfo as isProblemXBlock seems boolean return type method.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513637286", "createdAt": "2020-10-28T17:36:35Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -67,6 +88,7 @@ public void onPageStarted() {\n             @Override\n             public void onPageFinished() {\n                 if (authWebView.isPageLoaded()) {\n+                    isProblemXBlock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYzODg2Ng==", "bodyText": "can be removed after the snack bar implant, and their usage too.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r513638866", "createdAt": "2020-10-28T17:38:58Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -27,9 +42,15 @@\n     @InjectView(R.id.auth_webview)\n     private AuthenticatedWebView authWebView;\n \n+    @InjectView(R.id.info_banner)\n+    private LinearLayout infoBanner;\n+\n     @InjectView(R.id.swipe_container)\n     protected SwipeRefreshLayout swipeContainer;\n \n+    private CourseDateViewModel courseDateViewModel;\n+    private View popupView;\n+    private PopupWindow popupWindow;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e83f8bc7e6f154293f2be9b76fe75a2a8153c66"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTU2MDg1", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-521156085", "createdAt": "2020-10-31T17:34:03Z", "commit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNzozNDowM1rOHro1tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjo0NDo0OVrOHr35EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxOTkyNQ==", "bodyText": "IMO The duration  of the error message visibility is more suitable here.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515519925", "createdAt": "2020-10-31T17:34:03Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/ErrorNotification.java", "diffHunk": "@@ -77,4 +77,19 @@ public abstract void showError(@StringRes final int errorResId,\n                                    @Nullable final Icon icon,\n                                    @StringRes final int actionTextResId,\n                                    @Nullable final View.OnClickListener actionListener);\n+\n+    /**\n+     * Show the error notification according to the provided details.\n+     *\n+     * @param errorResId      The resource ID of the error message.\n+     * @param icon            The error icon.\n+     * @param actionTextResId The resource ID of the action button text.\n+     * @param duration        The duration for which an error will be displayed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyMDE1Mg==", "bodyText": "deserve docstring that duration is not used here cuz Dialog shouldn't auto-hide.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515520152", "createdAt": "2020-10-31T17:36:25Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/DialogErrorNotification.java", "diffHunk": "@@ -57,4 +57,9 @@ public void onClick(DialogInterface dialog, int which) {\n             ).show(baseFragment.getChildFragmentManager(), null);\n         }\n     }\n+\n+    @Override\n+    public void showError(int errorResId, @Nullable Icon icon, int actionTextResId, int duration, @Nullable View.OnClickListener actionListener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyNjg1OQ==", "bodyText": "same here.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515526859", "createdAt": "2020-10-31T18:46:55Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/FullScreenErrorNotification.java", "diffHunk": "@@ -68,6 +68,11 @@ public void showError(@StringRes final int errorResId,\n         showError(view.getContext().getString(errorResId), icon, actionTextResId, actionListener);\n     }\n \n+    @Override\n+    public void showError(int errorResId, @Nullable Icon icon, int actionTextResId, int duration, @Nullable View.OnClickListener actionListener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyNzQ2Nw==", "bodyText": "Un-necessary change.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515527467", "createdAt": "2020-10-31T18:53:28Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/SnackbarErrorNotification.java", "diffHunk": "@@ -116,4 +130,15 @@ public void hideError() {\n             snackbar = null;\n         }\n     }\n+\n+    public void setSnackbarTime(int snackbarTime) {\n+        if (snackbar != null) {\n+            snackbar.setDuration(snackbarTime);\n+        }\n+    }\n+\n+    @Nullable\n+    public Snackbar getSnackbar() {\n+        return snackbar;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyNzUyMA==", "bodyText": "same need doc-string update.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515527520", "createdAt": "2020-10-31T18:54:06Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/SnackbarErrorNotification.java", "diffHunk": "@@ -54,12 +52,28 @@ public SnackbarErrorNotification(@NonNull final View view) {\n      * @param actionListener  The callback to be invoked when the action button is clicked.\n      */\n     @Override\n+    public void showError(int errorResId, @Nullable Icon icon, int actionTextResId, @Nullable View.OnClickListener actionListener) {\n+        showError(errorResId, icon, actionTextResId, Snackbar.LENGTH_INDEFINITE, actionListener);\n+    }\n+\n+    /**\n+     * Show the error notification as a persistent Snackbar, according to the provided details.\n+     *\n+     * @param errorResId      The resource ID of the error message.\n+     * @param icon            The error icon. This is ignored here, since Snackbar doesn't really support\n+     *                        icons.\n+     * @param actionTextResId The resource ID of the action button text.\n+     * @param duration        The duration for which snackbar will be displayed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NDYxOA==", "bodyText": "We have to create the util for  initInfoBanner & showShiftDateSnackBar using at muitple classes.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515754618", "createdAt": "2020-11-02T06:01:28Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), true);\n+        }\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void initObserver() {\n+        courseDateViewModel.getBannerInfo().observe(this, this::initInfoBanner);\n+\n+        courseDateViewModel.getShowLoader().observe(this, flag ->\n+                preloadingListener.setLoadingState(flag ?\n+                        PreLoadingListener.State.MAIN_UNIT_LOADING :\n+                        PreLoadingListener.State.MAIN_UNIT_LOADED));\n+\n+        courseDateViewModel.getResetCourseDates().observe(this, resetCourseDates -> {\n+            if (resetCourseDates != null) {\n+                showShiftDateSnackBar(true);\n+                canFetchBannerInfo = false;\n+                authWebView.loadUrl(true, unit.getBlockUrl());\n+            }\n+        });\n+\n+        courseDateViewModel.getErrorMessage().observe(this, errorMessage -> {\n+            if (errorMessage != null) {\n+                if (errorMessage.getThrowable() instanceof AuthException || errorMessage.getThrowable() instanceof HttpStatusException &&\n+                        ((HttpStatusException) errorMessage.getThrowable()).getStatusCode() == HttpStatus.UNAUTHORIZED) {\n+                    environment.getRouter().forceLogout(getContextOrThrow(),\n+                            environment.getAnalyticsRegistry(),\n+                            environment.getNotificationDelegate());\n+                } else {\n+                    switch (errorMessage.getErrorCode()) {\n+                        case ErrorMessage.BANNER_INFO_CODE:\n+                            initInfoBanner(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NTE0NQ==", "bodyText": "create an intent to move on course dates.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515755145", "createdAt": "2020-11-02T06:03:48Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), true);\n+        }\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void initObserver() {\n+        courseDateViewModel.getBannerInfo().observe(this, this::initInfoBanner);\n+\n+        courseDateViewModel.getShowLoader().observe(this, flag ->\n+                preloadingListener.setLoadingState(flag ?\n+                        PreLoadingListener.State.MAIN_UNIT_LOADING :\n+                        PreLoadingListener.State.MAIN_UNIT_LOADED));\n+\n+        courseDateViewModel.getResetCourseDates().observe(this, resetCourseDates -> {\n+            if (resetCourseDates != null) {\n+                showShiftDateSnackBar(true);\n+                canFetchBannerInfo = false;\n+                authWebView.loadUrl(true, unit.getBlockUrl());\n+            }\n+        });\n+\n+        courseDateViewModel.getErrorMessage().observe(this, errorMessage -> {\n+            if (errorMessage != null) {\n+                if (errorMessage.getThrowable() instanceof AuthException || errorMessage.getThrowable() instanceof HttpStatusException &&\n+                        ((HttpStatusException) errorMessage.getThrowable()).getStatusCode() == HttpStatus.UNAUTHORIZED) {\n+                    environment.getRouter().forceLogout(getContextOrThrow(),\n+                            environment.getAnalyticsRegistry(),\n+                            environment.getNotificationDelegate());\n+                } else {\n+                    switch (errorMessage.getErrorCode()) {\n+                        case ErrorMessage.BANNER_INFO_CODE:\n+                            initInfoBanner(null);\n+                            break;\n+                        case ErrorMessage.COURSE_RESET_DATES_CODE:\n+                            showShiftDateSnackBar(false);\n+                            break;\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    private void showShiftDateSnackBar(boolean isSuccess) {\n+        SnackbarErrorNotification snackbarErrorNotification = new SnackbarErrorNotification(authWebView);\n+        if (isSuccess) {\n+            snackbarErrorNotification.showError(R.string.assessment_shift_dates_success_msg,\n+                    null, R.string.assessment_view_all_dates, Snackbar.LENGTH_LONG, v -> Log.i(\"showPopupWindow\", \"Error Click\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NjA4Ng==", "bodyText": "We have to show the showShiftDateSnackBar on other screens too, Story description\n- Success toast message should also appear when learner shifts date from Course home or Dates page", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515756086", "createdAt": "2020-11-02T06:07:26Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), true);\n+        }\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void initObserver() {\n+        courseDateViewModel.getBannerInfo().observe(this, this::initInfoBanner);\n+\n+        courseDateViewModel.getShowLoader().observe(this, flag ->\n+                preloadingListener.setLoadingState(flag ?\n+                        PreLoadingListener.State.MAIN_UNIT_LOADING :\n+                        PreLoadingListener.State.MAIN_UNIT_LOADED));\n+\n+        courseDateViewModel.getResetCourseDates().observe(this, resetCourseDates -> {\n+            if (resetCourseDates != null) {\n+                showShiftDateSnackBar(true);\n+                canFetchBannerInfo = false;\n+                authWebView.loadUrl(true, unit.getBlockUrl());\n+            }\n+        });\n+\n+        courseDateViewModel.getErrorMessage().observe(this, errorMessage -> {\n+            if (errorMessage != null) {\n+                if (errorMessage.getThrowable() instanceof AuthException || errorMessage.getThrowable() instanceof HttpStatusException &&\n+                        ((HttpStatusException) errorMessage.getThrowable()).getStatusCode() == HttpStatus.UNAUTHORIZED) {\n+                    environment.getRouter().forceLogout(getContextOrThrow(),\n+                            environment.getAnalyticsRegistry(),\n+                            environment.getNotificationDelegate());\n+                } else {\n+                    switch (errorMessage.getErrorCode()) {\n+                        case ErrorMessage.BANNER_INFO_CODE:\n+                            initInfoBanner(null);\n+                            break;\n+                        case ErrorMessage.COURSE_RESET_DATES_CODE:\n+                            showShiftDateSnackBar(false);\n+                            break;\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    private void showShiftDateSnackBar(boolean isSuccess) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1Njc0MQ==", "bodyText": "no need to add canFetchBannerInfo as we have to refresh the course date banner after shifting the date.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515756741", "createdAt": "2020-11-02T06:10:08Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), true);\n+        }\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void initObserver() {\n+        courseDateViewModel.getBannerInfo().observe(this, this::initInfoBanner);\n+\n+        courseDateViewModel.getShowLoader().observe(this, flag ->\n+                preloadingListener.setLoadingState(flag ?\n+                        PreLoadingListener.State.MAIN_UNIT_LOADING :\n+                        PreLoadingListener.State.MAIN_UNIT_LOADED));\n+\n+        courseDateViewModel.getResetCourseDates().observe(this, resetCourseDates -> {\n+            if (resetCourseDates != null) {\n+                showShiftDateSnackBar(true);\n+                canFetchBannerInfo = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc2MDQ5Ng==", "bodyText": "initObserver should be move-in onViewCreated and call only once. that also remove the recursive behavior of webview loading.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515760496", "createdAt": "2020-11-02T06:23:45Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc2MTc1OQ==", "bodyText": "should be moved in initObserver to avoid the init crash", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515761759", "createdAt": "2020-11-02T06:28:30Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc2NTMzMA==", "bodyText": "also need to check the buttonText is empty, cuz button should be hide after shifting the dates.\n        if (!TextUtils.isEmpty(textView.getText())) {\n            if (!TextUtils.isEmpty(buttonText)) {\n                button.setText(buttonText);\n                button.setOnClickListener(v -> {\n                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n                });\n            }\n            infoBanner.setVisibility(View.VISIBLE);\n        }\n        button.setVisibility(TextUtils.isEmpty(buttonText) ? View.GONE : View.VISIBLE);", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515765330", "createdAt": "2020-11-02T06:40:35Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -96,6 +119,103 @@ public void onPageLoadProgressChanged(WebView webView, int progress) {\n         }\n     }\n \n+    private void fetchDateBannerInfo() {\n+        if (canFetchBannerInfo && unit.getType() == BlockType.PROBLEM) {\n+            courseDateViewModel = new ViewModelProvider(this, new ViewModelFactory()).get(CourseDateViewModel.class);\n+            initObserver();\n+            courseDateViewModel.fetchCourseDatesBannerInfo(unit.getCourseId(), true);\n+        }\n+    }\n+\n+    private void initInfoBanner(CourseBannerInfoModel courseBannerInfo) {\n+        if (courseBannerInfo == null) {\n+            infoBanner.setVisibility(View.GONE);\n+            return;\n+        }\n+        TextView textView = (TextView) infoBanner.findViewById(R.id.banner_info);\n+        Button button = (Button) infoBanner.findViewById(R.id.btn_shift_dates);\n+        String buttonText = \"\";\n+        // Currently we are only handling RESET_DATES case,\n+        // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+        switch (courseBannerInfo.getDatesBannerInfo().getCourseBannerType()) {\n+            case UPGRADE_TO_GRADED:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_graded));\n+                break;\n+            case UPGRADE_TO_RESET:\n+                textView.setText(getText(R.string.course_dates_banner_upgrade_to_reset));\n+                break;\n+            case RESET_DATES:\n+                textView.setText(getText(R.string.course_dates_banner_reset_date));\n+                buttonText = getContextOrThrow().getString(R.string.course_dates_banner_reset_date_button);\n+                break;\n+            case INFO_BANNER:\n+                textView.setText(getText(R.string.course_dates_info_banner));\n+                break;\n+            case BLANK:\n+                infoBanner.setVisibility(View.GONE);\n+                break;\n+        }\n+\n+        if (!TextUtils.isEmpty(textView.getText())) {\n+            if (!TextUtils.isEmpty(buttonText)) {\n+                button.setText(buttonText);\n+                button.setVisibility(View.VISIBLE);\n+                button.setOnClickListener(v -> {\n+                    courseDateViewModel.resetCourseDatesBanner(unit.getCourseId());\n+                });\n+            }\n+            infoBanner.setVisibility(View.VISIBLE);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc2NjU0NQ==", "bodyText": "no need to add an extra member, can be removed.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r515766545", "createdAt": "2020-11-02T06:44:49Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseUnitWebViewFragment.java", "diffHunk": "@@ -27,11 +44,16 @@\n     @InjectView(R.id.auth_webview)\n     private AuthenticatedWebView authWebView;\n \n+    @InjectView(R.id.info_banner)\n+    private LinearLayout infoBanner;\n+\n     @InjectView(R.id.swipe_container)\n     protected SwipeRefreshLayout swipeContainer;\n \n+    private CourseDateViewModel courseDateViewModel;\n     private PreLoadingListener preloadingListener;\n     private boolean isPageLoading = false;\n+    private boolean canFetchBannerInfo = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377acf4c08d816b7bcdb5b6014aabcbcbda4e0eb"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDk3Mzk1", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-523097395", "createdAt": "2020-11-04T07:28:38Z", "commit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNzoyODozOFrOHtLywA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MzoyOFrOHtOaGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MTE4NA==", "bodyText": "we can revert this change.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517141184", "createdAt": "2020-11-04T07:28:38Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/SnackbarErrorNotification.java", "diffHunk": "@@ -96,7 +112,7 @@ public void onDismissed(Snackbar transientBottomBar, int event) {\n      */\n     public void showOfflineError(final RefreshListener listener) {\n         showError(R.string.offline_text, FontAwesomeIcons.fa_wifi,\n-                R.string.lbl_reload, new View.OnClickListener() {\n+                R.string.lbl_reload, Snackbar.LENGTH_INDEFINITE, new View.OnClickListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MjQyMw==", "bodyText": "IMO setupCourseDatesBanner is more appropriate here.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517142423", "createdAt": "2020-11-04T07:31:30Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0ODM1OA==", "bodyText": "use as annotation instated of define datatype with a variable as parity with other Kotlin classes.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517148358", "createdAt": "2020-11-04T07:44:45Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {\n+            val context: Context = view.context\n+            val textView: TextView = view.findViewById(R.id.banner_info)\n+            val button: Button = view.findViewById(R.id.btn_shift_dates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MDQ5OQ==", "bodyText": "also need to check the buttonText is empty, cuz button should be hide after shifting the dates.\n        if (!TextUtils.isEmpty(textView.getText())) {\n            if (!TextUtils.isEmpty(buttonText)) {\n                button.text = buttonText\n                    button.visibility = View.VISIBLE\n                    button.setOnClickListener(clickListener)\n            }\n            view.visibility = View.VISIBLE\n        }\n        button.visibility = if (TextUtils.isEmpty(buttonText)) View.GONE else View.VISIBLE\ne.g", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517170499", "createdAt": "2020-11-04T08:29:34Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {\n+            val context: Context = view.context\n+            val textView: TextView = view.findViewById(R.id.banner_info)\n+            val button: Button = view.findViewById(R.id.btn_shift_dates)\n+            var buttonText = \"\"\n+            // Currently we are only handling RESET_DATES case,\n+            // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+            when (courseBannerInfoModel.datesBannerInfo.getCourseBannerType()) {\n+                CourseBannerType.UPGRADE_TO_GRADED -> textView.text = context.getText(R.string.course_dates_banner_upgrade_to_graded)\n+                CourseBannerType.UPGRADE_TO_RESET -> textView.text = context.getText(R.string.course_dates_banner_upgrade_to_reset)\n+                CourseBannerType.RESET_DATES -> {\n+                    textView.text = context.getText(R.string.course_dates_banner_reset_date)\n+                    buttonText = context.getString(R.string.course_dates_banner_reset_date_button)\n+                }\n+                CourseBannerType.INFO_BANNER -> textView.text = context.getText(R.string.course_dates_info_banner)\n+                CourseBannerType.BLANK -> view.visibility = View.GONE\n+            }\n+\n+            if (!TextUtils.isEmpty(textView.text)) {\n+                if (!TextUtils.isEmpty(buttonText)) {\n+                    button.text = buttonText\n+                    button.visibility = View.VISIBLE\n+                    button.setOnClickListener(clickListener)\n+                }\n+                view.visibility = View.VISIBLE\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjUyNg==", "bodyText": "we can remove R.string.course_dates_reset_title is not using any where else.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517172526", "createdAt": "2020-11-04T08:33:19Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseOutlineFragment.java", "diffHunk": "@@ -237,8 +236,7 @@ private void initObserver() {\n                             initDatesBanner(null);\n                             break;\n                         case ErrorMessage.COURSE_RESET_DATES_CODE:\n-                            AlertDialogFragment.newInstance(getString(R.string.course_dates_reset_title),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDQxOA==", "bodyText": "un-necessary change.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517174418", "createdAt": "2020-11-04T08:36:49Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseOutlineFragment.java", "diffHunk": "@@ -598,8 +583,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n                     https://stackoverflow.com/a/30552666\n                     https://github.com/material-components/material-components-android/commit/2cb77c9331cc3c6a5034aace0238b96508acf47d\n                      */\n-                    @SuppressLint(\"WrongConstant\")\n-                    final Snackbar snackbar = Snackbar.make(listView,\n+                    @SuppressLint(\"WrongConstant\") final Snackbar snackbar = Snackbar.make(listView,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MDgyMA==", "bodyText": "Utils class to populate the CourseDates banner view I think is more appropriate.", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517180820", "createdAt": "2020-11-04T08:48:03Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4NDAyNw==", "bodyText": "We can directly use the following code instead of\nobject CourseDateUtil {\n}", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517184027", "createdAt": "2020-11-04T08:53:28Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjY1MjQz", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-523265243", "createdAt": "2020-11-04T11:15:33Z", "commit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMToxNTozM1rOHtTsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjozMDowOVrOHtWDNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3MDY0NQ==", "bodyText": "done", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517270645", "createdAt": "2020-11-04T11:15:33Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/http/notifications/SnackbarErrorNotification.java", "diffHunk": "@@ -96,7 +112,7 @@ public void onDismissed(Snackbar transientBottomBar, int event) {\n      */\n     public void showOfflineError(final RefreshListener listener) {\n         showError(R.string.offline_text, FontAwesomeIcons.fa_wifi,\n-                R.string.lbl_reload, new View.OnClickListener() {\n+                R.string.lbl_reload, Snackbar.LENGTH_INDEFINITE, new View.OnClickListener() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MTE4NA=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3MTA4Nw==", "bodyText": "done", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517271087", "createdAt": "2020-11-04T11:16:18Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MDgyMA=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3MjA0NA==", "bodyText": "done", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517272044", "createdAt": "2020-11-04T11:18:05Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MjQyMw=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3MjI4OA==", "bodyText": "Done", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517272288", "createdAt": "2020-11-04T11:18:32Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {\n+            val context: Context = view.context\n+            val textView: TextView = view.findViewById(R.id.banner_info)\n+            val button: Button = view.findViewById(R.id.btn_shift_dates)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0ODM1OA=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3Mzc2NA==", "bodyText": "done", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517273764", "createdAt": "2020-11-04T11:21:07Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/CourseDateUtil.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.edx.mobile.util\n+\n+import android.content.Context\n+import android.text.TextUtils\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import org.edx.mobile.R\n+import org.edx.mobile.model.course.CourseBannerInfoModel\n+import org.edx.mobile.model.course.CourseBannerType\n+\n+/**\n+ * Utils class for CourseDates\n+ */\n+class CourseDateUtil {\n+    companion object {\n+\n+        @JvmStatic\n+        fun getCourseDatesBanner(view: View, courseBannerInfoModel: CourseBannerInfoModel, clickListener: View.OnClickListener) {\n+            val context: Context = view.context\n+            val textView: TextView = view.findViewById(R.id.banner_info)\n+            val button: Button = view.findViewById(R.id.btn_shift_dates)\n+            var buttonText = \"\"\n+            // Currently we are only handling RESET_DATES case,\n+            // TODO UPGRADE_TO_GRADED & UPGRADE_TO_RESET will be enable once we are allowed to do payment through mobile\n+            when (courseBannerInfoModel.datesBannerInfo.getCourseBannerType()) {\n+                CourseBannerType.UPGRADE_TO_GRADED -> textView.text = context.getText(R.string.course_dates_banner_upgrade_to_graded)\n+                CourseBannerType.UPGRADE_TO_RESET -> textView.text = context.getText(R.string.course_dates_banner_upgrade_to_reset)\n+                CourseBannerType.RESET_DATES -> {\n+                    textView.text = context.getText(R.string.course_dates_banner_reset_date)\n+                    buttonText = context.getString(R.string.course_dates_banner_reset_date_button)\n+                }\n+                CourseBannerType.INFO_BANNER -> textView.text = context.getText(R.string.course_dates_info_banner)\n+                CourseBannerType.BLANK -> view.visibility = View.GONE\n+            }\n+\n+            if (!TextUtils.isEmpty(textView.text)) {\n+                if (!TextUtils.isEmpty(buttonText)) {\n+                    button.text = buttonText\n+                    button.visibility = View.VISIBLE\n+                    button.setOnClickListener(clickListener)\n+                }\n+                view.visibility = View.VISIBLE\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MDQ5OQ=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3NTc5Ng==", "bodyText": "removed", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517275796", "createdAt": "2020-11-04T11:25:00Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseOutlineFragment.java", "diffHunk": "@@ -237,8 +236,7 @@ private void initObserver() {\n                             initDatesBanner(null);\n                             break;\n                         case ErrorMessage.COURSE_RESET_DATES_CODE:\n-                            AlertDialogFragment.newInstance(getString(R.string.course_dates_reset_title),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjUyNg=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwOTIzNg==", "bodyText": "removed", "url": "https://github.com/edx/edx-app-android/pull/1473#discussion_r517309236", "createdAt": "2020-11-04T12:30:09Z", "author": {"login": "omerhabib26"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseOutlineFragment.java", "diffHunk": "@@ -598,8 +583,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n                     https://stackoverflow.com/a/30552666\n                     https://github.com/material-components/material-components-android/commit/2cb77c9331cc3c6a5034aace0238b96508acf47d\n                      */\n-                    @SuppressLint(\"WrongConstant\")\n-                    final Snackbar snackbar = Snackbar.make(listView,\n+                    @SuppressLint(\"WrongConstant\") final Snackbar snackbar = Snackbar.make(listView,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDQxOA=="}, "originalCommit": {"oid": "81dedeb2f8056cf9d1336ce6235cb5fadff6043b"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzQzMzEz", "url": "https://github.com/edx/edx-app-android/pull/1473#pullrequestreview-523343313", "createdAt": "2020-11-04T13:09:41Z", "commit": {"oid": "523d2abf4ca2b31ed7d52b1d2eb5380dc2cd3c6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0170ec8ad733c1dd482b4361187e6a9abad76903", "author": {"user": {"login": "omerhabib26", "name": "Omer Habib"}}, "url": "https://github.com/edx/edx-app-android/commit/0170ec8ad733c1dd482b4361187e6a9abad76903", "committedDate": "2020-11-04T14:06:27Z", "message": "Add Course Reset Dates banner on Assessment View\n- LEARNER-7945\n- Implement CourseDatesViewModel into CourseUnitWebViewFragment.java\n- Added a custom snackbar for response msg\n- Also update the previously implemented dialog with snackbar"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "523d2abf4ca2b31ed7d52b1d2eb5380dc2cd3c6b", "author": {"user": {"login": "omerhabib26", "name": "Omer Habib"}}, "url": "https://github.com/edx/edx-app-android/commit/523d2abf4ca2b31ed7d52b1d2eb5380dc2cd3c6b", "committedDate": "2020-11-04T11:53:13Z", "message": "Address PR changes"}, "afterCommit": {"oid": "0170ec8ad733c1dd482b4361187e6a9abad76903", "author": {"user": {"login": "omerhabib26", "name": "Omer Habib"}}, "url": "https://github.com/edx/edx-app-android/commit/0170ec8ad733c1dd482b4361187e6a9abad76903", "committedDate": "2020-11-04T14:06:27Z", "message": "Add Course Reset Dates banner on Assessment View\n- LEARNER-7945\n- Implement CourseDatesViewModel into CourseUnitWebViewFragment.java\n- Added a custom snackbar for response msg\n- Also update the previously implemented dialog with snackbar"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4244, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}