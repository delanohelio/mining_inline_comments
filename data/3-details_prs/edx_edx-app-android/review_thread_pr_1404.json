{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjcwNDk3", "number": 1404, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyOTozNVrOD0uuLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyOTozNVrOD0uuLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjE4MDMxOnYy", "diffSide": "RIGHT", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/BaseCourseUnitVideoFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyOTozNVrOGJzv5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyOTozNVrOGJzv5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzODIxNQ==", "bodyText": "After this logic, we are still able to produce intentionally by following steps,\n\nComment out the statement at Line# 238\nAdd getActivity().finish() after Line # 186\n\nthat can be fix by usin the following block of code:\n    @Override\n    public void downloadTranscript() {\n        Activity activity = getActivity();\n        if (activity != null) {\n            TranscriptModel transcript = getTranscriptModel();\n            String transcriptUrl = LocaleUtils.getTranscriptURL(activity, transcript);\n            transcriptManager.downloadTranscriptsForVideo(transcriptUrl, (TimedTextObject transcriptTimedTextObject) -> {\n                subtitlesObj = transcriptTimedTextObject;\n                if (!activity.isDestroyed()) {\n                    initTranscripts();\n                }\n            });\n        }\n    }", "url": "https://github.com/edx/edx-app-android/pull/1404#discussion_r412938215", "createdAt": "2020-04-22T12:29:35Z", "author": {"login": "farhan-arshad-dev"}, "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/BaseCourseUnitVideoFragment.java", "diffHunk": "@@ -181,14 +181,16 @@ public void setUserVisibleHint(boolean isVisibleToUser) {\n \n     @Override\n     public void downloadTranscript() {\n-        TranscriptModel transcript = getTranscriptModel();\n-        String transcriptUrl = LocaleUtils.getTranscriptURL(getActivity(), transcript);\n-        transcriptManager.downloadTranscriptsForVideo(transcriptUrl, (TimedTextObject transcriptTimedTextObject) -> {\n-            subtitlesObj = transcriptTimedTextObject;\n-            if (!getActivity().isDestroyed()) {\n-                initTranscripts();\n-            }\n-        });\n+        if (getActivity() != null) {\n+            TranscriptModel transcript = getTranscriptModel();\n+            String transcriptUrl = LocaleUtils.getTranscriptURL(getActivity(), transcript);\n+            transcriptManager.downloadTranscriptsForVideo(transcriptUrl, (TimedTextObject transcriptTimedTextObject) -> {\n+                subtitlesObj = transcriptTimedTextObject;\n+                if (!getActivity().isDestroyed()) {\n+                    initTranscripts();\n+                }\n+            });\n+        }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1f8df8a6513fa66e79804adb2a0bf5850542131"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 516, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}