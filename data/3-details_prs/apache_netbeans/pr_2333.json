{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTk4NjIw", "number": 2333, "title": "[NETBEANS-4745] Include immutable objects for fxml editor identification", "bodyText": "Using NamedArg annotation on constructors parameters, find immutable objects that are OK in fxml editor.\n@sdedic  could you take a look (you wrote the original code). I'm not that familiar with Mirror stuff or with fxml...", "createdAt": "2020-08-27T23:15:00Z", "url": "https://github.com/apache/netbeans/pull/2333", "merged": true, "mergeCommit": {"oid": "6a947454a8f2cf891e5f66ca4aad9943d3832b25"}, "closed": true, "closedAt": "2020-09-18T14:04:05Z", "author": {"login": "errael"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDG_B4gH2gAyNDc0OTk4NjIwOjM3YmE0ZDJhY2ZmZTI1NGZjYzExNjMwNGE0N2IwMzkwNzkwODFhOWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI5QWygFqTQ4ODExODI0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37ba4d2acffe254fcc116304a47b039079081a9c", "author": {"user": {"login": "errael", "name": "errael"}}, "url": "https://github.com/apache/netbeans/commit/37ba4d2acffe254fcc116304a47b039079081a9c", "committedDate": "2020-08-27T21:07:17Z", "message": "[NETBEANS-4745] Include immutable objects for fxml editor identification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4Mzk0MzM0", "url": "https://github.com/apache/netbeans/pull/2333#pullrequestreview-478394334", "createdAt": "2020-08-31T07:51:02Z", "commit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzo1MTowM1rOHJuTvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODoxNDoxOFrOHJvA0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1Nzk0OA==", "bodyText": "I would suggest to use either ((TypeElement)(am.getAnnotationType()).asElement()).getQualifiedName().toString() or use compilationInfo.getElements().getTypeElement(NAMED_ARG) and compare asElement() to it. toString() is a diagnostic method, may change.", "url": "https://github.com/apache/netbeans/pull/2333#discussion_r479957948", "createdAt": "2020-08-31T07:51:03Z", "author": {"login": "sdedic"}, "path": "javafx/javafx2.editor/src/org/netbeans/modules/javafx2/editor/completion/beans/BeanModelBuilder.java", "diffHunk": "@@ -310,6 +310,78 @@ private void processGetters() {\n                 addMapProperty(m, n);\n             }\n         }\n+        if (allProperties.isEmpty() && !resultInfo.isFxInstance()) {\n+            processGettersCheckForImmutables();\n+        }\n+    }\n+\n+    private static final String NAMED_ARG = \"javafx.beans.NamedArg\";\n+\n+    /** Some javafx classes, such as Insets, are immutable and do not have\n+     * no argument constructors or setters; so they are not found.\n+     * Accept a property if there is a getter with a corresponding\n+     * constructor param declared with NamedArg annotation; use constructor\n+     * with the most NamedArg parameters.\n+     * <p/>\n+     * One alternate strategy would be to provide a document with lines like:\n+     * \"Insets: top bottom left right\" and use this info.\n+     */\n+    private void processGettersCheckForImmutables() {\n+        Set<String> propsConstructor = Collections.emptySet();\n+        Set<String> props1 = new HashSet<>();\n+        CHECK_CONSTR: for (ExecutableElement c : ElementFilter.constructorsIn(classElement.getEnclosedElements())) {\n+            props1.clear();\n+\n+            CHECK_PARAMS: for (VariableElement p : c.getParameters()) {\n+                for (AnnotationMirror am : p.getAnnotationMirrors()) {\n+                    if (NAMED_ARG.equals(am.getAnnotationType().toString())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2Mzc3Mw==", "bodyText": "Better check the Map.Entry's key for \"value\", there's also a defaultValue declared. Also it may be better to use getValue() to get the String instead of stripping \" from toString().", "url": "https://github.com/apache/netbeans/pull/2333#discussion_r479963773", "createdAt": "2020-08-31T08:02:43Z", "author": {"login": "sdedic"}, "path": "javafx/javafx2.editor/src/org/netbeans/modules/javafx2/editor/completion/beans/BeanModelBuilder.java", "diffHunk": "@@ -310,6 +310,78 @@ private void processGetters() {\n                 addMapProperty(m, n);\n             }\n         }\n+        if (allProperties.isEmpty() && !resultInfo.isFxInstance()) {\n+            processGettersCheckForImmutables();\n+        }\n+    }\n+\n+    private static final String NAMED_ARG = \"javafx.beans.NamedArg\";\n+\n+    /** Some javafx classes, such as Insets, are immutable and do not have\n+     * no argument constructors or setters; so they are not found.\n+     * Accept a property if there is a getter with a corresponding\n+     * constructor param declared with NamedArg annotation; use constructor\n+     * with the most NamedArg parameters.\n+     * <p/>\n+     * One alternate strategy would be to provide a document with lines like:\n+     * \"Insets: top bottom left right\" and use this info.\n+     */\n+    private void processGettersCheckForImmutables() {\n+        Set<String> propsConstructor = Collections.emptySet();\n+        Set<String> props1 = new HashSet<>();\n+        CHECK_CONSTR: for (ExecutableElement c : ElementFilter.constructorsIn(classElement.getEnclosedElements())) {\n+            props1.clear();\n+\n+            CHECK_PARAMS: for (VariableElement p : c.getParameters()) {\n+                for (AnnotationMirror am : p.getAnnotationMirrors()) {\n+                    if (NAMED_ARG.equals(am.getAnnotationType().toString())) {\n+                        String prop = am.getElementValues().values().iterator().next().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2NzU0OQ==", "bodyText": "Leftover, or turn to Logger.", "url": "https://github.com/apache/netbeans/pull/2333#discussion_r479967549", "createdAt": "2020-08-31T08:10:26Z", "author": {"login": "sdedic"}, "path": "javafx/javafx2.editor/src/org/netbeans/modules/javafx2/editor/completion/beans/BeanModelBuilder.java", "diffHunk": "@@ -310,6 +310,78 @@ private void processGetters() {\n                 addMapProperty(m, n);\n             }\n         }\n+        if (allProperties.isEmpty() && !resultInfo.isFxInstance()) {\n+            processGettersCheckForImmutables();\n+        }\n+    }\n+\n+    private static final String NAMED_ARG = \"javafx.beans.NamedArg\";\n+\n+    /** Some javafx classes, such as Insets, are immutable and do not have\n+     * no argument constructors or setters; so they are not found.\n+     * Accept a property if there is a getter with a corresponding\n+     * constructor param declared with NamedArg annotation; use constructor\n+     * with the most NamedArg parameters.\n+     * <p/>\n+     * One alternate strategy would be to provide a document with lines like:\n+     * \"Insets: top bottom left right\" and use this info.\n+     */\n+    private void processGettersCheckForImmutables() {\n+        Set<String> propsConstructor = Collections.emptySet();\n+        Set<String> props1 = new HashSet<>();\n+        CHECK_CONSTR: for (ExecutableElement c : ElementFilter.constructorsIn(classElement.getEnclosedElements())) {\n+            props1.clear();\n+\n+            CHECK_PARAMS: for (VariableElement p : c.getParameters()) {\n+                for (AnnotationMirror am : p.getAnnotationMirrors()) {\n+                    if (NAMED_ARG.equals(am.getAnnotationType().toString())) {\n+                        String prop = am.getElementValues().values().iterator().next().toString();\n+                        // Strip off leading/trailing quotes\n+                        props1.add(prop.substring(1, prop.length() - 1));\n+                        continue CHECK_PARAMS;\n+                    }\n+                }\n+                // At least one of the parameters wasn't NAMED_ARG; skip it.\n+                continue CHECK_CONSTR;\n+            }\n+            if (propsConstructor.size() < props1.size()) {\n+                propsConstructor = new HashSet<>(props1);\n+            }\n+        }\n+\n+        if (propsConstructor.isEmpty()) {\n+            return;\n+        }\n+\n+        // problem if not all constructor args are covered?\n+        boolean fxInstance = false;\n+        for (ExecutableElement m : getters) {\n+            String n = getPropertyName(m.getSimpleName().toString());\n+            if (propsConstructor.contains(n)) {\n+                addGetterOnlyProperty(m, n);\n+                fxInstance = true;\n+            }\n+        }\n+        resultInfo.setFxInstance(fxInstance);\n+\n+        // if (fxInstance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2OTQ4OA==", "bodyText": "This value is not used anywhere after construction - correct ?", "url": "https://github.com/apache/netbeans/pull/2333#discussion_r479969488", "createdAt": "2020-08-31T08:14:18Z", "author": {"login": "sdedic"}, "path": "javafx/javafx2.editor/src/org/netbeans/modules/javafx2/editor/completion/beans/FxDefinitionKind.java", "diffHunk": "@@ -47,6 +47,11 @@\n      */\n     LIST,\n \n+    /**\n+     * Readonly/immutable object, type is getter return type.\n+     */\n+    GETTER,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33ebc27e64e1e2557b004dc10b9e35698d65143b", "author": {"user": {"login": "errael", "name": "errael"}}, "url": "https://github.com/apache/netbeans/commit/33ebc27e64e1e2557b004dc10b9e35698d65143b", "committedDate": "2020-08-27T21:07:17Z", "message": "[NETBEANS-4745] Include immutable objects for fxml editor identification"}, "afterCommit": {"oid": "37ba4d2acffe254fcc116304a47b039079081a9c", "author": {"user": {"login": "errael", "name": "errael"}}, "url": "https://github.com/apache/netbeans/commit/37ba4d2acffe254fcc116304a47b039079081a9c", "committedDate": "2020-08-27T21:07:17Z", "message": "[NETBEANS-4745] Include immutable objects for fxml editor identification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTE4MjQ2", "url": "https://github.com/apache/netbeans/pull/2333#pullrequestreview-488118246", "createdAt": "2020-09-14T20:31:05Z", "commit": {"oid": "37ba4d2acffe254fcc116304a47b039079081a9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4004, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}