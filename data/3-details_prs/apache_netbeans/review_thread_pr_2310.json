{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjI5OTAx", "number": 2310, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDo1MDozN1rOEYAABQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxOTowMlrOEbnvYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjAxMjg1OnYy", "diffSide": "RIGHT", "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDo1MDozN1rOHAGTbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToxNToyN1rOHAHCEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg2NTMyNQ==", "bodyText": "Please reformat.", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r469865325", "createdAt": "2020-08-13T10:50:37Z", "author": {"login": "junichi11"}, "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "diffHunk": "@@ -305,7 +305,11 @@ public RefactoringUI create(CompilationInfo info, TreePathHandle[] handles, File\n                 Collection<TreePathHandle> tphs = new ArrayList<TreePathHandle>();\n                 SourcePositions sourcePositions = info.getTrees().getSourcePositions();\n                 for (Element ele : e.getEnclosedElements()) {\n-                    Tree leaf = info.getTrees().getPath(ele).getLeaf();\n+                    TreePath path = info.getTrees().getPath(ele);\n+                    if(path == null){\n+                        continue;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d28939f3fd13b7e9adfc2ee8cc82b2a3613e98"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg3NzI2NQ==", "bodyText": "comment addressed", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r469877265", "createdAt": "2020-08-13T11:15:27Z", "author": {"login": "singh-akhilesh"}, "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "diffHunk": "@@ -305,7 +305,11 @@ public RefactoringUI create(CompilationInfo info, TreePathHandle[] handles, File\n                 Collection<TreePathHandle> tphs = new ArrayList<TreePathHandle>();\n                 SourcePositions sourcePositions = info.getTrees().getSourcePositions();\n                 for (Element ele : e.getEnclosedElements()) {\n-                    Tree leaf = info.getTrees().getPath(ele).getLeaf();\n+                    TreePath path = info.getTrees().getPath(ele);\n+                    if(path == null){\n+                        continue;\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg2NTMyNQ=="}, "originalCommit": {"oid": "b1d28939f3fd13b7e9adfc2ee8cc82b2a3613e98"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Mzk3ODk1OnYy", "diffSide": "RIGHT", "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxODozMlrOHFqBOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNzowNDo0OVrOHGKT9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MzM2OA==", "bodyText": "I assume this is null for the synthetic record members, etc., right?", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r475693368", "createdAt": "2020-08-24T15:18:32Z", "author": {"login": "lahodaj"}, "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "diffHunk": "@@ -305,7 +305,11 @@ public RefactoringUI create(CompilationInfo info, TreePathHandle[] handles, File\n                 Collection<TreePathHandle> tphs = new ArrayList<TreePathHandle>();\n                 SourcePositions sourcePositions = info.getTrees().getSourcePositions();\n                 for (Element ele : e.getEnclosedElements()) {\n-                    Tree leaf = info.getTrees().getPath(ele).getLeaf();\n+                    TreePath path = info.getTrees().getPath(ele);\n+                    if (path == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2149dd9559070fddca2e12f5acb2798d923ed35a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyMjQ1NA==", "bodyText": "Yes, Its for synthetic record members.", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r476222454", "createdAt": "2020-08-25T07:04:49Z", "author": {"login": "singh-akhilesh"}, "path": "java/refactoring.java/src/org/netbeans/modules/refactoring/java/ui/MoveClassUI.java", "diffHunk": "@@ -305,7 +305,11 @@ public RefactoringUI create(CompilationInfo info, TreePathHandle[] handles, File\n                 Collection<TreePathHandle> tphs = new ArrayList<TreePathHandle>();\n                 SourcePositions sourcePositions = info.getTrees().getSourcePositions();\n                 for (Element ele : e.getEnclosedElements()) {\n-                    Tree leaf = info.getTrees().getPath(ele).getLeaf();\n+                    TreePath path = info.getTrees().getPath(ele);\n+                    if (path == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MzM2OA=="}, "originalCommit": {"oid": "2149dd9559070fddca2e12f5acb2798d923ed35a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Mzk4MTEzOnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/api/java/source/TreeUtilities.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToxOTowMlrOHFqClA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNzowNzowMFrOHGKYOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MzcxNg==", "bodyText": "We could make CLASS_TREE_KINDS immutable, although not necessarily in this PR.", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r475693716", "createdAt": "2020-08-24T15:19:02Z", "author": {"login": "lahodaj"}, "path": "java/java.source.base/src/org/netbeans/api/java/source/TreeUtilities.java", "diffHunk": "@@ -124,7 +125,14 @@\n      * @since 0.67\n      */\n     public static final Set<Kind> CLASS_TREE_KINDS = EnumSet.of(Kind.ANNOTATION_TYPE, Kind.CLASS, Kind.ENUM, Kind.INTERFACE);\n-    \n+    static {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2149dd9559070fddca2e12f5acb2798d923ed35a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyMzU0Ng==", "bodyText": "Yes, we could. Will make immutable later.", "url": "https://github.com/apache/netbeans/pull/2310#discussion_r476223546", "createdAt": "2020-08-25T07:07:00Z", "author": {"login": "singh-akhilesh"}, "path": "java/java.source.base/src/org/netbeans/api/java/source/TreeUtilities.java", "diffHunk": "@@ -124,7 +125,14 @@\n      * @since 0.67\n      */\n     public static final Set<Kind> CLASS_TREE_KINDS = EnumSet.of(Kind.ANNOTATION_TYPE, Kind.CLASS, Kind.ENUM, Kind.INTERFACE);\n-    \n+    static {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MzcxNg=="}, "originalCommit": {"oid": "2149dd9559070fddca2e12f5acb2798d923ed35a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 378, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}