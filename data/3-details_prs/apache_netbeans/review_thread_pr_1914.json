{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDEyMjkz", "number": 1914, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1NzowMlrODctA3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1NzoyOFrODctBVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDI0MjIxOnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1NzowMlrOFk4lCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDozNjozMFrOFlH35g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyMDA0Mg==", "bodyText": "Please use TreeShims.RECORD", "url": "https://github.com/apache/netbeans/pull/1914#discussion_r374220042", "createdAt": "2020-02-03T16:57:02Z", "author": {"login": "arusinha"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "diffHunk": "@@ -58,7 +58,7 @@\n      * For JCTree instances that have no associated source position.\n      */\n     public static final int NOPOS = -2;\n-    \n+    public static final String RECORD = \"RECORD\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc13fef0165adcd1495c32755a5a318718a8d7e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MDYzMA==", "bodyText": "comment addressed", "url": "https://github.com/apache/netbeans/pull/1914#discussion_r374470630", "createdAt": "2020-02-04T04:36:30Z", "author": {"login": "singh-akhilesh"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "diffHunk": "@@ -58,7 +58,7 @@\n      * For JCTree instances that have no associated source position.\n      */\n     public static final int NOPOS = -2;\n-    \n+    public static final String RECORD = \"RECORD\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyMDA0Mg=="}, "originalCommit": {"oid": "7fc13fef0165adcd1495c32755a5a318718a8d7e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDI0MzQwOnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1NzoyOFrOFk4lyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDozNjo0MVrOFlH4CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyMDIzMw==", "bodyText": "Please use TreeShims.RECORD", "url": "https://github.com/apache/netbeans/pull/1914#discussion_r374220233", "createdAt": "2020-02-03T16:57:28Z", "author": {"login": "arusinha"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "diffHunk": "@@ -314,7 +314,7 @@ public int prepare(final int startPos, StringBuilder aHead, StringBuilder aTail)\n                 do {\n                     Tree t = cut.getTypeDecls().get(tdpos);\n                     typeDeclStart = (int) positions.getStartPosition(cut, t);\n-                    if (TreeUtilities.CLASS_TREE_KINDS.contains(t.getKind())) {\n+                    if (TreeUtilities.CLASS_TREE_KINDS.contains(t.getKind()) || t.getKind().toString().equals(RECORD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc13fef0165adcd1495c32755a5a318718a8d7e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MDY2NA==", "bodyText": "comment addressed", "url": "https://github.com/apache/netbeans/pull/1914#discussion_r374470664", "createdAt": "2020-02-04T04:36:41Z", "author": {"login": "singh-akhilesh"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/PositionEstimator.java", "diffHunk": "@@ -314,7 +314,7 @@ public int prepare(final int startPos, StringBuilder aHead, StringBuilder aTail)\n                 do {\n                     Tree t = cut.getTypeDecls().get(tdpos);\n                     typeDeclStart = (int) positions.getStartPosition(cut, t);\n-                    if (TreeUtilities.CLASS_TREE_KINDS.contains(t.getKind())) {\n+                    if (TreeUtilities.CLASS_TREE_KINDS.contains(t.getKind()) || t.getKind().toString().equals(RECORD)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyMDIzMw=="}, "originalCommit": {"oid": "7fc13fef0165adcd1495c32755a5a318718a8d7e"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 639, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}