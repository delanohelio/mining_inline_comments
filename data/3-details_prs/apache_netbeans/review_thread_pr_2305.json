{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTUzMjY3", "number": 2305, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo0ODo0MFrOEmBsrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo0ODo0MFrOEmBsrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzA5MTY0OnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo0ODo0MFrOHV0WIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQyMDoyMDo0OFrOHfqUxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc3Ng==", "bodyText": "I suspect this will disable \"sequential\" processing when nb-javac is installed, right? Or do I miss something here?", "url": "https://github.com/apache/netbeans/pull/2305#discussion_r492639776", "createdAt": "2020-09-22T10:48:40Z", "author": {"login": "lahodaj"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "diffHunk": "@@ -424,9 +434,28 @@ private void parseImpl(\n                     break;\n                 default:\n                     init (snapshot, task, false);\n+                    DiagnosticListener<JavaFileObject> diagnosticListener;\n+                    JavacTaskImpl javacTask;\n+                    boolean oneInstanceJava=Boolean.getBoolean(\"java.enable.single.javac\") && this.snapshotSize <= this.MAX_FILE_SIZE;\n+                    if (sequentialParsing == null && ciImpl == null && oneInstanceJava) {\n+                        List<JavaFileObject> jfos = new ArrayList<>();\n+                        for (Snapshot s : snapshots) {\n+                            jfos.add(FileObjects.sourceFileObject(s.getSource().getFileObject(), root, JavaFileFilterQuery.getFilter(s.getSource().getFileObject()), s.getText()));\n+                        }\n+                        diagnosticListener = new CompilationInfoImpl.DiagnosticListenerImpl(this.root, jfos.get(0), this.cpInfo);\n+                        javacTask = JavacParser.createJavacTask(this.file, jfos, this.root, this.cpInfo,\n+                                this, diagnosticListener, false);\n+                    } else if (ciImpl != null &&  oneInstanceJava) {\n+                        diagnosticListener = ciImpl.getDiagnosticListener();\n+                        javacTask = ciImpl.getJavacTask();\n+                        oldParsedTrees=ciImpl.getParsedTrees();\n+                    } else {\n+                        diagnosticListener = null;\n+                        javacTask = null;\n+                    }\n                     ciImpl = createCurrentInfo(this, file, root, snapshot,\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getJavacTask(),\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getDiagnosticListener());\n+                        javacTask,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c73e078e43cbcea4c36dfe72b2ea5e25b9e2f66"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg0MjI4MQ==", "bodyText": "This is handled above on the if-else conditions starting at line 440. If nb-javac is installed then sequential parsing will not be null and remaining code will be same as of before this PR.", "url": "https://github.com/apache/netbeans/pull/2305#discussion_r492842281", "createdAt": "2020-09-22T15:43:38Z", "author": {"login": "Akshay-Gupta-Oracle"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "diffHunk": "@@ -424,9 +434,28 @@ private void parseImpl(\n                     break;\n                 default:\n                     init (snapshot, task, false);\n+                    DiagnosticListener<JavaFileObject> diagnosticListener;\n+                    JavacTaskImpl javacTask;\n+                    boolean oneInstanceJava=Boolean.getBoolean(\"java.enable.single.javac\") && this.snapshotSize <= this.MAX_FILE_SIZE;\n+                    if (sequentialParsing == null && ciImpl == null && oneInstanceJava) {\n+                        List<JavaFileObject> jfos = new ArrayList<>();\n+                        for (Snapshot s : snapshots) {\n+                            jfos.add(FileObjects.sourceFileObject(s.getSource().getFileObject(), root, JavaFileFilterQuery.getFilter(s.getSource().getFileObject()), s.getText()));\n+                        }\n+                        diagnosticListener = new CompilationInfoImpl.DiagnosticListenerImpl(this.root, jfos.get(0), this.cpInfo);\n+                        javacTask = JavacParser.createJavacTask(this.file, jfos, this.root, this.cpInfo,\n+                                this, diagnosticListener, false);\n+                    } else if (ciImpl != null &&  oneInstanceJava) {\n+                        diagnosticListener = ciImpl.getDiagnosticListener();\n+                        javacTask = ciImpl.getJavacTask();\n+                        oldParsedTrees=ciImpl.getParsedTrees();\n+                    } else {\n+                        diagnosticListener = null;\n+                        javacTask = null;\n+                    }\n                     ciImpl = createCurrentInfo(this, file, root, snapshot,\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getJavacTask(),\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getDiagnosticListener());\n+                        javacTask,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc3Ng=="}, "originalCommit": {"oid": "8c73e078e43cbcea4c36dfe72b2ea5e25b9e2f66"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcyMTIxMA==", "bodyText": "Is this OK @jlahoda, can this PR be merged now??", "url": "https://github.com/apache/netbeans/pull/2305#discussion_r495721210", "createdAt": "2020-09-28T06:47:36Z", "author": {"login": "Akshay-Gupta-Oracle"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "diffHunk": "@@ -424,9 +434,28 @@ private void parseImpl(\n                     break;\n                 default:\n                     init (snapshot, task, false);\n+                    DiagnosticListener<JavaFileObject> diagnosticListener;\n+                    JavacTaskImpl javacTask;\n+                    boolean oneInstanceJava=Boolean.getBoolean(\"java.enable.single.javac\") && this.snapshotSize <= this.MAX_FILE_SIZE;\n+                    if (sequentialParsing == null && ciImpl == null && oneInstanceJava) {\n+                        List<JavaFileObject> jfos = new ArrayList<>();\n+                        for (Snapshot s : snapshots) {\n+                            jfos.add(FileObjects.sourceFileObject(s.getSource().getFileObject(), root, JavaFileFilterQuery.getFilter(s.getSource().getFileObject()), s.getText()));\n+                        }\n+                        diagnosticListener = new CompilationInfoImpl.DiagnosticListenerImpl(this.root, jfos.get(0), this.cpInfo);\n+                        javacTask = JavacParser.createJavacTask(this.file, jfos, this.root, this.cpInfo,\n+                                this, diagnosticListener, false);\n+                    } else if (ciImpl != null &&  oneInstanceJava) {\n+                        diagnosticListener = ciImpl.getDiagnosticListener();\n+                        javacTask = ciImpl.getJavacTask();\n+                        oldParsedTrees=ciImpl.getParsedTrees();\n+                    } else {\n+                        diagnosticListener = null;\n+                        javacTask = null;\n+                    }\n                     ciImpl = createCurrentInfo(this, file, root, snapshot,\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getJavacTask(),\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getDiagnosticListener());\n+                        javacTask,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc3Ng=="}, "originalCommit": {"oid": "8c73e078e43cbcea4c36dfe72b2ea5e25b9e2f66"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4NTEwMA==", "bodyText": "I note that the if on line 448 is also checking oneInstanceJava. So it seems to me that is sequentialParsing != null and oneInstanceJava == false, the it will always fall to the else section and go file-by-file. Or what do I miss?", "url": "https://github.com/apache/netbeans/pull/2305#discussion_r496585100", "createdAt": "2020-09-29T09:46:01Z", "author": {"login": "lahodaj"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "diffHunk": "@@ -424,9 +434,28 @@ private void parseImpl(\n                     break;\n                 default:\n                     init (snapshot, task, false);\n+                    DiagnosticListener<JavaFileObject> diagnosticListener;\n+                    JavacTaskImpl javacTask;\n+                    boolean oneInstanceJava=Boolean.getBoolean(\"java.enable.single.javac\") && this.snapshotSize <= this.MAX_FILE_SIZE;\n+                    if (sequentialParsing == null && ciImpl == null && oneInstanceJava) {\n+                        List<JavaFileObject> jfos = new ArrayList<>();\n+                        for (Snapshot s : snapshots) {\n+                            jfos.add(FileObjects.sourceFileObject(s.getSource().getFileObject(), root, JavaFileFilterQuery.getFilter(s.getSource().getFileObject()), s.getText()));\n+                        }\n+                        diagnosticListener = new CompilationInfoImpl.DiagnosticListenerImpl(this.root, jfos.get(0), this.cpInfo);\n+                        javacTask = JavacParser.createJavacTask(this.file, jfos, this.root, this.cpInfo,\n+                                this, diagnosticListener, false);\n+                    } else if (ciImpl != null &&  oneInstanceJava) {\n+                        diagnosticListener = ciImpl.getDiagnosticListener();\n+                        javacTask = ciImpl.getJavacTask();\n+                        oldParsedTrees=ciImpl.getParsedTrees();\n+                    } else {\n+                        diagnosticListener = null;\n+                        javacTask = null;\n+                    }\n                     ciImpl = createCurrentInfo(this, file, root, snapshot,\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getJavacTask(),\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getDiagnosticListener());\n+                        javacTask,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc3Ng=="}, "originalCommit": {"oid": "8c73e078e43cbcea4c36dfe72b2ea5e25b9e2f66"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2MTM0OQ==", "bodyText": "You're correct @jlahoda I've removed the oninstance variable form second if. and added (sequentialParsing != null || oneInstanceJava) instead.\nNow this PR is final", "url": "https://github.com/apache/netbeans/pull/2305#discussion_r502961349", "createdAt": "2020-10-11T20:20:48Z", "author": {"login": "Akshay-Gupta-Oracle"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/parsing/JavacParser.java", "diffHunk": "@@ -424,9 +434,28 @@ private void parseImpl(\n                     break;\n                 default:\n                     init (snapshot, task, false);\n+                    DiagnosticListener<JavaFileObject> diagnosticListener;\n+                    JavacTaskImpl javacTask;\n+                    boolean oneInstanceJava=Boolean.getBoolean(\"java.enable.single.javac\") && this.snapshotSize <= this.MAX_FILE_SIZE;\n+                    if (sequentialParsing == null && ciImpl == null && oneInstanceJava) {\n+                        List<JavaFileObject> jfos = new ArrayList<>();\n+                        for (Snapshot s : snapshots) {\n+                            jfos.add(FileObjects.sourceFileObject(s.getSource().getFileObject(), root, JavaFileFilterQuery.getFilter(s.getSource().getFileObject()), s.getText()));\n+                        }\n+                        diagnosticListener = new CompilationInfoImpl.DiagnosticListenerImpl(this.root, jfos.get(0), this.cpInfo);\n+                        javacTask = JavacParser.createJavacTask(this.file, jfos, this.root, this.cpInfo,\n+                                this, diagnosticListener, false);\n+                    } else if (ciImpl != null &&  oneInstanceJava) {\n+                        diagnosticListener = ciImpl.getDiagnosticListener();\n+                        javacTask = ciImpl.getJavacTask();\n+                        oldParsedTrees=ciImpl.getParsedTrees();\n+                    } else {\n+                        diagnosticListener = null;\n+                        javacTask = null;\n+                    }\n                     ciImpl = createCurrentInfo(this, file, root, snapshot,\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getJavacTask(),\n-                        sequentialParsing == null || ciImpl == null ? null : ciImpl.getDiagnosticListener());\n+                        javacTask,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc3Ng=="}, "originalCommit": {"oid": "8c73e078e43cbcea4c36dfe72b2ea5e25b9e2f66"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}