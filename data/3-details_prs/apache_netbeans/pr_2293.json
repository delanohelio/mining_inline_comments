{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDAxMTAy", "number": 2293, "title": "Handling of switch expressions and rule cases in Flow and NPECheck hint.", "bodyText": "", "createdAt": "2020-08-03T21:16:25Z", "url": "https://github.com/apache/netbeans/pull/2293", "merged": true, "mergeCommit": {"oid": "b6b73e7575b85a526a538ccb9b661f89929332f9"}, "closed": true, "closedAt": "2020-10-22T21:24:20Z", "author": {"login": "jlahoda"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6hMXmAH2gAyNDYyNDAxMTAyOjVkMTQzZmU1NzgzOWU4YWU5ZjRhMDRiZmJiMjFmMzAyNjlhMjY0MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVIyjPAFqTUxNTEzMDI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d143fe57839e8ae9f4a04bfbb21f30269a26430", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/5d143fe57839e8ae9f4a04bfbb21f30269a26430", "committedDate": "2020-08-01T04:34:04Z", "message": "Handling of switch expressions and rule cases in Flow and NPECheck hint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b3fb796df9277d4949f20dad4bc4c78cc93bbd", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/29b3fb796df9277d4949f20dad4bc4c78cc93bbd", "committedDate": "2020-08-02T06:20:25Z", "message": "Using a correct overload if TreeScanner.scan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad7dc29e3b859ee565db863e58ef5b6e35ff0de7", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/ad7dc29e3b859ee565db863e58ef5b6e35ff0de7", "committedDate": "2020-08-02T16:13:32Z", "message": "Fixing FlowTest on JDK 8."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbc768528dcd822d55592ee0da1567280fe522a", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/2dbc768528dcd822d55592ee0da1567280fe522a", "committedDate": "2020-08-03T06:45:41Z", "message": "Attempting to improve stability of HideFieldByVarTest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDkxNzg5", "url": "https://github.com/apache/netbeans/pull/2293#pullrequestreview-460491789", "createdAt": "2020-08-04T04:44:10Z", "commit": {"oid": "2dbc768528dcd822d55592ee0da1567280fe522a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNDo0NDoxMFrOG7Q5EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNDo0NDoxMFrOG7Q5EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc5NTkyMQ==", "bodyText": "Jackpot:\nwarning: Redundant type arguments in new expression (use diamond operator instead).", "url": "https://github.com/apache/netbeans/pull/2293#discussion_r464795921", "createdAt": "2020-08-04T04:44:10Z", "author": {"login": "jlahoda-jackpot"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/introduce/Flow.java", "diffHunk": "@@ -1172,37 +1207,63 @@ public Boolean visitBreak(BreakTree node, ConstructorData p) {\n \n             Tree target = info.getTreeUtilities().getBreakContinueTargetTree(getCurrentPath());\n             \n-            resumeAfter(target, variable2State);\n+            breakTo(target);\n \n-            variable2State = new HashMap< Element, State>();\n+            return null;\n+        }\n+\n+        public Boolean visitYield(Tree node, ConstructorData p) {\n+            scan(TreeShims.getYieldValue(node), p);\n+\n+            Tree target = info.getTreeUtilities().getBreakContinueTargetTree(getCurrentPath());\n             \n+            breakTo(target);\n+\n             return null;\n         }\n \n+        private void breakTo(Tree target) {\n+            resumeAfter(target, variable2State);\n+\n+            variable2State = new HashMap< Element, State>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbc768528dcd822d55592ee0da1567280fe522a"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzQ5NzA0", "url": "https://github.com/apache/netbeans/pull/2293#pullrequestreview-461349704", "createdAt": "2020-08-05T05:28:34Z", "commit": {"oid": "2dbc768528dcd822d55592ee0da1567280fe522a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyODozNFrOG76vFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyODozNFrOG76vFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MTQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        variable2State = new HashMap< Element, State>();\n          \n          \n            \n                        variable2State = new HashMap<>();", "url": "https://github.com/apache/netbeans/pull/2293#discussion_r465481495", "createdAt": "2020-08-05T05:28:34Z", "author": {"login": "jlahoda"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/introduce/Flow.java", "diffHunk": "@@ -1172,37 +1207,63 @@ public Boolean visitBreak(BreakTree node, ConstructorData p) {\n \n             Tree target = info.getTreeUtilities().getBreakContinueTargetTree(getCurrentPath());\n             \n-            resumeAfter(target, variable2State);\n+            breakTo(target);\n \n-            variable2State = new HashMap< Element, State>();\n+            return null;\n+        }\n+\n+        public Boolean visitYield(Tree node, ConstructorData p) {\n+            scan(TreeShims.getYieldValue(node), p);\n+\n+            Tree target = info.getTreeUtilities().getBreakContinueTargetTree(getCurrentPath());\n             \n+            breakTo(target);\n+\n             return null;\n         }\n \n+        private void breakTo(Tree target) {\n+            resumeAfter(target, variable2State);\n+\n+            variable2State = new HashMap< Element, State>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbc768528dcd822d55592ee0da1567280fe522a"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd000c6b6f60a0243dd304e11859923bbaea814", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/edd000c6b6f60a0243dd304e11859923bbaea814", "committedDate": "2020-08-05T05:29:13Z", "message": "Using a diamond instead of explicit type parameters."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTAzMjk1", "url": "https://github.com/apache/netbeans/pull/2293#pullrequestreview-486503295", "createdAt": "2020-09-11T06:22:02Z", "commit": {"oid": "edd000c6b6f60a0243dd304e11859923bbaea814"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNjoyMjowMlrOHQP1Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNjoyMjowMlrOHQP1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5ODY0Nw==", "bodyText": "Wouldn't it be beneficial to build the visitSwitchExpression and visitYield into baseclasses ?", "url": "https://github.com/apache/netbeans/pull/2293#discussion_r486798647", "createdAt": "2020-09-11T06:22:02Z", "author": {"login": "sdedic"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/introduce/Flow.java", "diffHunk": "@@ -444,11 +445,45 @@ protected boolean isCanceled() {\n             return cancel.isCanceled();\n         }\n \n+        private TreePath currentPath;\n+\n+        public TreePath getCurrentPath() {\n+            return currentPath;\n+        }\n+\n+        public Boolean scan(TreePath path, ConstructorData p) {\n+            TreePath oldPath = currentPath;\n+            try {\n+                currentPath = path;\n+                return super.scan(path.getLeaf(), p);\n+            } finally {\n+                currentPath = oldPath;\n+            }\n+        }\n+\n         @Override\n         public Boolean scan(Tree tree, ConstructorData p) {\n             resume(tree, resumeBefore);\n             \n-            Boolean result = super.scan(tree, p);\n+            Boolean result;\n+\n+            if (tree != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd000c6b6f60a0243dd304e11859923bbaea814"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTMwMjk5", "url": "https://github.com/apache/netbeans/pull/2293#pullrequestreview-515130299", "createdAt": "2020-10-22T21:24:06Z", "commit": {"oid": "edd000c6b6f60a0243dd304e11859923bbaea814"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4937, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}