{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODY4NDIy", "number": 2458, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowNjo1OFrOEt0d4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoxMjoxMVrOEt0rAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDgwOTkzOnYy", "diffSide": "RIGHT", "path": "extide/gradle/test/unit/src/org/netbeans/modules/gradle/api/execute/RunUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowNjo1OFrOHh1YUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1NDoyOVrOHiOwnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzOTYzMg==", "bodyText": "Typo in evalueteActionArgs.", "url": "https://github.com/apache/netbeans/pull/2458#discussion_r505239632", "createdAt": "2020-10-15T07:06:58Z", "author": {"login": "JaroslavTulach"}, "path": "extide/gradle/test/unit/src/org/netbeans/modules/gradle/api/execute/RunUtilsTest.java", "diffHunk": "@@ -70,4 +72,15 @@ public void testIncludeOpenProjects2() throws Exception {\n         assertEquals(0, params.size());\n     }\n \n+    public void testEvaluateArgs1() throws Exception {\n+        FileObject a = createGradleProject(\"projectA\",\n+                \"apply plugin: 'java'\\n\", \"\");\n+        Project prjA = ProjectManager.getDefault().findProject(a);\n+        ProjectTrust.getDefault().trustProject(prjA);\n+        openProject(a);\n+        String[] args = RunUtils.evalueteActionArgs(prjA, null, \"Project: ${projectPath}${projectName}\", Lookups.singleton(prjA));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ff4591f005990e614e0f71a347b00364e7ce2a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NTQ1Mw==", "bodyText": "Thanks for spotting the typo!\nWell, I do not know if this support java.lsp.server in any way. That would be your call to decide.", "url": "https://github.com/apache/netbeans/pull/2458#discussion_r505655453", "createdAt": "2020-10-15T15:54:29Z", "author": {"login": "lkishalmi"}, "path": "extide/gradle/test/unit/src/org/netbeans/modules/gradle/api/execute/RunUtilsTest.java", "diffHunk": "@@ -70,4 +72,15 @@ public void testIncludeOpenProjects2() throws Exception {\n         assertEquals(0, params.size());\n     }\n \n+    public void testEvaluateArgs1() throws Exception {\n+        FileObject a = createGradleProject(\"projectA\",\n+                \"apply plugin: 'java'\\n\", \"\");\n+        Project prjA = ProjectManager.getDefault().findProject(a);\n+        ProjectTrust.getDefault().trustProject(prjA);\n+        openProject(a);\n+        String[] args = RunUtils.evalueteActionArgs(prjA, null, \"Project: ${projectPath}${projectName}\", Lookups.singleton(prjA));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzOTYzMg=="}, "originalCommit": {"oid": "a6ff4591f005990e614e0f71a347b00364e7ce2a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDg0MzUyOnYy", "diffSide": "RIGHT", "path": "extide/gradle/src/org/netbeans/modules/gradle/spi/actions/ProjectActionMappingProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoxMjoxMVrOHh1vLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoxMjoxMVrOHh1vLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0NTQ4Ng==", "bodyText": "Consider adding better Javadoc. Description/example of \"where/how to register this interface\" was something I'd have expected here.", "url": "https://github.com/apache/netbeans/pull/2458#discussion_r505245486", "createdAt": "2020-10-15T07:12:11Z", "author": {"login": "JaroslavTulach"}, "path": "extide/gradle/src/org/netbeans/modules/gradle/spi/actions/ProjectActionMappingProvider.java", "diffHunk": "@@ -17,13 +17,14 @@\n  * under the License.\n  */\n \n-package org.netbeans.modules.gradle.actions;\n+package org.netbeans.modules.gradle.spi.actions;\n \n import java.util.Set;\n import org.netbeans.modules.gradle.api.execute.ActionMapping;\n \n /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26c9068be44eed599935217b0743dec90b0e8c"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 318, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}