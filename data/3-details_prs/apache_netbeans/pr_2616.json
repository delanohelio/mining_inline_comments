{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NjE2NDYw", "number": 2616, "title": "[NETBEANS-4739] CSS Go to Declaration , does not work", "bodyText": "When the index storage of CSS grammar elements was modified to store values individually (74a5e17), not all use-sites were updated. This PR fixes this and adds unit tests for the CSS index functions.", "createdAt": "2020-12-29T20:02:27Z", "url": "https://github.com/apache/netbeans/pull/2616", "merged": true, "mergeCommit": {"oid": "ac3134493da81fd92295a944952c046c23d9cd5e"}, "closed": true, "closedAt": "2020-12-30T17:51:12Z", "author": {"login": "matthiasblaesing"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrIybZAFqTU1OTg0NjM3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrP9VggBqjQxNTczODc5NTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5ODQ2Mzc3", "url": "https://github.com/apache/netbeans/pull/2616#pullrequestreview-559846377", "createdAt": "2020-12-30T05:50:18Z", "commit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo1MDoxOFrOIMd3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo1MDoxOFrOIMd3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MzE3Ng==", "bodyText": "Nitpick: Let's format the whole file.", "url": "https://github.com/apache/netbeans/pull/2616#discussion_r549943176", "createdAt": "2020-12-30T05:50:18Z", "author": {"login": "junichi11"}, "path": "ide/css.editor/test/unit/src/org/netbeans/modules/css/editor/ProjectTestBase.java", "diffHunk": "@@ -0,0 +1,381 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.css.editor;\n+\n+import java.beans.PropertyChangeListener;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.swing.Icon;\n+import javax.swing.event.ChangeListener;\n+import org.netbeans.api.java.classpath.ClassPath;\n+import org.netbeans.api.java.classpath.GlobalPathRegistry;\n+import org.netbeans.api.project.Project;\n+import org.netbeans.api.project.SourceGroup;\n+import org.netbeans.api.project.Sources;\n+import org.netbeans.junit.MockServices;\n+import org.netbeans.lib.lexer.test.TestLanguageProvider;\n+import org.netbeans.modules.css.lib.CssTestBase;\n+import org.netbeans.modules.parsing.api.indexing.IndexingManager;\n+import org.netbeans.modules.parsing.spi.indexing.PathRecognizer;\n+import org.netbeans.modules.projectapi.SimpleFileOwnerQueryImplementation;\n+import org.netbeans.spi.java.classpath.ClassPathProvider;\n+import org.netbeans.spi.java.classpath.support.ClassPathSupport;\n+import org.netbeans.spi.project.ProjectFactory;\n+import org.netbeans.spi.project.ProjectState;\n+import org.openide.filesystems.FileObject;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.util.Lookup;\n+import org.openide.util.Utilities;\n+import org.openide.util.lookup.AbstractLookup;\n+import org.openide.util.lookup.InstanceContent;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.util.test.MockLookup;\n+\n+/**\n+ * Base class for all tests which needs a working static html project.\n+ *\n+ * Copied from org.netbeans.modules.css.prep.editor.ProjectTestBase\n+ *\n+ * @author marekfukala\n+ */\n+public class ProjectTestBase extends CssTestBase {\n+\n+    private String projectFolder;\n+    \n+    private FileObject srcFo, projectFo;\n+//    private FileObject javaLibSrc, javaLibProjectFo;\n+\n+    public ProjectTestBase(String name, String projectFolder) {\n+        super(name);\n+        this.projectFolder = projectFolder;\n+    }\n+\n+    @Override\n+    protected void setUp() throws Exception {\n+        super.setUp();\n+\n+        assertNotNull(\"the netbeans.dirs property must be specified!\", System.getProperty(\"netbeans.dirs\"));\n+\n+        this.projectFo = getTestFile(projectFolder);\n+        assertNotNull(projectFo);\n+        this.srcFo = getTestFile(getSourcesFolderName());\n+        assertNotNull(srcFo);\n+\n+        Map<FileObject, ProjectInfo> projects = new HashMap<>();\n+\n+        //create classpath for web project\n+        Map<String, ClassPath> cps = new HashMap<>();\n+\n+        ClassPath sourceClassPath = ClassPathSupport.createClassPath(new FileObject[]{srcFo});\n+        \n+        cps.put(ClassPath.SOURCE, sourceClassPath);\n+        cps.put(ClassPath.COMPILE, ClassPathSupport.createClassPath(new FileObject[]{srcFo}));\n+        cps.put(ClassPath.BOOT, createBootClassPath());\n+        ClassPathProvider classpathProvider = new TestMultiClassPathProvider(projectFo, cps);\n+        Sources sources = new TestSources(srcFo);\n+\n+        projects.put(projectFo, new ProjectInfo(classpathProvider, sources));\n+\n+        MockLookup.setInstances(\n+                new TestMultiProjectFactory(projects),\n+                new SimpleFileOwnerQueryImplementation(),\n+                classpathProvider,\n+                new TestLanguageProvider());\n+\n+        //provides the ClassPath.SOURCE as source path id so it is returned by\n+        //PathRecognizerRegistry.getDefault().getSourceIds()\n+        MockServices.setServices(TestPathRecognizer.class);\n+\n+        //register the source classpath so PathRegistry.getDefault().getRootsMarkedAs(classpathId) in QuerySupport works\n+        GlobalPathRegistry.getDefault().register(ClassPath.SOURCE, new ClassPath[]{sourceClassPath});\n+        \n+        IndexingManager.getDefault().refreshIndexAndWait(srcFo.toURL(), null);\n+    }\n+    \n+    protected String getTestProjectFolderName() {\n+        return projectFolder;\n+    }\n+    \n+    protected String getSourcesFolderName() {\n+        return projectFolder + \"/public_html\";\n+    }\n+    \n+    @ServiceProvider(service = PathRecognizer.class)\n+    public static class TestPathRecognizer extends  PathRecognizer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd"}, "originalPosition": 128}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5ODQ4NTkw", "url": "https://github.com/apache/netbeans/pull/2616#pullrequestreview-559848590", "createdAt": "2020-12-30T05:51:58Z", "commit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo1MTo1OVrOIMd4Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo1MTo1OVrOIMd4Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MzM5MA==", "bodyText": "Nitpick: formatting", "url": "https://github.com/apache/netbeans/pull/2616#discussion_r549943390", "createdAt": "2020-12-30T05:51:59Z", "author": {"login": "junichi11"}, "path": "ide/parsing.lucene/src/org/netbeans/modules/parsing/lucene/support/Queries.java", "diffHunk": "@@ -518,6 +525,12 @@ private static String getStartText(final String regexp) {\n             boolean quoted = false;\n             for (int i = 0; i < regexp.length(); i++) {\n                 char c = regexp.charAt(i);\n+                if((! quoted) && i < (regexp.length() - 1)) {\n+                    char lookAhead = regexp.charAt(i + 1);\n+                    if(QUANTIFIER_CHARS.get(lookAhead)) {\n+                        break;\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5ODcyMjg2", "url": "https://github.com/apache/netbeans/pull/2616#pullrequestreview-559872286", "createdAt": "2020-12-30T06:07:47Z", "commit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b69408662ec3c07ae70a03ae02022c19ec07095", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/5b69408662ec3c07ae70a03ae02022c19ec07095", "committedDate": "2020-12-30T11:16:24Z", "message": "[NETBEANS-4739] Handle quantifiers (+, *, ?, {}) in Regexp Queries correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cffc32e7776b5face59707aacf3b4da6acb93cd", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/7cffc32e7776b5face59707aacf3b4da6acb93cd", "committedDate": "2020-12-29T20:16:26Z", "message": "[NETBEANS-4739] With the simplified storage, prefix queries don't need to be regexp queries"}, "afterCommit": {"oid": "022f1481d066bcbe8cdcc7fe15bd6cd12840cc56", "author": {"user": {"login": "junichi11", "name": "Junichi Yamamoto"}}, "url": "https://github.com/apache/netbeans/commit/022f1481d066bcbe8cdcc7fe15bd6cd12840cc56", "committedDate": "2020-12-30T11:17:54Z", "message": "[NETBEANS-4739] Add Test for GotoDeclaration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDU1NTgz", "url": "https://github.com/apache/netbeans/pull/2616#pullrequestreview-560055583", "createdAt": "2020-12-30T13:51:15Z", "commit": {"oid": "022f1481d066bcbe8cdcc7fe15bd6cd12840cc56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzo1MToxNlrOIMto_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzo1MToxNlrOIMto_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIwMTU5OA==", "bodyText": "Moved? or Remove this line?", "url": "https://github.com/apache/netbeans/pull/2616#discussion_r550201598", "createdAt": "2020-12-30T13:51:16Z", "author": {"login": "junichi11"}, "path": "ide/css.editor/test/unit/src/org/netbeans/modules/css/editor/ProjectTestBase.java", "diffHunk": "@@ -59,14 +56,16 @@\n import org.openide.util.test.MockLookup;\n \n /**\n- * Base class for all CP preprocessor tests which needs a working static html project.\n+ * Base class for all tests which needs a working static html project.\n+ *\n+ * Copied from org.netbeans.modules.css.prep.editor.ProjectTestBase", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022f1481d066bcbe8cdcc7fe15bd6cd12840cc56"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDU1Nzc3", "url": "https://github.com/apache/netbeans/pull/2616#pullrequestreview-560055777", "createdAt": "2020-12-30T13:51:51Z", "commit": {"oid": "022f1481d066bcbe8cdcc7fe15bd6cd12840cc56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82764836a7b4752154d68e1f8bf9a80603f4901", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/e82764836a7b4752154d68e1f8bf9a80603f4901", "committedDate": "2020-12-30T14:11:10Z", "message": "[NETBEANS-4739] Fix CSS index queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bc15100d2154a045fe778b464201bb43376ddc3", "author": {"user": {"login": "junichi11", "name": "Junichi Yamamoto"}}, "url": "https://github.com/apache/netbeans/commit/0bc15100d2154a045fe778b464201bb43376ddc3", "committedDate": "2020-12-30T14:11:11Z", "message": "[NETBEANS-4739] Add Test for GotoDeclaration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "022f1481d066bcbe8cdcc7fe15bd6cd12840cc56", "author": {"user": {"login": "junichi11", "name": "Junichi Yamamoto"}}, "url": "https://github.com/apache/netbeans/commit/022f1481d066bcbe8cdcc7fe15bd6cd12840cc56", "committedDate": "2020-12-30T11:17:54Z", "message": "[NETBEANS-4739] Add Test for GotoDeclaration"}, "afterCommit": {"oid": "0bc15100d2154a045fe778b464201bb43376ddc3", "author": {"user": {"login": "junichi11", "name": "Junichi Yamamoto"}}, "url": "https://github.com/apache/netbeans/commit/0bc15100d2154a045fe778b464201bb43376ddc3", "committedDate": "2020-12-30T14:11:11Z", "message": "[NETBEANS-4739] Add Test for GotoDeclaration"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 298, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}