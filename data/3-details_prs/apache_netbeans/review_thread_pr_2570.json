{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MzgwNzEy", "number": 2570, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNDo0NFrOFAK8YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoyMDozM1rOFCpVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzIzNjE2OnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNDo0NFrOH-UXTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNjo0NjozNFrOIBoyBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNzQwNw==", "bodyText": "Please use not TABs but spaces.", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r535107407", "createdAt": "2020-12-03T11:04:44Z", "author": {"login": "junichi11"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {\n+\t\tprinter.newline();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4NzY1Mw==", "bodyText": "@junichi11 , done with the changes requested", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538587653", "createdAt": "2020-12-08T16:46:34Z", "author": {"login": "Mohan-Sarilla"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {\n+\t\tprinter.newline();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNzQwNw=="}, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzIzODg3OnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNTowOFrOH-UZKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoxNDo0NlrOIB6m-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNzg4MA==", "bodyText": "Please use not a TAB but spaces.", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r535107880", "createdAt": "2020-12-03T11:05:08Z", "author": {"login": "junichi11"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {\n+\t\tprinter.newline();\n+            }\n+        }\n+\tcopyTo(localPointer, bounds[1]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4Nzc1OA==", "bodyText": "@junichi11 , done with the changes requested", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538587758", "createdAt": "2020-12-08T16:46:41Z", "author": {"login": "Mohan-Sarilla"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {\n+\t\tprinter.newline();\n+            }\n+        }\n+\tcopyTo(localPointer, bounds[1]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNzg4MA=="}, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg3OTczNw==", "bodyText": "Thanks!", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538879737", "createdAt": "2020-12-08T23:14:46Z", "author": {"login": "junichi11"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {\n+\t\tprinter.newline();\n+            }\n+        }\n+\tcopyTo(localPointer, bounds[1]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNzg4MA=="}, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzI0NTg5OnYy", "diffSide": "RIGHT", "path": "java/java.hints/src/org/netbeans/modules/java/hints/errors/Utilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNjoxMlrOH-UeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNjo0Njo0OFrOIBozLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwOTEzMg==", "bodyText": "Please use not TABs but spaces.\nOther changes as well.", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r535109132", "createdAt": "2020-12-03T11:06:12Z", "author": {"login": "junichi11"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/errors/Utilities.java", "diffHunk": "@@ -3137,7 +3137,8 @@ public static boolean isCompatibleWithSwitchExpression(SwitchTree st) {\n                             }\n                             break;\n                         } else {\n-                            if (leftTreeName != null && leftTreeName.contentEquals(getLeftTreeName(statements.get(0)))) {\n+\t\t\t    Name exprTree = getLeftTreeName(statements.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4Nzk0OQ==", "bodyText": "@junichi11 , done with the changes requested", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538587949", "createdAt": "2020-12-08T16:46:48Z", "author": {"login": "Mohan-Sarilla"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/errors/Utilities.java", "diffHunk": "@@ -3137,7 +3137,8 @@ public static boolean isCompatibleWithSwitchExpression(SwitchTree st) {\n                             }\n                             break;\n                         } else {\n-                            if (leftTreeName != null && leftTreeName.contentEquals(getLeftTreeName(statements.get(0)))) {\n+\t\t\t    Name exprTree = getLeftTreeName(statements.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwOTEzMg=="}, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzI2MDU0OnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowODoyMlrOH-UoHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNjo0Njo1NFrOIBozwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExMTcwOQ==", "bodyText": "Please add // NOI18N if it is not expect i18N", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r535111709", "createdAt": "2020-12-03T11:08:22Z", "author": {"login": "junichi11"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4ODA5OA==", "bodyText": "@junichi11 , done with the changes requested", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538588098", "createdAt": "2020-12-08T16:46:54Z", "author": {"login": "Mohan-Sarilla"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -1900,7 +1900,14 @@ protected int diffSwitch(JCSwitch oldT, JCSwitch newT, int[] bounds) {\n         PositionEstimator est = EstimatorFactory.cases(oldT.getCases(), newT.getCases(), diffContext);\n         localPointer = diffList(oldT.cases, newT.cases, localPointer, est, Measure.MEMBER, printer);\n \n-        copyTo(localPointer, bounds[1]);\n+        List<JCCase> cases = newT.cases;\n+        if (cases.size() != 0) {\n+            String caseKind = String.valueOf(CasualDiff.getCaseKind(cases.get(0)));\n+            if (caseKind.equals(\"RULE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExMTcwOQ=="}, "originalCommit": {"oid": "6a2eab1cd2ac297b4b5f7d552b625faca3b79ffb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MzE4NjYzOnYy", "diffSide": "RIGHT", "path": "java/java.hints/src/org/netbeans/modules/java/hints/errors/Utilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoyMDozM1rOIB62Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoyMDozM1rOIB62Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4MzY0Mg==", "bodyText": "I would introduce a method for checking conditions because it's the same as above.\ncc: @Akshay-Gupta-Oracle", "url": "https://github.com/apache/netbeans/pull/2570#discussion_r538883642", "createdAt": "2020-12-08T23:20:33Z", "author": {"login": "junichi11"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/errors/Utilities.java", "diffHunk": "@@ -3155,7 +3156,8 @@ public static boolean isCompatibleWithSwitchExpression(SwitchTree st) {\n                             }\n                             firstCase = false;\n                         }\n-                        if (leftTreeName != null && leftTreeName.contentEquals(getLeftTreeName(statements.get(0)))) {\n+                        Name exprTree = getLeftTreeName(statements.get(0));\n+                        if (leftTreeName != null && exprTree != null && leftTreeName.contentEquals(exprTree)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0f6927c51a7d6bcebb765648b704af2ca57913"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 258, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}