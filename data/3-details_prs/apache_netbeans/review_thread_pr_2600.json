{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTkzMTgz", "number": 2600, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NTozOFrOFLYJJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NjoxM1rOFLYKGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDc0MjEyOnYy", "diffSide": "RIGHT", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NTozOFrOIOg8Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMToxNDo1NFrOIOnhxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MDcxNQ==", "bodyText": "What is Set<TextDocumentServiceImpl> ALL_INSTANCES good for? It is only used from static void refreshAllEditors() that seems to be unused.", "url": "https://github.com/apache/netbeans/pull/2600#discussion_r552090715", "createdAt": "2021-01-05T17:45:38Z", "author": {"login": "dbalek"}, "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "diffHunk": "@@ -192,12 +205,14 @@\n \n     private static final RequestProcessor BACKGROUND_TASKS = new RequestProcessor(TextDocumentServiceImpl.class.getName(), 1, false, false);\n     private static final RequestProcessor WORKER = new RequestProcessor(TextDocumentServiceImpl.class.getName(), 1, false, false);\n+    private static final Set<TextDocumentServiceImpl> ALL_INSTANCES = Collections.newSetFromMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1449154d58d33f0a9023f8f819ee7b5c2c672118"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE5ODU5Ng==", "bodyText": "Sorry, this was part of a (failed) attempt to fix an unrelated problem and should not be here. Removed in 5987977.", "url": "https://github.com/apache/netbeans/pull/2600#discussion_r552198596", "createdAt": "2021-01-05T21:14:54Z", "author": {"login": "jlahoda"}, "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "diffHunk": "@@ -192,12 +205,14 @@\n \n     private static final RequestProcessor BACKGROUND_TASKS = new RequestProcessor(TextDocumentServiceImpl.class.getName(), 1, false, false);\n     private static final RequestProcessor WORKER = new RequestProcessor(TextDocumentServiceImpl.class.getName(), 1, false, false);\n+    private static final Set<TextDocumentServiceImpl> ALL_INSTANCES = Collections.newSetFromMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MDcxNQ=="}, "originalCommit": {"oid": "1449154d58d33f0a9023f8f819ee7b5c2c672118"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDc0NDU3OnYy", "diffSide": "RIGHT", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NjoxM1rOIOg9rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0NjoxM1rOIOg9rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MTA1NA==", "bodyText": "Seems to be unused.", "url": "https://github.com/apache/netbeans/pull/2600#discussion_r552091054", "createdAt": "2021-01-05T17:46:13Z", "author": {"login": "dbalek"}, "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "diffHunk": "@@ -1410,20 +1556,37 @@ public static int getOffset(Document doc, Position pos) {\n             file[0] = wc.getFileObject();\n             lm[0] = wc.getCompilationUnit().getLineMap();\n         });\n+        return fileModifications(changes, file[0], lm[0]);\n+    }\n+    \n+    private static List<TextEdit> fileModifications(ModificationResult changes, FileObject file, LineMap lm) {\n         //TODO: full, correct and safe edit production:\n-        List<? extends ModificationResult.Difference> diffs = changes.getDifferences(file[0]);\n+        List<? extends ModificationResult.Difference> diffs = changes.getDifferences(file);\n         if (diffs == null) {\n             return Collections.emptyList();\n         }\n         List<TextEdit> edits = new ArrayList<>();\n+        IntFunction<Position> offset2Position = lm != null ? pos -> Utils.createPosition(lm, pos)\n+                                                           : pos -> Utils.createPosition(file, pos);\n+                                            \n         for (ModificationResult.Difference diff : diffs) {\n             String newText = diff.getNewText();\n-            edits.add(new TextEdit(new Range(Utils.createPosition(lm[0], diff.getStartPosition().getOffset()),\n-                                             Utils.createPosition(lm[0], diff.getEndPosition().getOffset())),\n+            edits.add(new TextEdit(new Range(offset2Position.apply(diff.getStartPosition().getOffset()),\n+                                             offset2Position.apply(diff.getEndPosition().getOffset())),\n                                    newText != null ? newText : \"\"));\n         }\n         return edits;\n     }\n+    \n+    static void refreshAllEditors() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1449154d58d33f0a9023f8f819ee7b5c2c672118"}, "originalPosition": 300}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 284, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}