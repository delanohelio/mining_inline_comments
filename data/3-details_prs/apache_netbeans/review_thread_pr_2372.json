{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDQxMDYx", "number": 2372, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1ODozMlrOEko8BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowOToxNFrOElAong==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODU0OTE3OnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1ODozMlrOHTsrvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjo1ODozMlrOHTsrvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzA4NA==", "bodyText": "Ok for the Travis changes \ud83d\udc4d", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r490417084", "createdAt": "2020-09-17T16:58:32Z", "author": {"login": "hectorespert"}, "path": ".travis.yml", "diffHunk": "@@ -752,9 +752,21 @@ matrix:\n           script:\n             - (cd java/java.lsp.server; ant build-vscode-ext)\n \n-        - name: GRAALVM Tests\n+        - name: \"GraalVM Tests (latest)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f1f59abbbc6f67568fcd6babf2c6a1712d317e9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODY2MDE0OnYy", "diffSide": "RIGHT", "path": "platform/api.scripting/test/unit/src/org/netbeans/api/scripting/JavaScriptEnginesTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzoyODo0MlrOHTtxXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoxODo0M1rOHUBBjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDkwOQ==", "bodyText": "Is this change really necessary? It does work in the GraalVM 20.2.0 console (CCing @woess):\n./graalvm-ce-java8-20.2.0/bin/js --jvm\n> let Long = Java.type(\"java.lang.Long\");\n> new Long(33)\n33\n> new Long(\"33\")\n33\nIt would be surprising that the interop behaves differently in the console and in our ScriptEngine...", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r490434909", "createdAt": "2020-09-17T17:28:42Z", "author": {"login": "JaroslavTulach"}, "path": "platform/api.scripting/test/unit/src/org/netbeans/api/scripting/JavaScriptEnginesTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void allowLoadAClassInJS() throws Exception {\n         // BEGIN: org.netbeans.api.scripting.JavaScriptEnginesTest#allowLoadAClassInJS\n         Object fn = engine.eval(\"(function(obj) {\\n\"\n                 + \"  var Long = Java.type('java.lang.Long');\\n\"\n-                + \"  return new Long(33);\\n\"\n+                + \"  return new Long(\\\"33\\\");\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f1f59abbbc6f67568fcd6babf2c6a1712d317e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNzE5OA==", "bodyText": "Well, this is the error that I ran into in CI and also later confirmed locally. Maybe there is a way to turn this off in ScriptEngine configuration?", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r490437198", "createdAt": "2020-09-17T17:31:49Z", "author": {"login": "daemontus"}, "path": "platform/api.scripting/test/unit/src/org/netbeans/api/scripting/JavaScriptEnginesTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void allowLoadAClassInJS() throws Exception {\n         // BEGIN: org.netbeans.api.scripting.JavaScriptEnginesTest#allowLoadAClassInJS\n         Object fn = engine.eval(\"(function(obj) {\\n\"\n                 + \"  var Long = Java.type('java.lang.Long');\\n\"\n-                + \"  return new Long(33);\\n\"\n+                + \"  return new Long(\\\"33\\\");\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDkwOQ=="}, "originalCommit": {"oid": "6f1f59abbbc6f67568fcd6babf2c6a1712d317e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNjM0MQ==", "bodyText": "aa76809 seems to be a workaround. Requesting Nashorn compatibility mode activates NASHORN_HOST_ACCESS which contains the Long \u21d2 String conversion as identified by Samuel. By calling\nb.put(\"polyglot.js.allowHostAccess\", true);\nafter that one replaces the Nashorn compatibility host access with HostAccess.ALL switching back to the behavior of the engine as of GraalVM 19.3.x. CCing @iamstolis", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r490716341", "createdAt": "2020-09-18T05:49:07Z", "author": {"login": "JaroslavTulach"}, "path": "platform/api.scripting/test/unit/src/org/netbeans/api/scripting/JavaScriptEnginesTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void allowLoadAClassInJS() throws Exception {\n         // BEGIN: org.netbeans.api.scripting.JavaScriptEnginesTest#allowLoadAClassInJS\n         Object fn = engine.eval(\"(function(obj) {\\n\"\n                 + \"  var Long = Java.type('java.lang.Long');\\n\"\n-                + \"  return new Long(33);\\n\"\n+                + \"  return new Long(\\\"33\\\");\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDkwOQ=="}, "originalCommit": {"oid": "6f1f59abbbc6f67568fcd6babf2c6a1712d317e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1MDM1MA==", "bodyText": "Yes, this is a known consequence of the new conversion and also a known workaround that removes the new conversion see oracle/graaljs#286\nNote that the conversion itself is not incorrect (in the sense that Nashorn has it as well and so some Nashorn users need it). Unfortunately, the inclusion of the conversion discloses that our method resolution (in truffle) is different than Nashorn one.", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r490750350", "createdAt": "2020-09-18T07:18:43Z", "author": {"login": "iamstolis"}, "path": "platform/api.scripting/test/unit/src/org/netbeans/api/scripting/JavaScriptEnginesTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void allowLoadAClassInJS() throws Exception {\n         // BEGIN: org.netbeans.api.scripting.JavaScriptEnginesTest#allowLoadAClassInJS\n         Object fn = engine.eval(\"(function(obj) {\\n\"\n                 + \"  var Long = Java.type('java.lang.Long');\\n\"\n-                + \"  return new Long(33);\\n\"\n+                + \"  return new Long(\\\"33\\\");\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDkwOQ=="}, "originalCommit": {"oid": "6f1f59abbbc6f67568fcd6babf2c6a1712d317e9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjQzMTY2OnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowOToxNFrOHURLDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowOToxNFrOHURLDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxNDkyNg==", "bodyText": "We have to run ant check-sigtest-release otherwise we are checking against non-existing files and the check trivially passes.", "url": "https://github.com/apache/netbeans/pull/2372#discussion_r491014926", "createdAt": "2020-09-18T15:09:14Z", "author": {"login": "JaroslavTulach"}, "path": ".travis.yml", "diffHunk": "@@ -57,7 +57,7 @@ matrix:\n             - ant $OPTS clean\n             - ant $OPTS build\n           script:\n-            - ant $OPTS check-sigtests -Dfail.on.error=true\n+            - ant $OPTS check-sigtests-release -Dfail.on.error=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714f3403e75266a104084f1a209b8e63d0b876dc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 417, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}