{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MTMwMjQ5", "number": 2277, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo0ODoxOVrOESwarg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjozNVrOESwkog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTAzMDg2OnYy", "diffSide": "RIGHT", "path": "java/java.hints/src/org/netbeans/modules/java/hints/suggestions/ExpectedTypeResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo0ODoxOVrOG4HGqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo0ODoxOVrOG4HGqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4OTgzNA==", "bodyText": "I am a little surprised this compiles, but should be safe at runtime.\nShould these new methods eventually have an implementation that would produce the expected type?", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461489834", "createdAt": "2020-07-28T10:48:19Z", "author": {"login": "lahodaj"}, "path": "java/java.hints/src/org/netbeans/modules/java/hints/suggestions/ExpectedTypeResolver.java", "diffHunk": "@@ -1388,4 +1391,16 @@ private static void addTypeAndReplaceMoreSpecific(CompilationInfo info, Collecti\n     public List<? extends TypeMirror> visitUses(UsesTree node, Object p) {\n         return null;\n     }\n+   \n+    public List<? extends TypeMirror> visitBindingPattern(BindingPatternTree bpt, Object p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTAzNzIwOnYy", "diffSide": "LEFT", "path": "java/java.hints/test/unit/src/org/netbeans/modules/java/hints/jdk/ConvertToPatternInstanceOfTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1MDowN1rOG4HKUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1MDowN1rOG4HKUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MDc3MQ==", "bodyText": "We are giving up the ability to run tests without nb-javac on JDK<14. Possibly not that big issue as we are not running the tests in that combination anyway.", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461490771", "createdAt": "2020-07-28T10:50:07Z", "author": {"login": "lahodaj"}, "path": "java/java.hints/test/unit/src/org/netbeans/modules/java/hints/jdk/ConvertToPatternInstanceOfTest.java", "diffHunk": "@@ -140,15 +148,4 @@ public void testNoSoSimpleNameClash() throws Exception {\n                               \"}\\n\");\n     }\n \n-    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTA0NTg4OnYy", "diffSide": "RIGHT", "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1MzowMlrOG4HP3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1MzowMlrOG4HP3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MjE5MA==", "bodyText": "Nit: note the indent is wrong on this line.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    JCTree.JCVariableDecl result = null;\n          \n          \n            \n                        JCTree.JCVariableDecl result = null;", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461492190", "createdAt": "2020-07-28T10:53:02Z", "author": {"login": "lahodaj"}, "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "diffHunk": "@@ -1352,6 +1354,33 @@ protected JCModifiers modifiersOpt(JCModifiers partial) {\n             return super.modifiersOpt(partial);\n         }\n \n+\n+        public JCVariableDecl formalParameter(boolean lambdaParam, boolean recordComponents) {\n+            if (token.kind == TokenKind.IDENTIFIER) {\n+                if (token.name().startsWith(dollar)) {\n+                    com.sun.tools.javac.util.Name name = token.name();\n+\n+                    Token peeked = S.token(1);\n+\n+                    if (peeked.kind == TokenKind.COMMA || peeked.kind == TokenKind.RPAREN) {\n+                        nextToken();\n+                        return JackpotTrees.createVariableWildcard(ctx, name);\n+                    }\n+                }\n+            }\n+                        JCTree.JCVariableDecl result = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTA1NDg0OnYy", "diffSide": "RIGHT", "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjowNFrOG4HVcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjowNFrOG4HVcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MzYxNg==", "bodyText": "I think it should be fine to just fail here, shouldn't it (the method must exist, as the current method overrides it):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Logger.getLogger(NBParserFactory.class.getName()).log(Level.FINE, null, e);\n          \n          \n            \n                            throw new IllegalStateException(ex);", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461493616", "createdAt": "2020-07-28T10:56:04Z", "author": {"login": "lahodaj"}, "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "diffHunk": "@@ -1352,6 +1354,33 @@ protected JCModifiers modifiersOpt(JCModifiers partial) {\n             return super.modifiersOpt(partial);\n         }\n \n+\n+        public JCVariableDecl formalParameter(boolean lambdaParam, boolean recordComponents) {\n+            if (token.kind == TokenKind.IDENTIFIER) {\n+                if (token.name().startsWith(dollar)) {\n+                    com.sun.tools.javac.util.Name name = token.name();\n+\n+                    Token peeked = S.token(1);\n+\n+                    if (peeked.kind == TokenKind.COMMA || peeked.kind == TokenKind.RPAREN) {\n+                        nextToken();\n+                        return JackpotTrees.createVariableWildcard(ctx, name);\n+                    }\n+                }\n+            }\n+                        JCTree.JCVariableDecl result = null;\n+            try {\n+                Class[] paramTypes = {boolean.class, boolean.class};\n+                result = (JCTree.JCVariableDecl) MethodHandles.lookup()\n+                        .findSpecial(JavacParser.class, \"formalParameter\", MethodType.methodType(JCTree.JCVariableDecl.class, paramTypes), JackpotJavacParser.class) // NOI18N\n+                        .invoke(this, lambdaParam, recordComponents);\n+            } catch (Throwable e) {\n+                Logger.getLogger(NBParserFactory.class.getName()).log(Level.FINE, null, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTA1NTY2OnYy", "diffSide": "RIGHT", "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjoxOFrOG4HV8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjoxOFrOG4HV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5Mzc0NQ==", "bodyText": "I think it should be fine to just fail here, shouldn't it (the method must exist, as the current method overrides it):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Logger.getLogger(Utilities.class.getName()).log(Level.SEVERE, null, ex);\n          \n          \n            \n                            throw new IllegalStateException(ex);", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461493745", "createdAt": "2020-07-28T10:56:18Z", "author": {"login": "lahodaj"}, "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "diffHunk": "@@ -1408,7 +1437,35 @@ protected JCCatch catchClause() {\n             }\n             return super.catchClause();\n         }\n+        \n+        public com.sun.tools.javac.util.List<JCTree> classOrInterfaceOrRecordBodyDeclaration(com.sun.tools.javac.util.Name className, boolean isInterface, boolean isRecord) {\n+\n+            if (token.kind == TokenKind.IDENTIFIER) {\n+                if (token.name().startsWith(dollar)) {\n+                    com.sun.tools.javac.util.Name name = token.name();\n+\n+                    Token peeked = S.token(1);\n+\n+                    if (peeked.kind == TokenKind.SEMI) {\n+                        nextToken();\n+                        nextToken();\n+\n+                        return com.sun.tools.javac.util.List.<JCTree>of(F.Ident(name));\n+                    }\n+                }\n+            }\n \n+            com.sun.tools.javac.util.List<JCTree> result = null;\n+            Class[] argsType = {com.sun.tools.javac.util.Name.class, boolean.class, boolean.class};\n+            try {\n+                result = (com.sun.tools.javac.util.List<JCTree>) MethodHandles.lookup().findSpecial(JavacParser.class, \"classOrInterfaceOrRecordBodyDeclaration\", MethodType.methodType(com.sun.tools.javac.util.List.class, argsType), JackpotJavacParser.class) // NOI18N\n+                        .invoke(this, className, false, false);\n+            } catch (Throwable ex) {\n+                Logger.getLogger(Utilities.class.getName()).log(Level.SEVERE, null, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTA1NjM0OnYy", "diffSide": "RIGHT", "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjozNVrOG4HWZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NjozNVrOG4HWZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5Mzg2Mg==", "bodyText": "Nit: unnecessary change:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/apache/netbeans/pull/2277#discussion_r461493862", "createdAt": "2020-07-28T10:56:35Z", "author": {"login": "lahodaj"}, "path": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java", "diffHunk": "@@ -1427,7 +1484,7 @@ protected JCCatch catchClause() {\n             }\n             return super.classOrInterfaceBodyDeclaration(className, isInterface);\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3340fab7e7e10bf232efb68be55d97d294d03e"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 491, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}