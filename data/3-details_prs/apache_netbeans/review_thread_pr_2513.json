{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzEzMzcx", "number": 2513, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxMzo0MVrOE0Plyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxNDo0NVrOE0Pmmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjE2ODQzOnYy", "diffSide": "LEFT", "path": "platform/openide.io/src/org/openide/io/BridgingIOProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxMzo0MVrOHr3W0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxMzo0MVrOHr3W0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1Nzc3Nw==", "bodyText": "Do I read the change correctly?\nPreviously the Lookup had two elements one of the type Action[] and one of the type IOContainer. The new Lookup is going to have n-elements of type Action and optionally one element of type IOContainer.", "url": "https://github.com/apache/netbeans/pull/2513#discussion_r515757777", "createdAt": "2020-11-02T06:13:41Z", "author": {"login": "JaroslavTulach"}, "path": "platform/openide.io/src/org/openide/io/BridgingIOProvider.java", "diffHunk": "@@ -92,9 +93,16 @@ public InputOutput getIO(String name, Action[] actions,\n     @Override\n     public InputOutput getIO(String name, boolean newIO, Action[] actions,\n             IOContainer ioContainer) {\n+        Object[] lookupContent;\n+        if (ioContainer != null) {\n+            lookupContent = Arrays.copyOf(actions, actions.length + 1, Object[].class);\n+            lookupContent[actions.length] = ioContainer;\n+        } else {\n+            lookupContent = actions;\n+        }\n         return new BridgingInputOutput(\n                 providerDelegate.getIO(name, newIO,\n-                        Lookups.fixed((Object[]) actions, ioContainer)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjE3MDUwOnYy", "diffSide": "RIGHT", "path": "platform/openide.io/test/unit/src/org/openide/io/BridgingIOProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxNDo0NVrOHr3YBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxNDo0NVrOHr3YBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1ODA4Ng==", "bodyText": "I'd expect a failure here in the previous version of the code.", "url": "https://github.com/apache/netbeans/pull/2513#discussion_r515758086", "createdAt": "2020-11-02T06:14:45Z", "author": {"login": "JaroslavTulach"}, "path": "platform/openide.io/test/unit/src/org/openide/io/BridgingIOProviderTest.java", "diffHunk": "@@ -78,9 +84,37 @@ public void bridgeToNullColor() throws IOException {\n         assertEquals(\"Null!\", sb.toString());\n     }\n \n+    @Test\n+    public void nullIOContainer() throws IOException {\n+        MockIOP mock = new MockIOP();\n+        IOProvider provider = BridgingIOProvider.create(mock);\n+        Action testAction = new AbstractAction(\"test\") {\n+            @Override public void actionPerformed(ActionEvent e) {}\n+        };\n+        InputOutput io = provider.getIO(\"test\", false, new Action[] {testAction}, null);\n+        assertSame(testAction, mock.last.lookup.lookup(Action.class));\n+    }\n+\n+    @Test\n+    public void hasIOContainer() throws IOException {\n+        MockIOP mock = new MockIOP();\n+        IOProvider provider = BridgingIOProvider.create(mock);\n+        Action testAction = new AbstractAction(\"test\") {\n+            @Override public void actionPerformed(ActionEvent e) {}\n+        };\n+        IOContainer ioContainer = IOContainer.create(new MockIOProvider());\n+        InputOutput io = provider.getIO(\"test\", false, new Action[] {testAction}, ioContainer);\n+        assertSame(testAction, mock.last.lookup.lookup(Action.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 218, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}