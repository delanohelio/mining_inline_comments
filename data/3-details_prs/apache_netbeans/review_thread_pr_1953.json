{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2Mjk5NTIy", "number": 1953, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMToxNVrODkCHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyNDo1OVrODkCIPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTEwMDQ2OnYy", "diffSide": "RIGHT", "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMToxNVrOFwKJCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMToxNVrOFwKJCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MjEyMA==", "bodyText": "Maybe rename to SimpleNotificationDisplayerTest.", "url": "https://github.com/apache/netbeans/pull/1953#discussion_r386042120", "createdAt": "2020-02-29T17:21:15Z", "author": {"login": "eirikbakke"}, "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.openide.awt;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.swing.JComponent;\n+import org.junit.Test;\n+import org.netbeans.junit.NbTestCase;\n+import org.openide.awt.NotificationDisplayer.Category;\n+import org.openide.awt.NotificationDisplayer.Priority;\n+\n+/**\n+ *\n+ * @author Hector Espert\n+ */\n+public class NotificationDisplayerTest extends NbTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebdcc52cacf3ceddd0d5708146db4c4b166fcaa6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTEwMTI4OnYy", "diffSide": "RIGHT", "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMjo0OFrOFwKJdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxMzoxNzo1OFrOFwOIjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MjIyOQ==", "bodyText": "Should we make assumptions about which NotificationDisplayer is the default? That's not specified by the API.\nAre these tests that should pass for any implementation of NotificationDisplayer?", "url": "https://github.com/apache/netbeans/pull/1953#discussion_r386042229", "createdAt": "2020-02-29T17:22:48Z", "author": {"login": "eirikbakke"}, "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.openide.awt;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.swing.JComponent;\n+import org.junit.Test;\n+import org.netbeans.junit.NbTestCase;\n+import org.openide.awt.NotificationDisplayer.Category;\n+import org.openide.awt.NotificationDisplayer.Priority;\n+\n+/**\n+ *\n+ * @author Hector Espert\n+ */\n+public class NotificationDisplayerTest extends NbTestCase {\n+    \n+    private NotificationDisplayer notificationDisplayer;\n+\n+    public NotificationDisplayerTest(String name) {\n+        super(name);\n+    }\n+    \n+    @Override\n+    public void setUp() {\n+        notificationDisplayer = NotificationDisplayer.getDefault();\n+        assertNotNull(notificationDisplayer);\n+        assertEquals(\"SimpleNotificationDisplayer\", notificationDisplayer.getClass().getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebdcc52cacf3ceddd0d5708146db4c4b166fcaa6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEwNzUzMw==", "bodyText": "Should we make assumptions about which NotificationDisplayer is the default? That's not specified by the API.\n\nIt doesn't assume that SimpleNotificationDisplayer is the default NotificationDisplayer, only is for testing that if any other is not present, fallback implementation is loaded.", "url": "https://github.com/apache/netbeans/pull/1953#discussion_r386107533", "createdAt": "2020-03-01T13:17:58Z", "author": {"login": "hectorespert"}, "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.openide.awt;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.swing.JComponent;\n+import org.junit.Test;\n+import org.netbeans.junit.NbTestCase;\n+import org.openide.awt.NotificationDisplayer.Category;\n+import org.openide.awt.NotificationDisplayer.Priority;\n+\n+/**\n+ *\n+ * @author Hector Espert\n+ */\n+public class NotificationDisplayerTest extends NbTestCase {\n+    \n+    private NotificationDisplayer notificationDisplayer;\n+\n+    public NotificationDisplayerTest(String name) {\n+        super(name);\n+    }\n+    \n+    @Override\n+    public void setUp() {\n+        notificationDisplayer = NotificationDisplayer.getDefault();\n+        assertNotNull(notificationDisplayer);\n+        assertEquals(\"SimpleNotificationDisplayer\", notificationDisplayer.getClass().getSimpleName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MjIyOQ=="}, "originalCommit": {"oid": "ebdcc52cacf3ceddd0d5708146db4c4b166fcaa6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTEwMTU1OnYy", "diffSide": "RIGHT", "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMzoyN1rOFwKJlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyMzoyN1rOFwKJlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MjI2MQ==", "bodyText": "That's an implementation detail--ideally the tests should not break if you change the implementation while following the API specs.", "url": "https://github.com/apache/netbeans/pull/1953#discussion_r386042261", "createdAt": "2020-02-29T17:23:27Z", "author": {"login": "eirikbakke"}, "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.openide.awt;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.swing.JComponent;\n+import org.junit.Test;\n+import org.netbeans.junit.NbTestCase;\n+import org.openide.awt.NotificationDisplayer.Category;\n+import org.openide.awt.NotificationDisplayer.Priority;\n+\n+/**\n+ *\n+ * @author Hector Espert\n+ */\n+public class NotificationDisplayerTest extends NbTestCase {\n+    \n+    private NotificationDisplayer notificationDisplayer;\n+\n+    public NotificationDisplayerTest(String name) {\n+        super(name);\n+    }\n+    \n+    @Override\n+    public void setUp() {\n+        notificationDisplayer = NotificationDisplayer.getDefault();\n+        assertNotNull(notificationDisplayer);\n+        assertEquals(\"SimpleNotificationDisplayer\", notificationDisplayer.getClass().getSimpleName());\n+    }\n+\n+    @Test\n+    public void testNotify_4args() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, \"details\", null);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebdcc52cacf3ceddd0d5708146db4c4b166fcaa6"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTEwMjA1OnYy", "diffSide": "RIGHT", "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyNDo1OVrOFwKJ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNzoyNDo1OVrOFwKJ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MjMyOQ==", "bodyText": "These tests are repetitive--maybe factor out into a single testNotify(String expectedTitle, Notification notification) method.", "url": "https://github.com/apache/netbeans/pull/1953#discussion_r386042329", "createdAt": "2020-02-29T17:24:59Z", "author": {"login": "eirikbakke"}, "path": "platform/openide.awt/test/unit/src/org/openide/awt/NotificationDisplayerTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.openide.awt;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.swing.JComponent;\n+import org.junit.Test;\n+import org.netbeans.junit.NbTestCase;\n+import org.openide.awt.NotificationDisplayer.Category;\n+import org.openide.awt.NotificationDisplayer.Priority;\n+\n+/**\n+ *\n+ * @author Hector Espert\n+ */\n+public class NotificationDisplayerTest extends NbTestCase {\n+    \n+    private NotificationDisplayer notificationDisplayer;\n+\n+    public NotificationDisplayerTest(String name) {\n+        super(name);\n+    }\n+    \n+    @Override\n+    public void setUp() {\n+        notificationDisplayer = NotificationDisplayer.getDefault();\n+        assertNotNull(notificationDisplayer);\n+        assertEquals(\"SimpleNotificationDisplayer\", notificationDisplayer.getClass().getSimpleName());\n+    }\n+\n+    @Test\n+    public void testNotify_4args() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, \"details\", null);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title - details\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_5args_1() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, \"details\", null, Priority.LOW);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title - details\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_6args_1() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, \"details\", null, Priority.LOW, Category.ERROR);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title - details\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_6args_2() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, \"details\", null, Priority.LOW, \"default_category_error\");\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title - details\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_5args_2() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, (JComponent)null, (JComponent)null, Priority.LOW);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_6args_3() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, (JComponent)null, (JComponent)null, Priority.LOW, Category.ERROR);\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title\", StatusDisplayer.getDefault().getStatusText());\n+    }\n+\n+    @Test\n+    public void testNotify_6args_4() {\n+        Notification notification = notificationDisplayer.notify(\"title\", null, (JComponent)null, (JComponent)null, Priority.LOW, \"default_category_error\");\n+        assertNotNull(notification);\n+        assertEquals(\"NotificationImpl\", notification.getClass().getSimpleName());\n+        assertEquals(\"title\", StatusDisplayer.getDefault().getStatusText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebdcc52cacf3ceddd0d5708146db4c4b166fcaa6"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 655, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}