{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDg5ODg5", "number": 1996, "title": "Only register LSP based formatting if MimePath has language server", "bodyText": "It was observed that XML formatting did not work after enabling LSP\nformatting. The problem was caused by the MimeLookup for application/xml\nthat returned two ReformatTask.Factory implementations. One was the\nright factory, the other the Formatter provided by the LSP Client\nmodule.\nInstead of registering the ReformatTask.Factory of the LSP client module\non the empty mime path, it is now dynamically registered by a\nMimeDataProvider (LspMimeDataProvider). That MimeDataProvider ensures\nthat the lsp based formatter is only registered if a\nLanguageServerProvider is present on the targetted mime path.\nAs an implementation note the LspMimeDataProvider is registered with a\nposition, which ensures, that it is registered with higher priority than\nLegacyFormattersProvider which unconditionally registers a formatter.\nHaving a higher priority (any position has higher priority than no\nposition) ensures LspMimeDataProvider is queried first.", "createdAt": "2020-03-01T20:24:37Z", "url": "https://github.com/apache/netbeans/pull/1996", "merged": true, "mergeCommit": {"oid": "8da7ae9836d48231db701f98a46cd8c6cba53d3d"}, "closed": true, "closedAt": "2020-03-05T20:22:59Z", "author": {"login": "matthiasblaesing"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKeKt7gFqTM2OTE1MTY2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKwJSpgBqjMxMDI0NjYyMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTUxNjY3", "url": "https://github.com/apache/netbeans/pull/1996#pullrequestreview-369151667", "createdAt": "2020-03-04T21:54:11Z", "commit": {"oid": "e522ec0ae444cb61e30a4b674c19086df058bb13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTk0MzEx", "url": "https://github.com/apache/netbeans/pull/1996#pullrequestreview-369194311", "createdAt": "2020-03-04T23:15:52Z", "commit": {"oid": "e522ec0ae444cb61e30a4b674c19086df058bb13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxNTo1MlrOFyBHlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxNTo1MlrOFyBHlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk5MTQ0Ng==", "bodyText": "Nitpick: missing whitespace after if", "url": "https://github.com/apache/netbeans/pull/1996#discussion_r387991446", "createdAt": "2020-03-04T23:15:52Z", "author": {"login": "junichi11"}, "path": "ide/lsp.client/src/org/netbeans/modules/lsp/client/bindings/Formatter.java", "diffHunk": "@@ -47,12 +45,18 @@\n \n     private static final Logger LOG = Logger.getLogger(Formatter.class.getName());\n \n-    @MimeRegistration(mimeType = \"\", service = ReformatTask.Factory.class)\n     public static class Factory implements ReformatTask.Factory {\n \n         @Override\n         public ReformatTask createTask(Context context) {\n-            return new Formatter(context);\n+            FileObject file = NbEditorUtilities.getFileObject(context.document());\n+            if (file != null) {\n+                LSPBindings bindings = LSPBindings.getBindings(file);\n+                if(bindings != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e522ec0ae444cb61e30a4b674c19086df058bb13"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "952f6a909b77ab5a7dfd253b988b81c912e2869a", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/952f6a909b77ab5a7dfd253b988b81c912e2869a", "committedDate": "2020-03-05T18:21:51Z", "message": "Only register LSP based formatting if MimePath has language server\n\nIt was observed that XML formatting did not work after enabling LSP\nformatting. The problem was caused by the MimeLookup for application/xml\nthat returned two ReformatTask.Factory implementations. One was the\nright factory, the other the Formatter provided by the LSP Client\nmodule.\n\nInstead of registering the ReformatTask.Factory of the LSP client module\non the empty mime path, it is now dynamically registered by a\nMimeDataProvider (LspMimeDataProvider). That MimeDataProvider ensures\nthat the lsp based formatter is only registered if a\nLanguageServerProvider is present on the targetted mime path.\n\nAs an implementation note the LspMimeDataProvider is registered with a\nposition, which ensures, that it is registered with higher priority than\nLegacyFormattersProvider which unconditionally registers a formatter.\nHaving a higher priority (any position has higher priority than no\nposition) ensures LspMimeDataProvider is queried first."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e522ec0ae444cb61e30a4b674c19086df058bb13", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/e522ec0ae444cb61e30a4b674c19086df058bb13", "committedDate": "2020-03-01T20:05:04Z", "message": "Only register LSP based formatting if MimePath has language server\n\nIt was observed that XML formatting did not work after enabling LSP\nformatting. The problem was caused by the MimeLookup for application/xml\nthat returned two ReformatTask.Factory implementations. One was the\nright factory, the other the Formatter provided by the LSP Client\nmodule.\n\nInstead of registering the ReformatTask.Factory of the LSP client module\non the empty mime path, it is now dynamically registered by a\nMimeDataProvider (LspMimeDataProvider). That MimeDataProvider ensures\nthat the lsp based formatter is only registered if a\nLanguageServerProvider is present on the targetted mime path.\n\nAs an implementation note the LspMimeDataProvider is registered with a\nposition, which ensures, that it is registered with higher priority than\nLegacyFormattersProvider which unconditionally registers a formatter.\nHaving a higher priority (any position has higher priority than no\nposition) ensures LspMimeDataProvider is queried first."}, "afterCommit": {"oid": "952f6a909b77ab5a7dfd253b988b81c912e2869a", "author": {"user": {"login": "matthiasblaesing", "name": "Matthias Bl\u00e4sing"}}, "url": "https://github.com/apache/netbeans/commit/952f6a909b77ab5a7dfd253b988b81c912e2869a", "committedDate": "2020-03-05T18:21:51Z", "message": "Only register LSP based formatting if MimePath has language server\n\nIt was observed that XML formatting did not work after enabling LSP\nformatting. The problem was caused by the MimeLookup for application/xml\nthat returned two ReformatTask.Factory implementations. One was the\nright factory, the other the Formatter provided by the LSP Client\nmodule.\n\nInstead of registering the ReformatTask.Factory of the LSP client module\non the empty mime path, it is now dynamically registered by a\nMimeDataProvider (LspMimeDataProvider). That MimeDataProvider ensures\nthat the lsp based formatter is only registered if a\nLanguageServerProvider is present on the targetted mime path.\n\nAs an implementation note the LspMimeDataProvider is registered with a\nposition, which ensures, that it is registered with higher priority than\nLegacyFormattersProvider which unconditionally registers a formatter.\nHaving a higher priority (any position has higher priority than no\nposition) ensures LspMimeDataProvider is queried first."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 223, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}