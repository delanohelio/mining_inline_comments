{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTE5NjM3", "number": 2194, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToyOToxNlrOEGrHBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODoxODo0NVrOFD3jpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDMzMjIwOnYy", "diffSide": "RIGHT", "path": "platform/openide.nodes/src/org/openide/cookies/InstanceCookie.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOToyOToxNlrOGlnUgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMzowMzoxOVrOGmGisQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NDcyMw==", "bodyText": "This is an API change.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442094723", "createdAt": "2020-06-18T09:29:16Z", "author": {"login": "JaroslavTulach"}, "path": "platform/openide.nodes/src/org/openide/cookies/InstanceCookie.java", "diffHunk": "@@ -31,7 +31,7 @@\n  *\n  * @author Jaroslav Tulach\n  */\n-public interface InstanceCookie/*<T>*/ extends Node.Cookie {\n+public interface InstanceCookie<T> extends Node.Cookie {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNTg3Mw==", "bodyText": "Reverted back to original.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442605873", "createdAt": "2020-06-19T03:01:39Z", "author": {"login": "BradWalker"}, "path": "platform/openide.nodes/src/org/openide/cookies/InstanceCookie.java", "diffHunk": "@@ -31,7 +31,7 @@\n  *\n  * @author Jaroslav Tulach\n  */\n-public interface InstanceCookie/*<T>*/ extends Node.Cookie {\n+public interface InstanceCookie<T> extends Node.Cookie {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NDcyMw=="}, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNjI1Nw==", "bodyText": "I've reverted this back to the original state..", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442606257", "createdAt": "2020-06-19T03:03:19Z", "author": {"login": "BradWalker"}, "path": "platform/openide.nodes/src/org/openide/cookies/InstanceCookie.java", "diffHunk": "@@ -31,7 +31,7 @@\n  *\n  * @author Jaroslav Tulach\n  */\n-public interface InstanceCookie/*<T>*/ extends Node.Cookie {\n+public interface InstanceCookie<T> extends Node.Cookie {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NDcyMw=="}, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjgxMDIzOnYy", "diffSide": "RIGHT", "path": "ide/xml.core/src/org/netbeans/modules/xml/api/model/ExtendedGrammarQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo1NTo0OVrOGl_5pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMzowMjoyN1rOGmGh0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5NzQ0NQ==", "bodyText": "This is API (visualized in the IDE by the \"unlocked\" lock), and the \"api\" in the package is a dead giveaway. If you want to change this, @jtulach rightly pointed out, that we have to get it right, as we have only one chance.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442497445", "createdAt": "2020-06-18T20:55:49Z", "author": {"login": "matthiasblaesing"}, "path": "ide/xml.core/src/org/netbeans/modules/xml/api/model/ExtendedGrammarQuery.java", "diffHunk": "@@ -32,6 +32,6 @@\n public interface ExtendedGrammarQuery extends GrammarQuery {\n     \n     /** @return a List of resolved entities System id-s names.*/\n-    public List/*<String>*/ getResolvedEntities();\n+    public List<String> getResolvedEntities();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNjAzNA==", "bodyText": "Reverted back to original. We'll figure this out in the future..", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442606034", "createdAt": "2020-06-19T03:02:27Z", "author": {"login": "BradWalker"}, "path": "ide/xml.core/src/org/netbeans/modules/xml/api/model/ExtendedGrammarQuery.java", "diffHunk": "@@ -32,6 +32,6 @@\n public interface ExtendedGrammarQuery extends GrammarQuery {\n     \n     /** @return a List of resolved entities System id-s names.*/\n-    public List/*<String>*/ getResolvedEntities();\n+    public List<String> getResolvedEntities();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5NzQ0NQ=="}, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjgxNjYwOnYy", "diffSide": "RIGHT", "path": "ide/xml.text/src/org/netbeans/modules/xml/text/navigator/base/AbstractXMLNavigatorPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo1ODowNFrOGl_9-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMzowMTo1OFrOGmGhcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5ODU1NQ==", "bodyText": "This is API (friend-only)", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442498555", "createdAt": "2020-06-18T20:58:04Z", "author": {"login": "matthiasblaesing"}, "path": "ide/xml.text/src/org/netbeans/modules/xml/text/navigator/base/AbstractXMLNavigatorPanel.java", "diffHunk": "@@ -92,7 +92,7 @@ public void panelDeactivated() {\n      * \n      * @param selectedFiles \n      */\n-    public void navigate(Collection/*<DataObject>*/ selectedFiles) {\n+    public void navigate(Collection<DataObject> selectedFiles) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNTkzNw==", "bodyText": "Reverted back to original.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r442605937", "createdAt": "2020-06-19T03:01:58Z", "author": {"login": "BradWalker"}, "path": "ide/xml.text/src/org/netbeans/modules/xml/text/navigator/base/AbstractXMLNavigatorPanel.java", "diffHunk": "@@ -92,7 +92,7 @@ public void panelDeactivated() {\n      * \n      * @param selectedFiles \n      */\n-    public void navigate(Collection/*<DataObject>*/ selectedFiles) {\n+    public void navigate(Collection<DataObject> selectedFiles) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5ODU1NQ=="}, "originalCommit": {"oid": "d8d57157a7e43876b1f7c20c5765f328c4ddee1d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTQ1NjE0OnYy", "diffSide": "RIGHT", "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/heap/ClassDumpSegment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowNTo0MVrOGn4qcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoxMTozNlrOIDbWAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjAxOA==", "bodyText": "This is package private - I would not consider this API, so could be made generic and then the callsite of this function could be generified.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r444476018", "createdAt": "2020-06-23T20:05:41Z", "author": {"login": "matthiasblaesing"}, "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/heap/ClassDumpSegment.java", "diffHunk": "@@ -202,12 +202,12 @@ void addInstanceSize(ClassDump cls, int tag, long instanceOffset) {\n         }\n     }\n \n-    synchronized List /*<JavaClass>*/ createClassCollection() {\n+    synchronized List/*<JavaClass>*/ createClassCollection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b61d120c4b0e63ff95490174696e87516efa4fa"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2NDY0MA==", "bodyText": "This is package private - I would not consider this API, so could be made generic and then the callsite of this function could be generified.\n\nFixed..", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r540464640", "createdAt": "2020-12-10T20:11:36Z", "author": {"login": "BradWalker"}, "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/heap/ClassDumpSegment.java", "diffHunk": "@@ -202,12 +202,12 @@ void addInstanceSize(ClassDump cls, int tag, long instanceOffset) {\n         }\n     }\n \n-    synchronized List /*<JavaClass>*/ createClassCollection() {\n+    synchronized List/*<JavaClass>*/ createClassCollection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjAxOA=="}, "originalCommit": {"oid": "0b61d120c4b0e63ff95490174696e87516efa4fa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTQ1OTI5OnYy", "diffSide": "RIGHT", "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/results/BaseCallGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowNjo1MFrOGn4siQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoxMTowNVrOIDbUwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjU1Mw==", "bodyText": "This is a friend API.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r444476553", "createdAt": "2020-06-23T20:06:50Z", "author": {"login": "matthiasblaesing"}, "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/results/BaseCallGraphBuilder.java", "diffHunk": "@@ -42,7 +42,7 @@\n \n     //~ Instance fields ----------------------------------------------------------------------------------------------------------\n \n-    protected List/*<Runnable>*/ afterBatchCommands = new ArrayList<>();\n+    protected List<Runnable> afterBatchCommands = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b61d120c4b0e63ff95490174696e87516efa4fa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2NDMyMg==", "bodyText": "This is a friend API.\n\nfixed..", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r540464322", "createdAt": "2020-12-10T20:11:05Z", "author": {"login": "BradWalker"}, "path": "profiler/lib.profiler/src/org/netbeans/lib/profiler/results/BaseCallGraphBuilder.java", "diffHunk": "@@ -42,7 +42,7 @@\n \n     //~ Instance fields ----------------------------------------------------------------------------------------------------------\n \n-    protected List/*<Runnable>*/ afterBatchCommands = new ArrayList<>();\n+    protected List<Runnable> afterBatchCommands = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjU1Mw=="}, "originalCommit": {"oid": "0b61d120c4b0e63ff95490174696e87516efa4fa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjAwMjk0OnYy", "diffSide": "LEFT", "path": "enterprise/web.jsf/src/org/netbeans/modules/web/jsf/wizards/TemplateClientPanelVisual.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODoxODo0NVrOIDtyfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoxNDoyNlrOIFYPaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2Njg0Nw==", "bodyText": "HashSet of size 1 is probably a non-sense. By default it has 75% fill ratio and then it is rehashed.E.g. as soon as first item is added, the set is probably rehashed.", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r540766847", "createdAt": "2020-12-11T08:18:45Z", "author": {"login": "jtulach"}, "path": "enterprise/web.jsf/src/org/netbeans/modules/web/jsf/wizards/TemplateClientPanelVisual.java", "diffHunk": "@@ -75,7 +75,7 @@\n \n     private WizardDescriptor wizardDescriptor;\n \n-    private final Set/*<ChangeListener>*/ listeners = new HashSet(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "534be04f7bddd167d31068ad6d3f5162b0fd0380"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUxMDk1NQ==", "bodyText": "HashSet of size 1 is probably a non-sense.\n\nJust a follow-up comment in case someone comes across this bug report in the future.. I completely agree with your comment! My goal is simply to try and stay away from any \"potential\" source changes that could be behavioral. Even ones as small as this. Hope that explains why I do what I do..", "url": "https://github.com/apache/netbeans/pull/2194#discussion_r542510955", "createdAt": "2020-12-14T16:14:26Z", "author": {"login": "BradWalker"}, "path": "enterprise/web.jsf/src/org/netbeans/modules/web/jsf/wizards/TemplateClientPanelVisual.java", "diffHunk": "@@ -75,7 +75,7 @@\n \n     private WizardDescriptor wizardDescriptor;\n \n-    private final Set/*<ChangeListener>*/ listeners = new HashSet(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2Njg0Nw=="}, "originalCommit": {"oid": "534be04f7bddd167d31068ad6d3f5162b0fd0380"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 574, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}