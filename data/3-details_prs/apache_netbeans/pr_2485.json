{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NTIxOTU4", "number": 2485, "title": "[NETBEANS-4938] Fixed Gradle Java Frontend Application generation", "bodyText": "Well, I've made the template copy straight. It loads all three projects (root, web, desktop) also the Demo.java into the editor.", "createdAt": "2020-10-25T01:47:47Z", "url": "https://github.com/apache/netbeans/pull/2485", "merged": true, "mergeCommit": {"oid": "444dd9c6c6aac5bfe9aabb4e52504908a40596e8"}, "closed": true, "closedAt": "2020-10-25T06:33:58Z", "author": {"login": "lkishalmi"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdV2GDmAFqTUxNjMxOTA2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdV4PnTgBqjM5MTc0NTc4ODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzE5MDY2", "url": "https://github.com/apache/netbeans/pull/2485#pullrequestreview-516319066", "createdAt": "2020-10-25T02:06:14Z", "commit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMjowNjoxNFrOHn1rKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMjowOToyNlrOHn1sBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTkxNA==", "bodyText": "I always prefer the FileObject abstraction over using plain File. It makes me sad when I see code moving to the opposite direction.\nWhat is the reason for making such change? The fact that modifications using File aren't notified as soon as they are made to various listeners?", "url": "https://github.com/apache/netbeans/pull/2485#discussion_r511535914", "createdAt": "2020-10-25T02:06:14Z", "author": {"login": "jtulach"}, "path": "java/gradle.htmlui/src/org/netbeans/modules/gradle/htmlui/GradleArchetype.java", "diffHunk": "@@ -18,59 +18,74 @@\n  */\n package org.netbeans.modules.gradle.htmlui;\n \n-import java.io.IOException;\n+import java.io.File;\n import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n-import org.netbeans.api.project.ProjectManager;\n-import org.netbeans.api.templates.FileBuilder;\n-import org.netbeans.api.templates.FileBuilder.Mode;\n+import org.netbeans.modules.gradle.spi.newproject.TemplateOperation;\n import org.openide.filesystems.FileObject;\n import org.openide.filesystems.FileUtil;\n import org.openide.util.MapFormat;\n \n public final class GradleArchetype {\n     private final FileObject templates;\n-    private final FileObject projectFo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNTk5MQ==", "bodyText": "Relative path is using / as a directory separator. File is supposed to be using File.separator.", "url": "https://github.com/apache/netbeans/pull/2485#discussion_r511535991", "createdAt": "2020-10-25T02:07:17Z", "author": {"login": "jtulach"}, "path": "java/gradle.htmlui/src/org/netbeans/modules/gradle/htmlui/GradleArchetype.java", "diffHunk": "@@ -18,59 +18,74 @@\n  */\n package org.netbeans.modules.gradle.htmlui;\n \n-import java.io.IOException;\n+import java.io.File;\n import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n-import org.netbeans.api.project.ProjectManager;\n-import org.netbeans.api.templates.FileBuilder;\n-import org.netbeans.api.templates.FileBuilder.Mode;\n+import org.netbeans.modules.gradle.spi.newproject.TemplateOperation;\n import org.openide.filesystems.FileObject;\n import org.openide.filesystems.FileUtil;\n import org.openide.util.MapFormat;\n \n public final class GradleArchetype {\n     private final FileObject templates;\n-    private final FileObject projectFo;\n+    private final File rootDir;\n     private final Map<String, Object> params;\n \n-    public GradleArchetype(FileObject templates, FileObject projectFo, Map<String, Object> params) {\n+    public GradleArchetype(FileObject templates, File rootDir, Map<String, Object> params) {\n         this.templates = templates;\n-        this.projectFo = projectFo;\n+        this.rootDir = rootDir;\n         this.params = params;\n     }\n \n-    public final void copyTemplates() throws IOException {\n+    public final void copyTemplates(TemplateOperation ops) {\n         MapFormat mf = new MapFormat(params);\n         mf.setLeftBrace(\"${\"); // NOI18N\n         mf.setRightBrace(\"}\"); // NOI18N\n+        List<File> projectDirs = new LinkedList<>();\n+        projectDirs.add(rootDir);\n+        \n         Enumeration<? extends FileObject> en = templates.getChildren(true);\n         while (en.hasMoreElements()) {\n             FileObject template = en.nextElement();\n-            if (!template.isData()) {\n-                continue;\n-            }\n-            String relativeParent = FileUtil.getRelativePath(templates, template.getParent());\n-            Object packageAttr = template.getAttribute(\"package\"); // NOI18N\n-            if (packageAttr instanceof String) {\n-                String packageName = mf.format(packageAttr).replace('.', '/');\n-                relativeParent += \"/\" + packageName;\n-            }\n-            FileObject destinationFolder = FileUtil.createFolder(projectFo, relativeParent);\n+            String relativePath = FileUtil.getRelativePath(templates, template);\n+            if (template.isFolder()) {\n+                File dir = new File(rootDir, relativePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNjA1NA==", "bodyText": "The important attribute enhances the API, but I am not sure if the previous API was documented anywhere.", "url": "https://github.com/apache/netbeans/pull/2485#discussion_r511536054", "createdAt": "2020-10-25T02:08:36Z", "author": {"login": "jtulach"}, "path": "java/gradle.htmlui/src/org/netbeans/modules/gradle/htmlui/GradleArchetype.java", "diffHunk": "@@ -18,59 +18,74 @@\n  */\n package org.netbeans.modules.gradle.htmlui;\n \n-import java.io.IOException;\n+import java.io.File;\n import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n-import org.netbeans.api.project.ProjectManager;\n-import org.netbeans.api.templates.FileBuilder;\n-import org.netbeans.api.templates.FileBuilder.Mode;\n+import org.netbeans.modules.gradle.spi.newproject.TemplateOperation;\n import org.openide.filesystems.FileObject;\n import org.openide.filesystems.FileUtil;\n import org.openide.util.MapFormat;\n \n public final class GradleArchetype {\n     private final FileObject templates;\n-    private final FileObject projectFo;\n+    private final File rootDir;\n     private final Map<String, Object> params;\n \n-    public GradleArchetype(FileObject templates, FileObject projectFo, Map<String, Object> params) {\n+    public GradleArchetype(FileObject templates, File rootDir, Map<String, Object> params) {\n         this.templates = templates;\n-        this.projectFo = projectFo;\n+        this.rootDir = rootDir;\n         this.params = params;\n     }\n \n-    public final void copyTemplates() throws IOException {\n+    public final void copyTemplates(TemplateOperation ops) {\n         MapFormat mf = new MapFormat(params);\n         mf.setLeftBrace(\"${\"); // NOI18N\n         mf.setRightBrace(\"}\"); // NOI18N\n+        List<File> projectDirs = new LinkedList<>();\n+        projectDirs.add(rootDir);\n+        \n         Enumeration<? extends FileObject> en = templates.getChildren(true);\n         while (en.hasMoreElements()) {\n             FileObject template = en.nextElement();\n-            if (!template.isData()) {\n-                continue;\n-            }\n-            String relativeParent = FileUtil.getRelativePath(templates, template.getParent());\n-            Object packageAttr = template.getAttribute(\"package\"); // NOI18N\n-            if (packageAttr instanceof String) {\n-                String packageName = mf.format(packageAttr).replace('.', '/');\n-                relativeParent += \"/\" + packageName;\n-            }\n-            FileObject destinationFolder = FileUtil.createFolder(projectFo, relativeParent);\n+            String relativePath = FileUtil.getRelativePath(templates, template);\n+            if (template.isFolder()) {\n+                File dir = new File(rootDir, relativePath);\n+                ops.createFolder(dir);\n+                Object projectAttr = template.getAttribute(\"project\"); // NOI18N\n+                if (Boolean.TRUE == projectAttr) {\n+                    projectDirs.add(dir);\n+                }\n+            } else if (template.isData()) {\n+                Object packageAttr = template.getAttribute(\"package\"); // NOI18N\n+                if (packageAttr instanceof String) {\n+                    String relativeParent = FileUtil.getRelativePath(templates, template.getParent());\n+                    String packageName = mf.format(packageAttr);\n+                    File sourceRoot = new File(rootDir, relativeParent);\n+                    ops.createPackage(sourceRoot, packageName);\n+                    File packageDir = new File(sourceRoot, packageName.replace('.', '/'));\n \n-            FileObject previous = destinationFolder.getFileObject(template.getNameExt());\n-            if (previous != null) {\n-                previous.delete();\n+                    Map<String, Object> pparams = new HashMap<>(params);\n+                    pparams.put(\"package\", packageName); //NOI18N\n+                    copyDataTemplate(ops, template, new File(packageDir, template.getNameExt()), pparams);\n+                } else {\n+                    copyDataTemplate(ops, template, new File(rootDir, relativePath), params);\n+                }\n             }\n+        }\n+        for (File projectDir : projectDirs) {\n+            ops.addProjectPreload(projectDir);\n+        }\n+    }\n \n-            FileBuilder fb = new FileBuilder(template, destinationFolder);\n-            fb.withParameters(params);\n-            fb.defaultMode(Mode.COPY);\n-\n-            FileObject copied = fb.build().iterator().next();\n-\n-            assert copied != null && copied.getNameExt().equals(template.getNameExt()) : \"Created \" + copied;\n+    private static void copyDataTemplate(TemplateOperation ops, FileObject template, File target, Map<String, Object> params) {\n+        Object importantAttr = template.getAttribute(\"important\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNjEzMg==", "bodyText": "This certainly looks like a simplification.", "url": "https://github.com/apache/netbeans/pull/2485#discussion_r511536132", "createdAt": "2020-10-25T02:09:26Z", "author": {"login": "jtulach"}, "path": "java/gradle.htmlui/src/org/netbeans/modules/gradle/htmlui/HtmlJavaApplicationProjectWizard.java", "diffHunk": "@@ -57,47 +53,24 @@ public HtmlJavaApplicationProjectWizard() {\n \n     @Override\n     protected void collectOperations(TemplateOperation ops, Map<String, Object> params) {\n-        super.collectOperations(ops, params);\n-        String packageBase = (String) params.get(PROP_PACKAGE_BASE);\n-        String mainClassName = (String) params.get(\"mainClassName\");\n+        String name = (String) params.get(PROP_NAME);\n+        File loc = (File) params.get(CommonProjectActions.PROJECT_PARENT_FOLDER);\n+\n+        File rootDir = new File(loc, name);\n+        params.put(PROP_PROJECT_ROOT, rootDir);\n         \n-        File projectDir = (File) params.get(\"projectDir\");\n+        ops.createFolder(rootDir);\n \n-        File mainJava = (File) params.get(PROP_MAIN_JAVA_DIR);\n-        File packageDir = new File(mainJava, packageBase.replace('.', '/'));\n-        Map<String, Object> mainParams = new HashMap<>(params);\n-        mainParams.put(\"project\", new DummyProject());\n-        mainParams.put(\"package\", packageBase); //NOI18N\n-        mainParams.put(\"name\", mainClassName); //NOI18N\n \n         FileObject folder = ((TemplateWizard)this.getData()).getTemplate().getPrimaryFile();\n-        ops.addConfigureProject(projectDir, new CopyTree(folder, projectDir, mainParams));\n-    }\n-\n-    private static class CopyTree implements TemplateOperation.ProjectConfigurator {\n-        private final FileObject templateFolder;\n-        private final File projectDir;\n-        private final Map<String, Object> params;\n+        GradleArchetype ga = new GradleArchetype(folder, rootDir, params);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e8402029921acddbc89be3e7fa982a80ad8f161", "author": {"user": {"login": "lkishalmi", "name": "Laszlo Kishalmi"}}, "url": "https://github.com/apache/netbeans/commit/9e8402029921acddbc89be3e7fa982a80ad8f161", "committedDate": "2020-10-25T04:40:47Z", "message": "[NETBEANS-4938] Fixed Gradle Java Frontend Application generation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52ac01689ad62a327fc7ea4a90dd77b0572d8d09", "author": {"user": {"login": "lkishalmi", "name": "Laszlo Kishalmi"}}, "url": "https://github.com/apache/netbeans/commit/52ac01689ad62a327fc7ea4a90dd77b0572d8d09", "committedDate": "2020-10-25T01:41:47Z", "message": "[NETBEANS-4938] Fixed Gradle Java Frontend Application generation"}, "afterCommit": {"oid": "9e8402029921acddbc89be3e7fa982a80ad8f161", "author": {"user": {"login": "lkishalmi", "name": "Laszlo Kishalmi"}}, "url": "https://github.com/apache/netbeans/commit/9e8402029921acddbc89be3e7fa982a80ad8f161", "committedDate": "2020-10-25T04:40:47Z", "message": "[NETBEANS-4938] Fixed Gradle Java Frontend Application generation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 501, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}