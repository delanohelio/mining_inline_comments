{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDU2NjE1", "number": 2222, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1MTozNlrOEQ9BYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoyOTo0M1rOESSZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjEyNDUwOnYy", "diffSide": "RIGHT", "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1MTozN1rOG1ZFDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNTo0N1rOG3U7iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzODYwNg==", "bodyText": "Sorry, but I am not sure we should filter out j.l.Record here. We are not filtering any other element AFAIK, so why Record?", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458638606", "createdAt": "2020-07-22T08:51:37Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3930,6 +4136,8 @@ public boolean accept(Element e, TypeMirror t) {\n             }\n         };\n         for (TypeElement e : controller.getElementUtilities().getGlobalTypes(acceptor)) {\n+            if (e.getQualifiedName().toString().equals(JAVA_LANG_RECORD) && env.getController().getSourceVersion().compareTo(SOURCE_VERSION_RELEASE_14) < 0) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 473}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMjk0NQ==", "bodyText": "If I don't add the check , 'Record' entry need to be added in old golden files (roughly 65 files) otherwise existing test-cases will fail with nb-javac for 14", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458712945", "createdAt": "2020-07-22T11:06:20Z", "author": {"login": "arusinha"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3930,6 +4136,8 @@ public boolean accept(Element e, TypeMirror t) {\n             }\n         };\n         for (TypeElement e : controller.getElementUtilities().getGlobalTypes(acceptor)) {\n+            if (e.getQualifiedName().toString().equals(JAVA_LANG_RECORD) && env.getController().getSourceVersion().compareTo(SOURCE_VERSION_RELEASE_14) < 0) ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzODYwNg=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 473}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0NTcwMQ==", "bodyText": "Sorry, I am unclear which files - the code completion tests run and pass on JDK 14 without nb-javac, the golden files have been updated some time ago. I believe files like \".../JavaCompletionTaskTest/14/initBlockTypesAndLocalMembers.pass\" have been specifically added so that the tests would pass on JDK 14. Not sure if nb-javac should change anything here?", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r459245701", "createdAt": "2020-07-23T06:49:49Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3930,6 +4136,8 @@ public boolean accept(Element e, TypeMirror t) {\n             }\n         };\n         for (TypeElement e : controller.getElementUtilities().getGlobalTypes(acceptor)) {\n+            if (e.getQualifiedName().toString().equals(JAVA_LANG_RECORD) && env.getController().getSourceVersion().compareTo(SOURCE_VERSION_RELEASE_14) < 0) ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzODYwNg=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 473}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2Nzc4NQ==", "bodyText": "java.lang.Record check is now removed. The problem was the in the proposed nb-javac-14 where it was added by mistake,corrected now", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r460667785", "createdAt": "2020-07-27T06:15:47Z", "author": {"login": "arusinha"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3930,6 +4136,8 @@ public boolean accept(Element e, TypeMirror t) {\n             }\n         };\n         for (TypeElement e : controller.getElementUtilities().getGlobalTypes(acceptor)) {\n+            if (e.getQualifiedName().toString().equals(JAVA_LANG_RECORD) && env.getController().getSourceVersion().compareTo(SOURCE_VERSION_RELEASE_14) < 0) ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzODYwNg=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 473}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjEzMjMwOnYy", "diffSide": "RIGHT", "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/1.8/typesRecordLocalMembersAndVars.pass", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1Mzo0MFrOG1ZJww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoyMzoxNFrOG3VFhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzOTgxMQ==", "bodyText": "I am unsure about the \"Record\" here. This should be the golden file when the runtime platform is JDK 8. JDK 8 does not have j.l.Record, right?\n(I would also suggest to minimize the number of golden outputs, if/as feasible.)", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458639811", "createdAt": "2020-07-22T08:53:40Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/1.8/typesRecordLocalMembersAndVars.pass", "diffHunk": "@@ -0,0 +1,111 @@\n+boolean\n+byte\n+char\n+double\n+final\n+float\n+int\n+long\n+short\n+X\n+Y\n+AbstractMethodError\n+Appendable\n+ArithmeticException\n+ArrayIndexOutOfBoundsException\n+ArrayStoreException\n+AssertionError\n+AutoCloseable\n+Boolean\n+BootstrapMethodError\n+Byte\n+CharSequence\n+Character\n+Class\n+ClassCastException\n+ClassCircularityError\n+ClassFormatError\n+ClassLoader\n+ClassNotFoundException\n+ClassValue\n+CloneNotSupportedException\n+Cloneable\n+Comparable\n+Compiler\n+Deprecated\n+Double\n+Enum\n+EnumConstantNotPresentException\n+Error\n+Exception\n+ExceptionInInitializerError\n+Float\n+FunctionalInterface\n+IllegalAccessError\n+IllegalAccessException\n+IllegalArgumentException\n+IllegalMonitorStateException\n+IllegalStateException\n+IllegalThreadStateException\n+IncompatibleClassChangeError\n+IndexOutOfBoundsException\n+InheritableThreadLocal\n+InstantiationError\n+InstantiationException\n+Integer\n+InternalError\n+InterruptedException\n+Iterable\n+LinkageError\n+Long\n+Math\n+NegativeArraySizeException\n+NoClassDefFoundError\n+NoSuchFieldError\n+NoSuchFieldException\n+NoSuchMethodError\n+NoSuchMethodException\n+NullPointerException\n+Number\n+NumberFormatException\n+Object\n+OutOfMemoryError\n+Override\n+Package\n+Process\n+ProcessBuilder\n+Readable\n+Record", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxNjc2MA==", "bodyText": "Record will come as we are using it in below test-case\npublic void testInsideRecParams() throws Exception {\nperformTest(\"Records\", 892, null, \"typesRecordLocalMembersAndVars.pass\", SOURCE_LEVEL);\n}\nruntime is jdk-8 but SOURCE_LEVEL is 14\n\"\"(I would also suggest to minimize the number of golden outputs, if/as feasible.)\"\"\n--- i will reduce the content of golden files", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458716760", "createdAt": "2020-07-22T11:14:08Z", "author": {"login": "arusinha"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/1.8/typesRecordLocalMembersAndVars.pass", "diffHunk": "@@ -0,0 +1,111 @@\n+boolean\n+byte\n+char\n+double\n+final\n+float\n+int\n+long\n+short\n+X\n+Y\n+AbstractMethodError\n+Appendable\n+ArithmeticException\n+ArrayIndexOutOfBoundsException\n+ArrayStoreException\n+AssertionError\n+AutoCloseable\n+Boolean\n+BootstrapMethodError\n+Byte\n+CharSequence\n+Character\n+Class\n+ClassCastException\n+ClassCircularityError\n+ClassFormatError\n+ClassLoader\n+ClassNotFoundException\n+ClassValue\n+CloneNotSupportedException\n+Cloneable\n+Comparable\n+Compiler\n+Deprecated\n+Double\n+Enum\n+EnumConstantNotPresentException\n+Error\n+Exception\n+ExceptionInInitializerError\n+Float\n+FunctionalInterface\n+IllegalAccessError\n+IllegalAccessException\n+IllegalArgumentException\n+IllegalMonitorStateException\n+IllegalStateException\n+IllegalThreadStateException\n+IncompatibleClassChangeError\n+IndexOutOfBoundsException\n+InheritableThreadLocal\n+InstantiationError\n+InstantiationException\n+Integer\n+InternalError\n+InterruptedException\n+Iterable\n+LinkageError\n+Long\n+Math\n+NegativeArraySizeException\n+NoClassDefFoundError\n+NoSuchFieldError\n+NoSuchFieldException\n+NoSuchMethodError\n+NoSuchMethodException\n+NullPointerException\n+Number\n+NumberFormatException\n+Object\n+OutOfMemoryError\n+Override\n+Package\n+Process\n+ProcessBuilder\n+Readable\n+Record", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzOTgxMQ=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0NDY4NA==", "bodyText": "Sorry, but this does not match my understanding of how the tests are working. The content of the golden files is based on the runtime platfom - e.g. the content of java.lang. And when running on JDK 8, there is no java.lang.Record, correct? So when the completion will list all the content of java.lang, it is not clear to me where it would find out j.l.Record?", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r459244684", "createdAt": "2020-07-23T06:47:04Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/1.8/typesRecordLocalMembersAndVars.pass", "diffHunk": "@@ -0,0 +1,111 @@\n+boolean\n+byte\n+char\n+double\n+final\n+float\n+int\n+long\n+short\n+X\n+Y\n+AbstractMethodError\n+Appendable\n+ArithmeticException\n+ArrayIndexOutOfBoundsException\n+ArrayStoreException\n+AssertionError\n+AutoCloseable\n+Boolean\n+BootstrapMethodError\n+Byte\n+CharSequence\n+Character\n+Class\n+ClassCastException\n+ClassCircularityError\n+ClassFormatError\n+ClassLoader\n+ClassNotFoundException\n+ClassValue\n+CloneNotSupportedException\n+Cloneable\n+Comparable\n+Compiler\n+Deprecated\n+Double\n+Enum\n+EnumConstantNotPresentException\n+Error\n+Exception\n+ExceptionInInitializerError\n+Float\n+FunctionalInterface\n+IllegalAccessError\n+IllegalAccessException\n+IllegalArgumentException\n+IllegalMonitorStateException\n+IllegalStateException\n+IllegalThreadStateException\n+IncompatibleClassChangeError\n+IndexOutOfBoundsException\n+InheritableThreadLocal\n+InstantiationError\n+InstantiationException\n+Integer\n+InternalError\n+InterruptedException\n+Iterable\n+LinkageError\n+Long\n+Math\n+NegativeArraySizeException\n+NoClassDefFoundError\n+NoSuchFieldError\n+NoSuchFieldException\n+NoSuchMethodError\n+NoSuchMethodException\n+NullPointerException\n+Number\n+NumberFormatException\n+Object\n+OutOfMemoryError\n+Override\n+Package\n+Process\n+ProcessBuilder\n+Readable\n+Record", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzOTgxMQ=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3MDM0Mw==", "bodyText": "The check was not necessary, removed now\nAlso golden files are trimmed now", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r460670343", "createdAt": "2020-07-27T06:23:14Z", "author": {"login": "arusinha"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/1.8/typesRecordLocalMembersAndVars.pass", "diffHunk": "@@ -0,0 +1,111 @@\n+boolean\n+byte\n+char\n+double\n+final\n+float\n+int\n+long\n+short\n+X\n+Y\n+AbstractMethodError\n+Appendable\n+ArithmeticException\n+ArrayIndexOutOfBoundsException\n+ArrayStoreException\n+AssertionError\n+AutoCloseable\n+Boolean\n+BootstrapMethodError\n+Byte\n+CharSequence\n+Character\n+Class\n+ClassCastException\n+ClassCircularityError\n+ClassFormatError\n+ClassLoader\n+ClassNotFoundException\n+ClassValue\n+CloneNotSupportedException\n+Cloneable\n+Comparable\n+Compiler\n+Deprecated\n+Double\n+Enum\n+EnumConstantNotPresentException\n+Error\n+Exception\n+ExceptionInInitializerError\n+Float\n+FunctionalInterface\n+IllegalAccessError\n+IllegalAccessException\n+IllegalArgumentException\n+IllegalMonitorStateException\n+IllegalStateException\n+IllegalThreadStateException\n+IncompatibleClassChangeError\n+IndexOutOfBoundsException\n+InheritableThreadLocal\n+InstantiationError\n+InstantiationException\n+Integer\n+InternalError\n+InterruptedException\n+Iterable\n+LinkageError\n+Long\n+Math\n+NegativeArraySizeException\n+NoClassDefFoundError\n+NoSuchFieldError\n+NoSuchFieldException\n+NoSuchMethodError\n+NoSuchMethodException\n+NullPointerException\n+Number\n+NumberFormatException\n+Object\n+OutOfMemoryError\n+Override\n+Package\n+Process\n+ProcessBuilder\n+Readable\n+Record", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzOTgxMQ=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjE3MzA3OnYy", "diffSide": "RIGHT", "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowNDoyNlrOG1ZjPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNjoyNlrOG3U8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0NjMzNQ==", "bodyText": "I think this method's name and content do not really match - it is not only \"isRecordSupported\", but also \"and is the prefix a prefix of 'record''. I would suggest to drop the second concern from this method. Many callers don't need the prefix check. I counted just two callers that really need to check the prefix (for many, the prefix check happens automatically later), and I think it would be cleaner for them to call the prefix check explicitly.\nAlso, for discussion - should there be a preview enablement test here as well?", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458646335", "createdAt": "2020-07-22T09:04:26Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3008,10 +3027,194 @@ private void insideBreakOrContinue(Env env) throws IOException {\n             }\n         }\n     }\n+    \n+    private void addClassTypes(final Env env, DeclaredType baseType) throws IOException{\n+        EnumSet<ElementKind> classKinds = EnumSet.of(CLASS, INTERFACE, ENUM, ANNOTATION_TYPE, TYPE_PARAMETER);\n+        if (isRecordSupported(env, null)) {\n+            classKinds.add(TreeShims.getRecordKind());\n+        }\n+        addTypes(env, classKinds, null);\n+    }\n+\n+    private boolean isRecordSupported(final Env env, String prefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 267}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2Nzk4NA==", "bodyText": "Corrected the method signature now.\nWe are not using enable-preview flag to enable/disable text-block auto-completion. Propose to retain the same behavior. If someone types \"rec\" it will be auto completed to \"record\" . He/She can then use the enable-preview hint to add the required parameter", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r460667984", "createdAt": "2020-07-27T06:16:26Z", "author": {"login": "arusinha"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3008,10 +3027,194 @@ private void insideBreakOrContinue(Env env) throws IOException {\n             }\n         }\n     }\n+    \n+    private void addClassTypes(final Env env, DeclaredType baseType) throws IOException{\n+        EnumSet<ElementKind> classKinds = EnumSet.of(CLASS, INTERFACE, ENUM, ANNOTATION_TYPE, TYPE_PARAMETER);\n+        if (isRecordSupported(env, null)) {\n+            classKinds.add(TreeShims.getRecordKind());\n+        }\n+        addTypes(env, classKinds, null);\n+    }\n+\n+    private boolean isRecordSupported(final Env env, String prefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0NjMzNQ=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 267}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjE3NjU0OnYy", "diffSide": "RIGHT", "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowNToxM1rOG1ZlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDoxOTo0MFrOG17wLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0Njg1NQ==", "bodyText": "The baseType parameter is unused. Suggest to either pass it to addTypes, or drop it.", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r458646855", "createdAt": "2020-07-22T09:05:13Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3008,10 +3027,194 @@ private void insideBreakOrContinue(Env env) throws IOException {\n             }\n         }\n     }\n+    \n+    private void addClassTypes(final Env env, DeclaredType baseType) throws IOException{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwNjcwMQ==", "bodyText": "thanks for correcting me, I will pass the parameter to to addTypes call", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r459206701", "createdAt": "2020-07-23T04:19:40Z", "author": {"login": "arusinha"}, "path": "java/java.completion/src/org/netbeans/modules/java/completion/JavaCompletionTask.java", "diffHunk": "@@ -3008,10 +3027,194 @@ private void insideBreakOrContinue(Env env) throws IOException {\n             }\n         }\n     }\n+    \n+    private void addClassTypes(final Env env, DeclaredType baseType) throws IOException{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0Njg1NQ=="}, "originalCommit": {"oid": "95b95096c1c3bc4f7b2d0d6e887498c661f4a266"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjExMjY1OnYy", "diffSide": "RIGHT", "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/10/override.pass", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoyOTo0M1rOG3Yozw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxMDoxN1rOG4_wsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyODUyNw==", "bodyText": "I don't think we need the golden files that are the same for 1.8 and 10 and other versions, right? If the tests don't find the golden output for e.g. version 10, they should look for the golden output of older versions. I.e. it should be enough to specify a golden output for 1.8, and only re-specify it if it changes in a newer version.", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r460728527", "createdAt": "2020-07-27T08:29:43Z", "author": {"login": "lahodaj"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/10/override.pass", "diffHunk": "@@ -0,0 +1 @@\n+Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d0eb871dba30bbf365dd10b949ff95f517b4c6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxODA5Nw==", "bodyText": "Had reduced the golden files in last commit.", "url": "https://github.com/apache/netbeans/pull/2222#discussion_r462418097", "createdAt": "2020-07-29T16:10:17Z", "author": {"login": "arusinha"}, "path": "java/java.completion/test/unit/data/goldenfiles/org/netbeans/modules/java/completion/JavaCompletionTaskTest/10/override.pass", "diffHunk": "@@ -0,0 +1 @@\n+Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyODUyNw=="}, "originalCommit": {"oid": "c3d0eb871dba30bbf365dd10b949ff95f517b4c6"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 447, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}