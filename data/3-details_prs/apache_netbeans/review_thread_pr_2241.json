{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTYzNTIy", "number": 2241, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo1MDo0NVrOEL9p3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo1MjoxN1rOEL9ruA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTc5OTMzOnYy", "diffSide": "RIGHT", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo1MDo0NVrOGtzAJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjo1NDozMFrOGvPzSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ==", "bodyText": "Maybe better compareAndSet()?", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450674725", "createdAt": "2020-07-07T07:50:45Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTE0OQ==", "bodyText": "Ha, it is running in just one thread, right? In such a case, not needed, of course.", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450675149", "createdAt": "2020-07-07T07:51:32Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTQ2MQ==", "bodyText": "yes, will remove.", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450685461", "createdAt": "2020-07-07T08:11:09Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczOTIwNQ==", "bodyText": "Oops, will change it to your suggestion :)", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450739205", "createdAt": "2020-07-07T09:41:34Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1Nzc0OQ==", "bodyText": "If it is running in only one thread (as here I guess, in the parsing thread) then AtomicBoolean is just a holder for a boolean. So, using compareAndSet() is IMHO not necessary.", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450757749", "createdAt": "2020-07-07T10:14:12Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwODUzOA==", "bodyText": "I seem to misunderstand something. Sorry... I'll revert it if I modify this class in the future. Thank you for your review :)", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r451208538", "createdAt": "2020-07-08T00:00:18Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5NTE0Ng==", "bodyText": "No problem, my fault because of my misleading/confusing comment.", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r452195146", "createdAt": "2020-07-09T12:54:30Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTgwNDA4OnYy", "diffSide": "RIGHT", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo1MjoxN1rOGtzDPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODoxNDowMlrOGtzv9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTUxNw==", "bodyText": "Missing @Nullable?", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450675517", "createdAt": "2020-07-07T07:52:17Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);\n+            variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        }\n+        return variableScope;\n     }\n \n-    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n+    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, final AtomicBoolean isLazilyScanned) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4Njk2Ng==", "bodyText": "Will add. Thanks!", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450686966", "createdAt": "2020-07-07T08:14:02Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);\n+            variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        }\n+        return variableScope;\n     }\n \n-    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n+    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, final AtomicBoolean isLazilyScanned) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTUxNw=="}, "originalCommit": {"oid": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 459, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}