{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTY1MTM2", "number": 2578, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDo0MzoyOVrOFAkSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxOTozNDoyNlrOFBTpnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTM4ODkyOnYy", "diffSide": "RIGHT", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDo0MzoyOVrOH-7srA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNTowM1rOH_STxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1MTg1Mg==", "bodyText": "Nitpick: NOI18N", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r535751852", "createdAt": "2020-12-04T00:43:29Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMjMxMA==", "bodyText": "Fixed.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536122310", "createdAt": "2020-12-04T14:05:03Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1MTg1Mg=="}, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTM5MjEzOnYy", "diffSide": "RIGHT", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDo0NDoyOFrOH-7uWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNTozNlrOH_SVNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1MjI4MQ==", "bodyText": "Why Integer?", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r535752281", "createdAt": "2020-12-04T00:44:28Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -22,20 +22,28 @@\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n+import org.netbeans.api.annotations.common.CheckForNull;\n import org.netbeans.modules.csl.api.OffsetRange;\n import org.netbeans.modules.php.editor.api.PhpModifiers;\n import org.netbeans.modules.php.editor.api.QualifiedName;\n import org.netbeans.modules.php.editor.model.nodes.ASTNodeInfo.Kind;\n+import org.netbeans.modules.php.editor.parser.astnodes.ArrayCreation;\n+import org.netbeans.modules.php.editor.parser.astnodes.ArrayElement;\n import org.netbeans.modules.php.editor.parser.astnodes.ConstantDeclaration;\n import org.netbeans.modules.php.editor.parser.astnodes.Expression;\n import org.netbeans.modules.php.editor.parser.astnodes.Identifier;\n import org.netbeans.modules.php.editor.parser.astnodes.Scalar;\n import org.netbeans.modules.php.editor.parser.astnodes.UnaryOperation;\n+import org.netbeans.modules.php.editor.parser.astnodes.UnpackableArrayElement;\n \n /**\n  * @author Radek Matous\n  */\n public class ClassConstantDeclarationInfo extends ASTNodeInfo<Identifier> {\n+    // Array display is stopped after this length of string is reached.\n+    private static final Integer ARRAY_CUT_LENGTH = 50;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMjY3Nw==", "bodyText": "Changed type to int.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536122677", "createdAt": "2020-12-04T14:05:36Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -22,20 +22,28 @@\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n+import org.netbeans.api.annotations.common.CheckForNull;\n import org.netbeans.modules.csl.api.OffsetRange;\n import org.netbeans.modules.php.editor.api.PhpModifiers;\n import org.netbeans.modules.php.editor.api.QualifiedName;\n import org.netbeans.modules.php.editor.model.nodes.ASTNodeInfo.Kind;\n+import org.netbeans.modules.php.editor.parser.astnodes.ArrayCreation;\n+import org.netbeans.modules.php.editor.parser.astnodes.ArrayElement;\n import org.netbeans.modules.php.editor.parser.astnodes.ConstantDeclaration;\n import org.netbeans.modules.php.editor.parser.astnodes.Expression;\n import org.netbeans.modules.php.editor.parser.astnodes.Identifier;\n import org.netbeans.modules.php.editor.parser.astnodes.Scalar;\n import org.netbeans.modules.php.editor.parser.astnodes.UnaryOperation;\n+import org.netbeans.modules.php.editor.parser.astnodes.UnpackableArrayElement;\n \n /**\n  * @author Radek Matous\n  */\n public class ClassConstantDeclarationInfo extends ASTNodeInfo<Identifier> {\n+    // Array display is stopped after this length of string is reached.\n+    private static final Integer ARRAY_CUT_LENGTH = 50;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1MjI4MQ=="}, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTQ0MDc4OnYy", "diffSide": "RIGHT", "path": "php/php.editor/test/unit/data/testfiles/completion/lib/php56/classConst.php", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMTowMjozMVrOH-8IMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNzoxN1rOH_SZqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1ODg5Ng==", "bodyText": "The rat does not check the license header of test files. However, we should add it to new test files if possible. Of course, we need not add it to *.completion, *.pass, and so on.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r535758896", "createdAt": "2020-12-04T01:02:31Z", "author": {"login": "junichi11"}, "path": "php/php.editor/test/unit/data/testfiles/completion/lib/php56/classConst.php", "diffHunk": "@@ -0,0 +1,23 @@\n+<?php\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMzgxNw==", "bodyText": "I added license to both new test files.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536123817", "createdAt": "2020-12-04T14:07:17Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/test/unit/data/testfiles/completion/lib/php56/classConst.php", "diffHunk": "@@ -0,0 +1,23 @@\n+<?php\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1ODg5Ng=="}, "originalCommit": {"oid": "3732ec28ffb49398e8f43d1cc8a301aec3608a58"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTE0ODQ0OnYy", "diffSide": "RIGHT", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxOTozNDoyNlrOIAAfAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjoyNToyMVrOIAF85g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ==", "bodyText": "Perhaps instead of ... we could show something like ... (5 more elements)?", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536878851", "createdAt": "2020-12-05T19:34:26Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3OTIwNg==", "bodyText": "@KacerCZ @junichi11\nLet me know what you think about my comment. I am ready to merge. Thanks.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536879206", "createdAt": "2020-12-05T19:36:48Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg5NjI2NA==", "bodyText": "I prefer to give more space for actual elements.\nMaybe use shorter form ... (+5) or ... (5 more).", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536896264", "createdAt": "2020-12-05T21:31:34Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkxMjAxMQ==", "bodyText": "... (5 more) sounds good to me.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536912011", "createdAt": "2020-12-05T23:19:12Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzNjYzMQ==", "bodyText": "Agree with @tmysik", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536936631", "createdAt": "2020-12-06T02:23:26Z", "author": {"login": "junichi11"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk2NzUzMA==", "bodyText": "I made the change and updated image in description.", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536967530", "createdAt": "2020-12-06T06:19:23Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk2ODQyMg==", "bodyText": "Great, thanks!", "url": "https://github.com/apache/netbeans/pull/2578#discussion_r536968422", "createdAt": "2020-12-06T06:25:21Z", "author": {"login": "tmysik"}, "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/nodes/ClassConstantDeclarationInfo.java", "diffHunk": "@@ -97,4 +96,61 @@ public PhpModifiers getAccessModifiers() {\n         return PhpModifiers.fromBitMask(constantDeclaration.getModifier());\n     }\n \n+    @CheckForNull\n+    protected static String getConstantValue(Expression expr) {\n+        if (expr instanceof Scalar) {\n+            return ((Scalar) expr).getStringValue();\n+        }\n+        if (expr instanceof UnaryOperation) {\n+            UnaryOperation up = (UnaryOperation) expr;\n+            if (up.getOperator() == UnaryOperation.Operator.MINUS\n+                    && up.getExpression() instanceof Scalar) {\n+                return \"-\" + ((Scalar) up.getExpression()).getStringValue(); //NOI18N\n+            }\n+        }\n+        if (expr instanceof ArrayCreation) {\n+            return getConstantValue((ArrayCreation) expr);\n+        }\n+        return null;\n+    }\n+\n+    private static String getConstantValue(ArrayCreation expr) {\n+        String debug = expr.toString();\n+        StringBuilder sb = new StringBuilder(\"[\"); //NOI18N\n+        Integer displayedElements = 0;\n+        List<ArrayElement> elements = expr.getElements();\n+        for (ArrayElement element : elements) {\n+            if (displayedElements > 0) {\n+                sb.append(\", \"); //NOI18N\n+            }\n+            sb.append(getConstantValue(element));\n+            displayedElements++;\n+            if (sb.length() > ARRAY_CUT_LENGTH) {\n+                break;\n+            }\n+        }\n+        if (displayedElements < elements.size()) {\n+            sb.append(\", ...\"); //NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODg1MQ=="}, "originalCommit": {"oid": "fc7e43902c3a4e19c07749db96f8a73b6afda4b2"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 269, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}