{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMjA2MzMx", "number": 2445, "title": "Adding breadcrumbs for LSP languages.", "bodyText": "(This is an LSP-only client change.)", "createdAt": "2020-10-11T21:06:50Z", "url": "https://github.com/apache/netbeans/pull/2445", "merged": true, "mergeCommit": {"oid": "3f0b738a9f2b9b505b8c2281328f3184f8e46d8b"}, "closed": true, "closedAt": "2020-10-15T16:47:47Z", "author": {"login": "jlahoda"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRl_fXgH2gAyNTAxMjA2MzMxOmUzNjcxMGJjZTNjMmY3YzFlZDhhYzgxNGEzOTViMzg0NDlkZTY3MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSi2gngFqTUwODY3MDA3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e36710bce3c2f7c1ed8ac814a395b38449de6715", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/e36710bce3c2f7c1ed8ac814a395b38449de6715", "committedDate": "2020-10-11T21:09:47Z", "message": "Adding support for breadcrumbs for LSP languages."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c67778aaa1fad5791c01d5a5aafdf36168003a14", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/c67778aaa1fad5791c01d5a5aafdf36168003a14", "committedDate": "2020-10-11T21:05:05Z", "message": "Adding support for breadcrumbs for LSP languages."}, "afterCommit": {"oid": "e36710bce3c2f7c1ed8ac814a395b38449de6715", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/e36710bce3c2f7c1ed8ac814a395b38449de6715", "committedDate": "2020-10-11T21:09:47Z", "message": "Adding support for breadcrumbs for LSP languages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b17b17c3dc461403cfa14e038e127eb4e43d86b", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/7b17b17c3dc461403cfa14e038e127eb4e43d86b", "committedDate": "2020-10-12T04:46:04Z", "message": "Fixing editor.breadcrumbs friends."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NjcwMDcw", "url": "https://github.com/apache/netbeans/pull/2445#pullrequestreview-508670070", "createdAt": "2020-10-14T19:40:56Z", "commit": {"oid": "7b17b17c3dc461403cfa14e038e127eb4e43d86b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTo0MDo1NlrOHhiTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTo0Mjo0MVrOHhiXdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkyNzE2NQ==", "bodyText": "I would use the shorter constructor, that does not require specifying the last two arguments.", "url": "https://github.com/apache/netbeans/pull/2445#discussion_r504927165", "createdAt": "2020-10-14T19:40:56Z", "author": {"login": "matthiasblaesing"}, "path": "ide/lsp.client/src/org/netbeans/modules/lsp/client/bindings/BreadcrumbsImpl.java", "diffHunk": "@@ -0,0 +1,368 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.lsp.client.bindings;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Image;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.io.CharConversionException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.stream.Collectors;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.Position;\n+import org.eclipse.lsp4j.DocumentSymbol;\n+import org.eclipse.lsp4j.DocumentSymbolParams;\n+import org.eclipse.lsp4j.SymbolInformation;\n+import org.eclipse.lsp4j.TextDocumentIdentifier;\n+import org.eclipse.lsp4j.jsonrpc.messages.Either;\n+import org.netbeans.api.actions.Openable;\n+import org.netbeans.editor.SideBarFactory;\n+import org.netbeans.modules.editor.NbEditorUtilities;\n+import org.netbeans.modules.editor.breadcrumbs.spi.BreadcrumbsController;\n+import org.netbeans.modules.editor.breadcrumbs.spi.BreadcrumbsElement;\n+import org.netbeans.modules.lsp.client.LSPBindings;\n+import org.netbeans.modules.lsp.client.LSPBindings.BackgroundTask;\n+import org.netbeans.modules.lsp.client.Utils;\n+import org.openide.filesystems.FileObject;\n+import org.openide.loaders.DataObject;\n+import org.openide.loaders.DataObjectNotFoundException;\n+import org.openide.util.Exceptions;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.Lookup;\n+import org.openide.util.RequestProcessor;\n+import org.openide.util.lookup.Lookups;\n+import org.openide.xml.XMLUtil;\n+\n+/**\n+ *\n+ * @author lahvac\n+ */\n+public class BreadcrumbsImpl implements BackgroundTask {\n+\n+    private static final RequestProcessor WORKER = new RequestProcessor(BreadcrumbsImpl.class.getName(), 1, false, false);\n+    private final JTextComponent comp;\n+    private final Document doc;\n+    private RootBreadcrumbsElementImpl rootElement;\n+\n+    public BreadcrumbsImpl(JTextComponent comp) {\n+        this.comp = comp;\n+        this.doc = comp.getDocument();\n+        this.comp.addCaretListener(evt -> {\n+            update();\n+        });\n+    }\n+\n+    @Override\n+    public void run(LSPBindings bindings, FileObject file) {\n+        try {\n+            //TODO: modified while the query is running?\n+            List<Either<SymbolInformation, DocumentSymbol>> symbols = bindings.getTextDocumentService().documentSymbol(new DocumentSymbolParams(new TextDocumentIdentifier(Utils.toURI(file)))).get();\n+\n+            synchronized (this) {\n+                this.rootElement = new RootBreadcrumbsElementImpl(file, doc, symbols.stream().map(this::toDocumentSymbol).collect(Collectors.toList()));\n+            }\n+\n+            SwingUtilities.invokeLater(() -> update());\n+        } catch (InterruptedException | ExecutionException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+    }\n+\n+    private DocumentSymbol toDocumentSymbol(Either<SymbolInformation, DocumentSymbol> variants) {\n+        if (variants.isRight()) return variants.getRight();\n+\n+        SymbolInformation left = variants.getLeft();\n+\n+        return new DocumentSymbol(left.getName(), left.getKind(), left.getLocation().getRange(), left.getLocation().getRange(), null, Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b17b17c3dc461403cfa14e038e127eb4e43d86b"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkyODExNg==", "bodyText": "I suggest to reflow this to:\n        try {\n            //TODO: modified while the query is running?\n            List<Either<SymbolInformation, DocumentSymbol>> symbols = bindings\n                .getTextDocumentService()\n                .documentSymbol(\n                    new DocumentSymbolParams(\n                        new TextDocumentIdentifier(Utils.toURI(file))\n                    )\n                )\n                .get();\n\n            synchronized (this) {\n                this.rootElement = new RootBreadcrumbsElementImpl(\n                    file,\n                    doc,\n                    symbols.stream().map(this::toDocumentSymbol).collect(Collectors.toList())\n                );\n            }\n\n            SwingUtilities.invokeLater(() -> update());\n        } catch (InterruptedException | ExecutionException ex) {\n            Exceptions.printStackTrace(ex);\n        }", "url": "https://github.com/apache/netbeans/pull/2445#discussion_r504928116", "createdAt": "2020-10-14T19:42:41Z", "author": {"login": "matthiasblaesing"}, "path": "ide/lsp.client/src/org/netbeans/modules/lsp/client/bindings/BreadcrumbsImpl.java", "diffHunk": "@@ -0,0 +1,368 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.lsp.client.bindings;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Image;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.io.CharConversionException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.stream.Collectors;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.Position;\n+import org.eclipse.lsp4j.DocumentSymbol;\n+import org.eclipse.lsp4j.DocumentSymbolParams;\n+import org.eclipse.lsp4j.SymbolInformation;\n+import org.eclipse.lsp4j.TextDocumentIdentifier;\n+import org.eclipse.lsp4j.jsonrpc.messages.Either;\n+import org.netbeans.api.actions.Openable;\n+import org.netbeans.editor.SideBarFactory;\n+import org.netbeans.modules.editor.NbEditorUtilities;\n+import org.netbeans.modules.editor.breadcrumbs.spi.BreadcrumbsController;\n+import org.netbeans.modules.editor.breadcrumbs.spi.BreadcrumbsElement;\n+import org.netbeans.modules.lsp.client.LSPBindings;\n+import org.netbeans.modules.lsp.client.LSPBindings.BackgroundTask;\n+import org.netbeans.modules.lsp.client.Utils;\n+import org.openide.filesystems.FileObject;\n+import org.openide.loaders.DataObject;\n+import org.openide.loaders.DataObjectNotFoundException;\n+import org.openide.util.Exceptions;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.Lookup;\n+import org.openide.util.RequestProcessor;\n+import org.openide.util.lookup.Lookups;\n+import org.openide.xml.XMLUtil;\n+\n+/**\n+ *\n+ * @author lahvac\n+ */\n+public class BreadcrumbsImpl implements BackgroundTask {\n+\n+    private static final RequestProcessor WORKER = new RequestProcessor(BreadcrumbsImpl.class.getName(), 1, false, false);\n+    private final JTextComponent comp;\n+    private final Document doc;\n+    private RootBreadcrumbsElementImpl rootElement;\n+\n+    public BreadcrumbsImpl(JTextComponent comp) {\n+        this.comp = comp;\n+        this.doc = comp.getDocument();\n+        this.comp.addCaretListener(evt -> {\n+            update();\n+        });\n+    }\n+\n+    @Override\n+    public void run(LSPBindings bindings, FileObject file) {\n+        try {\n+            //TODO: modified while the query is running?\n+            List<Either<SymbolInformation, DocumentSymbol>> symbols = bindings.getTextDocumentService().documentSymbol(new DocumentSymbolParams(new TextDocumentIdentifier(Utils.toURI(file)))).get();\n+\n+            synchronized (this) {\n+                this.rootElement = new RootBreadcrumbsElementImpl(file, doc, symbols.stream().map(this::toDocumentSymbol).collect(Collectors.toList()));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b17b17c3dc461403cfa14e038e127eb4e43d86b"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 466, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}