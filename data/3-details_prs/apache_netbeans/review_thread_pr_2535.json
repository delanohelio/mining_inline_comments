{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDI0NzYx", "number": 2535, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTozODozM1rOE7drNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTozODozM1rOE7drNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzg3NjM4OnYy", "diffSide": "RIGHT", "path": "php/php.editor/test/unit/src/org/netbeans/modules/php/editor/CodeUtilsTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTozODozM1rOH3II1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODowMjoyMFrOH3bOTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2NzA2MA==", "bodyText": "Could you please add a test where the array value is an object? I would like to see how the tooltip will look like in such a case. Thanks!", "url": "https://github.com/apache/netbeans/pull/2535#discussion_r527567060", "createdAt": "2020-11-20T09:38:33Z", "author": {"login": "tmysik"}, "path": "php/php.editor/test/unit/src/org/netbeans/modules/php/editor/CodeUtilsTest.java", "diffHunk": "@@ -179,4 +183,43 @@ public void testCommonNamespacePrefixes11() {\n         assertEquals(0, prefixes.size());\n     }\n \n+    public void testGetParamDefaultValueEmptyArray() {\n+        List<ArrayElement> emptyArray = Collections.emptyList();\n+        FormalParameter param = createFormalParameterWithDefaultArray(emptyArray);\n+        assertEquals(\"[]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayOneItem() {\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, null, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayTwoItems() {\n+        Scalar value1 = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item1 = new ArrayElement(1, 1, null, value1);\n+        Scalar value2 = new Scalar(1, 1, \"'b'\", Scalar.Type.STRING);\n+        ArrayElement item2 = new ArrayElement(1, 1, null, value2);\n+        List<ArrayElement> array = Arrays.asList(item1, item2);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a',...]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayItemWithKey() {\n+        Scalar key = new Scalar(1, 1, \"3\", Scalar.Type.INT);\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, key, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"[3 => 'a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    private FormalParameter createFormalParameterWithDefaultArray(List<ArrayElement> arrayContent) {\n+        ArrayCreation defaultValue = new ArrayCreation(1, 1, arrayContent, ArrayCreation.Type.NEW);\n+        FormalParameter param = new FormalParameter(1, 1, null, null, defaultValue);\n+        return param;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e66bfc02425317763717538e6c6ee092396b6e8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MTY4MQ==", "bodyText": "If I understand you correctly you mean this case?\n\nfunction printDate(\\DateTime $date = new \\DateTime()) {}\n\nPHP does not support object as default value.", "url": "https://github.com/apache/netbeans/pull/2535#discussion_r527681681", "createdAt": "2020-11-20T13:13:20Z", "author": {"login": "KacerCZ"}, "path": "php/php.editor/test/unit/src/org/netbeans/modules/php/editor/CodeUtilsTest.java", "diffHunk": "@@ -179,4 +183,43 @@ public void testCommonNamespacePrefixes11() {\n         assertEquals(0, prefixes.size());\n     }\n \n+    public void testGetParamDefaultValueEmptyArray() {\n+        List<ArrayElement> emptyArray = Collections.emptyList();\n+        FormalParameter param = createFormalParameterWithDefaultArray(emptyArray);\n+        assertEquals(\"[]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayOneItem() {\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, null, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayTwoItems() {\n+        Scalar value1 = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item1 = new ArrayElement(1, 1, null, value1);\n+        Scalar value2 = new Scalar(1, 1, \"'b'\", Scalar.Type.STRING);\n+        ArrayElement item2 = new ArrayElement(1, 1, null, value2);\n+        List<ArrayElement> array = Arrays.asList(item1, item2);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a',...]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayItemWithKey() {\n+        Scalar key = new Scalar(1, 1, \"3\", Scalar.Type.INT);\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, key, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"[3 => 'a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    private FormalParameter createFormalParameterWithDefaultArray(List<ArrayElement> arrayContent) {\n+        ArrayCreation defaultValue = new ArrayCreation(1, 1, arrayContent, ArrayCreation.Type.NEW);\n+        FormalParameter param = new FormalParameter(1, 1, null, null, defaultValue);\n+        return param;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2NzA2MA=="}, "originalCommit": {"oid": "8e66bfc02425317763717538e6c6ee092396b6e8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg3NzA3Mg==", "bodyText": "No. I meant how the tooltip would look like for array e.g. [0 => new DateTime()]. Just to verify that it still looks ok. Thanks and sorry for not being clear.", "url": "https://github.com/apache/netbeans/pull/2535#discussion_r527877072", "createdAt": "2020-11-20T17:59:59Z", "author": {"login": "tmysik"}, "path": "php/php.editor/test/unit/src/org/netbeans/modules/php/editor/CodeUtilsTest.java", "diffHunk": "@@ -179,4 +183,43 @@ public void testCommonNamespacePrefixes11() {\n         assertEquals(0, prefixes.size());\n     }\n \n+    public void testGetParamDefaultValueEmptyArray() {\n+        List<ArrayElement> emptyArray = Collections.emptyList();\n+        FormalParameter param = createFormalParameterWithDefaultArray(emptyArray);\n+        assertEquals(\"[]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayOneItem() {\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, null, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayTwoItems() {\n+        Scalar value1 = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item1 = new ArrayElement(1, 1, null, value1);\n+        Scalar value2 = new Scalar(1, 1, \"'b'\", Scalar.Type.STRING);\n+        ArrayElement item2 = new ArrayElement(1, 1, null, value2);\n+        List<ArrayElement> array = Arrays.asList(item1, item2);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a',...]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayItemWithKey() {\n+        Scalar key = new Scalar(1, 1, \"3\", Scalar.Type.INT);\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, key, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"[3 => 'a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    private FormalParameter createFormalParameterWithDefaultArray(List<ArrayElement> arrayContent) {\n+        ArrayCreation defaultValue = new ArrayCreation(1, 1, arrayContent, ArrayCreation.Type.NEW);\n+        FormalParameter param = new FormalParameter(1, 1, null, null, defaultValue);\n+        return param;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2NzA2MA=="}, "originalCommit": {"oid": "8e66bfc02425317763717538e6c6ee092396b6e8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg3OTc1OQ==", "bodyText": "Ha, sorry, I was too fast, now I see it. It is only about the parameters, not all arrays \"everywhere\".", "url": "https://github.com/apache/netbeans/pull/2535#discussion_r527879759", "createdAt": "2020-11-20T18:02:20Z", "author": {"login": "tmysik"}, "path": "php/php.editor/test/unit/src/org/netbeans/modules/php/editor/CodeUtilsTest.java", "diffHunk": "@@ -179,4 +183,43 @@ public void testCommonNamespacePrefixes11() {\n         assertEquals(0, prefixes.size());\n     }\n \n+    public void testGetParamDefaultValueEmptyArray() {\n+        List<ArrayElement> emptyArray = Collections.emptyList();\n+        FormalParameter param = createFormalParameterWithDefaultArray(emptyArray);\n+        assertEquals(\"[]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayOneItem() {\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, null, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayTwoItems() {\n+        Scalar value1 = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item1 = new ArrayElement(1, 1, null, value1);\n+        Scalar value2 = new Scalar(1, 1, \"'b'\", Scalar.Type.STRING);\n+        ArrayElement item2 = new ArrayElement(1, 1, null, value2);\n+        List<ArrayElement> array = Arrays.asList(item1, item2);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"['a',...]\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    public void testGetParamDefaultValueArrayItemWithKey() {\n+        Scalar key = new Scalar(1, 1, \"3\", Scalar.Type.INT);\n+        Scalar value = new Scalar(1, 1, \"'a'\", Scalar.Type.STRING);\n+        ArrayElement item = new ArrayElement(1, 1, key, value);\n+        List<ArrayElement> array = Arrays.asList(item);\n+        FormalParameter param = createFormalParameterWithDefaultArray(array);\n+        assertEquals(\"[3 => 'a']\", CodeUtils.getParamDefaultValue(param));\n+    }\n+\n+    private FormalParameter createFormalParameterWithDefaultArray(List<ArrayElement> arrayContent) {\n+        ArrayCreation defaultValue = new ArrayCreation(1, 1, arrayContent, ArrayCreation.Type.NEW);\n+        FormalParameter param = new FormalParameter(1, 1, null, null, defaultValue);\n+        return param;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2NzA2MA=="}, "originalCommit": {"oid": "8e66bfc02425317763717538e6c6ee092396b6e8"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 236, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}