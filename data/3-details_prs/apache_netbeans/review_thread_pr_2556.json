{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NDI0NTky", "number": 2556, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyMzowM1rOE8IRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozMDozOFrOE8IeOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg1NjAwOnYy", "diffSide": "RIGHT", "path": "java/ant.debugger/src/org/netbeans/modules/ant/debugger/AntDebugger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyMzowM1rOH4E5Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMTo0ODowNFrOH4gq8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MjQ3MA==", "bodyText": "Redundant cast after change\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    variables = (String[])properties.toArray(new String [properties.size()]);\n          \n          \n            \n                    variables = properties.toArray(new String [properties.size()]);", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528562470", "createdAt": "2020-11-23T09:23:03Z", "author": {"login": "mklaehn"}, "path": "java/ant.debugger/src/org/netbeans/modules/ant/debugger/AntDebugger.java", "diffHunk": "@@ -306,9 +306,8 @@ private void stopHere(AntEvent event) {\n         updateUI();\n         currentFile = event.getScriptLocation();\n         // update variable values\n-        Set properties = event.getPropertyNames ();\n-        variables = (String[]) properties.toArray \n-            (new String [properties.size ()]);\n+        Set<String> properties = event.getPropertyNames();\n+        variables = (String[])properties.toArray(new String [properties.size()]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTAxNzU4Nw==", "bodyText": "Fixed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529017587", "createdAt": "2020-11-23T21:48:04Z", "author": {"login": "BradWalker"}, "path": "java/ant.debugger/src/org/netbeans/modules/ant/debugger/AntDebugger.java", "diffHunk": "@@ -306,9 +306,8 @@ private void stopHere(AntEvent event) {\n         updateUI();\n         currentFile = event.getScriptLocation();\n         // update variable values\n-        Set properties = event.getPropertyNames ();\n-        variables = (String[]) properties.toArray \n-            (new String [properties.size ()]);\n+        Set<String> properties = event.getPropertyNames();\n+        variables = (String[])properties.toArray(new String [properties.size()]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MjQ3MA=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg2OTA1OnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyNjozMFrOH4FA0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0NTo0MlrOH4iVHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NDQzMw==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n          \n          \n            \n                        instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528564433", "createdAt": "2020-11-23T09:26:30Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NDc2NA==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529044764", "createdAt": "2020-11-23T22:45:42Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NDQzMw=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg3NzI1OnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyODowN1rOH4FFPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0Nzo1OVrOH4iZCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n          \n          \n            \n                        Set<String> charInstructions = new TreeSet<>(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528565564", "createdAt": "2020-11-23T09:28:07Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTc2OQ==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045769", "createdAt": "2020-11-23T22:47:59Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg4MjA4OnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyOToxNlrOH4FIFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0NjoxMlrOH4iWAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjI5Mw==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n          \n          \n            \n                        Set<String> topLevel = new TreeSet<>(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566293", "createdAt": "2020-11-23T09:29:16Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NDk5Mw==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529044993", "createdAt": "2020-11-23T22:46:12Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjI5Mw=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg4MzUwOnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyOTozN1rOH4FI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0NjoyMlrOH4iWRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjUxNA==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n          \n            \n                        Set<String> topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566514", "createdAt": "2020-11-23T09:29:37Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTA2Mw==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045063", "createdAt": "2020-11-23T22:46:22Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjUxNA=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg4NDgyOnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyOTo1NVrOH4FJrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0Njo0MVrOH4iW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjcwMw==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        resultElementAttr = new TreeSet<>(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n          \n            \n                        resultElementAttr = new TreeSet<>(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566703", "createdAt": "2020-11-23T09:29:55Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n             \"exclude-result-prefixes\",\"id\",\"version\",spaceAtt})); // NOI18N\n \n-            resultElementAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            resultElementAttr = new TreeSet<>(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTIxMw==", "bodyText": "chnaged..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045213", "createdAt": "2020-11-23T22:46:41Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n             \"exclude-result-prefixes\",\"id\",\"version\",spaceAtt})); // NOI18N\n \n-            resultElementAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            resultElementAttr = new TreeSet<>(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjcwMw=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg4NjQwOnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozMDoxN1rOH4FKjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0NzowM1rOH4iXaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjkyNw==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        xslFunctions = new TreeSet<>(Arrays.<String>asList(new String[]{\n          \n          \n            \n                        xslFunctions = new TreeSet<>(Arrays.asList(new String[]{\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566927", "createdAt": "2020-11-23T09:30:17Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -365,7 +365,7 @@ private static Set getTemplate() {\n \n     private static Set getXslFunctions() {\n         if (xslFunctions == null) {\n-            xslFunctions = new TreeSet(Arrays.asList(new String[]{\n+            xslFunctions = new TreeSet<>(Arrays.<String>asList(new String[]{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTM1Mw==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045353", "createdAt": "2020-11-23T22:47:03Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -365,7 +365,7 @@ private static Set getTemplate() {\n \n     private static Set getXslFunctions() {\n         if (xslFunctions == null) {\n-            xslFunctions = new TreeSet(Arrays.asList(new String[]{\n+            xslFunctions = new TreeSet<>(Arrays.<String>asList(new String[]{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjkyNw=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg4ODI0OnYy", "diffSide": "RIGHT", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozMDozOFrOH4FLmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo0NzoyOVrOH4iYJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NzE5Mg==", "bodyText": "inferrable type informations\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        xpathAxes = new TreeSet<>(Arrays.<String>asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n          \n          \n            \n                        xpathAxes = new TreeSet<>(Arrays.asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528567192", "createdAt": "2020-11-23T09:30:38Z", "author": {"login": "mklaehn"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -378,7 +378,7 @@ private static Set getXslFunctions() {\n \n     private static Set getXPathAxes() {\n         if (xpathAxes == null) {\n-            xpathAxes = new TreeSet(Arrays.asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n+            xpathAxes = new TreeSet<>(Arrays.<String>asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTU0MQ==", "bodyText": "changed..", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045541", "createdAt": "2020-11-23T22:47:29Z", "author": {"login": "BradWalker"}, "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -378,7 +378,7 @@ private static Set getXslFunctions() {\n \n     private static Set getXPathAxes() {\n         if (xpathAxes == null) {\n-            xpathAxes = new TreeSet(Arrays.asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n+            xpathAxes = new TreeSet<>(Arrays.<String>asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NzE5Mg=="}, "originalCommit": {"oid": "c75a02e1f95452f3e22847a6a280b49edf25b824"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 249, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}