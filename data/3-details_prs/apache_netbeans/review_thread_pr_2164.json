{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NzY5MjQ3", "number": 2164, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzozODowNlrOEDsxPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzozODowNlrOEDsxPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzE0Njg1OnYy", "diffSide": "RIGHT", "path": "java/java.source.base/src/org/netbeans/modules/java/source/TreeShims.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzozODowNlrOGg3q8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTozODowMVrOGj3vqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExOTcyOA==", "bodyText": "Please use TreeShims.RECORD", "url": "https://github.com/apache/netbeans/pull/2164#discussion_r437119728", "createdAt": "2020-06-09T03:38:06Z", "author": {"login": "arusinha"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/TreeShims.java", "diffHunk": "@@ -199,6 +199,10 @@ public static Tree getBindingPatternType(Tree node) {\n     public static boolean isRecord(Element el) {\n         return el != null && \"RECORD\".equals(el.getKind().name());\n     }\n+    \n+    public static<N extends Tree> boolean isRecord(final N node) {\n+        return node != null && \"RECORD\".equals(node.getKind().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dea0f59140e131df3c4ffb211ca38587e6ed30c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2NjY2NA==", "bodyText": "addressed code review comments", "url": "https://github.com/apache/netbeans/pull/2164#discussion_r440266664", "createdAt": "2020-06-15T15:38:01Z", "author": {"login": "singh-akhilesh"}, "path": "java/java.source.base/src/org/netbeans/modules/java/source/TreeShims.java", "diffHunk": "@@ -199,6 +199,10 @@ public static Tree getBindingPatternType(Tree node) {\n     public static boolean isRecord(Element el) {\n         return el != null && \"RECORD\".equals(el.getKind().name());\n     }\n+    \n+    public static<N extends Tree> boolean isRecord(final N node) {\n+        return node != null && \"RECORD\".equals(node.getKind().name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExOTcyOA=="}, "originalCommit": {"oid": "0dea0f59140e131df3c4ffb211ca38587e6ed30c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 557, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}