{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTc3NDQw", "number": 1928, "title": "FlatLaf toolbar grips", "bodyText": "Implementation of toolbar grippers (or dragger) following FlatLaf design. The current code does not recognize the LAF and uses a fallback Metal LAF lookalike.\nNOTE: should support HiDPI but I couldn't test it (no HiDPI devices here). Also not tested on MacOS.\nBefore:\n\n\nAfter:", "createdAt": "2020-02-06T15:58:25Z", "url": "https://github.com/apache/netbeans/pull/1928", "merged": true, "mergeCommit": {"oid": "35597ec59f3a423c5e623bebac6f7ced4c6afeef"}, "closed": true, "closedAt": "2020-02-06T23:12:43Z", "author": {"login": "AlexFalappa"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBt0sAgFqTM1NDYxODM5Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBvuzcABqjMwMTUxNDY5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjE4Mzky", "url": "https://github.com/apache/netbeans/pull/1928#pullrequestreview-354618392", "createdAt": "2020-02-06T17:03:01Z", "commit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMzowMVrOFmi8Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMzowMVrOFmi8Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjY2Nw==", "bodyText": "The //NOI18N is missing, though I do not know how strict shall we be on that rule.", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375962667", "createdAt": "2020-02-06T17:03:01Z", "author": {"login": "lkishalmi"}, "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjI0MTk1", "url": "https://github.com/apache/netbeans/pull/1928#pullrequestreview-354624195", "createdAt": "2020-02-06T17:11:03Z", "commit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjMxMjQ1", "url": "https://github.com/apache/netbeans/pull/1928#pullrequestreview-354631245", "createdAt": "2020-02-06T17:21:19Z", "commit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoyMToyMFrOFmjjAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoyMjozNFrOFmjluw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA==", "bodyText": "For HiDPI on Java 8 change this line to return UIScale.scale(min);.", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375972610", "createdAt": "2020-02-06T17:21:20Z", "author": {"login": "DevCharly"}, "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);\n+                y += dotSize + gapSize;\n+            }\n+        } finally {\n+            g2.dispose();\n+        }\n+    }\n+\n+    @Override\n+    public Dimension getMinimumSize () {\n+        return min;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjgyNg==", "bodyText": "For HiDPI on Java 8 change this line to return UIScale.scale(max);.", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375972826", "createdAt": "2020-02-06T17:21:41Z", "author": {"login": "DevCharly"}, "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);\n+                y += dotSize + gapSize;\n+            }\n+        } finally {\n+            g2.dispose();\n+        }\n+    }\n+\n+    @Override\n+    public Dimension getMinimumSize () {\n+        return min;\n+    }\n+\n+    @Override\n+    public Dimension getPreferredSize () {\n+        return this.getMinimumSize ();\n+    }\n+\n+    @Override\n+    public Dimension getMaximumSize () {\n+        return max;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MzMwNw==", "bodyText": "For HiDPI on Java 8 change (unscaled) DOT_SIZE to (scaled) dotSize.", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375973307", "createdAt": "2020-02-06T17:22:34Z", "author": {"login": "DevCharly"}, "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47b66172a357c66db097af5c057076b38cf7cdf2", "author": {"user": {"login": "alebruno", "name": null}}, "url": "https://github.com/apache/netbeans/commit/47b66172a357c66db097af5c057076b38cf7cdf2", "committedDate": "2020-02-06T19:15:53Z", "message": "FlatLaf toolbar grips\n\nImplementation of toolbar grippers (or dragger) following FlatLaf design."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "246995f667fb26c4a4124333ffea9ff6b5198a63", "author": {"user": {"login": "alebruno", "name": null}}, "url": "https://github.com/apache/netbeans/commit/246995f667fb26c4a4124333ffea9ff6b5198a63", "committedDate": "2020-02-06T15:48:34Z", "message": "FlatLaf toolbar grips\n\nImplementation of toolbar grippers (or dragger) following FlatLaf design."}, "afterCommit": {"oid": "47b66172a357c66db097af5c057076b38cf7cdf2", "author": {"user": {"login": "alebruno", "name": null}}, "url": "https://github.com/apache/netbeans/commit/47b66172a357c66db097af5c057076b38cf7cdf2", "committedDate": "2020-02-06T19:15:53Z", "message": "FlatLaf toolbar grips\n\nImplementation of toolbar grippers (or dragger) following FlatLaf design."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 161, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}