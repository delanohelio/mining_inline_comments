{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzEzMzcx", "number": 2513, "title": "ioContainer in IOProvider.getIO(...) is allowed to be null.", "bodyText": "But Lookups.fixed does not allow null.\nWould be ideal for 12.2, but I realize it is quite late. Would help running OpenJDK tests in the VS Code.", "createdAt": "2020-11-01T23:35:31Z", "url": "https://github.com/apache/netbeans/pull/2513", "merged": true, "mergeCommit": {"oid": "e0f3b4c9e37d882a14ff7d142d7e3afe2eda7698"}, "closed": true, "closedAt": "2020-11-03T15:22:22Z", "author": {"login": "jlahoda"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYYokVgH2gAyNTEzNzEzMzcxOmUwNzJiYzVlZDM3NmUzOThmZGU4NWJhMjFmNTgwZWFlZWQ2MGMyNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY6ziKAFqTUyMjYwNTM3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254", "author": {"user": {"login": "jlahoda", "name": "Jan Lahoda"}}, "url": "https://github.com/apache/netbeans/commit/e072bc5ed376e398fde85ba21f580eaeed60c254", "committedDate": "2020-11-01T23:33:27Z", "message": "ioContainer in IOProvider.getIO(...) is allowed to be null."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzUyNDQw", "url": "https://github.com/apache/netbeans/pull/2513#pullrequestreview-521352440", "createdAt": "2020-11-02T06:13:41Z", "commit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxMzo0MVrOHr3W0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoxNDo0NVrOHr3YBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1Nzc3Nw==", "bodyText": "Do I read the change correctly?\nPreviously the Lookup had two elements one of the type Action[] and one of the type IOContainer. The new Lookup is going to have n-elements of type Action and optionally one element of type IOContainer.", "url": "https://github.com/apache/netbeans/pull/2513#discussion_r515757777", "createdAt": "2020-11-02T06:13:41Z", "author": {"login": "JaroslavTulach"}, "path": "platform/openide.io/src/org/openide/io/BridgingIOProvider.java", "diffHunk": "@@ -92,9 +93,16 @@ public InputOutput getIO(String name, Action[] actions,\n     @Override\n     public InputOutput getIO(String name, boolean newIO, Action[] actions,\n             IOContainer ioContainer) {\n+        Object[] lookupContent;\n+        if (ioContainer != null) {\n+            lookupContent = Arrays.copyOf(actions, actions.length + 1, Object[].class);\n+            lookupContent[actions.length] = ioContainer;\n+        } else {\n+            lookupContent = actions;\n+        }\n         return new BridgingInputOutput(\n                 providerDelegate.getIO(name, newIO,\n-                        Lookups.fixed((Object[]) actions, ioContainer)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1ODA4Ng==", "bodyText": "I'd expect a failure here in the previous version of the code.", "url": "https://github.com/apache/netbeans/pull/2513#discussion_r515758086", "createdAt": "2020-11-02T06:14:45Z", "author": {"login": "JaroslavTulach"}, "path": "platform/openide.io/test/unit/src/org/openide/io/BridgingIOProviderTest.java", "diffHunk": "@@ -78,9 +84,37 @@ public void bridgeToNullColor() throws IOException {\n         assertEquals(\"Null!\", sb.toString());\n     }\n \n+    @Test\n+    public void nullIOContainer() throws IOException {\n+        MockIOP mock = new MockIOP();\n+        IOProvider provider = BridgingIOProvider.create(mock);\n+        Action testAction = new AbstractAction(\"test\") {\n+            @Override public void actionPerformed(ActionEvent e) {}\n+        };\n+        InputOutput io = provider.getIO(\"test\", false, new Action[] {testAction}, null);\n+        assertSame(testAction, mock.last.lookup.lookup(Action.class));\n+    }\n+\n+    @Test\n+    public void hasIOContainer() throws IOException {\n+        MockIOP mock = new MockIOP();\n+        IOProvider provider = BridgingIOProvider.create(mock);\n+        Action testAction = new AbstractAction(\"test\") {\n+            @Override public void actionPerformed(ActionEvent e) {}\n+        };\n+        IOContainer ioContainer = IOContainer.create(new MockIOProvider());\n+        InputOutput io = provider.getIO(\"test\", false, new Action[] {testAction}, ioContainer);\n+        assertSame(testAction, mock.last.lookup.lookup(Action.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzc4NjA4", "url": "https://github.com/apache/netbeans/pull/2513#pullrequestreview-521378608", "createdAt": "2020-11-02T07:23:48Z", "commit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNjA1Mzcx", "url": "https://github.com/apache/netbeans/pull/2513#pullrequestreview-522605371", "createdAt": "2020-11-03T15:22:12Z", "commit": {"oid": "e072bc5ed376e398fde85ba21f580eaeed60c254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 308, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}