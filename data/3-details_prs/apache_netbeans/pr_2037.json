{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjEzNTk4", "number": 2037, "title": "Ignore module-info.java if on jdk1.8 or earlier.", "bodyText": "Right now, when the JavaFX archetypes are used on JDK8, the whole source code is rendered as incompatible. The problem is that the bootclasspath is empty on JDK8 if there is module-info.java file. This PR ignores module-info.java with jdk1.8 or earlier. With this PR  NetBeans show proper code completion for files App.java and SystemInfo.java.", "createdAt": "2020-03-19T20:11:25Z", "url": "https://github.com/apache/netbeans/pull/2037", "merged": true, "mergeCommit": {"oid": "77bb92d641d1310264fe327e503aeb916361c1fd"}, "closed": true, "closedAt": "2020-03-31T07:38:13Z", "author": {"login": "errael"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPUriSAFqTM3ODE2NDY4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSoaqvgFqTM4MzU1NzY4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTY0Njgz", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-378164683", "createdAt": "2020-03-19T23:40:36Z", "commit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MDozNlrOF5D-Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MDozNlrOF5D-Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3ODIzOQ==", "bodyText": "Please add // NOI18N comment", "url": "https://github.com/apache/netbeans/pull/2037#discussion_r395378239", "createdAt": "2020-03-19T23:40:36Z", "author": {"login": "junichi11"}, "path": "java/java.api.common/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPaths.java", "diffHunk": "@@ -786,6 +787,12 @@ private static boolean hasModuleInfo(@NonNull final File file) {\n                             newModuleInfos.add(moduleInfo);\n                             if (found == null) {\n                                 found = FileUtil.toFileObject(moduleInfo);\n+                                if (found != null) {\n+                                    String sourceLevel = SourceLevelQuery.getSourceLevel(found);\n+                                    if (sourceLevel != null && sourceLevel.startsWith(\"1.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTY0Nzkx", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-378164791", "createdAt": "2020-03-19T23:40:56Z", "commit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MDo1NlrOF5D-og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MDo1NlrOF5D-og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3ODMzOA==", "bodyText": "Please add // NOI18N comment", "url": "https://github.com/apache/netbeans/pull/2037#discussion_r395378338", "createdAt": "2020-03-19T23:40:56Z", "author": {"login": "junichi11"}, "path": "java/maven/src/org/netbeans/modules/maven/classpath/ClassPathProviderImpl.java", "diffHunk": "@@ -538,10 +539,17 @@ public ClassPath getActiveClassPath() {\n             if (ret == null) {\n                 // see org.apache.maven.plugin.compiler.CompilerMojo.classpathElements\n                 for (String sourceRoot : proj.getOriginalMavenProject().getCompileSourceRoots()) {\n-                    if(new File(sourceRoot, MODULE_INFO_JAVA).exists()) {\n-                        ret = hasModuleInfoCP.get();  \n+                    final File moduleInfoFile = new File(sourceRoot, MODULE_INFO_JAVA);\n+                    if(moduleInfoFile.exists()) {\n+                        ClassPath useModuleInfoCP = hasModuleInfoCP.get();\n                         LOGGER.log(Level.FINER, \"ModuleInfoSelector {0} for project {1}: has module-info.java\", new Object [] {logDesc, proj.getProjectDirectory().getPath()}); // NOI18N\n-                        break;\n+                        if (useModuleInfoCP.findResource(\"java/lang/AssertionError.class\") != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTY0ODY1", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-378164865", "createdAt": "2020-03-19T23:41:08Z", "commit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MTowOFrOF5D-0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMzo0MTowOFrOF5D-0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3ODM4Ng==", "bodyText": "Please add // NOI18N comment", "url": "https://github.com/apache/netbeans/pull/2037#discussion_r395378386", "createdAt": "2020-03-19T23:41:08Z", "author": {"login": "junichi11"}, "path": "java/maven/src/org/netbeans/modules/maven/classpath/ClassPathProviderImpl.java", "diffHunk": "@@ -538,10 +539,17 @@ public ClassPath getActiveClassPath() {\n             if (ret == null) {\n                 // see org.apache.maven.plugin.compiler.CompilerMojo.classpathElements\n                 for (String sourceRoot : proj.getOriginalMavenProject().getCompileSourceRoots()) {\n-                    if(new File(sourceRoot, MODULE_INFO_JAVA).exists()) {\n-                        ret = hasModuleInfoCP.get();  \n+                    final File moduleInfoFile = new File(sourceRoot, MODULE_INFO_JAVA);\n+                    if(moduleInfoFile.exists()) {\n+                        ClassPath useModuleInfoCP = hasModuleInfoCP.get();\n                         LOGGER.log(Level.FINER, \"ModuleInfoSelector {0} for project {1}: has module-info.java\", new Object [] {logDesc, proj.getProjectDirectory().getPath()}); // NOI18N\n-                        break;\n+                        if (useModuleInfoCP.findResource(\"java/lang/AssertionError.class\") != null) {\n+                            FileObject moduleInfo = FileUtil.toFileObject(moduleInfoFile);\n+                            SourceLevelQuery.Result q = SourceLevelQuery.getSourceLevel2(moduleInfo);\n+                            if (!q.getSourceLevel().startsWith(\"1.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba02e21e20c3386a64ae37689b974ad76dd706f"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjUxMzg0", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-378251384", "createdAt": "2020-03-20T06:21:27Z", "commit": {"oid": "e77fcc60e851c5c91c6704e948976a26a26b4959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjoyMToyN1rOF5InbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjoyMToyN1rOF5InbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1NDMxNg==", "bodyText": "It would be good to cover this change with a test. I am not sure if java.api.common tests are actually executed by travis, but following would be my test:\ndiff --git a/java/java.api.common/test/unit/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPathsTest.java b/java/java.api.common/test/unit/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPathsTest.java\nindex b30f8246bdb7..1c0ba04a674a 100644\n--- a/java/java.api.common/test/unit/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPathsTest.java\n+++ b/java/java.api.common/test/unit/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPathsTest.java\n@@ -46,6 +46,7 @@ import java.util.stream.Collectors;\n import java.util.zip.ZipEntry;\n import javax.lang.model.element.ModuleElement;\n import javax.swing.event.ChangeListener;\n+import org.junit.Assume;\n import org.netbeans.api.annotations.common.CheckForNull;\n import org.netbeans.api.annotations.common.NonNull;\n import org.netbeans.api.annotations.common.NullAllowed;\n@@ -63,11 +64,14 @@ import org.netbeans.junit.NbTestCase;\n import org.netbeans.modules.java.api.common.TestJavaPlatform;\n import org.netbeans.modules.java.api.common.TestProject;\n import org.netbeans.modules.java.api.common.project.ProjectProperties;\n+import org.netbeans.modules.java.classpath.SimpleClassPathImplementation;\n import org.netbeans.modules.java.j2seplatform.platformdefinition.Util;\n import org.netbeans.modules.java.source.BootClassPathUtil;\n import org.netbeans.modules.parsing.api.indexing.IndexingManager;\n import org.netbeans.spi.java.classpath.ClassPathFactory;\n+import org.netbeans.spi.java.classpath.ClassPathImplementation;\n import org.netbeans.spi.java.classpath.ClassPathProvider;\n+import org.netbeans.spi.java.classpath.PathResourceImplementation;\n import org.netbeans.spi.java.queries.CompilerOptionsQueryImplementation;\n import org.netbeans.spi.project.support.ant.AntProjectHelper;\n import org.netbeans.spi.project.support.ant.EditableProperties;\n@@ -178,6 +182,44 @@ public class ModuleClassPathsTest extends NbTestCase {\n         assertEquals(expectedURLs, resURLs);\n     }\n \n+    public void testModuleInfoInJDK8Project() throws IOException {\n+        assertNotNull(src);\n+        createModuleInfo(src, \"ModuleInfoDebris\"); //NOI18N\n+        setSourceLevel(tp, \"1.8\");   //NOI18N\n+        final ClassPath base = systemModules == null ? ClassPath.EMPTY : systemModules;\n+        final ClassPathImplementation mcp = ModuleClassPaths.createModuleInfoBasedPath(\n+            base,\n+            src,\n+            base,\n+            ClassPath.EMPTY,\n+            null,\n+            null\n+        );\n+        List<? extends PathResourceImplementation> resources = mcp.getResources();\n+        assertEquals(\"No resources found as module-info.java is ignored: \" + resources, 0, resources.size());\n+    }\n+\n+    public void testModuleInfoInJDK11Project() throws IOException {\n+        if (systemModules == null) {\n+            System.out.println(\"No jdk 9 home configured.\");    //NOI18N\n+            return;\n+        }\n+\n+        assertNotNull(src);\n+        createModuleInfo(src, \"ModuleInfoUsed\"); //NOI18N\n+        final ClassPath base = systemModules;\n+        final ClassPathImplementation mcp = ModuleClassPaths.createModuleInfoBasedPath(\n+            base,\n+            src,\n+            base,\n+            ClassPath.EMPTY,\n+            null,\n+            null\n+        );\n+        List<? extends PathResourceImplementation> one = mcp.getResources();\n+        assertEquals(\"One resource found as module-info.java is used: \" + one, 1, one.size());\n+    }\n+\n     public void testModuleInfoBasedCp_SystemModules_in_NamedModule() throws IOException {\n         if (systemModules == null) {\n             System.out.println(\"No jdk 9 home configured.\");    //NOI18N\nI was able to successfully run it on JDK8:\njava/java.api.common$ JAVA_HOME=$HOME/bin/jdk1.8.0 ant test -Dtest.includes=**/ModuleClassPathsTest.class\nas well as on JDK11:\njava/java.api.common$ JAVA_HOME=$HOME/bin/jdk-11 ant test -Dtest.includes=**/ModuleClassPathsTest.class -Dtest.nbjdk.home=$HOME/bin/jdk-11 -Dtest.run.args=--limit-modules=java.base,java.logging,java.xml,java.prefs,java.desktop,java.management,java.instrument,jdk.zipfs,java.scripting,java.naming -Dtest.bootclasspath.prepend.args=-Dno.netbeans.bootclasspath.prepend.needed=true", "url": "https://github.com/apache/netbeans/pull/2037#discussion_r395454316", "createdAt": "2020-03-20T06:21:27Z", "author": {"login": "JaroslavTulach"}, "path": "java/java.api.common/src/org/netbeans/modules/java/api/common/classpath/ModuleClassPaths.java", "diffHunk": "@@ -786,6 +787,12 @@ private static boolean hasModuleInfo(@NonNull final File file) {\n                             newModuleInfos.add(moduleInfo);\n                             if (found == null) {\n                                 found = FileUtil.toFileObject(moduleInfo);\n+                                if (found != null) {\n+                                    String sourceLevel = SourceLevelQuery.getSourceLevel(found);\n+                                    if (sourceLevel != null && sourceLevel.startsWith(\"1.\")) { //NOI18N\n+                                        found = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e77fcc60e851c5c91c6704e948976a26a26b4959"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTAzMTc4", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-378903178", "createdAt": "2020-03-21T08:46:46Z", "commit": {"oid": "e77fcc60e851c5c91c6704e948976a26a26b4959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwODo0Njo0NlrOF5oYdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwODo0Njo0NlrOF5oYdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3NDc3Mw==", "bodyText": "Seems the new code is not setting \"ret\" at all, and this whole section now, at least at the first glance, seems to have no effect?", "url": "https://github.com/apache/netbeans/pull/2037#discussion_r395974773", "createdAt": "2020-03-21T08:46:46Z", "author": {"login": "jlahoda"}, "path": "java/maven/src/org/netbeans/modules/maven/classpath/ClassPathProviderImpl.java", "diffHunk": "@@ -538,10 +539,17 @@ public ClassPath getActiveClassPath() {\n             if (ret == null) {\n                 // see org.apache.maven.plugin.compiler.CompilerMojo.classpathElements\n                 for (String sourceRoot : proj.getOriginalMavenProject().getCompileSourceRoots()) {\n-                    if(new File(sourceRoot, MODULE_INFO_JAVA).exists()) {\n-                        ret = hasModuleInfoCP.get();  \n+                    final File moduleInfoFile = new File(sourceRoot, MODULE_INFO_JAVA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e77fcc60e851c5c91c6704e948976a26a26b4959"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c97990642f3301b095d12fc348549328ff99aa", "author": {"user": {"login": "errael", "name": "errael"}}, "url": "https://github.com/apache/netbeans/commit/37c97990642f3301b095d12fc348549328ff99aa", "committedDate": "2020-03-24T14:08:02Z", "message": "Ingore module-info.java if on jdk1.8 or earlier."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e47e1f7e8ab746020425adcbf05d810fb99540bb", "author": {"user": {"login": "ebarboni", "name": "Eric Barboni"}}, "url": "https://github.com/apache/netbeans/commit/e47e1f7e8ab746020425adcbf05d810fb99540bb", "committedDate": "2020-03-24T22:21:31Z", "message": "Sync master to release 12.0 beta2\n\nSync master to release 12.0 beta2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33ab777e14d8cc4f558f11a23bf52db8f0dd8562", "author": {"user": {"login": "errael", "name": "errael"}}, "url": "https://github.com/apache/netbeans/commit/33ab777e14d8cc4f558f11a23bf52db8f0dd8562", "committedDate": "2020-03-24T14:28:23Z", "message": "test module-info in jdk8"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTQwNTc2", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-383540576", "createdAt": "2020-03-30T05:34:01Z", "commit": {"oid": "37c97990642f3301b095d12fc348549328ff99aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTU3Njgy", "url": "https://github.com/apache/netbeans/pull/2037#pullrequestreview-383557682", "createdAt": "2020-03-30T06:22:03Z", "commit": {"oid": "37c97990642f3301b095d12fc348549328ff99aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 78, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}