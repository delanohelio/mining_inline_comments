{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjcxNzk0", "number": 1154, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwODoxNDo1NlrODfztsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwODoxNjozMlrODfzvEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Njc5NzMxOnYy", "diffSide": "RIGHT", "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/LoadFlowParameters.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwODoxNDo1NlrOFpuejw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODo0ODozNVrOFqcRkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NzQyMw==", "bodyText": "Why do you use ByteArrayBuilder?  Why don't you use ByteArrayOutputStream?", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r379297423", "createdAt": "2020-02-14T08:14:56Z", "author": {"login": "mathbagu"}, "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/LoadFlowParameters.java", "diffHunk": "@@ -181,7 +186,19 @@ public LoadFlowParameters setSpecificCompatibility(boolean specificCompatibility\n     }\n \n     public LoadFlowParameters copy() {\n-        return new LoadFlowParameters(this);\n+        byte[] bytes = writeInMemory();\n+        try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes)) {\n+            return JsonLoadFlowParameters.read(bais);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private byte[] writeInMemory() {\n+        try (ByteArrayBuilder byteArrayBuilder = new ByteArrayBuilder()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMzNjk0Mg==", "bodyText": "From doc, it seems like it is a better usage here.\n\nSince version 1.5, also implements OutputStream to allow efficient aggregation of output content as a byte array, similar to how ByteArrayOutputStream works, but somewhat more efficiently for many use cases.\n\nhttps://fasterxml.github.io/jackson-core/javadoc/2.3.0/com/fasterxml/jackson/core/util/ByteArrayBuilder.html", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r379336942", "createdAt": "2020-02-14T09:47:54Z", "author": {"login": "yichen88"}, "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/LoadFlowParameters.java", "diffHunk": "@@ -181,7 +186,19 @@ public LoadFlowParameters setSpecificCompatibility(boolean specificCompatibility\n     }\n \n     public LoadFlowParameters copy() {\n-        return new LoadFlowParameters(this);\n+        byte[] bytes = writeInMemory();\n+        try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes)) {\n+            return JsonLoadFlowParameters.read(bais);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private byte[] writeInMemory() {\n+        try (ByteArrayBuilder byteArrayBuilder = new ByteArrayBuilder()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NzQyMw=="}, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0Nzc2MA==", "bodyText": "We could probably keep ByteArrayBuilder then...", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r380047760", "createdAt": "2020-02-17T08:48:35Z", "author": {"login": "mathbagu"}, "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/LoadFlowParameters.java", "diffHunk": "@@ -181,7 +186,19 @@ public LoadFlowParameters setSpecificCompatibility(boolean specificCompatibility\n     }\n \n     public LoadFlowParameters copy() {\n-        return new LoadFlowParameters(this);\n+        byte[] bytes = writeInMemory();\n+        try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes)) {\n+            return JsonLoadFlowParameters.read(bais);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private byte[] writeInMemory() {\n+        try (ByteArrayBuilder byteArrayBuilder = new ByteArrayBuilder()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NzQyMw=="}, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjgwMDgwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwODoxNjozMlrOFpuguQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjozMTo0NVrOFp1I0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5Nzk3Nw==", "bodyText": "I cannot see where this dependency is used. Is it really needed?\nThis dependency should be declared before jackson-core.", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r379297977", "createdAt": "2020-02-14T08:16:32Z", "author": {"login": "mathbagu"}, "path": "pom.xml", "diffHunk": "@@ -136,6 +136,16 @@\n                 <artifactId>bigdata-core</artifactId>\n                 <version>${blazegraph.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-core</artifactId>\n+                <version>${jackson.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-annotations</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMzY2NA==", "bodyText": "The jackson-annotations and jackson-core are pulled by jackson-databind (hence the order, but we can change it).\nIn case we don't impose here the version used, blazegraph pulls its own version of those dependencies, which is inconsistent with our version of jackson-databind : it throws unknown methods exceptions at runtime in cgmes unit tests.\nAs it could happen with dependencies other than blazegraph, it's better to impose our own version of those 2 dependencies a the parent pom level.", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r379403664", "createdAt": "2020-02-14T12:24:19Z", "author": {"login": "sylvlecl"}, "path": "pom.xml", "diffHunk": "@@ -136,6 +136,16 @@\n                 <artifactId>bigdata-core</artifactId>\n                 <version>${blazegraph.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-core</artifactId>\n+                <version>${jackson.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-annotations</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5Nzk3Nw=="}, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNjU0Ng==", "bodyText": "It's now correctly sorted!", "url": "https://github.com/powsybl/powsybl-core/pull/1154#discussion_r379406546", "createdAt": "2020-02-14T12:31:45Z", "author": {"login": "sylvlecl"}, "path": "pom.xml", "diffHunk": "@@ -136,6 +136,16 @@\n                 <artifactId>bigdata-core</artifactId>\n                 <version>${blazegraph.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-core</artifactId>\n+                <version>${jackson.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-annotations</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5Nzk3Nw=="}, "originalCommit": {"oid": "b92ecf178b70301374b996d01f430d119766ed75"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 59, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}