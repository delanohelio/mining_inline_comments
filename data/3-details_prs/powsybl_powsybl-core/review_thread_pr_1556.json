{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNzk3OTc0", "number": 1556, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNTo0OFrOFAQihQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzozNFrOFAQmFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE1MzAxOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/Contingency.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNTo0OFrOH-dRdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNTo0OFrOH-dRdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MzM2NQ==", "bodyText": "Fix the getElements() method: the list should not be modifiable, except using addElement and removeElement", "url": "https://github.com/powsybl/powsybl-core/pull/1556#discussion_r535253365", "createdAt": "2020-12-03T14:05:48Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/Contingency.java", "diffHunk": "@@ -32,12 +31,12 @@\n \n     public Contingency(String id, ContingencyElement... elements) {\n         this.id = Objects.requireNonNull(id);\n-        this.elements = ImmutableList.copyOf(elements);\n+        this.elements = Arrays.asList(elements);\n     }\n \n     public Contingency(String id, List<ContingencyElement> elements) {\n         this.id = Objects.requireNonNull(id);\n-        this.elements = ImmutableList.copyOf(elements);\n+        this.elements = new ArrayList<>(Objects.requireNonNull(elements));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7919f53971ac289dcdc3449c5315af7808981b9e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE2MDI3OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/ContingencyList.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzoxNFrOH-dVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzoxNFrOH-dVqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1NDQ0Mg==", "bodyText": "Make this method public so I could use it. I thought we agreed that the name was not well chosen", "url": "https://github.com/powsybl/powsybl-core/pull/1556#discussion_r535254442", "createdAt": "2020-12-03T14:07:14Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/ContingencyList.java", "diffHunk": "@@ -72,4 +74,12 @@ static ContingencyList load(String filename, InputStream stream) {\n     static ContingencyList of(Contingency... contingencies) {\n         return new DefaultContingencyList(contingencies);\n     }\n+\n+    static List<Contingency> checkValidity(List<Contingency> contingencies, Network network) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7919f53971ac289dcdc3449c5315af7808981b9e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE2MjEyOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/Contingency.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzozNFrOH-dWrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzozNFrOH-dWrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1NDcwMQ==", "bodyText": "Call the new method instead of duplicating its implementation", "url": "https://github.com/powsybl/powsybl-core/pull/1556#discussion_r535254701", "createdAt": "2020-12-03T14:07:34Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-api/src/main/java/com/powsybl/contingency/Contingency.java", "diffHunk": "@@ -119,6 +128,19 @@ boolean isValid(Network network) {\n         return valid;\n     }\n \n+    /**\n+     * Return a list of valid contingencies.\n+     * @deprecated Use {@link ContingencyList#checkValidity(List, Network)} ()} instead.\n+     */\n+    @Deprecated\n+    public static List<Contingency> checkValidity(List<Contingency> contingencies, Network network) {\n+        Objects.requireNonNull(contingencies);\n+        Objects.requireNonNull(network);\n+        return contingencies.stream()\n+                .filter(c -> c.isValid(network))\n+                .collect(Collectors.toList());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7919f53971ac289dcdc3449c5315af7808981b9e"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4934, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}