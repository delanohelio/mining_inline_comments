{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODk4MjI3", "number": 1207, "title": "Change the design of the SecurityAnalysisResultBuilder", "bodyText": "Please check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nN/A\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nRefactoring\nWhat is the current behavior? (You can also link to an open issue here)\nThe SecurityAnalysisResultBuilder is not thread-safe by design. In the SecurityAnalysisImpl, we have to create a dedicated lock to avoid IllegalStateException (cf. #1169).\nWhat is the new behavior (if this is a feature change)?\nWhen a pre-contingency or a post-contingency result is created, we do not change the state of the SecurityAnalysisResultBuilder but we create independant sub builders.\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-03-06T16:02:17Z", "url": "https://github.com/powsybl/powsybl-core/pull/1207", "merged": true, "mergeCommit": {"oid": "63cc9c74bcfaff7dd16ec78d7100f2a607a4eef2"}, "closed": true, "closedAt": "2020-03-16T12:17:21Z", "author": {"login": "mathbagu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLCRasgH2gAyMzg0ODk4MjI3OjNmNTU5ZjUwNjY0ZjliMmY0M2ZhYWQ3MWM3MmZkZWZjM2RmM2JjZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOM7-6AH2gAyMzg0ODk4MjI3OmEyNjFiMmZiNGJlOGZkODU0MDZiMzZlZDU4N2M2YzkzZmQyMzA4NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f559f50664f9b2f43faad71c72fdefc3df3bcfe", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3f559f50664f9b2f43faad71c72fdefc3df3bcfe", "committedDate": "2020-03-06T15:58:05Z", "message": "Change the design of the SecurityAnalysisResultBuilder\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2a5347f87e85e03536ce7dc337a18bdb6a96dec", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/e2a5347f87e85e03536ce7dc337a18bdb6a96dec", "committedDate": "2020-03-09T11:43:40Z", "message": "Replace CopyOnWriteArrayList by SynchronizedList\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2edf9d978fbf576c4e8e1c92bafebc467f4d2a46", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/2edf9d978fbf576c4e8e1c92bafebc467f4d2a46", "committedDate": "2020-03-09T13:23:58Z", "message": "Add Objects.requireNotNull check for each violation\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzQwNTg4", "url": "https://github.com/powsybl/powsybl-core/pull/1207#pullrequestreview-371340588", "createdAt": "2020-03-09T16:34:16Z", "commit": {"oid": "2edf9d978fbf576c4e8e1c92bafebc467f4d2a46"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozNDoxNlrOFzwLmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo1ODo0MFrOFzxHpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMTA5Nw==", "bodyText": "Strictly speaking this is a breaking change : we should add the label and update the migration guide.", "url": "https://github.com/powsybl/powsybl-core/pull/1207#discussion_r389811097", "createdAt": "2020-03-09T16:34:16Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/main/java/com/powsybl/security/SecurityAnalysisResultBuilder.java", "diffHunk": "@@ -31,106 +31,49 @@\n \n     // Below are volatile objects used for building the actual complete result\n     private LimitViolationsResult preContingencyResult;\n-    private List<PostContingencyResult> postContingencyResults;\n-\n-    private ResultBuilder currentBuilder = null;\n+    private final List<PostContingencyResult> postContingencyResults = Collections.synchronizedList(new ArrayList<>());\n \n     public SecurityAnalysisResultBuilder(LimitViolationFilter filter, RunningContext context,\n                                          Collection<SecurityAnalysisInterceptor> interceptors) {\n         this.filter = Objects.requireNonNull(filter);\n         this.context = Objects.requireNonNull(context);\n         this.interceptors = ImmutableList.copyOf(interceptors);\n-        this.postContingencyResults = new ArrayList<>();\n     }\n \n     public SecurityAnalysisResultBuilder(LimitViolationFilter filter, RunningContext context) {\n         this(filter, context, Collections.emptyList());\n     }\n \n-    /**\n-     * Initiates the creation of the result for one {@link Contingency}.\n-     * @param contingency  the contingency for which a result should be created\n-     * @return             this SecurityAnalysisResultBuilder instance\n-     */\n-    public SecurityAnalysisResultBuilder contingency(Contingency contingency) {\n-        if (currentBuilder != null) {\n-            throw new IllegalStateException(\"Cannot start a new post-contingency result\");\n-        }\n-        currentBuilder = new PostContingencyResultBuilder(contingency);\n-        return this;\n+    private void setPreContingencyResult(LimitViolationsResult preContingencyResult) {\n+        this.preContingencyResult = Objects.requireNonNull(preContingencyResult);\n     }\n \n-    /**\n-     * Initiates the creation of the result for N situation.\n-     * @return this SecurityAnalysisResultBuilder instance.\n-     */\n-    public SecurityAnalysisResultBuilder preContingency() {\n-        if (currentBuilder != null) {\n-            throw new IllegalStateException(\"Cannot start a new pre-contingency result\");\n-        }\n-\n-        currentBuilder = new PreContingencyResultBuilder();\n-        return this;\n+    private void addPostContingencyResult(PostContingencyResult result) {\n+        postContingencyResults.add(Objects.requireNonNull(result));\n     }\n \n     /**\n-     * Finalize the creation of the PreContingencyResult instance\n-     * @return this SecurityAnalysisResultBuilder instance.\n+     * Initiates the creation of the result for N situation.\n+     * @return a {@link PreContingencyResultBuilder} instance.\n      */\n-    public SecurityAnalysisResultBuilder endPreContingency() {\n-        if (currentBuilder instanceof PreContingencyResultBuilder) {\n-            ((PreContingencyResultBuilder) currentBuilder).endPreContingency();\n-            currentBuilder = null;\n-            return this;\n-        }\n-\n-        throw new IllegalStateException(\"Cannot create the pre-contingency result\");\n+    public PreContingencyResultBuilder preContingency() {\n+        return new PreContingencyResultBuilder();\n     }\n \n     /**\n-     * Finalize the creation of the PostContingencyResult instance\n-     * @return this SecurityAnalysisResultBuilder instance.\n+     * Initiates the creation of the result for one {@link Contingency}.\n+     * @param contingency  the contingency for which a result should be created\n+     * @return a {@link PostContingencyResultBuilder} instance.\n      */\n-    public SecurityAnalysisResultBuilder endContingency() {\n-        if (currentBuilder instanceof PostContingencyResultBuilder) {\n-            ((PostContingencyResultBuilder) currentBuilder).endContingency();\n-            currentBuilder = null;\n-            return this;\n-        }\n-\n-        throw new IllegalStateException(\"Cannot create the post-contingency result\");\n-    }\n-\n-    /**\n-     * Add a violation for the current result\n-     * @return this SecurityAnalysisResultBuilder instance.\n-     */\n-    public SecurityAnalysisResultBuilder addViolation(LimitViolation violation) {\n-        if (currentBuilder == null) {\n-            throw new IllegalStateException(\"Cannot add the violation: currentBuilder is not set\");\n-        }\n-\n-        currentBuilder.addViolation(violation);\n-        return this;\n-    }\n-\n-    public SecurityAnalysisResultBuilder setComputationOk(boolean computationOk) {\n-        if (currentBuilder == null) {\n-            throw new IllegalStateException(\"Cannot set computation status: currentBuilder is not set\");\n-        }\n-\n-        currentBuilder.setComputationOk(computationOk);\n-        return this;\n+    public PostContingencyResultBuilder contingency(Contingency contingency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2edf9d978fbf576c4e8e1c92bafebc467f4d2a46"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMTE0OA==", "bodyText": "Strictly speaking this is a breaking change : we should add the label and update the migration guide.", "url": "https://github.com/powsybl/powsybl-core/pull/1207#discussion_r389811148", "createdAt": "2020-03-09T16:34:22Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/main/java/com/powsybl/security/SecurityAnalysisResultBuilder.java", "diffHunk": "@@ -31,106 +31,49 @@\n \n     // Below are volatile objects used for building the actual complete result\n     private LimitViolationsResult preContingencyResult;\n-    private List<PostContingencyResult> postContingencyResults;\n-\n-    private ResultBuilder currentBuilder = null;\n+    private final List<PostContingencyResult> postContingencyResults = Collections.synchronizedList(new ArrayList<>());\n \n     public SecurityAnalysisResultBuilder(LimitViolationFilter filter, RunningContext context,\n                                          Collection<SecurityAnalysisInterceptor> interceptors) {\n         this.filter = Objects.requireNonNull(filter);\n         this.context = Objects.requireNonNull(context);\n         this.interceptors = ImmutableList.copyOf(interceptors);\n-        this.postContingencyResults = new ArrayList<>();\n     }\n \n     public SecurityAnalysisResultBuilder(LimitViolationFilter filter, RunningContext context) {\n         this(filter, context, Collections.emptyList());\n     }\n \n-    /**\n-     * Initiates the creation of the result for one {@link Contingency}.\n-     * @param contingency  the contingency for which a result should be created\n-     * @return             this SecurityAnalysisResultBuilder instance\n-     */\n-    public SecurityAnalysisResultBuilder contingency(Contingency contingency) {\n-        if (currentBuilder != null) {\n-            throw new IllegalStateException(\"Cannot start a new post-contingency result\");\n-        }\n-        currentBuilder = new PostContingencyResultBuilder(contingency);\n-        return this;\n+    private void setPreContingencyResult(LimitViolationsResult preContingencyResult) {\n+        this.preContingencyResult = Objects.requireNonNull(preContingencyResult);\n     }\n \n-    /**\n-     * Initiates the creation of the result for N situation.\n-     * @return this SecurityAnalysisResultBuilder instance.\n-     */\n-    public SecurityAnalysisResultBuilder preContingency() {\n-        if (currentBuilder != null) {\n-            throw new IllegalStateException(\"Cannot start a new pre-contingency result\");\n-        }\n-\n-        currentBuilder = new PreContingencyResultBuilder();\n-        return this;\n+    private void addPostContingencyResult(PostContingencyResult result) {\n+        postContingencyResults.add(Objects.requireNonNull(result));\n     }\n \n     /**\n-     * Finalize the creation of the PreContingencyResult instance\n-     * @return this SecurityAnalysisResultBuilder instance.\n+     * Initiates the creation of the result for N situation.\n+     * @return a {@link PreContingencyResultBuilder} instance.\n      */\n-    public SecurityAnalysisResultBuilder endPreContingency() {\n-        if (currentBuilder instanceof PreContingencyResultBuilder) {\n-            ((PreContingencyResultBuilder) currentBuilder).endPreContingency();\n-            currentBuilder = null;\n-            return this;\n-        }\n-\n-        throw new IllegalStateException(\"Cannot create the pre-contingency result\");\n+    public PreContingencyResultBuilder preContingency() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2edf9d978fbf576c4e8e1c92bafebc467f4d2a46"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNjQ3MA==", "bodyText": "Not really in favor of proposing this new method, but why not :\nI prefer to leave the detection responsibility to the user of the builder, while the builder's responsibility is really only to build the result.\nMaybe if we keep it, we should rename it to something like \"detectViolations\".", "url": "https://github.com/powsybl/powsybl-core/pull/1207#discussion_r389826470", "createdAt": "2020-03-09T16:58:40Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/main/java/com/powsybl/security/SecurityAnalysisResultBuilder.java", "diffHunk": "@@ -143,62 +86,87 @@ public SecurityAnalysisResult build() {\n     }\n \n     /**\n-     * Provides access to the security analysis running context to children classes.\n-     * @return the security analysis running context.\n+     * Base class for the pre and post contingency builders.\n      */\n-    protected RunningContext getContext() {\n-        return context;\n-    }\n-\n-    private interface ResultBuilder {\n-\n-        void setComputationOk(boolean computationOk);\n-\n-        void addViolation(LimitViolation violation);\n-\n-    }\n-\n-    private class LimitViolationsResultBuilder implements ResultBuilder {\n+    public abstract static class AbstractLimitViolationsResultBuilder<B extends AbstractLimitViolationsResultBuilder<B>> {\n \n         protected boolean computationOk;\n \n         protected final List<LimitViolation> violations = new ArrayList<>();\n \n-        @Override\n-        public void setComputationOk(boolean computationOk) {\n+        public B setComputationOk(boolean computationOk) {\n             this.computationOk = computationOk;\n+            return (B) this;\n         }\n \n-        @Override\n-        public void addViolation(LimitViolation violation) {\n+        public B addViolation(LimitViolation violation) {\n             violations.add(Objects.requireNonNull(violation));\n+            return (B) this;\n         }\n \n+        public B addViolations(List<LimitViolation> violations) {\n+            violations.forEach(this::addViolation);\n+            return (B) this;\n+        }\n+\n+        public abstract B addViolations(LimitViolationDetector detector);\n     }\n \n-    private class PreContingencyResultBuilder extends LimitViolationsResultBuilder {\n+    /**\n+     * Builder for the pre-contingency result\n+     */\n+    public class PreContingencyResultBuilder extends AbstractLimitViolationsResultBuilder<PreContingencyResultBuilder> {\n+\n+        @Override\n+        public PreContingencyResultBuilder addViolations(LimitViolationDetector detector) {\n+            Objects.requireNonNull(detector);\n+\n+            detector.checkAll(context.getNetwork(), this::addViolation);\n+\n+            return this;\n+        }\n \n-        void endPreContingency() {\n+        /**\n+         * Finalize the creation of the PreContingencyResult instance\n+         * @return the parent {@link SecurityAnalysisResultBuilder} instance.\n+         */\n+        public SecurityAnalysisResultBuilder endPreContingency() {\n             List<LimitViolation> filteredViolations = filter.apply(violations, context.getNetwork());\n             LimitViolationsResult res = new LimitViolationsResult(computationOk, filteredViolations);\n             interceptors.forEach(i -> i.onPreContingencyResult(context, res));\n-            preContingencyResult = res;\n+            setPreContingencyResult(res);\n+\n+            return SecurityAnalysisResultBuilder.this;\n         }\n     }\n \n-    private class PostContingencyResultBuilder extends LimitViolationsResultBuilder {\n+    public class PostContingencyResultBuilder extends AbstractLimitViolationsResultBuilder<PostContingencyResultBuilder> {\n \n         private final Contingency contingency;\n \n         PostContingencyResultBuilder(Contingency contingency) {\n             this.contingency = Objects.requireNonNull(contingency);\n         }\n \n-        void endContingency() {\n+        public PostContingencyResultBuilder addViolations(LimitViolationDetector detector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2edf9d978fbf576c4e8e1c92bafebc467f4d2a46"}, "originalPosition": 211}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc88bae9457f21d0b11a8f0852bce8dd6630f4a", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ffc88bae9457f21d0b11a8f0852bce8dd6630f4a", "committedDate": "2020-03-11T08:35:48Z", "message": "Remove the addViolations(LimitViolationDetector) method\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTcyOTU2", "url": "https://github.com/powsybl/powsybl-core/pull/1207#pullrequestreview-372572956", "createdAt": "2020-03-11T09:01:01Z", "commit": {"oid": "ffc88bae9457f21d0b11a8f0852bce8dd6630f4a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTQzNzY0", "url": "https://github.com/powsybl/powsybl-core/pull/1207#pullrequestreview-375143764", "createdAt": "2020-03-16T12:02:18Z", "commit": {"oid": "ffc88bae9457f21d0b11a8f0852bce8dd6630f4a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a261b2fb4be8fd85406b36ed587c6c93fd230872", "author": {"user": {"login": "jonenst", "name": "Jon Harper"}}, "url": "https://github.com/powsybl/powsybl-core/commit/a261b2fb4be8fd85406b36ed587c6c93fd230872", "committedDate": "2020-03-16T12:05:24Z", "message": "Merge branch 'master' into sa-result-builder"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4447, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}