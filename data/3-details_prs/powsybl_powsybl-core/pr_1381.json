{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzYyMDYx", "number": 1381, "title": "Slackbus extension: interface and implementation", "bodyText": "Please check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nIssue #1307\nDoes this PR introduce a breaking change or deprecate an API?\nNo", "createdAt": "2020-07-06T13:05:30Z", "url": "https://github.com/powsybl/powsybl-core/pull/1381", "merged": true, "mergeCommit": {"oid": "1049045cd4bd8cfe496aebc4a4dd53db75c9990e"}, "closed": true, "closedAt": "2020-07-28T16:01:12Z", "author": {"login": "flo-dup"}, "timelineItems": {"totalCount": 65, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyRXdFABqjM1MTU5NjkwNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5XUcrgH2gAyNDQ0NzYyMDYxOjNhNmI3ZjNkYzRiMzQxNGQ0YjFiYjgyYjZiN2U4YTM4YzE5ZDM0MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d098c93fb4ac0fcbc52fd6d65821835fc65ea02e", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d098c93fb4ac0fcbc52fd6d65821835fc65ea02e", "committedDate": "2020-07-06T13:02:12Z", "message": "Slackbus extension: interface and implementation\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3f98918166ca2d4f0bb794be9e2cd08d037dbb62", "committedDate": "2020-07-06T13:35:55Z", "message": "Slackbus extension: interface and implementation\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjQ0ODE2", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-443644816", "createdAt": "2020-07-07T07:50:32Z", "commit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo1MDozMlrOGty_qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODowMToyOFrOGtzWhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDYwMg==", "bodyText": "Should be private", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450674602", "createdAt": "2020-07-07T07:50:32Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackBus> implements SlackBusAdder {\n+\n+    static final int NODE_UNINITIALIZED = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDgwMg==", "bodyText": "return from here", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450674802", "createdAt": "2020-07-07T07:50:55Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackBus> implements SlackBusAdder {\n+\n+    static final int NODE_UNINITIALIZED = -1;\n+\n+    private String busId;\n+    private int node = NODE_UNINITIALIZED;\n+\n+    public SlackBusAdderImpl(VoltageLevel voltageLevel) {\n+        super(voltageLevel);\n+    }\n+\n+    @Override\n+    public SlackBusAdder setNode(int node) {\n+        this.node = node;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusAdder setBusId(String busId) {\n+        this.busId = busId;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusImpl createExtension(VoltageLevel voltageLevel) {\n+        SlackBusImpl slackBus;\n+        switch (voltageLevel.getTopologyKind()) {\n+            case NODE_BREAKER:\n+                slackBus = new SlackBusImpl(node, voltageLevel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDg3Ng==", "bodyText": "return from here", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450674876", "createdAt": "2020-07-07T07:51:02Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackBus> implements SlackBusAdder {\n+\n+    static final int NODE_UNINITIALIZED = -1;\n+\n+    private String busId;\n+    private int node = NODE_UNINITIALIZED;\n+\n+    public SlackBusAdderImpl(VoltageLevel voltageLevel) {\n+        super(voltageLevel);\n+    }\n+\n+    @Override\n+    public SlackBusAdder setNode(int node) {\n+        this.node = node;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusAdder setBusId(String busId) {\n+        this.busId = busId;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusImpl createExtension(VoltageLevel voltageLevel) {\n+        SlackBusImpl slackBus;\n+        switch (voltageLevel.getTopologyKind()) {\n+            case NODE_BREAKER:\n+                slackBus = new SlackBusImpl(node, voltageLevel);\n+                break;\n+            case BUS_BREAKER:\n+                slackBus = new SlackBusImpl(busId, voltageLevel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTAwOQ==", "bodyText": "Add a message in this exception", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450675009", "createdAt": "2020-07-07T07:51:17Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackBus> implements SlackBusAdder {\n+\n+    static final int NODE_UNINITIALIZED = -1;\n+\n+    private String busId;\n+    private int node = NODE_UNINITIALIZED;\n+\n+    public SlackBusAdderImpl(VoltageLevel voltageLevel) {\n+        super(voltageLevel);\n+    }\n+\n+    @Override\n+    public SlackBusAdder setNode(int node) {\n+        this.node = node;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusAdder setBusId(String busId) {\n+        this.busId = busId;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackBusImpl createExtension(VoltageLevel voltageLevel) {\n+        SlackBusImpl slackBus;\n+        switch (voltageLevel.getTopologyKind()) {\n+            case NODE_BREAKER:\n+                slackBus = new SlackBusImpl(node, voltageLevel);\n+                break;\n+            case BUS_BREAKER:\n+                slackBus = new SlackBusImpl(busId, voltageLevel);\n+                break;\n+            default:\n+                throw new AssertionError();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTA5MQ==", "bodyText": "Add missing license header", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450675091", "createdAt": "2020-07-07T07:51:27Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusImpl.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.powsybl.iidm.network.extensions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTE2Nw==", "bodyText": "Add missing license header", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450675167", "createdAt": "2020-07-07T07:51:35Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.powsybl.iidm.network.extensions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTY0NQ==", "bodyText": "Fix copyright date", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450675645", "createdAt": "2020-07-07T07:52:35Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusXmlSerializer.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2018, RTE (http://www.rte-france.com)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NzA5NQ==", "bodyText": "Fix copyright date", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450677095", "createdAt": "2020-07-07T07:55:12Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/resources/xsd/slackBus.xsd", "diffHunk": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2019, RTE (http://www.rte-france.com)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3ODEzOQ==", "bodyText": "I think it's not necessary to prefix the return type with SlackBus", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450678139", "createdAt": "2020-07-07T07:57:12Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBus.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.Bus;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackBus extends Extension<VoltageLevel> {\n+\n+    @Override\n+    default String getName() {\n+        return \"slackBus\";\n+    }\n+\n+    interface NodeBreakerView {\n+        int getNode();\n+    }\n+\n+    interface BusBreakerView {\n+        Bus getBus();\n+    }\n+\n+    interface BusView {\n+        Bus getBus();\n+    }\n+\n+    Bus get();\n+\n+    SlackBus.NodeBreakerView getNodeBreakerView();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3ODU4Nw==", "bodyText": "Add javadoc to explain this is a shortcut to getBusView().getBus()", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450678587", "createdAt": "2020-07-07T07:57:56Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBus.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.Bus;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackBus extends Extension<VoltageLevel> {\n+\n+    @Override\n+    default String getName() {\n+        return \"slackBus\";\n+    }\n+\n+    interface NodeBreakerView {\n+        int getNode();\n+    }\n+\n+    interface BusBreakerView {\n+        Bus getBus();\n+    }\n+\n+    interface BusView {\n+        Bus getBus();\n+    }\n+\n+    Bus get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4MDQ1Mw==", "bodyText": "This is a really bad idea to store the bus in the view: in a Node/Breaker Voltage level, these buses are calculated automatically, so new buses will be created when the topology changes. For Bus/Breaker Voltage Level, the bus of the bus/breaker view is configured, so it could be OK to keep it, but it's not for the bus view.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r450680453", "createdAt": "2020-07-07T08:01:28Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusImpl.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.Bus;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusImpl extends AbstractExtension<VoltageLevel> implements SlackBus {\n+\n+    private final NodeBreakerViewImpl nodeBreakerView;\n+    private final BusBreakerViewImpl busBreakerView;\n+    private final BusViewImpl busView;\n+\n+    private static final class NodeBreakerViewImpl implements SlackBus.NodeBreakerView {\n+        private final int node;\n+\n+        public NodeBreakerViewImpl(int node) {\n+            this.node = node;\n+        }\n+\n+        @Override\n+        public int getNode() {\n+            return this.node;\n+        }\n+    }\n+\n+    private static final class BusBreakerViewImpl implements SlackBus.BusBreakerView {\n+        private final Bus bus;\n+\n+        public BusBreakerViewImpl(Bus busBusBreakerView) {\n+            this.bus = busBusBreakerView;\n+        }\n+\n+        @Override\n+        public Bus getBus() {\n+            return this.bus;\n+        }\n+    }\n+\n+    private static final class BusViewImpl implements SlackBus.BusView {\n+        private final Bus bus;\n+\n+        private BusViewImpl(Bus busBusView) {\n+            this.bus = busBusView;\n+        }\n+\n+        @Override\n+        public Bus getBus() {\n+            return this.bus;\n+        }\n+    }\n+\n+    SlackBusImpl(String busId, VoltageLevel vl) {\n+        super(vl);\n+        if (busId == null) {\n+            throw new PowsyblException(\"busId needs to be set for a SlackBus in VoltageLevel.BusBreakerView\");\n+        }\n+        Bus busBusBreakerView = vl.getBusBreakerView().getBus(busId);\n+        Bus busBusView = vl.getBusView().getMergedBus(busId);\n+        this.nodeBreakerView = null;\n+        this.busBreakerView = new BusBreakerViewImpl(busBusBreakerView);\n+        this.busView = new BusViewImpl(busBusView);\n+    }\n+\n+    SlackBusImpl(int node, VoltageLevel vl) {\n+        super(vl);\n+        if (node == SlackBusAdderImpl.NODE_UNINITIALIZED) {\n+            throw new PowsyblException(\"node needs to be set for a SlackBus in VoltageLevel.NodeBreakerView\");\n+        }\n+        Terminal terminal = vl.getNodeBreakerView().getOptionalTerminal(node).get();\n+        Bus busBusBreakerView = terminal.getBusBreakerView().getBus();\n+        Bus busBusView = terminal.getBusView().getBus();\n+        this.busBreakerView = new BusBreakerViewImpl(busBusBreakerView);\n+        this.nodeBreakerView = new NodeBreakerViewImpl(node);\n+        this.busView = new BusViewImpl(busBusView);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f98918166ca2d4f0bb794be9e2cd08d037dbb62"}, "originalPosition": 79}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d48a03d06900b460ebce7aab8f5b4fa75e60ca0a", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d48a03d06900b460ebce7aab8f5b4fa75e60ca0a", "committedDate": "2020-07-07T09:51:05Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "e4a20274c079a39a22a3cd94db87dc5e420d9014", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/e4a20274c079a39a22a3cd94db87dc5e420d9014", "committedDate": "2020-07-07T11:31:34Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4a20274c079a39a22a3cd94db87dc5e420d9014", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/e4a20274c079a39a22a3cd94db87dc5e420d9014", "committedDate": "2020-07-07T11:31:34Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "f8e70fe0f36f1f02c21e390499244355a4ca3361", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/f8e70fe0f36f1f02c21e390499244355a4ca3361", "committedDate": "2020-07-07T11:47:46Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8e70fe0f36f1f02c21e390499244355a4ca3361", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/f8e70fe0f36f1f02c21e390499244355a4ca3361", "committedDate": "2020-07-07T11:47:46Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "948e5ad390105e97b14a366628d64db2e2e40dad", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/948e5ad390105e97b14a366628d64db2e2e40dad", "committedDate": "2020-07-07T12:18:50Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjcxMzI0", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-444271324", "createdAt": "2020-07-07T21:43:14Z", "commit": {"oid": "948e5ad390105e97b14a366628d64db2e2e40dad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0MzoxNFrOGuQrWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0MzoxNFrOGuQrWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MDkyMQ==", "bodyText": "Optional as a class attribute is often not recommended (https://stackoverflow.com/questions/29033518/is-it-a-good-practice-to-use-optional-as-an-attribute-in-a-class)", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r451160921", "createdAt": "2020-07-07T21:43:14Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackBusAdderImpl.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+import java.util.OptionalInt;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackBusAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackBus> implements SlackBusAdder {\n+\n+    private String busId;\n+    private OptionalInt node;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "948e5ad390105e97b14a366628d64db2e2e40dad"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "948e5ad390105e97b14a366628d64db2e2e40dad", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/948e5ad390105e97b14a366628d64db2e2e40dad", "committedDate": "2020-07-07T12:18:50Z", "message": "SlackBusAdder: OptionalInt node to avoid the unitialized constant\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "739b52d66d9228a25c504058d4f58b5d1c4cb1ef", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/739b52d66d9228a25c504058d4f58b5d1c4cb1ef", "committedDate": "2020-07-13T15:58:42Z", "message": "Switching from SlackBus to SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4ODE1OTA4", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-448815908", "createdAt": "2020-07-15T10:12:05Z", "commit": {"oid": "35c6d6f0b203dd49cd85cffd2f944a89ffd48e8d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDoxMjowNVrOGx3hOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDoxMjowNVrOGx3hOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0MzAzNA==", "bodyText": "This extension should inherit from AbstractMultiVariantConnectableExtension because the slack bus could depend from the variant.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r454943034", "createdAt": "2020-07-15T10:12:05Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminalNodeBreakerImpl.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackTerminalNodeBreakerImpl extends AbstractExtension<VoltageLevel> implements SlackTerminal {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35c6d6f0b203dd49cd85cffd2f944a89ffd48e8d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjkyNTQw", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-449292540", "createdAt": "2020-07-15T20:09:04Z", "commit": {"oid": "08923ffa7beb9c5f883b946991cdb235fbf6ef82"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDowOTowNFrOGyOCkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDoxMDo1MFrOGyOGZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMjAxNg==", "bodyText": "I think this utility function already exists somewhere in iidm xml converter module.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r455312016", "createdAt": "2020-07-15T20:09:04Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminalXmlSerializer.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.google.auto.service.AutoService;\n+import com.powsybl.commons.extensions.AbstractExtensionXmlSerializer;\n+import com.powsybl.commons.extensions.ExtensionXmlSerializer;\n+import com.powsybl.commons.xml.XmlReaderContext;\n+import com.powsybl.commons.xml.XmlWriterContext;\n+import com.powsybl.iidm.network.*;\n+\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+@AutoService(ExtensionXmlSerializer.class)\n+public class SlackTerminalXmlSerializer extends AbstractExtensionXmlSerializer<VoltageLevel, SlackTerminal> {\n+\n+    public SlackTerminalXmlSerializer() {\n+        super(\"slackTerminal\", \"network\", SlackTerminal.class, false, \"slackTerminal.xsd\",\n+            \"http://www.powsybl.org/schema/iidm/ext/slack_bus/1_0\", \"slt\");\n+    }\n+\n+    @Override\n+    public void write(SlackTerminal slackTerminal, XmlWriterContext context) throws XMLStreamException {\n+        writeTerminalRef(slackTerminal.getTerminal(), context.getExtensionsWriter());\n+    }\n+\n+    @Override\n+    public SlackTerminal read(VoltageLevel voltageLevel, XmlReaderContext context) {\n+        Terminal terminal = readTerminalRef(voltageLevel.getNetwork(), context);\n+        if (terminal != null) {\n+            voltageLevel.newExtension(SlackTerminalAdder.class)\n+                .setTerminal(terminal)\n+                .add();\n+            return voltageLevel.getExtension(SlackTerminalAdder.class);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static void writeTerminalRef(Terminal t, XMLStreamWriter writer) throws XMLStreamException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08923ffa7beb9c5f883b946991cdb235fbf6ef82"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMjExNg==", "bodyText": "Same", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r455312116", "createdAt": "2020-07-15T20:09:16Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminalXmlSerializer.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.google.auto.service.AutoService;\n+import com.powsybl.commons.extensions.AbstractExtensionXmlSerializer;\n+import com.powsybl.commons.extensions.ExtensionXmlSerializer;\n+import com.powsybl.commons.xml.XmlReaderContext;\n+import com.powsybl.commons.xml.XmlWriterContext;\n+import com.powsybl.iidm.network.*;\n+\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+@AutoService(ExtensionXmlSerializer.class)\n+public class SlackTerminalXmlSerializer extends AbstractExtensionXmlSerializer<VoltageLevel, SlackTerminal> {\n+\n+    public SlackTerminalXmlSerializer() {\n+        super(\"slackTerminal\", \"network\", SlackTerminal.class, false, \"slackTerminal.xsd\",\n+            \"http://www.powsybl.org/schema/iidm/ext/slack_bus/1_0\", \"slt\");\n+    }\n+\n+    @Override\n+    public void write(SlackTerminal slackTerminal, XmlWriterContext context) throws XMLStreamException {\n+        writeTerminalRef(slackTerminal.getTerminal(), context.getExtensionsWriter());\n+    }\n+\n+    @Override\n+    public SlackTerminal read(VoltageLevel voltageLevel, XmlReaderContext context) {\n+        Terminal terminal = readTerminalRef(voltageLevel.getNetwork(), context);\n+        if (terminal != null) {\n+            voltageLevel.newExtension(SlackTerminalAdder.class)\n+                .setTerminal(terminal)\n+                .add();\n+            return voltageLevel.getExtension(SlackTerminalAdder.class);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static void writeTerminalRef(Terminal t, XMLStreamWriter writer) throws XMLStreamException {\n+        Connectable c = t.getConnectable();\n+        writer.writeAttribute(\"connectableId\", c.getId());\n+        if (c.getTerminals().size() > 1) {\n+            if (c instanceof Injection) {\n+                // nothing to do\n+            } else if (c instanceof Branch) {\n+                Branch branch = (Branch) c;\n+                writer.writeAttribute(\"side\", branch.getSide(t).name());\n+            } else if (c instanceof ThreeWindingsTransformer) {\n+                ThreeWindingsTransformer twt = (ThreeWindingsTransformer) c;\n+                writer.writeAttribute(\"side\", twt.getSide(t).name());\n+            } else {\n+                throw new AssertionError(\"Unexpected Connectable instance: \" + c.getClass());\n+            }\n+        }\n+    }\n+\n+    public static Terminal readTerminalRef(Network network, XmlReaderContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08923ffa7beb9c5f883b946991cdb235fbf6ef82"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMjk5Nw==", "bodyText": "This is an arbitrary choice to return the bus view bus and doc does not really help.\nI would just remove it and force the user to explictly choose the view.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r455312997", "createdAt": "2020-07-15T20:10:50Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminal.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.Bus;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackTerminal extends Extension<VoltageLevel> {\n+\n+    @Override\n+    default String getName() {\n+        return \"slackTerminal\";\n+    }\n+\n+    /**\n+     * Get the terminal pointed by the current SlackTerminal\n+     * @return the corresponding terminal\n+     */\n+    Terminal getTerminal();\n+\n+    /**\n+     * Shortcut to getTerminal().getBusView().getBus()\n+     * @return the corresponding bus in the bus view\n+     */\n+    default Bus getBus() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08923ffa7beb9c5f883b946991cdb235fbf6ef82"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08923ffa7beb9c5f883b946991cdb235fbf6ef82", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/08923ffa7beb9c5f883b946991cdb235fbf6ef82", "committedDate": "2020-07-15T12:38:12Z", "message": "Serializer corrections\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "d653c932ac5e8c7414a2b7af8ce09cb8ad6ec5e2", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d653c932ac5e8c7414a2b7af8ce09cb8ad6ec5e2", "committedDate": "2020-07-16T09:19:52Z", "message": "SlackTerminal: Removing the getBus shortcut\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae541eb53d568b6e79283082815e8a9e2f74d05b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ae541eb53d568b6e79283082815e8a9e2f74d05b", "committedDate": "2020-07-17T12:03:45Z", "message": "Adding xml unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "331ec17c93e84ca3dc58f54b98c8784ff3c5e4e6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/331ec17c93e84ca3dc58f54b98c8784ff3c5e4e6", "committedDate": "2020-07-17T12:29:28Z", "message": "Adding xml unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "331ec17c93e84ca3dc58f54b98c8784ff3c5e4e6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/331ec17c93e84ca3dc58f54b98c8784ff3c5e4e6", "committedDate": "2020-07-17T12:29:28Z", "message": "Adding xml unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "51fc3baa3cea7106d02794c4c22eed4020fe8c9e", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/51fc3baa3cea7106d02794c4c22eed4020fe8c9e", "committedDate": "2020-07-17T13:05:27Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51fc3baa3cea7106d02794c4c22eed4020fe8c9e", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/51fc3baa3cea7106d02794c4c22eed4020fe8c9e", "committedDate": "2020-07-17T13:05:27Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "357e320a8b693104a8a49067f2ec37c78ba22735", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/357e320a8b693104a8a49067f2ec37c78ba22735", "committedDate": "2020-07-17T13:19:31Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "357e320a8b693104a8a49067f2ec37c78ba22735", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/357e320a8b693104a8a49067f2ec37c78ba22735", "committedDate": "2020-07-17T13:19:31Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "0c7d6ce3c0717c4df22628ef85df376155c1e68e", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/0c7d6ce3c0717c4df22628ef85df376155c1e68e", "committedDate": "2020-07-17T13:31:02Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c7d6ce3c0717c4df22628ef85df376155c1e68e", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/0c7d6ce3c0717c4df22628ef85df376155c1e68e", "committedDate": "2020-07-17T13:31:02Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "7e4bc239b888322cbfff8ba4e2aa2168a0227874", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7e4bc239b888322cbfff8ba4e2aa2168a0227874", "committedDate": "2020-07-17T13:36:32Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e4bc239b888322cbfff8ba4e2aa2168a0227874", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7e4bc239b888322cbfff8ba4e2aa2168a0227874", "committedDate": "2020-07-17T13:36:32Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "5f98a2e709e9c47110544594e9690d6a130f0b84", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/5f98a2e709e9c47110544594e9690d6a130f0b84", "committedDate": "2020-07-17T13:50:54Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f98a2e709e9c47110544594e9690d6a130f0b84", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/5f98a2e709e9c47110544594e9690d6a130f0b84", "committedDate": "2020-07-17T13:50:54Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "4522182ba44dc79b03a7891d2b5867001b813a62", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4522182ba44dc79b03a7891d2b5867001b813a62", "committedDate": "2020-07-20T16:14:25Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4522182ba44dc79b03a7891d2b5867001b813a62", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4522182ba44dc79b03a7891d2b5867001b813a62", "committedDate": "2020-07-20T16:14:25Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "c5c9d343b447b81af17a3f7e8b543cf6d877ad37", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c5c9d343b447b81af17a3f7e8b543cf6d877ad37", "committedDate": "2020-07-20T16:20:59Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5c9d343b447b81af17a3f7e8b543cf6d877ad37", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c5c9d343b447b81af17a3f7e8b543cf6d877ad37", "committedDate": "2020-07-20T16:20:59Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "c3022c25ec771dacecea3c339376e14eec11bd11", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c3022c25ec771dacecea3c339376e14eec11bd11", "committedDate": "2020-07-20T16:33:07Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3022c25ec771dacecea3c339376e14eec11bd11", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c3022c25ec771dacecea3c339376e14eec11bd11", "committedDate": "2020-07-20T16:33:07Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "18a32aa6fce71dc22833480d2f12f8446a535836", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/18a32aa6fce71dc22833480d2f12f8446a535836", "committedDate": "2020-07-21T13:56:06Z", "message": "Adding multi-variant test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18a32aa6fce71dc22833480d2f12f8446a535836", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/18a32aa6fce71dc22833480d2f12f8446a535836", "committedDate": "2020-07-21T13:56:06Z", "message": "Adding multi-variant test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "74257603afe3bf8316a3a09b07b1535f0c5d07a9", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/74257603afe3bf8316a3a09b07b1535f0c5d07a9", "committedDate": "2020-07-21T14:06:07Z", "message": "Adding multi-variant test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49c08d133af0e5fba3d1f8833e73fd866c3b09e0", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/49c08d133af0e5fba3d1f8833e73fd866c3b09e0", "committedDate": "2020-07-21T15:54:33Z", "message": "TerminalChooser to choose the \"best\" terminal for the SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "9ada85d4c8d8e3036ad614acd802b814a8d409be", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/9ada85d4c8d8e3036ad614acd802b814a8d409be", "committedDate": "2020-07-21T15:58:13Z", "message": "TerminalChooser to choose the \"best\" terminal for the SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ada85d4c8d8e3036ad614acd802b814a8d409be", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/9ada85d4c8d8e3036ad614acd802b814a8d409be", "committedDate": "2020-07-21T15:58:13Z", "message": "TerminalChooser to choose the \"best\" terminal for the SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "b985920e703779e2ea77d75bf9ad8c65ca4a34d6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/b985920e703779e2ea77d75bf9ad8c65ca4a34d6", "committedDate": "2020-07-21T16:39:49Z", "message": "TerminalChooser to choose the \"best\" terminal for the SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3de39dee657e079913bc921486b9a3e38eefe187", "committedDate": "2020-07-21T16:41:16Z", "message": "Adding unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "561f812fc39b92d54fc76f526a0986ac8781df0b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/561f812fc39b92d54fc76f526a0986ac8781df0b", "committedDate": "2020-07-22T08:24:29Z", "message": "Adding unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDUyNDkz", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-453052493", "createdAt": "2020-07-22T07:15:20Z", "commit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoxNToyMVrOG1VtBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozMTo0OFrOG1YVzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4MzMwMA==", "bodyText": "If we try to be consistent, the other extension adder use with prefix instead of set. I don't remember why @jonenst did that choice, and I don't know if the consistency is a hard requirement.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458583300", "createdAt": "2020-07-22T07:15:21Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminalAdder.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.ExtensionAdder;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackTerminalAdder extends ExtensionAdder<VoltageLevel, SlackTerminal> {\n+\n+    @Override\n+    default Class<SlackTerminal> getExtensionClass() {\n+        return SlackTerminal.class;\n+    }\n+\n+    SlackTerminalAdder setTerminal(Terminal terminal);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4MzcyNw==", "bodyText": "Could you prepare a pull request to adapt the existing code?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458583727", "createdAt": "2020-07-22T07:16:16Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractMultiVariantConnectableExtension.java", "diffHunk": "@@ -6,31 +6,21 @@\n  */\n package com.powsybl.iidm.network.impl;\n \n-import com.powsybl.commons.exceptions.UncheckedClassCastExceptionException;\n-import com.powsybl.commons.extensions.AbstractExtension;\n import com.powsybl.iidm.network.Connectable;\n-import com.powsybl.iidm.network.Network;\n \n /**\n+ * Deprecated, use {@link AbstractMultiVariantIdentifiableExtension} instead.\n  * @author Ghiles Abdellah <ghiles.abdellah at rte-france.com>\n  */\n-public abstract class AbstractMultiVariantConnectableExtension<T extends Connectable> extends AbstractExtension<T> implements MultiVariantObject {\n+@Deprecated\n+public abstract class AbstractMultiVariantConnectableExtension<T extends Connectable> extends AbstractMultiVariantIdentifiableExtension<T> {\n \n+    /**\n+     * Deprecated, use {@link AbstractMultiVariantIdentifiableExtension} instead.\n+     */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NDA3Nw==", "bodyText": "<T extends Identifiable<T>> ?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458584077", "createdAt": "2020-07-22T07:16:59Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractMultiVariantIdentifiableExtension.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright (c) 2020, RTE (https://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.commons.exceptions.UncheckedClassCastExceptionException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.Identifiable;\n+import com.powsybl.iidm.network.Network;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public abstract class AbstractMultiVariantIdentifiableExtension<T extends Identifiable> extends AbstractExtension<T> implements MultiVariantObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NDkyMw==", "bodyText": "You should switch both parameters to keep the extendable at the first place.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458584923", "createdAt": "2020-07-22T07:18:40Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalAdderImpl.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.extensions.SlackTerminalAdder;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackTerminalAdderImpl extends AbstractExtensionAdder<VoltageLevel, SlackTerminal> implements SlackTerminalAdder {\n+\n+    private Terminal terminal;\n+\n+    public SlackTerminalAdderImpl(VoltageLevel voltageLevel) {\n+        super(voltageLevel);\n+    }\n+\n+    @Override\n+    public SlackTerminalAdder setTerminal(Terminal terminal) {\n+        this.terminal = terminal;\n+        return this;\n+    }\n+\n+    @Override\n+    public SlackTerminal createExtension(VoltageLevel voltageLevel) {\n+        if (terminal == null) {\n+            throw new PowsyblException(\"Terminal needs to be set to create a SlackTerminal extension\");\n+        }\n+        return new SlackTerminalImpl(terminal, voltageLevel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTI1OQ==", "bodyText": "Replace ArrayList by List\n@geofjamg do you think a List is ok, or should we change to a classic array?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458585259", "createdAt": "2020-07-22T07:19:19Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalImpl.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public class SlackTerminalImpl extends AbstractMultiVariantIdentifiableExtension<VoltageLevel> implements SlackTerminal {\n+\n+    private final ArrayList<Terminal> terminals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NjQzMg==", "bodyText": "Add the license header", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458586432", "createdAt": "2020-07-22T07:21:39Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/test/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalTest.java", "diffHunk": "@@ -0,0 +1,179 @@\n+package com.powsybl.iidm.network.impl.extensions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NjgyMg==", "bodyText": "Fix this todo", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458586822", "createdAt": "2020-07-22T07:22:16Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/test/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalTest.java", "diffHunk": "@@ -0,0 +1,179 @@\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.extensions.SlackTerminalAdder;\n+import com.powsybl.iidm.network.test.EurostagTutorialExample1Factory;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import static com.powsybl.iidm.network.VariantManagerConstants.INITIAL_VARIANT_ID;\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class SlackTerminalTest {\n+\n+    static Network createBusBreakerNetwork() {\n+        Network network = Network.create(\"test\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2016-06-27T12:27:58.535+02:00\"));\n+        Substation s = network.newSubstation()\n+            .setId(\"S\")\n+            .setCountry(Country.FR)\n+            .add();\n+        VoltageLevel vl = s.newVoltageLevel()\n+            .setId(\"VL\")\n+            .setNominalV(400)\n+            .setTopologyKind(TopologyKind.BUS_BREAKER)\n+            .add();\n+        vl.getBusBreakerView().newBus()\n+            .setId(\"B\")\n+            .add();\n+        vl.newLoad()\n+            .setId(\"L\")\n+            .setBus(\"B\")\n+            .setConnectableBus(\"B\")\n+            .setP0(100)\n+            .setQ0(50)\n+            .add();\n+\n+        Substation s1 = network.newSubstation()\n+            .setId(\"S1\")\n+            .setCountry(Country.FR)\n+            .add();\n+        VoltageLevel vl1 = s.newVoltageLevel()\n+            .setId(\"VL1\")\n+            .setNominalV(400)\n+            .setTopologyKind(TopologyKind.BUS_BREAKER)\n+            .add();\n+        vl1.getBusBreakerView().newBus()\n+            .setId(\"B1\")\n+            .add();\n+        vl1.newGenerator()\n+            .setId(\"GE\")\n+            .setBus(\"B1\")\n+            .setConnectableBus(\"B1\")\n+            .setTargetP(100)\n+            .setMinP(0)\n+            .setMaxP(110)\n+            .setTargetV(380)\n+            .setVoltageRegulatorOn(true)\n+            .add();\n+\n+        network.newLine()\n+            .setId(\"LI\")\n+            .setR(0.05)\n+            .setX(1.)\n+            .setG1(0.)\n+            .setG2(0.)\n+            .setB1(0.)\n+            .setB2(0.)\n+            .setVoltageLevel1(\"VL\")\n+            .setVoltageLevel2(\"VL1\")\n+            .setBus1(\"B\")\n+            .setBus2(\"B1\")\n+            .add();\n+\n+        return network;\n+    }\n+\n+    private static Terminal getBestTerminal(Network network, String busBusBreaker) {\n+        // TODO: use the utility rules function which decides which terminal to choose from a given bus: see TerminalChooser in iidm-util module\n+        Iterator<? extends Terminal> connectedTerminals =\n+            network.getBusBreakerView().getBus(busBusBreaker).getConnectedTerminals().iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4OTMwOQ==", "bodyText": "This extension is in read-only mode: it's not possible to set a terminal. For a multi-variant network, to define a slack terminal for one variant, I will remove all existing extension and lose information about other variants. I think we miss something...\nI also think we have to fix the integration code of load flows", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458589309", "createdAt": "2020-07-22T07:27:01Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminal.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackTerminal extends Extension<VoltageLevel> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MDA2Mw==", "bodyText": "Could you please complete this unit-test to expose the design issue I mention above about multi-variant management and the replacement of an existing extension", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458590063", "createdAt": "2020-07-22T07:28:28Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/test/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalTest.java", "diffHunk": "@@ -0,0 +1,179 @@\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.extensions.SlackTerminalAdder;\n+import com.powsybl.iidm.network.test.EurostagTutorialExample1Factory;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import static com.powsybl.iidm.network.VariantManagerConstants.INITIAL_VARIANT_ID;\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class SlackTerminalTest {\n+\n+    static Network createBusBreakerNetwork() {\n+        Network network = Network.create(\"test\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2016-06-27T12:27:58.535+02:00\"));\n+        Substation s = network.newSubstation()\n+            .setId(\"S\")\n+            .setCountry(Country.FR)\n+            .add();\n+        VoltageLevel vl = s.newVoltageLevel()\n+            .setId(\"VL\")\n+            .setNominalV(400)\n+            .setTopologyKind(TopologyKind.BUS_BREAKER)\n+            .add();\n+        vl.getBusBreakerView().newBus()\n+            .setId(\"B\")\n+            .add();\n+        vl.newLoad()\n+            .setId(\"L\")\n+            .setBus(\"B\")\n+            .setConnectableBus(\"B\")\n+            .setP0(100)\n+            .setQ0(50)\n+            .add();\n+\n+        Substation s1 = network.newSubstation()\n+            .setId(\"S1\")\n+            .setCountry(Country.FR)\n+            .add();\n+        VoltageLevel vl1 = s.newVoltageLevel()\n+            .setId(\"VL1\")\n+            .setNominalV(400)\n+            .setTopologyKind(TopologyKind.BUS_BREAKER)\n+            .add();\n+        vl1.getBusBreakerView().newBus()\n+            .setId(\"B1\")\n+            .add();\n+        vl1.newGenerator()\n+            .setId(\"GE\")\n+            .setBus(\"B1\")\n+            .setConnectableBus(\"B1\")\n+            .setTargetP(100)\n+            .setMinP(0)\n+            .setMaxP(110)\n+            .setTargetV(380)\n+            .setVoltageRegulatorOn(true)\n+            .add();\n+\n+        network.newLine()\n+            .setId(\"LI\")\n+            .setR(0.05)\n+            .setX(1.)\n+            .setG1(0.)\n+            .setG2(0.)\n+            .setB1(0.)\n+            .setB2(0.)\n+            .setVoltageLevel1(\"VL\")\n+            .setVoltageLevel2(\"VL1\")\n+            .setBus1(\"B\")\n+            .setBus2(\"B1\")\n+            .add();\n+\n+        return network;\n+    }\n+\n+    private static Terminal getBestTerminal(Network network, String busBusBreaker) {\n+        // TODO: use the utility rules function which decides which terminal to choose from a given bus: see TerminalChooser in iidm-util module\n+        Iterator<? extends Terminal> connectedTerminals =\n+            network.getBusBreakerView().getBus(busBusBreaker).getConnectedTerminals().iterator();\n+        return connectedTerminals.next();\n+    }\n+\n+    @Test\n+    public void test() {\n+        Network network = createBusBreakerNetwork();\n+        VoltageLevel vl0 = network.getVoltageLevel(\"VL\");\n+        SlackTerminalAdder adder = vl0.newExtension(SlackTerminalAdder.class);\n+\n+        // error test\n+        try {\n+            adder.add();\n+            fail();\n+        } catch (PowsyblException e) {\n+            assertEquals(\"Terminal needs to be set to create a SlackTerminal extension\", e.getMessage());\n+        }\n+\n+        // extends voltage level\n+        String busBusBreakerId = \"B\";\n+        adder.setTerminal(getBestTerminal(network, busBusBreakerId)).add();\n+\n+        SlackTerminal slackTerminal;\n+        for (VoltageLevel vl : network.getVoltageLevels()) {\n+            slackTerminal = vl.getExtension(SlackTerminal.class);\n+            if (slackTerminal != null) {\n+                assertEquals(busBusBreakerId, slackTerminal.getTerminal().getBusBreakerView().getBus().getId());\n+                assertEquals(\"VL_0\", slackTerminal.getTerminal().getBusView().getBus().getId());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void variantsTest() {\n+        String variant1 = \"variant1\";\n+        String variant2 = \"variant2\";\n+\n+        Network network = EurostagTutorialExample1Factory.create();\n+        VoltageLevel vl = network.getVoltageLevel(\"VLHV1\");\n+        vl.newExtension(SlackTerminalAdder.class)\n+            .setTerminal(getBestTerminal(network, \"NLOAD\"))\n+            .add();\n+\n+        SlackTerminal slackTerminal = vl.getExtension(SlackTerminal.class);\n+        assertNotNull(slackTerminal);\n+\n+        final Terminal t0 = slackTerminal.getTerminal();\n+\n+        VariantManager variantManager = network.getVariantManager();\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, variant1);\n+\n+        variantManager.setWorkingVariant(variant1);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.setWorkingVariant(INITIAL_VARIANT_ID);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.cloneVariant(variant1, variant2);\n+\n+        variantManager.setWorkingVariant(variant1);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.setWorkingVariant(variant2);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.removeVariant(variant1);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.removeVariant(variant2);\n+        try {\n+            slackTerminal.getTerminal();\n+            fail();\n+        } catch (PowsyblException e) {\n+            assertEquals(\"Variant index not set\", e.getMessage());\n+        }\n+\n+        variantManager.setWorkingVariant(INITIAL_VARIANT_ID);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        List<String> targetVariantIds = new ArrayList<>();\n+        targetVariantIds.add(variant1);\n+        targetVariantIds.add(variant2);\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, targetVariantIds);\n+\n+        variantManager.setWorkingVariant(variant1);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+\n+        variantManager.setWorkingVariant(variant2);\n+        assertEquals(t0, slackTerminal.getTerminal());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MDkzNA==", "bodyText": "What about branches, T3E or HVDC lines?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458590934", "createdAt": "2020-07-22T07:30:00Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MTM4Mw==", "bodyText": "Rules cannot be null:\nthis.rules = Objects.requireNonNull(rules);", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458591383", "createdAt": "2020-07-22T07:30:45Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);\n+        return new TerminalChooser(rules);\n+    }\n+\n+    public TerminalChooser(List<Predicate<Terminal>> rules) {\n+        this.rules = rules;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwODgyOQ==", "bodyText": "I'm not sure it's really efficient: we iterate many times over the list of terminals.", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458608829", "createdAt": "2020-07-22T08:01:49Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);\n+        return new TerminalChooser(rules);\n+    }\n+\n+    public TerminalChooser(List<Predicate<Terminal>> rules) {\n+        this.rules = rules;\n+    }\n+\n+    /**\n+     * @param terminals the terminals among which a terminal has to be chosen\n+     * @return the first terminal satisfying a rule (rules are checked in ascending order)\n+     */\n+    public Terminal choose(Iterable<? extends Terminal> terminals) {\n+        for (Predicate<Terminal> predicate : rules) {\n+            Optional<? extends Terminal> terminal = StreamSupport.stream(terminals.spliterator(), false)\n+                .filter(predicate)\n+                .findFirst();\n+            if (terminal.isPresent()) {\n+                return terminal.get();\n+            }\n+        }\n+        Iterator<? extends Terminal> it = terminals.iterator();\n+        return it.hasNext() ? it.next() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNTI1NA==", "bodyText": "Not sure it's really efficient, specially because you iterate over the stream to create the list, and then we iterate several times over the list in the other choose method", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458625254", "createdAt": "2020-07-22T08:29:48Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);\n+        return new TerminalChooser(rules);\n+    }\n+\n+    public TerminalChooser(List<Predicate<Terminal>> rules) {\n+        this.rules = rules;\n+    }\n+\n+    /**\n+     * @param terminals the terminals among which a terminal has to be chosen\n+     * @return the first terminal satisfying a rule (rules are checked in ascending order)\n+     */\n+    public Terminal choose(Iterable<? extends Terminal> terminals) {\n+        for (Predicate<Terminal> predicate : rules) {\n+            Optional<? extends Terminal> terminal = StreamSupport.stream(terminals.spliterator(), false)\n+                .filter(predicate)\n+                .findFirst();\n+            if (terminal.isPresent()) {\n+                return terminal.get();\n+            }\n+        }\n+        Iterator<? extends Terminal> it = terminals.iterator();\n+        return it.hasNext() ? it.next() : null;\n+    }\n+\n+    /**\n+     * @param terminals the terminals among which a terminal has to be chosen\n+     * @return the first terminal satisfying a rule (rules are checked in ascending order)\n+     */\n+    public Terminal choose(Stream<? extends Terminal> terminals) {\n+        return choose(terminals.collect(Collectors.toList()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561f812fc39b92d54fc76f526a0986ac8781df0b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNjUxMQ==", "bodyText": "Do we need to add copyright header in this file too?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r458626511", "createdAt": "2020-07-22T08:31:48Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/test/resources/slackTerminal.xml", "diffHunk": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561f812fc39b92d54fc76f526a0986ac8781df0b"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "988b7b6b8f45123d827c06a89d644bc91f95d115", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/988b7b6b8f45123d827c06a89d644bc91f95d115", "committedDate": "2020-07-22T09:36:52Z", "message": "Adding multivariant support for Identifiable extensions\n\nSupport for Connectable extensions through AbstractMultiVariantConnectableExtension class is deprecated, as Connectable extends Identifiable\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d2dedf3e87d0fb015afc3a1dca114f738c8e1f4", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1d2dedf3e87d0fb015afc3a1dca114f738c8e1f4", "committedDate": "2020-07-22T09:40:22Z", "message": "Adding terminals getters to the Bus interface\n\nThe two getters already existed in BusExt interface but needed to be added in the Bus interface for the SlackTerminal issue #1307\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7da07f0d7d05ce1f9e470f5dc7ac7b5ba37acab3", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7da07f0d7d05ce1f9e470f5dc7ac7b5ba37acab3", "committedDate": "2020-07-22T09:40:22Z", "message": "Terminals getters: default implementations in Bus interface\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f63c077ca21d5ee75302b05a623a82a23edd367", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4f63c077ca21d5ee75302b05a623a82a23edd367", "committedDate": "2020-07-22T09:40:22Z", "message": "Minor corrections\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4803d334e51a50a5e4690ab97753260686b847", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ee4803d334e51a50a5e4690ab97753260686b847", "committedDate": "2020-07-22T09:40:22Z", "message": "Slackbus extension: interface and implementation\n\nSlackBus: two implementations depending on the VoltageLevel type\nSlackBusBusBreakerImpl for VoltageLevel.BusBreakerView\nSlackBusNodeBreakerImpl for VoltageLevel.NodeBreakerView\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d688d3d70569e94eca0f64cb497d27399b63f6ee", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d688d3d70569e94eca0f64cb497d27399b63f6ee", "committedDate": "2020-07-22T09:40:22Z", "message": "SlackBus is replaced by SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1781d963a940bc6ee270e7d8c259672ed9cc0c06", "author": {"user": {"login": "annetill", "name": "Anne Tilloy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1781d963a940bc6ee270e7d8c259672ed9cc0c06", "committedDate": "2020-07-22T09:40:22Z", "message": "Add a unit test.\n\nSigned-off-by: Anne Tilloy <anne.tilloy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1aff402a7a4aea631c9fcd46883f0836f08077", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/0d1aff402a7a4aea631c9fcd46883f0836f08077", "committedDate": "2020-07-22T09:40:23Z", "message": "SlackTerminal: defined from a terminal\n\nThe user gives the terminal when creating the extension, instead of the busId / node id.\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8cd431e4e3fc13ee8b1a04a8ca7ac07fe62a465", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c8cd431e4e3fc13ee8b1a04a8ca7ac07fe62a465", "committedDate": "2020-07-22T09:40:23Z", "message": "SlackTerminal: Removing the getBus shortcut\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab21f3bdb02540e3cd49e8e7bb5e41770809cf60", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ab21f3bdb02540e3cd49e8e7bb5e41770809cf60", "committedDate": "2020-07-22T09:40:23Z", "message": "Unit tests\n\n- Adding xml unit test\n- Adding error unit test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d17b6f083e9c744fb1b255ab2f33d3c35f321e0", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4d17b6f083e9c744fb1b255ab2f33d3c35f321e0", "committedDate": "2020-07-22T09:46:06Z", "message": "Support for multi-variants\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "054fae2c3a4fe3d8b5d88b42361c1d6339ee37f2", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/054fae2c3a4fe3d8b5d88b42361c1d6339ee37f2", "committedDate": "2020-07-22T09:46:15Z", "message": "Adding multi-variant test\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1ba6d7cd4eadc5901aa5db9d5b531bc6512e3e5", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c1ba6d7cd4eadc5901aa5db9d5b531bc6512e3e5", "committedDate": "2020-07-22T09:46:15Z", "message": "TerminalChooser to choose the \"best\" terminal for the SlackTerminal\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a32a19a27413cdbc829f8a47e74cd701ae11b6f6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/a32a19a27413cdbc829f8a47e74cd701ae11b6f6", "committedDate": "2020-07-22T09:46:15Z", "message": "Adding unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "097349ffab000dfd6af2d7ee9717763a85c00503", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/097349ffab000dfd6af2d7ee9717763a85c00503", "committedDate": "2020-07-22T11:58:50Z", "message": "Minor changes\n\nAs requested from review.\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ffae6622d296689bf883e46ab38db79e083d49b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/2ffae6622d296689bf883e46ab38db79e083d49b", "committedDate": "2020-07-22T11:59:22Z", "message": "TerminalChooser: efficiency improved\n\nAs discussed in PR review\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "561f812fc39b92d54fc76f526a0986ac8781df0b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/561f812fc39b92d54fc76f526a0986ac8781df0b", "committedDate": "2020-07-22T08:24:29Z", "message": "Adding unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "2ffae6622d296689bf883e46ab38db79e083d49b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/2ffae6622d296689bf883e46ab38db79e083d49b", "committedDate": "2020-07-22T11:59:22Z", "message": "TerminalChooser: efficiency improved\n\nAs discussed in PR review\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a00579136d6428d5e6711c65902f1dfc7c4836a", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/6a00579136d6428d5e6711c65902f1dfc7c4836a", "committedDate": "2020-07-23T09:53:21Z", "message": "WIP\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "1a0411850811e1872aaf81d5c0713fc6d4893e8b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1a0411850811e1872aaf81d5c0713fc6d4893e8b", "committedDate": "2020-07-23T17:50:52Z", "message": "SlackTerminal: multivariant support corrections\n\n- adding setTerminal and isCleanable methods\n- adding reset, removeFrom, removeAllFrom static methods\n- related unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e98cd2281a4fb23b42833c09d82a7192e6f4535b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/e98cd2281a4fb23b42833c09d82a7192e6f4535b", "committedDate": "2020-07-23T17:58:30Z", "message": "SlackTerminal: multivariant support corrections\n\n- adding setTerminal and isCleanable methods\n- adding reset, removeFrom, removeAllFrom static methods\n- related unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a0411850811e1872aaf81d5c0713fc6d4893e8b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1a0411850811e1872aaf81d5c0713fc6d4893e8b", "committedDate": "2020-07-23T17:50:52Z", "message": "SlackTerminal: multivariant support corrections\n\n- adding setTerminal and isCleanable methods\n- adding reset, removeFrom, removeAllFrom static methods\n- related unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}, "afterCommit": {"oid": "e98cd2281a4fb23b42833c09d82a7192e6f4535b", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/e98cd2281a4fb23b42833c09d82a7192e6f4535b", "committedDate": "2020-07-23T17:58:30Z", "message": "SlackTerminal: multivariant support corrections\n\n- adding setTerminal and isCleanable methods\n- adding reset, removeFrom, removeAllFrom static methods\n- related unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6", "committedDate": "2020-07-24T15:50:57Z", "message": "SlackTerminal: multivariant support corrections\n\n- setTerminal returns current SlackTerminal\n- add setTerminal(terminal, cleanIfCleanable) method\n- correcting reset static method and SlackTerminalImpl constructor\n- related unit tests\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTMxNzg5", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-455531789", "createdAt": "2020-07-27T07:26:55Z", "commit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzoyNjo1NlrOG3WnsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo1Nzo0NVrOG3XlTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY5NTQ3Mw==", "bodyText": "I would write the method like this:\n    default SlackTerminal setTerminal(Terminal terminal, boolean cleanIfCleanable) {\n        boolean cleanable = setTerminal(terminal);\n        if (cleanIfCleanable && cleanable) {\n            getExtendable().removeExtension(SlackTerminal.class);\n        }\n        return this;\n    }", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460695473", "createdAt": "2020-07-27T07:26:56Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/extensions/SlackTerminal.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public interface SlackTerminal extends Extension<VoltageLevel> {\n+\n+    /**\n+     * Remove all SlackTerminal extensions from given network\n+     * @param network the network to remove the slackTerminal extensions from\n+     */\n+    static void removeAllFrom(Network network) {\n+        network.getVoltageLevels().forEach(vl -> vl.removeExtension(SlackTerminal.class));\n+    }\n+\n+    /**\n+     * Reset the slackTerminal extension to the given terminal (may be null)\n+     * @param voltageLevel the voltageLevel to reset the slackTerminal extension from\n+     * @param terminal the terminal to reset the extension to (may be null)\n+     */\n+    static void reset(VoltageLevel voltageLevel, Terminal terminal) {\n+        SlackTerminal st = voltageLevel.getExtension(SlackTerminal.class);\n+        if (st == null) {\n+            voltageLevel.newExtension(SlackTerminalAdder.class)\n+                .withTerminal(terminal)\n+                .add();\n+        } else {\n+            st.setTerminal(terminal, true);\n+        }\n+    }\n+\n+    @Override\n+    default String getName() {\n+        return \"slackTerminal\";\n+    }\n+\n+    /**\n+     * Get the terminal pointed by the current SlackTerminal\n+     * @return the corresponding terminal\n+     */\n+    Terminal getTerminal();\n+\n+    /**\n+     * Set the terminal pointed by the current SlackTerminal\n+     * @param terminal the corresponding terminal\n+     * @return the current SlackTerminal\n+     */\n+    SlackTerminal setTerminal(Terminal terminal);\n+\n+    /**\n+     * Set the terminal pointed by the current SlackTerminal\n+     * @param terminal the corresponding terminal (may be null)\n+     * @param cleanIfCleanable if true and if the slackTerminal is cleanable, removes the SlackTerminal extension from\n+     *                         the corresponding VoltageLevel\n+     * @return the current SlackTerminal\n+     */\n+    default SlackTerminal setTerminal(Terminal terminal, boolean cleanIfCleanable) {\n+        if (cleanIfCleanable) {\n+            if (setTerminal(terminal).isCleanable()) {\n+                getExtendable().removeExtension(SlackTerminal.class);\n+            }\n+        } else {\n+            setTerminal(terminal);\n+        }\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMTE2Mw==", "bodyText": "There is a risk that there is no busbar section (Bus/Breaker VoltageLevel) and no injection neither. For instance, if we consider a star-like network, the star bus is a good slack bus, even there is no injection connected to it.\nI would add the 3 other predicates to be sure you can always attach the extension to a terminal.\nCan you please add a unit test using the Eurostag Tutorial 1, and ensure your are able to set the slack terminal", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460701163", "createdAt": "2020-07-27T07:38:22Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MDkzNA=="}, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNDUzMA==", "bodyText": "I would rename this method getDefault to avoid redundancy between the name of the class, and the name of this method", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460704530", "createdAt": "2020-07-27T07:44:58Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.*;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNDg0MQ==", "bodyText": "I reopen this conversation because it's not fixed", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460704841", "createdAt": "2020-07-27T07:45:34Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);\n+        return new TerminalChooser(rules);\n+    }\n+\n+    public TerminalChooser(List<Predicate<Terminal>> rules) {\n+        this.rules = rules;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5MTM4Mw=="}, "originalCommit": {"oid": "3de39dee657e079913bc921486b9a3e38eefe187"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNTQ0NQ==", "bodyText": "I would rename this class TerminalFinder and the rename the choose method find", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460705445", "createdAt": "2020-07-27T07:46:48Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.*;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNTkyMg==", "bodyText": "Same what?", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460705922", "createdAt": "2020-07-27T07:47:42Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-util/src/main/java/com/powsybl/iidm/network/util/TerminalChooser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.util;\n+\n+import com.powsybl.iidm.network.ConnectableType;\n+import com.powsybl.iidm.network.Injection;\n+import com.powsybl.iidm.network.Terminal;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+/**\n+ * A class which allows to choose a terminal, according to given filters, among several terminals\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+public final class TerminalChooser {\n+\n+    private final List<Predicate<Terminal>> rules;\n+\n+    public static TerminalChooser getDefaultSlackTerminalChooser() {\n+        List<Predicate<Terminal>> rules = new ArrayList<>();\n+        rules.add(t -> t.getConnectable().getType() == ConnectableType.BUSBAR_SECTION);\n+        rules.add(t -> t.getConnectable() instanceof Injection);\n+        return new TerminalChooser(rules);\n+    }\n+\n+    public TerminalChooser(List<Predicate<Terminal>> rules) {\n+        this.rules = rules;\n+    }\n+\n+    /**\n+     * @param terminals the terminals among which a terminal has to be chosen\n+     * @return the first terminal satisfying a rule (rules are checked in ascending order)\n+     */\n+    public Terminal choose(Iterable<? extends Terminal> terminals) {\n+        for (Predicate<Terminal> predicate : rules) {\n+            Optional<? extends Terminal> terminal = StreamSupport.stream(terminals.spliterator(), false)\n+                .filter(predicate)\n+                .findFirst();\n+            if (terminal.isPresent()) {\n+                return terminal.get();\n+            }\n+        }\n+        Iterator<? extends Terminal> it = terminals.iterator();\n+        return it.hasNext() ? it.next() : null;\n+    }\n+\n+    /**\n+     * @param terminals the terminals among which a terminal has to be chosen\n+     * @return the first terminal satisfying a rule (rules are checked in ascending order)\n+     */\n+    public Terminal choose(Stream<? extends Terminal> terminals) {\n+        return choose(terminals.collect(Collectors.toList()));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNTI1NA=="}, "originalCommit": {"oid": "561f812fc39b92d54fc76f526a0986ac8781df0b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxMDQ4OQ==", "bodyText": "I would check if the terminal is not null. I would also override the hasSubElements: this method should return true if the terminal is set, false otherwise", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460710489", "createdAt": "2020-07-27T07:56:19Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/SlackTerminalXmlSerializer.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.xml.extensions;\n+\n+import com.google.auto.service.AutoService;\n+import com.powsybl.commons.extensions.AbstractExtensionXmlSerializer;\n+import com.powsybl.commons.extensions.ExtensionXmlSerializer;\n+import com.powsybl.commons.xml.XmlReaderContext;\n+import com.powsybl.commons.xml.XmlUtil;\n+import com.powsybl.commons.xml.XmlWriterContext;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.extensions.SlackTerminalAdder;\n+import com.powsybl.iidm.xml.NetworkXmlReaderContext;\n+import com.powsybl.iidm.xml.NetworkXmlWriterContext;\n+import com.powsybl.iidm.xml.TerminalRefXml;\n+\n+import javax.xml.stream.XMLStreamException;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+@AutoService(ExtensionXmlSerializer.class)\n+public class SlackTerminalXmlSerializer extends AbstractExtensionXmlSerializer<VoltageLevel, SlackTerminal> {\n+\n+    private static final String ELEM_TERMINAL_REF = \"terminalRef\";\n+\n+    public SlackTerminalXmlSerializer() {\n+        super(\"slackTerminal\", \"network\", SlackTerminal.class, true, \"slackTerminal.xsd\",\n+            \"http://www.powsybl.org/schema/iidm/ext/slack_terminal/1_0\", \"slt\");\n+    }\n+\n+    @Override\n+    public void write(SlackTerminal slackTerminal, XmlWriterContext context) throws XMLStreamException {\n+        TerminalRefXml.writeTerminalRef(slackTerminal.getTerminal(), (NetworkXmlWriterContext) context, getNamespaceUri(), ELEM_TERMINAL_REF);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxMDg0MQ==", "bodyText": "I think if you change a little bit the export, the terminalRef is required, so you can remove this test", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460710841", "createdAt": "2020-07-27T07:56:59Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/SlackTerminalXmlSerializer.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.xml.extensions;\n+\n+import com.google.auto.service.AutoService;\n+import com.powsybl.commons.extensions.AbstractExtensionXmlSerializer;\n+import com.powsybl.commons.extensions.ExtensionXmlSerializer;\n+import com.powsybl.commons.xml.XmlReaderContext;\n+import com.powsybl.commons.xml.XmlUtil;\n+import com.powsybl.commons.xml.XmlWriterContext;\n+import com.powsybl.iidm.network.Terminal;\n+import com.powsybl.iidm.network.VoltageLevel;\n+import com.powsybl.iidm.network.extensions.SlackTerminal;\n+import com.powsybl.iidm.network.extensions.SlackTerminalAdder;\n+import com.powsybl.iidm.xml.NetworkXmlReaderContext;\n+import com.powsybl.iidm.xml.NetworkXmlWriterContext;\n+import com.powsybl.iidm.xml.TerminalRefXml;\n+\n+import javax.xml.stream.XMLStreamException;\n+\n+/**\n+ * @author Florian Dupuy <florian.dupuy at rte-france.com>\n+ */\n+@AutoService(ExtensionXmlSerializer.class)\n+public class SlackTerminalXmlSerializer extends AbstractExtensionXmlSerializer<VoltageLevel, SlackTerminal> {\n+\n+    private static final String ELEM_TERMINAL_REF = \"terminalRef\";\n+\n+    public SlackTerminalXmlSerializer() {\n+        super(\"slackTerminal\", \"network\", SlackTerminal.class, true, \"slackTerminal.xsd\",\n+            \"http://www.powsybl.org/schema/iidm/ext/slack_terminal/1_0\", \"slt\");\n+    }\n+\n+    @Override\n+    public void write(SlackTerminal slackTerminal, XmlWriterContext context) throws XMLStreamException {\n+        TerminalRefXml.writeTerminalRef(slackTerminal.getTerminal(), (NetworkXmlWriterContext) context, getNamespaceUri(), ELEM_TERMINAL_REF);\n+    }\n+\n+    @Override\n+    public SlackTerminal read(VoltageLevel voltageLevel, XmlReaderContext context) throws XMLStreamException {\n+        NetworkXmlReaderContext networkContext = (NetworkXmlReaderContext) context;\n+        XmlUtil.readUntilEndElement(getExtensionName(), networkContext.getReader(), () -> {\n+            if (networkContext.getReader().getLocalName().equals(ELEM_TERMINAL_REF)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxMTI0NQ==", "bodyText": "Set the min/max occurs: this element is required\nWe could also add attributes directly to the slackTerminal object, to make the XML more compact", "url": "https://github.com/powsybl/powsybl-core/pull/1381#discussion_r460711245", "createdAt": "2020-07-27T07:57:45Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/resources/xsd/slackTerminal.xsd", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<xs:schema version=\"1.0\"\n+           xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n+           xmlns:iidm=\"http://www.powsybl.org/schema/iidm/1_3\"\n+           targetNamespace=\"http://www.powsybl.org/schema/iidm/ext/slack_terminal/1_0\"\n+           elementFormDefault=\"qualified\">\n+    <xs:import namespace=\"http://www.powsybl.org/schema/iidm/1_3\" schemaLocation=\"iidm_V1_3.xsd\"/>\n+    <xs:element name=\"slackTerminal\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"terminalRef\" type=\"iidm:TerminalRef\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b376562e4351c2e2c8fcd5bc32bc4cf90ceaed6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b7efd49eee71174bbe66bfe060fc0f2cee40af", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/91b7efd49eee71174bbe66bfe060fc0f2cee40af", "committedDate": "2020-07-27T10:10:17Z", "message": "TerminalChooser -> TerminalFinder; corrections\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c311fb133dbeb0ee124cf9ef81c86de7011c315", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7c311fb133dbeb0ee124cf9ef81c86de7011c315", "committedDate": "2020-07-27T10:42:30Z", "message": "SlackTerminal serialisation corrections\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "755b06d7f33f821da9c45d6e2fd65574bbdc49d3", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/755b06d7f33f821da9c45d6e2fd65574bbdc49d3", "committedDate": "2020-07-27T10:47:01Z", "message": "Default SlackTerminal.setTerminal method cleaned\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62cb6c581c1f2e719e97f88035849e4023cf3eec", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/62cb6c581c1f2e719e97f88035849e4023cf3eec", "committedDate": "2020-07-27T10:50:43Z", "message": "Checkstyle correction\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35b6650d4a9cc1f599af12068604665827e7d7d6", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/35b6650d4a9cc1f599af12068604665827e7d7d6", "committedDate": "2020-07-27T12:06:11Z", "message": "Code smell correction\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85c389e0fa215a743f4e6bc537e37de15bd7e02d", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/85c389e0fa215a743f4e6bc537e37de15bd7e02d", "committedDate": "2020-07-27T14:38:49Z", "message": "TerminalFinder with max\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c4041ce7aabd7380490ffc74a76bb5c273c5e9", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d9c4041ce7aabd7380490ffc74a76bb5c273c5e9", "committedDate": "2020-07-27T15:27:01Z", "message": "Attach a SlackTerminal extension to slack buses\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34a8fa3d820723f7014bcf96b6c1e1917487fe1f", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/34a8fa3d820723f7014bcf96b6c1e1917487fe1f", "committedDate": "2020-07-27T15:43:17Z", "message": "Fix 2 sonar issues\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1OTI0MjI1", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-455924225", "createdAt": "2020-07-27T16:04:54Z", "commit": {"oid": "d9c4041ce7aabd7380490ffc74a76bb5c273c5e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94d4571d1e2962d3993dd2044d09b3f09e3353d4", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/94d4571d1e2962d3993dd2044d09b3f09e3353d4", "committedDate": "2020-07-27T16:05:11Z", "message": "Last fixes\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83e8b5a43409526222a1a3bb77812d66140b83a", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/b83e8b5a43409526222a1a3bb77812d66140b83a", "committedDate": "2020-07-27T16:18:24Z", "message": "Fix compilation issue\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1faa50ae621d3c1e5979fd7c8ccac9469876b248", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1faa50ae621d3c1e5979fd7c8ccac9469876b248", "committedDate": "2020-07-27T16:50:34Z", "message": "TerminalFinder unit tests do not test SlackTerminal extension\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3484a094d82157f67b3b041e6b1e79daeaf84b5d", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3484a094d82157f67b3b041e6b1e79daeaf84b5d", "committedDate": "2020-07-27T16:52:05Z", "message": "SlackTerminal unit tests correction\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d2825168fe975f7a99bbf35c87c1ebe5a3fd518", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7d2825168fe975f7a99bbf35c87c1ebe5a3fd518", "committedDate": "2020-07-27T17:34:00Z", "message": "Adding protection to avoid setting a terminal on the wrong VoltageLevel\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d1badcb0aea0b40936b3832746aa039a2d671d4", "author": {"user": {"login": "flo-dup", "name": "Florian Dupuy"}}, "url": "https://github.com/powsybl/powsybl-core/commit/5d1badcb0aea0b40936b3832746aa039a2d671d4", "committedDate": "2020-07-28T07:47:36Z", "message": "TerminalFinder: adding javadoc and comments\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab840f3e7a204c6941e84577820c29852242ac62", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ab840f3e7a204c6941e84577820c29852242ac62", "committedDate": "2020-07-28T09:17:27Z", "message": "Add a unit-test in UCTE converter\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NjkyOTcw", "url": "https://github.com/powsybl/powsybl-core/pull/1381#pullrequestreview-456692970", "createdAt": "2020-07-28T14:29:47Z", "commit": {"oid": "ab840f3e7a204c6941e84577820c29852242ac62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a6b7f3dc4b3414d4b1bb82b6b7e8a38c19d3426", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3a6b7f3dc4b3414d4b1bb82b6b7e8a38c19d3426", "committedDate": "2020-07-28T14:29:55Z", "message": "Merge branch 'master' into slackbus"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4108, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}