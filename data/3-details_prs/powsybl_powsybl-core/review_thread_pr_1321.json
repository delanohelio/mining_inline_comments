{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDM0Mzg0", "number": 1321, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1NTowN1rOEABJEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMjoxMVrOEAY7jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDU0MTYzOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1NTowN1rOGbCC0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDo1Nzo0NFrOGbEFqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5ODIyNg==", "bodyText": "Fix the author (same remark for all the files)", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r430998226", "createdAt": "2020-05-27T09:55:07Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControl.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzMTcyMg==", "bodyText": "Indeed it is from @geofjamg I just have moved some code.", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431031722", "createdAt": "2020-05-27T10:57:44Z", "author": {"login": "annetill"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControl.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5ODIyNg=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDU0ODg5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1NzowOFrOGbCHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowMzo0MlrOGb5lsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw==", "bodyText": "There is something strange in the design: it's not related to your PR, but why the adder take one Extendable instance and the createExtension could take another one?\n@MioRtia : what do you think?", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r430999433", "createdAt": "2020-05-27T09:57:08Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcwMzk3Mg==", "bodyText": "Hm, good question. In the code, createExtension is only called with the extendable field (from the constructor) as parameter. Maybe the method should not take any parameter and extendable should be protected? (@jonenst do you remember why you designed it this way?)", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431703972", "createdAt": "2020-05-28T09:29:58Z", "author": {"login": "miovd"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyOTExNA==", "bodyText": "I did it this way because it was more explicit for an implementer of an adder to take the extendable as a method argument from the method he is supposed to implement. The alternative (that you mentionned) is to have the extendable in a protected field of the base class and document that it should be used in the createExtension method", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431729114", "createdAt": "2020-05-28T10:14:31Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyOTgyOQ==", "bodyText": "I'm ok with both implementations if you want to change it", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431729829", "createdAt": "2020-05-28T10:15:47Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczMTE2NQ==", "bodyText": "I guess it's not so implicit with a protected field because you have to write the constructor calling super() with the extendable so you are hinted about it", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431731165", "createdAt": "2020-05-28T10:18:31Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMDI3OA==", "bodyText": "Ok, thank you for the explanation! Both are okay for me, what do you think @mathbagu ? In any case, I think this PR is good to be merged, we can make another PR on this subject later.", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431800278", "createdAt": "2020-05-28T12:34:10Z", "author": {"login": "miovd"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODI3NA==", "bodyText": "The only thing I want we ensure, is that should be forbidden to pass a different instance. I think it could be the case with the abstract class we provide. It's not directly related to this PR, so I will merge it but the discussion is still open", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431908274", "createdAt": "2020-05-28T15:03:42Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlAdderImpl\n+        extends AbstractExtensionAdder<StaticVarCompensator, VoltagePerReactivePowerControl>\n+        implements VoltagePerReactivePowerControlAdder {\n+\n+    private double slope;\n+\n+    protected VoltagePerReactivePowerControlAdderImpl(StaticVarCompensator svc) {\n+        super(svc);\n+    }\n+\n+    @Override\n+    protected VoltagePerReactivePowerControlImpl createExtension(StaticVarCompensator svc) {\n+        return new VoltagePerReactivePowerControlImpl(svc, slope);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTQzMw=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDU1MjI4OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1ODowMlrOGbCJrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMToyNDoxMFrOGbE4xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTk4Mg==", "bodyText": "Is there any restriction for this value? Do we have to implement a checkSlope method to ensure this value is in range, and use it in the constructor and the setter?", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r430999982", "createdAt": "2020-05-27T09:58:02Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlImpl extends AbstractExtension<StaticVarCompensator> implements VoltagePerReactivePowerControl {\n+\n+    private double slope;\n+\n+    public VoltagePerReactivePowerControlImpl(StaticVarCompensator svc, double slope) {\n+        super(svc);\n+        this.slope = slope;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA0NDgwNw==", "bodyText": "Yes Indeed it should be positive in the load sign convention.", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431044807", "createdAt": "2020-05-27T11:24:10Z", "author": {"login": "annetill"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlImpl extends AbstractExtension<StaticVarCompensator> implements VoltagePerReactivePowerControl {\n+\n+    private double slope;\n+\n+    public VoltagePerReactivePowerControlImpl(StaticVarCompensator svc, double slope) {\n+        super(svc);\n+        this.slope = slope;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5OTk4Mg=="}, "originalCommit": {"oid": "74c518f03049dfcae644410a31a9d708af53e88b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTA4MTUzOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo0MjoxM1rOGbHbow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoyODo1N1rOGbTJDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NjQ5OQ==", "bodyText": "@mathbagu Help, it is not working and I think it is just because I am not familiar with xml conversion. Thanks !", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431086499", "createdAt": "2020-05-27T12:42:13Z", "author": {"login": "annetill"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.AbstractConverterTest;\n+import com.powsybl.iidm.export.Exporters;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import com.powsybl.iidm.network.test.SvcTestCaseFactory;\n+import com.powsybl.iidm.xml.NetworkXml;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlXmlSerializerTest extends AbstractConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        Network network = SvcTestCaseFactory.create();\n+        network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n+        StaticVarCompensator svc = network.getStaticVarCompensator(\"SVC2\");\n+        assertNotNull(svc);\n+\n+        svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(0.5).add();\n+\n+        // FIXME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6820e2ff635f03d25bdfb02b7cd7663bc565d45"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NzA1MA==", "bodyText": "The error I get is:\ncom.powsybl.commons.exceptions.UncheckedSaxException: org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 60; cvc-complex-type.2.4.c : Le caract\u00e8re g\u00e9n\u00e9rique concordant est strict, mais aucune d\u00e9claration ne peut \u00eatre trouv\u00e9e pour l'\u00e9l\u00e9ment 'vprpc:voltagePerReactivePowerControl'.", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431087050", "createdAt": "2020-05-27T12:43:02Z", "author": {"login": "annetill"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.AbstractConverterTest;\n+import com.powsybl.iidm.export.Exporters;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import com.powsybl.iidm.network.test.SvcTestCaseFactory;\n+import com.powsybl.iidm.xml.NetworkXml;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlXmlSerializerTest extends AbstractConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        Network network = SvcTestCaseFactory.create();\n+        network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n+        StaticVarCompensator svc = network.getStaticVarCompensator(\"SVC2\");\n+        assertNotNull(svc);\n+\n+        svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(0.5).add();\n+\n+        // FIXME", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NjQ5OQ=="}, "originalCommit": {"oid": "b6820e2ff635f03d25bdfb02b7cd7663bc565d45"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1Mjk2NA==", "bodyText": "The problem was that namespace was different in xsd and in the XML serializer class.\nI removed the FIXME annotation.\nI also fixed the expected value in the final assert (should be 0.5, that is the value used when creating the extension).", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431252964", "createdAt": "2020-05-27T15:55:38Z", "author": {"login": "zamarrenolm"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.AbstractConverterTest;\n+import com.powsybl.iidm.export.Exporters;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import com.powsybl.iidm.network.test.SvcTestCaseFactory;\n+import com.powsybl.iidm.xml.NetworkXml;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlXmlSerializerTest extends AbstractConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        Network network = SvcTestCaseFactory.create();\n+        network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n+        StaticVarCompensator svc = network.getStaticVarCompensator(\"SVC2\");\n+        assertNotNull(svc);\n+\n+        svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(0.5).add();\n+\n+        // FIXME", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NjQ5OQ=="}, "originalCommit": {"oid": "b6820e2ff635f03d25bdfb02b7cd7663bc565d45"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MjUwMA==", "bodyText": "Thanks a lot @zamarrenolm ! Have you check the cgmes conversion by the way ?", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431262500", "createdAt": "2020-05-27T16:05:34Z", "author": {"login": "annetill"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.AbstractConverterTest;\n+import com.powsybl.iidm.export.Exporters;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import com.powsybl.iidm.network.test.SvcTestCaseFactory;\n+import com.powsybl.iidm.xml.NetworkXml;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlXmlSerializerTest extends AbstractConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        Network network = SvcTestCaseFactory.create();\n+        network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n+        StaticVarCompensator svc = network.getStaticVarCompensator(\"SVC2\");\n+        assertNotNull(svc);\n+\n+        svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(0.5).add();\n+\n+        // FIXME", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NjQ5OQ=="}, "originalCommit": {"oid": "b6820e2ff635f03d25bdfb02b7cd7663bc565d45"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3ODM1MQ==", "bodyText": "Yes, I saw that you are storing in the extension the slope attribute read in the staticVarCompensators SPARQL query, so for me it is ok.", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431278351", "createdAt": "2020-05-27T16:28:57Z", "author": {"login": "zamarrenolm"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlXmlSerializerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.AbstractConverterTest;\n+import com.powsybl.iidm.export.Exporters;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import com.powsybl.iidm.network.test.SvcTestCaseFactory;\n+import com.powsybl.iidm.xml.NetworkXml;\n+import org.joda.time.DateTime;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlXmlSerializerTest extends AbstractConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        Network network = SvcTestCaseFactory.create();\n+        network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n+        StaticVarCompensator svc = network.getStaticVarCompensator(\"SVC2\");\n+        assertNotNull(svc);\n+\n+        svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(0.5).add();\n+\n+        // FIXME", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NjQ5OQ=="}, "originalCommit": {"oid": "b6820e2ff635f03d25bdfb02b7cd7663bc565d45"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODQzNDkyOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMDo1MlrOGboq0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMDo1MlrOGboq0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMTA1Ng==", "bodyText": "There is a diffference in this check and in the check done in StaticVarCompensatorConversion.java\n        if (slope > 0) {\n            svc.newExtension(VoltagePerReactivePowerControlAdder.class).withSlope(slope);\n        }\n\nDoes 0 a valid value?", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431631056", "createdAt": "2020-05-28T07:20:52Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlImpl extends AbstractExtension<StaticVarCompensator> implements VoltagePerReactivePowerControl {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(VoltagePerReactivePowerControlImpl.class);\n+\n+    private double slope;\n+\n+    public VoltagePerReactivePowerControlImpl(StaticVarCompensator svc, double slope) {\n+        super(svc);\n+        this.slope = checkSlope(svc, slope);\n+    }\n+\n+    @Override\n+    public double getSlope() {\n+        return slope;\n+    }\n+\n+    public VoltagePerReactivePowerControl setSlope(double slope) {\n+        this.slope = slope;\n+        return this;\n+    }\n+\n+    private static double checkSlope(StaticVarCompensator svc, double slope) {\n+        if (Double.isNaN(slope)) {\n+            throw new PowsyblException(\"Undefined value for slope\");\n+        }\n+        if (slope < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4754b3710ced0f4664c00af89bc3aed6e4b7f1e0"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODQzOTE5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMjoxMVrOGbotfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMjoxMVrOGbotfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMTc0Mg==", "bodyText": "Is it OK or should we throw an exception? If we accept negative value, it will never be possible to change that. It's better to throw an exception, and then make the code more permissive.\nMoreover, in CGMES conversion, we do not create the extension if the slope is negative (or equal to 0)", "url": "https://github.com/powsybl/powsybl-core/pull/1321#discussion_r431631742", "createdAt": "2020-05-28T07:22:11Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/VoltagePerReactivePowerControlImpl.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.StaticVarCompensator;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ * @author Anne Tilloy <anne.tilloy at rte-france.com>\n+ */\n+public class VoltagePerReactivePowerControlImpl extends AbstractExtension<StaticVarCompensator> implements VoltagePerReactivePowerControl {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(VoltagePerReactivePowerControlImpl.class);\n+\n+    private double slope;\n+\n+    public VoltagePerReactivePowerControlImpl(StaticVarCompensator svc, double slope) {\n+        super(svc);\n+        this.slope = checkSlope(svc, slope);\n+    }\n+\n+    @Override\n+    public double getSlope() {\n+        return slope;\n+    }\n+\n+    public VoltagePerReactivePowerControl setSlope(double slope) {\n+        this.slope = slope;\n+        return this;\n+    }\n+\n+    private static double checkSlope(StaticVarCompensator svc, double slope) {\n+        if (Double.isNaN(slope)) {\n+            throw new PowsyblException(\"Undefined value for slope\");\n+        }\n+        if (slope < 0) {\n+            LOGGER.debug(\"Slope value of svc {} should be positive: {}\", svc.getId(), slope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4754b3710ced0f4664c00af89bc3aed6e4b7f1e0"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 113, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}