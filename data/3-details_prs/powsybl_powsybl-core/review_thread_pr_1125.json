{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTI1MTAw", "number": 1125, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxMzo0NVrODcpTnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxOTozN1rODcpbTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzYzNDg1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-tck/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxMzo0NVrOFkys9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDozMzo0NlrOFkzYVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyMzc2NQ==", "bodyText": "Is it necessary to specify this scope? it's the default value, isn't it?", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374123765", "createdAt": "2020-02-03T14:13:45Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2017, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.powsybl</groupId>\n+        <artifactId>powsybl-iidm</artifactId>\n+        <version>3.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>powsybl-iidm-tck</artifactId>\n+    <name>IIDM TCK</name>\n+    <description>The IIDM Technology Compatibility Kit</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-api</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <!-- Test dependencies -->\n+        <dependency>\n+            <groupId>com.google.jimfs</groupId>\n+            <artifactId>jimfs</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>log4j-over-slf4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-commons</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-config-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNDg3MA==", "bodyText": "It's necessary because junit is declared with scope test in the pom of powsybl-core.\nNote: I'm not sure it's correct. It seems to work though.", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374134870", "createdAt": "2020-02-03T14:33:46Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-tck/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2017, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.powsybl</groupId>\n+        <artifactId>powsybl-iidm</artifactId>\n+        <version>3.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>powsybl-iidm-tck</artifactId>\n+    <name>IIDM TCK</name>\n+    <description>The IIDM Technology Compatibility Kit</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-api</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <!-- Test dependencies -->\n+        <dependency>\n+            <groupId>com.google.jimfs</groupId>\n+            <artifactId>jimfs</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>log4j-over-slf4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-commons</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-config-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyMzc2NQ=="}, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzYzNTM0OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-tck/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxMzo1NFrOFkytTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxMzo1NFrOFkytTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyMzg1Mw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374123853", "createdAt": "2020-02-03T14:13:54Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2017, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.powsybl</groupId>\n+        <artifactId>powsybl-iidm</artifactId>\n+        <version>3.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>powsybl-iidm-tck</artifactId>\n+    <name>IIDM TCK</name>\n+    <description>The IIDM Technology Compatibility Kit</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-api</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <!-- Test dependencies -->\n+        <dependency>\n+            <groupId>com.google.jimfs</groupId>\n+            <artifactId>jimfs</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>log4j-over-slf4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-commons</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-config-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzYzNjkzOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-tck/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxNDoyM1rOFkyuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzozMzo0MlrOFnEsaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNDEyMA==", "bodyText": "Is the default scope OK there?", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374124120", "createdAt": "2020-02-03T14:14:23Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2017, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.powsybl</groupId>\n+        <artifactId>powsybl-iidm</artifactId>\n+        <version>3.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>powsybl-iidm-tck</artifactId>\n+    <name>IIDM TCK</name>\n+    <description>The IIDM Technology Compatibility Kit</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-api</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <!-- Test dependencies -->\n+        <dependency>\n+            <groupId>com.google.jimfs</groupId>\n+            <artifactId>jimfs</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>log4j-over-slf4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-commons</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-config-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-simple</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxNTY4OQ==", "bodyText": "good catch, it was actually unneeded", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r376515689", "createdAt": "2020-02-07T17:33:42Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-tck/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2017, RTE (http://www.rte-france.com)\n+    This Source Code Form is subject to the terms of the Mozilla Public\n+    License, v. 2.0. If a copy of the MPL was not distributed with this\n+    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>com.powsybl</groupId>\n+        <artifactId>powsybl-iidm</artifactId>\n+        <version>3.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>powsybl-iidm-tck</artifactId>\n+    <name>IIDM TCK</name>\n+    <description>The IIDM Technology Compatibility Kit</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-api</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <!-- Test dependencies -->\n+        <dependency>\n+            <groupId>com.google.jimfs</groupId>\n+            <artifactId>jimfs</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>log4j-over-slf4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-commons</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-config-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>powsybl-iidm-test</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-simple</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNDEyMA=="}, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzY0OTc3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractNodeBreakerInternalConnectionsTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxODoxN1rOFky2Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1Njo0NVrOFk0Mxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNjE0Mg==", "bodyText": "i < 6?", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374126142", "createdAt": "2020-02-03T14:18:17Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractNodeBreakerInternalConnectionsTest.java", "diffHunk": "@@ -13,29 +13,25 @@\n import static com.powsybl.iidm.network.VoltageLevel.NodeBreakerView.InternalConnection;\n import static org.junit.Assert.assertEquals;\n \n-public class NodeBreakerInternalConnectionsTest {\n+public abstract class AbstractNodeBreakerInternalConnectionsTest {\n+\n+    private static final String S5_10K_V = \"S5 10kV\";\n \n     @Test\n     public void testTraversalInternalConnections() {\n         Network network = Network.create(\"testTraversalInternalConnections\", \"test\");\n         InternalConnections all = new InternalConnections();\n         createNetwork(network, all);\n-        VoltageLevel vl = network.getVoltageLevel(\"S5 10kV\");\n+        VoltageLevel vl = network.getVoltageLevel(S5_10K_V);\n \n         assertEquals(6, vl.getNodeBreakerView().getInternalConnectionCount());\n         List<InternalConnection> internalConnections = vl.getNodeBreakerView().getInternalConnectionStream().collect(Collectors.toList());\n-        assertEquals(7, internalConnections.get(0).getNode1());\n-        assertEquals(0, internalConnections.get(0).getNode2());\n-        assertEquals(6, internalConnections.get(1).getNode1());\n-        assertEquals(3, internalConnections.get(1).getNode2());\n-        assertEquals(4, internalConnections.get(2).getNode1());\n-        assertEquals(3, internalConnections.get(2).getNode2());\n-        assertEquals(5, internalConnections.get(3).getNode1());\n-        assertEquals(2, internalConnections.get(3).getNode2());\n-        assertEquals(9, internalConnections.get(4).getNode1());\n-        assertEquals(2, internalConnections.get(4).getNode2());\n-        assertEquals(8, internalConnections.get(5).getNode1());\n-        assertEquals(1, internalConnections.get(5).getNode2());\n+        int[] expecteds1 = new int[] {7, 6, 4, 5, 9, 8 };\n+        int[] expecteds2 = new int[] {0, 3, 3, 2, 2, 1 };\n+        for (int i = 0; i < 5; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMjk2MA==", "bodyText": "good catch, i < expecteds1.length ?", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374132960", "createdAt": "2020-02-03T14:30:18Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractNodeBreakerInternalConnectionsTest.java", "diffHunk": "@@ -13,29 +13,25 @@\n import static com.powsybl.iidm.network.VoltageLevel.NodeBreakerView.InternalConnection;\n import static org.junit.Assert.assertEquals;\n \n-public class NodeBreakerInternalConnectionsTest {\n+public abstract class AbstractNodeBreakerInternalConnectionsTest {\n+\n+    private static final String S5_10K_V = \"S5 10kV\";\n \n     @Test\n     public void testTraversalInternalConnections() {\n         Network network = Network.create(\"testTraversalInternalConnections\", \"test\");\n         InternalConnections all = new InternalConnections();\n         createNetwork(network, all);\n-        VoltageLevel vl = network.getVoltageLevel(\"S5 10kV\");\n+        VoltageLevel vl = network.getVoltageLevel(S5_10K_V);\n \n         assertEquals(6, vl.getNodeBreakerView().getInternalConnectionCount());\n         List<InternalConnection> internalConnections = vl.getNodeBreakerView().getInternalConnectionStream().collect(Collectors.toList());\n-        assertEquals(7, internalConnections.get(0).getNode1());\n-        assertEquals(0, internalConnections.get(0).getNode2());\n-        assertEquals(6, internalConnections.get(1).getNode1());\n-        assertEquals(3, internalConnections.get(1).getNode2());\n-        assertEquals(4, internalConnections.get(2).getNode1());\n-        assertEquals(3, internalConnections.get(2).getNode2());\n-        assertEquals(5, internalConnections.get(3).getNode1());\n-        assertEquals(2, internalConnections.get(3).getNode2());\n-        assertEquals(9, internalConnections.get(4).getNode1());\n-        assertEquals(2, internalConnections.get(4).getNode2());\n-        assertEquals(8, internalConnections.get(5).getNode1());\n-        assertEquals(1, internalConnections.get(5).getNode2());\n+        int[] expecteds1 = new int[] {7, 6, 4, 5, 9, 8 };\n+        int[] expecteds2 = new int[] {0, 3, 3, 2, 2, 1 };\n+        for (int i = 0; i < 5; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNjE0Mg=="}, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0ODI5NA==", "bodyText": "why not", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374148294", "createdAt": "2020-02-03T14:56:45Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractNodeBreakerInternalConnectionsTest.java", "diffHunk": "@@ -13,29 +13,25 @@\n import static com.powsybl.iidm.network.VoltageLevel.NodeBreakerView.InternalConnection;\n import static org.junit.Assert.assertEquals;\n \n-public class NodeBreakerInternalConnectionsTest {\n+public abstract class AbstractNodeBreakerInternalConnectionsTest {\n+\n+    private static final String S5_10K_V = \"S5 10kV\";\n \n     @Test\n     public void testTraversalInternalConnections() {\n         Network network = Network.create(\"testTraversalInternalConnections\", \"test\");\n         InternalConnections all = new InternalConnections();\n         createNetwork(network, all);\n-        VoltageLevel vl = network.getVoltageLevel(\"S5 10kV\");\n+        VoltageLevel vl = network.getVoltageLevel(S5_10K_V);\n \n         assertEquals(6, vl.getNodeBreakerView().getInternalConnectionCount());\n         List<InternalConnection> internalConnections = vl.getNodeBreakerView().getInternalConnectionStream().collect(Collectors.toList());\n-        assertEquals(7, internalConnections.get(0).getNode1());\n-        assertEquals(0, internalConnections.get(0).getNode2());\n-        assertEquals(6, internalConnections.get(1).getNode1());\n-        assertEquals(3, internalConnections.get(1).getNode2());\n-        assertEquals(4, internalConnections.get(2).getNode1());\n-        assertEquals(3, internalConnections.get(2).getNode2());\n-        assertEquals(5, internalConnections.get(3).getNode1());\n-        assertEquals(2, internalConnections.get(3).getNode2());\n-        assertEquals(9, internalConnections.get(4).getNode1());\n-        assertEquals(2, internalConnections.get(4).getNode2());\n-        assertEquals(8, internalConnections.get(5).getNode1());\n-        assertEquals(1, internalConnections.get(5).getNode2());\n+        int[] expecteds1 = new int[] {7, 6, 4, 5, 9, 8 };\n+        int[] expecteds2 = new int[] {0, 3, 3, 2, 2, 1 };\n+        for (int i = 0; i < 5; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNjE0Mg=="}, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzY1NDU1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractTapChangerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoxOTozN1rOFky5Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDozMjoxM1rOFkzU3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNjg2Nw==", "bodyText": "Could you certify this is equivalent?", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374126867", "createdAt": "2020-02-03T14:19:37Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractTapChangerTest.java", "diffHunk": "@@ -220,18 +222,7 @@ public void testTapChangerSetterGetterInMultiVariants() {\n \n         variantManager.setWorkingVariant(\"s4\");\n         // check values cloned by extend\n-        assertEquals(1, phaseTapChanger.getTapPosition());\n-        assertFalse(phaseTapChanger.isRegulating());\n-        assertEquals(1.0, phaseTapChanger.getRegulationValue(), 0.0);\n-        assertEquals(1, ratioTapChanger.getTapPosition());\n-        assertTrue(ratioTapChanger.isRegulating());\n-        assertEquals(10.0, ratioTapChanger.getTargetV(), 0.0);\n-        assertEquals(1, ratioTapChangerInLeg2.getTapPosition());\n-        assertTrue(ratioTapChangerInLeg2.isRegulating());\n-        assertEquals(10.0, ratioTapChangerInLeg2.getTargetV(), 0.0);\n-        assertEquals(3, ratioTapChangerInLeg3.getTapPosition());\n-        assertFalse(ratioTapChangerInLeg3.isRegulating());\n-        assertEquals(11.0, ratioTapChangerInLeg3.getTargetV(), 0.0);\n+        assertKnownState(phaseTapChanger, ratioTapChanger, ratioTapChangerInLeg2, ratioTapChangerInLeg3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMzk4Mw==", "bodyText": "If I did this correctly, it is equivalent (asserKnownState is juste a newly extracted method to avoid code duplication detected by sonar).", "url": "https://github.com/powsybl/powsybl-core/pull/1125#discussion_r374133983", "createdAt": "2020-02-03T14:32:13Z", "author": {"login": "jonenst"}, "path": "iidm/iidm-tck/src/main/java/com/powsybl/iidm/network/tck/AbstractTapChangerTest.java", "diffHunk": "@@ -220,18 +222,7 @@ public void testTapChangerSetterGetterInMultiVariants() {\n \n         variantManager.setWorkingVariant(\"s4\");\n         // check values cloned by extend\n-        assertEquals(1, phaseTapChanger.getTapPosition());\n-        assertFalse(phaseTapChanger.isRegulating());\n-        assertEquals(1.0, phaseTapChanger.getRegulationValue(), 0.0);\n-        assertEquals(1, ratioTapChanger.getTapPosition());\n-        assertTrue(ratioTapChanger.isRegulating());\n-        assertEquals(10.0, ratioTapChanger.getTargetV(), 0.0);\n-        assertEquals(1, ratioTapChangerInLeg2.getTapPosition());\n-        assertTrue(ratioTapChangerInLeg2.isRegulating());\n-        assertEquals(10.0, ratioTapChangerInLeg2.getTargetV(), 0.0);\n-        assertEquals(3, ratioTapChangerInLeg3.getTapPosition());\n-        assertFalse(ratioTapChangerInLeg3.isRegulating());\n-        assertEquals(11.0, ratioTapChangerInLeg3.getTargetV(), 0.0);\n+        assertKnownState(phaseTapChanger, ratioTapChanger, ratioTapChangerInLeg2, ratioTapChangerInLeg3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNjg2Nw=="}, "originalCommit": {"oid": "eafd31046f97b10ec6d6f08991c935b2576acbda"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 34, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}