{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Njc3NTU1", "number": 1138, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozNjo1OFrODhCa_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDowNToxMFrODio3lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTY5Mjc3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozNjo1OFrOFrk6Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NjozOVrOFtl43A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ==", "bodyText": "I don't understand how these two methods will be used. Could you explain it to me?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r381237831", "createdAt": "2020-02-19T11:36:58Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI1ODI3Mg==", "bodyText": "addExtensionVersion  is to add a particular extension's version in which you want the extension to be serialized e.g. if you want to serialize  CoordinatedReactiveControl in its 1.0 version, you can use options.addExtensionVersion(\"coordinatedReactiveControl\", \"1.0\");. It is different from the IIDM-XML version which is by default 1.1.\ngetExtensionVersion is to get the extension's version in which you want the extension to be serialized if it has been defined (return an empty Optional if it has not been defined).", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r381258272", "createdAt": "2020-02-19T12:24:48Z", "author": {"login": "miovd"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, "originalCommit": {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0NjA2MQ==", "bodyText": "Then if for some reason someone calls addExtensionVersion twice with two different versions for the same extension, that extension will be serialized twice, one for each version?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383146061", "createdAt": "2020-02-24T09:11:38Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, "originalCommit": {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MzY3Nw==", "bodyText": "Good observation, I didn't think about this case! With the current implementation, the last call to the method is kept... Maybe an exception should be thrown or at least a warning should be written? This case should not happen (the version of an extension is unique for each file/export).", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383343677", "createdAt": "2020-02-24T15:45:33Z", "author": {"login": "miovd"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, "originalCommit": {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTAwNA==", "bodyText": "I believe an exception would be better than a warning, since this would correspond to an erroneous use of the feature.", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383351004", "createdAt": "2020-02-24T15:56:39Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, "originalCommit": {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjI3MTI4OnYy", "diffSide": "RIGHT", "path": "commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoxNTozNFrOFtYFvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoxNTozNFrOFtYFvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNDkyNw==", "bodyText": "Maybe replace \"exists\" by \"Supported\"?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383124927", "createdAt": "2020-02-24T08:15:34Z", "author": {"login": "mathbagu"}, "path": "commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java", "diffHunk": "@@ -69,4 +70,13 @@ default String getName() {\n     default String getVersion() {\n         return \"1.0\";\n     }\n+\n+    /**\n+     * Check that a given extension version exists.\n+     */\n+    default void checkExtensionVersionExists(String extensionVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjI3NjUxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoxODowNFrOFtYIsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoxODowNFrOFtYIsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNTY4MA==", "bodyText": "Rewrite this method in two lines to make it simpler:\nString version = options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\");\nreturn getNamespaceUri(extensionXmlSerializer, options, version);", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383125680", "createdAt": "2020-02-24T08:18:04Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -215,6 +223,27 @@ private static ExtensionXmlSerializer getExtensionXmlSerializer(ExportOptions op\n         return extensionXmlSerializer;\n     }\n \n+    private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSerializer, ExportOptions options) {\n+        return getNamespaceUri(extensionXmlSerializer, options,\n+                options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjkyMDQ3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/AbstractVersionableNetworkExtensionXmlSerializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1MDozMlrOFtd_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzozMjo0MlrOFtgsbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMTYyMQ==", "bodyText": "Another possible name : BEGIN_VERSION_INCOMPATBILITY_MESSAGE", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383221621", "createdAt": "2020-02-24T11:50:32Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/AbstractVersionableNetworkExtensionXmlSerializer.java", "diffHunk": "@@ -25,6 +25,8 @@\n  */\n public abstract class AbstractVersionableNetworkExtensionXmlSerializer<T extends Extendable, E extends Extension<T>> implements ExtensionXmlSerializer<T, E> {\n \n+    private static final String INCOMPATIBILITY_NETWORK_VERSION_MESSAGE = \"IIDM-XML version of network (\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2NTkwMA==", "bodyText": "It is a string used 3 times (error's message), Sonar considers not creating a variable as a code smell.", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383265900", "createdAt": "2020-02-24T13:32:42Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/AbstractVersionableNetworkExtensionXmlSerializer.java", "diffHunk": "@@ -25,6 +25,8 @@\n  */\n public abstract class AbstractVersionableNetworkExtensionXmlSerializer<T extends Extendable, E extends Extension<T>> implements ExtensionXmlSerializer<T, E> {\n \n+    private static final String INCOMPATIBILITY_NETWORK_VERSION_MESSAGE = \"IIDM-XML version of network (\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMTYyMQ=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjkyNjIyOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/XMLExporter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1MjozNlrOFteC3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1ODoxNlrOFtl9XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA==", "bodyText": "Why do you create this variable here, and why use memoize?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383222494", "createdAt": "2020-02-24T11:52:36Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/XMLExporter.java", "diffHunk": "@@ -63,6 +67,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(XMLExporter.class);\n \n+    private static final Supplier<ExtensionProviders<ExtensionXmlSerializer>> EXTENSIONS_SUPPLIER = Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionXmlSerializer.class, \"network\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjcwOQ==", "bodyText": "This supplier provides in runtime the XML serializers of network extensions available in the dependencies of the module in which it is called. memoize allows to use lazy loading: the serializers are only loaded when first called (if never called, they are never loaded and once loaded, they are kept in memory).", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383346709", "createdAt": "2020-02-24T15:50:16Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/XMLExporter.java", "diffHunk": "@@ -63,6 +67,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(XMLExporter.class);\n \n+    private static final Supplier<ExtensionProviders<ExtensionXmlSerializer>> EXTENSIONS_SUPPLIER = Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionXmlSerializer.class, \"network\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjE1Nw==", "bodyText": "Ok, thank you for the explanation!", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383352157", "createdAt": "2020-02-24T15:58:16Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/XMLExporter.java", "diffHunk": "@@ -63,6 +67,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(XMLExporter.class);\n \n+    private static final Supplier<ExtensionProviders<ExtensionXmlSerializer>> EXTENSIONS_SUPPLIER = Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionXmlSerializer.class, \"network\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzI1NjAxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzo0Njo0NVrOFthHaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjozNDowN1rOFtnXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA==", "bodyText": "Uncompatible should be Incompatible. Why didn't you use the same name basis as the two other tests below?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383272808", "createdAt": "2020-02-24T13:46:45Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -191,26 +194,48 @@ public void testTerminalExtension() throws IOException {\n         assertSame(loadXml.getTerminal(), terminalMockExtXml.getTerminal());\n \n         // backward compatibility 1.0\n-        //roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0); // TODO add versions mechanism for extensions\n+        roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0);\n         roundTripXmlTest(NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_0)\n                         + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\")),\n                 NetworkXml::writeAndValidate,\n                 NetworkXml::validateAndRead,\n                 getVersionDir(IidmXmlConstants.CURRENT_IIDM_XML_VERSION) + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\");\n     }\n \n+    @Test\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        MemDataSource dataSource = new MemDataSource();\n+        Properties properties = new Properties();\n+        properties.put(\"iidm.export.xml.version\", \"1.1\");\n+        new XMLExporter().export(network, properties, dataSource);\n+        try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n+            assertNotNull(is);\n+            compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n+                    is);\n+        }\n+    }\n+\n     @Test\n     public void testThrowErrorUncompatibleExtensionVersion() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NDI2Mg==", "bodyText": "What is the difference between the two resource files in this test? Why do you use MemDataSource?", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383274262", "createdAt": "2020-02-24T13:49:30Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -191,26 +194,48 @@ public void testTerminalExtension() throws IOException {\n         assertSame(loadXml.getTerminal(), terminalMockExtXml.getTerminal());\n \n         // backward compatibility 1.0\n-        //roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0); // TODO add versions mechanism for extensions\n+        roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0);\n         roundTripXmlTest(NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_0)\n                         + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\")),\n                 NetworkXml::writeAndValidate,\n                 NetworkXml::validateAndRead,\n                 getVersionDir(IidmXmlConstants.CURRENT_IIDM_XML_VERSION) + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\");\n     }\n \n+    @Test\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        MemDataSource dataSource = new MemDataSource();\n+        Properties properties = new Properties();\n+        properties.put(\"iidm.export.xml.version\", \"1.1\");\n+        new XMLExporter().export(network, properties, dataSource);\n+        try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n+            assertNotNull(is);\n+            compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n+                    is);\n+        }\n+    }\n+\n     @Test\n     public void testThrowErrorUncompatibleExtensionVersion() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1OTEwNg==", "bodyText": "Why didn't you use the same name basis as the two other tests below?\n\nFor this test specifically, the version of the extension is supported, just not compatible with the given network version.\n\nWhat is the difference between the two resource files in this test? Why do you use MemDataSource?\n\nI'm assuming you are talking about the test above. The difference between the two resource files is the version of the loadMock extension (1.2 for the imported file and 1.1 for the reference of the exported file). I am using MemDataSource because when exporting, I don't want the file to be physically on my machine but to be in memory (which MemDataSource allows to do).", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383359106", "createdAt": "2020-02-24T16:09:23Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -191,26 +194,48 @@ public void testTerminalExtension() throws IOException {\n         assertSame(loadXml.getTerminal(), terminalMockExtXml.getTerminal());\n \n         // backward compatibility 1.0\n-        //roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0); // TODO add versions mechanism for extensions\n+        roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0);\n         roundTripXmlTest(NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_0)\n                         + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\")),\n                 NetworkXml::writeAndValidate,\n                 NetworkXml::validateAndRead,\n                 getVersionDir(IidmXmlConstants.CURRENT_IIDM_XML_VERSION) + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\");\n     }\n \n+    @Test\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        MemDataSource dataSource = new MemDataSource();\n+        Properties properties = new Properties();\n+        properties.put(\"iidm.export.xml.version\", \"1.1\");\n+        new XMLExporter().export(network, properties, dataSource);\n+        try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n+            assertNotNull(is);\n+            compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n+                    is);\n+        }\n+    }\n+\n     @Test\n     public void testThrowErrorUncompatibleExtensionVersion() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM3NTExOA==", "bodyText": "Comments have been added in tests to explain more in detail what is done", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383375118", "createdAt": "2020-02-24T16:34:07Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -191,26 +194,48 @@ public void testTerminalExtension() throws IOException {\n         assertSame(loadXml.getTerminal(), terminalMockExtXml.getTerminal());\n \n         // backward compatibility 1.0\n-        //roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0); // TODO add versions mechanism for extensions\n+        roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0);\n         roundTripXmlTest(NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_0)\n                         + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\")),\n                 NetworkXml::writeAndValidate,\n                 NetworkXml::validateAndRead,\n                 getVersionDir(IidmXmlConstants.CURRENT_IIDM_XML_VERSION) + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\");\n     }\n \n+    @Test\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        MemDataSource dataSource = new MemDataSource();\n+        Properties properties = new Properties();\n+        properties.put(\"iidm.export.xml.version\", \"1.1\");\n+        new XMLExporter().export(network, properties, dataSource);\n+        try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n+            assertNotNull(is);\n+            compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n+                    is);\n+        }\n+    }\n+\n     @Test\n     public void testThrowErrorUncompatibleExtensionVersion() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}, "originalCommit": {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQ1Nzk3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1OTo0NFrOFt_uEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDoxNToyMlrOFuAPoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NDIyNg==", "bodyText": "Should you use getVersionDir(IidmXmlVersion.V1_1) also there?\nMaybe we should introduce a method somewhere to get a network resource based on a version and a filename:\nInputStream getNetworkAsStream(String filename, IidmVersion version) {\n    return getClass().getResourceAsStream(version + \"/\" + filename);\n}", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383774226", "createdAt": "2020-02-25T09:59:44Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -200,17 +203,51 @@ public void testTerminalExtension() throws IOException {\n     }\n \n     @Test\n-    public void testThrowErrorUncompatibleExtensionVersion() {\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        // import XIIDM file with loadMock v1.2\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e87e3c8937cafcb91cd321956baf341790851abc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4MjgxNg==", "bodyText": "Yes, I will make the change you suggested and introduce the new method in a new PR to prevent confusion in this one.", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383782816", "createdAt": "2020-02-25T10:15:22Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -200,17 +203,51 @@ public void testTerminalExtension() throws IOException {\n     }\n \n     @Test\n-    public void testThrowErrorUncompatibleExtensionVersion() {\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        // import XIIDM file with loadMock v1.2\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NDIyNg=="}, "originalCommit": {"oid": "e87e3c8937cafcb91cd321956baf341790851abc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQ3NzY1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDowNToxMFrOFt_54A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDowNToxMFrOFt_54A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NzI0OA==", "bodyText": "Could you add documentation about the usage of this method. I'm sorry but I never remember how and when to use this", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383777248", "createdAt": "2020-02-25T10:05:10Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,20 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e87e3c8937cafcb91cd321956baf341790851abc"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 51, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}