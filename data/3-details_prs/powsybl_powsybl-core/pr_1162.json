{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjQzMjU3", "number": 1162, "title": "Merging view step : to create Line between two different networks", "bodyText": "Signed-off-by: Thomas ADAM tadam@silicom.fr\nPlease check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nNo\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nNew feature for non destructive network merge, in order to create a line between 2 different Network\nWhat is the current behavior? (You can also link to an open issue here)\nMerging view does not take into account of line creation between two different networks\nWhat is the new behavior (if this is a feature change)?\nCreation of a line between two different network is implemented.\nOne FIXME left : computation of q0, p0 and ucte xnode code in LineAdderAdapter\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-02-17T17:12:58Z", "url": "https://github.com/powsybl/powsybl-core/pull/1162", "merged": true, "mergeCommit": {"oid": "e3b7aaf76aa9620f411349dd2882b4fb92e93966"}, "closed": true, "closedAt": "2020-03-06T18:10:07Z", "author": {"login": "tadam50"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFQVkygH2gAyMzc2MjQzMjU3OjRmNDU4NTQzODIwMzA0NDU0NzVhNDI2MWQ1N2Y0ZjRjZTc2MjNhMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLCv_ugH2gAyMzc2MjQzMjU3OmJhOTg1MWQ2ZTFhNjJhOTg1NmNiMzQwOGRkMWFlMDZiZWRlNWQ1NDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/4f45854382030445475a4261d57f4f4ce7623a2e", "committedDate": "2020-02-17T16:57:45Z", "message": "Merging view step : To create MergedLine between two networks\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDIyNzgz", "url": "https://github.com/powsybl/powsybl-core/pull/1162#pullrequestreview-361022783", "createdAt": "2020-02-19T11:05:23Z", "commit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTowNToyNFrOFrkDJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTowNzozOVrOFrkHVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIyMzcxNg==", "bodyText": "The P0 and Q0 are equal to the half of the sum of P1 and P2 (respectively Q1 and Q2). The sign depends on the side.\nIf P1 and P2 are NaN, you cannot initialize these values. You probably have to listen (NetworkListener) an event and recompute them each time P1, P2, Q1, Q2 are updated.", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r381223716", "createdAt": "2020-02-19T11:05:24Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,83 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // FIXME : how to compute P0, Q0 & ucteXnodeCode ?\n+            ucteXnodeCode = \"\";\n+            p0 = 0.0;\n+            q0 = 0.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIyNDc5MA==", "bodyText": "Id is not mutable", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r381224790", "createdAt": "2020-02-19T11:07:39Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergedLine.java", "diffHunk": "@@ -169,6 +171,11 @@ public String getId() {\n         return id;\n     }\n \n+    public MergedLine setId(String id) {\n+        this.id = id;\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59472219401ab11e4dbba30b620afd9ca9fa6a9e", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/59472219401ab11e4dbba30b620afd9ca9fa6a9e", "committedDate": "2020-02-20T10:07:28Z", "message": "Merging view step : taking PR reviews into account\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c31246d1bfea168168ebec0bed483c993285a3db", "committedDate": "2020-02-20T13:24:13Z", "message": "Merging view step : fix checkstyle\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjAxNjEx", "url": "https://github.com/powsybl/powsybl-core/pull/1162#pullrequestreview-363201611", "createdAt": "2020-02-24T07:31:58Z", "commit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzozMTo1OFrOFtXXpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoxMzowN1rOFtYC1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExMzEyNA==", "bodyText": "About XNode code, it's really hard to say. Is it mandatory?\nI think you need an extra configuration: based on the ID of the VL1 and VL2, you can defined the name of the Xnodes, but it's not really safe.", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383113124", "createdAt": "2020-02-24T07:31:58Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,83 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // FIXME : how to compute P0, Q0 & ucteXnodeCode ?\n+            ucteXnodeCode = \"\";\n+            p0 = 0.0;\n+            q0 = 0.0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIyMzcxNg=="}, "originalCommit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMTc1Ng==", "bodyText": "I'm not sure this is a good idea to use getClass().getSimpleName() to get \"Line\"", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383121756", "createdAt": "2020-02-24T08:04:20Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,84 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // FIXME : how to compute ucteXnodeCode ?\n+            ucteXnodeCode = \"\";\n+            // P0 & Q0 are updated by MergingNetworkListener::onUpdate method\n+            p0 = 0.0;\n+            q0 = 0.0;\n+\n+            // Taking into account ensureIdUnicity\n+            checkAndSetUniqueId();\n             // Creation of 2 dangling lines\n-            throw MergingView.NOT_IMPLEMENTED_EXCEPTION;\n+            // -- first dangling line\n+            final MergingView view = index.getView();\n+            final VoltageLevel vl1 = view.getVoltageLevel(voltageLevelId1);\n+            addDanglingLine(vl1, id + DL1_SUFFIX, connectableBus1, bus1, node1, g1, b1);\n+            // -- second dangling line\n+            final VoltageLevel vl2 = view.getVoltageLevel(voltageLevelId2);\n+            addDanglingLine(vl2, id + DL2_SUFFIX, connectableBus2, bus2, node2, g2, b2);\n+            // MergedLine.id is forced here\n+            // Return the merged line as the new line\n+            newLine = index.getMergedLineByCode(ucteXnodeCode)\n+                           .setId(id);\n         }\n         return newLine;\n     }\n \n+    private void checkAndSetUniqueId() {\n+        if (this.id == null) {\n+            throw new PowsyblException(getClass().getSimpleName() + \" id is not set\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMjAwNQ==", "bodyText": "You should make this function static and pass ucteXnodeCode as parameter?", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383122005", "createdAt": "2020-02-24T08:05:19Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,84 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // FIXME : how to compute ucteXnodeCode ?\n+            ucteXnodeCode = \"\";\n+            // P0 & Q0 are updated by MergingNetworkListener::onUpdate method\n+            p0 = 0.0;\n+            q0 = 0.0;\n+\n+            // Taking into account ensureIdUnicity\n+            checkAndSetUniqueId();\n             // Creation of 2 dangling lines\n-            throw MergingView.NOT_IMPLEMENTED_EXCEPTION;\n+            // -- first dangling line\n+            final MergingView view = index.getView();\n+            final VoltageLevel vl1 = view.getVoltageLevel(voltageLevelId1);\n+            addDanglingLine(vl1, id + DL1_SUFFIX, connectableBus1, bus1, node1, g1, b1);\n+            // -- second dangling line\n+            final VoltageLevel vl2 = view.getVoltageLevel(voltageLevelId2);\n+            addDanglingLine(vl2, id + DL2_SUFFIX, connectableBus2, bus2, node2, g2, b2);\n+            // MergedLine.id is forced here\n+            // Return the merged line as the new line\n+            newLine = index.getMergedLineByCode(ucteXnodeCode)\n+                           .setId(id);\n         }\n         return newLine;\n     }\n \n+    private void checkAndSetUniqueId() {\n+        if (this.id == null) {\n+            throw new PowsyblException(getClass().getSimpleName() + \" id is not set\");\n+        }\n+        if (ensureIdUnicity) {\n+            setId(Identifiables.getUniqueId(id, index::contains));\n+        } else {\n+            // Check Id is unique in all merging view\n+            if (index.contains(id)) {\n+                throw new PowsyblException(\"The network already contains an object with the id '\"\n+                        + id\n+                        + \"'\");\n+            }\n+        }\n+    }\n+\n+    private DanglingLine addDanglingLine(final VoltageLevel vl, final String id, final String connectableBus, final String bus, final Integer node, final double g, final double b) {\n+        DanglingLineAdder adder = vl.newDanglingLine()\n+                    .setId(id)\n+                    .setName(name)\n+                    .setP0(p0)\n+                    .setQ0(q0)\n+                    .setR(r)\n+                    .setX(x)\n+                    .setG(g)\n+                    .setB(b)\n+                    .setUcteXnodeCode(ucteXnodeCode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMjc3OA==", "bodyText": "No, it depends on the transit flow: P1 ---->-----DL1.P0 ---->----- DL2.P0 ---->---- P2\nThe sign of DL1.P0 is the same as P2, and respectively the sign of DL2.P0 is the same than P1", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383122778", "createdAt": "2020-02-24T08:07:58Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergedLine.java", "diffHunk": "@@ -95,6 +97,26 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2) {\n         });\n     }\n \n+    void computeAndSetP0() {\n+        double p1 = dl1.getTerminal().getP();\n+        double p2 = dl2.getTerminal().getP();\n+        if (!Double.isNaN(p1) && !Double.isNaN(p2)) {\n+            double p0 = (p1 + p2) / 2.0d;\n+            dl1.setP0(p0);\n+            dl2.setP0(-p0); // sign depends of side", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMzY5Mg==", "bodyText": "I still disagree: I have to look deeper in the code to understand why the MergedLine can be created without having the final ID", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383123692", "createdAt": "2020-02-24T08:11:27Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergedLine.java", "diffHunk": "@@ -169,6 +171,11 @@ public String getId() {\n         return id;\n     }\n \n+    public MergedLine setId(String id) {\n+        this.id = id;\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIyNDc5MA=="}, "originalCommit": {"oid": "4f45854382030445475a4261d57f4f4ce7623a2e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMzk0Mw==", "bodyText": "Change a little bit the code:\nreturn index.isMerged(dl) ? null : dl", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383123943", "createdAt": "2020-02-24T08:12:22Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java", "diffHunk": "@@ -672,7 +672,7 @@ public int getDanglingLineCount() {\n     @Override\n     public DanglingLine getDanglingLine(final String id) {\n         final DanglingLine dl = index.get(n -> n.getDanglingLine(id), index::getDanglingLine);\n-        return index.isMerged(dl) ? dl : null;\n+        return !index.isMerged(dl) ? dl : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNDE4Mw==", "bodyText": "See my remarks in the other PR.", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r383124183", "createdAt": "2020-02-24T08:13:07Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingViewIndex.java", "diffHunk": "@@ -272,14 +276,15 @@ Identifiable getIdentifiable(final Identifiable identifiable) {\n     }\n \n     boolean isMerged(final DanglingLine dl) {\n-        return !mergedLineCached.containsKey(dl.getUcteXnodeCode());\n+        Objects.requireNonNull(dl, \"DanglingLine is null\");\n+        return mergedLineCached.containsKey(dl.getUcteXnodeCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f5452d222d604509837d26265f034ad56f14704", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1f5452d222d604509837d26265f034ad56f14704", "committedDate": "2020-02-26T10:38:06Z", "message": "Merging view step : make setId private-package & change P0 & Q0 sign computation\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f2f48023515ef6db704b626ac7d8013311ab03", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/94f2f48023515ef6db704b626ac7d8013311ab03", "committedDate": "2020-02-26T11:07:20Z", "message": "Merging view step : fix exception message\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/f40f8bf56371bf364106b79ebc453ed1f14a0b2f", "committedDate": "2020-02-26T13:51:44Z", "message": "Merging view step : create independant test for P0 & Q0 updates\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTY5Njc3", "url": "https://github.com/powsybl/powsybl-core/pull/1162#pullrequestreview-370169677", "createdAt": "2020-03-06T09:03:04Z", "commit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowMzowNVrOFyxekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxNjoyN1rOFyx1pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Mzc2Mw==", "bodyText": "Remove this in this expression: it's useless", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r388783763", "createdAt": "2020-03-06T09:03:05Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,84 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // UcteXnodeCode is empty for MergedLine created here\n+            ucteXnodeCode = \"\";\n+            // P0 & Q0 are updated by MergingNetworkListener::onUpdate method\n+            p0 = 0.0;\n+            q0 = 0.0;\n+\n+            // Taking into account ensureIdUnicity\n+            checkAndSetUniqueId();\n             // Creation of 2 dangling lines\n-            throw MergingView.NOT_IMPLEMENTED_EXCEPTION;\n+            // -- first dangling line\n+            final MergingView view = index.getView();\n+            final VoltageLevel vl1 = view.getVoltageLevel(voltageLevelId1);\n+            addDanglingLine(vl1, id + DL1_SUFFIX, connectableBus1, bus1, node1, g1, b1);\n+            // -- second dangling line\n+            final VoltageLevel vl2 = view.getVoltageLevel(voltageLevelId2);\n+            addDanglingLine(vl2, id + DL2_SUFFIX, connectableBus2, bus2, node2, g2, b2);\n+            // MergedLine.id is forced here\n+            // Return the merged line as the new line\n+            newLine = index.getMergedLineByCode(ucteXnodeCode)\n+                           .setId(id);\n         }\n         return newLine;\n     }\n \n+    private void checkAndSetUniqueId() {\n+        if (this.id == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDIyMw==", "bodyText": "Please take this comment into account.", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r388784223", "createdAt": "2020-03-06T09:04:08Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/LineAdderAdapter.java", "diffHunk": "@@ -52,24 +57,84 @@\n \n     private double b2 = Double.NaN;\n \n+    private double p0 = Double.NaN;\n+\n+    private double q0 = Double.NaN;\n+\n+    private String ucteXnodeCode;\n+\n     LineAdderAdapter(final MergingViewIndex index) {\n         this.index = Objects.requireNonNull(index, \"merging view index is null\");\n     }\n \n     @Override\n     public Line add() {\n-        Line newLine = null;\n+        Line newLine;\n         final Network n1 = checkAndGetNetwork1();\n         final Network n2 = checkAndGetNetwork2();\n         if (n1 == n2) {\n             newLine = index.getLine(addLine(n1));\n         } else {\n+            // FIXME : how to compute ucteXnodeCode ?\n+            ucteXnodeCode = \"\";\n+            // P0 & Q0 are updated by MergingNetworkListener::onUpdate method\n+            p0 = 0.0;\n+            q0 = 0.0;\n+\n+            // Taking into account ensureIdUnicity\n+            checkAndSetUniqueId();\n             // Creation of 2 dangling lines\n-            throw MergingView.NOT_IMPLEMENTED_EXCEPTION;\n+            // -- first dangling line\n+            final MergingView view = index.getView();\n+            final VoltageLevel vl1 = view.getVoltageLevel(voltageLevelId1);\n+            addDanglingLine(vl1, id + DL1_SUFFIX, connectableBus1, bus1, node1, g1, b1);\n+            // -- second dangling line\n+            final VoltageLevel vl2 = view.getVoltageLevel(voltageLevelId2);\n+            addDanglingLine(vl2, id + DL2_SUFFIX, connectableBus2, bus2, node2, g2, b2);\n+            // MergedLine.id is forced here\n+            // Return the merged line as the new line\n+            newLine = index.getMergedLineByCode(ucteXnodeCode)\n+                           .setId(id);\n         }\n         return newLine;\n     }\n \n+    private void checkAndSetUniqueId() {\n+        if (this.id == null) {\n+            throw new PowsyblException(getClass().getSimpleName() + \" id is not set\");\n+        }\n+        if (ensureIdUnicity) {\n+            setId(Identifiables.getUniqueId(id, index::contains));\n+        } else {\n+            // Check Id is unique in all merging view\n+            if (index.contains(id)) {\n+                throw new PowsyblException(\"The network already contains an object with the id '\"\n+                        + id\n+                        + \"'\");\n+            }\n+        }\n+    }\n+\n+    private DanglingLine addDanglingLine(final VoltageLevel vl, final String id, final String connectableBus, final String bus, final Integer node, final double g, final double b) {\n+        DanglingLineAdder adder = vl.newDanglingLine()\n+                    .setId(id)\n+                    .setName(name)\n+                    .setP0(p0)\n+                    .setQ0(q0)\n+                    .setR(r)\n+                    .setX(x)\n+                    .setG(g)\n+                    .setB(b)\n+                    .setUcteXnodeCode(ucteXnodeCode)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMjAwNQ=="}, "originalCommit": {"oid": "c31246d1bfea168168ebec0bed483c993285a3db"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzU5MA==", "bodyText": "I think there is a mistake here: the sum should use absolute value: p1 and p2 have opposite sign and their values are close. So if I make the sum, I will have a value close to 0...\nExample:\np1 = -605\np2 = 600\n--> losses = 5\np1 + p2 / 2.0 = -2,5\n\nAnother way (simplest) way to compute the P0 and Q0 is to use the losses:\ndouble losses = (p1 + p2)\ndl1.P0 = (P1 + 1/2 losses) * sign(P2)\ndl2.P0 = (P2 + 1/2 losses) * sign(P1)", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r388787590", "createdAt": "2020-03-06T09:11:46Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergedLine.java", "diffHunk": "@@ -95,6 +97,33 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2) {\n         });\n     }\n \n+    void computeAndSetP0() {\n+        double p1 = dl1.getTerminal().getP();\n+        double p2 = dl2.getTerminal().getP();\n+        if (!Double.isNaN(p1) && !Double.isNaN(p2)) {\n+            double p0 = (p1 + p2) / 2.0d;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzgxNw==", "bodyText": "Same mistake there", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r388787817", "createdAt": "2020-03-06T09:12:23Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergedLine.java", "diffHunk": "@@ -95,6 +97,33 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2) {\n         });\n     }\n \n+    void computeAndSetP0() {\n+        double p1 = dl1.getTerminal().getP();\n+        double p2 = dl2.getTerminal().getP();\n+        if (!Double.isNaN(p1) && !Double.isNaN(p2)) {\n+            double p0 = (p1 + p2) / 2.0d;\n+            dl1.setP0(getSign(p2) * p0);\n+            dl2.setP0(getSign(p1) * p0);\n+        }\n+    }\n+\n+    void computeAndSetQ0() {\n+        double q1 = dl1.getTerminal().getQ();\n+        double q2 = dl2.getTerminal().getQ();\n+        if (!Double.isNaN(q1) && !Double.isNaN(q2)) {\n+            double q0 = (q1 + q2) / 2.0d;\n+            dl1.setQ0(getSign(q2) * q0);\n+            dl2.setQ0(getSign(q1) * q0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4OTY3MA==", "bodyText": "I thought we discussed about that: is it OK for you to move this code to a new dedicated listener (DanglingLinePowerListener) and attach it in the constructor of the MergingView?", "url": "https://github.com/powsybl/powsybl-core/pull/1162#discussion_r388789670", "createdAt": "2020-03-06T09:16:27Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingNetworkListener.java", "diffHunk": "@@ -35,8 +35,24 @@ public void onRemoval(final Identifiable identifiable) {\n         // Not implemented yet !\n     }\n \n-    @Override\n     public void onUpdate(final Identifiable identifiable, final String attribute, final Object oldValue, final Object newValue) {\n         // Not implemented yet !\n     }\n+\n+    @Override\n+    public void onUpdate(Identifiable identifiable, String attribute, String variantId, Object oldValue, Object newValue) {\n+        Objects.requireNonNull(identifiable, \"identifiable is null\");\n+        if (identifiable instanceof DanglingLine) {\n+            final DanglingLine dl = (DanglingLine) identifiable;\n+            final String ucteCode = dl.getUcteXnodeCode();\n+            final MergedLine mergedLine = index.getMergedLineByCode(ucteCode);\n+            if (mergedLine != null) {\n+                if (attribute.contains(\"p\")) {\n+                    mergedLine.computeAndSetP0();\n+                } else if (attribute.contains(\"q\")) {\n+                    mergedLine.computeAndSetQ0();\n+                }\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40f8bf56371bf364106b79ebc453ed1f14a0b2f"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432811af9bbb091558e573b7b240dea53c512a91", "author": {"user": {"login": "tadam50", "name": "Thomas ADAM"}}, "url": "https://github.com/powsybl/powsybl-core/commit/432811af9bbb091558e573b7b240dea53c512a91", "committedDate": "2020-03-06T15:23:21Z", "message": "Taking into account PR remarks : listeners + p0 & q0 computation\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDQ1MDM3", "url": "https://github.com/powsybl/powsybl-core/pull/1162#pullrequestreview-370445037", "createdAt": "2020-03-06T16:14:46Z", "commit": {"oid": "432811af9bbb091558e573b7b240dea53c512a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e24d6b5bbd869e7691f2b25d2aea14316302f73", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/2e24d6b5bbd869e7691f2b25d2aea14316302f73", "committedDate": "2020-03-06T16:19:04Z", "message": "Merge branch 'master' into iidm_merging_view_part_16_merged_line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba9851d6e1a62a9856cb3408dd1ae06bede5d544", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ba9851d6e1a62a9856cb3408dd1ae06bede5d544", "committedDate": "2020-03-06T16:31:29Z", "message": "Small fixes\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4402, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}