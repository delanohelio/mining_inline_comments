{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjc2Mzg1", "number": 1266, "title": "[PERF] Context logs : postpone String building and check log level", "bodyText": "Signed-off-by: Laurent Cosson lcosson@silicom.fr\nPlease check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\n#1032\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nThis PR modifies the way the Context class logs messages. Appropriate log levels are checked (enabled/disabled) and formatted messages are built when logging, not before calling the logging methods.\nWhat is the current behavior? (You can also link to an open issue here)\nFormatted strings are built first, then passed to logging methods as String parameters. Also, LOG.isXxxEnabled() is not always checked.\nWhat is the new behavior (if this is a feature change)?\nSupplier lambdas replace String arguments.\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nNo.\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-04-08T07:27:40Z", "url": "https://github.com/powsybl/powsybl-core/pull/1266", "merged": true, "mergeCommit": {"oid": "a84d2c8c950285cde5b1c94c344f19f59e51cf0c"}, "closed": true, "closedAt": "2020-04-16T16:38:04Z", "author": {"login": "lcosson"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVjzvYgFqTM4OTc2MDEwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYPRcxAFqTM5NDgwMjE1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzYwMTAx", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-389760101", "createdAt": "2020-04-08T08:31:24Z", "commit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozMToyNFrOGCklZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozOTo1OFrOGCk6NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0OTczNQ==", "bodyText": "In that specific case, a simple concatenation should be more efficient. What do you think?", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405349735", "createdAt": "2020-04-08T08:31:24Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/Conversion.java", "diffHunk": "@@ -336,8 +337,8 @@ private void newConvertTransformers(Context context) {\n             } else if (ends.size() == 3) {\n                 c = new NewThreeWindingsTransformerConversion(ends, context);\n             } else {\n-                String what = String.format(\"PowerTransformer %s\", t);\n-                String reason = String.format(\"Has %d ends. Only 2 or 3 ends are supported\", ends.size());\n+                Supplier<String> what = () -> String.format(\"PowerTransformer %s\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0OTgzMw==", "bodyText": "Same question here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405349833", "createdAt": "2020-04-08T08:31:35Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/Conversion.java", "diffHunk": "@@ -365,8 +366,8 @@ private void convertTransformers(Context context) {\n                     } else if (ends.size() == 3) {\n                         c = new ThreeWindingsTransformerConversion(ends, context);\n                     } else {\n-                        String what = String.format(\"PowerTransformer %s\", t);\n-                        String reason = String.format(\"Has %d ends. Only 2 or 3 ends are supported\",\n+                        Supplier<String> what = () -> String.format(\"PowerTransformer %s\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MDI2Mw==", "bodyText": "Same question here.", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405350263", "createdAt": "2020-04-08T08:32:15Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/CurrentLimitsMapping.java", "diffHunk": "@@ -32,7 +32,7 @@ public CurrentLimitsAdder getCurrentLimitsAdder(String id, Supplier<CurrentLimit\n     void addAll() {\n         for (Map.Entry<String, CurrentLimitsAdder> entry : adders.entrySet()) {\n             if (Double.isNaN(entry.getValue().getPermanentLimit())) {\n-                context.ignored(String.format(\"Operational Limit Set of %s\", entry.getKey()), \"An operational limit set must at least contain one value for permanent limit.\");\n+                context.ignored(() -> String.format(\"Operational Limit Set of %s\", entry.getKey()), () -> \"An operational limit set must at least contain one value for permanent limit.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MDk2Ng==", "bodyText": "Introduce a version without supplier: there is no reason to create a supplier here, a simple String is OK as there is no parameters", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405350966", "createdAt": "2020-04-08T08:33:19Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java", "diffHunk": "@@ -96,7 +96,7 @@ private boolean setRegulatingControlVoltage(String controlId,\n         if (control.targetValue <= 0.0 || Double.isNaN(control.targetValue)) {\n             targetV = terminal.getVoltageLevel().getNominalV();\n             terminal = gen.getTerminal();\n-            context.fixed(controlId, \"Invalid value for regulating target value. Regulation considered as local.\", control.targetValue, targetV);\n+            context.fixed(controlId, () -> \"Invalid value for regulating target value. Regulation considered as local.\", control.targetValue, targetV);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MTQzNQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405351435", "createdAt": "2020-04-08T08:34:04Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForTransformers.java", "diffHunk": "@@ -277,7 +277,7 @@ private void setPhaseTapChangerControl(boolean regulating, CgmesRegulatingContro\n         } else if (control.mode.endsWith(\"activepower\")) {\n             okSet = setPtcRegulatingControlActivePower(regulating, rc.ltcFlag, control, ptc, context);\n         } else if (!control.mode.endsWith(\"fixed\")) {\n-            context.fixed(control.mode, \"Unsupported regulating mode for Phase tap changer. Considered as FIXED_TAP\");\n+            context.fixed(control.mode, () -> \"Unsupported regulating mode for Phase tap changer. Considered as FIXED_TAP\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MTYwMw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405351603", "createdAt": "2020-04-08T08:34:21Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/AbstractBranchConversion.java", "diffHunk": "@@ -31,11 +31,11 @@ public boolean valid() {\n         String node2 = nodeId(2);\n         if (context.boundary().containsNode(node1)\n                 || context.boundary().containsNode(node2)) {\n-            invalid(\"Has \" + nodeIdPropertyName() + \" on boundary\");\n+            invalid(() -> \"Has \" + nodeIdPropertyName() + \" on boundary\");\n             return false;\n         }\n         if (!p.containsKey(\"r\") || !p.containsKey(\"x\")) {\n-            invalid(\"No r,x attributes\");\n+            invalid(() -> \"No r,x attributes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MTcyMQ==", "bodyText": "A simple concatenation seems ok", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405351721", "createdAt": "2020-04-08T08:34:36Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/AbstractObjectConversion.java", "diffHunk": "@@ -62,46 +63,46 @@ public static int fromContinuous(double value) {\n \n     public boolean presentMandatoryProperty(String pname) {\n         if (!p.containsKey(pname)) {\n-            invalid(String.format(\"Missing property %s\", pname));\n+            invalid(() -> String.format(\"Missing property %s\", pname));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MTkzMQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405351931", "createdAt": "2020-04-08T08:34:58Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/AbstractReactiveLimitsOwnerConversion.java", "diffHunk": "@@ -78,7 +79,7 @@ protected void convertReactiveLimits(Generator g) {\n                 }\n                 rcca.add();\n             } else if (qRanges.size() == 1) {\n-                fixed(\"reactive capability curve\", \"only one point\");\n+                fixed(\"reactive capability curve\", () -> \"only one point\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjAxMg==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352012", "createdAt": "2020-04-08T08:35:07Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/AcDcConverterConversion.java", "diffHunk": "@@ -32,7 +32,7 @@ public boolean valid() {\n             return false;\n         }\n         if (converterType == null) {\n-            invalid(String.format(\"Type %s\", p.getLocal(\"type\")));\n+            invalid(() -> String.format(\"Type %s\", p.getLocal(\"type\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjExOA==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352118", "createdAt": "2020-04-08T08:35:18Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/DcLineSegmentConversion.java", "diffHunk": "@@ -213,7 +213,7 @@ private double r() {\n         double r = p.asDouble(\"r\", 0);\n         if (r < 0) {\n             double r1 = 0.1;\n-            fixed(\"resistance\", \"was negative\", r, r1);\n+            fixed(\"resistance\", () -> \"was negative\", r, r1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjE3OQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352179", "createdAt": "2020-04-08T08:35:23Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/EquivalentBranchConversion.java", "diffHunk": "@@ -38,7 +38,7 @@ public void convert() {\n             // then EquivalentBranch.r21 is assumed equal to EquivalentBranch.r.\n             // Usage rule:\n             // EquivalentBranch is a result of network reduction prior to the data exchange.\n-            invalid(\"Impedance 21 different of impedance 12 not supported\");\n+            invalid(() -> \"Impedance 21 different of impedance 12 not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjIyNg==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352226", "createdAt": "2020-04-08T08:35:29Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/EquivalentInjectionConversion.java", "diffHunk": "@@ -50,7 +50,7 @@ public void convert() {\n         if (terminalConnected() && regulationStatus) {\n             targetV = p.asDouble(REGULATION_TARGET);\n             if (targetV == 0) {\n-                fixed(REGULATION_TARGET, \"Target voltage value can not be zero\", targetV,\n+                fixed(REGULATION_TARGET, () -> \"Target voltage value can not be zero\", targetV,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjYzNQ==", "bodyText": "I don't understand why you change this.", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352635", "createdAt": "2020-04-08T08:36:09Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/NodeConversion.java", "diffHunk": "@@ -163,15 +164,13 @@ public void setVoltageAngleNodeBreaker() {\n         VoltageLevel.NodeBreakerView topo = vl.getNodeBreakerView();\n         String connectivityNode = id;\n         int iidmNode = context.nodeMapping().iidmNodeForConnectivityNode(connectivityNode, vl);\n-        if (!topo.hasAttachedEquipment(iidmNode)) {\n-            LOG.error(\"ConnectivityNode {} with voltage and angle is not valid in IIDM\", connectivityNode);\n-            return;\n-        }\n         // To obtain a bus for which we want to set voltage:\n         // If there no Terminal at this IIDM node,\n         // then find from it the first connected node with a Terminal\n-        Terminal t = topo.getOptionalTerminal(iidmNode)\n-                .orElseGet(() -> new FirstTerminalTraverser(topo, iidmNode).firstTerminal());\n+        Terminal t = topo.getTerminal(iidmNode);\n+        if (t == null) {\n+            t = new FirstTerminalTraverser(topo, iidmNode).firstTerminal();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mjc5Nw==", "bodyText": "Why do you remove this log?", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352797", "createdAt": "2020-04-08T08:36:27Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/NodeConversion.java", "diffHunk": "@@ -163,15 +164,13 @@ public void setVoltageAngleNodeBreaker() {\n         VoltageLevel.NodeBreakerView topo = vl.getNodeBreakerView();\n         String connectivityNode = id;\n         int iidmNode = context.nodeMapping().iidmNodeForConnectivityNode(connectivityNode, vl);\n-        if (!topo.hasAttachedEquipment(iidmNode)) {\n-            LOG.error(\"ConnectivityNode {} with voltage and angle is not valid in IIDM\", connectivityNode);\n-            return;\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mjk2OA==", "bodyText": "Same question?", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405352968", "createdAt": "2020-04-08T08:36:43Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/NodeConversion.java", "diffHunk": "@@ -184,8 +183,8 @@ public void setVoltageAngleNodeBreaker() {\n                 return;\n             }\n             LOG.warn(\n-                \"Can't find a bus from the Bus View to set Voltage and Angle, we use the bus {} from the Bus/Breaker view. Connectivity node {}\",\n-                bus, id);\n+                    \"Can't find a calculated Bus to set Voltage, Angle, but found a configured Bus {}. Connectivity node {}\",\n+                    bus, id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzEzNA==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353134", "createdAt": "2020-04-08T08:36:57Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/OperationalLimitConversion.java", "diffHunk": "@@ -72,7 +74,7 @@ private void createCurrentLimitsAdder(int terminalNumber, Identifiable<?> identi\n         } else if (identifiable instanceof TwoWindingsTransformer) {\n             Branch<?> b = (Branch<?>) identifiable;\n             if (terminalNumber == -1) {\n-                context.ignored(CURRENT_LIMIT, \"Defined for Equipment TwoWindingsTransformer. Should be defined for one Terminal of Two\");\n+                context.ignored(CURRENT_LIMIT, () -> \"Defined for Equipment TwoWindingsTransformer. Should be defined for one Terminal of Two\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzE3Nw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353177", "createdAt": "2020-04-08T08:37:02Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/OperationalLimitConversion.java", "diffHunk": "@@ -101,7 +103,7 @@ public boolean valid() {\n     public void convert() {\n         double value = p.asDouble(\"value\");\n         if (value <= 0) {\n-            context.ignored(OPERATIONAL_LIMIT, \"value is <= 0\");\n+            context.ignored(OPERATIONAL_LIMIT, () -> \"value is <= 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzM5NQ==", "bodyText": "A simple concatenation seems ok", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353395", "createdAt": "2020-04-08T08:37:26Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/PhaseTapChangerConversion.java", "diffHunk": "@@ -98,7 +99,7 @@ public boolean valid() {\n             return false;\n         }\n         if (!validType()) {\n-            invalid(String.format(\"Unexpected phaseTapChangerType %s\", ptcType));\n+            invalid(() -> String.format(\"Unexpected phaseTapChangerType %s\", ptcType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzQ5OQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353499", "createdAt": "2020-04-08T08:37:37Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/PhaseTapChangerConversion.java", "diffHunk": "@@ -192,8 +193,8 @@ private double fixing(PropertyBag point, String attr, double defaultValue, Strin\n         double value = point.asDouble(attr, defaultValue);\n         if (Double.isNaN(value)) {\n             fixed(\n-                    \"PhaseTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n-                    \"invalid value \" + point.get(attr));\n+                \"PhaseTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n+                () -> \"invalid value \" + point.get(attr));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mzc0MQ==", "bodyText": "I don't understand this refactoring", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353741", "createdAt": "2020-04-08T08:38:00Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/PhaseTapChangerConversion.java", "diffHunk": "@@ -425,9 +426,11 @@ private boolean gatherxStepMinMax(double[] xs) {\n         boolean xStepRangeIsConsistent = true;\n         if (xStepMin < 0 || xStepMax <= 0 || xStepMin > xStepMax) {\n             xStepRangeIsConsistent = false;\n-            String reason = String.format(\"Inconsistent xStepMin, xStepMax [%f, %f]\",\n-                    xStepMin,\n-                    xStepMax);\n+            final double xStepMinParam = xStepMin;\n+            final double xStepMaxParam = xStepMax;\n+            Supplier<String> reason = () -> String.format(\"Inconsistent xStepMin, xStepMax [%f, %f]\",\n+                    xStepMinParam,\n+                    xStepMaxParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzgzNQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353835", "createdAt": "2020-04-08T08:38:08Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/PhaseTapChangerConversion.java", "diffHunk": "@@ -224,7 +225,7 @@ private double du() {\n             du = voltageStepIncrement / 100;\n         } else {\n             double defaultValue = 1;\n-            String reason = \"Not present or not valid value for voltageStepIncrementOutOfPhase or voltageStepIncrement\";\n+            Supplier<String> reason = () -> \"Not present or not valid value for voltageStepIncrementOutOfPhase or voltageStepIncrement\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mzg5MQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353891", "createdAt": "2020-04-08T08:38:13Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/RatioTapChangerConversion.java", "diffHunk": "@@ -45,7 +46,7 @@ public RatioTapChangerConversion(PropertyBag rtc, Context context) {\n     @Override\n     public boolean valid() {\n         if (tx2 == null && tx3 == null) {\n-            invalid(\"Missing transformer\");\n+            invalid(() -> \"Missing transformer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mzk0Mw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405353943", "createdAt": "2020-04-08T08:38:19Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/RatioTapChangerConversion.java", "diffHunk": "@@ -59,9 +60,9 @@ public boolean valid() {\n                 // Check if the step is at neutral and regulating control is disabled\n                 boolean regulating = p.asBoolean(\"regulatingControlEnabled\", false);\n                 if (position == neutralStep && !regulating) {\n-                    ignored(reason0 + \", but is at neutralStep and regulating control disabled\");\n+                    ignored(() -> reason0 + \", but is at neutralStep and regulating control disabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDAwMQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354001", "createdAt": "2020-04-08T08:38:26Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/RatioTapChangerConversion.java", "diffHunk": "@@ -79,7 +80,7 @@ public boolean valid() {\n     public void convert() {\n         RatioTapChangerAdder rtca = adder();\n         if (rtca == null) {\n-            invalid(\"Could not create ratio tap changer adder\");\n+            invalid(() -> \"Could not create ratio tap changer adder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDA2MQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354061", "createdAt": "2020-04-08T08:38:33Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/RatioTapChangerConversion.java", "diffHunk": "@@ -170,8 +171,8 @@ private double fixing(PropertyBag point, String attr, double defaultValue, Strin\n         double value = point.asDouble(attr, defaultValue);\n         if (Double.isNaN(value)) {\n             fixed(\n-                    \"RatioTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n-                    \"invalid value \" + point.get(attr));\n+                \"RatioTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n+                () -> \"invalid value \" + point.get(attr));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDE0MQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354141", "createdAt": "2020-04-08T08:38:39Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/ShuntConversion.java", "diffHunk": "@@ -60,7 +60,7 @@ public void convert() {\n         }\n         if (bPerSection == 0) {\n             float bPerSectionFixed = Float.MIN_VALUE;\n-            fixed(CgmesNames.B_PER_SECTION, \"Can not be zero\", bPerSection, bPerSectionFixed);\n+            fixed(CgmesNames.B_PER_SECTION, () -> \"Can not be zero\", bPerSection, bPerSectionFixed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDIxMQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354211", "createdAt": "2020-04-08T08:38:44Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/StaticVarCompensatorConversion.java", "diffHunk": "@@ -25,7 +25,7 @@ public StaticVarCompensatorConversion(PropertyBag svc, Context context) {\n     @Override\n     public void convert() {\n         double slope = p.asDouble(\"slope\", 0.0);\n-        ignored(String.format(\"Slope %f\", slope));\n+        ignored(() -> String.format(\"Slope %f\", slope));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDM1Mw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354353", "createdAt": "2020-04-08T08:38:56Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/SwitchConversion.java", "diffHunk": "@@ -33,7 +35,7 @@ public boolean valid() {\n             return false;\n         }\n         if (busId(1).equals(busId(2))) {\n-            ignored(String.format(\"end buses are the same bus %s\", busId(1)));\n+            ignored(() -> String.format(\"end buses are the same bus %s\", busId(1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDM5OA==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354398", "createdAt": "2020-04-08T08:39:02Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/ThreeWindingsTransformerConversion.java", "diffHunk": "@@ -38,7 +38,7 @@ public boolean valid() {\n         if (context.boundary().containsNode(nodeId(1))\n             || context.boundary().containsNode(nodeId(2))\n             || context.boundary().containsNode(nodeId(3))) {\n-            invalid(\"3 windings transformer end point at boundary is not supported\");\n+            invalid(() -> \"3 windings transformer end point at boundary is not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDUxNg==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354516", "createdAt": "2020-04-08T08:39:11Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/TwoWindingsTransformerConversion.java", "diffHunk": "@@ -36,7 +38,7 @@ public boolean valid() {\n         }\n         if (context.boundary().containsNode(nodeId(1))\n                 || context.boundary().containsNode(nodeId(2))) {\n-            invalid(\"2 windings transformer end point at boundary is not supported\");\n+            invalid(() -> \"2 windings transformer end point at boundary is not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDU4Mw==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354583", "createdAt": "2020-04-08T08:39:17Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/TwoWindingsTransformerConversion.java", "diffHunk": "@@ -121,7 +123,7 @@ private void addTapChangers(TwoWindingsTransformer tx) {\n         int rtcSide = 0;\n         if (rtc1 != null) {\n             if (rtc2 != null) {\n-                String reason = \"Unsupported modelling: two winding transformer with two ratio tap changers\";\n+                Supplier<String> reason = () -> \"Unsupported modelling: two winding transformer with two ratio tap changers\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDY1Mg==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354652", "createdAt": "2020-04-08T08:39:23Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/TwoWindingsTransformerConversion.java", "diffHunk": "@@ -139,7 +141,7 @@ private void addTapChangers(TwoWindingsTransformer tx) {\n         int ptcSide = 0;\n         if (ptc1 != null) {\n             if (ptc2 != null) {\n-                String reason = \"Unsupported modelling: transformer with two phase tap changers\";\n+                Supplier<String> reason = () -> \"Unsupported modelling: transformer with two phase tap changers\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDgwOQ==", "bodyText": "Same question about the refactoring", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354809", "createdAt": "2020-04-08T08:39:36Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/TwoWindingsTransformerConversion.java", "diffHunk": "@@ -154,10 +156,12 @@ private void addTapChangers(TwoWindingsTransformer tx) {\n             context.tapChangerTransformers().add(ptc, tx, \"ptc\", ptcSide);\n         }\n         if (rtcSide > 0 && ptcSide > 0 && rtcSide != ptcSide) {\n-            String reason = String.format(\n+            final String rtcParam = rtc;\n+            final String ptcParam = ptc;\n+            Supplier<String> reason = () -> String.format(\n                     \"Unsupported modelling: transformer with ratio and tap changer not on the same winding, rtc: %s, ptc: %s\",\n-                    rtc,\n-                    ptc);\n+                    rtcParam,\n+                    ptcParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDkyMQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354921", "createdAt": "2020-04-08T08:39:46Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/transformers/CgmesPhaseTapChangerBuilder.java", "diffHunk": "@@ -33,7 +33,7 @@\n     public TapChanger build() {\n         if (!validType()) {\n             String type = p.getLocal(CgmesNames.PHASE_TAP_CHANGER_TYPE).toLowerCase();\n-            context.invalid(CgmesNames.PHASE_TAP_CHANGER_TYPE, String.format(\"Unexpected type %s\", type));\n+            context.invalid(CgmesNames.PHASE_TAP_CHANGER_TYPE, () -> String.format(\"Unexpected type %s\", type));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NDk2OA==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405354968", "createdAt": "2020-04-08T08:39:50Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/transformers/NewTwoWindingsTransformerConversion.java", "diffHunk": "@@ -66,7 +66,7 @@ public boolean valid() {\n         }\n         if (context.boundary().containsNode(nodeId(1))\n             || context.boundary().containsNode(nodeId(2))) {\n-            invalid(\"2 windings transformer end point at boundary is not supported\");\n+            invalid(() -> \"2 windings transformer end point at boundary is not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NTA2MQ==", "bodyText": "Same remark here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405355061", "createdAt": "2020-04-08T08:39:58Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/transformers/TapChangerConversion.java", "diffHunk": "@@ -135,7 +135,7 @@ private static TapChanger combineTapChanger(TapChanger tc1, TapChanger tc2) {\n     */\n     private TapChanger tapChangerFixPosition(TapChanger tc) {\n         if (tc.getLowTapPosition() != tc.getHighTapPosition()) {\n-            context.fixed(String.format(\"TapChanger Id %s fixed tap at position %d \", tc.getId(), tc.getTapPosition()), \"\");\n+            context.fixed(String.format(\"TapChanger Id %s fixed tap at position %d \", tc.getId(), tc.getTapPosition()), () -> \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDMxNDc5", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-390031479", "createdAt": "2020-04-08T14:31:13Z", "commit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDozMToxM1rOGCyCIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDozMToxM1rOGCyCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MDA4MA==", "bodyText": "I think it may be because lambda only allows final constants. Maybe with double[]? Not sure if it is equivalent, performance wise.", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405570080", "createdAt": "2020-04-08T14:31:13Z", "author": {"login": "MioRtia"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/PhaseTapChangerConversion.java", "diffHunk": "@@ -425,9 +426,11 @@ private boolean gatherxStepMinMax(double[] xs) {\n         boolean xStepRangeIsConsistent = true;\n         if (xStepMin < 0 || xStepMax <= 0 || xStepMin > xStepMax) {\n             xStepRangeIsConsistent = false;\n-            String reason = String.format(\"Inconsistent xStepMin, xStepMax [%f, %f]\",\n-                    xStepMin,\n-                    xStepMax);\n+            final double xStepMinParam = xStepMin;\n+            final double xStepMaxParam = xStepMax;\n+            Supplier<String> reason = () -> String.format(\"Inconsistent xStepMin, xStepMax [%f, %f]\",\n+                    xStepMinParam,\n+                    xStepMaxParam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mzc0MQ=="}, "originalCommit": {"oid": "4c5caf65839359dd19843dad2a0f4ddca3bb8ab0"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDMzNzU4", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-390033758", "createdAt": "2020-04-08T14:33:45Z", "commit": {"oid": "70e7c7afc166ba8b44059e4603991db410050c78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDYyNDk4", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-390062498", "createdAt": "2020-04-08T15:04:07Z", "commit": {"oid": "70e7c7afc166ba8b44059e4603991db410050c78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNDowN1rOGCzhpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNDowN1rOGCzhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NDUzNA==", "bodyText": "@lcosson I think there is no reason to create a Supplier here", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r405594534", "createdAt": "2020-04-08T15:04:07Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/transformers/AbstractCgmesTapChangerBuilder.java", "diffHunk": "@@ -79,8 +79,8 @@ protected TapChanger build() {\n         double value = point.asDouble(attr, defaultValue);\n         if (Double.isNaN(value)) {\n             context.fixed(\n-                    \"RatioTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n-                    \"invalid value \" + point.get(attr));\n+                \"RatioTapChangerTablePoint \" + attr + \" for step \" + step + \" in table \" + tableId,\n+                () -> \"invalid value \" + point.get(attr));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e7c7afc166ba8b44059e4603991db410050c78"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDYzMjU5", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-390063259", "createdAt": "2020-04-08T15:04:57Z", "commit": {"oid": "70e7c7afc166ba8b44059e4603991db410050c78"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDYzNjk1", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-391463695", "createdAt": "2020-04-10T14:13:37Z", "commit": {"oid": "95722ecdf6072e756a04be902f28ad0251a6a363"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDoxMzozOFrOGD7n4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDoxMzozOFrOGD7n4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc3NTc3Nw==", "bodyText": "Are you sure they are public?", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r406775777", "createdAt": "2020-04-10T14:13:38Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/Context.java", "diffHunk": "@@ -29,6 +30,12 @@\n  * @author Luma Zamarre\u00f1o <zamarrenolm at aia.es>\n  */\n public class Context {\n+\n+    // Log messages\n+    public static final String FIXED_REASON = \"Fixed {}. Reason: {}\";\n+    public static final String INVALID_REASON = \"Invalid {}. Reason: {}\";\n+    public static final String IGNORED_REASON = \"Ignored {}. Reason: {}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95722ecdf6072e756a04be902f28ad0251a6a363"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTMwODY1", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-391530865", "createdAt": "2020-04-10T16:22:58Z", "commit": {"oid": "f4f37ee118165e4f34a027929083fcc85e647a09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODM1NzU0", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-391835754", "createdAt": "2020-04-12T08:53:37Z", "commit": {"oid": "848be50060c8273821f610b57db274b392cf03c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwODo1MzozOFrOGETkug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwODo1MzozOFrOGETkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2ODE4Ng==", "bodyText": "I think adding a check for log level enabled before a call with string constants does not offer performance improvement, the log library will do the same check in the implementation (https://stackoverflow.com/questions/8788096/log-info-using-log-isinfoenabled). Personally I prefer removing the check for such one-line calls, to improve readability.", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r407168186", "createdAt": "2020-04-12T08:53:38Z", "author": {"login": "zamarrenolm"}, "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/Context.java", "diffHunk": "@@ -215,39 +222,85 @@ public void anotherLineConversion(ACLineSegmentConversion c) {\n     }\n \n     public void endLinesConversion() {\n-        String enough = countLinesWithSvPowerFlowsAtEnds < countLines ? \"FEW\" : \"ENOUGH\";\n-        LOG.info(\"{} lines with SvPowerFlow values at ends: {} / {}\",\n-                enough,\n-                countLinesWithSvPowerFlowsAtEnds,\n-                countLines);\n+        if (LOG.isInfoEnabled()) {\n+            String enough = countLinesWithSvPowerFlowsAtEnds < countLines ? \"FEW\" : \"ENOUGH\";\n+            LOG.info(\"{} lines with SvPowerFlow values at ends: {} / {}\",\n+                    enough,\n+                    countLinesWithSvPowerFlowsAtEnds,\n+                    countLines);\n+        }\n     }\n \n     public void invalid(String what, String reason) {\n-        LOG.warn(\"Invalid {}. Reason: {}\", what, reason);\n+        if (LOG.isWarnEnabled()) {\n+            LOG.warn(INVALID_REASON, what, reason);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848be50060c8273821f610b57db274b392cf03c3"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODM2MDM0", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-391836034", "createdAt": "2020-04-12T08:57:21Z", "commit": {"oid": "848be50060c8273821f610b57db274b392cf03c3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwODo1NzoyMVrOGETmJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwODo1NzoyMVrOGETmJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2ODU1MQ==", "bodyText": "Only impact on raising the error level for test is that we may reduce the coverage of some code.", "url": "https://github.com/powsybl/powsybl-core/pull/1266#discussion_r407168551", "createdAt": "2020-04-12T08:57:21Z", "author": {"login": "zamarrenolm"}, "path": "cgmes/cgmes-conversion/src/test/resources/logback-test.xml", "diffHunk": "@@ -14,7 +14,7 @@\n             <pattern>%-5p %-20C{1} | %m%n</pattern>\n         </encoder>\n     </appender>\n-    <root level=\"info\">\n+    <root level=\"error\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848be50060c8273821f610b57db274b392cf03c3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTE2NzEw", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-393516710", "createdAt": "2020-04-15T07:23:49Z", "commit": {"oid": "ca51d16d4812da192b27c83d8271c3312651f879"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3362184f8c0782e58ac6a121096a2f4b5724a87a", "author": {"user": {"login": "lcosson", "name": "Laurent COSSON"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3362184f8c0782e58ac6a121096a2f4b5724a87a", "committedDate": "2020-04-16T16:15:20Z", "message": "Improve context logging performance, using suppliers and checking log level\n\nSigned-off-by: Laurent Cosson <lcosson@silicom.fr>\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca51d16d4812da192b27c83d8271c3312651f879", "author": {"user": {"login": "lcosson", "name": "Laurent COSSON"}}, "url": "https://github.com/powsybl/powsybl-core/commit/ca51d16d4812da192b27c83d8271c3312651f879", "committedDate": "2020-04-14T08:55:39Z", "message": "Remove checks when not required for performances\n\nSigned-off-by: Laurent Cosson <lcosson@silicom.fr>"}, "afterCommit": {"oid": "3362184f8c0782e58ac6a121096a2f4b5724a87a", "author": {"user": {"login": "lcosson", "name": "Laurent COSSON"}}, "url": "https://github.com/powsybl/powsybl-core/commit/3362184f8c0782e58ac6a121096a2f4b5724a87a", "committedDate": "2020-04-16T16:15:20Z", "message": "Improve context logging performance, using suppliers and checking log level\n\nSigned-off-by: Laurent Cosson <lcosson@silicom.fr>\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODAyMTU4", "url": "https://github.com/powsybl/powsybl-core/pull/1266#pullrequestreview-394802158", "createdAt": "2020-04-16T16:27:54Z", "commit": {"oid": "3362184f8c0782e58ac6a121096a2f4b5724a87a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4229, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}