{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzI3OTAx", "number": 1263, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0NzoxN1rODvdg5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODowMzowN1rODyzhZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDkzMjIxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0NzoxN1rOGB5X0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0NzoxN1rOGB5X0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MTc0Ng==", "bodyText": "Replace String.format by a simple concatenation (performance issue)", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r404641746", "createdAt": "2020-04-07T08:47:17Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -1013,7 +1015,11 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2, Properties prop\n                 LOGGER.warn(\"Inconsistencies of property '{}' between both sides of merged line. Side 2 is empty, keeping side 1 value '{}'\", prop, dl1.getProperty(prop));\n                 properties.setProperty(prop, dl1.getProperty(prop));\n             } else {\n-                LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                if (!prop.equals(ELEMENT_NAME_PROPERTY)) {\n+                    LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                } else {\n+                    properties.setProperty(prop, String.format(\"%s,%s\", dl1.getProperty(prop), dl2.getProperty(prop)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e6b23c417b51bf1ea6c6b85da1e063416b84d9"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDk0MTcxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0OTo0MlrOGB5dxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0ODo0N1rOGDZiuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MzI2OQ==", "bodyText": "I'm not sure we should make a specific case for element names. Maybe we should decide the strategy, and apply it to all properties.\n@murgeyseb What do you think?", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r404643269", "createdAt": "2020-04-07T08:49:42Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -1013,7 +1015,11 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2, Properties prop\n                 LOGGER.warn(\"Inconsistencies of property '{}' between both sides of merged line. Side 2 is empty, keeping side 1 value '{}'\", prop, dl1.getProperty(prop));\n                 properties.setProperty(prop, dl1.getProperty(prop));\n             } else {\n-                LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                if (!prop.equals(ELEMENT_NAME_PROPERTY)) {\n+                    LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                } else {\n+                    properties.setProperty(prop, String.format(\"%s,%s\", dl1.getProperty(prop), dl2.getProperty(prop)));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e6b23c417b51bf1ea6c6b85da1e063416b84d9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjA1MA==", "bodyText": "Yes, I think we could keep the same behaviour for Element name, and change the parsing of the property in the exporter to create a unique element name if needed, using the same strategy as before (if equals use it, if one empty use the other, otherwise no element name)", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r406206050", "createdAt": "2020-04-09T13:32:07Z", "author": {"login": "murgeyseb"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -1013,7 +1015,11 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2, Properties prop\n                 LOGGER.warn(\"Inconsistencies of property '{}' between both sides of merged line. Side 2 is empty, keeping side 1 value '{}'\", prop, dl1.getProperty(prop));\n                 properties.setProperty(prop, dl1.getProperty(prop));\n             } else {\n-                LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                if (!prop.equals(ELEMENT_NAME_PROPERTY)) {\n+                    LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                } else {\n+                    properties.setProperty(prop, String.format(\"%s,%s\", dl1.getProperty(prop), dl2.getProperty(prop)));\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MzI2OQ=="}, "originalCommit": {"oid": "d3e6b23c417b51bf1ea6c6b85da1e063416b84d9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNzQwMQ==", "bodyText": "But if we don't make a specific case for element names this strategy of concatenating the two  side's property will impcact all types of property. for example the geographical name it will create other problems. Should i delete this condition here ? but make another one in exporter saying if geographival name contains the separator \",\" --> don't export it", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r406217401", "createdAt": "2020-04-09T13:48:47Z", "author": {"login": "benrejebmoh"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -1013,7 +1015,11 @@ private void mergeProperties(DanglingLine dl1, DanglingLine dl2, Properties prop\n                 LOGGER.warn(\"Inconsistencies of property '{}' between both sides of merged line. Side 2 is empty, keeping side 1 value '{}'\", prop, dl1.getProperty(prop));\n                 properties.setProperty(prop, dl1.getProperty(prop));\n             } else {\n-                LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                if (!prop.equals(ELEMENT_NAME_PROPERTY)) {\n+                    LOGGER.error(\"Inconsistencies of property '{}' between both sides of merged line. '{}' on side 1 and '{}' on side 2. Removing the property of merged line\", prop, dl1.getProperty(prop), dl2.getProperty(prop));\n+                } else {\n+                    properties.setProperty(prop, String.format(\"%s,%s\", dl1.getProperty(prop), dl2.getProperty(prop)));\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MzI2OQ=="}, "originalCommit": {"oid": "d3e6b23c417b51bf1ea6c6b85da1e063416b84d9"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDk0NTc4OnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo1MDo1MFrOGB5gcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo1MDo1MFrOGB5gcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0Mzk1Mg==", "bodyText": "The property separator should be a constant, just in case this is not well chosen and we have to change it.", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r404643952", "createdAt": "2020-04-07T08:50:50Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -475,10 +475,17 @@ private static void convertTieLine(UcteNetwork ucteNetwork, TieLine tieLine, Uct\n         // FIXME(mathbagu) REAL or EQUIVALENT ?\n         UcteElementStatus status = tieLine.getTerminal1().isConnected() && tieLine.getTerminal2().isConnected() ? EQUIVALENT_ELEMENT_IN_OPERATION : EQUIVALENT_ELEMENT_OUT_OF_OPERATION;\n \n+        String elementName = tieLine.getProperty(ELEMENT_NAME_PROPERTY_KEY, null);\n+        String elementName1 = elementName;\n+        String elementName2 = elementName;\n+        if (elementName != null && elementName.contains(\",\")) {\n+            elementName1 = elementName.split(\",\")[0];\n+            elementName2 = elementName.split(\",\")[1];\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e6b23c417b51bf1ea6c6b85da1e063416b84d9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NTk0NzcwOnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzo0Nzo1MVrOGHDgdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzo0Nzo1MVrOGHDgdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA1MDY3OQ==", "bodyText": "Could you please complete the description of the PR and adapt the unit-test, to be sure this fix works properly. In the description, you mention you want to change the elementName of the tieLines, but you never mention the geographical name of the XNode.", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r410050679", "createdAt": "2020-04-17T07:47:51Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -307,8 +309,8 @@ private static void convertXNode(UcteNetwork ucteNetwork, MergedXnode mergedXnod\n      */\n     private static void convertXNode(UcteNetwork ucteNetwork, TieLine tieLine, UcteExporterContext context) {\n         UcteNodeCode xnodeCode = context.getNamingStrategy().getUcteNodeCode(tieLine.getUcteXnodeCode());\n+        mergeGeographicalNameProperties(tieLine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4bdf1665a42eea6d8a544ea193c81e86f2ba9b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NTk5NTI3OnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODowMzowN1rOGHD-kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODowMzowN1rOGHD-kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA1ODM4Ng==", "bodyText": "This is not necessary: empty is a good enough to be serialized.", "url": "https://github.com/powsybl/powsybl-core/pull/1263#discussion_r410058386", "createdAt": "2020-04-17T08:03:07Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -478,10 +502,23 @@ private static void convertTieLine(UcteNetwork ucteNetwork, TieLine tieLine, Uct\n         // FIXME(mathbagu) REAL or EQUIVALENT ?\n         UcteElementStatus status = tieLine.getTerminal1().isConnected() && tieLine.getTerminal2().isConnected() ? EQUIVALENT_ELEMENT_IN_OPERATION : EQUIVALENT_ELEMENT_OUT_OF_OPERATION;\n \n+        String elementName = tieLine.getProperty(ELEMENT_NAME_PROPERTY_KEY, null);\n+        String elementName1 = elementName;\n+        String elementName2 = elementName;\n+        if (elementName != null && elementName.contains(PROPERTY_SEPARATOR)) {\n+            elementName1 = elementName.split(PROPERTY_SEPARATOR, -1)[0];\n+            if (elementName1.isEmpty()) {\n+                elementName1 = null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4bdf1665a42eea6d8a544ea193c81e86f2ba9b"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 82, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}