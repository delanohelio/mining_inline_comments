{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MjEyODE4", "number": 1261, "title": "Add sub-network reduction predicate", "bodyText": "Signed-off-by: Geoffroy Jamgotchian geoffroy.jamgotchian@rte-france.com\nPlease check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nNo\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nfeature\nWhat is the new behavior (if this is a feature change)?\nA new predicate for network reduction is added. It allows to specify a center voltage level to keep and a voltage level depth to keep around the center voltage level.\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-04-05T19:33:10Z", "url": "https://github.com/powsybl/powsybl-core/pull/1261", "merged": true, "mergeCommit": {"oid": "5a16f9b4cb80835e0b3cb8a632631061dc85e862"}, "closed": true, "closedAt": "2020-04-14T16:17:02Z", "author": {"login": "geofjamg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUvTU-gH2gAyMzk5MjEyODE4OjAxNTc4MjYxMGFkMDM3MTA1YzU3N2FjMzU4OGYyYTI2NTkwYjZjZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXlcDQAH2gAyMzk5MjEyODE4OjJmYmZlNjliOTc5NDNiMDA2MzdhNmU3ODZkMGE5YWFjYTk0NjY2ODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/015782610ad037105c577ac3588f2a26590b6cfe", "committedDate": "2020-04-05T19:31:13Z", "message": "Add sub-network reduction predicate\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTA0NDM3", "url": "https://github.com/powsybl/powsybl-core/pull/1261#pullrequestreview-388904437", "createdAt": "2020-04-07T08:39:51Z", "commit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODozOTo1MVrOGB5Fhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0NDoyMVrOGB5QWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNzA2Mg==", "bodyText": "Declare these variables final.", "url": "https://github.com/powsybl/powsybl-core/pull/1261#discussion_r404637062", "createdAt": "2020-04-07T08:39:51Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-reducer/src/main/java/com/powsybl/iidm/reducer/SubNetworkPredicate.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.reducer;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A network reducer predicate that allow reduction based on a center voltage level and all other voltage level neighbors\n+ * within a specified depth.\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class SubNetworkPredicate implements NetworkPredicate {\n+\n+    private String voltageLevelId;\n+\n+    private int maxDepth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzOTE3OA==", "bodyText": "I think it's not a good design: the delegate is in fact final (you skip this part if the delegate is already initialized), but initialized after the constructor. I propose to make it delegate final, and initialize the SubNetworkPredicate using a VoltageLevel instead of its ID.\nIf you want to reuse the SubAreaNetwork for different VL or networks, the init() method should return the predicate and you should use a local variable.", "url": "https://github.com/powsybl/powsybl-core/pull/1261#discussion_r404639178", "createdAt": "2020-04-07T08:43:17Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-reducer/src/main/java/com/powsybl/iidm/reducer/SubNetworkPredicate.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.reducer;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A network reducer predicate that allow reduction based on a center voltage level and all other voltage level neighbors\n+ * within a specified depth.\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class SubNetworkPredicate implements NetworkPredicate {\n+\n+    private String voltageLevelId;\n+\n+    private int maxDepth;\n+\n+    private IdentifierNetworkPredicate delegate;\n+\n+    public SubNetworkPredicate(String voltageLevelId, int maxDepth) {\n+        this.voltageLevelId = Objects.requireNonNull(voltageLevelId);\n+        if (maxDepth < 0) {\n+            throw new IllegalArgumentException(\"Invalid max depth value: \" + maxDepth);\n+        }\n+        this.maxDepth = maxDepth;\n+    }\n+\n+    private void init(Network network) {\n+        if (delegate != null) {\n+            return;\n+        }\n+        VoltageLevel vl = network.getVoltageLevel(voltageLevelId);\n+        if (vl == null) {\n+            throw new PowsyblException(\"Voltage level '\" + voltageLevelId + \"' not found\");\n+        }\n+        Set<String> voltageLevelIds = new LinkedHashSet<>();\n+        traverse(vl, 0, maxDepth, voltageLevelIds);\n+        delegate = new IdentifierNetworkPredicate(voltageLevelIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzOTYwNw==", "bodyText": "Make this method private", "url": "https://github.com/powsybl/powsybl-core/pull/1261#discussion_r404639607", "createdAt": "2020-04-07T08:44:00Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-reducer/src/main/java/com/powsybl/iidm/reducer/SubNetworkPredicate.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.reducer;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A network reducer predicate that allow reduction based on a center voltage level and all other voltage level neighbors\n+ * within a specified depth.\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class SubNetworkPredicate implements NetworkPredicate {\n+\n+    private String voltageLevelId;\n+\n+    private int maxDepth;\n+\n+    private IdentifierNetworkPredicate delegate;\n+\n+    public SubNetworkPredicate(String voltageLevelId, int maxDepth) {\n+        this.voltageLevelId = Objects.requireNonNull(voltageLevelId);\n+        if (maxDepth < 0) {\n+            throw new IllegalArgumentException(\"Invalid max depth value: \" + maxDepth);\n+        }\n+        this.maxDepth = maxDepth;\n+    }\n+\n+    private void init(Network network) {\n+        if (delegate != null) {\n+            return;\n+        }\n+        VoltageLevel vl = network.getVoltageLevel(voltageLevelId);\n+        if (vl == null) {\n+            throw new PowsyblException(\"Voltage level '\" + voltageLevelId + \"' not found\");\n+        }\n+        Set<String> voltageLevelIds = new LinkedHashSet<>();\n+        traverse(vl, 0, maxDepth, voltageLevelIds);\n+        delegate = new IdentifierNetworkPredicate(voltageLevelIds);\n+    }\n+\n+    private static void traverse(VoltageLevel vl, int depth, int maxDepth, Set<String> voltageLevelIds) {\n+        if (voltageLevelIds.contains(vl.getId()) || depth > maxDepth) {\n+            return;\n+        }\n+\n+        voltageLevelIds.add(vl.getId());\n+\n+        vl.visitEquipments(new DefaultTopologyVisitor() {\n+            public void visitBranch(Branch branch, Branch.Side side) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzOTgzNQ==", "bodyText": "You should visit HVDC lines also?", "url": "https://github.com/powsybl/powsybl-core/pull/1261#discussion_r404639835", "createdAt": "2020-04-07T08:44:21Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-reducer/src/main/java/com/powsybl/iidm/reducer/SubNetworkPredicate.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.reducer;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.*;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A network reducer predicate that allow reduction based on a center voltage level and all other voltage level neighbors\n+ * within a specified depth.\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class SubNetworkPredicate implements NetworkPredicate {\n+\n+    private String voltageLevelId;\n+\n+    private int maxDepth;\n+\n+    private IdentifierNetworkPredicate delegate;\n+\n+    public SubNetworkPredicate(String voltageLevelId, int maxDepth) {\n+        this.voltageLevelId = Objects.requireNonNull(voltageLevelId);\n+        if (maxDepth < 0) {\n+            throw new IllegalArgumentException(\"Invalid max depth value: \" + maxDepth);\n+        }\n+        this.maxDepth = maxDepth;\n+    }\n+\n+    private void init(Network network) {\n+        if (delegate != null) {\n+            return;\n+        }\n+        VoltageLevel vl = network.getVoltageLevel(voltageLevelId);\n+        if (vl == null) {\n+            throw new PowsyblException(\"Voltage level '\" + voltageLevelId + \"' not found\");\n+        }\n+        Set<String> voltageLevelIds = new LinkedHashSet<>();\n+        traverse(vl, 0, maxDepth, voltageLevelIds);\n+        delegate = new IdentifierNetworkPredicate(voltageLevelIds);\n+    }\n+\n+    private static void traverse(VoltageLevel vl, int depth, int maxDepth, Set<String> voltageLevelIds) {\n+        if (voltageLevelIds.contains(vl.getId()) || depth > maxDepth) {\n+            return;\n+        }\n+\n+        voltageLevelIds.add(vl.getId());\n+\n+        vl.visitEquipments(new DefaultTopologyVisitor() {\n+            public void visitBranch(Branch branch, Branch.Side side) {\n+                switch (side) {\n+                    case ONE:\n+                        traverse(branch.getTerminal2().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        break;\n+                    case TWO:\n+                        traverse(branch.getTerminal1().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        break;\n+                    default:\n+                        throw new IllegalStateException(\"Unknown side: \" + side);\n+                }\n+            }\n+\n+            @Override\n+            public void visitLine(Line line, Line.Side side) {\n+                visitBranch(line, side);\n+            }\n+\n+            @Override\n+            public void visitTwoWindingsTransformer(TwoWindingsTransformer transformer, TwoWindingsTransformer.Side side) {\n+                visitBranch(transformer, side);\n+            }\n+\n+            @Override\n+            public void visitThreeWindingsTransformer(ThreeWindingsTransformer transformer, ThreeWindingsTransformer.Side side) {\n+                switch (side) {\n+                    case ONE:\n+                        traverse(transformer.getLeg2().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        traverse(transformer.getLeg3().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        break;\n+                    case TWO:\n+                        traverse(transformer.getLeg1().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        traverse(transformer.getLeg3().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        break;\n+                    case THREE:\n+                        traverse(transformer.getLeg1().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        traverse(transformer.getLeg2().getTerminal().getVoltageLevel(), depth + 1, maxDepth, voltageLevelIds);\n+                        break;\n+                    default:\n+                        throw new IllegalStateException(\"Unknown side: \" + side);\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015782610ad037105c577ac3588f2a26590b6cfe"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4bca0bcf602ccffeb9d4e6216c4c24607f8e42b", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c4bca0bcf602ccffeb9d4e6216c4c24607f8e42b", "committedDate": "2020-04-07T11:22:54Z", "message": "Refactoring\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a151f85590edafbdeaed5ebb9f03c36901fde5", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/31a151f85590edafbdeaed5ebb9f03c36901fde5", "committedDate": "2020-04-07T11:24:21Z", "message": "change visibility to private\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e99990d85041e015dc4ba69df3b54f3240213bc", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/7e99990d85041e015dc4ba69df3b54f3240213bc", "committedDate": "2020-04-07T11:34:03Z", "message": "Fix Sonar issues\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzE5OTM3", "url": "https://github.com/powsybl/powsybl-core/pull/1261#pullrequestreview-389719937", "createdAt": "2020-04-08T07:34:04Z", "commit": {"oid": "7e99990d85041e015dc4ba69df3b54f3240213bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fbfe69b97943b00637a6e786d0a9aaca9466680", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/2fbfe69b97943b00637a6e786d0a9aaca9466680", "committedDate": "2020-04-14T15:43:28Z", "message": "Merge branch 'master' into subnetwork_filter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}