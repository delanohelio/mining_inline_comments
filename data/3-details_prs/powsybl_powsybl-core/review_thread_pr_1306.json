{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NjMwMjQ1", "number": 1306, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzoyMTowNFrOD9y5vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzoyMTowNFrOD9y5vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTIzNzA4OnYy", "diffSide": "RIGHT", "path": "cgmes/cgmes-conversion/src/test/java/com/powsybl/cgmes/conversion/test/conformity/modified/CgmesConformity1ModifiedConversionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzoyMTowNFrOGXgGeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo1OToyNlrOGXhw_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjM3Ng==", "bodyText": "This can be static", "url": "https://github.com/powsybl/powsybl-core/pull/1306#discussion_r427296376", "createdAt": "2020-05-19T13:21:04Z", "author": {"login": "miovd"}, "path": "cgmes/cgmes-conversion/src/test/java/com/powsybl/cgmes/conversion/test/conformity/modified/CgmesConformity1ModifiedConversionTest.java", "diffHunk": "@@ -67,6 +74,48 @@ public void microBERatioPhaseTabularTest() {\n         }\n     }\n \n+    @Test\n+    public void microBEPhaseTapChangerLinearTest() throws IOException {\n+        Conversion.Config config = new Conversion.Config();\n+        Network n = networkModel(CgmesConformity1ModifiedCatalog.microT4BePhaseTapChangerLinear(),\n+            config);\n+\n+        PhaseTapChanger ptc = n.getTwoWindingsTransformer(\"_a708c3bc-465d-4fe7-b6ef-6fa6408a62b0\").getPhaseTapChanger();\n+        assertEquals(25, ptc.getStepCount());\n+\n+        for (int step = 1; step <= ptc.getStepCount(); step++) {\n+            assertEquals(1.0, ptc.getStep(step).getRho(), 0);\n+            assertEquals(0.0, ptc.getStep(step).getR(), 0);\n+            assertEquals(-87.517240, ptc.getStep(1).getX(), 0.000001);\n+            assertEquals(0.0, ptc.getStep(step).getG(), 0);\n+            assertEquals(0.0, ptc.getStep(step).getB(), 0);\n+        }\n+\n+        // Check alpha in some steps\n+        assertEquals(14.4, ptc.getStep(1).getAlpha(), 0.001);\n+        assertEquals(8.4, ptc.getStep(6).getAlpha(), 0.001);\n+        assertEquals(2.4, ptc.getStep(11).getAlpha(), 0.001);\n+        assertEquals(0.0, ptc.getStep(13).getAlpha(), 0.0);\n+        assertEquals(-1.2, ptc.getStep(14).getAlpha(), 0.001);\n+        assertEquals(-7.2, ptc.getStep(19).getAlpha(), 0.001);\n+        assertEquals(-14.4, ptc.getStep(25).getAlpha(), 0.001);\n+    }\n+\n+    private Network networkModel(TestGridModel testGridModel, Conversion.Config config) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "232033a708d3b92f9247ba45d070f601e45ef804"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzY0Nw==", "bodyText": "Done", "url": "https://github.com/powsybl/powsybl-core/pull/1306#discussion_r427323647", "createdAt": "2020-05-19T13:59:26Z", "author": {"login": "marqueslanauja"}, "path": "cgmes/cgmes-conversion/src/test/java/com/powsybl/cgmes/conversion/test/conformity/modified/CgmesConformity1ModifiedConversionTest.java", "diffHunk": "@@ -67,6 +74,48 @@ public void microBERatioPhaseTabularTest() {\n         }\n     }\n \n+    @Test\n+    public void microBEPhaseTapChangerLinearTest() throws IOException {\n+        Conversion.Config config = new Conversion.Config();\n+        Network n = networkModel(CgmesConformity1ModifiedCatalog.microT4BePhaseTapChangerLinear(),\n+            config);\n+\n+        PhaseTapChanger ptc = n.getTwoWindingsTransformer(\"_a708c3bc-465d-4fe7-b6ef-6fa6408a62b0\").getPhaseTapChanger();\n+        assertEquals(25, ptc.getStepCount());\n+\n+        for (int step = 1; step <= ptc.getStepCount(); step++) {\n+            assertEquals(1.0, ptc.getStep(step).getRho(), 0);\n+            assertEquals(0.0, ptc.getStep(step).getR(), 0);\n+            assertEquals(-87.517240, ptc.getStep(1).getX(), 0.000001);\n+            assertEquals(0.0, ptc.getStep(step).getG(), 0);\n+            assertEquals(0.0, ptc.getStep(step).getB(), 0);\n+        }\n+\n+        // Check alpha in some steps\n+        assertEquals(14.4, ptc.getStep(1).getAlpha(), 0.001);\n+        assertEquals(8.4, ptc.getStep(6).getAlpha(), 0.001);\n+        assertEquals(2.4, ptc.getStep(11).getAlpha(), 0.001);\n+        assertEquals(0.0, ptc.getStep(13).getAlpha(), 0.0);\n+        assertEquals(-1.2, ptc.getStep(14).getAlpha(), 0.001);\n+        assertEquals(-7.2, ptc.getStep(19).getAlpha(), 0.001);\n+        assertEquals(-14.4, ptc.getStep(25).getAlpha(), 0.001);\n+    }\n+\n+    private Network networkModel(TestGridModel testGridModel, Conversion.Config config) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjM3Ng=="}, "originalCommit": {"oid": "232033a708d3b92f9247ba45d070f601e45ef804"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 103, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}