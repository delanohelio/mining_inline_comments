{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTE2ODk3", "number": 1269, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzowNjozNFrODxotDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyNToxNVrODxxNtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzczNzExOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/resources/META-INF/services/com.powsybl.contingency.dsl.ExtendableDslExtension", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzowNjozNFrOGFNslA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyNTo0MlrOGFbcnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyMDQ2OA==", "bodyText": "I think this files is not necessary with the @AutoService extension ?", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408120468", "createdAt": "2020-04-14T13:06:34Z", "author": {"login": "sylvlecl"}, "path": "contingency/contingency-dsl/src/test/resources/META-INF/services/com.powsybl.contingency.dsl.ExtendableDslExtension", "diffHunk": "@@ -0,0 +1 @@\n+com.powsybl.contingency.dsl.ProbabilityContingencyDslExtension", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE1Nzc4MQ==", "bodyText": "actually @autoservice didn't work so I put it manually, I guess I forgot to remove the @autoservice annotation", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408157781", "createdAt": "2020-04-14T13:58:34Z", "author": {"login": "pl-buiquang"}, "path": "contingency/contingency-dsl/src/test/resources/META-INF/services/com.powsybl.contingency.dsl.ExtendableDslExtension", "diffHunk": "@@ -0,0 +1 @@\n+com.powsybl.contingency.dsl.ProbabilityContingencyDslExtension", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyMDQ2OA=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTc1OQ==", "bodyText": "I remove this file and after a mvn clean it works. I think you remove it.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408345759", "createdAt": "2020-04-14T18:25:42Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/resources/META-INF/services/com.powsybl.contingency.dsl.ExtendableDslExtension", "diffHunk": "@@ -0,0 +1 @@\n+com.powsybl.contingency.dsl.ProbabilityContingencyDslExtension", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyMDQ2OA=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTExMzU1OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/main/java/com/powsybl/contingency/dsl/ExtendableDslExtension.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMDoyOFrOGFbQUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo1OTo0MlrOGF0hiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MjYxMA==", "bodyText": "Is it really necessary to make this interface generic? I think if we make it generic, this interface is misplaced and should be moved into powsybl-dsl module.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408342610", "createdAt": "2020-04-14T18:20:28Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/main/java/com/powsybl/contingency/dsl/ExtendableDslExtension.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extendable;\n+import com.powsybl.commons.extensions.Extension;\n+import groovy.lang.Binding;\n+import groovy.lang.MetaClass;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public interface ExtendableDslExtension<E extends Extendable<E>> {\n+\n+    Class<E> getExtendableClass();\n+\n+    void addToSpec(MetaClass extSpecMetaClass, List<Extension<E>> contingencyExtensions, Binding binding);\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1NjYxNw==", "bodyText": "at first i thought this would be usefull for other extendable objects, and i tried to put it in common or dsl, then i stepped back.\nI will put it in the dsl package though unused really since I extend it with specific ContingencyDslExtension now. Should we let it for future use or not ?", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408756617", "createdAt": "2020-04-15T10:59:42Z", "author": {"login": "pl-buiquang"}, "path": "contingency/contingency-dsl/src/main/java/com/powsybl/contingency/dsl/ExtendableDslExtension.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extendable;\n+import com.powsybl.commons.extensions.Extension;\n+import groovy.lang.Binding;\n+import groovy.lang.MetaClass;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public interface ExtendableDslExtension<E extends Extendable<E>> {\n+\n+    Class<E> getExtendableClass();\n+\n+    void addToSpec(MetaClass extSpecMetaClass, List<Extension<E>> contingencyExtensions, Binding binding);\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MjYxMA=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTExNDI2OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMDo0MFrOGFbQxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMDo0MFrOGFbQxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MjcyNA==", "bodyText": "remove extra semi-colon", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408342724", "createdAt": "2020-04-14T18:20:40Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "diffHunk": "@@ -85,6 +96,9 @@ class ContingencyDslLoader extends DslLoader {\n                 LOGGER.debug(\"Found contingency '{}'\", id)\n                 observer?.contingencyFound(id)\n                 Contingency contingency = new Contingency(id, elements)\n+                extensionList.forEach({ ext ->\n+                    contingency.addExtension(ext.getClass(), ext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTExNTI3OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMDo1NVrOGFbRVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMDo1NVrOGFbRVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0Mjg2OA==", "bodyText": "Remove extra empty line", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408342868", "createdAt": "2020-04-14T18:20:55Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "diffHunk": "@@ -57,6 +66,8 @@ class ContingencyDslLoader extends DslLoader {\n             if (contingencySpec.equipments.length == 0) {\n                 throw new DslException(\"'equipments' field is empty\")\n             }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTExNzc4OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMTozNlrOGFbS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMTozNlrOGFbS4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MzI2Nw==", "bodyText": "We should introduce a ContingencyDslExtension interface to make this code more compact. The generic seems useless.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408343267", "createdAt": "2020-04-14T18:21:36Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/main/groovy/com/powsybl/contingency/dsl/ContingencyDslLoader.groovy", "diffHunk": "@@ -44,11 +46,18 @@ class ContingencyDslLoader extends DslLoader {\n     }\n \n     static void loadDsl(Binding binding, Network network, Consumer<Contingency> consumer, ContingencyDslObserver observer) {\n-\n         // contingencies\n         binding.contingency = { String id, Closure<Void> closure ->\n             def cloned = closure.clone()\n             ContingencySpec contingencySpec = new ContingencySpec()\n+\n+            List<Extension<Contingency>> extensionList = new ArrayList<>();\n+            for (ExtendableDslExtension dslContingencyExtension : ServiceLoader.load(ExtendableDslExtension.class)) {\n+                if (dslContingencyExtension.getExtendableClass().equals(Contingency.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTExOTg4OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjoxMVrOGFbUSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjoxMVrOGFbUSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MzYyNg==", "bodyText": "Coding style: a space is missing at the end of the line, just before the opening brace.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408343626", "createdAt": "2020-04-14T18:22:11Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+package com.powsybl.contingency.dsl\n+\n+import com.google.auto.service.AutoService\n+import com.powsybl.commons.extensions.Extension\n+import com.powsybl.contingency.Contingency\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+@AutoService(ExtendableDslExtension.class)\n+class ProbabilityContingencyDslExtension implements ExtendableDslExtension<Contingency>{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEyMDY0OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjoyMlrOGFbUtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjoyMlrOGFbUtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MzczMw==", "bodyText": "Remove this extra semi-colon.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408343733", "createdAt": "2020-04-14T18:22:22Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+package com.powsybl.contingency.dsl\n+\n+import com.google.auto.service.AutoService\n+import com.powsybl.commons.extensions.Extension\n+import com.powsybl.contingency.Contingency\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+@AutoService(ExtendableDslExtension.class)\n+class ProbabilityContingencyDslExtension implements ExtendableDslExtension<Contingency>{\n+    @Override\n+    Class<Contingency> getExtendableClass() {\n+        return Contingency.class;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEyMTI5OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjozM1rOGFbVIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjozM1rOGFbVIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0Mzg0Mw==", "bodyText": "Remove this extra semi-colon", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408343843", "createdAt": "2020-04-14T18:22:33Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+package com.powsybl.contingency.dsl\n+\n+import com.google.auto.service.AutoService\n+import com.powsybl.commons.extensions.Extension\n+import com.powsybl.contingency.Contingency\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+@AutoService(ExtendableDslExtension.class)\n+class ProbabilityContingencyDslExtension implements ExtendableDslExtension<Contingency>{\n+    @Override\n+    Class<Contingency> getExtendableClass() {\n+        return Contingency.class;\n+    }\n+\n+    @Override\n+    void addToSpec(MetaClass extSpecMetaClass, List<Extension<Contingency>> contingencyExtensions, Binding binding) {\n+        ProbabilityContingencyExtension ext = new ProbabilityContingencyExtension();\n+        extSpecMetaClass.probability = { Closure<Void> closure ->\n+            def cloned = closure.clone()\n+            ProbabilitySpec spec = new ProbabilitySpec()\n+            cloned.delegate = spec\n+            cloned()\n+\n+            ext.probabilityBase = spec.base\n+            ext.probabilityTimeSeriesRef = spec.tsName\n+            contingencyExtensions.add(ext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEyMjA4OnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMjo0NVrOGFbVmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo0NjoxMVrOGF0G6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0Mzk2MQ==", "bodyText": "Maybe a double is OK there", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408343961", "createdAt": "2020-04-14T18:22:45Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+package com.powsybl.contingency.dsl\n+\n+import com.google.auto.service.AutoService\n+import com.powsybl.commons.extensions.Extension\n+import com.powsybl.contingency.Contingency\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+@AutoService(ExtendableDslExtension.class)\n+class ProbabilityContingencyDslExtension implements ExtendableDslExtension<Contingency>{\n+    @Override\n+    Class<Contingency> getExtendableClass() {\n+        return Contingency.class;\n+    }\n+\n+    @Override\n+    void addToSpec(MetaClass extSpecMetaClass, List<Extension<Contingency>> contingencyExtensions, Binding binding) {\n+        ProbabilityContingencyExtension ext = new ProbabilityContingencyExtension();\n+        extSpecMetaClass.probability = { Closure<Void> closure ->\n+            def cloned = closure.clone()\n+            ProbabilitySpec spec = new ProbabilitySpec()\n+            cloned.delegate = spec\n+            cloned()\n+\n+            ext.probabilityBase = spec.base\n+            ext.probabilityTimeSeriesRef = spec.tsName\n+            contingencyExtensions.add(ext);\n+        }\n+    }\n+\n+    static class ProbabilitySpec {\n+        Double base;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0OTgwMg==", "bodyText": "i want it to be nullable, anyway, this is a test and not a real extension", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408749802", "createdAt": "2020-04-15T10:46:11Z", "author": {"login": "pl-buiquang"}, "path": "contingency/contingency-dsl/src/test/groovy/com/powsybl/contingency/dsl/ProbabilityContingencyDslExtension.groovy", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+package com.powsybl.contingency.dsl\n+\n+import com.google.auto.service.AutoService\n+import com.powsybl.commons.extensions.Extension\n+import com.powsybl.contingency.Contingency\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+@AutoService(ExtendableDslExtension.class)\n+class ProbabilityContingencyDslExtension implements ExtendableDslExtension<Contingency>{\n+    @Override\n+    Class<Contingency> getExtendableClass() {\n+        return Contingency.class;\n+    }\n+\n+    @Override\n+    void addToSpec(MetaClass extSpecMetaClass, List<Extension<Contingency>> contingencyExtensions, Binding binding) {\n+        ProbabilityContingencyExtension ext = new ProbabilityContingencyExtension();\n+        extSpecMetaClass.probability = { Closure<Void> closure ->\n+            def cloned = closure.clone()\n+            ProbabilitySpec spec = new ProbabilitySpec()\n+            cloned.delegate = spec\n+            cloned()\n+\n+            ext.probabilityBase = spec.base\n+            ext.probabilityTimeSeriesRef = spec.tsName\n+            contingencyExtensions.add(ext);\n+        }\n+    }\n+\n+    static class ProbabilitySpec {\n+        Double base;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0Mzk2MQ=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEyNjYyOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/GroovyDslContingenciesProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMzo1OFrOGFbYjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyMzo1OFrOGFbYjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NDcxOQ==", "bodyText": "It just a detail, but:\n\ncould you indent the code propertly\ncould you add another contingency and check below that there is no extension for the second contingency", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408344719", "createdAt": "2020-04-14T18:23:58Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/GroovyDslContingenciesProviderTest.java", "diffHunk": "@@ -179,4 +179,20 @@ public void withComparison() throws IOException {\n                 .getContingencies(network);\n         assertTrue(contingencies.isEmpty());\n     }\n+\n+    @Test\n+    public void testExtension() throws IOException {\n+        writeToDslFile(\"contingency('test') {\",\n+                \"        equipments 'NHV1_NHV2_1'\",\n+                \"           probability {\",\n+                \"              base 0.1\",\n+                \"              tsName 'myTs'\",\n+                \"           }\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEyOTMzOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyNDo0MVrOGFbaQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzozNzo1NFrOGGYY_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTE1Mw==", "bodyText": "Same remark about double", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408345153", "createdAt": "2020-04-14T18:24:41Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.contingency.Contingency;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public class ProbabilityContingencyExtension implements Extension<Contingency> {\n+    private Contingency contingency;\n+\n+    private Double probabilityBase = 1.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1NzgxNg==", "bodyText": "i want it to be nullable, anyway, this is a test and not a real extension", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408757816", "createdAt": "2020-04-15T11:02:00Z", "author": {"login": "pl-buiquang"}, "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.contingency.Contingency;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public class ProbabilityContingencyExtension implements Extension<Contingency> {\n+    private Contingency contingency;\n+\n+    private Double probabilityBase = 1.0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTE1Mw=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM0NDI1Mw==", "bodyText": "You have to choose: if it's nullable, you have to be consistent with the getter. If not, you have to change the variable type.\nEven we are in unit test, it's not a good reason to not pay attention the way we are coding.", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r409344253", "createdAt": "2020-04-16T07:37:54Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.contingency.Contingency;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public class ProbabilityContingencyExtension implements Extension<Contingency> {\n+    private Contingency contingency;\n+\n+    private Double probabilityBase = 1.0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTE1Mw=="}, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTEzMTQxOnYy", "diffSide": "RIGHT", "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyNToxNVrOGFbbng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODoyNToxNVrOGFbbng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTUwMg==", "bodyText": "Proposal: inherit from AbstractExtension", "url": "https://github.com/powsybl/powsybl-core/pull/1269#discussion_r408345502", "createdAt": "2020-04-14T18:25:15Z", "author": {"login": "mathbagu"}, "path": "contingency/contingency-dsl/src/test/java/com/powsybl/contingency/dsl/ProbabilityContingencyExtension.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ *\n+ */\n+\n+package com.powsybl.contingency.dsl;\n+\n+import com.powsybl.commons.extensions.Extension;\n+import com.powsybl.contingency.Contingency;\n+\n+/**\n+ * @author Paul Bui-Quang <paul.buiquang at rte-france.com>\n+ */\n+public class ProbabilityContingencyExtension implements Extension<Contingency> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734c70dff2816b982524a5f66fc73429967ee658"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 88, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}