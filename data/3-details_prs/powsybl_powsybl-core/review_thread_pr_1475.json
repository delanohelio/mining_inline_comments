{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzE2MjMw", "number": 1475, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowMjo1NVrOEk-8ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo0MTozMVrOElwE5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjE1NTE4OnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowMjo1NVrOHUOhNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTozMTo1NVrOHUSBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MTQ0Nw==", "bodyText": "2 times LEG3_SUFFIX. I bet the first one is LEG2_SUFFIX, else it is redundant.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r490971447", "createdAt": "2020-09-18T14:02:55Z", "author": {"login": "nomont"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -213,19 +213,20 @@ private Void readRatioTapChanger(String[] tokens) {\n         int num = Integer.parseInt(tokens[1]);\n         int tap = Integer.parseInt(tokens[2]);\n         String id = mapper.getId(AmplSubset.RATIO_TAP_CHANGER, num);\n-        if (id.endsWith(AmplConstants.LEG2_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {\n+        if (id.endsWith(AmplConstants.LEG1_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe75350ecbec84b789370401ca4509a3e9c630bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAyODc3MQ==", "bodyText": "same remark as @nomont", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r491028771", "createdAt": "2020-09-18T15:31:55Z", "author": {"login": "merkakcha"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -213,19 +213,20 @@ private Void readRatioTapChanger(String[] tokens) {\n         int num = Integer.parseInt(tokens[1]);\n         int tap = Integer.parseInt(tokens[2]);\n         String id = mapper.getId(AmplSubset.RATIO_TAP_CHANGER, num);\n-        if (id.endsWith(AmplConstants.LEG2_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {\n+        if (id.endsWith(AmplConstants.LEG1_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MTQ0Nw=="}, "originalCommit": {"oid": "fe75350ecbec84b789370401ca4509a3e9c630bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTgwMjg5OnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNToxNDo1NVrOHVVn6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjowNTo1OFrOHV2xNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEzNjQyNg==", "bodyText": "Maybe log that we only disconnect the shunt but don't do anything else", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492136426", "createdAt": "2020-09-21T15:14:55Z", "author": {"login": "miovd"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -279,9 +296,13 @@ private Void readShunt(String[] tokens) {\n         }\n \n         if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n-            throw new PowsyblException(\"non linear shunt not supported yet\");\n+            // nothing.\n+            if (sections == 0) {\n+                sc.setSectionCount(sections);\n+            } // else nothing.\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3OTQ3OA==", "bodyText": "Yes okay. Indeed at that stage of the PR, I have converted a non linear shunt as a one section shunt. The AMPL tool has the options: use the shunt as it is or disconnect it. I think that we have to improve the conversion but I am not able to do it by myself.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492679478", "createdAt": "2020-09-22T12:05:58Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -279,9 +296,13 @@ private Void readShunt(String[] tokens) {\n         }\n \n         if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n-            throw new PowsyblException(\"non linear shunt not supported yet\");\n+            // nothing.\n+            if (sections == 0) {\n+                sc.setSectionCount(sections);\n+            } // else nothing.\n+        } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEzNjQyNg=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTgwOTYxOnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNToxNTo1MlrOHVVsMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjowNjoxNFrOHV2x5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEzNzUyMQ==", "bodyText": "You can delete these lines (not comment them)", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492137521", "createdAt": "2020-09-21T15:15:52Z", "author": {"login": "miovd"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1311,9 +1420,9 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                      new Column(\"sections count\"))) {\n             List<String> skipped = new ArrayList<>();\n             for (ShuntCompensator sc : network.getShuntCompensators()) {\n-                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n+/*                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n                     throw new PowsyblException(\"Non linear shunt compensator not yet supported\");\n-                }\n+                }*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3OTY1Mg==", "bodyText": "Ok!", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492679652", "createdAt": "2020-09-22T12:06:14Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1311,9 +1420,9 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                      new Column(\"sections count\"))) {\n             List<String> skipped = new ArrayList<>();\n             for (ShuntCompensator sc : network.getShuntCompensators()) {\n-                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n+/*                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n                     throw new PowsyblException(\"Non linear shunt compensator not yet supported\");\n-                }\n+                }*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEzNzUyMQ=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 239}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDEzNzQ3OnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjoyNDo0M1rOHVY6FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxMToxOFrOHV288g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5MDIyOA==", "bodyText": "I'm surprised by the end of this statement: what happen if id endsWith LEG1 or LEG3 ?", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492190228", "createdAt": "2020-09-21T16:24:43Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -249,12 +249,29 @@ private Void readPhaseTapChanger(String[] tokens) {\n         int num = Integer.parseInt(tokens[1]);\n         int tap = Integer.parseInt(tokens[2]);\n         String id = mapper.getId(AmplSubset.PHASE_TAP_CHANGER, num);\n-        TwoWindingsTransformer twt = network.getTwoWindingsTransformer(id);\n-        if (twt == null) {\n-            throw new AmplException(\"Invalid two windings transformer id '\" + id + \"'\");\n+        if (id.endsWith(AmplConstants.LEG1_SUFFIX) || id.endsWith(AmplConstants.LEG2_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {\n+            ThreeWindingsTransformer twt = network.getThreeWindingsTransformer(id.substring(0, id.indexOf(AmplConstants.LEG2_SUFFIX)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MjQ4Mg==", "bodyText": "I add a test and make a fix. Just tell me if it is okay for you.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492682482", "createdAt": "2020-09-22T12:11:18Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -249,12 +249,29 @@ private Void readPhaseTapChanger(String[] tokens) {\n         int num = Integer.parseInt(tokens[1]);\n         int tap = Integer.parseInt(tokens[2]);\n         String id = mapper.getId(AmplSubset.PHASE_TAP_CHANGER, num);\n-        TwoWindingsTransformer twt = network.getTwoWindingsTransformer(id);\n-        if (twt == null) {\n-            throw new AmplException(\"Invalid two windings transformer id '\" + id + \"'\");\n+        if (id.endsWith(AmplConstants.LEG1_SUFFIX) || id.endsWith(AmplConstants.LEG2_SUFFIX) || id.endsWith(AmplConstants.LEG3_SUFFIX)) {\n+            ThreeWindingsTransformer twt = network.getThreeWindingsTransformer(id.substring(0, id.indexOf(AmplConstants.LEG2_SUFFIX)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5MDIyOA=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDE1MDAxOnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjoyNzo0NlrOHVZB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxMjowMVrOHV2-rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5MjIxMg==", "bodyText": "Are the // nothing really useful?", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492192212", "createdAt": "2020-09-21T16:27:46Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -279,9 +296,13 @@ private Void readShunt(String[] tokens) {\n         }\n \n         if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n-            throw new PowsyblException(\"non linear shunt not supported yet\");\n+            // nothing.\n+            if (sections == 0) {\n+                sc.setSectionCount(sections);\n+            } // else nothing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MjkyNg==", "bodyText": ":-) I have put a TODO instead. I need help to continue with non linear shunts!", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492682926", "createdAt": "2020-09-22T12:12:01Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java", "diffHunk": "@@ -279,9 +296,13 @@ private Void readShunt(String[] tokens) {\n         }\n \n         if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n-            throw new PowsyblException(\"non linear shunt not supported yet\");\n+            // nothing.\n+            if (sections == 0) {\n+                sc.setSectionCount(sections);\n+            } // else nothing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5MjIxMg=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDE4NjkzOnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozNjo1MFrOHVZYkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyODozMVrOHXgfag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODAzMg==", "bodyText": "Are you sure that the g2/b2 (resp. g3/b3) are exported at the good side. Looking to the column names, we have: r, x, g1, g2, b1, b2.\nIt seems that the side1 is always a read end, and the side2 is the middleBus, so I agree with your implementation, but I'm not totally confident and want to be sure it's OK", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492198032", "createdAt": "2020-09-21T16:36:50Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -861,13 +877,13 @@ private void writeThreeWindingsTransformers(AmplExportContext context, TableForm\n                         .writeCell(middleVlNum)\n                         .writeCell(r2)\n                         .writeCell(x2)\n+                        .writeCell(g2)\n                         .writeCell(0.0)\n-                        .writeCell(0.0)\n-                        .writeCell(0.0)\n+                        .writeCell(b2)\n                         .writeCell(0.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NDg2Ng==", "bodyText": "I think that 1 and 2 are respectively the left side of the serie impedance and the right side of the serie impedance. So, I put everything on the left side (=network side). It is okay for you ?", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492684866", "createdAt": "2020-09-22T12:15:28Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -861,13 +877,13 @@ private void writeThreeWindingsTransformers(AmplExportContext context, TableForm\n                         .writeCell(middleVlNum)\n                         .writeCell(r2)\n                         .writeCell(x2)\n+                        .writeCell(g2)\n                         .writeCell(0.0)\n-                        .writeCell(0.0)\n-                        .writeCell(0.0)\n+                        .writeCell(b2)\n                         .writeCell(0.0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODAzMg=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTYyNg==", "bodyText": "On tuesday, we discuss about it with @MioRtia: if the scheme of the website, I totally agree with your proposal", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r494411626", "createdAt": "2020-09-24T15:28:31Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -861,13 +877,13 @@ private void writeThreeWindingsTransformers(AmplExportContext context, TableForm\n                         .writeCell(middleVlNum)\n                         .writeCell(r2)\n                         .writeCell(x2)\n+                        .writeCell(g2)\n                         .writeCell(0.0)\n-                        .writeCell(0.0)\n-                        .writeCell(0.0)\n+                        .writeCell(b2)\n                         .writeCell(0.0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODAzMg=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDE5NDk0OnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozOTowMFrOHVZdbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxNTo0M1rOHV3Gyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5OTI3OQ==", "bodyText": "I would move the initialization inside the if block.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492199279", "createdAt": "2020-09-21T16:39:00Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1339,12 +1448,23 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                 int vlNum = mapper.getInt(AmplSubset.VOLTAGE_LEVEL, t.getVoltageLevel().getId());\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n-                double b1 = 0;\n-                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getBPerSection() * sc.getMaximumSectionCount() * zb;\n+                double b1;\n+                double b2;\n+                int points;\n+                int sectionCount = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 252}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NTAwMg==", "bodyText": "Ok!", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492685002", "createdAt": "2020-09-22T12:15:43Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1339,12 +1448,23 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                 int vlNum = mapper.getInt(AmplSubset.VOLTAGE_LEVEL, t.getVoltageLevel().getId());\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n-                double b1 = 0;\n-                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getBPerSection() * sc.getMaximumSectionCount() * zb;\n+                double b1;\n+                double b2;\n+                int points;\n+                int sectionCount = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5OTI3OQ=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 252}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDIwMTA2OnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo0MDozOVrOHVZhOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxNzoyN1rOHV3Kag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMDI1MQ==", "bodyText": "Why the code is different for the two models: the getMaximumSectionCount is defined in the ShuntCompensator interface, so I guess that points should have the same value.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492200251", "createdAt": "2020-09-21T16:40:39Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1339,12 +1448,23 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                 int vlNum = mapper.getInt(AmplSubset.VOLTAGE_LEVEL, t.getVoltageLevel().getId());\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n-                double b1 = 0;\n-                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getBPerSection() * sc.getMaximumSectionCount() * zb;\n+                double b1;\n+                double b2;\n+                int points;\n+                int sectionCount = 1;\n+                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n+                    b1 = sc.getModel(ShuntCompensatorNonLinearModel.class).getAllSections().get(sc.getSectionCount() - 1).getB() * zb;\n+                    b2 = sc.getB() * zb;\n+                    points = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 256}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NTkzMA==", "bodyText": "Because at this stage, I am making an approximation for non linear shunts. We have to model non linear shunt as rtc and ptc and I think that we have to introduce a new format in the ampl converter. @MioRtia will help me for that but maybe later.", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492685930", "createdAt": "2020-09-22T12:17:27Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1339,12 +1448,23 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                 int vlNum = mapper.getInt(AmplSubset.VOLTAGE_LEVEL, t.getVoltageLevel().getId());\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n-                double b1 = 0;\n-                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getBPerSection() * sc.getMaximumSectionCount() * zb;\n+                double b1;\n+                double b2;\n+                int points;\n+                int sectionCount = 1;\n+                if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n+                    b1 = sc.getModel(ShuntCompensatorNonLinearModel.class).getAllSections().get(sc.getSectionCount() - 1).getB() * zb;\n+                    b2 = sc.getB() * zb;\n+                    points = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMDI1MQ=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 256}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDIwNDUyOnYy", "diffSide": "RIGHT", "path": "ampl-converter/src/test/java/com/powsybl/ampl/converter/AmplNetworkWriterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo0MTozMVrOHVZjWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxNzozN1rOHV3K2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMDc5NQ==", "bodyText": "Is this sufficient to test everything you change in this PR?", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492200795", "createdAt": "2020-09-21T16:41:31Z", "author": {"login": "mathbagu"}, "path": "ampl-converter/src/test/java/com/powsybl/ampl/converter/AmplNetworkWriterTest.java", "diffHunk": "@@ -101,6 +111,19 @@ public void writeBattery() throws IOException {\n     @Test\n     public void writeThreeWindingsTransformer() throws IOException {\n         Network network = ThreeWindingsTransformerNetworkFactory.createWithCurrentLimits();\n+        network.getThreeWindingsTransformer(\"3WT\").getLeg1()\n+                .newPhaseTapChanger()\n+                .beginStep()\n+                .setRho(1)\n+                .setR(0.1)\n+                .setX(1.)\n+                .setB(0.)\n+                .setG(0.)\n+                .setAlpha(0)\n+                .endStep()\n+                .setTapPosition(0)\n+                .setLowTapPosition(0)\n+                .add();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NjA0Mw==", "bodyText": "no :-)", "url": "https://github.com/powsybl/powsybl-core/pull/1475#discussion_r492686043", "createdAt": "2020-09-22T12:17:37Z", "author": {"login": "annetill"}, "path": "ampl-converter/src/test/java/com/powsybl/ampl/converter/AmplNetworkWriterTest.java", "diffHunk": "@@ -101,6 +111,19 @@ public void writeBattery() throws IOException {\n     @Test\n     public void writeThreeWindingsTransformer() throws IOException {\n         Network network = ThreeWindingsTransformerNetworkFactory.createWithCurrentLimits();\n+        network.getThreeWindingsTransformer(\"3WT\").getLeg1()\n+                .newPhaseTapChanger()\n+                .beginStep()\n+                .setRho(1)\n+                .setR(0.1)\n+                .setX(1.)\n+                .setB(0.)\n+                .setG(0.)\n+                .setAlpha(0)\n+                .endStep()\n+                .setTapPosition(0)\n+                .setLowTapPosition(0)\n+                .add();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMDc5NQ=="}, "originalCommit": {"oid": "b5fad5c6e060cc0c90eaa7f4f73328b0838cf0cb"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 45, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}