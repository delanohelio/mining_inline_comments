{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjE1MjY5", "number": 1161, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMToyNTo1MlrODhCPVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MzozMFrODluHrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTY2MjkyOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMToyNTo1MlrOFrknkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMToyNTo1MlrOFrknkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzMzA0MQ==", "bodyText": "Create a complete message instead and use it in Message.format()", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r381233041", "createdAt": "2020-02-19T11:25:52Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "diffHunk": "@@ -21,6 +21,8 @@\n  */\n public final class IidmXmlUtil {\n \n+    private static final String FOR_IIDM_XML_VERSION = \" for IIDM-XML version \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2f04ccb898f103878728e5accfbfdad8b676bb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTY3MTE5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMToyOTowMlrOFrks0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMzowM1rOFrmYmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNDM4Ng==", "bodyText": "I'm not sure it's what we discussed. Adding a vertex will create a terminal. The idea is to create a terminal only if you need to attach something. As you remove the call to clean(), the unnecessary terminals are not removed.\nIt's compliant with the current version of powsybl, but I thought we wanted to go further.", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r381234386", "createdAt": "2020-02-19T11:29:02Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "diffHunk": "@@ -872,13 +863,23 @@ private void checkTerminal(TerminalExt terminal) {\n         }\n     }\n \n+    private void addNodes(int node) {\n+        int oldCount = graph.getVertexCount();\n+        if (node >= oldCount) {\n+            for (int i = oldCount; i < node + 1; i++) {\n+                graph.addVertex();\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2f04ccb898f103878728e5accfbfdad8b676bb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MTk3OA==", "bodyText": "Okay, I was not really sure about the conclusion of what had been decided last time... If we want to create a vertex only each time a Terminal is created, we might not need a clean method (the vertex will be deleted when not used and created again if reused: the topology is always \"clean\" as there never is an unused vertex).", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r381261978", "createdAt": "2020-02-19T12:33:03Z", "author": {"login": "miovd"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "diffHunk": "@@ -872,13 +863,23 @@ private void checkTerminal(TerminalExt terminal) {\n         }\n     }\n \n+    private void addNodes(int node) {\n+        int oldCount = graph.getVertexCount();\n+        if (node >= oldCount) {\n+            for (int i = oldCount; i < node + 1; i++) {\n+                graph.addVertex();\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNDM4Ng=="}, "originalCommit": {"oid": "0a2f04ccb898f103878728e5accfbfdad8b676bb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTY3NDg0OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozMDozMVrOFrkvNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozMDozMVrOFrkvNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNDk5OQ==", "bodyText": "I think I will rename this method to reserveNodes or ensureNode. The s in the name of the method seems strange for someone who reads the code. You have to go in the implementation to understand why you put an s.", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r381234999", "createdAt": "2020-02-19T11:30:31Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "diffHunk": "@@ -166,6 +166,8 @@ public Switch add() {\n             }\n             SwitchImpl aSwitch = new SwitchImpl(NodeBreakerVoltageLevel.this, id, getName(), kind, open, retained, fictitious);\n             getNetwork().getIndex().checkAndAdd(aSwitch);\n+            addNodes(node1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2f04ccb898f103878728e5accfbfdad8b676bb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTY3NjE4OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/BusBreakerVoltageLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozMTowMFrOFrkwBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTozMTowMFrOFrkwBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNTIwNw==", "bodyText": "Maybe we could keep the name of the old method?", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r381235207", "createdAt": "2020-02-19T11:31:00Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/BusBreakerVoltageLevel.java", "diffHunk": "@@ -757,7 +752,7 @@ public void detach(final TerminalExt terminal) {\n     }\n \n     @Override\n-    public void clean() {\n+    public void cleanTopology() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2f04ccb898f103878728e5accfbfdad8b676bb"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc2MTU5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/VoltageLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MToxNVrOFyw5EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MToxNVrOFyw5EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NDE2MA==", "bodyText": "Please add Javadoc on this method to well understand what is expected", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388774160", "createdAt": "2020-03-06T08:41:15Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/VoltageLevel.java", "diffHunk": "@@ -358,20 +358,28 @@\n         }\n \n         /**\n-         * Get the number of node.\n+         * Get the count of used nodes (nodes attached to an equipment, a switch or an internal connection).\n+         *\n+         * @deprecated Depending on your use case, use {@link #getMaximumNodeIndex()} or {@link #getNodeCapacity()}.\n          */\n-        int getNodeCount();\n+        @Deprecated\n+        default int getNodeCount() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        default int getMaximumNodeIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc2MjA5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/VoltageLevel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MToyN1rOFyw5WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo1MjoxMVrOFy7bWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NDIzMg==", "bodyText": "Please add Javadoc on this method to well understand what is expected", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388774232", "createdAt": "2020-03-06T08:41:27Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/VoltageLevel.java", "diffHunk": "@@ -358,20 +358,28 @@\n         }\n \n         /**\n-         * Get the number of node.\n+         * Get the count of used nodes (nodes attached to an equipment, a switch or an internal connection).\n+         *\n+         * @deprecated Depending on your use case, use {@link #getMaximumNodeIndex()} or {@link #getNodeCapacity()}.\n          */\n-        int getNodeCount();\n+        @Deprecated\n+        default int getNodeCount() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        default int getMaximumNodeIndex() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        default int getNodeCapacity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0Njc3Ng==", "bodyText": "At the end, I deleted this method since it always returns getMaximumNodeIndex() + 1. It was useful before having cleanVertices.", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388946776", "createdAt": "2020-03-06T14:52:11Z", "author": {"login": "miovd"}, "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/VoltageLevel.java", "diffHunk": "@@ -358,20 +358,28 @@\n         }\n \n         /**\n-         * Get the number of node.\n+         * Get the count of used nodes (nodes attached to an equipment, a switch or an internal connection).\n+         *\n+         * @deprecated Depending on your use case, use {@link #getMaximumNodeIndex()} or {@link #getNodeCapacity()}.\n          */\n-        int getNodeCount();\n+        @Deprecated\n+        default int getNodeCount() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        default int getMaximumNodeIndex() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        default int getNodeCapacity() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NDIzMg=="}, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc2OTQ1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0NDowMVrOFyw9wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0NDowMVrOFyw9wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NTM2Mg==", "bodyText": "I think you should also get edges between node2 and node1 (the graph is not directed)", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388775362", "createdAt": "2020-03-06T08:44:01Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NodeBreakerVoltageLevel.java", "diffHunk": "@@ -647,6 +653,21 @@ public int getNode2() {\n                     });\n         }\n \n+        @Override\n+        public void removeInternalConnections(int node1, int node2) {\n+            int[] internalConnectionsToBeRemoved = Arrays.stream(graph.getEdges())\n+                    .filter(e -> graph.getEdgeObject(e) == null)\n+                    .filter(e -> graph.getEdgeVertex1(e) == node1 && graph.getEdgeVertex2(e) == node2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc3NzUzOnYy", "diffSide": "RIGHT", "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraph.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0NzoxMVrOFyxCzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo0NzowNVrOFy7PTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NjY1Mg==", "bodyText": "Add a Javadoc also there", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388776652", "createdAt": "2020-03-06T08:47:11Z", "author": {"login": "mathbagu"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraph.java", "diffHunk": "@@ -49,6 +56,10 @@\n      */\n     int getVertexCount();\n \n+    default int getMaximumVertexIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0MzY5Mw==", "bodyText": "At the end, I deleted the method since it is basically getVertexCapacity() - 1", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388943693", "createdAt": "2020-03-06T14:47:05Z", "author": {"login": "miovd"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraph.java", "diffHunk": "@@ -49,6 +56,10 @@\n      */\n     int getVertexCount();\n \n+    default int getMaximumVertexIndex() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NjY1Mg=="}, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc4MzY2OnYy", "diffSide": "RIGHT", "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0OToxN1rOFyxGgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0OToxN1rOFyxGgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzYwMg==", "bodyText": "Are you sure this is efficient: should we store the removedVertices in another container (ordered) like a set?", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388777602", "createdAt": "2020-03-06T08:49:17Z", "author": {"login": "mathbagu"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -129,6 +129,24 @@ public int addVertex() {\n         return v;\n     }\n \n+    @Override\n+    public void addVertexIfNotPresent(int v) {\n+        if (v < vertices.size()) {\n+            if (removedVertices.contains(v)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc4NTQyOnYy", "diffSide": "RIGHT", "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MDowMlrOFyxHtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MDowMlrOFyxHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzkxMQ==", "bodyText": "Maybe we should also rename removedVertices to availableVertices`", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388777911", "createdAt": "2020-03-06T08:50:02Z", "author": {"login": "mathbagu"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -129,6 +129,24 @@ public int addVertex() {\n         return v;\n     }\n \n+    @Override\n+    public void addVertexIfNotPresent(int v) {\n+        if (v < vertices.size()) {\n+            if (removedVertices.contains(v)) {\n+                vertices.set(v, new Vertex<>());\n+                removedVertices.remove(v);\n+            }\n+        } else {\n+            for (int i = vertices.size(); i < v; i++) {\n+                vertices.add(null);\n+                removedVertices.add(i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc4NzQzOnYy", "diffSide": "RIGHT", "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MDo0N1rOFyxJAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MDo0N1rOFyxJAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3ODI0Mw==", "bodyText": "I'm not sure it is really effecient to have a recursion here where a for-loop looks OK", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388778243", "createdAt": "2020-03-06T08:50:47Z", "author": {"login": "mathbagu"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -149,11 +167,29 @@ public V removeVertex(int v) {\n         return obj;\n     }\n \n+    private void cleanVertices(int v) {\n+        vertices.remove(v);\n+        removedVertices.remove(v);\n+        if (removedVertices.contains(v - 1)) {\n+            cleanVertices(v - 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc5NTMzOnYy", "diffSide": "RIGHT", "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo1MzozMFrOFyxNtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTowMToxMVrOFy7x2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3OTQ0Ng==", "bodyText": "I'm not sure to understand what this method does:\nif (!removedVertices.contains(i - 1)) seems equivalent to if (vertices.at(i) != null ?\nIs it really possible to have null vertices at the end of the list. The cleanVertices should avoid that situation?", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388779446", "createdAt": "2020-03-06T08:53:30Z", "author": {"login": "mathbagu"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -149,11 +167,29 @@ public V removeVertex(int v) {\n         return obj;\n     }\n \n+    private void cleanVertices(int v) {\n+        vertices.remove(v);\n+        removedVertices.remove(v);\n+        if (removedVertices.contains(v - 1)) {\n+            cleanVertices(v - 1);\n+        }\n+    }\n+\n     @Override\n     public int getVertexCount() {\n         return vertices.size() - removedVertices.size();\n     }\n \n+    @Override\n+    public int getMaximumVertexIndex() {\n+        for (int i = vertices.size(); i > 0; i--) {\n+            if (!removedVertices.contains(i - 1)) {\n+                return i - 1;\n+            }\n+        }\n+        return -1;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNDE1NQ==", "bodyText": "Yes, this was coded before I thought of doing cleanVertices, i will modify it", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388814155", "createdAt": "2020-03-06T10:04:02Z", "author": {"login": "miovd"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -149,11 +167,29 @@ public V removeVertex(int v) {\n         return obj;\n     }\n \n+    private void cleanVertices(int v) {\n+        vertices.remove(v);\n+        removedVertices.remove(v);\n+        if (removedVertices.contains(v - 1)) {\n+            cleanVertices(v - 1);\n+        }\n+    }\n+\n     @Override\n     public int getVertexCount() {\n         return vertices.size() - removedVertices.size();\n     }\n \n+    @Override\n+    public int getMaximumVertexIndex() {\n+        for (int i = vertices.size(); i > 0; i--) {\n+            if (!removedVertices.contains(i - 1)) {\n+                return i - 1;\n+            }\n+        }\n+        return -1;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3OTQ0Ng=="}, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1MjUzNw==", "bodyText": "At the end, I deleted this method as it is redundant with getNodeCapacity", "url": "https://github.com/powsybl/powsybl-core/pull/1161#discussion_r388952537", "createdAt": "2020-03-06T15:01:11Z", "author": {"login": "miovd"}, "path": "math/src/main/java/com/powsybl/math/graph/UndirectedGraphImpl.java", "diffHunk": "@@ -149,11 +167,29 @@ public V removeVertex(int v) {\n         return obj;\n     }\n \n+    private void cleanVertices(int v) {\n+        vertices.remove(v);\n+        removedVertices.remove(v);\n+        if (removedVertices.contains(v - 1)) {\n+            cleanVertices(v - 1);\n+        }\n+    }\n+\n     @Override\n     public int getVertexCount() {\n         return vertices.size() - removedVertices.size();\n     }\n \n+    @Override\n+    public int getMaximumVertexIndex() {\n+        for (int i = vertices.size(); i > 0; i--) {\n+            if (!removedVertices.contains(i - 1)) {\n+                return i - 1;\n+            }\n+        }\n+        return -1;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3OTQ0Ng=="}, "originalCommit": {"oid": "6510c45bf33389c1a5a041d4d9958aaf3034aba8"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 64, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}