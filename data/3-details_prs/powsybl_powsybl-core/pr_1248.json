{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NjU3NTk1", "number": 1248, "title": "Enable the configuration YML to be updated by a JSON file", "bodyText": "Please check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nfix #743\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nBug fix.\nWhat is the current behavior? (You can also link to an open issue here)\nFor loadflow and security analysis computations :\nThe configuration provided by the configuration file (yml) is completely overwritten when using a JSON file and the missing values in the json file are set to default.\nWhat is the new behavior (if this is a feature change)?\nNow the json file just updates the fields and keep the configuration provided by the yml file.\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-03-30T13:39:10Z", "url": "https://github.com/powsybl/powsybl-core/pull/1248", "merged": true, "mergeCommit": {"oid": "99428d407cb9734d9462738083550e2cfde38ef7"}, "closed": true, "closedAt": "2020-04-15T08:31:20Z", "author": {"login": "EtienneLt"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTBleigBqjMxODI4ODgxNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXzfwTgH2gAyMzk1NjU3NTk1OjY2ZDdmMGJlZDkzMTA5YmM4YTJmOTc2YzQ0NjRjZmJhNTI1MTkzYWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1654ae7ddaf3a698c15381377435e2a36119647c", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/1654ae7ddaf3a698c15381377435e2a36119647c", "committedDate": "2020-03-30T13:28:10Z", "message": "Some tests are now implemented"}, "afterCommit": {"oid": "77278a0420dbaab6a53bd372fcb5002511600f0c", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/77278a0420dbaab6a53bd372fcb5002511600f0c", "committedDate": "2020-03-31T10:24:02Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienn3L <lesoteti@gm0winl226.bureau.si.interne>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77278a0420dbaab6a53bd372fcb5002511600f0c", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/77278a0420dbaab6a53bd372fcb5002511600f0c", "committedDate": "2020-03-31T10:24:02Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienn3L <lesoteti@gm0winl226.bureau.si.interne>"}, "afterCommit": {"oid": "fdf47fb37b1ab0a0c0f3f46534f29b0bb2aedaf1", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/fdf47fb37b1ab0a0c0f3f46534f29b0bb2aedaf1", "committedDate": "2020-03-31T11:54:31Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdf47fb37b1ab0a0c0f3f46534f29b0bb2aedaf1", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/fdf47fb37b1ab0a0c0f3f46534f29b0bb2aedaf1", "committedDate": "2020-03-31T11:54:31Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "f3f79fb4f82c1d7671353f83f603bf113c54b6f7", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/f3f79fb4f82c1d7671353f83f603bf113c54b6f7", "committedDate": "2020-03-31T14:26:33Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3f79fb4f82c1d7671353f83f603bf113c54b6f7", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/f3f79fb4f82c1d7671353f83f603bf113c54b6f7", "committedDate": "2020-03-31T14:26:33Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/e787289fed303da6e9b41dd8d7bbdabb2b867383", "committedDate": "2020-04-01T08:47:32Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NDQ1ODU4", "url": "https://github.com/powsybl/powsybl-core/pull/1248#pullrequestreview-385445858", "createdAt": "2020-04-01T10:11:50Z", "commit": {"oid": "f3f79fb4f82c1d7671353f83f603bf113c54b6f7"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDoxNTozOVrOF-6B8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTozNToyNlrOF-8k7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwNjgwMQ==", "bodyText": "I think it would be slightly better to do the same thing as before here:\njust call the deserialize() method which will read the json and overwrite the extension", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401506801", "createdAt": "2020-04-01T10:15:39Z", "author": {"login": "sylvlecl"}, "path": "commons/src/main/java/com/powsybl/commons/extensions/ExtensionJsonSerializer.java", "diffHunk": "@@ -23,4 +23,8 @@\n     void serialize(E extension, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException;\n \n     E deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException;\n+\n+    default E deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, E parameters) throws IOException {\n+        return parameters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxMDgzOQ==", "bodyText": "I think here there will be an issue if you have multiple extensions : the one you get is not necessarily of type E !\nMaybe what you can do is use getExtensionByName instead of iterating on all extensions.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401510839", "createdAt": "2020-04-01T10:22:39Z", "author": {"login": "sylvlecl"}, "path": "commons/src/main/java/com/powsybl/commons/json/JsonUtil.java", "diffHunk": "@@ -216,6 +216,51 @@ public static void writeOptionalIntegerField(JsonGenerator jsonGenerator, String\n         return notFound;\n     }\n \n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, T toUpdatedParameters) throws IOException {\n+        return updateExtensions(parser, context, SUPPLIER.get(), null, toUpdatedParameters);\n+    }\n+\n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdateExtension) throws IOException {\n+        Objects.requireNonNull(parser);\n+        Objects.requireNonNull(context);\n+        Objects.requireNonNull(supplier);\n+        Objects.requireNonNull(toUpdateExtension);\n+\n+        List<Extension<T>> extensions = new ArrayList<>();\n+        while (parser.nextToken() != JsonToken.END_OBJECT) {\n+            Extension<T> extension = updateExtension(parser, context, supplier, extensionsNotFound, toUpdateExtension);\n+            if (extension != null) {\n+                extensions.add(extension);\n+            }\n+        }\n+        return extensions;\n+    }\n+\n+    public static <T extends Extendable, E extends Extension<T>> E updateExtension(JsonParser parser, DeserializationContext context,\n+                                                                                   ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdateExtensions) throws IOException {\n+        String extensionName = parser.getCurrentName();\n+        ExtensionJsonSerializer<T, E> extensionJsonSerializer = supplier.findProvider(extensionName);\n+        if (extensionJsonSerializer != null) {\n+            parser.nextToken();\n+            for (Object ext : toUpdateExtensions.getExtensions()) {\n+                if (ext != null) {\n+                    E toUpdateExtension = (E) ext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxMTIzNw==", "bodyText": "Note: you could check this with a unit test with 2 extensions.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401511237", "createdAt": "2020-04-01T10:23:23Z", "author": {"login": "sylvlecl"}, "path": "commons/src/main/java/com/powsybl/commons/json/JsonUtil.java", "diffHunk": "@@ -216,6 +216,51 @@ public static void writeOptionalIntegerField(JsonGenerator jsonGenerator, String\n         return notFound;\n     }\n \n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, T toUpdatedParameters) throws IOException {\n+        return updateExtensions(parser, context, SUPPLIER.get(), null, toUpdatedParameters);\n+    }\n+\n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdateExtension) throws IOException {\n+        Objects.requireNonNull(parser);\n+        Objects.requireNonNull(context);\n+        Objects.requireNonNull(supplier);\n+        Objects.requireNonNull(toUpdateExtension);\n+\n+        List<Extension<T>> extensions = new ArrayList<>();\n+        while (parser.nextToken() != JsonToken.END_OBJECT) {\n+            Extension<T> extension = updateExtension(parser, context, supplier, extensionsNotFound, toUpdateExtension);\n+            if (extension != null) {\n+                extensions.add(extension);\n+            }\n+        }\n+        return extensions;\n+    }\n+\n+    public static <T extends Extendable, E extends Extension<T>> E updateExtension(JsonParser parser, DeserializationContext context,\n+                                                                                   ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdateExtensions) throws IOException {\n+        String extensionName = parser.getCurrentName();\n+        ExtensionJsonSerializer<T, E> extensionJsonSerializer = supplier.findProvider(extensionName);\n+        if (extensionJsonSerializer != null) {\n+            parser.nextToken();\n+            for (Object ext : toUpdateExtensions.getExtensions()) {\n+                if (ext != null) {\n+                    E toUpdateExtension = (E) ext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxMDgzOQ=="}, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxMTc1OA==", "bodyText": "I suggest to leave the default implementation for those extensions where it's not really useful to implement it, it will save some lines of code :)", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401511758", "createdAt": "2020-04-01T10:24:18Z", "author": {"login": "sylvlecl"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/BarExtSerializer.java", "diffHunk": "@@ -33,6 +37,28 @@ public BarExt deserialize(JsonParser parser, DeserializationContext deserializat\n         return null;\n     }\n \n+    private interface SerializationSpec {\n+\n+        @JsonIgnore\n+        String getName();\n+\n+        @JsonIgnore\n+        Foo getExtendable();\n+    }\n+\n+    private static ObjectMapper createMapper() {\n+        return JsonUtil.createObjectMapper()\n+                .addMixIn(BarExt.class, SerializationSpec.class);\n+    }\n+\n+    @Override\n+    public BarExt deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, BarExt parameters) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxMzUwNA==", "bodyText": "Maybe for this test we should add a second parameter, like you did in loadflow tests, because here we don't check if other parameters still have their initial value.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401513504", "createdAt": "2020-04-01T10:27:36Z", "author": {"login": "sylvlecl"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/ExtensionTest.java", "diffHunk": "@@ -109,4 +108,15 @@ public void testWriteJson() throws IOException {\n             assertTrue(notFound.contains(\"BarExt\"));\n         }\n     }\n+\n+    @Test\n+    public void testUpdateAndDeserialize() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false);\n+        foo.addExtension(FooExt.class, fooExt);\n+        boolean initValue = foo.getExtension(FooExt.class).getValue();\n+        FooDeserializer.update(getClass().getResourceAsStream(\"/extensionsUpdate.json\"), foo);\n+        assertNotEquals(initValue, foo.getExtension(FooExt.class).getValue());\n+        assertEquals(foo.getExtension(FooExt.class).getValue(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0MjAzMw==", "bodyText": "I think it's better to leave the default implementation here.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401542033", "createdAt": "2020-04-01T11:22:46Z", "author": {"login": "sylvlecl"}, "path": "contingency/contingency-api/src/test/java/com/powsybl/contingency/json/ContingencyJsonTest.java", "diffHunk": "@@ -123,6 +123,11 @@ public DummyExtension deserialize(JsonParser jsonParser, DeserializationContext\n             return new DummyExtension();\n         }\n \n+        @Override\n+        public DummyExtension deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, DummyExtension parameters) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0MzEyOQ==", "bodyText": "As we are in an update operation here (since we have an initial value of parameters, I think it's simpler to call updateExtensions in any case. If there is no extension, it will have the same behaviour anyway.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401543129", "createdAt": "2020-04-01T11:24:51Z", "author": {"login": "sylvlecl"}, "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/json/LoadFlowParametersDeserializer.java", "diffHunk": "@@ -71,16 +69,18 @@ public LoadFlowParameters deserialize(JsonParser parser, DeserializationContext\n \n                 case \"extensions\":\n                     parser.nextToken();\n-                    extensions = JsonUtil.readExtensions(parser, deserializationContext, JsonLoadFlowParameters.getExtensionSerializers());\n+                    if (parameters.getExtensions().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0MzMyMQ==", "bodyText": "Don't forget to delete it ;)", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401543321", "createdAt": "2020-04-01T11:25:16Z", "author": {"login": "sylvlecl"}, "path": "loadflow/loadflow-api/src/main/java/com/powsybl/loadflow/tools/RunLoadFlowTool.java", "diffHunk": "@@ -160,6 +161,7 @@ public void run(CommandLine line, ToolRunningContext context) throws Exception {\n         }\n \n         LoadFlowParameters params = LoadFlowParameters.load();\n+        // System.out.print(\"parametre avant fusion : \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NDY2Mg==", "bodyText": "Same as for load flow parameters : I think it's simpler to call the \"update\" event when there is no extension.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401544662", "createdAt": "2020-04-01T11:27:48Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/main/java/com/powsybl/security/json/SecurityAnalysisParametersDeserializer.java", "diffHunk": "@@ -51,16 +49,17 @@ public SecurityAnalysisParameters deserialize(JsonParser parser, Deserialization\n \n                 case \"extensions\":\n                     parser.nextToken();\n-                    extensions = JsonUtil.readExtensions(parser, deserializationContext, JsonSecurityAnalysisParameters.getExtensionSerializers());\n+                    if (parameters.getExtensions().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NTQ4OQ==", "bodyText": "(I think you probably committed this by mistake)", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401545489", "createdAt": "2020-04-01T11:29:24Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/test/resources/ActivePowerExtension.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"version\" : \"1.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NTcxOA==", "bodyText": "Probably better to leave the default implementation instead.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401545718", "createdAt": "2020-04-01T11:29:49Z", "author": {"login": "sylvlecl"}, "path": "sensitivity-api/src/test/java/com/powsybl/sensitivity/json/JsonSensitivityComputationParametersTest.java", "diffHunk": "@@ -89,6 +89,11 @@ public DummyExtension deserialize(JsonParser jsonParser, DeserializationContext\n             return new DummyExtension();\n         }\n \n+        @Override\n+        public DummyExtension deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, DummyExtension parameters) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NTg1NQ==", "bodyText": "Same : I think it's better to leave the default implementation here.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401545855", "createdAt": "2020-04-01T11:30:06Z", "author": {"login": "sylvlecl"}, "path": "dynamic-simulation/dynamic-simulation-api/src/test/java/com/powsybl/dynamicsimulation/json/JsonDynamicSimulationParametersTest.java", "diffHunk": "@@ -89,6 +89,11 @@ public DummyExtension deserialize(JsonParser jsonParser, DeserializationContext\n             return new DummyExtension();\n         }\n \n+        @Override\n+        public DummyExtension deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, DummyExtension parameters) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0ODUyNw==", "bodyText": "Detail for the assertions:\nthe first parameter should be the \"expected\" value, so here it would be more logical to invert the 2 parameters (same for other assertions).", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r401548527", "createdAt": "2020-04-01T11:35:26Z", "author": {"login": "sylvlecl"}, "path": "security-analysis/security-analysis-api/src/test/java/com/powsybl/security/json/JsonSecurityAnalysisParametersTest.java", "diffHunk": "@@ -61,12 +63,61 @@ public void readError() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void updateExtensions() {\n+        SecurityAnalysisParameters parameters = new SecurityAnalysisParameters();\n+        DummyExtension extension = new DummyExtension();\n+        extension.setParameterBoolean(false);\n+        extension.setParameterString(\"Bonjour\");\n+        extension.setParameterDouble(2.8);\n+        DummyExtension oldExtension = new DummyExtension(extension);\n+        parameters.addExtension(DummyExtension.class, extension);\n+        JsonSecurityAnalysisParameters.update(parameters, getClass().getResourceAsStream(\"/SecurityAnalysisParametersExtensionUpdate.json\"));\n+        DummyExtension updatedExtension = parameters.getExtension(DummyExtension.class);\n+        assertEquals(updatedExtension.isParameterBoolean(), oldExtension.isParameterBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e787289fed303da6e9b41dd8d7bbdabb2b867383", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/e787289fed303da6e9b41dd8d7bbdabb2b867383", "committedDate": "2020-04-01T08:47:32Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "37af54a8d3a9d6acf787fff4addc485d363941a7", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/37af54a8d3a9d6acf787fff4addc485d363941a7", "committedDate": "2020-04-01T13:03:36Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37af54a8d3a9d6acf787fff4addc485d363941a7", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/37af54a8d3a9d6acf787fff4addc485d363941a7", "committedDate": "2020-04-01T13:03:36Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "effbfd0894d5e1d24924ed462033754ec5a0a9ff", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/effbfd0894d5e1d24924ed462033754ec5a0a9ff", "committedDate": "2020-04-02T09:56:00Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "effbfd0894d5e1d24924ed462033754ec5a0a9ff", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/effbfd0894d5e1d24924ed462033754ec5a0a9ff", "committedDate": "2020-04-02T09:56:00Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/564b518698ec568d1bb4101361b801f6af8875ea", "committedDate": "2020-04-02T10:19:23Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/564b518698ec568d1bb4101361b801f6af8875ea", "committedDate": "2020-04-02T10:19:23Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "d6254d117b6a34bcb5f8e0ba77320582aeac47e5", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/d6254d117b6a34bcb5f8e0ba77320582aeac47e5", "committedDate": "2020-04-06T13:53:06Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTExODUy", "url": "https://github.com/powsybl/powsybl-core/pull/1248#pullrequestreview-388111852", "createdAt": "2020-04-06T10:15:05Z", "commit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDoxNTowNVrOGBQ8GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDoyOTozN1rOGBah5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk3OTI4OA==", "bodyText": "@sylvlecl I agree that this should be the default implementation if we want to prevent breaking the API but isn't it a bit error-prone?", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r403979288", "createdAt": "2020-04-06T10:15:05Z", "author": {"login": "MioRtia"}, "path": "commons/src/main/java/com/powsybl/commons/extensions/ExtensionJsonSerializer.java", "diffHunk": "@@ -23,4 +23,8 @@\n     void serialize(E extension, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException;\n \n     E deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException;\n+\n+    default E deserializeAndUpdate(JsonParser jsonParser, DeserializationContext deserializationContext, E parameters) throws IOException {\n+        return deserialize(jsonParser, deserializationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk4NjgyOA==", "bodyText": "Since this method is public, you should maybe call Objects.requireNonNull for parameters which must be not null", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r403986828", "createdAt": "2020-04-06T10:28:09Z", "author": {"login": "MioRtia"}, "path": "commons/src/main/java/com/powsybl/commons/json/JsonUtil.java", "diffHunk": "@@ -217,6 +217,48 @@ public static void writeOptionalIntegerField(JsonGenerator jsonGenerator, String\n         return notFound;\n     }\n \n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, T toUpdatedParameters) throws IOException {\n+        return updateExtensions(parser, context, SUPPLIER.get(), null, toUpdatedParameters);\n+    }\n+\n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdatedParameters) throws IOException {\n+        Objects.requireNonNull(parser);\n+        Objects.requireNonNull(context);\n+        Objects.requireNonNull(supplier);\n+        Objects.requireNonNull(toUpdatedParameters);\n+\n+        List<Extension<T>> extensions = new ArrayList<>();\n+        while (parser.nextToken() != JsonToken.END_OBJECT) {\n+            Extension<T> extension = updateExtension(parser, context, supplier, extensionsNotFound, toUpdatedParameters);\n+            if (extension != null) {\n+                extensions.add(extension);\n+            }\n+        }\n+        return extensions;\n+    }\n+\n+    public static <T extends Extendable, E extends Extension<T>> E updateExtension(JsonParser parser, DeserializationContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1MzU4NA==", "bodyText": "I would avoid using french words (even in tests)", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404053584", "createdAt": "2020-04-06T12:31:46Z", "author": {"login": "MioRtia"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/ExtensionTest.java", "diffHunk": "@@ -109,4 +108,27 @@ public void testWriteJson() throws IOException {\n             assertTrue(notFound.contains(\"BarExt\"));\n         }\n     }\n+\n+    @Test\n+    public void testUpdateAndDeserialize() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1MzY2MA==", "bodyText": "Same remark", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404053660", "createdAt": "2020-04-06T12:31:54Z", "author": {"login": "MioRtia"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/ExtensionTest.java", "diffHunk": "@@ -109,4 +108,27 @@ public void testWriteJson() throws IOException {\n             assertTrue(notFound.contains(\"BarExt\"));\n         }\n     }\n+\n+    @Test\n+    public void testUpdateAndDeserialize() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");\n+        foo.addExtension(FooExt.class, fooExt);\n+        FooDeserializer.update(getClass().getResourceAsStream(\"/extensionsUpdate.json\"), foo);\n+        assertEquals(true, foo.getExtension(FooExt.class).getValue());\n+        assertEquals(\"Bonjour\", foo.getExtension(FooExt.class).getValue2());\n+    }\n+\n+    @Test\n+    public void testUpdateWith2Extensions() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1Mzc0Ng==", "bodyText": "Same remark", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404053746", "createdAt": "2020-04-06T12:32:05Z", "author": {"login": "MioRtia"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/ExtensionTest.java", "diffHunk": "@@ -109,4 +108,27 @@ public void testWriteJson() throws IOException {\n             assertTrue(notFound.contains(\"BarExt\"));\n         }\n     }\n+\n+    @Test\n+    public void testUpdateAndDeserialize() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");\n+        foo.addExtension(FooExt.class, fooExt);\n+        FooDeserializer.update(getClass().getResourceAsStream(\"/extensionsUpdate.json\"), foo);\n+        assertEquals(true, foo.getExtension(FooExt.class).getValue());\n+        assertEquals(\"Bonjour\", foo.getExtension(FooExt.class).getValue2());\n+    }\n+\n+    @Test\n+    public void testUpdateWith2Extensions() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");\n+        BarExt barExt = new BarExt(true);\n+        foo.addExtension(FooExt.class, fooExt);\n+        foo.addExtension(BarExt.class, barExt);\n+        FooDeserializer.update(getClass().getResourceAsStream(\"/extensions.json\"), foo);\n+        assertEquals(true, foo.getExtension(FooExt.class).getValue());\n+        assertEquals(\"Bonjour\", foo.getExtension(FooExt.class).getValue2());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1MzgxNA==", "bodyText": "Same remark", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404053814", "createdAt": "2020-04-06T12:32:11Z", "author": {"login": "MioRtia"}, "path": "commons/src/test/java/com/powsybl/commons/extensions/ExtensionTest.java", "diffHunk": "@@ -109,4 +108,27 @@ public void testWriteJson() throws IOException {\n             assertTrue(notFound.contains(\"BarExt\"));\n         }\n     }\n+\n+    @Test\n+    public void testUpdateAndDeserialize() throws IOException {\n+        Foo foo = new Foo();\n+        FooExt fooExt = new FooExt(false, \"Bonjour\");\n+        foo.addExtension(FooExt.class, fooExt);\n+        FooDeserializer.update(getClass().getResourceAsStream(\"/extensionsUpdate.json\"), foo);\n+        assertEquals(true, foo.getExtension(FooExt.class).getValue());\n+        assertEquals(\"Bonjour\", foo.getExtension(FooExt.class).getValue2());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NTQyNg==", "bodyText": "Same remark", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404055426", "createdAt": "2020-04-06T12:34:59Z", "author": {"login": "MioRtia"}, "path": "security-analysis/security-analysis-api/src/test/java/com/powsybl/security/json/JsonSecurityAnalysisParametersTest.java", "diffHunk": "@@ -61,12 +62,61 @@ public void readError() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void updateExtensions() {\n+        SecurityAnalysisParameters parameters = new SecurityAnalysisParameters();\n+        DummyExtension extension = new DummyExtension();\n+        extension.setParameterBoolean(false);\n+        extension.setParameterString(\"Bonjour\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564b518698ec568d1bb4101361b801f6af8875ea"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzNjQyMg==", "bodyText": "I think it can be refactored with readExtensions and readExtension, it looks similar.", "url": "https://github.com/powsybl/powsybl-core/pull/1248#discussion_r404136422", "createdAt": "2020-04-06T14:29:37Z", "author": {"login": "MioRtia"}, "path": "commons/src/main/java/com/powsybl/commons/json/JsonUtil.java", "diffHunk": "@@ -217,6 +217,52 @@ public static void writeOptionalIntegerField(JsonGenerator jsonGenerator, String\n         return notFound;\n     }\n \n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context, T toUpdatedParameters) throws IOException {\n+        return updateExtensions(parser, context, SUPPLIER.get(), null, toUpdatedParameters);\n+    }\n+\n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, T toUpdatedParameters) throws IOException {\n+        return updateExtensions(parser, context, supplier, null, toUpdatedParameters);\n+    }\n+\n+    public static <T extends Extendable> List<Extension<T>> updateExtensions(JsonParser parser, DeserializationContext context,\n+                                                                             ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdatedParameters) throws IOException {\n+        Objects.requireNonNull(parser);\n+        Objects.requireNonNull(context);\n+        Objects.requireNonNull(supplier);\n+        Objects.requireNonNull(toUpdatedParameters);\n+\n+        List<Extension<T>> extensions = new ArrayList<>();\n+        while (parser.nextToken() != JsonToken.END_OBJECT) {\n+            Extension<T> extension = updateExtension(parser, context, supplier, extensionsNotFound, toUpdatedParameters);\n+            if (extension != null) {\n+                extensions.add(extension);\n+            }\n+        }\n+        return extensions;\n+    }\n+\n+    public static <T extends Extendable, E extends Extension<T>> E updateExtension(JsonParser parser, DeserializationContext context,\n+                                                                                   ExtensionProviders<? extends ExtensionJsonSerializer> supplier, Set<String> extensionsNotFound, T toUpdateExtensions) throws IOException {\n+        String extensionName = parser.getCurrentName();\n+        ExtensionJsonSerializer<T, E> extensionJsonSerializer = supplier.findProvider(extensionName);\n+        if (extensionJsonSerializer != null) {\n+            parser.nextToken();\n+            if (toUpdateExtensions.getExtensionByName(extensionName) != null) {\n+                return extensionJsonSerializer.deserializeAndUpdate(parser, context, (E) toUpdateExtensions.getExtensionByName(extensionName));\n+            } else {\n+                return extensionJsonSerializer.deserialize(parser, context);\n+            }\n+        } else {\n+            if (extensionsNotFound != null) {\n+                extensionsNotFound.add(extensionName);\n+            }\n+            skip(parser);\n+            return null;\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6254d117b6a34bcb5f8e0ba77320582aeac47e5"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6254d117b6a34bcb5f8e0ba77320582aeac47e5", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/d6254d117b6a34bcb5f8e0ba77320582aeac47e5", "committedDate": "2020-04-06T13:53:06Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "3209cad79e72b6df13e30963a1ed16056d13bb77", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/3209cad79e72b6df13e30963a1ed16056d13bb77", "committedDate": "2020-04-07T11:36:32Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33c6205cd8ea2b93b3849b6d1f640b55a632e8ed", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/33c6205cd8ea2b93b3849b6d1f640b55a632e8ed", "committedDate": "2020-04-07T11:44:34Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3209cad79e72b6df13e30963a1ed16056d13bb77", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/3209cad79e72b6df13e30963a1ed16056d13bb77", "committedDate": "2020-04-07T11:36:32Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}, "afterCommit": {"oid": "33c6205cd8ea2b93b3849b6d1f640b55a632e8ed", "author": {"user": null}, "url": "https://github.com/powsybl/powsybl-core/commit/33c6205cd8ea2b93b3849b6d1f640b55a632e8ed", "committedDate": "2020-04-07T11:44:34Z", "message": "correcting json parser #743\n\nSigned-off-by: Etienne Lesot <etienne.lesot@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9f732f438d42106bbbee29744e068bd5be62536", "author": {"user": {"login": "sylvlecl", "name": "Sylvain Leclerc"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c9f732f438d42106bbbee29744e068bd5be62536", "committedDate": "2020-04-08T09:42:38Z", "message": "Add some javadoc to encourage implementation of update method.\nRemove minor changes unrelated to this feature.\n\nSigned-off-by: Sylvain Leclerc <sylvain.leclerc@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNjAxMjkw", "url": "https://github.com/powsybl/powsybl-core/pull/1248#pullrequestreview-390601290", "createdAt": "2020-04-09T08:43:23Z", "commit": {"oid": "c9f732f438d42106bbbee29744e068bd5be62536"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6d85bb95fae0d717b69f9515628236802acc4c5", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/f6d85bb95fae0d717b69f9515628236802acc4c5", "committedDate": "2020-04-09T08:44:15Z", "message": "Merge branch 'master' into json_parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf7da23a75bd331623110f3947937a0491f09fa1", "author": {"user": {"login": "sylvlecl", "name": "Sylvain Leclerc"}}, "url": "https://github.com/powsybl/powsybl-core/commit/bf7da23a75bd331623110f3947937a0491f09fa1", "committedDate": "2020-04-14T15:35:25Z", "message": "Merge branch 'master' into json_parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7722257719d292d50c885511d48df4b6ad2b68f", "author": {"user": {"login": "sylvlecl", "name": "Sylvain Leclerc"}}, "url": "https://github.com/powsybl/powsybl-core/commit/c7722257719d292d50c885511d48df4b6ad2b68f", "committedDate": "2020-04-15T07:59:55Z", "message": "Merge branch 'master' into json_parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66d7f0bed93109bc8a2f976c4464cfba525193aa", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/66d7f0bed93109bc8a2f976c4464cfba525193aa", "committedDate": "2020-04-15T08:06:11Z", "message": "Merge branch 'master' into json_parser"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4505, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}