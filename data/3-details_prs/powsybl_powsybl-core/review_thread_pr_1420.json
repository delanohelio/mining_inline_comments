{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTYzMTMy", "number": 1420, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoyNTo1MVrOEUoHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDozMjozNlrOEUoSmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDY0Mjg2OnYy", "diffSide": "RIGHT", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoyNTo1MVrOG67qFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTozNzoxMFrOG8sAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw==", "bodyText": "You should return immutable version of these lists", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464448023", "createdAt": "2020-08-03T14:25:51Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1NjY5MA==", "bodyText": "As it is also passed to contrusctor we should maybe make a defensive copy in the constructor?", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464456690", "createdAt": "2020-08-03T14:39:02Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTI0OA==", "bodyText": "Done, defensive copy in the contructor", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469248", "createdAt": "2020-08-03T14:58:50Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4ODY2OA==", "bodyText": "It's not equivalent... How do you prevent a user to clear your own copy?\nfullModel.getDependentOn().clear();\n\nI think the copy in the constructor is not necessary because a new context is created each time the parsing is called, but you shoud protect your own data.", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r466288668", "createdAt": "2020-08-06T09:37:10Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDY1MDc3OnYy", "diffSide": "RIGHT", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoyNzo1MlrOG67vGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDo1OTowOFrOG689uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ==", "bodyText": "You should introduce an overload for readUntilElement, that takes only the two first parameters. This would make this code more readable:\nXmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader);\n\nThis overload would call the existing one, with the empty lambda\nAnother idea would be to name this method XmlUtil.readText().", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464449305", "createdAt": "2020-08-03T14:27:52Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MDIwNw==", "bodyText": "Ok for XmlUtil.readText()", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464460207", "createdAt": "2020-08-03T14:44:29Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTQzNQ==", "bodyText": "Done and sync with the other PR", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469435", "createdAt": "2020-08-03T14:59:08Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDY3MDk3OnYy", "diffSide": "RIGHT", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDozMjozNlrOG677Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDo1OToyMVrOG68-UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA==", "bodyText": "I would merge the validate method and the constructor. As the constructor is public, one can call it with empty profiles/dependentOn lists, that is forbidden in the parser.", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464452450", "createdAt": "2020-08-03T14:32:36Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.CREATED:\n+                                context.created = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.CREATED, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DESCRIPTION:\n+                                context.description = XmlUtil.readUntilEndElement(CgmesNames.DESCRIPTION, xmlReader, () -> { });\n+                                break;\n+                            case CgmesNames.VERSION:\n+                                context.version = Integer.parseInt(XmlUtil.readUntilEndElement(CgmesNames.VERSION, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.PROFILE:\n+                                context.profiles.add(XmlUtil.readUntilEndElement(CgmesNames.PROFILE, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DEPENDENT_ON:\n+                                context.dependentOn.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.SUPERSEDES:\n+                                context.supersedes.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.MODELING_AUTHORITY_SET:\n+                                context.modelingAuthoritySet = XmlUtil.readUntilEndElement(CgmesNames.MODELING_AUTHORITY_SET, xmlReader, () -> { });\n+                                break;\n+                            default:\n+                                // not yet interesting like superseded\n+                                break;\n+                        }\n+                    });\n+                });\n+            } finally {\n+                xmlReader.close();\n+            }\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+        context.validate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MTAzOA==", "bodyText": "The only problem is for version as in the constructor it is an int and Integer in the parsing context to detect missing version", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464461038", "createdAt": "2020-08-03T14:45:44Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.CREATED:\n+                                context.created = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.CREATED, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DESCRIPTION:\n+                                context.description = XmlUtil.readUntilEndElement(CgmesNames.DESCRIPTION, xmlReader, () -> { });\n+                                break;\n+                            case CgmesNames.VERSION:\n+                                context.version = Integer.parseInt(XmlUtil.readUntilEndElement(CgmesNames.VERSION, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.PROFILE:\n+                                context.profiles.add(XmlUtil.readUntilEndElement(CgmesNames.PROFILE, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DEPENDENT_ON:\n+                                context.dependentOn.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.SUPERSEDES:\n+                                context.supersedes.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.MODELING_AUTHORITY_SET:\n+                                context.modelingAuthoritySet = XmlUtil.readUntilEndElement(CgmesNames.MODELING_AUTHORITY_SET, xmlReader, () -> { });\n+                                break;\n+                            default:\n+                                // not yet interesting like superseded\n+                                break;\n+                        }\n+                    });\n+                });\n+            } finally {\n+                xmlReader.close();\n+            }\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+        context.validate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTU4NA==", "bodyText": "Done except for version", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469584", "createdAt": "2020-08-03T14:59:21Z", "author": {"login": "geofjamg"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.CREATED:\n+                                context.created = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.CREATED, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DESCRIPTION:\n+                                context.description = XmlUtil.readUntilEndElement(CgmesNames.DESCRIPTION, xmlReader, () -> { });\n+                                break;\n+                            case CgmesNames.VERSION:\n+                                context.version = Integer.parseInt(XmlUtil.readUntilEndElement(CgmesNames.VERSION, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.PROFILE:\n+                                context.profiles.add(XmlUtil.readUntilEndElement(CgmesNames.PROFILE, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DEPENDENT_ON:\n+                                context.dependentOn.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.SUPERSEDES:\n+                                context.supersedes.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.MODELING_AUTHORITY_SET:\n+                                context.modelingAuthoritySet = XmlUtil.readUntilEndElement(CgmesNames.MODELING_AUTHORITY_SET, xmlReader, () -> { });\n+                                break;\n+                            default:\n+                                // not yet interesting like superseded\n+                                break;\n+                        }\n+                    });\n+                });\n+            } finally {\n+                xmlReader.close();\n+            }\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+        context.validate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA=="}, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 204}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4999, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}