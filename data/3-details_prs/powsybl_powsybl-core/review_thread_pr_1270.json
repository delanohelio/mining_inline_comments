{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTM2NzIy", "number": 1270, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozMjo0N1rODxxYTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyNDo0M1rOD44GBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTE1ODU0OnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozMjo0N1rOGFbs4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozMjo0N1rOGFbs4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0OTkyMQ==", "bodyText": "The simplest way to implement that, is to add a property to the generator whatever the type of the power plant. Add the property after the creation of the generator:\ngenerator.setProperty(UCTE_POWER_PLANT_TYPE, ucte.getPowerPlantType());", "url": "https://github.com/powsybl/powsybl-core/pull/1270#discussion_r408349921", "createdAt": "2020-04-14T18:32:47Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "diffHunk": "@@ -181,8 +187,14 @@ private static void createGenerator(UcteNode ucteNode, VoltageLevel voltageLevel\n         if (ucteNode.getPowerPlantType() != null) {\n             switch (ucteNode.getPowerPlantType()) {\n                 case C:\n+                    voltageLevel.getNetwork().setProperty(UCTE_POWERPLANT_TYPE_KEY + generatorId, ucteNode.getPowerPlantType().toString());\n+                    break;\n                 case G:\n+                    voltageLevel.getNetwork().setProperty(UCTE_POWERPLANT_TYPE_KEY + generatorId, ucteNode.getPowerPlantType().toString());\n+                    break;\n                 case L:\n+                    voltageLevel.getNetwork().setProperty(UCTE_POWERPLANT_TYPE_KEY + generatorId, ucteNode.getPowerPlantType().toString());\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3b4f1c20002ebc483a51a78dfad0d6aca54d3f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTE2NDY0OnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozNDoxNVrOGFbwoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozNDoxNVrOGFbwoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MDg4MQ==", "bodyText": "Change the signature of this method to pass the generator instead of these two values.\nLook for the property. If it's defined, use it. If the property is not defined, use the existing code without modifications.", "url": "https://github.com/powsybl/powsybl-core/pull/1270#discussion_r408350881", "createdAt": "2020-04-14T18:34:15Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -702,7 +702,7 @@ private static void setSwitchCurrentLimit(UcteLine ucteLine, Switch sw) {\n         }\n     }\n \n-    private static UctePowerPlantType energySourceToUctePowerPlantType(EnergySource energySource) {\n+    private static UctePowerPlantType energySourceToUctePowerPlantType(EnergySource energySource, String uctePowerPlantType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3b4f1c20002ebc483a51a78dfad0d6aca54d3f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTY1NjEwOnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyMzo0NlrOGP1Gbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyMzo0NlrOGP1Gbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI1MTgyMw==", "bodyText": "There is no good reason to make the property name dependent on the ID of the generator.", "url": "https://github.com/powsybl/powsybl-core/pull/1270#discussion_r419251823", "createdAt": "2020-05-04T07:23:46Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -702,8 +702,11 @@ private static void setSwitchCurrentLimit(UcteLine ucteLine, Switch sw) {\n         }\n     }\n \n-    private static UctePowerPlantType energySourceToUctePowerPlantType(EnergySource energySource) {\n-        switch (energySource) {\n+    private static UctePowerPlantType energySourceToUctePowerPlantType(Generator generator) {\n+        if (generator.hasProperty(UcteImporter.UCTE_POWERPLANT_TYPE_KEY + generator.getId())) {\n+            return UctePowerPlantType.valueOf(generator.getProperty(UcteImporter.UCTE_POWERPLANT_TYPE_KEY + generator.getId()));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab51aec375661b61298f401e49d947cae8c734ac"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTY1ODI2OnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyNDoyOFrOGP1Hqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyNDoyOFrOGP1Hqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI1MjEzOQ==", "bodyText": "This property should be declared with the others: as it's used in both importer and exporter, the right place is UcteConstants.", "url": "https://github.com/powsybl/powsybl-core/pull/1270#discussion_r419252139", "createdAt": "2020-05-04T07:24:28Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "diffHunk": "@@ -45,6 +45,12 @@\n \n     private static final String[] EXTENSIONS = {\"uct\", \"UCT\"};\n \n+    /**\n+     * Key to store ucte power plant type in properties\n+     * Concat this key with generator id\n+     */\n+    public static final String UCTE_POWERPLANT_TYPE_KEY = \"UctePowerPlantType_\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab51aec375661b61298f401e49d947cae8c734ac"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTY1ODkzOnYy", "diffSide": "RIGHT", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyNDo0M1rOGP1IHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNzoyNDo0M1rOGP1IHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI1MjI1NA==", "bodyText": "Look like a regression", "url": "https://github.com/powsybl/powsybl-core/pull/1270#discussion_r419252254", "createdAt": "2020-05-04T07:24:43Z", "author": {"login": "mathbagu"}, "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "diffHunk": "@@ -181,8 +187,11 @@ private static void createGenerator(UcteNode ucteNode, VoltageLevel voltageLevel\n         if (ucteNode.getPowerPlantType() != null) {\n             switch (ucteNode.getPowerPlantType()) {\n                 case C:\n+                    break;\n                 case G:\n+                    break;\n                 case L:\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab51aec375661b61298f401e49d947cae8c734ac"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 91, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}