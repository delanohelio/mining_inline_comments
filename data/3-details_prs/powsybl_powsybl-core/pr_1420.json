{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTYzMTMy", "number": 1420, "title": "CGMES Full model parser", "bodyText": "Please check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nNo\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nfeature\nWhat is the new behavior (if this is a feature change)?\nA fast and lightweight parser is implemented to get FullModel section of a CGMES profile.\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)\n\nOther information:\n(if any of the questions/checkboxes don't apply, please delete them entirely)", "createdAt": "2020-08-03T12:59:41Z", "url": "https://github.com/powsybl/powsybl-core/pull/1420", "merged": true, "mergeCommit": {"oid": "3b5362de5f4629138dfe8ade6e33c13cc6f72356"}, "closed": true, "closedAt": "2020-08-12T19:47:44Z", "author": {"login": "geofjamg"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6PcH3gH2gAyNDYyMTYzMTMyOmE0MDI2YTY1NjllZDc3MmFkMDY3ZjFmNGE3ZTNhNzE1NDA3OWQxZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-QlNxgH2gAyNDYyMTYzMTMyOjk1OWE3MTVkY2QzMTVmMTNhMDA5YWVlYjY5N2FkM2FlZGE1MDMzOWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4026a6569ed772ad067f1f4a7e3a7154079d1fc", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/a4026a6569ed772ad067f1f4a7e3a7154079d1fc", "committedDate": "2020-07-31T07:52:59Z", "message": "Add utility function to quickly jump to a XML path\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d24d82c894bbbdf00331da6c813fcfebf9fffa", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/d6d24d82c894bbbdf00331da6c813fcfebf9fffa", "committedDate": "2020-07-31T09:09:10Z", "message": "Fix coding style\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c27b8d6d7ac45940d2674f8fa864799dbfa53ab", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/8c27b8d6d7ac45940d2674f8fa864799dbfa53ab", "committedDate": "2020-08-03T12:57:38Z", "message": "CGMES Full model fast parser\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/b3f4be2791a186b9f5150618fa6aec07194127b8", "committedDate": "2020-08-03T13:30:55Z", "message": "Add null check\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMDcxNjEy", "url": "https://github.com/powsybl/powsybl-core/pull/1420#pullrequestreview-460071612", "createdAt": "2020-08-03T14:25:51Z", "commit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoyNTo1MVrOG67qFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDozMjozNlrOG677Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw==", "bodyText": "You should return immutable version of these lists", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464448023", "createdAt": "2020-08-03T14:25:51Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ==", "bodyText": "You should introduce an overload for readUntilElement, that takes only the two first parameters. This would make this code more readable:\nXmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader);\n\nThis overload would call the existing one, with the empty lambda\nAnother idea would be to name this method XmlUtil.readText().", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464449305", "createdAt": "2020-08-03T14:27:52Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA==", "bodyText": "I would merge the validate method and the constructor. As the constructor is public, one can call it with empty profiles/dependentOn lists, that is forbidden in the parser.", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464452450", "createdAt": "2020-08-03T14:32:36Z", "author": {"login": "mathbagu"}, "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.CREATED:\n+                                context.created = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.CREATED, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DESCRIPTION:\n+                                context.description = XmlUtil.readUntilEndElement(CgmesNames.DESCRIPTION, xmlReader, () -> { });\n+                                break;\n+                            case CgmesNames.VERSION:\n+                                context.version = Integer.parseInt(XmlUtil.readUntilEndElement(CgmesNames.VERSION, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.PROFILE:\n+                                context.profiles.add(XmlUtil.readUntilEndElement(CgmesNames.PROFILE, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DEPENDENT_ON:\n+                                context.dependentOn.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.SUPERSEDES:\n+                                context.supersedes.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.MODELING_AUTHORITY_SET:\n+                                context.modelingAuthoritySet = XmlUtil.readUntilEndElement(CgmesNames.MODELING_AUTHORITY_SET, xmlReader, () -> { });\n+                                break;\n+                            default:\n+                                // not yet interesting like superseded\n+                                break;\n+                        }\n+                    });\n+                });\n+            } finally {\n+                xmlReader.close();\n+            }\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+        context.validate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8"}, "originalPosition": 204}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e7985b70c621d2eee3c8e25eb0b40940c0645a", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/f3e7985b70c621d2eee3c8e25eb0b40940c0645a", "committedDate": "2020-08-03T14:50:19Z", "message": "Review changes\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9ac6652dff25c95066aeca57e943d08d1e8396", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/1a9ac6652dff25c95066aeca57e943d08d1e8396", "committedDate": "2020-08-03T14:51:49Z", "message": "Fix comment\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3b9ae61bc73175a109f0884166a1d0092f1410", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/9d3b9ae61bc73175a109f0884166a1d0092f1410", "committedDate": "2020-08-03T14:57:05Z", "message": "Add unit test\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "515dc5a58b37be7eb9af678508efc36f9d001cdc", "author": {"user": {"login": "mathbagu", "name": "Mathieu BAGUE"}}, "url": "https://github.com/powsybl/powsybl-core/commit/515dc5a58b37be7eb9af678508efc36f9d001cdc", "committedDate": "2020-08-07T07:40:11Z", "message": "Return unmodifiable list from getters\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTA3MDY2", "url": "https://github.com/powsybl/powsybl-core/pull/1420#pullrequestreview-463107066", "createdAt": "2020-08-07T07:52:48Z", "commit": {"oid": "515dc5a58b37be7eb9af678508efc36f9d001cdc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "959a715dcd315f13a009aeeb697ad3aeda50339c", "author": {"user": {"login": "geofjamg", "name": "Geoffroy Jamgotchian"}}, "url": "https://github.com/powsybl/powsybl-core/commit/959a715dcd315f13a009aeeb697ad3aeda50339c", "committedDate": "2020-08-12T19:28:31Z", "message": "Merge branch 'master' into full_model_parser"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4134, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}