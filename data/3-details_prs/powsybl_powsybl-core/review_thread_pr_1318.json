{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDE1Njcx", "number": 1318, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxMToxNVrOECc9Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1NzowNVrOEEVY5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDA3MDMxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxMToxNVrOGe6oOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxMToxNVrOGe6oOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTAzMg==", "bodyText": "Country is optional, so you can let it unset for test cases.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435071032", "createdAt": "2020-06-04T08:11:15Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDA3Mzc3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxMjoyMVrOGe6qjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxMjoyMVrOGe6qjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTYyOA==", "bodyText": "It's weird to initialize only the low voltage limit. Initialize both voltage limits (80% and 120% are the common values), or none.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435071628", "createdAt": "2020-06-04T08:12:21Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDA4MDE5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxNDoxMlrOGe6u1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxNDoxMlrOGe6u1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MjcyNg==", "bodyText": "Breaker should be retained, but Disconnector should not.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435072726", "createdAt": "2020-06-04T08:14:12Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDA4NjI1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxNTo1MlrOGe6ynA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxNTo1MlrOGe6ynA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MzY5Mg==", "bodyText": "Switch voltage limits to have 80% and 120% of the nominal voltage.\nIt seems your transformer TWT is connected between two voltage levels with the same nominal voltage. Maybe you should change the nominal voltage of all the VL to 400kV except the S1VL1", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435073692", "createdAt": "2020-06-04T08:15:52Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(4)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(220.0)\n+                .setHighVoltageLimit(245.00002)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDA5NjA2OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxODoyN1rOGe645Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODoxODoyN1rOGe645Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3NTMwMQ==", "bodyText": "S1VL2_AH should be retained.\nI think it could be better if some disconnector are open. Equipments should not be connected to both busbar section. Edit your schema to change the black circles (connected) to white circles (disconnected)\nI think you should add disconnectors for your coupler on the schema 0-7 and 1-6\nI think there is a mistake for S1VL2_AF, S1VL2_AG and S1VL2_AH: should be 19-20, 21-22 and 23-24?\nThe topology close to LD2 is really strange, and not really realistic.\nMaybe you should add a breaker for LCC1\nThere is an inconsistency for the switch 0-25: it doesn't exist in the code, but it exists on the schema.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435075301", "createdAt": "2020-06-04T08:18:27Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(4)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(220.0)\n+                .setHighVoltageLimit(245.00002)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+        createSwitch(s1vl2, \"S1VL2_A\", \"S1VL2_A\", SwitchKind.DISCONNECTOR, false, false, false, 0, 19);\n+        createSwitch(s1vl2, \"S1VL2_B\", \"S1VL2_B\", SwitchKind.DISCONNECTOR, false, false, false, 0, 17);\n+        createSwitch(s1vl2, \"S1VL2_C\", \"S1VL2_C\", SwitchKind.DISCONNECTOR, false, false, false, 0, 21);\n+        createSwitch(s1vl2, \"S1VL2_D\", \"S1VL2_D\", SwitchKind.DISCONNECTOR, false, false, false, 0, 11);\n+        createSwitch(s1vl2, \"S1VL2_E\", \"S1VL2_E\", SwitchKind.DISCONNECTOR, false, false, false, 0, 13);\n+        createSwitch(s1vl2, \"S1VL2_F\", \"S1VL2_F\", SwitchKind.DISCONNECTOR, false, false, false, 0, 15);\n+        createSwitch(s1vl2, \"S1VL2_G\", \"S1VL2_G\", SwitchKind.DISCONNECTOR, false, false, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_H\", \"S1VL2_H\", SwitchKind.DISCONNECTOR, false, false, true, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_I\", \"S1VL2_I\", SwitchKind.DISCONNECTOR, false, false, false, 7, 0);\n+        createSwitch(s1vl2, \"S1VL2_J\", \"S1VL2_J\", SwitchKind.DISCONNECTOR, false, false, false, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_K\", \"S1VL2_K\", SwitchKind.DISCONNECTOR, false, false, false, 1, 19);\n+        createSwitch(s1vl2, \"S1VL2_L\", \"S1VL2_L\", SwitchKind.DISCONNECTOR, false, false, false, 1, 17);\n+        createSwitch(s1vl2, \"S1VL2_M\", \"S1VL2_M\", SwitchKind.DISCONNECTOR, false, false, false, 1, 21);\n+        createSwitch(s1vl2, \"S1VL2_N\", \"S1VL2_N\", SwitchKind.DISCONNECTOR, false, false, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_O\", \"S1VL2_O\", SwitchKind.DISCONNECTOR, false, false, false, 1, 25);\n+        createSwitch(s1vl2, \"S1VL2_P\", \"S1VL2_P\", SwitchKind.DISCONNECTOR, false, false, false, 1, 11);\n+        createSwitch(s1vl2, \"S1VL2_Q\", \"S1VL2_Q\", SwitchKind.DISCONNECTOR, false, false, false, 1, 13);\n+        createSwitch(s1vl2, \"S1VL2_R\", \"S1VL2_R\", SwitchKind.DISCONNECTOR, false, false, false, 1, 15);\n+        createSwitch(s1vl2, \"S1VL2_S\", \"S1VL2_S\", SwitchKind.DISCONNECTOR, false, false, false, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_T\", \"S1VL2_T\", SwitchKind.DISCONNECTOR, false, false, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_U\", \"S1VL2_U\", SwitchKind.BREAKER, true, true, true, 2, 3);\n+        createSwitch(s1vl2, \"S1VL2_V\", \"S1VL2_V\", SwitchKind.BREAKER, true, false, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_W\", \"S1VL2_W\", SwitchKind.DISCONNECTOR, false, false, false, 3, 5);\n+        createSwitch(s1vl2, \"S1VL2_X\", \"S1VL2_X\", SwitchKind.DISCONNECTOR, false, false, false, 9, 3);\n+        createSwitch(s1vl2, \"S1VL2_Y\", \"S1VL2_Y\", SwitchKind.BREAKER, true, false, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_Z\", \"S1VL2_Z\", SwitchKind.BREAKER, true, false, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_AA\", \"S1VL2_AA\", SwitchKind.DISCONNECTOR, false, false, false, 9, 10);\n+        createSwitch(s1vl2, \"S1VL2_AB\", \"S1VL2_AB\", SwitchKind.BREAKER, true, false, false, 11, 12);\n+        createSwitch(s1vl2, \"S1VL2_AC\", \"S1VL2_AC\", SwitchKind.BREAKER, true, false, false, 13, 14);\n+        createSwitch(s1vl2, \"S1VL2_AD\", \"S1VL2_AD\", SwitchKind.BREAKER, true, false, false, 15, 16);\n+        createSwitch(s1vl2, \"S1VL2_AE\", \"S1VL2_AE\", SwitchKind.BREAKER, true, false, false, 17, 18);\n+        createSwitch(s1vl2, \"S1VL2_AF\", \"S1VL2_AF\", SwitchKind.BREAKER, true, false, false, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_AG\", \"S1VL2_AG\", SwitchKind.BREAKER, true, false, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_AH\", \"S1VL2_AH\", SwitchKind.BREAKER, false, false, false, 0, 24);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDE2NjQ1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODozNzoxNVrOGe7lmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODozNzoxNVrOGe7lmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4Njc0NA==", "bodyText": "Look like a breaker in the schema", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435086744", "createdAt": "2020-06-04T08:37:15Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(4)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(220.0)\n+                .setHighVoltageLimit(245.00002)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+        createSwitch(s1vl2, \"S1VL2_A\", \"S1VL2_A\", SwitchKind.DISCONNECTOR, false, false, false, 0, 19);\n+        createSwitch(s1vl2, \"S1VL2_B\", \"S1VL2_B\", SwitchKind.DISCONNECTOR, false, false, false, 0, 17);\n+        createSwitch(s1vl2, \"S1VL2_C\", \"S1VL2_C\", SwitchKind.DISCONNECTOR, false, false, false, 0, 21);\n+        createSwitch(s1vl2, \"S1VL2_D\", \"S1VL2_D\", SwitchKind.DISCONNECTOR, false, false, false, 0, 11);\n+        createSwitch(s1vl2, \"S1VL2_E\", \"S1VL2_E\", SwitchKind.DISCONNECTOR, false, false, false, 0, 13);\n+        createSwitch(s1vl2, \"S1VL2_F\", \"S1VL2_F\", SwitchKind.DISCONNECTOR, false, false, false, 0, 15);\n+        createSwitch(s1vl2, \"S1VL2_G\", \"S1VL2_G\", SwitchKind.DISCONNECTOR, false, false, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_H\", \"S1VL2_H\", SwitchKind.DISCONNECTOR, false, false, true, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_I\", \"S1VL2_I\", SwitchKind.DISCONNECTOR, false, false, false, 7, 0);\n+        createSwitch(s1vl2, \"S1VL2_J\", \"S1VL2_J\", SwitchKind.DISCONNECTOR, false, false, false, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_K\", \"S1VL2_K\", SwitchKind.DISCONNECTOR, false, false, false, 1, 19);\n+        createSwitch(s1vl2, \"S1VL2_L\", \"S1VL2_L\", SwitchKind.DISCONNECTOR, false, false, false, 1, 17);\n+        createSwitch(s1vl2, \"S1VL2_M\", \"S1VL2_M\", SwitchKind.DISCONNECTOR, false, false, false, 1, 21);\n+        createSwitch(s1vl2, \"S1VL2_N\", \"S1VL2_N\", SwitchKind.DISCONNECTOR, false, false, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_O\", \"S1VL2_O\", SwitchKind.DISCONNECTOR, false, false, false, 1, 25);\n+        createSwitch(s1vl2, \"S1VL2_P\", \"S1VL2_P\", SwitchKind.DISCONNECTOR, false, false, false, 1, 11);\n+        createSwitch(s1vl2, \"S1VL2_Q\", \"S1VL2_Q\", SwitchKind.DISCONNECTOR, false, false, false, 1, 13);\n+        createSwitch(s1vl2, \"S1VL2_R\", \"S1VL2_R\", SwitchKind.DISCONNECTOR, false, false, false, 1, 15);\n+        createSwitch(s1vl2, \"S1VL2_S\", \"S1VL2_S\", SwitchKind.DISCONNECTOR, false, false, false, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_T\", \"S1VL2_T\", SwitchKind.DISCONNECTOR, false, false, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_U\", \"S1VL2_U\", SwitchKind.BREAKER, true, true, true, 2, 3);\n+        createSwitch(s1vl2, \"S1VL2_V\", \"S1VL2_V\", SwitchKind.BREAKER, true, false, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_W\", \"S1VL2_W\", SwitchKind.DISCONNECTOR, false, false, false, 3, 5);\n+        createSwitch(s1vl2, \"S1VL2_X\", \"S1VL2_X\", SwitchKind.DISCONNECTOR, false, false, false, 9, 3);\n+        createSwitch(s1vl2, \"S1VL2_Y\", \"S1VL2_Y\", SwitchKind.BREAKER, true, false, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_Z\", \"S1VL2_Z\", SwitchKind.BREAKER, true, false, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_AA\", \"S1VL2_AA\", SwitchKind.DISCONNECTOR, false, false, false, 9, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDE5NDE3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODo0NDo1NFrOGe73gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODo0NDo1NFrOGe73gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA5MTMzMA==", "bodyText": "You should add a breaker for your line\nOn the schema connect it on the left of the S3VL1 to make it more readable", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435091330", "createdAt": "2020-06-04T08:44:54Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(4)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(220.0)\n+                .setHighVoltageLimit(245.00002)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+        createSwitch(s1vl2, \"S1VL2_A\", \"S1VL2_A\", SwitchKind.DISCONNECTOR, false, false, false, 0, 19);\n+        createSwitch(s1vl2, \"S1VL2_B\", \"S1VL2_B\", SwitchKind.DISCONNECTOR, false, false, false, 0, 17);\n+        createSwitch(s1vl2, \"S1VL2_C\", \"S1VL2_C\", SwitchKind.DISCONNECTOR, false, false, false, 0, 21);\n+        createSwitch(s1vl2, \"S1VL2_D\", \"S1VL2_D\", SwitchKind.DISCONNECTOR, false, false, false, 0, 11);\n+        createSwitch(s1vl2, \"S1VL2_E\", \"S1VL2_E\", SwitchKind.DISCONNECTOR, false, false, false, 0, 13);\n+        createSwitch(s1vl2, \"S1VL2_F\", \"S1VL2_F\", SwitchKind.DISCONNECTOR, false, false, false, 0, 15);\n+        createSwitch(s1vl2, \"S1VL2_G\", \"S1VL2_G\", SwitchKind.DISCONNECTOR, false, false, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_H\", \"S1VL2_H\", SwitchKind.DISCONNECTOR, false, false, true, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_I\", \"S1VL2_I\", SwitchKind.DISCONNECTOR, false, false, false, 7, 0);\n+        createSwitch(s1vl2, \"S1VL2_J\", \"S1VL2_J\", SwitchKind.DISCONNECTOR, false, false, false, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_K\", \"S1VL2_K\", SwitchKind.DISCONNECTOR, false, false, false, 1, 19);\n+        createSwitch(s1vl2, \"S1VL2_L\", \"S1VL2_L\", SwitchKind.DISCONNECTOR, false, false, false, 1, 17);\n+        createSwitch(s1vl2, \"S1VL2_M\", \"S1VL2_M\", SwitchKind.DISCONNECTOR, false, false, false, 1, 21);\n+        createSwitch(s1vl2, \"S1VL2_N\", \"S1VL2_N\", SwitchKind.DISCONNECTOR, false, false, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_O\", \"S1VL2_O\", SwitchKind.DISCONNECTOR, false, false, false, 1, 25);\n+        createSwitch(s1vl2, \"S1VL2_P\", \"S1VL2_P\", SwitchKind.DISCONNECTOR, false, false, false, 1, 11);\n+        createSwitch(s1vl2, \"S1VL2_Q\", \"S1VL2_Q\", SwitchKind.DISCONNECTOR, false, false, false, 1, 13);\n+        createSwitch(s1vl2, \"S1VL2_R\", \"S1VL2_R\", SwitchKind.DISCONNECTOR, false, false, false, 1, 15);\n+        createSwitch(s1vl2, \"S1VL2_S\", \"S1VL2_S\", SwitchKind.DISCONNECTOR, false, false, false, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_T\", \"S1VL2_T\", SwitchKind.DISCONNECTOR, false, false, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_U\", \"S1VL2_U\", SwitchKind.BREAKER, true, true, true, 2, 3);\n+        createSwitch(s1vl2, \"S1VL2_V\", \"S1VL2_V\", SwitchKind.BREAKER, true, false, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_W\", \"S1VL2_W\", SwitchKind.DISCONNECTOR, false, false, false, 3, 5);\n+        createSwitch(s1vl2, \"S1VL2_X\", \"S1VL2_X\", SwitchKind.DISCONNECTOR, false, false, false, 9, 3);\n+        createSwitch(s1vl2, \"S1VL2_Y\", \"S1VL2_Y\", SwitchKind.BREAKER, true, false, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_Z\", \"S1VL2_Z\", SwitchKind.BREAKER, true, false, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_AA\", \"S1VL2_AA\", SwitchKind.DISCONNECTOR, false, false, false, 9, 10);\n+        createSwitch(s1vl2, \"S1VL2_AB\", \"S1VL2_AB\", SwitchKind.BREAKER, true, false, false, 11, 12);\n+        createSwitch(s1vl2, \"S1VL2_AC\", \"S1VL2_AC\", SwitchKind.BREAKER, true, false, false, 13, 14);\n+        createSwitch(s1vl2, \"S1VL2_AD\", \"S1VL2_AD\", SwitchKind.BREAKER, true, false, false, 15, 16);\n+        createSwitch(s1vl2, \"S1VL2_AE\", \"S1VL2_AE\", SwitchKind.BREAKER, true, false, false, 17, 18);\n+        createSwitch(s1vl2, \"S1VL2_AF\", \"S1VL2_AF\", SwitchKind.BREAKER, true, false, false, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_AG\", \"S1VL2_AG\", SwitchKind.BREAKER, true, false, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_AH\", \"S1VL2_AH\", SwitchKind.BREAKER, false, false, false, 0, 24);\n+\n+        Generator generatorHydro1 = s1vl2.newGenerator()\n+                .setId(\"GH1\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(100.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(80.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(50)\n+                .setNode(12)\n+                .add();\n+        generatorHydro1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(160.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(146.25)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro2 = s1vl2.newGenerator()\n+                .setId(\"GH2\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(40.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(14)\n+                .add();\n+        generatorHydro2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(257.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(236.4)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro3 = s1vl2.newGenerator()\n+                .setId(\"GH3\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(35.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(51.789589)\n+                .setTargetV(227)\n+                .setTargetQ(0.701546)\n+                .setNode(16)\n+                .add();\n+        generatorHydro3.getTerminal()\n+                .setP(-21.789589)\n+                .setQ(20.693394);\n+        generatorHydro3.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-20.6)\n+                .setMaxQ(318.1)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(35.0)\n+                .setMinQ(-21.725)\n+                .setMaxQ(316.3500004)\n+                .endPoint()\n+                .add();\n+\n+        Load load2 = s1vl2.newLoad()\n+                .setId(\"LD2\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(42.18689)\n+                .setQ0(0.168945)\n+                .setNode(4)\n+                .add();\n+        load2.getTerminal()\n+                .setP(42.18689)\n+                .setQ(0.168945);\n+\n+        s1vl2.newShuntCompensator()\n+                .setId(\"SHUNT\")\n+                .setNode(24)\n+                .setMaximumSectionCount(1)\n+                .setCurrentSectionCount(1)\n+                .setbPerSection(-0.012)\n+                .add();\n+\n+        Load load3 = s1vl2.newLoad()\n+                .setId(\"LD3\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(48.455854)\n+                .setQ0(3.695925)\n+                .setNode(18)\n+                .add();\n+        load3.getTerminal()\n+                .setP(48.455854)\n+                .setQ(3.695925);\n+\n+        Load load4 = s1vl2.newLoad()\n+                .setId(\"LD4\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(40.39911)\n+                .setQ0(1.96869)\n+                .setNode(20)\n+                .add();\n+        load4.getTerminal()\n+                .setP(40.39911)\n+                .setQ(1.96869);\n+\n+        Load load5 = s1vl2.newLoad()\n+                .setId(\"LD5\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(-5.102249)\n+                .setQ0(4.9081216)\n+                .setNode(22)\n+                .add();\n+        load5.getTerminal()\n+                .setP(-5.102249)\n+                .setQ(4.9081216);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(2)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(10)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .add();\n+\n+        LccConverterStation lcc1 = s1vl2.newLccConverterStation()\n+                .setId(\"LCC1\")\n+                .setName(\"LCC1\")\n+                .setNode(25)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(50.0);\n+\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .setCountry(Country.ES)\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s2vl1, \"S2VL1_A\", \"S2VL1_A\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s2vl1, \"S2VL1_B\", \"S2VL1_B\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s2vl1, \"S2VL1_C\", \"S2VL1_C\", SwitchKind.BREAKER, true, false, true, 1, 2);\n+        createSwitch(s2vl1, \"S2VL1_D\", \"S2VL1_D\", SwitchKind.BREAKER, true, false, true, 3, 4);\n+        createSwitch(s2vl1, \"S2VL1_E\", \"S2VL1_E\", SwitchKind.DISCONNECTOR, true, false, true, 0, 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 368}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDIwNTE1OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODo0Nzo1OVrOGe7-hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODo0Nzo1OVrOGe7-hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA5MzEyNQ==", "bodyText": "Add a btreaker for your line LINES3S4", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435093125", "createdAt": "2020-06-04T08:47:59Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,623 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .setCountry(Country.FR)\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+\n+        BusbarSection busbarSectionFR1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s1vl1, \"S1VL1_DI1\", \"S1VL1_DI1\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_DI2\", \"S1VL1_DI2\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_DI3\", \"S1VL1_DI3\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s1vl1, \"S1VL1_DI4\", \"S1VL1_DI4\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(4)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(220.0)\n+                .setHighVoltageLimit(245.00002)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+        createSwitch(s1vl2, \"S1VL2_A\", \"S1VL2_A\", SwitchKind.DISCONNECTOR, false, false, false, 0, 19);\n+        createSwitch(s1vl2, \"S1VL2_B\", \"S1VL2_B\", SwitchKind.DISCONNECTOR, false, false, false, 0, 17);\n+        createSwitch(s1vl2, \"S1VL2_C\", \"S1VL2_C\", SwitchKind.DISCONNECTOR, false, false, false, 0, 21);\n+        createSwitch(s1vl2, \"S1VL2_D\", \"S1VL2_D\", SwitchKind.DISCONNECTOR, false, false, false, 0, 11);\n+        createSwitch(s1vl2, \"S1VL2_E\", \"S1VL2_E\", SwitchKind.DISCONNECTOR, false, false, false, 0, 13);\n+        createSwitch(s1vl2, \"S1VL2_F\", \"S1VL2_F\", SwitchKind.DISCONNECTOR, false, false, false, 0, 15);\n+        createSwitch(s1vl2, \"S1VL2_G\", \"S1VL2_G\", SwitchKind.DISCONNECTOR, false, false, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_H\", \"S1VL2_H\", SwitchKind.DISCONNECTOR, false, false, true, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_I\", \"S1VL2_I\", SwitchKind.DISCONNECTOR, false, false, false, 7, 0);\n+        createSwitch(s1vl2, \"S1VL2_J\", \"S1VL2_J\", SwitchKind.DISCONNECTOR, false, false, false, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_K\", \"S1VL2_K\", SwitchKind.DISCONNECTOR, false, false, false, 1, 19);\n+        createSwitch(s1vl2, \"S1VL2_L\", \"S1VL2_L\", SwitchKind.DISCONNECTOR, false, false, false, 1, 17);\n+        createSwitch(s1vl2, \"S1VL2_M\", \"S1VL2_M\", SwitchKind.DISCONNECTOR, false, false, false, 1, 21);\n+        createSwitch(s1vl2, \"S1VL2_N\", \"S1VL2_N\", SwitchKind.DISCONNECTOR, false, false, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_O\", \"S1VL2_O\", SwitchKind.DISCONNECTOR, false, false, false, 1, 25);\n+        createSwitch(s1vl2, \"S1VL2_P\", \"S1VL2_P\", SwitchKind.DISCONNECTOR, false, false, false, 1, 11);\n+        createSwitch(s1vl2, \"S1VL2_Q\", \"S1VL2_Q\", SwitchKind.DISCONNECTOR, false, false, false, 1, 13);\n+        createSwitch(s1vl2, \"S1VL2_R\", \"S1VL2_R\", SwitchKind.DISCONNECTOR, false, false, false, 1, 15);\n+        createSwitch(s1vl2, \"S1VL2_S\", \"S1VL2_S\", SwitchKind.DISCONNECTOR, false, false, false, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_T\", \"S1VL2_T\", SwitchKind.DISCONNECTOR, false, false, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_U\", \"S1VL2_U\", SwitchKind.BREAKER, true, true, true, 2, 3);\n+        createSwitch(s1vl2, \"S1VL2_V\", \"S1VL2_V\", SwitchKind.BREAKER, true, false, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_W\", \"S1VL2_W\", SwitchKind.DISCONNECTOR, false, false, false, 3, 5);\n+        createSwitch(s1vl2, \"S1VL2_X\", \"S1VL2_X\", SwitchKind.DISCONNECTOR, false, false, false, 9, 3);\n+        createSwitch(s1vl2, \"S1VL2_Y\", \"S1VL2_Y\", SwitchKind.BREAKER, true, false, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_Z\", \"S1VL2_Z\", SwitchKind.BREAKER, true, false, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_AA\", \"S1VL2_AA\", SwitchKind.DISCONNECTOR, false, false, false, 9, 10);\n+        createSwitch(s1vl2, \"S1VL2_AB\", \"S1VL2_AB\", SwitchKind.BREAKER, true, false, false, 11, 12);\n+        createSwitch(s1vl2, \"S1VL2_AC\", \"S1VL2_AC\", SwitchKind.BREAKER, true, false, false, 13, 14);\n+        createSwitch(s1vl2, \"S1VL2_AD\", \"S1VL2_AD\", SwitchKind.BREAKER, true, false, false, 15, 16);\n+        createSwitch(s1vl2, \"S1VL2_AE\", \"S1VL2_AE\", SwitchKind.BREAKER, true, false, false, 17, 18);\n+        createSwitch(s1vl2, \"S1VL2_AF\", \"S1VL2_AF\", SwitchKind.BREAKER, true, false, false, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_AG\", \"S1VL2_AG\", SwitchKind.BREAKER, true, false, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_AH\", \"S1VL2_AH\", SwitchKind.BREAKER, false, false, false, 0, 24);\n+\n+        Generator generatorHydro1 = s1vl2.newGenerator()\n+                .setId(\"GH1\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(100.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(80.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(50)\n+                .setNode(12)\n+                .add();\n+        generatorHydro1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(160.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(146.25)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro2 = s1vl2.newGenerator()\n+                .setId(\"GH2\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(40.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(14)\n+                .add();\n+        generatorHydro2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(257.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(236.4)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro3 = s1vl2.newGenerator()\n+                .setId(\"GH3\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(35.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(51.789589)\n+                .setTargetV(227)\n+                .setTargetQ(0.701546)\n+                .setNode(16)\n+                .add();\n+        generatorHydro3.getTerminal()\n+                .setP(-21.789589)\n+                .setQ(20.693394);\n+        generatorHydro3.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-20.6)\n+                .setMaxQ(318.1)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(35.0)\n+                .setMinQ(-21.725)\n+                .setMaxQ(316.3500004)\n+                .endPoint()\n+                .add();\n+\n+        Load load2 = s1vl2.newLoad()\n+                .setId(\"LD2\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(42.18689)\n+                .setQ0(0.168945)\n+                .setNode(4)\n+                .add();\n+        load2.getTerminal()\n+                .setP(42.18689)\n+                .setQ(0.168945);\n+\n+        s1vl2.newShuntCompensator()\n+                .setId(\"SHUNT\")\n+                .setNode(24)\n+                .setMaximumSectionCount(1)\n+                .setCurrentSectionCount(1)\n+                .setbPerSection(-0.012)\n+                .add();\n+\n+        Load load3 = s1vl2.newLoad()\n+                .setId(\"LD3\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(48.455854)\n+                .setQ0(3.695925)\n+                .setNode(18)\n+                .add();\n+        load3.getTerminal()\n+                .setP(48.455854)\n+                .setQ(3.695925);\n+\n+        Load load4 = s1vl2.newLoad()\n+                .setId(\"LD4\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(40.39911)\n+                .setQ0(1.96869)\n+                .setNode(20)\n+                .add();\n+        load4.getTerminal()\n+                .setP(40.39911)\n+                .setQ(1.96869);\n+\n+        Load load5 = s1vl2.newLoad()\n+                .setId(\"LD5\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(-5.102249)\n+                .setQ0(4.9081216)\n+                .setNode(22)\n+                .add();\n+        load5.getTerminal()\n+                .setP(-5.102249)\n+                .setQ(4.9081216);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(2)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(10)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .add();\n+\n+        LccConverterStation lcc1 = s1vl2.newLccConverterStation()\n+                .setId(\"LCC1\")\n+                .setName(\"LCC1\")\n+                .setNode(25)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(50.0);\n+\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .setCountry(Country.ES)\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s2vl1, \"S2VL1_A\", \"S2VL1_A\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s2vl1, \"S2VL1_B\", \"S2VL1_B\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s2vl1, \"S2VL1_C\", \"S2VL1_C\", SwitchKind.BREAKER, true, false, true, 1, 2);\n+        createSwitch(s2vl1, \"S2VL1_D\", \"S2VL1_D\", SwitchKind.BREAKER, true, false, true, 3, 4);\n+        createSwitch(s2vl1, \"S2VL1_E\", \"S2VL1_E\", SwitchKind.DISCONNECTOR, true, false, true, 0, 5);\n+\n+        Generator generatorThermal1 = s2vl1.newGenerator()\n+                .setId(\"GTH1\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(70.0)\n+                .setTargetV(226)\n+                .setTargetQ(0.0)\n+                .setNode(2)\n+                .add();\n+        generatorThermal1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(57.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(36.4)\n+                .endPoint()\n+                .add();\n+\n+        VscConverterStation vsc2 = s2vl1.newVscConverterStation()\n+                .setId(\"VSC2\")\n+                .setName(\"VSC2\")\n+                .setNode(4)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(123)\n+                .setVoltageSetpoint(0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc2.newMinMaxReactiveLimits()\n+                .setMinQ(0.0)\n+                .setMaxQ(10.0)\n+                .add();\n+\n+        network.newHvdcLine()\n+                .setId(\"HVDC1\")\n+                .setName(\"HVDC1\")\n+                .setConverterStationId1(\"VSC1\")\n+                .setConverterStationId2(\"VSC2\")\n+                .setR(1)\n+                .setNominalV(400)\n+                .setConvertersMode(HvdcLine.ConvertersMode.SIDE_1_RECTIFIER_SIDE_2_INVERTER)\n+                .setMaxP(300.0)\n+                .setActivePowerSetpoint(100)\n+                .add();\n+\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .setCountry(Country.ES)\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s3vl1, \"S3VL1_A\", \"S3VL1_A\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s3vl1, \"S3VL1_B\", \"S3VL1_B\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s3vl1, \"S3VL1_C\", \"S3VL1_C\", SwitchKind.BREAKER, true, false, true, 1, 2);\n+        createSwitch(s3vl1, \"S3VL1_D\", \"S3VL1_D\", SwitchKind.BREAKER, true, false, true, 3, 4);\n+        createSwitch(s3vl1, \"S3VL1_E\", \"S3VL1_E\", SwitchKind.DISCONNECTOR, true, false, true, 0, 5);\n+        createSwitch(s3vl1, \"S3VL1_F\", \"S3VL1_F\", SwitchKind.BREAKER, true, false, true, 5, 6);\n+        createSwitch(s3vl1, \"S3VL1_G\", \"S3VL1_G\", SwitchKind.DISCONNECTOR, true, false, true, 0, 7);\n+        createSwitch(s3vl1, \"S3VL1_H\", \"S3VL1_H\", SwitchKind.DISCONNECTOR, true, false, true, 0, 8);\n+\n+        Load load6 = s3vl1.newLoad()\n+                .setId(\"LD6\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(50.989060)\n+                .setQ0(3.168945)\n+                .setNode(2)\n+                .add();\n+        load6.getTerminal()\n+                .setP(50.09778)\n+                .setQ(3.309844);\n+\n+        Generator generatorThermal2 = s3vl1.newGenerator()\n+                .setId(\"GTH2\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(70.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(30.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(6)\n+                .add();\n+        generatorThermal2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(60.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(70.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(46.25)\n+                .endPoint()\n+                .add();\n+\n+        LccConverterStation lcc2 = s3vl1.newLccConverterStation()\n+                .setId(\"LCC2\")\n+                .setName(\"LCC2\")\n+                .setNode(4)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc2.getTerminal()\n+                .setP(75.0)\n+                .setQ(25.0);\n+\n+        network.newHvdcLine()\n+                .setId(\"HVDC2\")\n+                .setName(\"HVDC2\")\n+                .setConverterStationId1(\"LCC1\")\n+                .setConverterStationId2(\"LCC2\")\n+                .setR(1)\n+                .setNominalV(400)\n+                .setConvertersMode(HvdcLine.ConvertersMode.SIDE_1_RECTIFIER_SIDE_2_INVERTER)\n+                .setMaxP(300.0)\n+                .setActivePowerSetpoint(100)\n+                .add();\n+\n+        network.newLine()\n+                .setId(\"LINE_S2S3\")\n+                .setR(0.009999999)\n+                .setX(0.100000024)\n+                .setG1(0.0)\n+                .setB1(0.0)\n+                .setG2(0.0)\n+                .setB2(0.0)\n+                .setNode1(5)\n+                .setVoltageLevel1(\"S2VL1\")\n+                .setNode2(7)\n+                .setVoltageLevel2(\"S3VL1\")\n+                .add();\n+\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .setCountry(Country.ES)\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(0.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        createSwitch(s4vl1, \"S4VL1_A\", \"S4VL1_A\", SwitchKind.DISCONNECTOR, false, false, true, 0, 1);\n+        createSwitch(s4vl1, \"S4VL1_B\", \"S4VL1_B\", SwitchKind.BREAKER, false, false, true, 1, 2);\n+        createSwitch(s4vl1, \"S4VL1_C\", \"S4VL1_C\", SwitchKind.DISCONNECTOR, false, false, true, 0, 3);\n+        createSwitch(s4vl1, \"S4VL1_D\", \"S4VL1_D\", SwitchKind.BREAKER, false, false, true, 3, 4);\n+        createSwitch(s4vl1, \"S4VL1_E\", \"S4VL1_E\", SwitchKind.DISCONNECTOR, false, false, true, 0, 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289b50932ab7f0a6ac1bd7427ad423bd0f68945"}, "originalPosition": 535}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgzMzMyOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozOToxMVrOGfMFdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozOToxMVrOGfMFdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NzA0NA==", "bodyText": "Be careful the copyright is not correct!", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r435357044", "createdAt": "2020-06-04T15:39:11Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, All partners of the iTesla project (http://www.itesla-project.eu/consortium)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f111cc8ee4e3e949a20efc4c1a1b032d5e8dc1a0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTU3OTI2OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxMDo1NlrOGh2t9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzowNjoyNlrOGimr1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1MjY5Mg==", "bodyText": "It's in kV not in percentage :)\nSo it would make more sense to have limits like 220/240.\nSame thing on other voltage levels of course.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438152692", "createdAt": "2020-06-10T14:10:56Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzODU4MA==", "bodyText": "I think Agnes misunderstand my comment: I suggest to have 80/120 percent...", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438938580", "createdAt": "2020-06-11T17:06:26Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1MjY5Mg=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTYyNTI3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoyMDo0OFrOGh3LVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNjoxNFrOGiibJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MDIxNQ==", "bodyText": "I know it has nothing to do with the PR, but do you confirm it should be percentages here?\nMaybe there's an opportunity to add it in the javadoc, because it's not obvious today.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438160215", "createdAt": "2020-06-10T14:20:48Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 219}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NzA5OA==", "bodyText": "@geofjamg do you know about it?", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438597098", "createdAt": "2020-06-11T07:34:08Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MDIxNQ=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 219}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2ODc3NQ==", "bodyText": "Yes, it is a percentage. See how do we process it in OLF: https://github.com/powsybl/powsybl-open-loadflow/blob/master/src/main/java/com/powsybl/openloadflow/network/impl/LfBusImpl.java", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438868775", "createdAt": "2020-06-11T15:26:14Z", "author": {"login": "geofjamg"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MDIxNQ=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 219}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTYzOTcxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoyMzo1NVrOGh3U3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozODowNVrOGiT4VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MjY1NQ==", "bodyText": "Maybe for an HVDC it would make more sense to have a diagram which starts at negative P, so that reactive limits are defined when it sends AND when it receives power.\nNot very important for a test network.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438162655", "createdAt": "2020-06-10T14:23:55Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5Nzk5Ng==", "bodyText": "@sylvlecl would -50 be a good value?", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438597996", "createdAt": "2020-06-11T07:35:53Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MjY1NQ=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzMDQ4NQ==", "bodyText": "I would simply put a -100 value, I guess usually the capabilities of HVDCs are symmetrical, in active power.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438630485", "createdAt": "2020-06-11T08:38:05Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MjY1NQ=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 229}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTY5NTUzOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDozNDo0MVrOGh34wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODo1OTo0MFrOGi8l2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3MTg0Mg==", "bodyText": "Maybe we should set P and Q on lines terminals to be consistent with other equipements?\nIt depends whether we want to provide a full computed state or not. If we do, it would be interesting to pass the \"loadflow validation\" on it !", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438171842", "createdAt": "2020-06-10T14:34:41Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three hydro generators on the bbs 1 of the second voltage level of substation 1, with a possibility to connect them onto bbs 2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 10);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 10);\n+        createSwitch(s1vl2, \"S1VL2_GH1_BREAKER\", SwitchKind.BREAKER, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_GH2_BREAKER\", SwitchKind.BREAKER, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_GH3_BREAKER\", SwitchKind.BREAKER, false, 10, 11);\n+\n+        Generator generatorHydro1 = s1vl2.newGenerator()\n+                .setId(\"GH1\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(100.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(80.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(50)\n+                .setNode(7)\n+                .add();\n+        generatorHydro1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(160.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(146.25)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro2 = s1vl2.newGenerator()\n+                .setId(\"GH2\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(40.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(9)\n+                .add();\n+        generatorHydro2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(257.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(236.4)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro3 = s1vl2.newGenerator()\n+                .setId(\"GH3\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(35.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(51.789589)\n+                .setTargetV(227)\n+                .setTargetQ(0.701546)\n+                .setNode(11)\n+                .add();\n+        generatorHydro3.getTerminal()\n+                .setP(-21.789589)\n+                .setQ(20.693394);\n+        generatorHydro3.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-20.6)\n+                .setMaxQ(318.1)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(35.0)\n+                .setMinQ(-21.725)\n+                .setMaxQ(316.3500004)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three loads on the bbs 2, with a possibility to connect them onto bbs 1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 16);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 16);\n+        createSwitch(s1vl2, \"S1VL2_LD2_BREAKER\", SwitchKind.BREAKER, false, 12, 13);\n+        createSwitch(s1vl2, \"S1VL2_LD3_BREAKER\", SwitchKind.BREAKER, false, 14, 15);\n+        createSwitch(s1vl2, \"S1VL2_LD4_BREAKER\", SwitchKind.BREAKER, false, 16, 17);\n+\n+        Load load2 = s1vl2.newLoad()\n+                .setId(\"LD2\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(48.455854)\n+                .setQ0(3.695925)\n+                .setNode(13)\n+                .add();\n+        load2.getTerminal()\n+                .setP(48.455854)\n+                .setQ(3.695925);\n+\n+        Load load3 = s1vl2.newLoad()\n+                .setId(\"LD3\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(40.39911)\n+                .setQ0(1.96869)\n+                .setNode(15)\n+                .add();\n+        load3.getTerminal()\n+                .setP(40.39911)\n+                .setQ(1.96869);\n+\n+        Load load4 = s1vl2.newLoad()\n+                .setId(\"LD4\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(-5.102249)\n+                .setQ0(4.9081216)\n+                .setNode(17)\n+                .add();\n+        load4.getTerminal()\n+                .setP(-5.102249)\n+                .setQ(4.9081216);\n+\n+        // Connect a shunt on the BBS1, with a possibility to connect it to BBS2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 18);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 18);\n+        createSwitch(s1vl2, \"S1VL2_SHUNT_BREAKER\", SwitchKind.BREAKER, false, 18, 19);\n+\n+        s1vl2.newShuntCompensator()\n+                .setId(\"SHUNT\")\n+                .setNode(19)\n+                .setMaximumSectionCount(1)\n+                .setCurrentSectionCount(1)\n+                .setbPerSection(-0.012)\n+                .add();\n+\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 20);\n+        createSwitch(s1vl2, \"S1VL2_LCC1_BREAKER\", SwitchKind.BREAKER, false, 20, 21);\n+\n+        LccConverterStation lcc1 = s1vl2.newLccConverterStation()\n+                .setId(\"LCC1\")\n+                .setName(\"LCC1\")\n+                .setNode(21)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(50.0);\n+\n+        // Add a coupler between the two busbar sections\n+        createSwitch(s1vl2, \"S1VL2_BBS1_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_COUPLER\", SwitchKind.BREAKER, false, 22, 23);\n+\n+        // Connect a thermal generator on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_GTH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s2vl1, \"S2VL1_GTH1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Generator generatorThermal1 = s2vl1.newGenerator()\n+                .setId(\"GTH1\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(70.0)\n+                .setTargetV(226)\n+                .setTargetQ(0.0)\n+                .setNode(2)\n+                .add();\n+        generatorThermal1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(57.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(36.4)\n+                .endPoint()\n+                .add();\n+\n+        // Connect a second VSC station on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_VSC2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s2vl1, \"S2VL1_VSC2_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        VscConverterStation vsc2 = s2vl1.newVscConverterStation()\n+                .setId(\"VSC2\")\n+                .setName(\"VSC2\")\n+                .setNode(4)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(123)\n+                .setVoltageSetpoint(0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc2.newMinMaxReactiveLimits()\n+                .setMinQ(0.0)\n+                .setMaxQ(10.0)\n+                .add();\n+\n+        // The substations 1 and 2 are linked through an HVDC line\n+        network.newHvdcLine()\n+                .setId(\"HVDC1\")\n+                .setName(\"HVDC1\")\n+                .setConverterStationId1(\"VSC1\")\n+                .setConverterStationId2(\"VSC2\")\n+                .setR(1)\n+                .setNominalV(400)\n+                .setConvertersMode(HvdcLine.ConvertersMode.SIDE_1_RECTIFIER_SIDE_2_INVERTER)\n+                .setMaxP(300.0)\n+                .setActivePowerSetpoint(100)\n+                .add();\n+\n+        // The substations 2 and 3 are connected through a line\n+        createSwitch(s2vl1, \"S2VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s2vl1, \"S2VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        createSwitch(s3vl1, \"S3VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s3vl1, \"S3VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        network.newLine()\n+                .setId(\"LINE_S2S3\")\n+                .setR(0.009999999)\n+                .setX(0.100000024)\n+                .setG1(0.0)\n+                .setB1(0.0)\n+                .setG2(0.0)\n+                .setB2(0.0)\n+                .setNode1(6)\n+                .setVoltageLevel1(\"S2VL1\")\n+                .setNode2(2)\n+                .setVoltageLevel2(\"S3VL1\")\n+                .add();\n+\n+        // Connect a load onto the third substation\n+        createSwitch(s3vl1, \"S3VL1_BBS_LD5_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s3vl1, \"S3VL1_LD5_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        Load load5 = s3vl1.newLoad()\n+                .setId(\"LD5\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(50.989060)\n+                .setQ0(3.168945)\n+                .setNode(4)\n+                .add();\n+        load5.getTerminal()\n+                .setP(50.09778)\n+                .setQ(3.309844);\n+\n+        // Connect a thermal generator onto the third substation\n+        createSwitch(s3vl1, \"S3VL1_BBS_GTH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s3vl1, \"S3VL1_GTH2_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        Generator generatorThermal2 = s3vl1.newGenerator()\n+                .setId(\"GTH2\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(70.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(30.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(6)\n+                .add();\n+        generatorThermal2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(60.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(70.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(46.25)\n+                .endPoint()\n+                .add();\n+\n+        // The stations 3 and 4 are linked by a line\n+        createSwitch(s3vl1, \"S3VL1_BBS_LINES3S4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 7);\n+        createSwitch(s3vl1, \"S3VL1_LINES3S4_BREAKER\", SwitchKind.BREAKER, false, 7, 8);\n+        createSwitch(s4vl1, \"S4VL1_BBS_LINES3S4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s4vl1, \"S4VL1_LINES3S4_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        Line lineS3S4 = network.newLine()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 525}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NzQ5OA==", "bodyText": "I have now modified the network so that it corresponds to the loadflow results by Hades2, but the loadflow validation fails on generators and buses. I do not understand why though. @annetill could you have a look at it please? Thanks.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r439297498", "createdAt": "2020-06-12T08:59:40Z", "author": {"login": "agnesLeroy"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three hydro generators on the bbs 1 of the second voltage level of substation 1, with a possibility to connect them onto bbs 2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 10);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 10);\n+        createSwitch(s1vl2, \"S1VL2_GH1_BREAKER\", SwitchKind.BREAKER, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_GH2_BREAKER\", SwitchKind.BREAKER, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_GH3_BREAKER\", SwitchKind.BREAKER, false, 10, 11);\n+\n+        Generator generatorHydro1 = s1vl2.newGenerator()\n+                .setId(\"GH1\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(100.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(80.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(50)\n+                .setNode(7)\n+                .add();\n+        generatorHydro1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(160.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(146.25)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro2 = s1vl2.newGenerator()\n+                .setId(\"GH2\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(40.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(9)\n+                .add();\n+        generatorHydro2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(257.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(236.4)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro3 = s1vl2.newGenerator()\n+                .setId(\"GH3\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(35.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(51.789589)\n+                .setTargetV(227)\n+                .setTargetQ(0.701546)\n+                .setNode(11)\n+                .add();\n+        generatorHydro3.getTerminal()\n+                .setP(-21.789589)\n+                .setQ(20.693394);\n+        generatorHydro3.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-20.6)\n+                .setMaxQ(318.1)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(35.0)\n+                .setMinQ(-21.725)\n+                .setMaxQ(316.3500004)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three loads on the bbs 2, with a possibility to connect them onto bbs 1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 16);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 16);\n+        createSwitch(s1vl2, \"S1VL2_LD2_BREAKER\", SwitchKind.BREAKER, false, 12, 13);\n+        createSwitch(s1vl2, \"S1VL2_LD3_BREAKER\", SwitchKind.BREAKER, false, 14, 15);\n+        createSwitch(s1vl2, \"S1VL2_LD4_BREAKER\", SwitchKind.BREAKER, false, 16, 17);\n+\n+        Load load2 = s1vl2.newLoad()\n+                .setId(\"LD2\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(48.455854)\n+                .setQ0(3.695925)\n+                .setNode(13)\n+                .add();\n+        load2.getTerminal()\n+                .setP(48.455854)\n+                .setQ(3.695925);\n+\n+        Load load3 = s1vl2.newLoad()\n+                .setId(\"LD3\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(40.39911)\n+                .setQ0(1.96869)\n+                .setNode(15)\n+                .add();\n+        load3.getTerminal()\n+                .setP(40.39911)\n+                .setQ(1.96869);\n+\n+        Load load4 = s1vl2.newLoad()\n+                .setId(\"LD4\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(-5.102249)\n+                .setQ0(4.9081216)\n+                .setNode(17)\n+                .add();\n+        load4.getTerminal()\n+                .setP(-5.102249)\n+                .setQ(4.9081216);\n+\n+        // Connect a shunt on the BBS1, with a possibility to connect it to BBS2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 18);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 18);\n+        createSwitch(s1vl2, \"S1VL2_SHUNT_BREAKER\", SwitchKind.BREAKER, false, 18, 19);\n+\n+        s1vl2.newShuntCompensator()\n+                .setId(\"SHUNT\")\n+                .setNode(19)\n+                .setMaximumSectionCount(1)\n+                .setCurrentSectionCount(1)\n+                .setbPerSection(-0.012)\n+                .add();\n+\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 20);\n+        createSwitch(s1vl2, \"S1VL2_LCC1_BREAKER\", SwitchKind.BREAKER, false, 20, 21);\n+\n+        LccConverterStation lcc1 = s1vl2.newLccConverterStation()\n+                .setId(\"LCC1\")\n+                .setName(\"LCC1\")\n+                .setNode(21)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(50.0);\n+\n+        // Add a coupler between the two busbar sections\n+        createSwitch(s1vl2, \"S1VL2_BBS1_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_COUPLER\", SwitchKind.BREAKER, false, 22, 23);\n+\n+        // Connect a thermal generator on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_GTH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s2vl1, \"S2VL1_GTH1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Generator generatorThermal1 = s2vl1.newGenerator()\n+                .setId(\"GTH1\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(70.0)\n+                .setTargetV(226)\n+                .setTargetQ(0.0)\n+                .setNode(2)\n+                .add();\n+        generatorThermal1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(57.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(36.4)\n+                .endPoint()\n+                .add();\n+\n+        // Connect a second VSC station on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_VSC2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s2vl1, \"S2VL1_VSC2_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        VscConverterStation vsc2 = s2vl1.newVscConverterStation()\n+                .setId(\"VSC2\")\n+                .setName(\"VSC2\")\n+                .setNode(4)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(123)\n+                .setVoltageSetpoint(0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc2.newMinMaxReactiveLimits()\n+                .setMinQ(0.0)\n+                .setMaxQ(10.0)\n+                .add();\n+\n+        // The substations 1 and 2 are linked through an HVDC line\n+        network.newHvdcLine()\n+                .setId(\"HVDC1\")\n+                .setName(\"HVDC1\")\n+                .setConverterStationId1(\"VSC1\")\n+                .setConverterStationId2(\"VSC2\")\n+                .setR(1)\n+                .setNominalV(400)\n+                .setConvertersMode(HvdcLine.ConvertersMode.SIDE_1_RECTIFIER_SIDE_2_INVERTER)\n+                .setMaxP(300.0)\n+                .setActivePowerSetpoint(100)\n+                .add();\n+\n+        // The substations 2 and 3 are connected through a line\n+        createSwitch(s2vl1, \"S2VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s2vl1, \"S2VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        createSwitch(s3vl1, \"S3VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s3vl1, \"S3VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        network.newLine()\n+                .setId(\"LINE_S2S3\")\n+                .setR(0.009999999)\n+                .setX(0.100000024)\n+                .setG1(0.0)\n+                .setB1(0.0)\n+                .setG2(0.0)\n+                .setB2(0.0)\n+                .setNode1(6)\n+                .setVoltageLevel1(\"S2VL1\")\n+                .setNode2(2)\n+                .setVoltageLevel2(\"S3VL1\")\n+                .add();\n+\n+        // Connect a load onto the third substation\n+        createSwitch(s3vl1, \"S3VL1_BBS_LD5_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s3vl1, \"S3VL1_LD5_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        Load load5 = s3vl1.newLoad()\n+                .setId(\"LD5\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(50.989060)\n+                .setQ0(3.168945)\n+                .setNode(4)\n+                .add();\n+        load5.getTerminal()\n+                .setP(50.09778)\n+                .setQ(3.309844);\n+\n+        // Connect a thermal generator onto the third substation\n+        createSwitch(s3vl1, \"S3VL1_BBS_GTH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s3vl1, \"S3VL1_GTH2_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        Generator generatorThermal2 = s3vl1.newGenerator()\n+                .setId(\"GTH2\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(70.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(30.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(6)\n+                .add();\n+        generatorThermal2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(60.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(70.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(46.25)\n+                .endPoint()\n+                .add();\n+\n+        // The stations 3 and 4 are linked by a line\n+        createSwitch(s3vl1, \"S3VL1_BBS_LINES3S4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 7);\n+        createSwitch(s3vl1, \"S3VL1_LINES3S4_BREAKER\", SwitchKind.BREAKER, false, 7, 8);\n+        createSwitch(s4vl1, \"S4VL1_BBS_LINES3S4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s4vl1, \"S4VL1_LINES3S4_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        Line lineS3S4 = network.newLine()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3MTg0Mg=="}, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 525}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTgwMTk2OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1NzowNVrOGh48_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1NzowNVrOGh48_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4OTMxMQ==", "bodyText": "Not sure it's really useful but maybe we could set a higher value for lines impedance: 0.1 is pretty small, in particular compared to the value of the transformer.\nAnyway, it will not change the flows distribution.", "url": "https://github.com/powsybl/powsybl-core/pull/1318#discussion_r438189311", "createdAt": "2020-06-10T14:57:05Z", "author": {"login": "sylvlecl"}, "path": "iidm/iidm-test/src/main/java/com/powsybl/iidm/network/test/FourSubstationsNodeBreakerFactory.java", "diffHunk": "@@ -0,0 +1,644 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.test;\n+\n+import com.powsybl.iidm.network.*;\n+import org.joda.time.DateTime;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This test network is constituted of four substations, with five voltage levels.\n+ * Below is a diagram of the network:\n+ * <div>\n+ *    <object data=\"doc-files/fourSubstationsNetwork.svg\" type=\"image/svg+xml\"></object>\n+ * </div>\n+ *\n+ *\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+\n+public final class FourSubstationsNodeBreakerFactory {\n+\n+    private FourSubstationsNodeBreakerFactory() {\n+    }\n+\n+    public static Network create() {\n+        return create(NetworkFactory.findDefault());\n+    }\n+\n+    public static Network create(NetworkFactory networkFactory) {\n+        Objects.requireNonNull(networkFactory);\n+\n+        Network network = networkFactory.createNetwork(\"fourSubstations\", \"test\");\n+        network.setCaseDate(DateTime.parse(\"2017-06-25T17:43:00.000+01:00\"));\n+        network.setForecastDistance(0);\n+\n+        // First substation\n+        // It is constituted of 2 voltage levels\n+        // The second voltage levels comprises two busbar sections\n+        Substation s1 = network.newSubstation()\n+                .setId(\"S1\")\n+                .add();\n+        VoltageLevel s1vl1 = s1.newVoltageLevel()\n+                .setId(\"S1VL1\")\n+                .setNominalV(225.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL1 = s1vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL1_BBS\")\n+                .setName(\"S1VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+        VoltageLevel s1vl2 = s1.newVoltageLevel()\n+                .setId(\"S1VL2\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS1VL21 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS1\")\n+                .setName(\"S1VL2_BBS1\")\n+                .setNode(0)\n+                .add();\n+        BusbarSection busbarSectionS1VL22 = s1vl2.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S1VL2_BBS2\")\n+                .setName(\"S1VL2_BBS2\")\n+                .setNode(1)\n+                .add();\n+\n+        // Second substation\n+        Substation s2 = network.newSubstation()\n+                .setId(\"S2\")\n+                .add();\n+        VoltageLevel s2vl1 = s2.newVoltageLevel()\n+                .setId(\"S2VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS2VL1 = s2vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S2VL1_BBS\")\n+                .setName(\"S2VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Third substation\n+        Substation s3 = network.newSubstation()\n+                .setId(\"S3\")\n+                .add();\n+        VoltageLevel s3vl1 = s3.newVoltageLevel()\n+                .setId(\"S3VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS3VL1 = s3vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S3VL1_BBS\")\n+                .setName(\"S3VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Fourth substation\n+        Substation s4 = network.newSubstation()\n+                .setId(\"S4\")\n+                .add();\n+        VoltageLevel s4vl1 = s4.newVoltageLevel()\n+                .setId(\"S4VL1\")\n+                .setNominalV(400.0)\n+                .setLowVoltageLimit(80.0)\n+                .setHighVoltageLimit(120.0)\n+                .setTopologyKind(TopologyKind.NODE_BREAKER)\n+                .add();\n+        BusbarSection busbarSectionS4VL1 = s4vl1.getNodeBreakerView().newBusbarSection()\n+                .setId(\"S4VL1_BBS\")\n+                .setName(\"S4VL1_BBS\")\n+                .setNode(0)\n+                .add();\n+\n+        // Connect a load on the first voltage level of substation 1\n+        createSwitch(s1vl1, \"S1VL1_BBS_LD1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s1vl1, \"S1VL1_LD1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Load load1 = s1vl1.newLoad()\n+                .setId(\"LD1\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(25)\n+                .setQ0(10.168945)\n+                .setNode(2)\n+                .add();\n+        load1.getTerminal()\n+                .setP(25)\n+                .setQ(10.168945);\n+\n+        // Connect a TWT between the two voltage levels of substation 1, on the bus bar section 1 of the second voltage level\n+        // TWT could be connected to bbs 2 of the second VL through a second disconnector, which is open at the moment\n+        createSwitch(s1vl1, \"S1VL1_BBS_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s1vl1, \"S1VL1_TWT_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 2);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_TWT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 2);\n+        createSwitch(s1vl2, \"S1VL2_TWT_BREAKER\", SwitchKind.BREAKER, false, 2, 3);\n+\n+        TwoWindingsTransformer twt = s1.newTwoWindingsTransformer()\n+                .setId(\"TWT\")\n+                .setR(2.0)\n+                .setX(14.745)\n+                .setG(0.0)\n+                .setB(3.2E-5)\n+                .setRatedU1(225.0)\n+                .setRatedU2(225.0)\n+                .setNode1(4)\n+                .setVoltageLevel1(\"S1VL1\")\n+                .setNode2(3)\n+                .setVoltageLevel2(\"S1VL2\")\n+                .add();\n+        twt.newCurrentLimits1()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newCurrentLimits2()\n+                .setPermanentLimit(931.0)\n+                .add();\n+        twt.newPhaseTapChanger()\n+                .setLowTapPosition(0)\n+                .setTapPosition(22)\n+                .setRegulationMode(PhaseTapChanger.RegulationMode.CURRENT_LIMITER)\n+                .setRegulationValue(930.6667)\n+                .setRegulating(false)\n+                .setRegulationTerminal(twt.getTerminal(Branch.Side.ONE))\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-42.8).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-40.18).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-37.54).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-34.9).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-32.26).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-29.6).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-26.94).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-24.26).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-21.58).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-18.9).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-16.22).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-13.52).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-10.82).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-8.12).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-5.42).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(-2.7).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(0.0).endStep()\n+                .beginStep().setR(-28.763538).setX(-28.763536).setG(0.0).setB(0.0).setRho(1.0).setAlpha(2.7).endStep()\n+                .beginStep().setR(-28.091503).setX(-28.091503).setG(0.0).setB(0.0).setRho(1.0).setAlpha(5.42).endStep()\n+                .beginStep().setR(-26.747417).setX(-26.747417).setG(0.0).setB(0.0).setRho(1.0).setAlpha(8.12).endStep()\n+                .beginStep().setR(-24.73129).setX(-24.731287).setG(0.0).setB(0.0).setRho(1.0).setAlpha(10.82).endStep()\n+                .beginStep().setR(-22.043127).setX(-22.043129).setG(0.0).setB(0.0).setRho(1.0).setAlpha(13.52).endStep()\n+                .beginStep().setR(-19.354952).setX(-19.354952).setG(0.0).setB(0.0).setRho(1.0).setAlpha(16.22).endStep()\n+                .beginStep().setR(-15.994745).setX(-15.994745).setG(0.0).setB(0.0).setRho(1.0).setAlpha(18.9).endStep()\n+                .beginStep().setR(-11.962485).setX(-11.962484).setG(0.0).setB(0.0).setRho(1.0).setAlpha(21.58).endStep()\n+                .beginStep().setR(-7.258195).setX(-7.2581954).setG(0.0).setB(0.0).setRho(1.0).setAlpha(24.26).endStep()\n+                .beginStep().setR(-1.8818557).setX(-1.8818527).setG(0.0).setB(0.0).setRho(1.0).setAlpha(26.94).endStep()\n+                .beginStep().setR(3.4944773).setX(3.4944773).setG(0.0).setB(0.0).setRho(1.0).setAlpha(29.6).endStep()\n+                .beginStep().setR(9.542847).setX(9.542842).setG(0.0).setB(0.0).setRho(1.0).setAlpha(32.26).endStep()\n+                .beginStep().setR(16.263271).setX(16.263268).setG(0.0).setB(0.0).setRho(1.0).setAlpha(34.9).endStep()\n+                .beginStep().setR(23.655737).setX(23.655735).setG(0.0).setB(0.0).setRho(1.0).setAlpha(37.54).endStep()\n+                .beginStep().setR(31.720245).setX(31.720242).setG(0.0).setB(0.0).setRho(1.0).setAlpha(40.18).endStep()\n+                .beginStep().setR(39.78473).setX(39.784725).setG(0.0).setB(0.0).setRho(1.0).setAlpha(42.8).endStep()\n+                .add();\n+\n+        // Connect a VSC station to BBS2 of the second voltage level of substation 1, with a possibility to connect it to BBS1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 4);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_VSC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 4);\n+        createSwitch(s1vl2, \"S1VL2_VSC1_BREAKER\", SwitchKind.BREAKER, false, 4, 5);\n+        VscConverterStation vsc1 = s1vl2.newVscConverterStation()\n+                .setId(\"VSC1\")\n+                .setName(\"VSC1\")\n+                .setNode(5)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(500)\n+                .setVoltageSetpoint(227.0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(0.0);\n+        vsc1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(5.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-200.0)\n+                .setMaxQ(100.0)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three hydro generators on the bbs 1 of the second voltage level of substation 1, with a possibility to connect them onto bbs 2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 10);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 6);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 8);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_GH3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 10);\n+        createSwitch(s1vl2, \"S1VL2_GH1_BREAKER\", SwitchKind.BREAKER, false, 6, 7);\n+        createSwitch(s1vl2, \"S1VL2_GH2_BREAKER\", SwitchKind.BREAKER, false, 8, 9);\n+        createSwitch(s1vl2, \"S1VL2_GH3_BREAKER\", SwitchKind.BREAKER, false, 10, 11);\n+\n+        Generator generatorHydro1 = s1vl2.newGenerator()\n+                .setId(\"GH1\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(100.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(80.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(50)\n+                .setNode(7)\n+                .add();\n+        generatorHydro1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-59.3)\n+                .setMaxQ(160.0)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(100.0)\n+                .setMinQ(-54.55)\n+                .setMaxQ(146.25)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro2 = s1vl2.newGenerator()\n+                .setId(\"GH2\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(false)\n+                .setTargetP(40.0)\n+                .setTargetV(0.0)\n+                .setTargetQ(0.0)\n+                .setNode(9)\n+                .add();\n+        generatorHydro2.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(257.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(236.4)\n+                .endPoint()\n+                .add();\n+\n+        Generator generatorHydro3 = s1vl2.newGenerator()\n+                .setId(\"GH3\")\n+                .setEnergySource(EnergySource.HYDRO)\n+                .setMinP(0.0)\n+                .setMaxP(35.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(51.789589)\n+                .setTargetV(227)\n+                .setTargetQ(0.701546)\n+                .setNode(11)\n+                .add();\n+        generatorHydro3.getTerminal()\n+                .setP(-21.789589)\n+                .setQ(20.693394);\n+        generatorHydro3.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-20.6)\n+                .setMaxQ(318.1)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(35.0)\n+                .setMinQ(-21.725)\n+                .setMaxQ(316.3500004)\n+                .endPoint()\n+                .add();\n+\n+        // Connect three loads on the bbs 2, with a possibility to connect them onto bbs 1\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 16);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 12);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 14);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LD4_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 16);\n+        createSwitch(s1vl2, \"S1VL2_LD2_BREAKER\", SwitchKind.BREAKER, false, 12, 13);\n+        createSwitch(s1vl2, \"S1VL2_LD3_BREAKER\", SwitchKind.BREAKER, false, 14, 15);\n+        createSwitch(s1vl2, \"S1VL2_LD4_BREAKER\", SwitchKind.BREAKER, false, 16, 17);\n+\n+        Load load2 = s1vl2.newLoad()\n+                .setId(\"LD2\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(48.455854)\n+                .setQ0(3.695925)\n+                .setNode(13)\n+                .add();\n+        load2.getTerminal()\n+                .setP(48.455854)\n+                .setQ(3.695925);\n+\n+        Load load3 = s1vl2.newLoad()\n+                .setId(\"LD3\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(40.39911)\n+                .setQ0(1.96869)\n+                .setNode(15)\n+                .add();\n+        load3.getTerminal()\n+                .setP(40.39911)\n+                .setQ(1.96869);\n+\n+        Load load4 = s1vl2.newLoad()\n+                .setId(\"LD4\")\n+                .setLoadType(LoadType.UNDEFINED)\n+                .setP0(-5.102249)\n+                .setQ0(4.9081216)\n+                .setNode(17)\n+                .add();\n+        load4.getTerminal()\n+                .setP(-5.102249)\n+                .setQ(4.9081216);\n+\n+        // Connect a shunt on the BBS1, with a possibility to connect it to BBS2\n+        createSwitch(s1vl2, \"S1VL2_BBS1_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 18);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_SHUNT_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 1, 18);\n+        createSwitch(s1vl2, \"S1VL2_SHUNT_BREAKER\", SwitchKind.BREAKER, false, 18, 19);\n+\n+        s1vl2.newShuntCompensator()\n+                .setId(\"SHUNT\")\n+                .setNode(19)\n+                .setMaximumSectionCount(1)\n+                .setCurrentSectionCount(1)\n+                .setbPerSection(-0.012)\n+                .add();\n+\n+        createSwitch(s1vl2, \"S1VL2_BBS1_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, true, 0, 20);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_LCC1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 20);\n+        createSwitch(s1vl2, \"S1VL2_LCC1_BREAKER\", SwitchKind.BREAKER, false, 20, 21);\n+\n+        LccConverterStation lcc1 = s1vl2.newLccConverterStation()\n+                .setId(\"LCC1\")\n+                .setName(\"LCC1\")\n+                .setNode(21)\n+                .setLossFactor(1.1f)\n+                .setPowerFactor(0.6f)\n+                .add();\n+        lcc1.getTerminal()\n+                .setP(100.0)\n+                .setQ(50.0);\n+\n+        // Add a coupler between the two busbar sections\n+        createSwitch(s1vl2, \"S1VL2_BBS1_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 22);\n+        createSwitch(s1vl2, \"S1VL2_BBS2_COUPLER_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 1, 23);\n+        createSwitch(s1vl2, \"S1VL2_COUPLER\", SwitchKind.BREAKER, false, 22, 23);\n+\n+        // Connect a thermal generator on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_GTH1_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s2vl1, \"S2VL1_GTH1_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        Generator generatorThermal1 = s2vl1.newGenerator()\n+                .setId(\"GTH1\")\n+                .setEnergySource(EnergySource.THERMAL)\n+                .setMinP(0.0)\n+                .setMaxP(80.0)\n+                .setVoltageRegulatorOn(true)\n+                .setTargetP(70.0)\n+                .setTargetV(226)\n+                .setTargetQ(0.0)\n+                .setNode(2)\n+                .add();\n+        generatorThermal1.newReactiveCapabilityCurve()\n+                .beginPoint()\n+                .setP(0.0)\n+                .setMinQ(-56.8)\n+                .setMaxQ(57.4)\n+                .endPoint()\n+                .beginPoint()\n+                .setP(80.0)\n+                .setMinQ(-53.514)\n+                .setMaxQ(36.4)\n+                .endPoint()\n+                .add();\n+\n+        // Connect a second VSC station on the second substation\n+        createSwitch(s2vl1, \"S2VL1_BBS_VSC2_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 3);\n+        createSwitch(s2vl1, \"S2VL1_VSC2_BREAKER\", SwitchKind.BREAKER, false, 3, 4);\n+        VscConverterStation vsc2 = s2vl1.newVscConverterStation()\n+                .setId(\"VSC2\")\n+                .setName(\"VSC2\")\n+                .setNode(4)\n+                .setLossFactor(1.1f)\n+                .setReactivePowerSetpoint(123)\n+                .setVoltageSetpoint(0)\n+                .setVoltageRegulatorOn(false)\n+                .add();\n+        vsc2.newMinMaxReactiveLimits()\n+                .setMinQ(0.0)\n+                .setMaxQ(10.0)\n+                .add();\n+\n+        // The substations 1 and 2 are linked through an HVDC line\n+        network.newHvdcLine()\n+                .setId(\"HVDC1\")\n+                .setName(\"HVDC1\")\n+                .setConverterStationId1(\"VSC1\")\n+                .setConverterStationId2(\"VSC2\")\n+                .setR(1)\n+                .setNominalV(400)\n+                .setConvertersMode(HvdcLine.ConvertersMode.SIDE_1_RECTIFIER_SIDE_2_INVERTER)\n+                .setMaxP(300.0)\n+                .setActivePowerSetpoint(100)\n+                .add();\n+\n+        // The substations 2 and 3 are connected through a line\n+        createSwitch(s2vl1, \"S2VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 5);\n+        createSwitch(s2vl1, \"S2VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 5, 6);\n+        createSwitch(s3vl1, \"S3VL1_BBS_LINES2S3_DISCONNECTOR\", SwitchKind.DISCONNECTOR, false, 0, 1);\n+        createSwitch(s3vl1, \"S3VL1_LINES2S3_BREAKER\", SwitchKind.BREAKER, false, 1, 2);\n+        network.newLine()\n+                .setId(\"LINE_S2S3\")\n+                .setR(0.009999999)\n+                .setX(0.100000024)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "422fd544c613bc87b8678ac0c2504dec7c2e7563"}, "originalPosition": 468}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 107, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}