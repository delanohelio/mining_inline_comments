{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzY4NDk4", "number": 1129, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMjozNlrODa0qgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODowNToxM1rODbIPcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDUyNDE2OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMjozN1rOFh9dUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMjozN1rOFh9dUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NDI1Ng==", "bodyText": "Implement this in the opposite way: the constructor with the biggest number of parameter should contain the logic. The other constructor(s) should call it with default values", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371154256", "createdAt": "2020-01-27T10:12:37Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -50,6 +52,11 @@ public ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, T\n         this.throwExceptionIfExtensionNotFound = throwExceptionIfExtensionNotFound;\n     }\n \n+    public ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound, String version) {\n+        this(withBranchSV, indent, onlyMainCc, topologyLevel, throwExceptionIfExtensionNotFound);\n+        this.version = version;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e2f4833a4bdf60255d37ce3dafe41a6b10afa3"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDUyNjc3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractConnectableXml.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMzoyOFrOFh9e4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMzoyOFrOFh9e4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NDY1Ng==", "bodyText": "Not sure this should be deprecated: for most people, export network using the current version is OK?", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371154656", "createdAt": "2020-01-27T10:13:28Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractConnectableXml.java", "diffHunk": "@@ -153,31 +151,47 @@ public static void readCurrentLimits(Integer index, Supplier<CurrentLimitsAdder>\n                 double value = XmlUtil.readOptionalDoubleAttribute(reader, \"value\", Double.MAX_VALUE);\n                 boolean fictitious = XmlUtil.readOptionalBoolAttribute(reader, \"fictitious\", false);\n                 adder.beginTemporaryLimit()\n-                    .setName(name)\n-                    .setAcceptableDuration(acceptableDuration)\n-                    .setValue(value)\n-                    .setFictitious(fictitious)\n-                    .endTemporaryLimit();\n+                        .setName(name)\n+                        .setAcceptableDuration(acceptableDuration)\n+                        .setValue(value)\n+                        .setFictitious(fictitious)\n+                        .endTemporaryLimit();\n             }\n         });\n         adder.add();\n     }\n \n+    /**\n+     * @deprecated Use {@link #writeCurrentLimits(Integer, CurrentLimits, XMLStreamWriter, IidmXmlVersion)} instead.\n+     */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e2f4833a4bdf60255d37ce3dafe41a6b10afa3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDUyNzg5OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractNetworkXmlContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMzo1M1rOFh9fnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxMzo1M1rOFh9fnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NDg0NA==", "bodyText": "Assert that it's not null", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371154844", "createdAt": "2020-01-27T10:13:53Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractNetworkXmlContext.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.xml;\n+\n+import com.powsybl.iidm.AbstractConverterContext;\n+import com.powsybl.iidm.anonymizer.Anonymizer;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public abstract class AbstractNetworkXmlContext<T> extends AbstractConverterContext<T> {\n+\n+    private final IidmXmlVersion version;\n+\n+    AbstractNetworkXmlContext(Anonymizer anonymizer, IidmXmlVersion version) {\n+        super(anonymizer);\n+        this.version = version;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e2f4833a4bdf60255d37ce3dafe41a6b10afa3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDUzNDgwOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ThreeWindingsTransformerXml.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNjowM1rOFh9jow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNjowM1rOFh9jow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NTg3NQ==", "bodyText": "Maybe you should also introduce RATIO_TAP_CHANGER_2 and RATIO_TAP_CHANGER_3 even there is no duplication yet", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371155875", "createdAt": "2020-01-27T10:16:03Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ThreeWindingsTransformerXml.java", "diffHunk": "@@ -22,6 +22,11 @@\n \n     static final String ROOT_ELEMENT_NAME = \"threeWindingsTransformer\";\n \n+    private static final String RATIO_TAP_CHANGER_1 = \"ratioTapChanger1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e2f4833a4bdf60255d37ce3dafe41a6b10afa3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDUzOTM4OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNzozNFrOFh9mVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNzozNFrOFh9mVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NjU2Ng==", "bodyText": "Why don't you use the default Runnable? Maybe for exception handling? In that case, I think we have an UncheckedXmlStreamException", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371156566", "createdAt": "2020-01-27T10:17:34Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "diffHunk": "@@ -7,17 +7,29 @@\n package com.powsybl.iidm.xml.util;\n \n import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.xml.XmlUtil;\n+import com.powsybl.iidm.xml.AbstractNetworkXmlContext;\n import com.powsybl.iidm.xml.IidmXmlVersion;\n import com.powsybl.iidm.xml.NetworkXmlReaderContext;\n+import com.powsybl.iidm.xml.NetworkXmlWriterContext;\n+\n+import javax.xml.stream.XMLStreamException;\n+import java.util.Objects;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n public final class IidmXmlUtil {\n \n+    public interface IidmXmlRunnable {\n+        void run() throws XMLStreamException;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e2f4833a4bdf60255d37ce3dafe41a6b10afa3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzcyNzIxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODowMzoxM1rOFib39Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0NjoxOVrOFjyF7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1MjU5Nw==", "bodyText": "To be discussed: I'm not sure we should allow null values", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371652597", "createdAt": "2020-01-28T08:03:13Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -39,15 +39,22 @@\n \n     private boolean throwExceptionIfExtensionNotFound = false;\n \n+    private String version;\n+\n     public ExportOptions() {\n     }\n \n     public ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound) {\n+        this(withBranchSV, indent, onlyMainCc, topologyLevel, throwExceptionIfExtensionNotFound, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4e77fb5531cfb003de37424ec3354e389920c8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2NTE5OQ==", "bodyText": "In my opinion, null for version would mean the same as \"default\" version i.e. the most recent version (which is implemented in NetworkXml).\nThe logic here of using null for undefined rather than directly a defined value is that if we use ExportOptions for an another serialization of IIDM in the future (IIDM-JSON for example), the most recent version of this serialization does not have to be the same as IIDM-XML most recent version. In this case, keeping it undefined and letting the converter itself assert the defaut version is the best solution I think.", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r373065199", "createdAt": "2020-01-30T16:46:19Z", "author": {"login": "miovd"}, "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -39,15 +39,22 @@\n \n     private boolean throwExceptionIfExtensionNotFound = false;\n \n+    private String version;\n+\n     public ExportOptions() {\n     }\n \n     public ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound) {\n+        this(withBranchSV, indent, onlyMainCc, topologyLevel, throwExceptionIfExtensionNotFound, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1MjU5Nw=="}, "originalCommit": {"oid": "ef4e77fb5531cfb003de37424ec3354e389920c8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzczMTcxOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractConnectableXml.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODowNToxM1rOFib6lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0OTowMlrOFjyMGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1MzI3MQ==", "bodyText": "To be discussed: I fact, I have a doubt now... This method is not really public, but private package... maybe you were right yesterday when I asked you to remove the deprecated. I think we should even break the API and make this method private package.\nIs this method still used?", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r371653271", "createdAt": "2020-01-28T08:05:13Z", "author": {"login": "mathbagu"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractConnectableXml.java", "diffHunk": "@@ -153,31 +151,39 @@ public static void readCurrentLimits(Integer index, Supplier<CurrentLimitsAdder>\n                 double value = XmlUtil.readOptionalDoubleAttribute(reader, \"value\", Double.MAX_VALUE);\n                 boolean fictitious = XmlUtil.readOptionalBoolAttribute(reader, \"fictitious\", false);\n                 adder.beginTemporaryLimit()\n-                    .setName(name)\n-                    .setAcceptableDuration(acceptableDuration)\n-                    .setValue(value)\n-                    .setFictitious(fictitious)\n-                    .endTemporaryLimit();\n+                        .setName(name)\n+                        .setAcceptableDuration(acceptableDuration)\n+                        .setValue(value)\n+                        .setFictitious(fictitious)\n+                        .endTemporaryLimit();\n             }\n         });\n         adder.add();\n     }\n \n     public static void writeCurrentLimits(Integer index, CurrentLimits limits, XMLStreamWriter writer) throws XMLStreamException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4e77fb5531cfb003de37424ec3354e389920c8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2Njc3Ng==", "bodyText": "Currently, it is only used in some extensions relying on CurrentLimits. Not sure either if this should remain public or not but I think both positions are valid.", "url": "https://github.com/powsybl/powsybl-core/pull/1129#discussion_r373066776", "createdAt": "2020-01-30T16:49:02Z", "author": {"login": "miovd"}, "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AbstractConnectableXml.java", "diffHunk": "@@ -153,31 +151,39 @@ public static void readCurrentLimits(Integer index, Supplier<CurrentLimitsAdder>\n                 double value = XmlUtil.readOptionalDoubleAttribute(reader, \"value\", Double.MAX_VALUE);\n                 boolean fictitious = XmlUtil.readOptionalBoolAttribute(reader, \"fictitious\", false);\n                 adder.beginTemporaryLimit()\n-                    .setName(name)\n-                    .setAcceptableDuration(acceptableDuration)\n-                    .setValue(value)\n-                    .setFictitious(fictitious)\n-                    .endTemporaryLimit();\n+                        .setName(name)\n+                        .setAcceptableDuration(acceptableDuration)\n+                        .setValue(value)\n+                        .setFictitious(fictitious)\n+                        .endTemporaryLimit();\n             }\n         });\n         adder.add();\n     }\n \n     public static void writeCurrentLimits(Integer index, CurrentLimits limits, XMLStreamWriter writer) throws XMLStreamException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1MzI3MQ=="}, "originalCommit": {"oid": "ef4e77fb5531cfb003de37424ec3354e389920c8"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}