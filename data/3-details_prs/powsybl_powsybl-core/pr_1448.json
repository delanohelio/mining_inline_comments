{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwODQ1Nzg3", "number": 1448, "title": "Make LoadDetail extension multi variant", "bodyText": "Signed-off-by: RALAMBOTIANA MIORA miora.ralambotiana@rte-france.com\nPlease check if the PR fulfills these requirements (please use '[x]' to check the checkboxes, or submit the PR and then click the checkboxes)\n\n The commit message follows our guidelines\n Tests for the changes have been added (for bug fixes / features)\n\nDoes this PR already have an issue describing the problem ? If so, link to this issue using '#XXX' and skip the rest\nNo\nWhat kind of change does this PR introduce? (Bug fix, feature, docs update, ...)\nBetween bug fix and feature\nWhat is the current behavior? (You can also link to an open issue here)\nLoadDetail is not multivariant\nWhat is the new behavior (if this is a feature change)?\nLoadDetail is multivariant\nDoes this PR introduce a breaking change or deprecate an API? If yes, check the following:\n\n The Breaking Change or Deprecated label has been added\n The migration guide has been updated in the github wiki (What changes might users need to make in their application due to this PR?)", "createdAt": "2020-08-20T11:28:08Z", "url": "https://github.com/powsybl/powsybl-core/pull/1448", "merged": true, "mergeCommit": {"oid": "04c34fbdd89f397493b78ce297fe503ae66d9f67"}, "closed": true, "closedAt": "2020-08-27T09:04:59Z", "author": {"login": "MioRtia"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAufmXgH2gAyNDcwODQ1Nzg3OjkxMGMxZDgzM2ZiZTMyZjNhZGZjZjQ4OTcwOWNjMTQ3Y2ExMzlmYTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdC8bjagH2gAyNDcwODQ1Nzg3Ojc2NzFlMGZiNzk5OTkyNzYzZjg0ZmJmNzk1OGNjNTJlNjhjZjMzYTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "910c1d833fbe32f3adfcf489709cc147ca139fa0", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/910c1d833fbe32f3adfcf489709cc147ca139fa0", "committedDate": "2020-08-20T11:27:23Z", "message": "Make LoadDetail extension multi variant\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/328326e96949218d2368c961c07aae5bbb86d8cd", "committedDate": "2020-08-20T12:36:09Z", "message": "Add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzMwMTkw", "url": "https://github.com/powsybl/powsybl-core/pull/1448#pullrequestreview-474330190", "createdAt": "2020-08-25T10:05:28Z", "commit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDowNToyOFrOHGREfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDoxMzo0NFrOHGRVyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzMzE4Mg==", "bodyText": "You could use TFloatArrayList instead. Or shouldn't we rather use a ArrayList of POJOs containing the four power values? That would allow a simple solution for variants with undefined LoadDetail, by using a null POJO.", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476333182", "createdAt": "2020-08-25T10:05:28Z", "author": {"login": "flo-dup"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.iidm.network.Load;\n+import com.powsybl.iidm.network.extensions.LoadDetail;\n+import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n+import gnu.trove.list.array.TDoubleArrayList;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n+\n+    private final TDoubleArrayList fixedActivePower;\n+\n+    private final TDoubleArrayList fixedReactivePower;\n+\n+    private final TDoubleArrayList variableActivePower;\n+\n+    private final TDoubleArrayList variableReactivePower;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzNzYwOA==", "bodyText": "Should it be a TODO? as something needs to be done here one day, doesn't it?", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476337608", "createdAt": "2020-08-25T10:13:44Z", "author": {"login": "flo-dup"}, "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.iidm.network.Load;\n+import com.powsybl.iidm.network.extensions.LoadDetail;\n+import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n+import gnu.trove.list.array.TDoubleArrayList;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n+\n+    private final TDoubleArrayList fixedActivePower;\n+\n+    private final TDoubleArrayList fixedReactivePower;\n+\n+    private final TDoubleArrayList variableActivePower;\n+\n+    private final TDoubleArrayList variableReactivePower;\n+\n+    public LoadDetailImpl(Load load, float fixedActivePower, float fixedReactivePower,\n+                          float variableActivePower, float variableReactivePower) {\n+        super(load);\n+        int variantArraySize = getVariantManagerHolder().getVariantManager().getVariantArraySize();\n+        this.fixedActivePower = new TDoubleArrayList(variantArraySize);\n+        this.fixedReactivePower = new TDoubleArrayList(variantArraySize);\n+        this.variableActivePower = new TDoubleArrayList(variantArraySize);\n+        this.variableReactivePower = new TDoubleArrayList(variantArraySize);\n+        for (int i = 0; i < variantArraySize; i++) {\n+            this.fixedActivePower.add(checkPower(fixedActivePower, \"Invalid fixedActivePower\"));\n+            this.fixedReactivePower.add(checkPower(fixedReactivePower, \"Invalid fixedReactivePower\"));\n+            this.variableActivePower.add(checkPower(variableActivePower, \"Invalid variableActivePower\"));\n+            this.variableReactivePower.add(checkPower(variableReactivePower, \"Invalid variableReactivePower\"));\n+        }\n+    }\n+\n+    public float getFixedActivePower() {\n+        return (float) fixedActivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setFixedActivePower(float fixedActivePower) {\n+        checkPower(fixedActivePower, \"Invalid fixedActivePower\");\n+        this.fixedActivePower.set(getVariantIndex(), fixedActivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getFixedReactivePower() {\n+        return (float) fixedReactivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setFixedReactivePower(float fixedReactivePower) {\n+        checkPower(fixedReactivePower, \"Invalid fixedReactivePower\");\n+        this.fixedReactivePower.set(getVariantIndex(), fixedReactivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getVariableActivePower() {\n+        return (float) variableActivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setVariableActivePower(float variableActivePower) {\n+        checkPower(variableActivePower, \"Invalid variableActivePower\");\n+        this.variableActivePower.set(getVariantIndex(), variableActivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getVariableReactivePower() {\n+        return (float) variableReactivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setVariableReactivePower(float variableReactivePower) {\n+        checkPower(variableReactivePower, \"Invalid variableReactivePower\");\n+        this.variableReactivePower.set(getVariantIndex(), variableReactivePower);\n+        return this;\n+    }\n+\n+    private static float checkPower(float power, String errorMessage) {\n+        if (Float.isNaN(power)) {\n+            throw new IllegalArgumentException(errorMessage);\n+        }\n+        return power;\n+    }\n+\n+    @Override\n+    public void extendVariantArraySize(int initVariantArraySize, int number, int sourceIndex) {\n+        fixedActivePower.ensureCapacity(fixedActivePower.size() + number);\n+        fixedReactivePower.ensureCapacity(fixedReactivePower.size() + number);\n+        variableActivePower.ensureCapacity(variableActivePower.size() + number);\n+        variableReactivePower.ensureCapacity(variableReactivePower.size() + number);\n+        for (int i = 0; i < number; ++i) {\n+            fixedActivePower.add(fixedActivePower.get(sourceIndex));\n+            fixedReactivePower.add(fixedReactivePower.get(sourceIndex));\n+            variableActivePower.add(variableActivePower.get(sourceIndex));\n+            variableReactivePower.add(variableReactivePower.get(sourceIndex));\n+        }\n+    }\n+\n+    @Override\n+    public void reduceVariantArraySize(int number) {\n+        fixedActivePower.remove(fixedActivePower.size() - number, number);\n+        fixedReactivePower.remove(fixedReactivePower.size() - number, number);\n+        variableActivePower.remove(variableActivePower.size() - number, number);\n+        variableReactivePower.remove(variableReactivePower.size() - number, number);\n+    }\n+\n+    @Override\n+    public void deleteVariantArrayElement(int index) {\n+        // Nothing to do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzYzNDM4", "url": "https://github.com/powsybl/powsybl-core/pull/1448#pullrequestreview-474363438", "createdAt": "2020-08-25T10:54:54Z", "commit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1NDo1NFrOHGSnug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1NDo1NFrOHGSnug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1ODU4Ng==", "bodyText": "Shouldn't the test be in package com.powsybl.iidm.network.impl.extensions of iidm-impl?", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476358586", "createdAt": "2020-08-25T10:54:54Z", "author": {"login": "flo-dup"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java", "diffHunk": "@@ -6,12 +6,18 @@\n  */\n package com.powsybl.iidm.network.extensions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzY0NTg3", "url": "https://github.com/powsybl/powsybl-core/pull/1448#pullrequestreview-474364587", "createdAt": "2020-08-25T10:56:39Z", "commit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1NjozOVrOHGSrPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo1NjozOVrOHGSrPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1OTQ4NA==", "bodyText": "Could be replaced by Arrays.asList(variant1, variant3)", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476359484", "createdAt": "2020-08-25T10:56:39Z", "author": {"login": "flo-dup"}, "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java", "diffHunk": "@@ -73,4 +79,64 @@ public void test() {\n         assertEquals(40f, detail.getVariableActivePower(), 0f);\n         assertEquals(20f, detail.getVariableReactivePower(), 0f);\n     }\n+\n+    @Test\n+    public void variantsCloneTest() {\n+        String variant1 = \"variant1\";\n+        String variant2 = \"variant2\";\n+        String variant3 = \"variant3\";\n+\n+        // Creates the extension\n+        Network network = createTestNetwork();\n+        LoadDetail ld = network.getLoad(\"L\").getExtension(LoadDetail.class);\n+        assertNotNull(ld);\n+\n+        // Testing variant cloning\n+        VariantManager variantManager = network.getVariantManager();\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, variant1);\n+        variantManager.cloneVariant(variant1, variant2);\n+        variantManager.setWorkingVariant(variant1);\n+        assertEquals(40f, ld.getFixedActivePower(), 0f);\n+        assertEquals(20f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(60f, ld.getVariableActivePower(), 0f);\n+        assertEquals(30f, ld.getVariableReactivePower(), 0f);\n+\n+        // Testing setting different values in the cloned variant and going back to the initial one\n+        ld.setFixedActivePower(60f).setFixedReactivePower(30f).setVariableActivePower(40f).setVariableReactivePower(20f);\n+        assertEquals(60f, ld.getFixedActivePower(), 0f);\n+        assertEquals(30f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(40f, ld.getVariableActivePower(), 0f);\n+        assertEquals(20f, ld.getVariableReactivePower(), 0f);\n+        variantManager.setWorkingVariant(INITIAL_VARIANT_ID);\n+        assertEquals(40f, ld.getFixedActivePower(), 0f);\n+        assertEquals(20f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(60f, ld.getVariableActivePower(), 0f);\n+        assertEquals(30f, ld.getVariableReactivePower(), 0f);\n+\n+        // Removes a variant then adds another variant to test variant recycling (hence calling allocateVariantArrayElement)\n+        variantManager.removeVariant(variant1);\n+        List<String> targetVariantIds = new ArrayList<>();\n+        targetVariantIds.add(variant1);\n+        targetVariantIds.add(variant3);\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, targetVariantIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a75b912808ead75e55994cb6cf06528716709062", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/a75b912808ead75e55994cb6cf06528716709062", "committedDate": "2020-08-25T14:02:38Z", "message": "Reviewer's comment: corrections\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NDg1Mjgx", "url": "https://github.com/powsybl/powsybl-core/pull/1448#pullrequestreview-476485281", "createdAt": "2020-08-27T08:11:47Z", "commit": {"oid": "a75b912808ead75e55994cb6cf06528716709062"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7671e0fb799992763f84fbf7958cc52e68cf33a4", "author": {"user": {"login": "MioRtia", "name": null}}, "url": "https://github.com/powsybl/powsybl-core/commit/7671e0fb799992763f84fbf7958cc52e68cf33a4", "committedDate": "2020-08-27T08:49:29Z", "message": "Merge branch 'master' into make_load_detail_multivariant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4143, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}