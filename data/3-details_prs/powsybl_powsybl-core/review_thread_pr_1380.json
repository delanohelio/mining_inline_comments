{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0Njk1OTUy", "number": 1380, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTozNDo0MFrOELphUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjo1MzozMlrOELrDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjUwMDY1OnYy", "diffSide": "RIGHT", "path": "commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTozNDo0MFrOGtTntw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTo0MDoxMlrOGtTxeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MDU2Nw==", "bodyText": "It's better to return an OptionalDouble instead of Optional", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450160567", "createdAt": "2020-07-06T11:34:40Z", "author": {"login": "mathbagu"}, "path": "commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java", "diffHunk": "@@ -32,6 +29,13 @@ private ModuleConfigUtil() {\n         return getOptionalProperty(moduleConfig, names, moduleConfig::getOptionalStringListProperty);\n     }\n \n+    public static Optional<Double> getOptionalDoubleProperty(ModuleConfig moduleConfig, List<String> names) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "302111c51e38fcddbcef7c94adfe836962c125d6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MzA2Ng==", "bodyText": "I don't think I can here, because of the way getOptionalProperty is defined: it returns <T> Optional<T>", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450163066", "createdAt": "2020-07-06T11:40:12Z", "author": {"login": "agnesLeroy"}, "path": "commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java", "diffHunk": "@@ -32,6 +29,13 @@ private ModuleConfigUtil() {\n         return getOptionalProperty(moduleConfig, names, moduleConfig::getOptionalStringListProperty);\n     }\n \n+    public static Optional<Double> getOptionalDoubleProperty(ModuleConfig moduleConfig, List<String> names) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MDU2Nw=="}, "originalCommit": {"oid": "302111c51e38fcddbcef7c94adfe836962c125d6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjc1MDUwOnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjo1MzoxOVrOGtV_IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjo1MzoxOVrOGtV_IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5OTMyOQ==", "bodyText": "Maybe the default value for this parameter should not be stringList to prevent false positive in the test?", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450199329", "createdAt": "2020-07-06T12:53:19Z", "author": {"login": "miovd"}, "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm;\n+\n+import com.powsybl.iidm.parameters.Parameter;\n+import com.powsybl.iidm.parameters.ParameterDefaultValueConfig;\n+import com.powsybl.iidm.parameters.ParameterType;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+public class ConversionParametersTest {\n+    @Test\n+    public void testConversionParameters() {\n+        Properties properties = new Properties();\n+        properties.put(\"test-param-boolean\", \"true\");\n+        Parameter paramBoolean = new Parameter(\"test-param-boolean\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        Parameter paramBoolean2 = new Parameter(\"test-param-boolean2\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        assertTrue(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean, ParameterDefaultValueConfig.INSTANCE));\n+        assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        properties.put(\"test-param-string\", \"TestProperty\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n+        assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n+        assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"Test1Property\");\n+        stringList.add(\"Test2Property\");\n+        List<String> stringList2 = new ArrayList<>();\n+        stringList2.add(\"Test1Param\");\n+        stringList2.add(\"Test2Param\");\n+        properties.put(\"test-param-string-list\", stringList);\n+        Parameter paramStringList = new Parameter(\"test-param-string-list\", ParameterType.STRING_LIST, \"\", stringList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96306203ef1b28a0765465eefe6b744960f215da"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjc1MTI3OnYy", "diffSide": "RIGHT", "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjo1MzozMlrOGtV_pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjo1MzozMlrOGtV_pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5OTQ2Mg==", "bodyText": "Same remark", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450199462", "createdAt": "2020-07-06T12:53:32Z", "author": {"login": "miovd"}, "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm;\n+\n+import com.powsybl.iidm.parameters.Parameter;\n+import com.powsybl.iidm.parameters.ParameterDefaultValueConfig;\n+import com.powsybl.iidm.parameters.ParameterType;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+public class ConversionParametersTest {\n+    @Test\n+    public void testConversionParameters() {\n+        Properties properties = new Properties();\n+        properties.put(\"test-param-boolean\", \"true\");\n+        Parameter paramBoolean = new Parameter(\"test-param-boolean\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        Parameter paramBoolean2 = new Parameter(\"test-param-boolean2\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        assertTrue(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean, ParameterDefaultValueConfig.INSTANCE));\n+        assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        properties.put(\"test-param-string\", \"TestProperty\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n+        assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n+        assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"Test1Property\");\n+        stringList.add(\"Test2Property\");\n+        List<String> stringList2 = new ArrayList<>();\n+        stringList2.add(\"Test1Param\");\n+        stringList2.add(\"Test2Param\");\n+        properties.put(\"test-param-string-list\", stringList);\n+        Parameter paramStringList = new Parameter(\"test-param-string-list\", ParameterType.STRING_LIST, \"\", stringList);\n+        Parameter paramStringList2 = new Parameter(\"test-param-string-list2\", ParameterType.STRING_LIST, \"\", stringList2);\n+        assertEquals(\"Test2Property\", ConversionParameters.readStringListParameter(\"TEST\", properties, paramStringList, ParameterDefaultValueConfig.INSTANCE).get(1));\n+        assertEquals(\"Test1Param\", ConversionParameters.readStringListParameter(\"TEST\", properties, paramStringList2, ParameterDefaultValueConfig.INSTANCE).get(0));\n+\n+        properties.put(\"test-param-double\", 0.06);\n+        Parameter paramDouble = new Parameter(\"test-param-double\", ParameterType.DOUBLE, \"\", 0.06);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96306203ef1b28a0765465eefe6b744960f215da"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4960, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}