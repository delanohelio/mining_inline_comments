{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMDI2NTY0", "number": 1958, "title": "Move ProfileResolver out of GraphHopper class", "bodyText": "In this PR I moved the ProfileResolver out of GraphHopper and into the Route/Isochrone/SPTResource. This means:\n\n\nGraphHopper#route only considers the profile parameter (instead of vehicle,weighting,edge_based). At the moment it even throws an error if these parameters are set. Is that ok or should we go for a 'softer' migration and change this to an error log only? A missing profile parameter is definitely an error, I just wonder if its too strict to throw an error in case there is also vehicle/weighting (which are not used anyway).\n\n\nTo make use of the profile parameter we now have to add routing profiles also for non-prepared (no CH or LM) algorithms. GH configs without profiles lead to an error with this PR!\n\n\nProfileResolver does the conversion of the vehicle/weighting/edge_based parameters and the profile name is passed to GraphHopper. Therefore the actual behavior of the GH server should not be changed (unless there is a bug).\n\n\nAnother change that is done here is that we no longer use the first flag encoder as default vehicle. We already did this for CH before, but now its the same for CH/LM/flex. If the vehicle parameter is not set (and ch.disable=true) we are trying to find a matching profile based on the other parameters. If there are multiple matches there will now be an error (previously we would have used the first encoder as default vehicle).\nI think it might be useful to merge these changes before in #1859 we:\n\n\nActually expose the new profile parameter via the web api. We probably also want to adjust the integration tests then and only keep a few that test the parameter conversion (profile selection). The good thing with this PR is that we can check if the conversion works before changing the tests etc.\n\n\nImplement the merging rules between profile parameters and hints (e.g. take distance factor for short_fastest weighting from profile, but overwrite if given in request hints and not CH etc.)\n\n\nCurrent todos for this PR:\n\n adjust config-example.yml\n add integration tests for edge_based/turn_costs parameter (and the corresponding conversion)/what about turn_cost=true/false cross querying for LM?\n merge profile and request hints", "createdAt": "2020-03-17T19:13:49Z", "url": "https://github.com/graphhopper/graphhopper/pull/1958", "merged": true, "mergeCommit": {"oid": "6daf0687f4e7f452a549020cbd3b2368e69aed30"}, "closed": true, "closedAt": "2020-03-23T20:45:17Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOmkGrgH2gAyMzkwMDI2NTY0OjFmODkwYWFhNjQyMmZjYTFkM2FlOGNhMjEzNjA3MDBhNGY5MTMxNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQka5hAH2gAyMzkwMDI2NTY0OjExNmE4NjRkMzQ2OTAzNmQ4NzJiZGZkMmQ1ZTYwZjM0ZTc5Yjc1MDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f890aaa6422fca1d3ae8ca21360700a4f913167", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/1f890aaa6422fca1d3ae8ca21360700a4f913167", "committedDate": "2020-03-17T17:56:51Z", "message": "Throw error if request has weighting or vehicle, use profile parameter instead, many tests failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b461512ac649c3e00150be8e01b0d3f5bdb31950", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/b461512ac649c3e00150be8e01b0d3f5bdb31950", "committedDate": "2020-03-17T17:57:18Z", "message": "Fix some of the failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeffb348a94c0cec553062f380921f04571fef46", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/aeffb348a94c0cec553062f380921f04571fef46", "committedDate": "2020-03-17T17:57:23Z", "message": "Add a few more checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0211608b839f9afe6c898181487b565f3a458f6", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a0211608b839f9afe6c898181487b565f3a458f6", "committedDate": "2020-03-17T17:57:27Z", "message": "Move profile resolver from GraphHopper to Route/Isochrone/SPTResource, use profiles for non-prepared too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4267ea57ebdb6079591a0ec3016a6333892dbb32", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4267ea57ebdb6079591a0ec3016a6333892dbb32", "committedDate": "2020-03-17T17:57:30Z", "message": "Minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aedcc4da1c2718f8bbf8c5937d5e93165cf794ab", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/aedcc4da1c2718f8bbf8c5937d5e93165cf794ab", "committedDate": "2020-03-17T17:57:33Z", "message": "Add/move some profile resolving tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a43eef8c5895a78a288a7819a097854d68d0131", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/9a43eef8c5895a78a288a7819a097854d68d0131", "committedDate": "2020-03-17T17:57:54Z", "message": "Minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1eedaab93807499d94af08873f5fc225ae9b2a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8d1eedaab93807499d94af08873f5fc225ae9b2a", "committedDate": "2020-03-17T18:04:20Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e3e628b48c9b1541f2d860812dffda40dc8f5704", "committedDate": "2020-03-17T18:16:02Z", "message": "Remove vehicle/weighting parameters in measurement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzMxNzM1", "url": "https://github.com/graphhopper/graphhopper/pull/1958#pullrequestreview-376331735", "createdAt": "2020-03-17T19:14:56Z", "commit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxNDo1NlrOF3qdfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyODo1N1rOF3q5zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTY3OQ==", "bodyText": "I think we discussed this in #1859 already: We'll def. remove vehicle+weighting from the HintsMap, but maybe in a follow-up PR? Since the profile parameter will be required it makes sense to keep it as a separate field?", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393911679", "createdAt": "2020-03-17T19:14:56Z", "author": {"login": "easbar"}, "path": "api/src/main/java/com/graphhopper/GHRequest.java", "diffHunk": "@@ -34,6 +34,9 @@\n  */\n public class GHRequest {\n     private List<GHPoint> points;\n+    // todonow: keep this here or put it into hints, and even more important: can we remove vehicle+weighting from\n+    // hints?\n+    private String profile = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMjU5OQ==", "bodyText": "There are a few odd cases where we do not use GraphHopper for routing (like NearestResource) so these do not necessarily require profiles. Not sure, to me this seems rather the exception so I am checking the existence of at least one profile here. Once we do #1901 we can move this check into GraphHopperRouter's constructor for example.", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393912599", "createdAt": "2020-03-17T19:16:39Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -824,6 +809,9 @@ public boolean load(String graphHopperFolder) {\n     }\n \n     private void checkProfilesConsistency() {\n+        if (profilesByName.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMzc0Nw==", "bodyText": "This is about the 'merging' feature where some properties are set right in the profile (like distance_factor), but they might be overwritten per request. The problem is that this does not work with CH (and only some special cases work for LM), so I am a bit unsure where to put these checks. They cannot really go into createWeighting (where the merging will happen?!), because in this method we do not 'know' whether the weighting is created for CH or not...", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393913747", "createdAt": "2020-03-17T19:18:58Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -1029,6 +1010,17 @@ public GHResponse route(GHRequest request) {\n         Lock readLock = readWriteLock.readLock();\n         readLock.lock();\n         try {\n+            if (!request.getVehicle().isEmpty())\n+                throw new IllegalArgumentException(\"GHRequest may no longer contain a vehicle, use the profile parameter instead, see #todonow\");\n+            if (!request.getWeighting().isEmpty())\n+                throw new IllegalArgumentException(\"GHRequest may no longer contain a weighting, use the profile parameter instead, see #todonow\");\n+            if (!request.getHints().get(Routing.TURN_COSTS, \"\").isEmpty())\n+                throw new IllegalArgumentException(\"GHRequest may no longer contain the turn_costs=true/false parameter, use the profile parameter instead, see #todonow\");\n+            // todonow: maybe still allow something like running a (non CH) profile edge-based or not (if no turn costs or something)?, also see traversal mode below\n+            if (!request.getHints().get(Routing.EDGE_BASED, \"\").isEmpty())\n+                throw new IllegalArgumentException(\"GHRequest may no longer contain the edge_based=true/false parameter, use the profile parameter instead, see #todonow\");\n+            // todonow: do not allow things like short_fastest.distance_factor or u_turn_costs unless CH is disabled and only under certain conditions for LM", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNDU5MA==", "bodyText": "Maybe we can do this later, see #1702.", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393914590", "createdAt": "2020-03-17T19:20:39Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -1055,10 +1047,17 @@ public GHResponse route(GHRequest request) {\n             // For example see #734\n             checkIfPointsAreInBounds(points);\n \n-            ProfileConfig profile = resolveProfile(hints);\n+            if (Helper.isEmpty(request.getProfile())) {\n+                throw new IllegalArgumentException(\"You need to specify a profile to perform a routing request\");\n+            }\n+            ProfileConfig profile = profilesByName.get(request.getProfile());\n+            if (profile == null) {\n+                throw new IllegalArgumentException(\"The requested profile '\" + request.getProfile() + \"' does not exist\");\n+            }\n             if (!profile.isTurnCosts() && !request.getCurbsides().isEmpty())\n                 throw new IllegalArgumentException(\"To make use of the \" + CURBSIDE + \" parameter you need to use a profile that supports turn costs\");\n \n+            // todonow: should we be able to control this using the edge_based parameter?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTk4MA==", "bodyText": "Since we are now selecting a CHProfileConfig instead of a CHProfile we can deal with the case of multiple edge-based profiles with different u_turn_costs again (c.f. #1949). This should also help to get rid of Weighting#getFlagEncoder in the long run.", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393915980", "createdAt": "2020-03-17T19:23:24Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/routing/ProfileResolver.java", "diffHunk": "@@ -18,118 +18,125 @@\n \n package com.graphhopper.routing;\n \n+import com.graphhopper.config.CHProfileConfig;\n+import com.graphhopper.config.LMProfileConfig;\n import com.graphhopper.config.ProfileConfig;\n-import com.graphhopper.routing.lm.LMProfile;\n import com.graphhopper.routing.util.EncodingManager;\n import com.graphhopper.routing.util.FlagEncoder;\n import com.graphhopper.routing.util.HintsMap;\n-import com.graphhopper.storage.CHProfile;\n+import com.graphhopper.util.PMap;\n import com.graphhopper.util.Parameters;\n \n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n \n import static com.graphhopper.routing.weighting.Weighting.INFINITE_U_TURN_COSTS;\n \n public class ProfileResolver {\n-\n-    public ProfileConfig resolveProfile(EncodingManager encodingManager, List<CHProfile> chProfiles, List<LMProfile> lmProfiles, HintsMap hints) {\n-        // default handling\n-        String vehicle = hints.getVehicle();\n-        if (vehicle.isEmpty()) {\n-            vehicle = getDefaultVehicle(encodingManager).toString();\n+    private final EncodingManager encodingManager;\n+    private final List<ProfileConfig> profiles;\n+    private final List<ProfileConfig> chProfiles;\n+    private final List<ProfileConfig> lmProfiles;\n+\n+    public ProfileResolver(EncodingManager encodingManager, List<ProfileConfig> profiles, List<CHProfileConfig> chProfiles, List<LMProfileConfig> lmProfiles) {\n+        this.encodingManager = encodingManager;\n+        this.profiles = profiles;\n+        Map<String, ProfileConfig> profilesByName = new HashMap<>(profiles.size());\n+        for (ProfileConfig p : profiles) {\n+            profilesByName.put(p.getName(), p);\n         }\n-        String weighting = hints.getWeighting();\n-        if (weighting.isEmpty()) {\n-            weighting = \"fastest\";\n+        if (profilesByName.size() != profiles.size()) {\n+            throw new IllegalStateException(\"Profiles must have distinct names\");\n+        }\n+        this.chProfiles = new ArrayList<>();\n+        for (CHProfileConfig p : chProfiles) {\n+            ProfileConfig profile = profilesByName.get(p.getProfile());\n+            if (profile == null) {\n+                throw new IllegalStateException(\"There is no profile for CH preparation '\" + p.getProfile() + \"'\");\n+            }\n+            this.chProfiles.add(profile);\n+        }\n+        this.lmProfiles = new ArrayList<>();\n+        for (LMProfileConfig p : lmProfiles) {\n+            ProfileConfig profile = profilesByName.get(p.getProfile());\n+            if (profile == null) {\n+                throw new IllegalStateException(\"There is no profile for LM preparation '\" + p.getProfile() + \"'\");\n+            }\n+            this.lmProfiles.add(profile);\n         }\n-        if (!encodingManager.hasEncoder(vehicle))\n-            throw new IllegalArgumentException(\"Vehicle not supported: \" + vehicle + \". Supported are: \" + encodingManager.toString());\n-\n-        FlagEncoder encoder = encodingManager.getEncoder(vehicle);\n-        // we use turn costs if the encoder supports it *unless* the edge_based parameter is set explicitly\n-        boolean turnCosts = encoder.supportsTurnCosts();\n-        if (hints.has(Parameters.Routing.EDGE_BASED))\n-            turnCosts = hints.getBool(Parameters.Routing.EDGE_BASED, false);\n-        if (turnCosts && !encoder.supportsTurnCosts())\n-            throw new IllegalArgumentException(\"You need to set up a turn cost storage to make use of edge_based=true, e.g. use car|turn_costs=true\");\n-\n-        String profileName = resolveProfileName(chProfiles, lmProfiles, hints);\n-\n-        return new ProfileConfig(profileName)\n-                .setVehicle(vehicle)\n-                .setWeighting(weighting)\n-                .setTurnCosts(turnCosts);\n     }\n \n-    private String resolveProfileName(List<CHProfile> chProfiles, List<LMProfile> lmProfiles, HintsMap hints) {\n+    public ProfileConfig resolveProfile(HintsMap hints) {\n         boolean disableCH = hints.getBool(Parameters.CH.DISABLE, false);\n         boolean disableLM = hints.getBool(Parameters.Landmark.DISABLE, false);\n \n-        String profileName;\n+        String vehicle = hints.getVehicle();\n+        if (!vehicle.isEmpty() && !encodingManager.hasEncoder(hints.getVehicle()))\n+            throw new IllegalArgumentException(\"Vehicle not supported: \" + vehicle + \". Supported are: \" + encodingManager.toString() +\n+                    \" You should consider using the profile parameter instead of specifying a vehicle, see #todonow\");\n+\n+        // unless CH/LM are disabled we select the profile based on the given request hints and the available preparations\n         if (!chProfiles.isEmpty() && !disableCH) {\n-            profileName = selectCHProfile(chProfiles, hints).getName();\n+            return selectProfileCH(hints);\n         } else if (!lmProfiles.isEmpty() && !disableLM) {\n-            profileName = selectLMProfile(lmProfiles, hints).getName();\n+            return selectProfileLM(hints);\n         } else {\n-            // todonow: here we will instead select one of the existing profiles\n-            profileName = \"unprepared_profile\";\n+            return selectProfileUnprepared(hints);\n         }\n-        return profileName;\n     }\n \n     /**\n-     * @param chProfiles the CH profiles to choose from\n-     * @param hintsMap   a map used to describe the CH profile that shall be selected\n-     * @throws IllegalArgumentException if no CH profile could be selected for the given parameters\n+     * @param hintsMap a map used to describe the profile that shall be selected\n+     * @throws IllegalArgumentException if no profile supporting CH could be selected for the given parameters\n      */\n-    public CHProfile selectCHProfile(List<CHProfile> chProfiles, HintsMap hintsMap) {\n-        int numMatchingEdgeBased = 0;\n-        List<CHProfile> matchingProfiles = new ArrayList<>();\n-        for (CHProfile p : chProfiles) {\n+    public ProfileConfig selectProfileCH(HintsMap hintsMap) {\n+        List<ProfileConfig> matchingProfiles = new ArrayList<>();\n+        for (ProfileConfig p : chProfiles) {\n             if (!chProfileMatchesHints(p, hintsMap))\n                 continue;\n             matchingProfiles.add(p);\n-            if (p.isEdgeBased()) {\n-                numMatchingEdgeBased++;\n-            }\n         }\n \n         Boolean edgeBased = getEdgeBased(hintsMap);\n         Integer uTurnCosts = getUTurnCosts(hintsMap);\n         if (matchingProfiles.isEmpty()) {\n-            throw new IllegalArgumentException(\"Cannot find matching CH profile for your request. Please check your parameters.\" +\n+            throw new IllegalArgumentException(\"Cannot find matching profile that supports CH for your request. Please check your parameters.\" +\n                     \"\\nYou can try disabling CH using \" + Parameters.CH.DISABLE + \"=true\" +\n-                    \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\navailable: \" + chProfiles);\n+                    \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\navailable: \" + chProfilesAsString(chProfiles));\n         } else if (matchingProfiles.size() == 1) {\n             return matchingProfiles.get(0);\n         } else {\n-            // special case: prefer edge-based over node-based if these are the only two options\n-            CHProfile match1 = matchingProfiles.get(0);\n-            CHProfile match2 = matchingProfiles.get(1);\n+            // special case: prefer profile with turn costs over one without turn costs if both are available and there\n+            // aren't any other options\n+            ProfileConfig match1 = matchingProfiles.get(0);\n+            ProfileConfig match2 = matchingProfiles.get(1);\n             if (edgeBased == null && matchingProfiles.size() == 2 &&\n-                    match1.getWeighting().getName().equals(match2.getWeighting().getName()) &&\n-                    match1.getWeighting().getFlagEncoder().toString().equals(match2.getWeighting().getFlagEncoder().toString()) &&\n-                    match1.isEdgeBased() != match2.isEdgeBased()) {\n-                return match1.isEdgeBased() ? match1 : match2;\n+                    match1.getWeighting().equals(match2.getWeighting()) &&\n+                    match1.getVehicle().equals(match2.getVehicle()) &&\n+                    match1.isTurnCosts() != match2.isTurnCosts()) {\n+                return match1.isTurnCosts() ? match1 : match2;\n             }\n-            // special case: error if multiple edge-based matches. to differentiate between these it will be required\n-            // to explicitly set the profile parameter.\n-            if (numMatchingEdgeBased > 1 && numMatchingEdgeBased == matchingProfiles.size()) {\n-                throw new IllegalArgumentException(\"There are multiple edge-based CH profiles matching your request. You need to\" +\n-                        \" specify the profile you want to use explicitly, see here: https://github.com/graphhopper/graphhopper/pull/1934.\");\n-            } else {\n-                throw new IllegalArgumentException(\"There are multiple CH profiles matching your request. Use the `weighting`,`vehicle`,`edge_based` and/or `u_turn_costs` parameters to be more specific.\" +\n-                        \"\\nYou can also try disabling CH altogether using \" + Parameters.CH.DISABLE + \"=true\" +\n-                        \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\nmatched:   \" + matchingProfiles + \"\\navailable: \" + chProfiles);\n+            throw new IllegalArgumentException(\"There are multiple CH profiles matching your request. Use the `weighting`,`vehicle`,`edge_based` and/or `u_turn_costs` parameters to be more specific or better use the `profile` parameter to explicitly choose a profile.\" +\n+                    \"\\nYou can also try disabling CH altogether using \" + Parameters.CH.DISABLE + \"=true\" +\n+                    \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\nmatched:   \" + chProfilesAsString(matchingProfiles) + \"\\navailable: \" + chProfilesAsString(chProfiles));\n \n-            }\n         }\n     }\n \n-    public LMProfile selectLMProfile(List<LMProfile> lmProfiles, HintsMap hintsMap) {\n-        List<LMProfile> matchingProfiles = new ArrayList<>();\n-        for (LMProfile p : lmProfiles) {\n+    protected boolean chProfileMatchesHints(ProfileConfig p, HintsMap hintsMap) {\n+        Boolean edgeBased = getEdgeBased(hintsMap);\n+        Integer uTurnCosts = getUTurnCosts(hintsMap);\n+        return (edgeBased == null || p.isTurnCosts() == edgeBased) &&\n+                (uTurnCosts == null || uTurnCosts.equals(getUTurnCosts(p.getHints()))) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzU2OQ==", "bodyText": "This file is supposed to describe the web-api, but this documentation also is available on the directions-api documentation website. Does it make sense to keep this updated here? Or should this be rather about the documentation of the parameters of the open source server?", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393917569", "createdAt": "2020-03-17T19:26:26Z", "author": {"login": "easbar"}, "path": "docs/web/api-doc.md", "diffHunk": "@@ -71,6 +71,7 @@ empty list for `profiles_ch`.\n Parameter        | Default    | Description\n :----------------|:-----------|:-----------\n ch.disable       | `false`    | Use this parameter in combination with one or more parameters of this table\n+# todonow: update docs regarding profile etc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxODkyNQ==", "bodyText": "Here I thought the measurements are running only for one vehicle anyway (and if we want to test others we might as well start the measurement again for the other vehicle), so it makes sense to keep the vehicle as a class variable (just like weighting) rather than pass it with every querysetting?", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r393918925", "createdAt": "2020-03-17T19:28:57Z", "author": {"login": "easbar"}, "path": "tools/src/main/java/com/graphhopper/tools/Measurement.java", "diffHunk": "@@ -73,6 +75,7 @@\n     private final Map<String, Object> properties = new TreeMap<>();\n     private long seed;\n     private int maxNode;\n+    private String vehicle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e628b48c9b1541f2d860812dffda40dc8f5704"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13c02eaf81eec8b85a4d34b19b742ec310af4745", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/13c02eaf81eec8b85a4d34b19b742ec310af4745", "committedDate": "2020-03-17T19:46:34Z", "message": "Add todo to respect profile parameter later"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18d117a58a282e572b5c5346ce9e19cf2ccf56fa", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/18d117a58a282e572b5c5346ce9e19cf2ccf56fa", "committedDate": "2020-03-17T21:48:36Z", "message": "Add integration test for edge_based/turn_costs parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c9760476a0bc9ad9b31ba10f99c9ab33fd8339c", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2c9760476a0bc9ad9b31ba10f99c9ab33fd8339c", "committedDate": "2020-03-17T22:39:40Z", "message": "Fix formatting in Measurement.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff555589b0b41f0206e7355553afb0bf0e774206", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/ff555589b0b41f0206e7355553afb0bf0e774206", "committedDate": "2020-03-17T22:49:12Z", "message": "Fix measurement: Add LM profiles with and without turncosts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37519748a73aa900a354a8a4f6752fdca182ce43", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/37519748a73aa900a354a8a4f6752fdca182ce43", "committedDate": "2020-03-17T22:57:14Z", "message": "Add javadocs for ProfileResolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c7e361edeef8f7b711ca5480ab85eadbee3fdc", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c9c7e361edeef8f7b711ca5480ab85eadbee3fdc", "committedDate": "2020-03-18T11:16:36Z", "message": "Replace hints.get(EDGE_BASED, \"\") with hints.has(EDGE_BASED)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "798177a51a14e2ae1473215ef53d6057764ab637", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/798177a51a14e2ae1473215ef53d6057764ab637", "committedDate": "2020-03-19T07:48:01Z", "message": "Merge branch 'master' into profile_parameter2\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\tcore/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n#\treader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java\n#\ttools/src/main/java/com/graphhopper/tools/CHMeasurement.java\n#\ttools/src/main/java/com/graphhopper/tools/Measurement.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/SPTResource.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96fec5702e7f8f4997d57c59753f985cafebb3f2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/96fec5702e7f8f4997d57c59753f985cafebb3f2", "committedDate": "2020-03-19T08:28:44Z", "message": "Fixes after merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12f06fb4cc423d125144ef75207946967b4ac704", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/12f06fb4cc423d125144ef75207946967b4ac704", "committedDate": "2020-03-19T10:46:25Z", "message": "Update api-doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a0844b405d9b84fe9602d7561f85d1c89ba50bb", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/7a0844b405d9b84fe9602d7561f85d1c89ba50bb", "committedDate": "2020-03-19T11:18:12Z", "message": "minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df15f83ea8c151c9bf445db122d3836736b47691", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/df15f83ea8c151c9bf445db122d3836736b47691", "committedDate": "2020-03-19T13:23:21Z", "message": "Strictly separate profiles with/without turn costs also for LM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d57c539045fd5715a20506e3c808e5bac2c72d6", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8d57c539045fd5715a20506e3c808e5bac2c72d6", "committedDate": "2020-03-19T13:26:52Z", "message": "Update todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757cc1d9af0e6a44b8c40a4f4644d34c54dc3083", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/757cc1d9af0e6a44b8c40a4f4644d34c54dc3083", "committedDate": "2020-03-19T13:39:14Z", "message": "Update issue references and todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c770ec7bbd6ae703b8b95de81ad7be7e2705b3c", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4c770ec7bbd6ae703b8b95de81ad7be7e2705b3c", "committedDate": "2020-03-19T14:54:24Z", "message": "Merge profile hints with request hints before creating the weighting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb7b451a81da94ff232d3881ad760cba5f29f272", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/cb7b451a81da94ff232d3881ad760cba5f29f272", "committedDate": "2020-03-19T15:23:59Z", "message": "prepare merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "409cad20ea4da4f886fdaf2715cb65d707c1c591", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/409cad20ea4da4f886fdaf2715cb65d707c1c591", "committedDate": "2020-03-19T18:31:36Z", "message": "Merge branch 'master' into profile_parameter2\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\treader-gtfs/src/test/java/com/graphhopper/AnotherAgencyIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/ExtendedRouteTypeIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/GraphHopperMultimodalIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/RealtimeIT.java\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n#\treader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java\n#\tweb/src/test/java/com/graphhopper/http/SpatialRulesTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/ChangeGraphResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/GtfsTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/I18nResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/MvtResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/NearestResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/NearestResourceWithEleTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/PtIsochroneTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceWithEleTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/SPTResourceTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95d5ed278308efe90ddb9e78e50bca817172cb6b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/95d5ed278308efe90ddb9e78e50bca817172cb6b", "committedDate": "2020-03-19T18:59:00Z", "message": "minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e774c1cb8d2beaf009e65ee6d3e9f828f95f94ea", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e774c1cb8d2beaf009e65ee6d3e9f828f95f94ea", "committedDate": "2020-03-19T19:08:38Z", "message": "Fix test after merging master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjYxODM0", "url": "https://github.com/graphhopper/graphhopper/pull/1958#pullrequestreview-378261834", "createdAt": "2020-03-20T06:59:34Z", "commit": {"oid": "e774c1cb8d2beaf009e65ee6d3e9f828f95f94ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1OTozNFrOF5JI9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1OTozNFrOF5JI9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjkwMQ==", "bodyText": "These are (the very simple) rules how we merge the profile hints with the request hints. The only thing I am wondering now is how we do this for block_area? Shall we do this in a similar way (use hints from profile and overwrite with request hints)? Do we need this here or is it ok to only create block areas from request hints (not the profile) here, and add this in #1776? Its still a bit unfortunate that we do not do the block_area stuff inside createWeighting. Now it looks all we are missing to do this in createWeighting are the points?", "url": "https://github.com/graphhopper/graphhopper/pull/1958#discussion_r395462901", "createdAt": "2020-03-20T06:59:34Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -1350,13 +1349,20 @@ public DefaultWeightingFactory(EncodingManager encodingManager, GraphHopperStora\n             this.ghStorage = ghStorage;\n         }\n \n-        public Weighting createWeighting(ProfileConfig profile, PMap hints) {\n+        public Weighting createWeighting(ProfileConfig profile, PMap requestHints) {\n+            // Merge profile hints with request hints, the request hints take precedence.\n+            // Note that so far we do not check if overwriting the profile hints actually works with the preparation\n+            // for LM/CH. Later we should also limit the number of parameters that can be used to modify the profile.\n+            PMap hints = new PMap();\n+            hints.putAll(profile.getHints());\n+            hints.putAll(requestHints);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e774c1cb8d2beaf009e65ee6d3e9f828f95f94ea"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8696944fa8f40831cd8e57dd1d5244b185790d77", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8696944fa8f40831cd8e57dd1d5244b185790d77", "committedDate": "2020-03-20T08:47:07Z", "message": "Merge branch 'master' into profile_parameter2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9280f1a0bc68ad6adc731b7c38feee69b027b2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/ac9280f1a0bc68ad6adc731b7c38feee69b027b2", "committedDate": "2020-03-21T09:20:47Z", "message": "Merge branch 'master' into profile_parameter2\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\ttools/src/main/java/com/graphhopper/tools/Measurement.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1427822c756f8713bcec9f20210a453ec827032a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/1427822c756f8713bcec9f20210a453ec827032a", "committedDate": "2020-03-23T10:17:05Z", "message": "Adjust after merging master, but test still fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00c74ab6546e2ad963010ce0aa4fdf38b555475e", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/00c74ab6546e2ad963010ce0aa4fdf38b555475e", "committedDate": "2020-03-23T10:28:41Z", "message": "Pick another test from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c997bbaaad14cce2f71155adb891e4e7e94905", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/48c997bbaaad14cce2f71155adb891e4e7e94905", "committedDate": "2020-03-23T12:50:26Z", "message": "Pick recent changes from master, remove default_vehicle=encoders[0] rule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d60cfbe89150b4dc1512d5cf978a844d66a2168", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4d60cfbe89150b4dc1512d5cf978a844d66a2168", "committedDate": "2020-03-23T12:51:01Z", "message": "Remove default vehicle for GET requests from RouteResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3c63e95de3ddffe3f0e793c574949b692fad23f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f3c63e95de3ddffe3f0e793c574949b692fad23f", "committedDate": "2020-03-23T12:59:04Z", "message": "Update profile selection test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55c94d68c3dab030656ac671d52176d40ba05f5", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e55c94d68c3dab030656ac671d52176d40ba05f5", "committedDate": "2020-03-23T12:59:57Z", "message": "Merge branch 'master' into profile_parameter2\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceProfileSelectionTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50116c55c02363a62942c42154ed164e3bdb6cb9", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/50116c55c02363a62942c42154ed164e3bdb6cb9", "committedDate": "2020-03-23T13:06:20Z", "message": "Remove todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "019beb44208b8cdb6e83b5f9e19afc933dd13bdf", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/019beb44208b8cdb6e83b5f9e19afc933dd13bdf", "committedDate": "2020-03-23T18:44:33Z", "message": "Some minor cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "116a864d3469036d872bdfd2d5e60f34e79b7502", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/116a864d3469036d872bdfd2d5e60f34e79b7502", "committedDate": "2020-03-23T20:34:50Z", "message": "Add comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4615, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}