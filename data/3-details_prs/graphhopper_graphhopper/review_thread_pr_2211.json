{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTQ0OTQx", "number": 2211, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToxMToyNFrOFE7f3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToxMToyNFrOFE7f3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzEzNDM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/routing/weighting/custom/CustomWeighting.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToxMToyNFrOIFLgpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MDoyOVrOIFMj3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMjM3Mg==", "bodyText": "In current master this is named EdgeToValueEntry and getValue but the class name you have is better, unsure about apply :D", "url": "https://github.com/graphhopper/graphhopper/pull/2211#discussion_r542302372", "createdAt": "2020-12-14T11:11:24Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/weighting/custom/CustomWeighting.java", "diffHunk": "@@ -169,4 +165,46 @@ public long calcEdgeMillis(EdgeIteratorState edgeState, boolean reverse) {\n     public String getName() {\n         return NAME;\n     }\n+\n+    @FunctionalInterface\n+    public interface EdgeToDoubleMapping {\n+        double apply(EdgeIteratorState edge, boolean reverse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc3c4ba7245969f2e63de2e31d692660d2e397b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODE5NQ==", "bodyText": "java.util.Function calls it apply, but honestly this never sounded very intuitive to me either. Maybe call it get like java.util.Supplier? Or map? Don't know really.", "url": "https://github.com/graphhopper/graphhopper/pull/2211#discussion_r542318195", "createdAt": "2020-12-14T11:38:04Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/routing/weighting/custom/CustomWeighting.java", "diffHunk": "@@ -169,4 +165,46 @@ public long calcEdgeMillis(EdgeIteratorState edgeState, boolean reverse) {\n     public String getName() {\n         return NAME;\n     }\n+\n+    @FunctionalInterface\n+    public interface EdgeToDoubleMapping {\n+        double apply(EdgeIteratorState edge, boolean reverse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMjM3Mg=="}, "originalCommit": {"oid": "cdc3c4ba7245969f2e63de2e31d692660d2e397b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTU4Mg==", "bodyText": "get sounds better, yes :)", "url": "https://github.com/graphhopper/graphhopper/pull/2211#discussion_r542319582", "createdAt": "2020-12-14T11:40:29Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/weighting/custom/CustomWeighting.java", "diffHunk": "@@ -169,4 +165,46 @@ public long calcEdgeMillis(EdgeIteratorState edgeState, boolean reverse) {\n     public String getName() {\n         return NAME;\n     }\n+\n+    @FunctionalInterface\n+    public interface EdgeToDoubleMapping {\n+        double apply(EdgeIteratorState edge, boolean reverse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMjM3Mg=="}, "originalCommit": {"oid": "cdc3c4ba7245969f2e63de2e31d692660d2e397b"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4693, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}