{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzAzMjI2", "number": 1944, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTowNzoxM1rODksI0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzowOTo1NFrODmq7aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Nzk4NDgyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/graphhopper/util/DistanceCalcEarth.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTowNzoxM1rOFxJpeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyODo0MlrOFxdC4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4MjYxOA==", "bodyText": "Why do we need this method? If calcDist3D is called then the elevation values should be valid and not NaN.", "url": "https://github.com/graphhopper/graphhopper/pull/1944#discussion_r387082618", "createdAt": "2020-03-03T15:07:13Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/util/DistanceCalcEarth.java", "diffHunk": "@@ -254,6 +305,10 @@ public boolean isCrossBoundary(double lon1, double lon2) {\n         return abs(lon1 - lon2) > 300;\n     }\n \n+    protected boolean hasElevationDiff(double a, double b) {\n+        return a != b && !Double.isNaN(a) && !Double.isNaN(b);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9391008ac157effdb25bc4f880f14e161633d085"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMDQxOQ==", "bodyText": "I thought that any voids in elevation data show up as NaN?", "url": "https://github.com/graphhopper/graphhopper/pull/1944#discussion_r387400419", "createdAt": "2020-03-04T01:28:42Z", "author": {"login": "msbarry"}, "path": "api/src/main/java/com/graphhopper/util/DistanceCalcEarth.java", "diffHunk": "@@ -254,6 +305,10 @@ public boolean isCrossBoundary(double lon1, double lon2) {\n         return abs(lon1 - lon2) > 300;\n     }\n \n+    protected boolean hasElevationDiff(double a, double b) {\n+        return a != b && !Double.isNaN(a) && !Double.isNaN(b);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4MjYxOA=="}, "originalCommit": {"oid": "9391008ac157effdb25bc4f880f14e161633d085"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODc1ODE2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzowOTo1NVrOF0OBFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzowOTo1NVrOF0OBFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI5OTkyNA==", "bodyText": "Is this currently unused?", "url": "https://github.com/graphhopper/graphhopper/pull/1944#discussion_r390299924", "createdAt": "2020-03-10T13:09:55Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -121,6 +121,7 @@\n     // for data reader\n     private String dataReaderFile;\n     private double dataReaderWayPointMaxDistance = 1;\n+    private double dataReaderElevationMaxDistance = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abccb415e874155049ab0023ef4464dd7b29ffc7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4745, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}