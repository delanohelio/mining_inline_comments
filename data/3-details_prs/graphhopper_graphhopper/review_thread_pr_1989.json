{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTI0Mjc5", "number": 1989, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzo0OToxNlrODy6J0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzo0OToxNlrODy6J0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzA4MTc4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzo0OToxNlrOGHOwcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMTo1Mjo1OFrOGHujuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNDk5NQ==", "bodyText": "Why do you need to remove ElevationProvider here? It is just an interface and should not make a problem or does it? Couldn't you set ElevationProvider.NOOP?\nThe advantage would be that the CI pipeline would not fail.", "url": "https://github.com/graphhopper/graphhopper/pull/1989#discussion_r410234995", "createdAt": "2020-04-17T13:49:16Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -620,7 +620,7 @@ private static ElevationProvider createElevationProvider(GraphHopperConfig ghCon\n             elevationProvider.setBaseURL(baseURL);\n         elevationProvider.setDAType(elevationDAType);\n         return elevationProvider;\n-    }\n+    } */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c773b008b152b91b52df553654608ee2af5065"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNjg4Mw==", "bodyText": "I only had to make sure that HeightTile.java is not needed, since it contains references to java.awt.*, which are not supported. Let me try to rewrite it for this usecase.", "url": "https://github.com/graphhopper/graphhopper/pull/1989#discussion_r410736883", "createdAt": "2020-04-18T18:58:49Z", "author": {"login": "oflebbe"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -620,7 +620,7 @@ private static ElevationProvider createElevationProvider(GraphHopperConfig ghCon\n             elevationProvider.setBaseURL(baseURL);\n         elevationProvider.setDAType(elevationDAType);\n         return elevationProvider;\n-    }\n+    } */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNDk5NQ=="}, "originalCommit": {"oid": "28c773b008b152b91b52df553654608ee2af5065"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MTAzMw==", "bodyText": "Ok, but now the elevation specific tests fail. For a reason . How to proceed from here ?\nShould we comment the tests as well ?\nSince we do not need Elevations at all on mobile ... We will never generate the graph on mobile.\nOther Option would be to remove the awt specific classes by rewriting the Elevation classes using a plain java implementation . I found this (do not know about quality ) https://github.com/ngageoint/tiff-java", "url": "https://github.com/graphhopper/graphhopper/pull/1989#discussion_r410741033", "createdAt": "2020-04-18T19:33:25Z", "author": {"login": "oflebbe"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -620,7 +620,7 @@ private static ElevationProvider createElevationProvider(GraphHopperConfig ghCon\n             elevationProvider.setBaseURL(baseURL);\n         elevationProvider.setDAType(elevationDAType);\n         return elevationProvider;\n-    }\n+    } */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNDk5NQ=="}, "originalCommit": {"oid": "28c773b008b152b91b52df553654608ee2af5065"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NjAyNA==", "bodyText": "Hmmh, tricky. But we could make it working when we move the whole init method out of the GraphHopper class. Probalby this is a good idea in general, but to avoid a delay here we could for now exclude building the web module in this branch. Will try.\nBTW: our usual workflow is to keep all the commits of a pull request (instead of overwriting old commits) and then squash merge them as one commit into master. So the master branch stays relatively \"clean\" and the pull request branch still has everything in it and we can see how it evolved.", "url": "https://github.com/graphhopper/graphhopper/pull/1989#discussion_r410756024", "createdAt": "2020-04-18T21:52:58Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -620,7 +620,7 @@ private static ElevationProvider createElevationProvider(GraphHopperConfig ghCon\n             elevationProvider.setBaseURL(baseURL);\n         elevationProvider.setDAType(elevationDAType);\n         return elevationProvider;\n-    }\n+    } */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNDk5NQ=="}, "originalCommit": {"oid": "28c773b008b152b91b52df553654608ee2af5065"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4782, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}