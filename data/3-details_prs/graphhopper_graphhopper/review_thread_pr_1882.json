{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjgxNzc2", "number": 1882, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjozMTo1OVrODcsdwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjozMTo1OVrODcsdwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDE1MjMzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjozMTo1OVrOFk3tOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjoxMDoyNlrOFlaBlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIwNTc1NA==", "bodyText": "Can you refactor this to the normal Java style getAllowedTurns? (e.g. see GraphHopper.getWorkerThreads)", "url": "https://github.com/graphhopper/graphhopper/pull/1882#discussion_r374205754", "createdAt": "2020-02-03T16:31:59Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "diffHunk": "@@ -391,12 +391,12 @@ private int getTurn(EdgeIteratorState edge, int baseNode, int prevNode, int adjN\n             forceInstruction = true;\n         }\n \n-        InstructionsOutgoingEdges outgoingEdges = new InstructionsOutgoingEdges(prevEdge, edge, encoder, maxSpeedEnc, crossingExplorer, nodeAccess, prevNode, baseNode, adjNode);\n-        int nrOfPossibleTurns = outgoingEdges.nrOfAllowedOutgoingEdges();\n+        InstructionsOutgoingEdges outgoingEdges = new InstructionsOutgoingEdges(prevEdge, edge, encoder, maxSpeedEnc, roadClassEnc, roadClassLinkEnc, crossingExplorer, nodeAccess, prevNode, baseNode, adjNode);\n+        int nrOfPossibleTurns = outgoingEdges.nrOfAllowedTurns();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "248fed1431e56986fb70738324dfaaebeb7fd00d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2ODAyMA==", "bodyText": "Sure, I just pushed this change.", "url": "https://github.com/graphhopper/graphhopper/pull/1882#discussion_r374768020", "createdAt": "2020-02-04T16:10:26Z", "author": {"login": "boldtrn"}, "path": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "diffHunk": "@@ -391,12 +391,12 @@ private int getTurn(EdgeIteratorState edge, int baseNode, int prevNode, int adjN\n             forceInstruction = true;\n         }\n \n-        InstructionsOutgoingEdges outgoingEdges = new InstructionsOutgoingEdges(prevEdge, edge, encoder, maxSpeedEnc, crossingExplorer, nodeAccess, prevNode, baseNode, adjNode);\n-        int nrOfPossibleTurns = outgoingEdges.nrOfAllowedOutgoingEdges();\n+        InstructionsOutgoingEdges outgoingEdges = new InstructionsOutgoingEdges(prevEdge, edge, encoder, maxSpeedEnc, roadClassEnc, roadClassLinkEnc, crossingExplorer, nodeAccess, prevNode, baseNode, adjNode);\n+        int nrOfPossibleTurns = outgoingEdges.nrOfAllowedTurns();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIwNTc1NA=="}, "originalCommit": {"oid": "248fed1431e56986fb70738324dfaaebeb7fd00d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4859, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}