{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODg0OTQx", "number": 1954, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowNToxN1rODn6K-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODo0MDoyN1rODoIkjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTc0MTM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowNToxN1rOF2Loxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNzozMzo0OFrOF2YR4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1ODA4Nw==", "bodyText": "This is a bit more lengthy now ;)", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392358087", "createdAt": "2020-03-13T17:05:17Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -968,14 +968,14 @@ private PointList fetchWayGeometry_(long edgePointer, boolean reverse, int mode,\n             geoRef += 4L;\n             bytes = new byte[count * nodeAccess.getDimension() * 4];\n             wayGeometry.getBytes(geoRef, bytes, bytes.length);\n-        } else if (mode == 0)\n+        } else if (mode == FetchWayGeometry.PILLAR_ONLY)\n             return PointList.EMPTY;\n \n-        PointList pillarNodes = new PointList(count + mode, nodeAccess.is3D());\n+        PointList pillarNodes = new PointList(FetchWayGeometry.count(count, mode), nodeAccess.is3D());\n         if (reverse) {\n-            if ((mode & 2) != 0)\n+            if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.PILLAR_AND_ADJ)\n                 pillarNodes.add(nodeAccess, adjNode);\n-        } else if ((mode & 1) != 0)\n+        } else if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.BASE_AND_PILLAR)\n             pillarNodes.add(nodeAccess, baseNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxOQ==", "bodyText": "IMO its more lengthy and a lot more readable. With the previous code I did not understand what happened here without looking up what e.g. mode=2 means.", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565219", "createdAt": "2020-03-14T07:33:48Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -968,14 +968,14 @@ private PointList fetchWayGeometry_(long edgePointer, boolean reverse, int mode,\n             geoRef += 4L;\n             bytes = new byte[count * nodeAccess.getDimension() * 4];\n             wayGeometry.getBytes(geoRef, bytes, bytes.length);\n-        } else if (mode == 0)\n+        } else if (mode == FetchWayGeometry.PILLAR_ONLY)\n             return PointList.EMPTY;\n \n-        PointList pillarNodes = new PointList(count + mode, nodeAccess.is3D());\n+        PointList pillarNodes = new PointList(FetchWayGeometry.count(count, mode), nodeAccess.is3D());\n         if (reverse) {\n-            if ((mode & 2) != 0)\n+            if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.PILLAR_AND_ADJ)\n                 pillarNodes.add(nodeAccess, adjNode);\n-        } else if ((mode & 1) != 0)\n+        } else if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.BASE_AND_PILLAR)\n             pillarNodes.add(nodeAccess, baseNode);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1ODA4Nw=="}, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzA5MDI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNzozMzo0NVrOF2YR2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMDoyNlrOF2aJzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxMA==", "bodyText": "I do not really like the enum name FetchWayGeometry too much. Its not a noun and it does not really tell us anything. Maybe we can use this name to communicate that this enum is used to specify how many nodes we fetch? For example GeometryNodes.ALL? FetchMode.ALL? WayGeometryFetchMode.ALL?", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565210", "createdAt": "2020-03-14T07:33:45Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTkxNg==", "bodyText": "Yes, FetchMode sounds already good.", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392595916", "createdAt": "2020-03-14T15:20:26Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxMA=="}, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzA5MzQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNzo0Mjo0MVrOF2YTgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMTowN1rOF2aKDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTYzMg==", "bodyText": "The names here could be more expressive. int count(int count does not tell me anything about what this method does. Apparently the method returns the total number of nodes that will be returned by fetchWayGeometry given the number of pillar nodes? So maybe we can at least rename the count parameter to pillarNodes? Maybe rename the method to getFetchedNodeCount or countFetchedNodes?", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565632", "createdAt": "2020-03-14T07:42:41Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {\n+    TOWER_ONLY, PILLAR_ONLY, BASE_AND_PILLAR, PILLAR_AND_ADJ, ALL;\n+\n+    public static int count(int count, FetchWayGeometry mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTk4MQ==", "bodyText": "I'll probably move the method into the only class where it is being used then we do not need to care much about the name for now :) (?)", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392595981", "createdAt": "2020-03-14T15:21:07Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {\n+    TOWER_ONLY, PILLAR_ONLY, BASE_AND_PILLAR, PILLAR_AND_ADJ, ALL;\n+\n+    public static int count(int count, FetchWayGeometry mode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTYzMg=="}, "originalCommit": {"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDEwMDYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODo0MDoyN1rOF2gijw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODo0MDoyN1rOF2gijw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMDU1OQ==", "bodyText": "I'd still change count to pillarNodes (if thats what it is?)", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392700559", "createdAt": "2020-03-15T18:40:27Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -993,16 +993,31 @@ private PointList fetchWayGeometry_(long edgePointer, boolean reverse, int mode,\n         }\n \n         if (reverse) {\n-            if ((mode & 1) != 0)\n+            if (mode == FetchMode.ALL || mode == FetchMode.BASE_AND_PILLAR)\n                 pillarNodes.add(nodeAccess, baseNode);\n \n             pillarNodes.reverse();\n-        } else if ((mode & 2) != 0)\n+        } else if (mode == FetchMode.ALL || mode == FetchMode.PILLAR_AND_ADJ)\n             pillarNodes.add(nodeAccess, adjNode);\n \n         return pillarNodes;\n     }\n \n+    static int getPointListLength(int count, FetchMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b07cd6408003413aa90a87ecb0b48ab71a425e7"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4757, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}