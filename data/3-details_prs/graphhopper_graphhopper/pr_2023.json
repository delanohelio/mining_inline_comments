{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTY5Nzg2", "number": 2023, "title": "Use profiles in web UI / graphhopper maps", "bodyText": "Fixes #1993.", "createdAt": "2020-04-29T21:44:34Z", "url": "https://github.com/graphhopper/graphhopper/pull/2023", "merged": true, "mergeCommit": {"oid": "c07b8024798f69d2e315f95c0ca0d7b6d69f84ef"}, "closed": true, "closedAt": "2020-05-05T13:04:50Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccavXpAH2gAyNDEwOTY5Nzg2OjdjOTFjNGU4ZjI1NjBjYjEzYjNlMWYyOWI1MzU1NjE4NTA1MmMwM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceTu6jgH2gAyNDEwOTY5Nzg2OmU4NWU5NTU3ZGE0NGM2MTkxMjg2ODVmZGYzOWQzYjcyOTJmMDkxNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c91c4e8f2560cb13b3e1f29b53556185052c03f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/7c91c4e8f2560cb13b3e1f29b53556185052c03f", "committedDate": "2020-04-29T16:05:14Z", "message": "Use profiles in web ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a581c6614babaf9110c568f5f90494ccb4f3713d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a581c6614babaf9110c568f5f90494ccb4f3713d", "committedDate": "2020-04-29T21:01:39Z", "message": "Fix integration for pt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88c6589b097fbc5afb78d69b58bacd87115205a3", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/88c6589b097fbc5afb78d69b58bacd87115205a3", "committedDate": "2020-04-29T21:17:38Z", "message": "Merge branch 'master' into profile_ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/9c646c44a0c54df5532080e4bc66399a9de7e06b", "committedDate": "2020-04-29T21:34:13Z", "message": "Fix profile name display/translation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMDYzNDE0", "url": "https://github.com/graphhopper/graphhopper/pull/2023#pullrequestreview-403063414", "createdAt": "2020-04-29T21:46:33Z", "commit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMTo0NjozM1rOGOSOgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMTo1MDowN1rOGOSU7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMTg3Mg==", "bodyText": "elevation is now treated like a global parameter (instead of being different for every vehicle). for one server this is always the case, but in case there were multiple servers some of which do not support elevation this could be a problem?", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417631872", "createdAt": "2020-04-29T21:46:33Z", "author": {"login": "easbar"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ==", "bodyText": "@karussell would you mind taking a look at this? I did not manage to fix this and not even sure if this needs to be fixed.", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632181", "createdAt": "2020-04-29T21:47:15Z", "author": {"login": "easbar"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;\n };\n \n GHRequest.prototype.hasElevation = function () {\n     return this.api_params.elevation === true;\n };\n \n GHRequest.prototype.getVehicle = function () {\n-    return this.api_params.vehicle;\n+    var profileName = this.api_params.profile;\n+    var profile = this.profiles.find(function(p) { return p.profile_name === profileName; });\n+    if (!profile)\n+        return \"\";\n+    else\n+        return profile.vehicle;\n };\n \n GHRequest.prototype.isPublicTransit = function () {\n-    return this.getVehicle() === \"pt\";\n+    // legacy support: we might have set vehicle=pt instead of pt\n+    return this.getProfile() === \"pt\" || this.getVehicle() === \"pt\";;\n };\n \n+GHRequest.prototype.removeProfileParameterIfLegacyRequest = function() {\n+     // we still allow using legacy parameters to support older urls pasted from somewhere, but when they are used\n+     // we may not add the profile parameter to the url\n+     if (\n+            this.api_params[\"vehicle\"] ||\n+            this.api_params[\"weighting\"] ||\n+            this.api_params[\"turn_costs\"] ||\n+            this.api_params[\"edge_based\"]\n+        ) {\n+            delete this.api_params.profile;\n+        }\n+     // todonow: pasting a legacy url already works the only thing that is ugly is that when we do a normal request\n+     // (including profile) then add something like vehicle=car the the profile parameter appears still in the url field\n+     // (even though it will not be sent to the server). when we drag a marker afterwards it finally disappears, how can\n+     // we do this already here?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ==", "bodyText": "this can be used to recognize that a request was sent using this client", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632409", "createdAt": "2020-04-29T21:47:46Z", "author": {"login": "easbar"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -232,6 +259,10 @@ GHRequest.prototype.doRequest = function (url, callback) {\n     $.ajax({\n         timeout: 30000,\n         url: url,\n+        beforeSend: function(request) {\n+            // todonow: maybe rename\n+            request.setRequestHeader(\"gh-client\", \"web-ui\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjU1Mw==", "bodyText": "this can probably be done server-side (using the header telling us the request comes from the client)", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632553", "createdAt": "2020-04-29T21:48:07Z", "author": {"login": "easbar"}, "path": "web/src/main/resources/assets/js/main-template.js", "diffHunk": "@@ -34,11 +34,6 @@ if (ghenv.environment === 'development') {\n     var autocomplete = AutoComplete.prototype.createStub();\n } else {\n     var autocomplete = new AutoComplete(ghenv.geocoding.host, ghenv.geocoding.api_key);\n-    // overwrite default for production\n-    GHRequest.prototype.hasTCSupport = function() {\n-       if(this.api_params.turn_costs !== false)\n-          this.api_params.turn_costs = new Set([\"car\", \"truck\", \"small_truck\", \"scooter\"]).has(this.api_params.vehicle);\n-    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA==", "bodyText": "Any better idea? For profile names like my_special_super_car we will get something like \"web.my_special_super_car (my_special_super_car)\"...", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417633518", "createdAt": "2020-04-29T21:50:07Z", "author": {"login": "easbar"}, "path": "web/src/main/resources/assets/js/main-template.js", "diffHunk": "@@ -239,6 +252,17 @@ $(document).ready(function (e) {\n     checkInput();\n });\n \n+function profileDisplayName(profileName) {\n+   return translate.tr(profileName) + ' (' + profileName + ')'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0767982b8ebd9be4502e9d0829743becc45d0a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/ee0767982b8ebd9be4502e9d0829743becc45d0a", "committedDate": "2020-04-30T09:22:36Z", "message": "Extract createRouteCallBack as in master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819", "committedDate": "2020-04-30T09:24:16Z", "message": "Merge branch 'master' into profile_ui\n\n# Conflicts:\n#\tweb/src/main/resources/assets/js/main-template.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d7853ae75804155d64c5a189c499be280bc9fcc", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2d7853ae75804155d64c5a189c499be280bc9fcc", "committedDate": "2020-05-02T19:45:49Z", "message": "merged master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74b8c396ab6f32decbf6e7debc5fdaefeaf66440", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/74b8c396ab6f32decbf6e7debc5fdaefeaf66440", "committedDate": "2020-05-02T19:56:42Z", "message": "pick profile from api_params, no need to put it into the text box"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTE1ODE3", "url": "https://github.com/graphhopper/graphhopper/pull/2023#pullrequestreview-404515817", "createdAt": "2020-05-02T10:00:13Z", "commit": {"oid": "5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMDowMDoxM1rOGPiBeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToyMzoxOVrOGPlkVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTI1Nw==", "bodyText": "I would remove the info in brackets or why would you add it?", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939257", "createdAt": "2020-05-02T10:00:13Z", "author": {"login": "karussell"}, "path": "web/src/main/resources/assets/js/main-template.js", "diffHunk": "@@ -239,6 +252,17 @@ $(document).ready(function (e) {\n     checkInput();\n });\n \n+function profileDisplayName(profileName) {\n+   return translate.tr(profileName) + ' (' + profileName + ')'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA=="}, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTMxMg==", "bodyText": "Yes, let's keep it this way for now.", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939312", "createdAt": "2020-05-02T10:00:49Z", "author": {"login": "karussell"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMTg3Mg=="}, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTUwMw==", "bodyText": "Good idea. Is there a way we could include some version? And isn't it usually called \"User-Agent\" ... ah, no, this will collide with browser version etc.", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939503", "createdAt": "2020-05-02T10:02:48Z", "author": {"login": "karussell"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -232,6 +259,10 @@ GHRequest.prototype.doRequest = function (url, callback) {\n     $.ajax({\n         timeout: 30000,\n         url: url,\n+        beforeSend: function(request) {\n+            // todonow: maybe rename\n+            request.setRequestHeader(\"gh-client\", \"web-ui\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTAzMg==", "bodyText": "URL rewriting is only done after the request. But I'm not exactly sure what you mean here. And shouldn't we remove the vehicle parameter from the URL if vehicle and profile parameter exist in the URL?", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418991032", "createdAt": "2020-05-02T18:22:30Z", "author": {"login": "karussell"}, "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;\n };\n \n GHRequest.prototype.hasElevation = function () {\n     return this.api_params.elevation === true;\n };\n \n GHRequest.prototype.getVehicle = function () {\n-    return this.api_params.vehicle;\n+    var profileName = this.api_params.profile;\n+    var profile = this.profiles.find(function(p) { return p.profile_name === profileName; });\n+    if (!profile)\n+        return \"\";\n+    else\n+        return profile.vehicle;\n };\n \n GHRequest.prototype.isPublicTransit = function () {\n-    return this.getVehicle() === \"pt\";\n+    // legacy support: we might have set vehicle=pt instead of pt\n+    return this.getProfile() === \"pt\" || this.getVehicle() === \"pt\";;\n };\n \n+GHRequest.prototype.removeProfileParameterIfLegacyRequest = function() {\n+     // we still allow using legacy parameters to support older urls pasted from somewhere, but when they are used\n+     // we may not add the profile parameter to the url\n+     if (\n+            this.api_params[\"vehicle\"] ||\n+            this.api_params[\"weighting\"] ||\n+            this.api_params[\"turn_costs\"] ||\n+            this.api_params[\"edge_based\"]\n+        ) {\n+            delete this.api_params.profile;\n+        }\n+     // todonow: pasting a legacy url already works the only thing that is ugly is that when we do a normal request\n+     // (including profile) then add something like vehicle=car the the profile parameter appears still in the url field\n+     // (even though it will not be sent to the server). when we drag a marker afterwards it finally disappears, how can\n+     // we do this already here?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, "originalCommit": {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NzMzMw==", "bodyText": "this could be a bit shorter ;)\nreturn \"pt\".equals(maybeProfile)\nAnd should we also remove the profile param in the filter method above? (replaceQueryParam(\"profile\"))", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418997333", "createdAt": "2020-05-02T19:23:19Z", "author": {"login": "karussell"}, "path": "web-bundle/src/main/java/com/graphhopper/http/PtRedirectFilter.java", "diffHunk": "@@ -40,6 +40,13 @@ public void filter(ContainerRequestContext requestContext) {\n \n     private boolean shouldRedirect(ContainerRequestContext requestContext) {\n         String maybeVehicle = requestContext.getUriInfo().getQueryParameters().getFirst(\"vehicle\");\n-        return maybeVehicle != null && maybeVehicle.equals(\"pt\");\n+        if (maybeVehicle != null && maybeVehicle.equals(\"pt\")) {\n+            return true;\n+        }\n+        String maybeProfile = requestContext.getUriInfo().getQueryParameters().getFirst(\"profile\");\n+        if (maybeProfile != null && maybeProfile.equals(\"pt\")) {\n+            return true;\n+        }\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860f2d2f767f5fe6b430e7083eb5926872aaeb5b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/860f2d2f767f5fe6b430e7083eb5926872aaeb5b", "committedDate": "2020-05-04T08:31:33Z", "message": "Remove profile after redirecting PT requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff09783a8ad6e98e5faa453f5219acd41382215", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/7ff09783a8ad6e98e5faa453f5219acd41382215", "committedDate": "2020-05-04T09:02:45Z", "message": "Display profile name *or* translated name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3744e786032424554b0f5b243a8c757ea3e83eeb", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/3744e786032424554b0f5b243a8c757ea3e83eeb", "committedDate": "2020-05-04T09:02:57Z", "message": "Add (hard-coded) client version for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a79f40bb77e4ce3da63ebec322c6743ffdf89eb0", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a79f40bb77e4ce3da63ebec322c6743ffdf89eb0", "committedDate": "2020-05-05T13:03:05Z", "message": "Remove todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e85e9557da44c619128685fdf39d3b7292f09156", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e85e9557da44c619128685fdf39d3b7292f09156", "committedDate": "2020-05-05T13:03:15Z", "message": "Merge branch 'master' into profile_ui"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}