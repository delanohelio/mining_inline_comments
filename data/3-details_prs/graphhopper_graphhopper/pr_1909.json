{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTYxNzY0", "number": 1909, "title": "Start using JUnit 5", "bodyText": "I find it difficult to add the new profiles configurations (see #493) and currently the biggest issue is that some of our tests are quite a mess. For example GraphHopperIT is a huge collection of (not necessarily related) tests, some of which are sharing some (test-)class variables while others are self-contained. This makes it hard to adjust them to any kind of api changes in GraphHopper. So after struggling with this for a while I decided its time to clean up these tests and wanted to split GraphHopperIT into several test classes to be able to properly group together tests that are actually related. There is also GraphHopperOSMTest which in many cases is not really different to GraphHopperIT?\nAnyway, I started with the first test:\n\n  \n    \n      graphhopper/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n    \n    \n        Lines 91 to 93\n      in\n      e98d02c\n    \n    \n    \n    \n\n        \n          \n           public void testMonacoWithInstructions() { \n        \n\n        \n          \n               GHResponse rsp = hopper.route(new GHRequest(43.727687, 7.418737, 43.74958, 7.436566). \n        \n\n        \n          \n                       setAlgorithm(ASTAR).setVehicle(vehicle).setWeighting(weightCalcStr)); \n        \n    \n  \n\n\nIt is supposed to test something about instructions. But why is it using a non-CH algo (from the shared hopper instance?). Why is it using (only) AStar? If we want to test something about instructions why would we not stick to what is the default in production (CH without AStar)? Or wouldn't it be even better to run the test with different algorithms (the outcome/instructions should be the same anyway)? I think the answer for the first two questions is that this test is 7 years old, but just changing it to something more recent (like CH with Dijkstra) also seems a little sketchy (maybe its testing something specific about AStar (hard to know after all these years:)).\nSo I thought maybe this is a good use-case for junit 5's @ParameterizedTest, because it allows running the same test for mulitple algorithms with a very short notation. I briefly tried this and right now I cannot see a reason not to start using this feature, especially because we can just use it where we need it. There is no need to migrate the whole code base all at once. However, every test class should use junit 4 or 5 (not both). Then again if test classes are so big and inhomogeneous that this is a problem its time to split them into smaller, more cohesive ones anyway.\nOne has to pay attention not to confuse the junit 4 with the junit 5 imports in the same class, but I think this we can deal with. Its also a bit annoying that changed assertTrue(String, boolean) to assertTrue(boolean, String), but to me that does not seem to be a good reason not to use it either.\nThanks again to @Anvoker for doing a comprehensive (a lot more than I know so far) analyis about junit 5 for GraphHopper here #1632.", "createdAt": "2020-02-13T16:18:53Z", "url": "https://github.com/graphhopper/graphhopper/pull/1909", "merged": true, "mergeCommit": {"oid": "2136ec322bd8469f789c11d444c92606315e75b7"}, "closed": true, "closedAt": "2020-02-21T07:57:21Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD61ZEAH2gAyMzc0OTYxNzY0OjhmZDNmZDVkOTE1MTdjMzdhNTMxYWY1ZTAyNjM4NzI1YjI1ZTU4NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGa5UZAH2gAyMzc0OTYxNzY0OjEzYWFjZDc2YTA0ZmQ3YjRmNmQ1NTU5Njk0ZjAyZjE0OGJhOWM4MzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fd3fd5d91517c37a531af5e02638725b25e584a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8fd3fd5d91517c37a531af5e02638725b25e584a", "committedDate": "2020-02-13T13:20:40Z", "message": "Minor cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e957429ea732f219e9e7c9a27bccc42fd7ef085", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2e957429ea732f219e9e7c9a27bccc42fd7ef085", "committedDate": "2020-02-13T15:59:57Z", "message": "Start using junit 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/08a85bc9792f78694304814c4e44bb7ad2eb4279", "committedDate": "2020-02-13T16:20:17Z", "message": "Merge branch 'master' into start_junit5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzU4MzMz", "url": "https://github.com/graphhopper/graphhopper/pull/1909#pullrequestreview-358358333", "createdAt": "2020-02-13T16:22:08Z", "commit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjowOVrOFpaZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNjo0M1rOFpalIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODM3NA==", "bodyText": "Maybe we could put these dependencies into the parent pom?", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968374", "createdAt": "2020-02-13T16:22:09Z", "author": {"login": "easbar"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODU3Mw==", "bodyText": "Maybe this should also go into the parent pom", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968573", "createdAt": "2020-02-13T16:22:27Z", "author": {"login": "easbar"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>\n+            <artifactId>junit-platform-launcher</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.vintage</groupId>\n+            <artifactId>junit-vintage-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-params</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.graphhopper</groupId>\n             <artifactId>graphhopper-core</artifactId>\n             <version>${project.parent.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n-        </dependency>        \n+        </dependency>\n     </dependencies>\n+\n+    <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODgzNw==", "bodyText": "jupiter tells us we are dealing with the junit 5 dependencies here", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968837", "createdAt": "2020-02-13T16:22:49Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -34,7 +34,9 @@\n import com.graphhopper.util.exceptions.PointDistanceExceededException;\n import com.graphhopper.util.shapes.GHPoint;\n import com.graphhopper.util.shapes.GHPoint3D;\n-import org.junit.*;\n+import org.junit.jupiter.api.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTA5Nw==", "bodyText": "This has been renamed, but its easy to change :)", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969097", "createdAt": "2020-02-13T16:23:12Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -59,7 +62,7 @@\n     private static GraphHopper hopper;\n     private final String tmpGraphFile = \"target/graphhopperIT-tmp\";\n \n-    @BeforeClass\n+    @BeforeAll", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTIyMQ==", "bodyText": "Same here, just a rename", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969221", "createdAt": "2020-02-13T16:23:22Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ==", "bodyText": "This is quite nice, especially for testing with different api parameters. Each element of the array is split into separate parameters to the test method (algo and expectedVisitedNodes) and there are default converters (e.g. expectedVisitedNodes is parsed to an int here. So with these two annotations I was able to run the test I was talking about in the initial comment for different algorithms.", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970455", "createdAt": "2020-02-13T16:25:18Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDgwMg==", "bodyText": "The message shown when an assertion fails is now the last parrameter in the assertXYZ methods...", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970802", "createdAt": "2020-02-13T16:25:53Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1370,7 +1374,7 @@ public void testEncoderWithTurnCostSupport_stillAllows_nodeBasedRouting() {\n         GHRequest req = new GHRequest(p, q);\n         req.setVehicle(\"foot\");\n         GHResponse rsp = tmpHopper.route(req);\n-        assertEquals(\"there should not be an error, but was: \" + rsp.getErrors(), 0, rsp.getErrors().size());\n+        assertEquals(0, rsp.getErrors().size(), \"there should not be an error, but was: \" + rsp.getErrors());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTQyNg==", "bodyText": "I did not feel like changing all the method calls to the new format, but after adding these methods this could be done with a single click by using the inline refactoring in IntelliJ", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378971426", "createdAt": "2020-02-13T16:26:43Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1587,6 +1591,22 @@ private void assertInstruction(Instruction instruction, String expectedName, Str\n         assertEquals(expectedPoints, instruction.getPoints().size());\n     }\n \n+    private void assertTrue(boolean condition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDk3MTg0", "url": "https://github.com/graphhopper/graphhopper/pull/1909#pullrequestreview-359097184", "createdAt": "2020-02-14T17:19:34Z", "commit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxOTozNFrOFp96Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoyMToyNVrOFp99Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDI4Ng==", "bodyText": "Ok", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550286", "createdAt": "2020-02-14T17:19:34Z", "author": {"login": "karussell"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODM3NA=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDU4OA==", "bodyText": "Yes, see also: #1906?", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550588", "createdAt": "2020-02-14T17:20:18Z", "author": {"login": "karussell"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>\n+            <artifactId>junit-platform-launcher</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.vintage</groupId>\n+            <artifactId>junit-vintage-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-params</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.graphhopper</groupId>\n             <artifactId>graphhopper-core</artifactId>\n             <version>${project.parent.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n-        </dependency>        \n+        </dependency>\n     </dependencies>\n+\n+    <dependencyManagement>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODU3Mw=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDk5MQ==", "bodyText": "Interesting! Looks good.", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550991", "createdAt": "2020-02-14T17:21:25Z", "author": {"login": "karussell"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30de8cbbafa94031f4edaaa10af032adf1f83d0c", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/30de8cbbafa94031f4edaaa10af032adf1f83d0c", "committedDate": "2020-02-14T22:03:44Z", "message": "Add dependency management and junit4 dependency to parent pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e649830c7ca48eb4c665fbd094c24cb8cf88300f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e649830c7ca48eb4c665fbd094c24cb8cf88300f", "committedDate": "2020-02-14T22:28:56Z", "message": "Setup junit5 in parent pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079529df4eb02e817ef85f65beb300a1704950ac", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/079529df4eb02e817ef85f65beb300a1704950ac", "committedDate": "2020-02-16T16:04:58Z", "message": "Merge branch 'master' into start_junit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce9ec6692a09f588539bf6d6ee141cd5d631863", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/bce9ec6692a09f588539bf6d6ee141cd5d631863", "committedDate": "2020-02-16T16:24:16Z", "message": "Convert GraphHopperIT to JUnit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad672f2679295c670a3d7a3b61e6635bfa0ba7c7", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/ad672f2679295c670a3d7a3b61e6635bfa0ba7c7", "committedDate": "2020-02-16T16:26:20Z", "message": "Merge branch 'master' into dependency_management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0c86fb814a7a5e9fcb7acd2860ab1a8d8e70dd8", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a0c86fb814a7a5e9fcb7acd2860ab1a8d8e70dd8", "committedDate": "2020-02-16T16:28:05Z", "message": "Merge branch 'dependency_management' into start_junit5\n\n# Conflicts:\n#\tpom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8a3d990711e9f2be07f7ba7d5e8859a568e7314", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c8a3d990711e9f2be07f7ba7d5e8859a568e7314", "committedDate": "2020-02-18T07:41:43Z", "message": "Merge branch 'master' into dependency_management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ae35dc2d9928b3b458572d1f7ff2306b76b47ed", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4ae35dc2d9928b3b458572d1f7ff2306b76b47ed", "committedDate": "2020-02-18T07:44:24Z", "message": "Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8462d9b80cf60470e7cbcb0ea3455fe76bfd677", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e8462d9b80cf60470e7cbcb0ea3455fe76bfd677", "committedDate": "2020-02-18T07:47:13Z", "message": "Merge branch 'dependency_management' into start_junit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ec7fa62c669c165f14b601544f37356276fb5f7", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2ec7fa62c669c165f14b601544f37356276fb5f7", "committedDate": "2020-02-18T07:48:43Z", "message": "Merge branch 'master' into start_junit5\n\n# Conflicts:\n#\tpom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9235d700063921c8d959ac2c5f136b802837b39", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a9235d700063921c8d959ac2c5f136b802837b39", "committedDate": "2020-02-21T07:39:46Z", "message": "Merge branch 'master' into start_junit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13aacd76a04fd7b4f6d5559694f02f148ba9c833", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/13aacd76a04fd7b4f6d5559694f02f148ba9c833", "committedDate": "2020-02-21T07:49:46Z", "message": "Enable CH for newly added test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4563, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}