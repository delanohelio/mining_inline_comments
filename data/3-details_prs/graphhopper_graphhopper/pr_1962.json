{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTMxMDMx", "number": 1962, "title": "more PMap refactoring", "bodyText": "See discussion in #1956", "createdAt": "2020-03-19T10:52:03Z", "url": "https://github.com/graphhopper/graphhopper/pull/1962", "merged": true, "mergeCommit": {"oid": "5a01808cbcc2e18df57d00210a71cf76ebae7e74"}, "closed": true, "closedAt": "2020-03-19T15:15:49Z", "author": {"login": "karussell"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPJrU8gH2gAyMzkwOTMxMDMxOmNmOGVmOGZiM2U5MDVlOTNmNWMxMzU5MmQ2NGI2OGQzNGY0YzEyZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPNUpkAFqTM3NzgxMDE4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6", "committedDate": "2020-03-19T10:51:25Z", "message": "more PMap refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NjEyMjk4", "url": "https://github.com/graphhopper/graphhopper/pull/1962#pullrequestreview-377612298", "createdAt": "2020-03-19T10:56:29Z", "commit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDo1NjozMFrOF4pWkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowMDozNFrOF4pe9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MjA5Ng==", "bodyText": "I think we need putObject(Routing.EDGE_BASED, Helper.toObject(edgeBasedParam)) here (previously this code relied on the string being converted to boolean... This is a bit ugly code, and will be gone in #1958 :)", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394942096", "createdAt": "2020-03-19T10:56:30Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1549,7 +1549,7 @@ private GHResponse assertMoscowEdgeBased(GraphHopper hopper, String edgeBasedPar\n     private GHResponse runMoscow(GraphHopper hopper, String edgeBasedParam, boolean ch) {\n         GHRequest req = new GHRequest(55.813357, 37.5958585, 55.811042, 37.594689);\n         if (edgeBasedParam.equals(\"true\") || edgeBasedParam.equals(\"false\")) {\n-            req.getHints().put(Routing.EDGE_BASED, edgeBasedParam);\n+            req.getHints().putObject(Routing.EDGE_BASED, edgeBasedParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0Mjc4Mg==", "bodyText": "This is dangerous, I think if we pass \"1\" here, e.g. getInt(\"prepare.min_network_size\", 102) will return 102.", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394942782", "createdAt": "2020-03-19T10:57:48Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "diffHunk": "@@ -668,9 +668,9 @@ public void testVia() {\n         final String weighting = \"fastest\";\n         instance = new GraphHopperOSM().setStoreOnFlush(true).\n                 init(new GraphHopperConfig().\n-                        put(\"datareader.file\", testOsm3).\n-                        put(\"prepare.min_network_size\", \"1\").\n-                        put(\"graph.flag_encoders\", vehicle)\n+                        putObject(\"datareader.file\", testOsm3).\n+                        putObject(\"prepare.min_network_size\", \"1\").", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0NDI0Ng==", "bodyText": "Here we need Helper.toObject(turnCosts.get(0)), as mentioned here (in case you missed this): #1956 (comment)", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394944246", "createdAt": "2020-03-19T11:00:34Z", "author": {"login": "easbar"}, "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "diffHunk": "@@ -233,7 +233,7 @@ private void translateTurnCostsParamToEdgeBased(GHRequest request, MultivaluedMa\n             if (turnCosts.size() != 1) {\n                 throw new IllegalArgumentException(\"You may only specify the turn_costs parameter once\");\n             }\n-            request.getHints().put(EDGE_BASED, turnCosts.get(0));\n+            request.putHint(EDGE_BASED, turnCosts.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "690a4920d0402af665202a14c28defc0e43876e3", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/690a4920d0402af665202a14c28defc0e43876e3", "committedDate": "2020-03-19T14:56:02Z", "message": "include review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODEwMTg0", "url": "https://github.com/graphhopper/graphhopper/pull/1962#pullrequestreview-377810184", "createdAt": "2020-03-19T15:06:16Z", "commit": {"oid": "690a4920d0402af665202a14c28defc0e43876e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4617, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}