{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY3NzAy", "number": 1863, "title": "Remove TurnWeighting and handle turn weights within Weighting instead", "bodyText": "Fixes #1820\nThis is (more or less) what happens here:\n\n\nWeighting has two new methods calcTurnWeight/Millis(inEdge, viaNode, outEdge) so besides edge-weights it now also calculates turn weights\n\n\nThe turn weight is calculated by implementations of a new interface TurnCostProvider, there is NoTurnCostProvider in case the turn costs should be zero. DefaultTurnCostProvider handles u-turn costs as we did so far and applies turn restrictions (same as TurnWeighting did before)\n\n\nAbstractWeighting has a TurnCostProvider, which is passed via the constructor -> It must be known at the time the Weighting is created (in contrast to the old TurnWeighting which wrapped an existing Weighting after it was created).\n\n\nSince AbstractWeighting provides default implementations for calcTurnWeight/Millis, the sub-classes usually do not need to be concerned with turn weightings. They only need to override calc*Edge*Weight/Millis. If you want to change the turn weights in a subclass you can just pass another TurnCostProvider to the AbstractWeighting` constructor.\n\n\nSome Weightings do not inherit from AbstractWeighting, but rather wrap another weighting (e.g. avoid edges and block area). For this reason its ugly to have Weighting#calcWeight(edgeState, reverse, prevNext) which is now just a combination of edge and turn weights anyway. For example the AvoidEdgesWeighting adjusts the edge weights, but is unaware of the turn cost implementation of the wrapped weighting, so its not clear how to implement calcWeight based on the wrapped weighting. Therefore I removed Weighting#calcWeight. For the (quite common) case where we combine edge- with turn-weights there is a static helper method (currently in AbstractWeighting).\n\n\nThere is one more (bigger) complication: Turn costs at virtual nodes and edges. So far we had to use the (special) TurnCostStorage from QueryGraph and pass it into TurnWeighting. But now that TurnWeighting is gone we have to wrap the Weighting into QueryGraphWeighting when we use it with QueryGraph instead (at least to calculate turn costs). This is a bit ugly to do, so I added Graph#wrapWeighting (which is only really implemented by QueryGraph for now).", "createdAt": "2020-01-23T17:01:28Z", "url": "https://github.com/graphhopper/graphhopper/pull/1863", "merged": true, "mergeCommit": {"oid": "4582ee033819474b5a6ecbde8fe352d40722c274"}, "closed": true, "closedAt": "2020-01-28T10:00:18Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7-HDqgH2gAyMzY2NDY3NzAyOjg0YjcyMzI5Y2ZmZjdjZTRmMWZlZGViYWQzZmVlNjRjMjAyZmNkZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-uQcvAH2gAyMzY2NDY3NzAyOmJjMGE5Yzc5MjdjMWQzODliNzg4NjQ2ZmUzOGZiYTc1ZmQwM2Y2OGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84b72329cfff7ce4f1fedebad3fee64c202fcdde", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/84b72329cfff7ce4f1fedebad3fee64c202fcdde", "committedDate": "2020-01-19T20:38:17Z", "message": "Calculate turn costs via TurnCostProvider within AbstractWeighting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d98c46df55e7ef8748adf0ee446f2a31e0d9b12b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d98c46df55e7ef8748adf0ee446f2a31e0d9b12b", "committedDate": "2020-01-19T21:31:35Z", "message": "Add constructor with TurnCostProvider argument to the other weightings as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce94a7ddfef9224a059e3d1b53631ce5105313d0", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/ce94a7ddfef9224a059e3d1b53631ce5105313d0", "committedDate": "2020-01-19T22:53:00Z", "message": "Remove Weighting#calcWeight/Millis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0f81009b9016c092224047e696da4696498339e", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d0f81009b9016c092224047e696da4696498339e", "committedDate": "2020-01-20T08:07:32Z", "message": "Start removing usages of TurnWeighting, 29 left"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac108000d1b13317b2f6439532a95f37c52ada8", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/fac108000d1b13317b2f6439532a95f37c52ada8", "committedDate": "2020-01-20T16:35:35Z", "message": "Remove TurnWeighting and QueryGraphTurnCostStorage, add QueryGraphWeighting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5ecfec34d8560d646ae7eb30e8bd81064fb4881", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c5ecfec34d8560d646ae7eb30e8bd81064fb4881", "committedDate": "2020-01-21T21:40:21Z", "message": "Set up turn cost providers when creating weightings for edge-based CH profiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fdab427ea530721a8ed299550de7dd90fcbaee2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/0fdab427ea530721a8ed299550de7dd90fcbaee2", "committedDate": "2020-01-22T09:16:30Z", "message": "Move u_turn_costs parameter from CHProfile into (default) turn cost provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe9204411f871c1e6a0ae0c326c06201ac6ad18a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/fe9204411f871c1e6a0ae0c326c06201ac6ad18a", "committedDate": "2020-01-23T07:59:36Z", "message": "Merge branch 'master' into remove_turn_weighting\n\n# Conflicts:\n#\tcore/src/test/java/com/graphhopper/routing/weighting/RandomizedRoutingTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fccada71af4b3dd3c32436a2753c68508d8b8c9e", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/fccada71af4b3dd3c32436a2753c68508d8b8c9e", "committedDate": "2020-01-23T09:00:09Z", "message": "Use Strings to add CH profiles to GraphBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aad8fde907f419364b70fdcd4523e00c8b71ce54", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/aad8fde907f419364b70fdcd4523e00c8b71ce54", "committedDate": "2020-01-23T09:01:33Z", "message": "Merge branch 'master' into graph_builder_ch_strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "570d592770bd74fc81c79063e46aee3e46f65a74", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/570d592770bd74fc81c79063e46aee3e46f65a74", "committedDate": "2020-01-23T09:39:15Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c164f8107aa49b4aa00b1b480f6bef29e9a23d27", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c164f8107aa49b4aa00b1b480f6bef29e9a23d27", "committedDate": "2020-01-23T12:49:04Z", "message": "Merge branch 'master' into remove_turn_weighting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b76189b1cfa445d8c0ae5a2d7d2d70ec7278cf2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/1b76189b1cfa445d8c0ae5a2d7d2d70ec7278cf2", "committedDate": "2020-01-23T12:51:47Z", "message": "Merge branch 'graph_builder_ch_strings' into remove_turn_weighting\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/storage/GraphBuilder.java\n#\tcore/src/test/java/com/graphhopper/routing/CHQueryWithTurnCostsTest.java\n#\tcore/src/test/java/com/graphhopper/routing/RandomCHRoutingTest.java\n#\tcore/src/test/java/com/graphhopper/routing/ch/EdgeBasedNodeContractorTest.java\n#\tcore/src/test/java/com/graphhopper/routing/ch/EdgeBasedWitnessPathSearcherTest.java\n#\tcore/src/test/java/com/graphhopper/storage/ShortcutUnpackerTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44a712bf9bbba28848d48e77688ee5b63e199eb8", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/44a712bf9bbba28848d48e77688ee5b63e199eb8", "committedDate": "2020-01-23T12:53:36Z", "message": "Merge branch 'master' into remove_turn_weighting\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/storage/GraphBuilder.java\n#\tcore/src/test/java/com/graphhopper/routing/CHQueryWithTurnCostsTest.java\n#\tcore/src/test/java/com/graphhopper/routing/RandomCHRoutingTest.java\n#\tcore/src/test/java/com/graphhopper/routing/ch/EdgeBasedNodeContractorTest.java\n#\tcore/src/test/java/com/graphhopper/routing/ch/EdgeBasedWitnessPathSearcherTest.java\n#\tcore/src/test/java/com/graphhopper/storage/ShortcutUnpackerTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac888889191480766b609aaf511dd13909b339d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4ac888889191480766b609aaf511dd13909b339d", "committedDate": "2020-01-23T13:04:25Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ff7f2cb013d1baef522a78648c4db2243f7e8da", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4ff7f2cb013d1baef522a78648c4db2243f7e8da", "committedDate": "2020-01-23T15:45:14Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903d7ed6ead6d470d25e636d137ae644784a0bba", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/903d7ed6ead6d470d25e636d137ae644784a0bba", "committedDate": "2020-01-23T16:27:53Z", "message": "Fix or downgrade some of the remaining todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2fc0bcf031e2e7eb53ad796e6386d843c04446e1", "committedDate": "2020-01-23T16:50:56Z", "message": "minor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MDU5NjQ3", "url": "https://github.com/graphhopper/graphhopper/pull/1863#pullrequestreview-348059647", "createdAt": "2020-01-24T16:10:16Z", "commit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoxMDoxNlrOFhinbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjozMDo1M1rOFhjQIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxNDQ3Ng==", "bodyText": "Yes, this is intended. In a separate issue we could try if this would have any negative consequences.", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370714476", "createdAt": "2020-01-24T16:10:16Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -847,7 +847,8 @@ private void initLMAlgoFactoryDecorator() {\n \n         for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n             for (String lmWeightingStr : lmFactoryDecorator.getWeightingsAsStrings()) {\n-                Weighting weighting = createWeighting(new HintsMap(lmWeightingStr), encoder, null);\n+                // note that we do not consider turn costs during LM preparation?\n+                Weighting weighting = createWeighting(new HintsMap(lmWeightingStr), encoder, null, new NoTurnCostProvider());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxNjA2OQ==", "bodyText": "Should we create an issue as reminder for this?", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370716069", "createdAt": "2020-01-24T16:13:24Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "diffHunk": "@@ -508,7 +508,7 @@ private void updatePointsAndInstruction(EdgeIteratorState edge, PointList pl) {\n         }\n         double newDist = edge.getDistance();\n         prevInstruction.setDistance(newDist + prevInstruction.getDistance());\n-        // todonow: why do we not account for turn times here ?\n+        // todo: why do we not account for turn times here ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMTIyMg==", "bodyText": "Shouldn't it include the FlagEncoder too? Because without it, then different providers will have the same name.\n(and in weighting.matches we could adapt the equals)", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370721222", "createdAt": "2020-01-24T16:23:40Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/weighting/DefaultTurnCostProvider.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.routing.weighting;\n+\n+import com.graphhopper.routing.profiles.DecimalEncodedValue;\n+import com.graphhopper.routing.profiles.TurnCost;\n+import com.graphhopper.routing.util.FlagEncoder;\n+import com.graphhopper.storage.IntsRef;\n+import com.graphhopper.storage.TurnCostStorage;\n+import com.graphhopper.util.EdgeIterator;\n+\n+import static com.graphhopper.routing.profiles.TurnCost.EV_SUFFIX;\n+import static com.graphhopper.routing.util.EncodingManager.getKey;\n+import static com.graphhopper.routing.weighting.Weighting.INFINITE_U_TURN_COSTS;\n+\n+public class DefaultTurnCostProvider implements TurnCostProvider {\n+    private final DecimalEncodedValue turnCostEnc;\n+    private final TurnCostStorage turnCostStorage;\n+    private final int uTurnCostsInt;\n+    private final double uTurnCosts;\n+    private final IntsRef tcFlags = TurnCost.createFlags();\n+\n+    public DefaultTurnCostProvider(FlagEncoder encoder, TurnCostStorage turnCostStorage) {\n+        this(encoder, turnCostStorage, Weighting.INFINITE_U_TURN_COSTS);\n+    }\n+\n+    /**\n+     * @param uTurnCosts the costs of a u-turn in seconds, for {@link Weighting#INFINITE_U_TURN_COSTS} the u-turn costs\n+     *                   will be infinite\n+     */\n+    public DefaultTurnCostProvider(FlagEncoder encoder, TurnCostStorage turnCostStorage, int uTurnCosts) {\n+        if (uTurnCosts < 0 && uTurnCosts != INFINITE_U_TURN_COSTS) {\n+            throw new IllegalArgumentException(\"u-turn costs must be positive, or equal to \" + INFINITE_U_TURN_COSTS + \" (=infinite costs)\");\n+        }\n+        this.uTurnCostsInt = uTurnCosts;\n+        this.uTurnCosts = uTurnCosts < 0 ? Double.POSITIVE_INFINITY : uTurnCosts;\n+        if (turnCostStorage == null) {\n+            throw new IllegalArgumentException(\"No storage set to calculate turn weight\");\n+        }\n+        String key = getKey(encoder.toString(), EV_SUFFIX);\n+        // if null the TurnCostProvider can be still useful for edge-based routing\n+        this.turnCostEnc = encoder.hasEncodedValue(key) ? encoder.getDecimalEncodedValue(key) : null;\n+        this.turnCostStorage = turnCostStorage;\n+    }\n+\n+    @Override\n+    public double calcTurnWeight(int edgeFrom, int nodeVia, int edgeTo) {\n+        if (!EdgeIterator.Edge.isValid(edgeFrom) || !EdgeIterator.Edge.isValid(edgeTo)) {\n+            return 0;\n+        }\n+        double tCost = 0;\n+        if (turnCostStorage.isUTurn(edgeFrom, edgeTo)) {\n+            // note that the u-turn costs overwrite any turn costs set in TurnCostStorage\n+            tCost = turnCostStorage.isUTurnAllowed(nodeVia) ? uTurnCosts : Double.POSITIVE_INFINITY;\n+        } else {\n+            if (turnCostEnc != null)\n+                tCost = turnCostStorage.get(turnCostEnc, tcFlags, edgeFrom, nodeVia, edgeTo);\n+        }\n+        return tCost;\n+    }\n+\n+    @Override\n+    public long calcTurnMillis(int inEdge, int viaNode, int outEdge) {\n+        return (long) (1000 * calcTurnWeight(inEdge, viaNode, outEdge));\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return toString();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"\" + uTurnCostsInt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMjI3Nw==", "bodyText": "Maybe we should avoid instantiating this provider and create a singleton from it? Or even remove this class and create a variable \"NO_TURN_COST\" in TurnCostProvider?", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370722277", "createdAt": "2020-01-24T16:25:50Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/weighting/NoTurnCostProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.routing.weighting;\n+\n+public class NoTurnCostProvider implements TurnCostProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyNDg5Ng==", "bodyText": "Do you think this is required? (similar question applies to the method where you kept the CH file names compatible)\nWe never kept backward compatibility for our files as they are recreated due to every OSM data update. I do not see value until we officially support offline routing support (maybe something for 3.0 ;) )", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370724896", "createdAt": "2020-01-24T16:30:53Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/util/Constants.java", "diffHunk": "@@ -66,6 +66,7 @@\n     private static final int JVM_MAJOR_VERSION;\n     private static final int JVM_MINOR_VERSION;\n \n+    // todonow: make sure this version is compatible also for older imports!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ecab3325ea4b7adf3b29dff1766ec036e39814", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/48ecab3325ea4b7adf3b29dff1766ec036e39814", "committedDate": "2020-01-26T08:51:04Z", "message": "Use a static constant for NoTurnCostProviders"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzY2MzQ4", "url": "https://github.com/graphhopper/graphhopper/pull/1863#pullrequestreview-348366348", "createdAt": "2020-01-26T09:00:57Z", "commit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOTowMDo1OFrOFhzBeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOTowMDo1OFrOFhzBeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MzI4OQ==", "bodyText": "Any opinion here? Its no longer easy to do this check, we would need something like weighting.hasTurnCosts() (and maybe check if TurnCostProvider is a NoTurnCostProvider. But that doesn't seem very clean. Also using a TurnCostProvider and then choosing nodeBased is not necessarily an error (but might be useful to receive a warning...).", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370983289", "createdAt": "2020-01-26T09:00:58Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/CHProfile.java", "diffHunk": "@@ -20,14 +20,18 @@\n public class CHProfile {\n     private final Weighting weighting;\n     private final boolean edgeBased;\n-    private final int uTurnCosts;\n \n     public static CHProfile nodeBased(Weighting weighting) {\n-        return new CHProfile(weighting, TraversalMode.NODE_BASED, INFINITE_U_TURN_COSTS);\n+        // todonow: should we do such a check (check if the weighting has turn costs ?)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzY2Mzk0", "url": "https://github.com/graphhopper/graphhopper/pull/1863#pullrequestreview-348366394", "createdAt": "2020-01-26T09:01:45Z", "commit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOTowMTo0NVrOFhzBtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOTowMTo0NVrOFhzBtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4MzM1MA==", "bodyText": "Similar question here. But maybe we even want edge-based without turn costs for some(?) reason. #1702", "url": "https://github.com/graphhopper/graphhopper/pull/1863#discussion_r370983350", "createdAt": "2020-01-26T09:01:45Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/CHProfile.java", "diffHunk": "@@ -20,14 +20,18 @@\n public class CHProfile {\n     private final Weighting weighting;\n     private final boolean edgeBased;\n-    private final int uTurnCosts;\n \n     public static CHProfile nodeBased(Weighting weighting) {\n-        return new CHProfile(weighting, TraversalMode.NODE_BASED, INFINITE_U_TURN_COSTS);\n+        // todonow: should we do such a check (check if the weighting has turn costs ?)\n+//        if (!edgeBased && uTurnCosts != INFINITE_U_TURN_COSTS) {\n+//            throw new IllegalArgumentException(\"Finite u-turn costs are only allowed for edge-based CH\");\n+//        }\n+        return new CHProfile(weighting, TraversalMode.NODE_BASED);\n     }\n \n-    public static CHProfile edgeBased(Weighting weighting, int uTurnCosts) {\n-        return new CHProfile(weighting, TraversalMode.EDGE_BASED, uTurnCosts);\n+    public static CHProfile edgeBased(Weighting weighting) {\n+        // todonow: should we check/assure that the weighting must have some valid turn costs ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc0bcf031e2e7eb53ad796e6386d843c04446e1"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ae3b49badbe430dd09487046fe0c7a1a4f0e20", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/b6ae3b49badbe430dd09487046fe0c7a1a4f0e20", "committedDate": "2020-01-26T13:19:38Z", "message": "Merge branch 'master' into remove_turn_weighting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a0372285e8f02c92352df21f618ce07d0a19272", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8a0372285e8f02c92352df21f618ce07d0a19272", "committedDate": "2020-01-26T21:04:51Z", "message": "Remove todo about checking edge/node based"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63fbe32195304e74957697cca1a97d76be6509ac", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/63fbe32195304e74957697cca1a97d76be6509ac", "committedDate": "2020-01-26T21:04:52Z", "message": "Make CHProfile#toString backward compatible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "634bed7b02b0985af20951a554e5bc209f7f4433", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/634bed7b02b0985af20951a554e5bc209f7f4433", "committedDate": "2020-01-26T21:04:52Z", "message": "Remove todo about version upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "641c5eac96b97f85cfe8df8ddc4a04f6b3d354e9", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/641c5eac96b97f85cfe8df8ddc4a04f6b3d354e9", "committedDate": "2020-01-26T21:04:53Z", "message": "Move calcWeight to GHUtility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTAzMTU1", "url": "https://github.com/graphhopper/graphhopper/pull/1863#pullrequestreview-348903155", "createdAt": "2020-01-27T19:05:38Z", "commit": {"oid": "641c5eac96b97f85cfe8df8ddc4a04f6b3d354e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc0a9c7927c1d389b788646fe38fba75fd03f68c", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/bc0a9c7927c1d389b788646fe38fba75fd03f68c", "committedDate": "2020-01-28T09:51:50Z", "message": "Merge branch 'master' into remove_turn_weighting\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/storage/CHProfile.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4698, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}