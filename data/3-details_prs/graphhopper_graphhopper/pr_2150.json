{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDIwNTg4", "number": 2150, "title": "Add Graph#getEdgeIteratorStateForKey(edgeKey) and edgeState.getEdgeKey()", "bodyText": "This PR adds two new methods:\n\n\nEdgeIteratorState#getEdgeKey() can be used to get an edge key from an edge state. The edge key is a combination of the edge ID and the direction of the edge, so its a unique identifier of a (directed) edge. It is equal to 2*edgeId if the edge state matches the direction in which the edge is stored in BaseGraph and equal to 2*edgeId+1 otherwise.\n\n\n`Graph#getEdgeIteratorStateForKey(edgeKey) can be used to retrieve an edge state given an edge key.\n\n\nCompared to #2146 this PR does not try to get rid of GHUtility#createEdgeKey(int, int, int, boolean) yet, but this should be at least easier to do after this PR.", "createdAt": "2020-10-05T17:57:21Z", "url": "https://github.com/graphhopper/graphhopper/pull/2150", "merged": true, "mergeCommit": {"oid": "1f5419977ed205d48d5507b65fae231592e52c5b"}, "closed": true, "closedAt": "2020-10-07T09:02:41Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc31k7KgH2gAyNDk4MDIwNTg4OjkxY2Q2NzRhYmE1MmU4NjUxYzc4MWMyNTY4ZDAxZmIwMWI4NjkwYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQJKrdAH2gAyNDk4MDIwNTg4OmE0NzQ4YTlhZjMxNTA5ZGNkYzgwZDBkY2ZiZWVlNDM4ZGE4NDcwOWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91cd674aba52e8651c781c2568d01fb01b8690a8", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/91cd674aba52e8651c781c2568d01fb01b8690a8", "committedDate": "2020-07-23T20:37:13Z", "message": "Add methods to obtain edge states by edge key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89aecef3648cb245d34f144cd0c0f6c8a6fda2b0", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/89aecef3648cb245d34f144cd0c0f6c8a6fda2b0", "committedDate": "2020-07-24T14:49:34Z", "message": "Always return storage direction for loops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671c2e42dea64760046a3bc80acd8eea7140c54c", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/671c2e42dea64760046a3bc80acd8eea7140c54c", "committedDate": "2020-07-24T15:15:19Z", "message": "Fix edge keys in case edges are stored the other way around"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7706eabc3e89346c5b24cb546f993992dd0eb48", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e7706eabc3e89346c5b24cb546f993992dd0eb48", "committedDate": "2020-10-05T11:46:22Z", "message": "Merge branch 'master' into edge_by_key\n\n# Conflicts:\n#\tcore/src/test/java/com/graphhopper/routing/querygraph/QueryGraphTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e63c8cf9e13b1a916592f27bd6df55356ea40270", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e63c8cf9e13b1a916592f27bd6df55356ea40270", "committedDate": "2020-10-05T15:34:26Z", "message": "Fix merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "committedDate": "2020-10-05T17:21:47Z", "message": "Clean-up and polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59eeabb70af694a2a55d2a8517aa12b8f811ffe1", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/59eeabb70af694a2a55d2a8517aa12b8f811ffe1", "committedDate": "2020-10-05T17:58:32Z", "message": "Move comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjkyNDc1", "url": "https://github.com/graphhopper/graphhopper/pull/2150#pullrequestreview-502292475", "createdAt": "2020-10-05T17:59:10Z", "commit": {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo1OToxMFrOHcn3Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowMzoxMlrOHcn_dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NTI1MA==", "bodyText": "Should we call it getEdgeIteratorState(int) instead?", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499775250", "createdAt": "2020-10-05T17:59:10Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/Graph.java", "diffHunk": "@@ -82,6 +82,13 @@\n      */\n     EdgeIteratorState getEdgeIteratorState(int edgeId, int adjNode);\n \n+    /**\n+     * Returns the edge state for the given edge key\n+     *\n+     * @see EdgeIteratorState#getEdgeKey()\n+     */\n+    EdgeIteratorState getEdgeIteratorStateForKey(int edgeKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Njg3Mg==", "bodyText": "In #2146 we call this int getEdgeKey(boolean reverse). I would argue that the edge state has only one edge key and reversing the key is out of its scope, so I left out the reverse parameter. The reverse key can be obtained using GHUtility.getReverseKey(edgeState.getEdgeKey()), which of course is a bit less comfortable, especially in cases like this:\nint key = edgeState.getEdgeKey();\nif (reverse)\n    key = GHUtility.getReverseKey(key);\ncompared to:\nint key = edgeState.getEdgeKey(reverse);\n\nSo not sure...", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499776872", "createdAt": "2020-10-05T18:02:12Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/util/EdgeIteratorState.java", "diffHunk": "@@ -73,6 +74,16 @@ public void setBool(boolean reverse, IntsRef ref, boolean value) {\n      */\n     int getEdge();\n \n+    /**\n+     * Returns the edge key of the current edge. The edge id can be derived from the edge key by calling\n+     * {@link GHUtility#getEdgeFromEdgeKey(int)}, but the edge key also contains information about the\n+     * direction of the edge. The edge key is even when the edge is oriented in storage direction and odd\n+     * otherwise. You can use the edge key to retrieve an edge state in the associated direction using\n+     * {@link Graph#getEdgeIteratorStateForKey(int)}. Loop edges are always returned in 'forward' direction even when\n+     * you use an odd edge key.\n+     */\n+    int getEdgeKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NzM5OA==", "bodyText": "@michaz, can you check WrapperGraph here? I was not sure what is and what is not needed here.", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499777398", "createdAt": "2020-10-05T18:03:12Z", "author": {"login": "easbar"}, "path": "reader-gtfs/src/main/java/com/graphhopper/gtfs/WrapperGraph.java", "diffHunk": "@@ -112,6 +112,12 @@ public EdgeIteratorState getEdgeIteratorState(int edgeId, int adjNode) {\n         }\n     }\n \n+    @Override\n+    public EdgeIteratorState getEdgeIteratorStateForKey(int edgeKey) {\n+        // todonow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd007950b8ff242a90c9d1836a2a09c001f7b78", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/fcd007950b8ff242a90c9d1836a2a09c001f7b78", "committedDate": "2020-10-05T18:55:53Z", "message": "Merge branch 'master' into edge_by_key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f46aeedcf1b931a13bdef82bf2e948104cfb2fca", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f46aeedcf1b931a13bdef82bf2e948104cfb2fca", "committedDate": "2020-10-05T19:01:20Z", "message": "Use getEdgeKey() for virtual edges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4748a9af31509dcdc80d0dcfbeee438da84709a", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a4748a9af31509dcdc80d0dcfbeee438da84709a", "committedDate": "2020-10-07T09:00:50Z", "message": "remove wrapper graph todos"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4487, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}