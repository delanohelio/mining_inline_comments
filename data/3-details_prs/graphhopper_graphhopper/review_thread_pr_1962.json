{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTMxMDMx", "number": 1962, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDo1NjozMFrODpdWcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowMDozNFrODpdbjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzk5MDkxOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDo1NjozMFrOF4pWkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowOToxN1rOF4pwAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MjA5Ng==", "bodyText": "I think we need putObject(Routing.EDGE_BASED, Helper.toObject(edgeBasedParam)) here (previously this code relied on the string being converted to boolean... This is a bit ugly code, and will be gone in #1958 :)", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394942096", "createdAt": "2020-03-19T10:56:30Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1549,7 +1549,7 @@ private GHResponse assertMoscowEdgeBased(GraphHopper hopper, String edgeBasedPar\n     private GHResponse runMoscow(GraphHopper hopper, String edgeBasedParam, boolean ch) {\n         GHRequest req = new GHRequest(55.813357, 37.5958585, 55.811042, 37.594689);\n         if (edgeBasedParam.equals(\"true\") || edgeBasedParam.equals(\"false\")) {\n-            req.getHints().put(Routing.EDGE_BASED, edgeBasedParam);\n+            req.getHints().putObject(Routing.EDGE_BASED, edgeBasedParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0ODYxMQ==", "bodyText": "Ah, ok.", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394948611", "createdAt": "2020-03-19T11:09:17Z", "author": {"login": "karussell"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1549,7 +1549,7 @@ private GHResponse assertMoscowEdgeBased(GraphHopper hopper, String edgeBasedPar\n     private GHResponse runMoscow(GraphHopper hopper, String edgeBasedParam, boolean ch) {\n         GHRequest req = new GHRequest(55.813357, 37.5958585, 55.811042, 37.594689);\n         if (edgeBasedParam.equals(\"true\") || edgeBasedParam.equals(\"false\")) {\n-            req.getHints().put(Routing.EDGE_BASED, edgeBasedParam);\n+            req.getHints().putObject(Routing.EDGE_BASED, edgeBasedParam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MjA5Ng=="}, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzk5NTA5OnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDo1Nzo0OFrOF4pZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowODo0OVrOF4pvIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0Mjc4Mg==", "bodyText": "This is dangerous, I think if we pass \"1\" here, e.g. getInt(\"prepare.min_network_size\", 102) will return 102.", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394942782", "createdAt": "2020-03-19T10:57:48Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "diffHunk": "@@ -668,9 +668,9 @@ public void testVia() {\n         final String weighting = \"fastest\";\n         instance = new GraphHopperOSM().setStoreOnFlush(true).\n                 init(new GraphHopperConfig().\n-                        put(\"datareader.file\", testOsm3).\n-                        put(\"prepare.min_network_size\", \"1\").\n-                        put(\"graph.flag_encoders\", vehicle)\n+                        putObject(\"datareader.file\", testOsm3).\n+                        putObject(\"prepare.min_network_size\", \"1\").", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0ODM4NA==", "bodyText": "Oops, thanks!", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394948384", "createdAt": "2020-03-19T11:08:49Z", "author": {"login": "karussell"}, "path": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "diffHunk": "@@ -668,9 +668,9 @@ public void testVia() {\n         final String weighting = \"fastest\";\n         instance = new GraphHopperOSM().setStoreOnFlush(true).\n                 init(new GraphHopperConfig().\n-                        put(\"datareader.file\", testOsm3).\n-                        put(\"prepare.min_network_size\", \"1\").\n-                        put(\"graph.flag_encoders\", vehicle)\n+                        putObject(\"datareader.file\", testOsm3).\n+                        putObject(\"prepare.min_network_size\", \"1\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0Mjc4Mg=="}, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODAwMzk5OnYy", "diffSide": "RIGHT", "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowMDozNFrOF4pe9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMTowMDozNFrOF4pe9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0NDI0Ng==", "bodyText": "Here we need Helper.toObject(turnCosts.get(0)), as mentioned here (in case you missed this): #1956 (comment)", "url": "https://github.com/graphhopper/graphhopper/pull/1962#discussion_r394944246", "createdAt": "2020-03-19T11:00:34Z", "author": {"login": "easbar"}, "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "diffHunk": "@@ -233,7 +233,7 @@ private void translateTurnCostsParamToEdgeBased(GHRequest request, MultivaluedMa\n             if (turnCosts.size() != 1) {\n                 throw new IllegalArgumentException(\"You may only specify the turn_costs parameter once\");\n             }\n-            request.getHints().put(EDGE_BASED, turnCosts.get(0));\n+            request.putHint(EDGE_BASED, turnCosts.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8ef8fb3e905e93f5c13592d64b68d34f4c12d6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4767, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}