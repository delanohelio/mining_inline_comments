{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzI0Mzcw", "number": 1949, "title": "Extract profile selection", "bodyText": "This PR aims to extract all the code that is related to selecting the routing profile using the different request parameters like vehicle and weighting. The idea is that here we put all this code into a single place (ProfileResolver) and as a follow-up we can then put this ProfileResolver in front of GraphHopper#calcPaths etc. (c.f. #1859).\nFixes #1800.", "createdAt": "2020-03-08T22:51:14Z", "url": "https://github.com/graphhopper/graphhopper/pull/1949", "merged": true, "mergeCommit": {"oid": "1fff78aad4c72f521c556a1c2cf91956dfdacadb"}, "closed": true, "closedAt": "2020-03-12T07:26:24Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKpi2hAH2gAyMzg1MzI0MzcwOmJkYzczNDYwNzEwZGIxYjJjOGM3NDVjOTI4NWE3YzkwNjZmMWRmMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM2e9oAH2gAyMzg1MzI0MzcwOmY4OTM3MDNlNGQ2ZWY4ZjhiMGNiNDBhMDJjNTkwMDUwZmJmOTgxNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bdc73460710db1b2c8c745c9285a7c9066f1df03", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/bdc73460710db1b2c8c745c9285a7c9066f1df03", "committedDate": "2020-03-05T11:09:30Z", "message": "Separate LM/CH profile selection from routing algo factory selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4fccf6b00e6d168c87a24ed9c9da81eebde5e92", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d4fccf6b00e6d168c87a24ed9c9da81eebde5e92", "committedDate": "2020-03-05T11:09:31Z", "message": "Obtain routing algo factory by profile name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185bacaf6db52c120c05a2e025ccfbf92f18846d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/185bacaf6db52c120c05a2e025ccfbf92f18846d", "committedDate": "2020-03-05T11:09:31Z", "message": "Limit scope of uTurnCostsInt and TurnCostProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb34b17d055e762bb38059bb02253ab656a5bacd", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/cb34b17d055e762bb38059bb02253ab656a5bacd", "committedDate": "2020-03-05T11:09:31Z", "message": "Add some tests and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30eae8de9f797e56e48fbe84f98d5624ec330c9f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/30eae8de9f797e56e48fbe84f98d5624ec330c9f", "committedDate": "2020-03-05T11:09:32Z", "message": "Encapsulate profile resolving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c13ca2e6bd55159600d9bf4a7796df6f48141a16", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c13ca2e6bd55159600d9bf4a7796df6f48141a16", "committedDate": "2020-03-05T11:09:32Z", "message": "Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e4c930ed463096b8b2021bcf50fce3a074438d2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5e4c930ed463096b8b2021bcf50fce3a074438d2", "committedDate": "2020-03-06T13:49:30Z", "message": "Put everything related to profile resolving into one class so it can be modified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f368d32fe0607e962c9df100beee07d55cae8b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a0f368d32fe0607e962c9df100beee07d55cae8b", "committedDate": "2020-03-06T14:54:19Z", "message": "Remove Weighting#matches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c024c8ecafb0571c3fbb1faf41127d6605a2a72", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/6c024c8ecafb0571c3fbb1faf41127d6605a2a72", "committedDate": "2020-03-06T15:38:23Z", "message": "Remove odd LM profile selection rule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c7af96ba37ecd4d5b02bd916d27078065585b2", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a6c7af96ba37ecd4d5b02bd916d27078065585b2", "committedDate": "2020-03-06T15:56:10Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b05a913a23eaaf1ee3fa0dc3f28194863acc105d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/b05a913a23eaaf1ee3fa0dc3f28194863acc105d", "committedDate": "2020-03-06T16:59:17Z", "message": "Update docs and change HintsMap to PMap in createWeighting()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f48eb086e9c21aca0e34553e7ca56c4889584d9", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/0f48eb086e9c21aca0e34553e7ca56c4889584d9", "committedDate": "2020-03-06T18:27:59Z", "message": "Move turn cost provider creation into createWeighting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20f22cd93071d2b7cac13b84a8402d97ce65ef24", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/20f22cd93071d2b7cac13b84a8402d97ce65ef24", "committedDate": "2020-03-08T14:27:26Z", "message": "Make profile resolver hook public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2304bb1142b04bb04af38461d1bceae4fc08143", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f2304bb1142b04bb04af38461d1bceae4fc08143", "committedDate": "2020-03-08T14:28:12Z", "message": "Merge branch 'master' into profile_resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c59c686f988f8de49c2c5228c20b766a08635887", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/c59c686f988f8de49c2c5228c20b766a08635887", "committedDate": "2020-03-08T20:49:26Z", "message": "Merge branch 'master' into profile_resolver\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/routing/lm/LMPreparationHandler.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8a9f090b2fb8e05691043fa428077a046251557e", "committedDate": "2020-03-08T22:34:23Z", "message": "Minor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNzYzMDYw", "url": "https://github.com/graphhopper/graphhopper/pull/1949#pullrequestreview-371763060", "createdAt": "2020-03-10T08:45:53Z", "commit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODo0NTo1M1rOF0Fqkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODo1NTozMFrOF0F97Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE2MzA5MA==", "bodyText": "Any opinion here? createWeighting normally uses a DefaultTurnCostProvider if profile.isTurnCosts()==true. But for LM we always want to enforce not using turn costs for the preparation, but to me it seemed like this does not justify adding an extra parameter, so I am using the pmap workaround here...", "url": "https://github.com/graphhopper/graphhopper/pull/1949#discussion_r390163090", "createdAt": "2020-03-10T08:45:53Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -913,9 +922,11 @@ private void initLMPreparationHandler() {\n \n         for (LMProfileConfig lmConfig : lmPreparationHandler.getLMProfileConfigs()) {\n             ProfileConfig profile = profilesByName.get(lmConfig.getProfile());\n-            FlagEncoder encoder = encodingManager.getEncoder(profile.getVehicle());\n-            // note that we do not consider turn costs during LM preparation?\n-            Weighting weighting = createWeighting(new HintsMap(profile.getWeighting()), encoder, NO_TURN_COST_PROVIDER);\n+            // note that we do not consider turn costs during LM preparation. this is important if we want\n+            // to allow e.g. changing the u_turn_costs per request (we have to use the minimum weight settings (\n+            // = no turn costs) for the preparation)\n+            // todonow: is it too ugly this way?\n+            Weighting weighting = createWeighting(profile, new PMap().put(\"__disable_turn_costs\", true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE2NDY5Mg==", "bodyText": "Is it fine to overwrite ch/lm.disable here or should we throw an error?", "url": "https://github.com/graphhopper/graphhopper/pull/1949#discussion_r390164692", "createdAt": "2020-03-10T08:49:06Z", "author": {"login": "easbar"}, "path": "web-bundle/src/main/java/com/graphhopper/resources/SPTResource.java", "diffHunk": "@@ -62,11 +60,15 @@ public Response doGet(\n             throw new IllegalArgumentException(\"point parameter cannot be null\");\n \n         StopWatch sw = new StopWatch().start();\n-\n-        if (!encodingManager.hasEncoder(vehicle))\n-            throw new IllegalArgumentException(\"vehicle not supported:\" + vehicle);\n-\n-        FlagEncoder encoder = encodingManager.getEncoder(vehicle);\n+        HintsMap hintsMap = new HintsMap();\n+        RouteResource.initHints(hintsMap, uriInfo.getQueryParameters());\n+        hintsMap.put(Parameters.CH.DISABLE, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE2ODA0NQ==", "bodyText": "I do not like how we rely on the turn cost provider name to contain the u-turn costs here, but so far I do not have a better idea to do this. Also this is only needed to cover a (probably exotic) case: Multiple edge-based profiles with different u-turn costs. Once we have the profile request parameter we 'only' need to support this u-turn costs comparison here for legacy reasons, so this makes me even more want to get rid of it.", "url": "https://github.com/graphhopper/graphhopper/pull/1949#discussion_r390168045", "createdAt": "2020-03-10T08:55:30Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/routing/ProfileResolver.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.routing;\n+\n+import com.graphhopper.config.ProfileConfig;\n+import com.graphhopper.routing.lm.LMProfile;\n+import com.graphhopper.routing.util.EncodingManager;\n+import com.graphhopper.routing.util.FlagEncoder;\n+import com.graphhopper.routing.util.HintsMap;\n+import com.graphhopper.storage.CHProfile;\n+import com.graphhopper.util.Parameters;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static com.graphhopper.routing.weighting.Weighting.INFINITE_U_TURN_COSTS;\n+\n+public class ProfileResolver {\n+\n+    public ProfileConfig resolveProfile(EncodingManager encodingManager, List<CHProfile> chProfiles, List<LMProfile> lmProfiles, HintsMap hints) {\n+        // default handling\n+        String vehicle = hints.getVehicle();\n+        if (vehicle.isEmpty()) {\n+            vehicle = getDefaultVehicle(encodingManager).toString();\n+        }\n+        String weighting = hints.getWeighting();\n+        if (weighting.isEmpty()) {\n+            weighting = \"fastest\";\n+        }\n+        if (!encodingManager.hasEncoder(vehicle))\n+            throw new IllegalArgumentException(\"Vehicle not supported: \" + vehicle + \". Supported are: \" + encodingManager.toString());\n+\n+        FlagEncoder encoder = encodingManager.getEncoder(vehicle);\n+        // we use turn costs if the encoder supports it *unless* the edge_based parameter is set explicitly\n+        boolean turnCosts = encoder.supportsTurnCosts();\n+        if (hints.has(Parameters.Routing.EDGE_BASED))\n+            turnCosts = hints.getBool(Parameters.Routing.EDGE_BASED, false);\n+        if (turnCosts && !encoder.supportsTurnCosts())\n+            throw new IllegalArgumentException(\"You need to set up a turn cost storage to make use of edge_based=true, e.g. use car|turn_costs=true\");\n+\n+        String profileName = resolveProfileName(chProfiles, lmProfiles, hints);\n+\n+        return new ProfileConfig(profileName)\n+                .setVehicle(vehicle)\n+                .setWeighting(weighting)\n+                .setTurnCosts(turnCosts);\n+    }\n+\n+    private String resolveProfileName(List<CHProfile> chProfiles, List<LMProfile> lmProfiles, HintsMap hints) {\n+        boolean disableCH = hints.getBool(Parameters.CH.DISABLE, false);\n+        boolean disableLM = hints.getBool(Parameters.Landmark.DISABLE, false);\n+\n+        String profileName;\n+        if (!chProfiles.isEmpty() && !disableCH) {\n+            profileName = selectCHProfile(chProfiles, hints).getName();\n+        } else if (!lmProfiles.isEmpty() && !disableLM) {\n+            profileName = selectLMProfile(lmProfiles, hints).getName();\n+        } else {\n+            // todonow: here we will instead select one of the existing profiles\n+            profileName = \"unprepared_profile\";\n+        }\n+        return profileName;\n+    }\n+\n+    /**\n+     * @param chProfiles the CH profiles to choose from\n+     * @param hintsMap   a map used to describe the CH profile that shall be selected\n+     * @throws IllegalArgumentException if no CH profile could be selected for the given parameters\n+     */\n+    public CHProfile selectCHProfile(List<CHProfile> chProfiles, HintsMap hintsMap) {\n+        List<CHProfile> matchingProfiles = new ArrayList<>();\n+        for (CHProfile p : chProfiles) {\n+            if (!chProfileMatchesHints(p, hintsMap))\n+                continue;\n+            matchingProfiles.add(p);\n+        }\n+\n+        Boolean edgeBased = getEdgeBased(hintsMap);\n+        Integer uTurnCosts = getUTurnCosts(hintsMap);\n+        if (matchingProfiles.isEmpty()) {\n+            throw new IllegalArgumentException(\"Cannot find matching CH profile for your request. Please check your parameters.\" +\n+                    \"\\nYou can try disabling CH using \" + Parameters.CH.DISABLE + \"=true\" +\n+                    \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\navailable: \" + chProfiles);\n+        } else if (matchingProfiles.size() == 1) {\n+            return matchingProfiles.get(0);\n+        } else {\n+            // special case: prefer edge-based over node-based if these are the only two options\n+            CHProfile match1 = matchingProfiles.get(0);\n+            CHProfile match2 = matchingProfiles.get(1);\n+            if (edgeBased == null && matchingProfiles.size() == 2 &&\n+                    match1.getWeighting().getName().equals(match2.getWeighting().getName()) &&\n+                    match1.getWeighting().getFlagEncoder().toString().equals(match2.getWeighting().getFlagEncoder().toString()) &&\n+                    match1.isEdgeBased() != match2.isEdgeBased()) {\n+                return match1.isEdgeBased() ? match1 : match2;\n+            }\n+            throw new IllegalArgumentException(\"There are multiple CH profiles matching your request. Use the `weighting`,`vehicle`,`edge_based` and/or `u_turn_costs` parameters to be more specific.\" +\n+                    \"\\nYou can also try disabling CH altogether using \" + Parameters.CH.DISABLE + \"=true\" +\n+                    \"\\nrequested:  \" + getCHRequestAsString(hintsMap, edgeBased, uTurnCosts) + \"\\nmatched:   \" + matchingProfiles + \"\\navailable: \" + chProfiles);\n+        }\n+    }\n+\n+    public LMProfile selectLMProfile(List<LMProfile> lmProfiles, HintsMap hintsMap) {\n+        List<LMProfile> matchingProfiles = new ArrayList<>();\n+        for (LMProfile p : lmProfiles) {\n+            if (!lmProfileMatchesHints(p, hintsMap))\n+                continue;\n+            matchingProfiles.add(p);\n+        }\n+        // Note:\n+        // There are situations where we can use the requested encoder/weighting with an existing LM preparation, even\n+        // though the preparation was done with a different weighting. For example this works when the new weighting\n+        // only yields higher (but never lower) weights than the one that was used for the preparation. However, its not\n+        // trivial to check whether or not this is the case so we do not allow this for now.\n+        if (matchingProfiles.isEmpty()) {\n+            throw new IllegalArgumentException(\"Cannot find matching LM profile for your request. Please check your parameters.\" +\n+                    \"\\nYou can try disabling LM by setting \" + Parameters.Landmark.DISABLE + \"=true\" +\n+                    \"\\nrequested: \" + getLMRequestAsString(hintsMap) + \"\\navailable: \" + lmProfilesAsStrings(lmProfiles));\n+        } else if (matchingProfiles.size() == 1) {\n+            return matchingProfiles.get(0);\n+        } else {\n+            throw new IllegalArgumentException(\"There are multiple LM profiles matching your request. Use the `weighting` and `vehicle` parameters to be more specific.\" +\n+                    \"\\nYou can also try disabling LM altogether using \" + Parameters.CH.DISABLE + \"=true\" +\n+                    \"\\nrequested:  \" + getLMRequestAsString(hintsMap) + \"\\nmatched:   \" + lmProfilesAsStrings(matchingProfiles) + \"\\navailable: \" + lmProfilesAsStrings(lmProfiles));\n+        }\n+    }\n+\n+    protected boolean chProfileMatchesHints(CHProfile p, HintsMap hintsMap) {\n+        Boolean edgeBased = getEdgeBased(hintsMap);\n+        Integer uTurnCosts = getUTurnCosts(hintsMap);\n+        return (edgeBased == null || p.isEdgeBased() == edgeBased) &&\n+                (uTurnCosts == null || p.getWeighting().getTurnCostProvider().getName().equals(uTurnCosts.toString())) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "originalPosition": 147}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec4bb4080b7237d2127fb4faaf4637ebcd85a01", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/4ec4bb4080b7237d2127fb4faaf4637ebcd85a01", "committedDate": "2020-03-10T09:20:31Z", "message": "Merge branch 'master' into profile_resolver"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODQ1OTk0", "url": "https://github.com/graphhopper/graphhopper/pull/1949#pullrequestreview-371845994", "createdAt": "2020-03-10T10:47:34Z", "commit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDo0NzozNFrOF0JwBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDo0NzozNFrOF0JwBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzMDAyMw==", "bodyText": "In #1776 I stumbled over this check as I wanted to inject the graph into the Weighting but at this time graph is null.\nBut with #1950 I found a good solution so that I kept this method here :)", "url": "https://github.com/graphhopper/graphhopper/pull/1949#discussion_r390230023", "createdAt": "2020-03-10T10:47:34Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -833,8 +840,9 @@ private void checkProfilesConsistency() {\n                         \"\\nYou need to add `|turn_costs=true` to the vehicle in `graph.flag_encoders`\");\n             }\n             try {\n-                createWeighting(new HintsMap(profile.getWeighting()), encoder, NO_TURN_COST_PROVIDER);\n+                createWeighting(profile, new PMap());\n             } catch (IllegalArgumentException e) {\n+                // todonow: update, what are we really checking here?\n                 throw new IllegalArgumentException(\"The profile '\" + profile.getName() + \"' was configured with an unknown weighting '\" + profile.getWeighting() + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a9f090b2fb8e05691043fa428077a046251557e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cd11bf9e3f96f5890e557a6a86fac45bbb3a6f1", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/0cd11bf9e3f96f5890e557a6a86fac45bbb3a6f1", "committedDate": "2020-03-10T11:56:58Z", "message": "Remove extra flag to disable turn costs when creating weighting for LM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b02a178e644b0f9e959af5739af2064ec094340", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2b02a178e644b0f9e959af5739af2064ec094340", "committedDate": "2020-03-10T13:22:56Z", "message": "No longer allow selecting between multiple edge-based CH profiles using u_turn_costs parameter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94c2e13c6d9ea571daa30aabdbe7f21fbadb1f3", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/b94c2e13c6d9ea571daa30aabdbe7f21fbadb1f3", "committedDate": "2020-03-10T21:46:10Z", "message": "Merge branch 'master' into profile_resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e8cee9590d8dcc4af93454a15adc457dc4c2dd", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a6e8cee9590d8dcc4af93454a15adc457dc4c2dd", "committedDate": "2020-03-11T06:46:09Z", "message": "Improve error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1681342844e9619ae6d27b4b35f2fd4dde7894d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a1681342844e9619ae6d27b4b35f2fd4dde7894d", "committedDate": "2020-03-11T07:06:56Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f893703e4d6ef8f8b0cb40a02c590050fbf98159", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f893703e4d6ef8f8b0cb40a02c590050fbf98159", "committedDate": "2020-03-12T07:21:52Z", "message": "Merge branch 'master' into profile_resolver"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4602, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}