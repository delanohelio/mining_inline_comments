{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTc3MTMy", "number": 1964, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo0OTozNVrODpg9yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo0OTozNVrODpg9yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODU4MzEzOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo0OTozNVrOF4vPEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1MDoyOFrOF4vR4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAzODQ4MA==", "bodyText": "This is nice. I really need to invest some time into JUnit again :)", "url": "https://github.com/graphhopper/graphhopper/pull/1964#discussion_r395038480", "createdAt": "2020-03-19T13:49:35Z", "author": {"login": "karussell"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1408,6 +1409,83 @@ public void testDisablingLM() {\n         assertTrue(res.getHints().getInt(\"visited_nodes.sum\", 0) > 200);\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(booleans = {true, false})\n+    public void testCompareAlgos(boolean turnCosts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b1513ecfe5d49ab65c13c364e7f82202ab8db3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAzOTIwMw==", "bodyText": "Same here this is about everything I know so far :)", "url": "https://github.com/graphhopper/graphhopper/pull/1964#discussion_r395039203", "createdAt": "2020-03-19T13:50:28Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1408,6 +1409,83 @@ public void testDisablingLM() {\n         assertTrue(res.getHints().getInt(\"visited_nodes.sum\", 0) > 200);\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(booleans = {true, false})\n+    public void testCompareAlgos(boolean turnCosts) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAzODQ4MA=="}, "originalCommit": {"oid": "34b1513ecfe5d49ab65c13c364e7f82202ab8db3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4770, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}