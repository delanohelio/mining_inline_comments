{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MDAyNzQw", "number": 1922, "title": "Use new profiles section to configure LM&CH preparations", "bodyText": "This PR replaces the following configuration options:\nprepare.ch.weightings: # e.g. fastest,...\nprepare.lm.weightings: # e.g. shortest,...\nprepare.ch.edge_based: # e.g. edge_and_node\nwith three new sections:\nprofiles: # used to define routing profiles\nprofiles_ch: # used to define which of the routing profiles shall be prepared for CH\nprofiles_lm: # used to define which of the routing profiles shall be prepared for LM\nMore details can be found in config-example.yml documentation in this PR, for completeness I am copying this here:\n##### Routing Profiles ####\n\n  # Routing can be done for the following list of profiles. The fields of each profile are as follows:\n  # - name (required): a unique string identifier for the profile\n  # - vehicle (required): refers to the `graph.flag_encoder` used for this profile\n  # - weighting (required): the weighting used for this profile, e.g. fastest,shortest or short_fastest\n  # - turn_costs (true/false, default: false): whether or not turn restrictions should be applied for this profile.\n  #   this will only work if the `graph.flag_encoder` for the given `vehicle` is configured with `|turn_costs=true`.\n  #\n  # Depending on the above fields there are other properties that can be used, e.g.\n  # - distance_factor: 0.1 (can be used to fine tune the time/distance trade-off of short_fastest weighting)\n  # - u_turn_costs: 60 (time-penalty for doing a u-turn in seconds (only possible when `turn_costs: true`)).\n  #   Note that since the u-turn costs are given in seconds the weighting you use should also calculate the weight\n  #   in seconds, so for example it does not work with shortest weighting.\n  #\n  # To prevent long running routing queries you should usually enable either speed or hybrid mode for all the given\n  # profiles (see below). Otherwise you should at least limit the number of `routing.max_visited_nodes`.\n  profiles:\n    - name: car\n      vehicle: car\n      weighting: fastest\n\n  #  - name: car_with_turn_costs\n  #    vehicle: car\n  #    weighting: short_fastest\n  #    distance_factor: 0.1\n  #    turn_costs: true\n  #    u_turn_costs: 60\n\n  # Speed mode:\n  # Its possible to speed up routing by doing a special graph preparation (Contraction Hierarchies, CH). This requires\n  # more RAM/disk space for holding the prepared graph but also means less memory usage per request. Using the following\n  # list you can define for which of the above routing profiles such preparation shall be performed. Note that to support\n  # profiles with `turn_costs: true` a more elaborate preparation is required (longer preparation time and more memory\n  # usage) and the routing will also be slower than with `turn_costs: false`.\n  profiles_ch:\n    - profile: car\n  #   - profile: car_with_turn_costs\n\n  # Hybrid mode:\n  # Similar to speed mode, the hybrid mode (Landmarks, LM) also speeds up routing by doing calculating auxiliary data\n  # in advance. Its not as fast as speed mode, but more flexible.\n  profiles_lm: []\nWith the new configuration its now possible to e.g. use CH for only one of multiple flag encoders (previously there was a preparation for every vehicle for every given weighting in prepare.ch/lm.weightings), i.e. this PR fixes #493.\nImportantly the profiles have a (required) name field, which soon will be used to pick the profile during a routing request (see #1859). However, this PR still uses the old method (the profile is identified by comparing the weighting/vehicle/turn_costs parameters)!\nThis PR also does not yet allow the new custom weighting from #1776, but the profiles section in the configuration together with the (to be added) profile request parameter should make it easy to integrate this.\nImportant Note: This PR does not only remove the above mentioned configuration options, but there will be an error in case they are still being used, so it forces an upgrade of the config files.", "createdAt": "2020-02-19T07:14:29Z", "url": "https://github.com/graphhopper/graphhopper/pull/1922", "merged": true, "mergeCommit": {"oid": "e656101c0208f9b45d8d65486fff97c8c8b28e38"}, "closed": true, "closedAt": "2020-02-25T18:48:55Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcE2FStAH2gAyMzc3MDAyNzQwOmUxYmVkOGU3NGY0NjExYTIwZDVjYzBiMzI1N2JjODFmNzEzMzhmZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccFVkpgFqTQwMTkzNDMyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1bed8e74f4611a20d5cc0b3257bc81f71338fd7", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e1bed8e74f4611a20d5cc0b3257bc81f71338fd7", "committedDate": "2020-02-16T10:22:26Z", "message": "Make sure CH enabled/disabled is chosen explicitly everywhere\n\n* for any usage of GraphHopper there should either be a setCHEnabled(false) call or some CH profile strings should be set\n\n* -> now we can remove it again :)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8974338cdd7ddb5f968ca5c3e982579efaf2357d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8974338cdd7ddb5f968ca5c3e982579efaf2357d", "committedDate": "2020-02-16T13:19:49Z", "message": "No longer enable CH by default in GraphHopper class\n\n* remove enabled flag in CH/LMPreparationHandlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f8bd950906c66d852d5b1089a2328a795447b0", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a2f8bd950906c66d852d5b1089a2328a795447b0", "committedDate": "2020-02-16T15:34:28Z", "message": "Remove outdated comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1280914179889c4431891236ddb27dff49424b1", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a1280914179889c4431891236ddb27dff49424b1", "committedDate": "2020-02-17T10:08:22Z", "message": "Merge branch 'master' into no_ch_by_default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5293dd960668798161b3ae3b7325104f711e5402", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5293dd960668798161b3ae3b7325104f711e5402", "committedDate": "2020-02-17T10:30:06Z", "message": "Remove CH for PT, update PT readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ff358bcb4af31abbe06339fd828f1d35c7f7f9", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/a7ff358bcb4af31abbe06339fd828f1d35c7f7f9", "committedDate": "2020-02-17T10:54:06Z", "message": "Minor cleanup in RoutingAlgorithmWithOSMIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9267e0786574dee3aacfe8ae8394ca27478d465", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d9267e0786574dee3aacfe8ae8394ca27478d465", "committedDate": "2020-02-17T11:01:42Z", "message": "Merge branch 'master' into no_ch_by_default\n\n# Conflicts:\n#\treader-gtfs/README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6e1ffa4f2858e9d8feff099b883e2eabf429363", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/e6e1ffa4f2858e9d8feff099b883e2eabf429363", "committedDate": "2020-02-17T11:15:19Z", "message": "Introduce routing profiles (so far only used to define CH/LM preparations)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9895e0f8d15fc694bc1dee0812e75c21d1b0de22", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/9895e0f8d15fc694bc1dee0812e75c21d1b0de22", "committedDate": "2020-02-17T13:56:33Z", "message": "Merge branch 'master' into profiles\n\n# Conflicts:\n#\tcore/files/changelog.txt\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/routing/ch/CHPreparationHandler.java\n#\tcore/src/main/java/com/graphhopper/routing/lm/LMPreparationHandler.java\n#\tcore/src/test/java/com/graphhopper/routing/ch/CHPreparationHandlerTest.java\n#\tcore/src/test/java/com/graphhopper/routing/lm/LMPreparationHandlerTest.java\n#\tcore/src/test/java/com/graphhopper/storage/GraphHopperStorageLMTest.java\n#\tcore/src/test/java/com/graphhopper/storage/GraphHopperStorageTest.java\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n#\treader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java\n#\treader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f67a76d79b36ad0e6824de5a93db8e68affe51d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/8f67a76d79b36ad0e6824de5a93db8e68affe51d", "committedDate": "2020-02-19T06:42:55Z", "message": "Merge branch 'master' into profiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d99325e2e2b141b72f2799a65bd0b7962990761", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/9d99325e2e2b141b72f2799a65bd0b7962990761", "committedDate": "2020-02-19T06:51:15Z", "message": "Fix LM profile in measurement if no turn costs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d36aa8bcec0df108ede5c3d1fb8a18f85b29de07", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d36aa8bcec0df108ede5c3d1fb8a18f85b29de07", "committedDate": "2020-02-19T06:59:06Z", "message": "Do not run edge-based LM if no turn cost is set on encoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f832c6454eb154f25deee0522499bf0e2658c984", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f832c6454eb154f25deee0522499bf0e2658c984", "committedDate": "2020-02-19T07:01:27Z", "message": "Do not run edge-based measurement if no turn cost is set on encoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34450abe47f9cfcb96c648bae91f504663c3d560", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/34450abe47f9cfcb96c648bae91f504663c3d560", "committedDate": "2020-02-22T07:57:21Z", "message": "Merge branch 'master' into profiles\n\n# Conflicts:\n#\tcore/files/changelog.txt\n#\tgraphhopper.sh\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0", "committedDate": "2020-02-22T08:04:15Z", "message": "Remove explicit snake case conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29edad3f4b4a0095bd18a1f671955024fc9a7b0b", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/29edad3f4b4a0095bd18a1f671955024fc9a7b0b", "committedDate": "2020-02-22T19:14:09Z", "message": "Merge branch 'master' into profiles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDQwMjYw", "url": "https://github.com/graphhopper/graphhopper/pull/1922#pullrequestreview-363040260", "createdAt": "2020-02-22T17:22:29Z", "commit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxNzoyMjoyOVrOFtMDTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxMjo0ODozMFrOFtQimA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyNzY5Mg==", "bodyText": "Can we remove dashes from the accepted characters or is dash intended to be used for the future query parameter guessing?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382927692", "createdAt": "2020-02-22T17:22:29Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/config/ProfileConfig.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.config;\n+\n+import com.graphhopper.util.PMap;\n+\n+public class ProfileConfig {\n+    private String name = \"car\";\n+    private String vehicle = \"car\";\n+    private String weighting = \"fastest\";\n+    private boolean turnCosts = false;\n+    private PMap hints = new PMap();\n+\n+    public static void validateProfileName(String profileName) {\n+        if (!profileName.matches(\"^[a-z0-9_\\\\-]*$\")) {\n+            throw new IllegalArgumentException(\"Profile names may only contain lower case letters, numbers, underscores and dashs, given: \" + profileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyNzcxMg==", "bodyText": "Why is the pre-initialization necessary? I.e. why not an empty or null string?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382927712", "createdAt": "2020-02-22T17:22:58Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/config/CHProfileConfig.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.config;\n+\n+import java.util.Objects;\n+\n+import static com.graphhopper.config.ProfileConfig.validateProfileName;\n+\n+public class CHProfileConfig {\n+    private String profile = \"unset_ch_profile\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyNzk1Mg==", "bodyText": "Wouldn't it be possible to remove the graph.flag_encoders list now and use the vehicle property of all profiles instead? (btw minor typo of missing 's' in both cases)", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382927952", "createdAt": "2020-02-22T17:26:35Z", "author": {"login": "karussell"}, "path": "config-example.yml", "diffHunk": "@@ -20,6 +20,50 @@ graphhopper:\n   # More are: surface,max_width,max_height,max_weight,max_axle_load,max_length,hazmat,hazmat_tunnel,hazmat_water,toll,track_type\n   # graph.encoded_values: surface,toll,track_type\n \n+  ##### Routing Profiles ####\n+\n+  # Routing can be done for the following list of profiles. The fields of each profile are as follows:\n+  # - name (required): a unique string identifier for the profile\n+  # - vehicle (required): refers to the `graph.flag_encoder` used for this profile\n+  # - weighting (required): the weighting used for this profile, e.g. fastest,shortest or short_fastest\n+  # - turn_costs (true/false, default: false): whether or not turn restrictions should be applied for this profile.\n+  #   this will only work if the `graph.flag_encoder` for the given `vehicle` is configured with `|turn_costs=true`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyODE0NQ==", "bodyText": "I would prefer to throw an IllegalStateException for everything that is not called very often instead of an assert, because assert is only active for our tests. Or why / when do you use assert?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382928145", "createdAt": "2020-02-22T17:30:13Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -797,31 +857,22 @@ public final CHPreparationHandler getCHPreparationHandler() {\n     }\n \n     private void initCHPreparationHandler() {\n-        if (!chPreparationHandler.hasCHProfiles()) {\n-            if (chPreparationHandler.getCHProfileStrings().isEmpty())\n-                throw new IllegalStateException(\"Potential bug: chProfileStrings is empty\");\n-\n-            for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n-                for (String chWeightingStr : chPreparationHandler.getCHProfileStrings()) {\n-                    // ghStorage is null at this point\n-\n-                    // extract weighting string and u-turn-costs\n-                    String configStr = \"\";\n-                    if (chWeightingStr.contains(\"|\")) {\n-                        configStr = chWeightingStr;\n-                        chWeightingStr = chWeightingStr.split(\"\\\\|\")[0];\n-                    }\n-                    PMap config = new PMap(configStr);\n-                    int uTurnCosts = config.getInt(Routing.U_TURN_COSTS, INFINITE_U_TURN_COSTS);\n-\n-                    EdgeBasedCHMode edgeBasedCHMode = chPreparationHandler.getEdgeBasedCHMode();\n-                    if (!(edgeBasedCHMode == EDGE_OR_NODE && encoder.supportsTurnCosts())) {\n-                        chPreparationHandler.addCHProfile(CHProfile.nodeBased(createWeighting(new HintsMap(chWeightingStr), encoder, NO_TURN_COST_PROVIDER)));\n-                    }\n-                    if (edgeBasedCHMode != OFF && encoder.supportsTurnCosts()) {\n-                        chPreparationHandler.addCHProfile(CHProfile.edgeBased(createWeighting(new HintsMap(chWeightingStr), encoder, new DefaultTurnCostProvider(encoder, ghStorage.getTurnCostStorage(), uTurnCosts))));\n-                    }\n-                }\n+        if (chPreparationHandler.hasCHProfiles()) {\n+            return;\n+        }\n+\n+        Map<String, ProfileConfig> profilesByName = getProfilesByName();\n+        for (CHProfileConfig chConfig : chPreparationHandler.getCHProfileConfigs()) {\n+            ProfileConfig profile = profilesByName.get(chConfig.getProfile());\n+            assert profile != null : \"there is no profile \" + chConfig.getProfile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyODI3Mg==", "bodyText": "In both exceptions I would link to this issue #1922 to give more context.", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382928272", "createdAt": "2020-02-22T17:31:38Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/ch/CHPreparationHandler.java", "diffHunk": "@@ -60,36 +60,21 @@ public CHPreparationHandler() {\n \n     public void init(GraphHopperConfig ghConfig) {\n         // throw explicit error for deprecated configs\n-        if (!ghConfig.get(\"prepare.threads\", \"\").isEmpty())\n+        if (ghConfig.has(\"prepare.threads\"))\n             throw new IllegalStateException(\"Use \" + CH.PREPARE + \"threads instead of prepare.threads\");\n-        if (!ghConfig.get(\"prepare.chWeighting\", \"\").isEmpty() || !ghConfig.get(\"prepare.chWeightings\", \"\").isEmpty())\n-            throw new IllegalStateException(\"Use \" + CH.PREPARE + \"weightings and a comma separated list instead of prepare.chWeighting or prepare.chWeightings\");\n+        if (ghConfig.has(\"prepare.chWeighting\") || ghConfig.has(\"prepare.chWeightings\") || ghConfig.has(\"prepare.ch.weightings\"))\n+            throw new IllegalStateException(\"Use profiles_ch instead of prepare.chWeighting, prepare.chWeightings or prepare.ch.weightings\");\n+        if (ghConfig.has(\"prepare.ch.edge_based\"))\n+            throw new IllegalStateException(\"Use profiles_ch instead of prepare.ch.edge_based\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyODMyNA==", "bodyText": "(I also would put here a link to this issue in the error message)", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382928324", "createdAt": "2020-02-22T17:32:38Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/routing/lm/LMPreparationHandler.java", "diffHunk": "@@ -70,7 +71,14 @@ public LMPreparationHandler() {\n     }\n \n     public void init(GraphHopperConfig ghConfig) {\n+        // throw explicit error for deprecated configs\n+        if (ghConfig.has(\"prepare.lm.weightings\")) {\n+            throw new IllegalStateException(\"Use profiles_lm instead of prepare.lm.weightings\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5NTY2OA==", "bodyText": "Should we better make this method package protected to only allow jackson access to it?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382995668", "createdAt": "2020-02-23T11:31:39Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/config/CHProfileConfig.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.config;\n+\n+import java.util.Objects;\n+\n+import static com.graphhopper.config.ProfileConfig.validateProfileName;\n+\n+public class CHProfileConfig {\n+    private String profile = \"unset_ch_profile\";\n+\n+    private CHProfileConfig() {\n+        // default constructor needed for jackson\n+    }\n+\n+    public CHProfileConfig(String profile) {\n+        setProfile(profile);\n+    }\n+\n+    public String getProfile() {\n+        return profile;\n+    }\n+\n+    public CHProfileConfig setProfile(String profile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5Nzg2MA==", "bodyText": "Some javadocs would be good here, also how to set the LM/CHProfileConfig. Or link to this PR.", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382997860", "createdAt": "2020-02-23T12:02:01Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -297,6 +298,16 @@ private GraphHopper setUnsafeMemory() {\n         return this;\n     }\n \n+    public GraphHopper setProfiles(ProfileConfig... profiles) {\n+        return setProfiles(Arrays.asList(profiles));\n+    }\n+\n+    public GraphHopper setProfiles(List<ProfileConfig> profiles) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5OTk3NQ==", "bodyText": "you can add the profile directly to the set as the hashcode & equals is already implemented for that (?)\nOr maybe shouldn't we do the check when calling setProfileConfigs or create a\nLinkedHashMap<String, ProfileConfig> profiles in the GraphHopper class on setProfileConfigs? This would also avoid the method getProfilesByName.", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r382999975", "createdAt": "2020-02-23T12:30:58Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -772,6 +788,50 @@ public boolean load(String graphHopperFolder) {\n         }\n     }\n \n+    private void checkProfilesConsistency() {\n+        Set<String> profileSet = new LinkedHashSet<>(profiles.size());\n+        for (ProfileConfig profile : profiles) {\n+            boolean added = profileSet.add(profile.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwMDM4MQ==", "bodyText": "Why is it not named getHints?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r383000381", "createdAt": "2020-02-23T12:37:02Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/config/ProfileConfig.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.config;\n+\n+import com.graphhopper.util.PMap;\n+\n+public class ProfileConfig {\n+    private String name = \"car\";\n+    private String vehicle = \"car\";\n+    private String weighting = \"fastest\";\n+    private boolean turnCosts = false;\n+    private PMap hints = new PMap();\n+\n+    public static void validateProfileName(String profileName) {\n+        if (!profileName.matches(\"^[a-z0-9_\\\\-]*$\")) {\n+            throw new IllegalArgumentException(\"Profile names may only contain lower case letters, numbers, underscores and dashs, given: \" + profileName);\n+        }\n+    }\n+\n+    private ProfileConfig() {\n+        // default constructor needed for jackson\n+    }\n+\n+    public ProfileConfig(String name) {\n+        setName(name);\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public ProfileConfig setName(String name) {\n+        validateProfileName(name);\n+        this.name = name;\n+        return this;\n+    }\n+\n+    public String getVehicle() {\n+        return vehicle;\n+    }\n+\n+    public ProfileConfig setVehicle(String vehicle) {\n+        this.vehicle = vehicle;\n+        return this;\n+    }\n+\n+    public String getWeighting() {\n+        return weighting;\n+    }\n+\n+    public ProfileConfig setWeighting(String weighting) {\n+        this.weighting = weighting;\n+        return this;\n+    }\n+\n+    public boolean isTurnCosts() {\n+        return turnCosts;\n+    }\n+\n+    public ProfileConfig setTurnCosts(boolean turnCosts) {\n+        this.turnCosts = turnCosts;\n+        return this;\n+    }\n+\n+    public PMap hints() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwMTAxNQ==", "bodyText": "Here some JavaDoc would be good with a link to LM/CHProfileConfig", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r383001015", "createdAt": "2020-02-23T12:45:15Z", "author": {"login": "karussell"}, "path": "api/src/main/java/com/graphhopper/config/ProfileConfig.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package com.graphhopper.config;\n+\n+import com.graphhopper.util.PMap;\n+\n+public class ProfileConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwMTI0MA==", "bodyText": "Can you add , see #1922?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r383001240", "createdAt": "2020-02-23T12:48:30Z", "author": {"login": "karussell"}, "path": "core/files/changelog.txt", "diffHunk": "@@ -1,4 +1,5 @@\n 1.0\n+    add profiles parameter and replace prepare.ch/lm.weightings and prepare.ch.edge_based with profiles_ch/lm config parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad54a3f9fea16f6c645a4f7dd7e146163c8cb0"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ef480f04f67b225f3b9d75aa0ef90d505a6f62", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f9ef480f04f67b225f3b9d75aa0ef90d505a6f62", "committedDate": "2020-02-23T16:57:11Z", "message": "Merge branch 'master' into profiles\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/lm/LMPreparationHandler.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe6ca751174437dcc5f6a06c86dc5291f41e038", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/abe6ca751174437dcc5f6a06c86dc5291f41e038", "committedDate": "2020-02-23T17:06:29Z", "message": "Set initial value of CH/LMProfileConfig#profile to an empty string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82eb3b908e1d63ba006e679baef1c38f807e3b39", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/82eb3b908e1d63ba006e679baef1c38f807e3b39", "committedDate": "2020-02-23T17:07:53Z", "message": "Fix typo in config-example.yml: flag_encoder(s)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fbb3d46d83e27b87d52e641fe2afd156ff127b4", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5fbb3d46d83e27b87d52e641fe2afd156ff127b4", "committedDate": "2020-02-23T17:18:58Z", "message": "Refer to #1922 in error messages for deprecated configurations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2ff2e5d8154cb8d0bcad3239624b1a18b5f1afd", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f2ff2e5d8154cb8d0bcad3239624b1a18b5f1afd", "committedDate": "2020-02-23T17:20:53Z", "message": "Make CH/LMProfileConfig#setProfile package visible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08dda4020ce9a7a50b8f9398ff08de70ced5fb53", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/08dda4020ce9a7a50b8f9398ff08de70ced5fb53", "committedDate": "2020-02-23T17:23:55Z", "message": "Link to #1922 in changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd6bb5a8c8b0fdbe12bf2f59f4946b842a75d209", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/cd6bb5a8c8b0fdbe12bf2f59f4946b842a75d209", "committedDate": "2020-02-23T17:35:37Z", "message": "Use a map instead of a list for profiles in GraphHopper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d007f582f895577625840544bc6e430956400630", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d007f582f895577625840544bc6e430956400630", "committedDate": "2020-02-23T21:58:28Z", "message": "Remove asserts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af4555b86d2e3b03691d9134c4ce7b774fc10945", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/af4555b86d2e3b03691d9134c4ce7b774fc10945", "committedDate": "2020-02-25T09:37:14Z", "message": "Rename ProfileConfig#hints to #getHints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76cbdcef33ad0af051c7ec5f5c6f4ebcd5fcdc9d", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/76cbdcef33ad0af051c7ec5f5c6f4ebcd5fcdc9d", "committedDate": "2020-02-25T09:58:25Z", "message": "Add some java docs for profile configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7caca668bff4bef2970ea4df6931653501c97f8f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/7caca668bff4bef2970ea4df6931653501c97f8f", "committedDate": "2020-02-25T10:08:04Z", "message": "Add some more java docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTc2OTc4", "url": "https://github.com/graphhopper/graphhopper/pull/1922#pullrequestreview-364176978", "createdAt": "2020-02-25T14:21:55Z", "commit": {"oid": "7caca668bff4bef2970ea4df6931653501c97f8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6fef6698125b1350b6d55d27b892b9eb8890c63", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/d6fef6698125b1350b6d55d27b892b9eb8890c63", "committedDate": "2020-02-25T18:45:07Z", "message": "Merge branch 'master' into profiles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTM0MzIw", "url": "https://github.com/graphhopper/graphhopper/pull/1922#pullrequestreview-401934320", "createdAt": "2020-04-28T15:09:03Z", "commit": {"oid": "d6fef6698125b1350b6d55d27b892b9eb8890c63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowOTowM1rOGNY4Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowOTowM1rOGNY4Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MjI1MQ==", "bodyText": "Sorry for being a bit lat to look at the changes. I was wondering why are we creating an instance of the weighting here? Wouldn't it be enough to check if a weighting with a certain name is \"registered\"/\"available\"? Or is this the easiest option to check if the weighting is available?", "url": "https://github.com/graphhopper/graphhopper/pull/1922#discussion_r416692251", "createdAt": "2020-04-28T15:09:03Z", "author": {"login": "boldtrn"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -772,6 +822,45 @@ public boolean load(String graphHopperFolder) {\n         }\n     }\n \n+    private void checkProfilesConsistency() {\n+        for (ProfileConfig profile : profilesByName.values()) {\n+            if (!encodingManager.hasEncoder(profile.getVehicle())) {\n+                throw new IllegalArgumentException(\"Unknown vehicle '\" + profile.getVehicle() + \"' in profile: \" + profile + \". Make sure to add all vehicle used in profiles to 'graph.flag_encoders'\");\n+            }\n+            FlagEncoder encoder = encodingManager.getEncoder(profile.getVehicle());\n+            if (profile.isTurnCosts() && !encoder.supportsTurnCosts()) {\n+                throw new IllegalArgumentException(\"The profile '\" + profile.getName() + \"' was configured with \" +\n+                        \"'turn_costs=true', but the corresponding vehicle '\" + profile.getVehicle() + \"' does not support turn costs.\" +\n+                        \"\\nYou need to add `|turn_costs=true` to the vehicle in `graph.flag_encoders`\");\n+            }\n+            try {\n+                createWeighting(new HintsMap(profile.getWeighting()), encoder, NO_TURN_COST_PROVIDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6fef6698125b1350b6d55d27b892b9eb8890c63"}, "originalPosition": 126}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4580, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}