{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTY0NDM1", "number": 1917, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyNjowNFrODgaHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyNjowNFrODgaHiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzA4OTM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyNjowNFrOFqmP7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyNjowNFrOFqmP7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxMTE4MA==", "bodyText": "Here we could think about a more generic solution as this is also required for the CustomWeighting in #1841.", "url": "https://github.com/graphhopper/graphhopper/pull/1917#discussion_r380211180", "createdAt": "2020-02-17T14:26:04Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -1073,6 +1073,9 @@ else if (ALT_ROUTE.equalsIgnoreCase(algoStr))\n                 return Collections.emptyList();\n \n             QueryGraph queryGraph = QueryGraph.lookup(graph, qResults);\n+            if (weighting instanceof BlockAreaWeighting)\n+                ((BlockAreaWeighting) weighting).setQueryGraph(queryGraph);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "853661d907df102ecebcdad2709b3f577c775c00"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4721, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}