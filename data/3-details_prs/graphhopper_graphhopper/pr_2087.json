{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjA3ODUy", "number": 2087, "title": "Clean-up edge iterator classes", "bodyText": "", "createdAt": "2020-07-20T16:17:54Z", "url": "https://github.com/graphhopper/graphhopper/pull/2087", "merged": true, "mergeCommit": {"oid": "1d6ab175a5df23cfb47003b0c11648dc25311268"}, "closed": true, "closedAt": "2020-07-21T13:31:25Z", "author": {"login": "easbar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc20DOrgH2gAyNDUzNjA3ODUyOjViNjQ1YjU4MTZiNTJiZmU0YTc2NmQ2ZWFjNWI4YzQ1MjdkMTI5MWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3GKXQAFqTQ1MjQ0OTU4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5b645b5816b52bfe4a766d6eac5b8c4527d1291f", "committedDate": "2020-07-20T16:16:35Z", "message": "Clean-up edge iterator classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzYxODE1", "url": "https://github.com/graphhopper/graphhopper/pull/2087#pullrequestreview-451761815", "createdAt": "2020-07-20T16:19:48Z", "commit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjoxOTo0OFrOG0VqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjoyMzo0M1rOG0VzxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNDA2MQ==", "bodyText": "This method was not really related to EdgeAccess.", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457534061", "createdAt": "2020-07-20T16:19:48Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -112,23 +112,6 @@ public BaseGraph(Directory dir, final EncodingManager encodingManager, boolean w\n         this.edges = dir.find(\"edges\", DAType.getPreferredInt(dir.getDefaultType()));\n         this.listener = listener;\n         this.edgeAccess = new EdgeAccess(edges) {\n-            @Override\n-            EdgeIteratorState getEdgeProps(int edgeId, int adjNode, EdgeFilter edgeFilter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNDQ2Nw==", "bodyText": "This -1 appeared frequently, and was the only value used for this parameter", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457534467", "createdAt": "2020-07-20T16:20:31Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1046,12 +1033,12 @@ private long nextGeoRef(int arrayLength) {\n         return tmp;\n     }\n \n-    protected static class EdgeIterable extends CommonEdgeIterator implements EdgeExplorer, EdgeIterator {\n+    protected static class EdgeIteratorImpl extends EdgeIteratorStateImpl implements EdgeExplorer, EdgeIterator {\n         final EdgeFilter filter;\n         int nextEdgeId;\n \n-        public EdgeIterable(BaseGraph baseGraph, EdgeAccess edgeAccess, EdgeFilter filter) {\n-            super(-1, edgeAccess, baseGraph);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNDgzOQ==", "bodyText": "I renamed this for consistency with the other iterator class names.", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457534839", "createdAt": "2020-07-20T16:21:10Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1046,12 +1033,12 @@ private long nextGeoRef(int arrayLength) {\n         return tmp;\n     }\n \n-    protected static class EdgeIterable extends CommonEdgeIterator implements EdgeExplorer, EdgeIterator {\n+    protected static class EdgeIteratorImpl extends EdgeIteratorStateImpl implements EdgeExplorer, EdgeIterator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNTMyNA==", "bodyText": "Moved this one level up, its hardly related to the iterator but its more like the initialization code of an edge state", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457535324", "createdAt": "2020-07-20T16:21:55Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1062,33 +1049,6 @@ final void setEdgeId(int edgeId) {\n             this.nextEdgeId = this.edgeId = edgeId;\n         }\n \n-        /**\n-         * @return false if the edge has not a node equal to expectedAdjNode\n-         */\n-        final boolean init(int tmpEdgeId, int expectedAdjNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNjA5MQ==", "bodyText": "Renamed this because its more like an 'edge' than an iterator. Its used as base class for the iterators yes, but there wasn't much that was 'iterator-like' about this class.", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457536091", "createdAt": "2020-07-20T16:23:08Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1201,12 +1154,9 @@ public final EdgeIteratorState detach(boolean reverseArg) {\n         }\n     }\n \n-    /**\n-     * Common private super class for AllEdgesIteratorImpl and EdgeIterable\n-     */\n-    static abstract class CommonEdgeIterator implements EdgeIteratorState {\n+    static class EdgeIteratorStateImpl implements EdgeIteratorState {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNjQ1Mw==", "bodyText": "The chFlags shouldn't belong to this (basegraph) iterator, I guess this was forgotten in some previous refactoring", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r457536453", "createdAt": "2020-07-20T16:23:43Z", "author": {"login": "easbar"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1215,15 +1165,39 @@ public final EdgeIteratorState detach(boolean reverseArg) {\n         boolean freshFlags;\n         int edgeId = -1;\n         private final IntsRef edgeFlags;\n-        int chFlags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b645b5816b52bfe4a766d6eac5b8c4527d1291f"}, "originalPosition": 195}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f4bef4679148cadbb4f0978a97291a86d5d62a7", "author": {"user": {"login": "easbar", "name": "Andi"}}, "url": "https://github.com/graphhopper/graphhopper/commit/2f4bef4679148cadbb4f0978a97291a86d5d62a7", "committedDate": "2020-07-21T06:59:14Z", "message": "Merge branch 'master' into iterator_cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/9018712a92c338a9dfc9d108bf0ab71cd893d305", "committedDate": "2020-07-21T13:00:18Z", "message": "Merge branch 'master' into iterator_cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDMzNDQ2", "url": "https://github.com/graphhopper/graphhopper/pull/2087#pullrequestreview-452433446", "createdAt": "2020-07-21T13:05:48Z", "commit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzowNTo0OFrOG02-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzowNTo0OFrOG02-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3OTk3OQ==", "bodyText": "BTW: I'm not sure if it is a good thing to do these logic checks via if instead of `assert' as they could have a potential slow down, but I wasn't able to measure this difference and so I preferred long term safety (i.e. show these problems even in production)", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r458079979", "createdAt": "2020-07-21T13:05:48Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1130,29 +1090,22 @@ void goToNext() {\n \n         @Override\n         public EdgeIteratorState detach(boolean reverseArg) {\n-            if (edgeId == nextEdgeId || !EdgeIterator.Edge.isValid(edgeId))\n-                throw new IllegalStateException(\"call next before detaching or setEdgeId (edgeId:\" + edgeId + \" vs. next \" + nextEdgeId + \")\");\n-\n-            EdgeIteratorState iter = edgeAccess.getEdgeProps(edgeId, reverseArg ? baseNode : adjNode, filter);\n-            assert iter != null;\n-            if (reverseArg) {\n-                // for #162\n-                ((EdgeIterable) iter).reverse = !reverse;\n-            }\n-            return iter;\n+            if (edgeId == nextEdgeId)\n+                throw new IllegalStateException(\"call next before detaching (edgeId:\" + edgeId + \" vs. next \" + nextEdgeId + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305"}, "originalPosition": 144}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDM0NDk4", "url": "https://github.com/graphhopper/graphhopper/pull/2087#pullrequestreview-452434498", "createdAt": "2020-07-21T13:07:07Z", "commit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzowNzowN1rOG03B_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzowNzowN1rOG03B_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MDc2Ng==", "bodyText": "I think we should always update the edgePointer to the new value before returning.", "url": "https://github.com/graphhopper/graphhopper/pull/2087#discussion_r458080766", "createdAt": "2020-07-21T13:07:07Z", "author": {"login": "karussell"}, "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -1164,10 +1117,10 @@ public int length() {\n         public boolean next() {\n             while (true) {\n                 edgeId++;\n-                edgePointer = (long) edgeId * edgeAccess.getEntryBytes();\n                 if (edgeId >= baseGraph.edgeCount)\n                     return false;\n \n+                edgePointer = edgeAccess.toPointer(edgeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305"}, "originalPosition": 172}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDQ5NTgy", "url": "https://github.com/graphhopper/graphhopper/pull/2087#pullrequestreview-452449582", "createdAt": "2020-07-21T13:22:40Z", "commit": {"oid": "9018712a92c338a9dfc9d108bf0ab71cd893d305"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}