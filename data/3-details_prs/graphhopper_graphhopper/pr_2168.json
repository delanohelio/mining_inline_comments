{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNjY3MTQz", "number": 2168, "title": "TransportationMode refactoring", "bodyText": "Should avoid new methods to FlagEncoder like in #2159", "createdAt": "2020-10-27T11:06:59Z", "url": "https://github.com/graphhopper/graphhopper/pull/2168", "merged": true, "mergeCommit": {"oid": "94c3b1ad60be207defe0e9fcc9678c6e0a61fc35"}, "closed": true, "closedAt": "2020-11-04T08:43:39Z", "author": {"login": "karussell"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU0n0ygH2gAyNTEwNjY3MTQzOmY2ZTBmODdiNGZjNGFhZjk2NDc0MWVhZGVkOWYzZDk3YTQ4ZTdlNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZJF9mAH2gAyNTEwNjY3MTQzOjkzZGIxYzg0MGY2Mjg5ZGQ0ZDJlNGZkODA2NmViMWVmMjNiMGRlMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6e0f87b4fc4aaf964741eaded9f3d97a48e7e72", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f6e0f87b4fc4aaf964741eaded9f3d97a48e7e72", "committedDate": "2020-10-21T21:54:17Z", "message": "refactored TransportationMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f41bc1fe05d690059214980c6ea9e36c27399c2a", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f41bc1fe05d690059214980c6ea9e36c27399c2a", "committedDate": "2020-10-21T22:23:26Z", "message": "removing it from FlagEncoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c11abc96cefca98d8bb688df84f159ec1d759d", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/f0c11abc96cefca98d8bb688df84f159ec1d759d", "committedDate": "2020-10-22T20:43:38Z", "message": "back to enums but with isMotorVehicle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a37323d64bfdf5512d613b0b5853dd7c87017ad", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/5a37323d64bfdf5512d613b0b5853dd7c87017ad", "committedDate": "2020-10-22T20:45:38Z", "message": "minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/6096fbea8db19ee280632c0c955c32134d122b58", "committedDate": "2020-10-27T11:07:31Z", "message": "Merge branch 'master' into tra_mo_refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTg5MTA1", "url": "https://github.com/graphhopper/graphhopper/pull/2168#pullrequestreview-517589105", "createdAt": "2020-10-27T11:14:20Z", "commit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTg5NDQ4", "url": "https://github.com/graphhopper/graphhopper/pull/2168#pullrequestreview-517589448", "createdAt": "2020-10-27T11:14:46Z", "commit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMToxNDo0NlrOHo280Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMToxNDo0NlrOHo280Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwNTM5Mw==", "bodyText": "I'd argue that the restrictions are a defining property of a TransportationMode and would move them to the Enum.", "url": "https://github.com/graphhopper/graphhopper/pull/2168#discussion_r512605393", "createdAt": "2020-10-27T11:14:46Z", "author": {"login": "otbutz"}, "path": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadAccessParser.java", "diffHunk": "@@ -60,10 +60,32 @@ public IntsRef handleWayTags(IntsRef edgeFlags, ReaderWay readerWay, boolean fer\n         SpatialRuleSet spatialRuleSet = readerWay.getTag(\"spatial_rule_set\", null);\n         if (spatialRuleSet != null && spatialRuleSet != SpatialRuleSet.EMPTY) {\n             RoadClass roadClass = RoadClass.find(readerWay.getTag(\"highway\", \"\"));\n-            accessValue = spatialRuleSet.getAccess(roadClass, TransportationMode.MOTOR_VEHICLE, YES);\n+            accessValue = spatialRuleSet.getAccess(roadClass, TransportationMode.CAR, YES);\n         }\n-            \n+\n         roadAccessEnc.setEnum(false, edgeFlags, accessValue);\n         return edgeFlags;\n     }\n+\n+    public static List<String> toOSMRestrictions(TransportationMode mode) {\n+        switch (mode) {\n+            case FOOT:\n+                return Arrays.asList(\"foot\", \"access\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjMwMjk2", "url": "https://github.com/graphhopper/graphhopper/pull/2168#pullrequestreview-517630296", "createdAt": "2020-10-27T12:05:59Z", "commit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjowNTo1OVrOHo47Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjowNTo1OVrOHo47Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYzNzc3NQ==", "bodyText": "Shouldn't we add a case for each mode and throw an exception in default? We could add a unittest to ensure that all TransportationModes return a value for toOSMRestrictions()", "url": "https://github.com/graphhopper/graphhopper/pull/2168#discussion_r512637775", "createdAt": "2020-10-27T12:05:59Z", "author": {"login": "otbutz"}, "path": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadAccessParser.java", "diffHunk": "@@ -60,10 +60,32 @@ public IntsRef handleWayTags(IntsRef edgeFlags, ReaderWay readerWay, boolean fer\n         SpatialRuleSet spatialRuleSet = readerWay.getTag(\"spatial_rule_set\", null);\n         if (spatialRuleSet != null && spatialRuleSet != SpatialRuleSet.EMPTY) {\n             RoadClass roadClass = RoadClass.find(readerWay.getTag(\"highway\", \"\"));\n-            accessValue = spatialRuleSet.getAccess(roadClass, TransportationMode.MOTOR_VEHICLE, YES);\n+            accessValue = spatialRuleSet.getAccess(roadClass, TransportationMode.CAR, YES);\n         }\n-            \n+\n         roadAccessEnc.setEnum(false, edgeFlags, accessValue);\n         return edgeFlags;\n     }\n+\n+    public static List<String> toOSMRestrictions(TransportationMode mode) {\n+        switch (mode) {\n+            case FOOT:\n+                return Arrays.asList(\"foot\", \"access\");\n+            case VEHICLE:\n+                return Arrays.asList(\"vehicle\", \"access\");\n+            case BIKE:\n+                return Arrays.asList(\"bicycle\", \"vehicle\", \"access\");\n+            case MOTOR_VEHICLE:\n+                return Arrays.asList(\"motor_vehicle\", \"vehicle\", \"access\");\n+            case CAR:\n+                return Arrays.asList(\"motorcar\", \"motor_vehicle\", \"vehicle\", \"access\");\n+            case MOTORCYCLE:\n+                return Arrays.asList(\"motorcycle\", \"motor_vehicle\", \"vehicle\", \"access\");\n+            case HGV:\n+                return Arrays.asList(\"hgv\", \"motor_vehicle\", \"vehicle\", \"access\");\n+            default:\n+                return mode.isMotorVehicle() ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODI5MzU5", "url": "https://github.com/graphhopper/graphhopper/pull/2168#pullrequestreview-518829359", "createdAt": "2020-10-28T16:02:57Z", "commit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMjo1N1rOHpxosg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMjo1N1rOHpxosg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2Njg5OA==", "bodyText": "Do we want to keep the hierarchy here?\ne.g\n    OTHER()\n    FOOT(OTHER)\n    VEHICLE(OTHER)\n    BIKE(VEHICLE),\n    MOTOR_VEHICLE(VEHICLE),\n    CAR(MOTOR_VEHICLE),\n    MOTORCYCLE(MOTOR_VEHICLE),\n    HGV(MOTOR_VEHICLE);\n\n    TransportationMode(TransporationMode parent) {\n         // ...\nThis would allow for constructs like this:\n    HGV.is(VEHICLE) == true", "url": "https://github.com/graphhopper/graphhopper/pull/2168#discussion_r513566898", "createdAt": "2020-10-28T16:02:57Z", "author": {"login": "otbutz"}, "path": "core/src/main/java/com/graphhopper/routing/util/TransportationMode.java", "diffHunk": "@@ -15,28 +15,26 @@\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  */\n-package com.graphhopper.routing.util.spatialrules;\n+package com.graphhopper.routing.util;\n \n /**\n- * Defining different types of transportation.\n- * <p>\n- * We started with a subset of the definition found in the OSM Wiki\n- * https://wiki.openstreetmap.org/wiki/Key:access#Land-based_transportation\n+ * Define different types of transportation that are used to create and populate our encoded values from a data source\n+ * like OpenStreetMap.\n  *\n  * @author Robin Boldt\n+ * @author Peter Karich\n  */\n public enum TransportationMode {\n+    OTHER(false), FOOT(false), VEHICLE(false), BIKE(false),\n+    MOTOR_VEHICLE(true), CAR(true), MOTORCYCLE(true), HGV(true);\n \n-    OTHER(0), MOTOR_VEHICLE(1), BICYCLE(2), FOOT(3);\n+    private final boolean motorVehicle;\n \n-    private final int value;\n-\n-    TransportationMode(int value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096fbea8db19ee280632c0c955c32134d122b58"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9cc978a1f8a95874a2621035de97fe91b692e2", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/0a9cc978a1f8a95874a2621035de97fe91b692e2", "committedDate": "2020-11-04T08:00:38Z", "message": "throw exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93db1c840f6289dd4d2e4fd8066eb1ef23b0de07", "author": {"user": {"login": "karussell", "name": "Peter"}}, "url": "https://github.com/graphhopper/graphhopper/commit/93db1c840f6289dd4d2e4fd8066eb1ef23b0de07", "committedDate": "2020-11-04T08:01:00Z", "message": "Merge branch 'master' into tra_mo_refactoring"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4500, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}