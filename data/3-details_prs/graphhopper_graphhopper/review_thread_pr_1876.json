{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MDQ4Mzgx", "number": 1876, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMzo0N1rODbZAsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMzo0N1rODbZAsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDQ3OTIwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMzo0N1rOFi2e_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzoxNzo1M1rOFi39tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4ODU3Mw==", "bodyText": "@easbar can you have a look into this test. After merging master I'm getting:\njava.lang.IllegalStateException: Configured CH profile: fastest|car|edge_based=false is not contained in loaded weightings for CH[fastest|car|edge_based=false|u_turn_costs=-1, fastest|bike|edge_based=false|u_turn_costs=-1].\nYou configured: [fastest|car|edge_based=false, fastest|bike|edge_based=false]\n\nAnd cannot make it working. IMO both profiles are identical.\nIs this due to the compatibility layer? Should we remove this :) ?\nAnd I also noticed that Objects.hash and Objects.equals is used in CHProfile which is not available in Java 7 but replacing this should be simple. Sorry it should be Java 7 ...", "url": "https://github.com/graphhopper/graphhopper/pull/1876#discussion_r372088573", "createdAt": "2020-01-28T22:13:47Z", "author": {"login": "karussell"}, "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "diffHunk": "@@ -61,8 +61,10 @@ private GraphHopperStorage newGHStorage(boolean is3D, boolean forEdgeBasedTraver\n     private GraphHopperStorage newGHStorage(Directory dir, boolean is3D, boolean forEdgeBasedTraversal, int segmentSize) {\n         GraphHopperStorage graph = new GraphBuilder(encodingManager)\n                 .setDir(dir).set3D(is3D).withTurnCosts(true).setSegmentSize(segmentSize).build();\n-        FastestWeighting weighting = new FastestWeighting(carEncoder, new DefaultTurnCostProvider(carEncoder, graph.getTurnCostStorage()));\n-        graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n+            FastestWeighting weighting = new FastestWeighting(encoder, new DefaultTurnCostProvider(encoder, graph.getTurnCostStorage()));\n+            graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f89a40e65f4dc05040b2f2077e068635767801b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwMTEyNg==", "bodyText": "Ah, thanks a lot! This way I learn the new stuff pretty fast :)", "url": "https://github.com/graphhopper/graphhopper/pull/1876#discussion_r372101126", "createdAt": "2020-01-28T22:44:51Z", "author": {"login": "karussell"}, "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "diffHunk": "@@ -61,8 +61,10 @@ private GraphHopperStorage newGHStorage(boolean is3D, boolean forEdgeBasedTraver\n     private GraphHopperStorage newGHStorage(Directory dir, boolean is3D, boolean forEdgeBasedTraversal, int segmentSize) {\n         GraphHopperStorage graph = new GraphBuilder(encodingManager)\n                 .setDir(dir).set3D(is3D).withTurnCosts(true).setSegmentSize(segmentSize).build();\n-        FastestWeighting weighting = new FastestWeighting(carEncoder, new DefaultTurnCostProvider(carEncoder, graph.getTurnCostStorage()));\n-        graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n+            FastestWeighting weighting = new FastestWeighting(encoder, new DefaultTurnCostProvider(encoder, graph.getTurnCostStorage()));\n+            graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4ODU3Mw=="}, "originalCommit": {"oid": "8f89a40e65f4dc05040b2f2077e068635767801b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwMjQ5NQ==", "bodyText": "And cannot make it working. IMO both profiles are identical.\n\nI think I fixed this with the last commit. The problem was just an inconsistent way of how the weightings for CH profiles were created for the graphs.\n\nIs this due to the compatibility layer? Should we remove this :) ?\n\nNo this was not because of the compatibility layer. The problem was rather that in one case the weighting had a no turn cost provider and in the other a default turn cost provider.", "url": "https://github.com/graphhopper/graphhopper/pull/1876#discussion_r372102495", "createdAt": "2020-01-28T22:48:29Z", "author": {"login": "easbar"}, "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "diffHunk": "@@ -61,8 +61,10 @@ private GraphHopperStorage newGHStorage(boolean is3D, boolean forEdgeBasedTraver\n     private GraphHopperStorage newGHStorage(Directory dir, boolean is3D, boolean forEdgeBasedTraversal, int segmentSize) {\n         GraphHopperStorage graph = new GraphBuilder(encodingManager)\n                 .setDir(dir).set3D(is3D).withTurnCosts(true).setSegmentSize(segmentSize).build();\n-        FastestWeighting weighting = new FastestWeighting(carEncoder, new DefaultTurnCostProvider(carEncoder, graph.getTurnCostStorage()));\n-        graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n+            FastestWeighting weighting = new FastestWeighting(encoder, new DefaultTurnCostProvider(encoder, graph.getTurnCostStorage()));\n+            graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4ODU3Mw=="}, "originalCommit": {"oid": "8f89a40e65f4dc05040b2f2077e068635767801b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDU2OQ==", "bodyText": "This error would have been caught by this check: #1863 (comment) (had we not removed it...)\nBut if we really want to improve something here I think we should refactor these graph storage tests, I am often spending time figuring out which of the createGHStorage methods is actually being called, because they are overriding and calling each other, which can be very confusing.", "url": "https://github.com/graphhopper/graphhopper/pull/1876#discussion_r372104569", "createdAt": "2020-01-28T22:54:00Z", "author": {"login": "easbar"}, "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "diffHunk": "@@ -61,8 +61,10 @@ private GraphHopperStorage newGHStorage(boolean is3D, boolean forEdgeBasedTraver\n     private GraphHopperStorage newGHStorage(Directory dir, boolean is3D, boolean forEdgeBasedTraversal, int segmentSize) {\n         GraphHopperStorage graph = new GraphBuilder(encodingManager)\n                 .setDir(dir).set3D(is3D).withTurnCosts(true).setSegmentSize(segmentSize).build();\n-        FastestWeighting weighting = new FastestWeighting(carEncoder, new DefaultTurnCostProvider(carEncoder, graph.getTurnCostStorage()));\n-        graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n+            FastestWeighting weighting = new FastestWeighting(encoder, new DefaultTurnCostProvider(encoder, graph.getTurnCostStorage()));\n+            graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4ODU3Mw=="}, "originalCommit": {"oid": "8f89a40e65f4dc05040b2f2077e068635767801b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExMjgyMw==", "bodyText": "But if we really want to improve something here\n\nYeah, I noticed this too. The number of methods is just too much there.\n\nThis error would have been caught by this check: #1863 (comment) (had we not removed it...)\n\nHaha :) ... maybe we reintroduce it when time shows this is ugly.", "url": "https://github.com/graphhopper/graphhopper/pull/1876#discussion_r372112823", "createdAt": "2020-01-28T23:17:53Z", "author": {"login": "karussell"}, "path": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "diffHunk": "@@ -61,8 +61,10 @@ private GraphHopperStorage newGHStorage(boolean is3D, boolean forEdgeBasedTraver\n     private GraphHopperStorage newGHStorage(Directory dir, boolean is3D, boolean forEdgeBasedTraversal, int segmentSize) {\n         GraphHopperStorage graph = new GraphBuilder(encodingManager)\n                 .setDir(dir).set3D(is3D).withTurnCosts(true).setSegmentSize(segmentSize).build();\n-        FastestWeighting weighting = new FastestWeighting(carEncoder, new DefaultTurnCostProvider(carEncoder, graph.getTurnCostStorage()));\n-        graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders()) {\n+            FastestWeighting weighting = new FastestWeighting(encoder, new DefaultTurnCostProvider(encoder, graph.getTurnCostStorage()));\n+            graph.addCHGraph(new CHProfile(weighting, forEdgeBasedTraversal));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4ODU3Mw=="}, "originalCommit": {"oid": "8f89a40e65f4dc05040b2f2077e068635767801b"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4851, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}