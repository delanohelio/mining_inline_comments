{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTYxNzY0", "number": 1909, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjowOVrODfnD2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNjo0MlrODfnLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcyNDA5OnYy", "diffSide": "RIGHT", "path": "reader-osm/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjowOVrOFpaZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxOTozNFrOFp96Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODM3NA==", "bodyText": "Maybe we could put these dependencies into the parent pom?", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968374", "createdAt": "2020-02-13T16:22:09Z", "author": {"login": "easbar"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDI4Ng==", "bodyText": "Ok", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550286", "createdAt": "2020-02-14T17:19:34Z", "author": {"login": "karussell"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODM3NA=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcyNTIzOnYy", "diffSide": "RIGHT", "path": "reader-osm/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjoyN1rOFpaZ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoyMDoxOFrOFp97fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODU3Mw==", "bodyText": "Maybe this should also go into the parent pom", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968573", "createdAt": "2020-02-13T16:22:27Z", "author": {"login": "easbar"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>\n+            <artifactId>junit-platform-launcher</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.vintage</groupId>\n+            <artifactId>junit-vintage-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-params</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.graphhopper</groupId>\n             <artifactId>graphhopper-core</artifactId>\n             <version>${project.parent.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n-        </dependency>        \n+        </dependency>\n     </dependencies>\n+\n+    <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDU4OA==", "bodyText": "Yes, see also: #1906?", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550588", "createdAt": "2020-02-14T17:20:18Z", "author": {"login": "karussell"}, "path": "reader-osm/pom.xml", "diffHunk": "@@ -45,17 +45,44 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n+            <groupId>org.junit.platform</groupId>\n+            <artifactId>junit-platform-launcher</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.vintage</groupId>\n+            <artifactId>junit-vintage-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-params</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.graphhopper</groupId>\n             <artifactId>graphhopper-core</artifactId>\n             <version>${project.parent.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n-        </dependency>        \n+        </dependency>\n     </dependencies>\n+\n+    <dependencyManagement>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODU3Mw=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcyNjc1OnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjo0OVrOFpabBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMjo0OVrOFpabBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODgzNw==", "bodyText": "jupiter tells us we are dealing with the junit 5 dependencies here", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968837", "createdAt": "2020-02-13T16:22:49Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -34,7 +34,9 @@\n import com.graphhopper.util.exceptions.PointDistanceExceededException;\n import com.graphhopper.util.shapes.GHPoint;\n import com.graphhopper.util.shapes.GHPoint3D;\n-import org.junit.*;\n+import org.junit.jupiter.api.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcyODMyOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMzoxMlrOFpacCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMzoxMlrOFpacCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTA5Nw==", "bodyText": "This has been renamed, but its easy to change :)", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969097", "createdAt": "2020-02-13T16:23:12Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -59,7 +62,7 @@\n     private static GraphHopper hopper;\n     private final String tmpGraphFile = \"target/graphhopperIT-tmp\";\n \n-    @BeforeClass\n+    @BeforeAll", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcyOTIwOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMzoyMlrOFpachQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyMzoyMlrOFpachQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTIyMQ==", "bodyText": "Same here, just a rename", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969221", "createdAt": "2020-02-13T16:23:22Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDczNjcyOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNToxOFrOFpahVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoyMToyNVrOFp99Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ==", "bodyText": "This is quite nice, especially for testing with different api parameters. Each element of the array is split into separate parameters to the test method (algo and expectedVisitedNodes) and there are default converters (e.g. expectedVisitedNodes is parsed to an int here. So with these two annotations I was able to run the test I was talking about in the initial comment for different algorithms.", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970455", "createdAt": "2020-02-13T16:25:18Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3NDEzNw==", "bodyText": "Its also nice to see the visited nodes counts for the different algos here :)", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378974137", "createdAt": "2020-02-13T16:30:51Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDk5MQ==", "bodyText": "Interesting! Looks good.", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550991", "createdAt": "2020-02-14T17:21:25Z", "author": {"login": "karussell"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ=="}, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDczODg3OnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNTo1M1rOFpaisg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNTo1M1rOFpaisg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDgwMg==", "bodyText": "The message shown when an assertion fails is now the last parrameter in the assertXYZ methods...", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970802", "createdAt": "2020-02-13T16:25:53Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1370,7 +1374,7 @@ public void testEncoderWithTurnCostSupport_stillAllows_nodeBasedRouting() {\n         GHRequest req = new GHRequest(p, q);\n         req.setVehicle(\"foot\");\n         GHResponse rsp = tmpHopper.route(req);\n-        assertEquals(\"there should not be an error, but was: \" + rsp.getErrors(), 0, rsp.getErrors().size());\n+        assertEquals(0, rsp.getErrors().size(), \"there should not be an error, but was: \" + rsp.getErrors());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDc0MjgyOnYy", "diffSide": "RIGHT", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNjo0M1rOFpalIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNjo0M1rOFpalIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTQyNg==", "bodyText": "I did not feel like changing all the method calls to the new format, but after adding these methods this could be done with a single click by using the inline refactoring in IntelliJ", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378971426", "createdAt": "2020-02-13T16:26:43Z", "author": {"login": "easbar"}, "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1587,6 +1591,22 @@ private void assertInstruction(Instruction instruction, String expectedName, Str\n         assertEquals(expectedPoints, instruction.getPoints().size());\n     }\n \n+    private void assertTrue(boolean condition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4709, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}