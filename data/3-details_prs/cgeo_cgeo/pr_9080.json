{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjk5Njc5", "number": 9080, "title": "rel to #9015: impr in-memory-filter perf, adjusts datastore-logs, logs logcat command", "bodyText": "related to #9015: This PR\n\nimproves in-memory-filtering performance for large cache lists\nadjusts logging in class DataStore\nadds logging of logcat command issued to extract c:geo logs via Settings-> System\nadds a helper class to create/remove artificial cache test data into developer databases", "createdAt": "2020-09-27T10:01:00Z", "url": "https://github.com/cgeo/cgeo/pull/9080", "merged": true, "mergeCommit": {"oid": "52afc6c225071718c0d673111241ff2ecacd8d77"}, "closed": true, "closedAt": "2020-09-27T11:19:39Z", "author": {"login": "eddiemuc"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdM8AI9gH2gAyNDkzNjk5Njc5OjU0NjY0NTFlYzIzNjU5ODc2YmJjMjljODc3NzVjMzE4YmQ2ODJiMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNSIz9AFqTQ5NzQzMTc4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5466451ec23659876bbc29c87775c318bd682b34", "author": {"user": {"login": "eddiemuc", "name": "Eddie"}}, "url": "https://github.com/cgeo/cgeo/commit/5466451ec23659876bbc29c87775c318bd682b34", "committedDate": "2020-09-27T09:58:47Z", "message": "rel to #9015: impr in-memory-filter perf, adjusts datastore-logs, logs logcat command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDMxNzg1", "url": "https://github.com/cgeo/cgeo/pull/9080#pullrequestreview-497431785", "createdAt": "2020-09-28T11:46:09Z", "commit": {"oid": "5466451ec23659876bbc29c87775c318bd682b34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0NjowOVrOHY6AVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0NjowOVrOHY6AVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODIzMQ==", "bodyText": "Sorry for random comment, but shouldn't be this method performant in all the cases, including opposite one - filtering very large lists (50k) into a very large list (49k)?", "url": "https://github.com/cgeo/cgeo/pull/9080#discussion_r495878231", "createdAt": "2020-09-28T11:46:09Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/filter/AbstractFilter.java", "diffHunk": "@@ -29,13 +29,19 @@ protected AbstractFilter(final Parcel in) {\n \n     @Override\n     public void filter(@NonNull final List<Geocache> list) {\n-        final List<Geocache> itemsToRemove = new ArrayList<>();\n+\n+        //method must be performant when used with very large lists (e.g. 50000 elements) filtered into very short lists (e.g. 30 elements)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5466451ec23659876bbc29c87775c318bd682b34"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1596, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}