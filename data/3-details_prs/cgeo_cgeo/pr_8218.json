{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTU5OTIx", "number": 8218, "title": "Implemented Filtering by Country", "bodyText": "Unconstrained, over all Countries extracted from the Location field on all caches.\nFixes #5257\nSee #8210 for history.", "createdAt": "2020-04-17T07:05:23Z", "url": "https://github.com/cgeo/cgeo/pull/8218", "merged": true, "mergeCommit": {"oid": "2b1ef0e5a5912387da9b7895c68b15edac572976"}, "closed": true, "closedAt": "2020-04-25T18:33:23Z", "author": {"login": "jakedot"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYbQIJgH2gAyNDA0OTU5OTIxOjA0ZTAwZmYzOWVmZjAzODg2NTlmNjU2MzVlYzk2YmIwZGI1MTc2N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYyUeegBqjMyNDY3MjYzMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04e00ff39eff0388659f65635ec96bb0db51767a", "author": {"user": {"login": "jakedot", "name": "JakeDot"}}, "url": "https://github.com/cgeo/cgeo/commit/04e00ff39eff0388659f65635ec96bb0db51767a", "committedDate": "2020-04-17T06:25:19Z", "message": "Implemented Filtering by Country\n\nUnconstrained, over all Countries extracted from the Location field on all caches."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDI1NTk3", "url": "https://github.com/cgeo/cgeo/pull/8218#pullrequestreview-395425597", "createdAt": "2020-04-17T12:52:31Z", "commit": {"oid": "04e00ff39eff0388659f65635ec96bb0db51767a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo1MjozMVrOGHMtJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo1MjozMVrOGHMtJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwMTM4Mw==", "bodyText": "Here, I need to somehow get the list of current geocodes.", "url": "https://github.com/cgeo/cgeo/pull/8218#discussion_r410201383", "createdAt": "2020-04-17T12:52:31Z", "author": {"login": "jakedot"}, "path": "main/src/cgeo/geocaching/filter/CountryFilterFactory.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package cgeo.geocaching.filter;\n+\n+import cgeo.geocaching.models.Geocache;\n+import cgeo.geocaching.storage.DataStore;\n+\n+import android.os.Parcel;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class CountryFilterFactory implements IFilterFactory {\n+\n+\n+    static class CountryFilter extends AbstractFilter {\n+        private String location = null;\n+\n+        public static final Creator<CountryFilter> CREATOR\n+                = new Creator<CountryFilter>() {\n+\n+            @Override\n+            public CountryFilter createFromParcel(final Parcel in) {\n+                return new CountryFilter(in);\n+            }\n+\n+            @Override\n+            public CountryFilter[] newArray(final int size) {\n+                return new CountryFilter[size];\n+            }\n+        };\n+\n+        CountryFilter(final String location, final String title) {\n+            super(title);\n+            this.location = location;\n+        }\n+\n+        protected CountryFilter(final Parcel in) {\n+            super(in);\n+            location = in.readString();\n+        }\n+\n+        @Override\n+        public void writeToParcel(final Parcel dest, final int flags) {\n+            super.writeToParcel(dest, flags);\n+            dest.writeString(location);\n+        }\n+\n+        @Override\n+        public boolean accepts(@NonNull final Geocache cache) {\n+            final @NonNull String location = cache.getLocation();\n+\n+            return location != null && location.endsWith(this.location);\n+        }\n+\n+    }\n+\n+    @Override\n+    @NonNull\n+    public List<IFilter> getFilters() {\n+\n+        final Map<String, IFilter> filters = new HashMap<>();\n+\n+        final String separator = \", \";\n+\n+        // TODO: use DataStore.getStoredLocationsForSet(Set<String>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e00ff39eff0388659f65635ec96bb0db51767a"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f81b5a1f72763e0346da37280b97e2ae525621", "author": {"user": {"login": "jakedot", "name": "JakeDot"}}, "url": "https://github.com/cgeo/cgeo/commit/c0f81b5a1f72763e0346da37280b97e2ae525621", "committedDate": "2020-04-18T09:17:25Z", "message": "Cleaned up filtering by Country DataStore methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65e4fddd3785f378683fc345a9b3f5fb4545817b", "author": {"user": {"login": "jakedot", "name": "JakeDot"}}, "url": "https://github.com/cgeo/cgeo/commit/65e4fddd3785f378683fc345a9b3f5fb4545817b", "committedDate": "2020-04-18T09:12:46Z", "message": "Cleaned up filtering by Country DataStore methods"}, "afterCommit": {"oid": "c0f81b5a1f72763e0346da37280b97e2ae525621", "author": {"user": {"login": "jakedot", "name": "JakeDot"}}, "url": "https://github.com/cgeo/cgeo/commit/c0f81b5a1f72763e0346da37280b97e2ae525621", "committedDate": "2020-04-18T09:17:25Z", "message": "Cleaned up filtering by Country DataStore methods"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1488, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}