{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDYwMTkx", "number": 9065, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNjozN1rOEneIEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyNDo1OVrOEnen5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODIzNTA2OnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/connector/IConnector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNjozN1rOHYFIHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToxMzowOFrOHYHzng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTg2OA==", "bodyText": "Typo aravilable", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495011868", "createdAt": "2020-09-25T14:06:37Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1NTc3NA==", "bodyText": "will be fixed", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495055774", "createdAt": "2020-09-25T15:13:08Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTg2OA=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODI0MDAyOnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/connector/IConnector.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNzo1MVrOHYFLOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1NTo0OVrOHYSOMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMjY2Nw==", "bodyText": "Why would you need to display log ID to the user at all?", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495012667", "createdAt": "2020-09-25T14:07:51Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.\n+     */\n+    @Nullable\n+    String getCacheLogUrl(@NonNull Geocache cache, @NonNull LogEntry logEntry);\n+\n+    /**\n+     * For a given service-log-id (as assigned by this IConnector and stored as service log id in log entries),\n+     * returns a logid ready for display to the user (e.g. in the GUI)\n+     * May return null if there is no displayable log id.\n+     */\n+    @Nullable\n+    String getDisplayableLogId(@Nullable String serviceLogId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1MDk0Ng==", "bodyText": "I currently display it in the popup when you click on log as well as next to the log entry in the log list (as announced in the screenshot in the issue #8897 ). Don't like it? Let's discuss it there.", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495050946", "createdAt": "2020-09-25T15:05:19Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.\n+     */\n+    @Nullable\n+    String getCacheLogUrl(@NonNull Geocache cache, @NonNull LogEntry logEntry);\n+\n+    /**\n+     * For a given service-log-id (as assigned by this IConnector and stored as service log id in log entries),\n+     * returns a logid ready for display to the user (e.g. in the GUI)\n+     * May return null if there is no displayable log id.\n+     */\n+    @Nullable\n+    String getDisplayableLogId(@Nullable String serviceLogId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMjY2Nw=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3MDU2NA==", "bodyText": "I don't think log ID gives any value to the user :)", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495070564", "createdAt": "2020-09-25T15:36:53Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.\n+     */\n+    @Nullable\n+    String getCacheLogUrl(@NonNull Geocache cache, @NonNull LogEntry logEntry);\n+\n+    /**\n+     * For a given service-log-id (as assigned by this IConnector and stored as service log id in log entries),\n+     * returns a logid ready for display to the user (e.g. in the GUI)\n+     * May return null if there is no displayable log id.\n+     */\n+    @Nullable\n+    String getDisplayableLogId(@Nullable String serviceLogId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMjY2Nw=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNjQxNg==", "bodyText": "@okainov I think it is better to have these discussions in the issue itself , because imho they are documented better that way. Following this issue, I wanted to delete the log ids on the log entries and change the title to \"Log (logid) of (username)\". But maybe you want to suggest something different?", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495226416", "createdAt": "2020-09-25T20:55:49Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/connector/IConnector.java", "diffHunk": "@@ -52,6 +53,21 @@\n     @Nullable\n     String getLongCacheUrl(@NonNull Geocache cache);\n \n+    /**\n+     * Get the browser URL for the given LogEntry. May return null if no url aravilable or identifiable.\n+     */\n+    @Nullable\n+    String getCacheLogUrl(@NonNull Geocache cache, @NonNull LogEntry logEntry);\n+\n+    /**\n+     * For a given service-log-id (as assigned by this IConnector and stored as service log id in log entries),\n+     * returns a logid ready for display to the user (e.g. in the GUI)\n+     * May return null if there is no displayable log id.\n+     */\n+    @Nullable\n+    String getDisplayableLogId(@Nullable String serviceLogId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMjY2Nw=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODI2NTMwOnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoxMjo1MVrOHYFaXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1Mjo1MlrOHYSJ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjU0MQ==", "bodyText": "Just wonder, why do you discard usage of method and use member instead?", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495016541", "createdAt": "2020-09-25T14:12:51Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA0OTM1Mg==", "bodyText": "method was deprecated", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495049352", "createdAt": "2020-09-25T15:02:46Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjU0MQ=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3MDA1OA==", "bodyText": "Okay, I'm not really following all the code changes, but typically it's a good practice to use methods over member variables... Anyway, no problem here", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495070058", "createdAt": "2020-09-25T15:36:00Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjU0MQ=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNTMwMA==", "bodyText": "@okainov there is (or maybe was? I remember this from a couple of years ago...) a big debate regarding how to model immutable value objects in Java. While one side argues that also for immutable objects (which of course have no setter methods) explicit getter objects shall be used, the other argues that in this case one can also access directly final members. If you google \"java immutable objects\" you will find lots of sides about this.\nI personally don't mind which pattern is used :-) BUt whoever modelled LogEntry in the first place was clearly advocating the second solution. So I decided to follow it. Because although I don't care too much which pattern to follow (as long as it is sensible enough), I like it when all code follows the SAME pattern :-)", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495225300", "createdAt": "2020-09-25T20:52:52Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjU0MQ=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODI2NjI2OnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoxMzowMlrOHYFa6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTowNTo0NVrOHYHh1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjY4Mg==", "bodyText": "same here", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495016682", "createdAt": "2020-09-25T14:13:02Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));\n         } else {\n             holder.images.setVisibility(View.GONE);\n         }\n \n         // colored marker\n-        final int marker = log.getType().markerId;\n+        final int marker = log.logType.markerId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1MTIyMg==", "bodyText": "same reason: method was deprecated", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495051222", "createdAt": "2020-09-25T15:05:45Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/log/LogsViewCreator.java", "diffHunk": "@@ -96,13 +107,13 @@ protected void fillViewHolder(@SuppressWarnings(\"unused\") final View convertView\n         if (log.hasLogImages()) {\n             holder.images.setText(log.getImageTitles());\n             holder.images.setVisibility(View.VISIBLE);\n-            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.getLogImages())));\n+            holder.images.setOnClickListener(v -> ImagesActivity.startActivity(activity, getGeocode(), new ArrayList<>(log.logImages)));\n         } else {\n             holder.images.setVisibility(View.GONE);\n         }\n \n         // colored marker\n-        final int marker = log.getType().markerId;\n+        final int marker = log.logType.markerId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjY4Mg=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODI3NjUzOnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/ui/dialog/ContextMenuDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoxNToyNlrOHYFhaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToxMjoxN1rOHYHxoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxODM0NA==", "bodyText": "Typo", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495018344", "createdAt": "2020-09-25T14:15:26Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/ui/dialog/ContextMenuDialog.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package cgeo.geocaching.ui.dialog;\n+\n+import cgeo.geocaching.utils.CollectionStream;\n+import cgeo.geocaching.utils.functions.Action1;\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.graphics.Rect;\n+import android.graphics.drawable.Drawable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListAdapter;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.StringRes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Represents a dlaig usable as a context menu for various elements.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1NTI2NQ==", "bodyText": "will be fixed", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495055265", "createdAt": "2020-09-25T15:12:17Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/ui/dialog/ContextMenuDialog.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package cgeo.geocaching.ui.dialog;\n+\n+import cgeo.geocaching.utils.CollectionStream;\n+import cgeo.geocaching.utils.functions.Action1;\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.graphics.Rect;\n+import android.graphics.drawable.Drawable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListAdapter;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.StringRes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Represents a dlaig usable as a context menu for various elements.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxODM0NA=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODI5ODIwOnYy", "diffSide": "RIGHT", "path": "tests/src-android/cgeo/geocaching/storage/DataStoreTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyMDo0MFrOHYFu1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToxMTo0MFrOHYHwHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMTc4Mg==", "bodyText": "Seems like it was done, is todo still valid?", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495021782", "createdAt": "2020-09-25T14:20:40Z", "author": {"login": "okainov"}, "path": "tests/src-android/cgeo/geocaching/storage/DataStoreTest.java", "diffHunk": "@@ -178,6 +181,22 @@ public static void testLoadLogsFromEmptyGeocode() {\n         assertThat(logs).as(\"Logs for empty geocode\").isEmpty();\n     }\n \n+    public static void testLog() {\n+        //ensure that we don't overwrite anything in database before starting this test\n+        DataStore.removeCache(ARTIFICIAL_GEOCODE, REMOVE_ALL);\n+        assertThat(DataStore.loadLogs(ARTIFICIAL_GEOCODE)).isEmpty();\n+\n+        //TODO: create some logs, try to reload them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1NDg3OQ==", "bodyText": "correct, will be removed", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495054879", "createdAt": "2020-09-25T15:11:40Z", "author": {"login": "eddiemuc"}, "path": "tests/src-android/cgeo/geocaching/storage/DataStoreTest.java", "diffHunk": "@@ -178,6 +181,22 @@ public static void testLoadLogsFromEmptyGeocode() {\n         assertThat(logs).as(\"Logs for empty geocode\").isEmpty();\n     }\n \n+    public static void testLog() {\n+        //ensure that we don't overwrite anything in database before starting this test\n+        DataStore.removeCache(ARTIFICIAL_GEOCODE, REMOVE_ALL);\n+        assertThat(DataStore.loadLogs(ARTIFICIAL_GEOCODE)).isEmpty();\n+\n+        //TODO: create some logs, try to reload them", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMTc4Mg=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODMwMjg2OnYy", "diffSide": "RIGHT", "path": "tests/src/cgeo/geocaching/connector/gc/GCUtilsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyMTo0NVrOHYFx2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToxMTowMVrOHYHulg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMjU1Mg==", "bodyText": "typo, same in other places", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495022552", "createdAt": "2020-09-25T14:21:45Z", "author": {"login": "okainov"}, "path": "tests/src/cgeo/geocaching/connector/gc/GCUtilsTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package cgeo.geocaching.connector.gc;\n+\n+import org.junit.Test;\n+import static org.assertj.core.api.Java6Assertions.assertThat;\n+\n+public class GCUtilsTest {\n+\n+    @Test\n+    public void gcCodesNormal() {\n+        testGcCodeRoundtrip(\"GC2MEGA\", 2045702);\n+        testGcCodeRoundtrip(\"GC1PKK9\", 1186660);\n+        testGcCodeRoundtrip(\"GC1234\", 4660);\n+        testGcCodeRoundtrip(\"GCF123\", 61731);\n+\n+        //following line is of no use, simply to pass Codacy (which requires an assert per unit test DIRECLTY in test method...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1NDQ4Ng==", "bodyText": "will be fixed", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495054486", "createdAt": "2020-09-25T15:11:01Z", "author": {"login": "eddiemuc"}, "path": "tests/src/cgeo/geocaching/connector/gc/GCUtilsTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package cgeo.geocaching.connector.gc;\n+\n+import org.junit.Test;\n+import static org.assertj.core.api.Java6Assertions.assertThat;\n+\n+public class GCUtilsTest {\n+\n+    @Test\n+    public void gcCodesNormal() {\n+        testGcCodeRoundtrip(\"GC2MEGA\", 2045702);\n+        testGcCodeRoundtrip(\"GC1PKK9\", 1186660);\n+        testGcCodeRoundtrip(\"GC1234\", 4660);\n+        testGcCodeRoundtrip(\"GCF123\", 61731);\n+\n+        //following line is of no use, simply to pass Codacy (which requires an assert per unit test DIRECLTY in test method...)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMjU1Mg=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODMxNjUyOnYy", "diffSide": "RIGHT", "path": "main/src/cgeo/geocaching/connector/su/SuParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoyNDo1OVrOHYF6QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToxMDowOVrOHYHsnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyNDcwNQ==", "bodyText": "What about simple test for it?", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495024705", "createdAt": "2020-09-25T14:24:59Z", "author": {"login": "okainov"}, "path": "main/src/cgeo/geocaching/connector/su/SuParser.java", "diffHunk": "@@ -260,6 +261,7 @@ private static void parseDescription(final StringBuilder descriptionBuilder, fin\n             final boolean isOwnLog = logResponse.has(LOG_OWN) && logResponse.get(LOG_OWN).asInt() == 1;\n \n             final LogEntry log = new LogEntry.Builder()\n+                    .setServiceLogId(logResponse.get(LOG_ID).asText().trim())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA1Mzk4MA==", "bodyText": "Good idea, will add it to SuParserTest", "url": "https://github.com/cgeo/cgeo/pull/9065#discussion_r495053980", "createdAt": "2020-09-25T15:10:09Z", "author": {"login": "eddiemuc"}, "path": "main/src/cgeo/geocaching/connector/su/SuParser.java", "diffHunk": "@@ -260,6 +261,7 @@ private static void parseDescription(final StringBuilder descriptionBuilder, fin\n             final boolean isOwnLog = logResponse.has(LOG_OWN) && logResponse.get(LOG_OWN).asInt() == 1;\n \n             final LogEntry log = new LogEntry.Builder()\n+                    .setServiceLogId(logResponse.get(LOG_ID).asText().trim())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyNDcwNQ=="}, "originalCommit": {"oid": "6e8e79aa12df3b9c12d9c3e5a1c2dbb5fff70985"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1779, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}