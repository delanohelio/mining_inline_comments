{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzc5NTAx", "number": 5795, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjoyMDowN1rOEUxruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozODowNFrOEVnR0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjIwOTg0OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjoyMDowN1rOG7Kjgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo0MjozMFrOG7LA4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5MjA5OA==", "bodyText": "This will break ST_Union. Can we first look up with original function name, and if not found, replace _ then?", "url": "https://github.com/apache/pinot/pull/5795#discussion_r464692098", "createdAt": "2020-08-03T22:20:07Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean isOfType(AggregationFunctionType... aggregationFunctionTypes) {\n    * Returns the corresponding aggregation function type for the given function name.\n    */\n   public static AggregationFunctionType getAggregationFunctionType(String functionName) {\n-    String upperCaseFunctionName = functionName.toUpperCase();\n+    String upperCaseFunctionName = functionName.toUpperCase().replace(\"_\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04e537e44af257739aff439f0ea009261b47dd4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5OTYxOQ==", "bodyText": "will do that", "url": "https://github.com/apache/pinot/pull/5795#discussion_r464699619", "createdAt": "2020-08-03T22:42:30Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean isOfType(AggregationFunctionType... aggregationFunctionTypes) {\n    * Returns the corresponding aggregation function type for the given function name.\n    */\n   public static AggregationFunctionType getAggregationFunctionType(String functionName) {\n-    String upperCaseFunctionName = functionName.toUpperCase();\n+    String upperCaseFunctionName = functionName.toUpperCase().replace(\"_\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5MjA5OA=="}, "originalCommit": {"oid": "c04e537e44af257739aff439f0ea009261b47dd4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY3NTkxOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNjo0NFrOG702LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNjo0NFrOG702LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTAwNA==", "bodyText": "This won't cover functions such as percentile_tdigest.\nWe can make the current one a private helper method, and add a new getAggregationFunctionType to look up for both functionName with/without underscore", "url": "https://github.com/apache/pinot/pull/5795#discussion_r465385004", "createdAt": "2020-08-04T23:26:44Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "diffHunk": "@@ -101,6 +101,13 @@ public static AggregationFunctionType getAggregationFunctionType(String function\n       try {\n         return AggregationFunctionType.valueOf(upperCaseFunctionName);\n       } catch (Exception e) {\n+        if (upperCaseFunctionName.contains(\"_\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b1912cf23a6b2351b6874dab1577d5ac5609ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY3ODEyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNzo0N1rOG703cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNzo0N1rOG703cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTMyOQ==", "bodyText": "Same here", "url": "https://github.com/apache/pinot/pull/5795#discussion_r465385329", "createdAt": "2020-08-04T23:27:47Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -106,7 +106,7 @@ public static AggregationFunction getAggregationFunction(FunctionContext functio\n         }\n         throw new IllegalArgumentException(\"Invalid percentile function: \" + function);\n       } else {\n-        switch (AggregationFunctionType.valueOf(upperCaseFunctionName)) {\n+        switch (AggregationFunctionType.getAggregationFunctionType(upperCaseFunctionName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b1912cf23a6b2351b6874dab1577d5ac5609ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY4MzQ2OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzozMDoyMFrOG706nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzozMDoyMFrOG706nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NjE0Mw==", "bodyText": "Check if it contains underscore before the second lookup for performance", "url": "https://github.com/apache/pinot/pull/5795#discussion_r465386143", "createdAt": "2020-08-04T23:30:20Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/AggregationFunctionType.java", "diffHunk": "@@ -101,6 +101,13 @@ public static AggregationFunctionType getAggregationFunctionType(String function\n       try {\n         return AggregationFunctionType.valueOf(upperCaseFunctionName);\n       } catch (Exception e) {\n+        if (upperCaseFunctionName.contains(\"_\")) {\n+          try {\n+            return AggregationFunctionType.valueOf(upperCaseFunctionName.replace(\"_\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b1912cf23a6b2351b6874dab1577d5ac5609ee"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDk5MDg5OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozODowNFrOG8eLbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo1MDozNVrOG8fakg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjE4OQ==", "bodyText": "Why do we have to do upperCase again?\nAggregationFunctionType is an enum so getName() should return upper case right?", "url": "https://github.com/apache/pinot/pull/5795#discussion_r466062189", "createdAt": "2020-08-05T23:38:04Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -45,10 +45,12 @@ private AggregationFunctionFactory() {\n   public static AggregationFunction getAggregationFunction(FunctionContext function, QueryContext queryContext) {\n     try {\n       String upperCaseFunctionName = function.getFunctionName().toUpperCase();\n+      AggregationFunctionType aggregationFunctionType =\n+          AggregationFunctionType.getAggregationFunctionType(upperCaseFunctionName);\n       List<ExpressionContext> arguments = function.getArguments();\n       ExpressionContext firstArgument = arguments.get(0);\n-      if (upperCaseFunctionName.startsWith(\"PERCENTILE\")) {\n-        String remainingFunctionName = upperCaseFunctionName.substring(10);\n+      if (aggregationFunctionType.getName().toUpperCase().startsWith(\"PERCENTILE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89120991952a9e86086ef465a9a567b81879f7ad"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MTM2Ng==", "bodyText": "We defined enums as:\n  PERCENTILEMV(\"percentileMV\"),\n  PERCENTILEESTMV(\"percentileEstMV\"),\n  PERCENTILETDIGESTMV(\"percentileTDigestMV\"),", "url": "https://github.com/apache/pinot/pull/5795#discussion_r466071366", "createdAt": "2020-08-06T00:09:41Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -45,10 +45,12 @@ private AggregationFunctionFactory() {\n   public static AggregationFunction getAggregationFunction(FunctionContext function, QueryContext queryContext) {\n     try {\n       String upperCaseFunctionName = function.getFunctionName().toUpperCase();\n+      AggregationFunctionType aggregationFunctionType =\n+          AggregationFunctionType.getAggregationFunctionType(upperCaseFunctionName);\n       List<ExpressionContext> arguments = function.getArguments();\n       ExpressionContext firstArgument = arguments.get(0);\n-      if (upperCaseFunctionName.startsWith(\"PERCENTILE\")) {\n-        String remainingFunctionName = upperCaseFunctionName.substring(10);\n+      if (aggregationFunctionType.getName().toUpperCase().startsWith(\"PERCENTILE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjE4OQ=="}, "originalCommit": {"oid": "89120991952a9e86086ef465a9a567b81879f7ad"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MjQ1MA==", "bodyText": ".name() will return upper case though :-P", "url": "https://github.com/apache/pinot/pull/5795#discussion_r466082450", "createdAt": "2020-08-06T00:50:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -45,10 +45,12 @@ private AggregationFunctionFactory() {\n   public static AggregationFunction getAggregationFunction(FunctionContext function, QueryContext queryContext) {\n     try {\n       String upperCaseFunctionName = function.getFunctionName().toUpperCase();\n+      AggregationFunctionType aggregationFunctionType =\n+          AggregationFunctionType.getAggregationFunctionType(upperCaseFunctionName);\n       List<ExpressionContext> arguments = function.getArguments();\n       ExpressionContext firstArgument = arguments.get(0);\n-      if (upperCaseFunctionName.startsWith(\"PERCENTILE\")) {\n-        String remainingFunctionName = upperCaseFunctionName.substring(10);\n+      if (aggregationFunctionType.getName().toUpperCase().startsWith(\"PERCENTILE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjE4OQ=="}, "originalCommit": {"oid": "89120991952a9e86086ef465a9a567b81879f7ad"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}