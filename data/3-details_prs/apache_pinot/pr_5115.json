{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDM4Mzc3", "number": 5115, "title": "Refactor the data source to include all information needed for query execution", "bodyText": "Currently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source.", "createdAt": "2020-03-05T02:51:00Z", "url": "https://github.com/apache/pinot/pull/5115", "merged": true, "mergeCommit": {"oid": "3e451e7b87bb18592eeb0e97fdd2b0b6fdf43908"}, "closed": true, "closedAt": "2020-03-11T01:08:21Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKwze2AFqTM2OTgzODg3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMYXSiABqjMxMTYyOTExNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODM4ODcx", "url": "https://github.com/apache/pinot/pull/5115#pullrequestreview-369838871", "createdAt": "2020-03-05T19:10:36Z", "commit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOToxMDozNlrOFygVcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOToyNzo0NlrOFyg9ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwMjg5OQ==", "bodyText": "might as well throw exception instead of returning an undefined value and getting an undefined behavior?", "url": "https://github.com/apache/pinot/pull/5115#discussion_r388502899", "createdAt": "2020-03-05T19:10:36Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/common/DataSourceMetadata.java", "diffHunk": "@@ -18,24 +18,79 @@\n  */\n package org.apache.pinot.core.common;\n \n-import org.apache.pinot.spi.data.FieldSpec.DataType;\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.apache.pinot.core.data.partition.PartitionFunction;\n+import org.apache.pinot.spi.data.FieldSpec;\n \n \n+/**\n+ * The {@code DataSourceMetadata} class contains all the metadata for a column for query execution purpose.\n+ */\n public interface DataSourceMetadata {\n \n-  DataType getDataType();\n+  /**\n+   * Returns the field spec of the column.\n+   */\n+  FieldSpec getFieldSpec();\n+\n+  /**\n+   * Returns the data type of the column.\n+   */\n+  default FieldSpec.DataType getDataType() {\n+    return getFieldSpec().getDataType();\n+  }\n \n-  boolean isSingleValue();\n+  /**\n+   * Returns {@code true} if the column is single-valued, {@code false} otherwise.\n+   */\n+  default boolean isSingleValue() {\n+    return getFieldSpec().isSingleValueField();\n+  }\n \n+  /**\n+   * Returns {@code true} if the column is sorted, {@code false} otherwise.\n+   */\n   boolean isSorted();\n \n+  /**\n+   * Returns the number of documents of the column.\n+   */\n   int getNumDocs();\n \n-  int getMaxNumMultiValues();\n+  /**\n+   * Returns the number of values of the column. For single-value column, number of values always equals to number of\n+   * documents; for multi-value column, each document (multi-value entry) may contain multiple values.\n+   */\n+  int getNumValues();\n+\n+  /**\n+   * Returns the maximum number of values for each multi-value entry of the multi-value column. For single-value column,\n+   * the value is undefined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzE4Nw==", "bodyText": "Can we re-use the NumValuesInfo object instance by adding a clear method? I know we have been really careful about minimizing gc impact in this path.", "url": "https://github.com/apache/pinot/pull/5115#discussion_r388513187", "createdAt": "2020-03-05T19:27:46Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImpl.java", "diffHunk": "@@ -188,7 +197,7 @@ public long getLatestIngestionTimestamp() {\n     // Initialize for each column\n     for (FieldSpec fieldSpec : _physicalFieldSpecs) {\n       String column = fieldSpec.getName();\n-      _maxNumValuesMap.put(column, 0);\n+      _numValuesInfoMap.put(column, new NumValuesInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODY2NDQy", "url": "https://github.com/apache/pinot/pull/5115#pullrequestreview-369866442", "createdAt": "2020-03-05T19:51:09Z", "commit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo1MTowOVrOFyhvaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo1MTowOVrOFyhvaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUyNTkyOA==", "bodyText": "Javadoc should indicate this is per column", "url": "https://github.com/apache/pinot/pull/5115#discussion_r388525928", "createdAt": "2020-03-05T19:51:09Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/datasource/ImmutableDataSource.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.segment.index.datasource;\n+\n+import java.util.Set;\n+import javax.annotation.Nullable;\n+import org.apache.pinot.core.common.DataSourceMetadata;\n+import org.apache.pinot.core.data.partition.PartitionFunction;\n+import org.apache.pinot.core.segment.index.ColumnMetadata;\n+import org.apache.pinot.core.segment.index.column.ColumnIndexContainer;\n+import org.apache.pinot.spi.data.FieldSpec;\n+\n+\n+public class ImmutableDataSource extends BaseDataSource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd7ec3dcae6200dff12a62b1467731b9dfef2455", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/cd7ec3dcae6200dff12a62b1467731b9dfef2455", "committedDate": "2020-03-05T02:44:15Z", "message": "Refactor the data source to include all information needed for query execution\n\nCurrently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\n\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source."}, "afterCommit": {"oid": "a55046c4dea46aa3a1c4ef1dbff0b36d7cd64ba2", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a55046c4dea46aa3a1c4ef1dbff0b36d7cd64ba2", "committedDate": "2020-03-10T19:46:07Z", "message": "Refactor the data source to include all information needed for query execution\n\nCurrently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\n\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04db46166b7743bf1120b15e6ee994dc0c835f8e", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/04db46166b7743bf1120b15e6ee994dc0c835f8e", "committedDate": "2020-03-10T20:16:03Z", "message": "Refactor the data source to include all information needed for query execution\n\nCurrently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\n\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a55046c4dea46aa3a1c4ef1dbff0b36d7cd64ba2", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a55046c4dea46aa3a1c4ef1dbff0b36d7cd64ba2", "committedDate": "2020-03-10T19:46:07Z", "message": "Refactor the data source to include all information needed for query execution\n\nCurrently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\n\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source."}, "afterCommit": {"oid": "04db46166b7743bf1120b15e6ee994dc0c835f8e", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/04db46166b7743bf1120b15e6ee994dc0c835f8e", "committedDate": "2020-03-10T20:16:03Z", "message": "Refactor the data source to include all information needed for query execution\n\nCurrently query execution engine uses metadata from both data source\nand column metadata to process the segment. It works fine for\nimmutable segment, but for mutable segment (real-time consuming\nsegment), column metadata does not exist, thus multiple features such\nas segment pruning cannot be applied to the mutable segment.\n\nThis PR adds the missing metadata from column metadata into the data\nsource so that they become accessible for mutable segment, e.g.\nmin/max value, partition info. Next PR will switch the engine to work\npurely on data source."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1341, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}