{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDYwNzQ0", "number": 5320, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoxOTozOVrOD4J9OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoyNzoyMVrOD4KHDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjA5OTc3OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoxOTozOVrOGO1C9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoxOTozOVrOGO1C9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwMjM1OQ==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    _logger.warn(\"Metrics aggregation cannot be turned ON in presence of no-dictionary datetime columns, eg: {}\",\n          \n          \n            \n                    _logger.warn(\"Metrics aggregation cannot be turned on in presence of no-dictionary datetime columns, eg: {}\",", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418202359", "createdAt": "2020-04-30T18:19:39Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImpl.java", "diffHunk": "@@ -860,6 +876,17 @@ private int getOrCreateDocId(Map<String, Object> dictIdMap) {\n       }\n     }\n \n+    // Date time columns should be dictionary encoded.\n+    for (FieldSpec fieldSpec : _physicalDateTimeFieldSpecs) {\n+      String dateTimeColumn = fieldSpec.getName();\n+      if (noDictionaryColumns.contains(dateTimeColumn)) {\n+        _logger.warn(\"Metrics aggregation cannot be turned ON in presence of no-dictionary datetime columns, eg: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjEwNzQ2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/minion/SegmentPurger.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoyMTo1N1rOGO1H-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDowNzo0MVrOGO-b2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwMzY0MQ==", "bodyText": "create an  issue for this and add the issue number here?", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418203641", "createdAt": "2020-04-30T18:21:57Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/minion/SegmentPurger.java", "diffHunk": "@@ -85,7 +85,10 @@ public File purgeSegment()\n       }\n \n       Schema schema = purgeRecordReader.getSchema();\n-      SegmentGeneratorConfig config = new SegmentGeneratorConfig(schema);\n+      // FIXME: figure out how to get table config here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzODAwNQ==", "bodyText": "Was able to fix it. please take a look", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418238005", "createdAt": "2020-04-30T19:25:49Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/minion/SegmentPurger.java", "diffHunk": "@@ -85,7 +85,10 @@ public File purgeSegment()\n       }\n \n       Schema schema = purgeRecordReader.getSchema();\n-      SegmentGeneratorConfig config = new SegmentGeneratorConfig(schema);\n+      // FIXME: figure out how to get table config here.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwMzY0MQ=="}, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NjE4Nw==", "bodyText": "As per offline discussion with @Jackie-Jiang  removing the timeColumnName from SegmentPurger for now. He will be working on a fix to make TableConfig available to SegmentPurger very soon.", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418356187", "createdAt": "2020-05-01T00:07:41Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/minion/SegmentPurger.java", "diffHunk": "@@ -85,7 +85,10 @@ public File purgeSegment()\n       }\n \n       Schema schema = purgeRecordReader.getSchema();\n-      SegmentGeneratorConfig config = new SegmentGeneratorConfig(schema);\n+      // FIXME: figure out how to get table config here.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwMzY0MQ=="}, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjEyNDk1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/converter/RealtimeSegmentConverter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODoyNzoyMVrOGO1TWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDo1MjowMlrOGO55Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjU1NQ==", "bodyText": "remove the  the other unneeded arguments as well (tableName, sortedColumn, inv index columns, text index columnms, etc.). Another PR is also fine", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418206555", "createdAt": "2020-04-30T18:27:21Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/converter/RealtimeSegmentConverter.java", "diffHunk": "@@ -35,114 +35,116 @@\n import org.apache.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl;\n import org.apache.pinot.spi.config.table.ColumnPartitionConfig;\n import org.apache.pinot.spi.config.table.SegmentPartitionConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n import org.apache.pinot.spi.data.FieldSpec;\n import org.apache.pinot.spi.data.Schema;\n import org.apache.pinot.spi.data.TimeFieldSpec;\n import org.apache.pinot.spi.data.TimeGranularitySpec;\n \n \n public class RealtimeSegmentConverter {\n-  private MutableSegmentImpl realtimeSegmentImpl;\n-  private String outputPath;\n-  private Schema dataSchema;\n-  private String tableName;\n-  private String timeColumnName;\n-  private String segmentName;\n-  private String sortedColumn;\n-  private List<String> invertedIndexColumns;\n-  private List<String> textIndexColumns;\n-  private List<String> noDictionaryColumns;\n-  private List<String> varLengthDictionaryColumns;\n+  private MutableSegmentImpl _realtimeSegmentImpl;\n+  private final String _outputPath;\n+  private final Schema _dataSchema;\n+  private final String _tableName;\n+  private final TableConfig _tableConfig;\n+  private final String _segmentName;\n+  private final String _sortedColumn;\n+  private final List<String> _invertedIndexColumns;\n+  private final List<String> _textIndexColumns;\n+  private final List<String> _noDictionaryColumns;\n+  private final List<String> _varLengthDictionaryColumns;\n   private final boolean _nullHandlingEnabled;\n \n   public RealtimeSegmentConverter(MutableSegmentImpl realtimeSegment, String outputPath, Schema schema,\n-      String tableName, String timeColumnName, String segmentName, String sortedColumn,\n+      String tableName, TableConfig tableConfig, String segmentName, String sortedColumn,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzODE5OQ==", "bodyText": "All the others are being used to set into the SegmentGeneratorConfig", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418238199", "createdAt": "2020-04-30T19:26:11Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/converter/RealtimeSegmentConverter.java", "diffHunk": "@@ -35,114 +35,116 @@\n import org.apache.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl;\n import org.apache.pinot.spi.config.table.ColumnPartitionConfig;\n import org.apache.pinot.spi.config.table.SegmentPartitionConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n import org.apache.pinot.spi.data.FieldSpec;\n import org.apache.pinot.spi.data.Schema;\n import org.apache.pinot.spi.data.TimeFieldSpec;\n import org.apache.pinot.spi.data.TimeGranularitySpec;\n \n \n public class RealtimeSegmentConverter {\n-  private MutableSegmentImpl realtimeSegmentImpl;\n-  private String outputPath;\n-  private Schema dataSchema;\n-  private String tableName;\n-  private String timeColumnName;\n-  private String segmentName;\n-  private String sortedColumn;\n-  private List<String> invertedIndexColumns;\n-  private List<String> textIndexColumns;\n-  private List<String> noDictionaryColumns;\n-  private List<String> varLengthDictionaryColumns;\n+  private MutableSegmentImpl _realtimeSegmentImpl;\n+  private final String _outputPath;\n+  private final Schema _dataSchema;\n+  private final String _tableName;\n+  private final TableConfig _tableConfig;\n+  private final String _segmentName;\n+  private final String _sortedColumn;\n+  private final List<String> _invertedIndexColumns;\n+  private final List<String> _textIndexColumns;\n+  private final List<String> _noDictionaryColumns;\n+  private final List<String> _varLengthDictionaryColumns;\n   private final boolean _nullHandlingEnabled;\n \n   public RealtimeSegmentConverter(MutableSegmentImpl realtimeSegment, String outputPath, Schema schema,\n-      String tableName, String timeColumnName, String segmentName, String sortedColumn,\n+      String tableName, TableConfig tableConfig, String segmentName, String sortedColumn,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjU1NQ=="}, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1OTU3Ng==", "bodyText": "But they can be derived from TableConfig?", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418259576", "createdAt": "2020-04-30T20:08:55Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/converter/RealtimeSegmentConverter.java", "diffHunk": "@@ -35,114 +35,116 @@\n import org.apache.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl;\n import org.apache.pinot.spi.config.table.ColumnPartitionConfig;\n import org.apache.pinot.spi.config.table.SegmentPartitionConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n import org.apache.pinot.spi.data.FieldSpec;\n import org.apache.pinot.spi.data.Schema;\n import org.apache.pinot.spi.data.TimeFieldSpec;\n import org.apache.pinot.spi.data.TimeGranularitySpec;\n \n \n public class RealtimeSegmentConverter {\n-  private MutableSegmentImpl realtimeSegmentImpl;\n-  private String outputPath;\n-  private Schema dataSchema;\n-  private String tableName;\n-  private String timeColumnName;\n-  private String segmentName;\n-  private String sortedColumn;\n-  private List<String> invertedIndexColumns;\n-  private List<String> textIndexColumns;\n-  private List<String> noDictionaryColumns;\n-  private List<String> varLengthDictionaryColumns;\n+  private MutableSegmentImpl _realtimeSegmentImpl;\n+  private final String _outputPath;\n+  private final Schema _dataSchema;\n+  private final String _tableName;\n+  private final TableConfig _tableConfig;\n+  private final String _segmentName;\n+  private final String _sortedColumn;\n+  private final List<String> _invertedIndexColumns;\n+  private final List<String> _textIndexColumns;\n+  private final List<String> _noDictionaryColumns;\n+  private final List<String> _varLengthDictionaryColumns;\n   private final boolean _nullHandlingEnabled;\n \n   public RealtimeSegmentConverter(MutableSegmentImpl realtimeSegment, String outputPath, Schema schema,\n-      String tableName, String timeColumnName, String segmentName, String sortedColumn,\n+      String tableName, TableConfig tableConfig, String segmentName, String sortedColumn,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjU1NQ=="}, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI4MTc4Nw==", "bodyText": "Oh i see. Maybe they can be. In LLRealtimeDataManager, they're being pulled from IndexLoadingConfig. In HLRealtimeDataManager, they're being used in other places other than RealtimeSegmentConverter. Will see if it can be done in a followup PR", "url": "https://github.com/apache/pinot/pull/5320#discussion_r418281787", "createdAt": "2020-04-30T20:52:02Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/converter/RealtimeSegmentConverter.java", "diffHunk": "@@ -35,114 +35,116 @@\n import org.apache.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl;\n import org.apache.pinot.spi.config.table.ColumnPartitionConfig;\n import org.apache.pinot.spi.config.table.SegmentPartitionConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n import org.apache.pinot.spi.data.FieldSpec;\n import org.apache.pinot.spi.data.Schema;\n import org.apache.pinot.spi.data.TimeFieldSpec;\n import org.apache.pinot.spi.data.TimeGranularitySpec;\n \n \n public class RealtimeSegmentConverter {\n-  private MutableSegmentImpl realtimeSegmentImpl;\n-  private String outputPath;\n-  private Schema dataSchema;\n-  private String tableName;\n-  private String timeColumnName;\n-  private String segmentName;\n-  private String sortedColumn;\n-  private List<String> invertedIndexColumns;\n-  private List<String> textIndexColumns;\n-  private List<String> noDictionaryColumns;\n-  private List<String> varLengthDictionaryColumns;\n+  private MutableSegmentImpl _realtimeSegmentImpl;\n+  private final String _outputPath;\n+  private final Schema _dataSchema;\n+  private final String _tableName;\n+  private final TableConfig _tableConfig;\n+  private final String _segmentName;\n+  private final String _sortedColumn;\n+  private final List<String> _invertedIndexColumns;\n+  private final List<String> _textIndexColumns;\n+  private final List<String> _noDictionaryColumns;\n+  private final List<String> _varLengthDictionaryColumns;\n   private final boolean _nullHandlingEnabled;\n \n   public RealtimeSegmentConverter(MutableSegmentImpl realtimeSegment, String outputPath, Schema schema,\n-      String tableName, String timeColumnName, String segmentName, String sortedColumn,\n+      String tableName, TableConfig tableConfig, String segmentName, String sortedColumn,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjU1NQ=="}, "originalCommit": {"oid": "553d75f82ece189f71d7ded8b7ae9b81155808c0"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}