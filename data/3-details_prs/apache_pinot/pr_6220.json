{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzODk2Mzcx", "number": 6220, "title": "Adding BootstrapTable command to allow bootstrapping a table from an example directory", "bodyText": "Description\nAdding support to bootstrap a Pinot table from a directory with table schema/config/ingestionJobSpec/raw data files.\nAlso moved all quickstart to use this command for bootstrap a table.\nThe purpose of this PR is to simplify the process for users to try out pinot quickstart. Users can simply modify the example pinot table directory to load their own table and data.\nSample usage:\npinot-admin.sh BootstrapTable -dir <path-to-table-configs>\n\nThe directory structure is based on current example conventions:\nFor offline table:\n<table_name>/\n<table_name>/<table_name>_schema.json\n<table_name>/<table_name>_offline_table_config.json\n<table_name>/ingestionJobSpec.yaml\n<table_name>/rawdata/...\n\nFor realtime table:\n<table_name>/\n<table_name>/<table_name>_schema.json\n<table_name>/<table_name>_realtime_table_config.json\n\nFor hybrid table:\n<table_name>/\n<table_name>/<table_name>_schema.json\n<table_name>/<table_name>_offline_table_config.json\n<table_name>/<table_name>_realtime_table_config.json\n<table_name>/ingestionJobSpec.yaml\n<table_name>/rawdata/...", "createdAt": "2020-11-02T08:41:34Z", "url": "https://github.com/apache/pinot/pull/6220", "merged": true, "mergeCommit": {"oid": "d19d604a4d007e06def26b41f50706ad485ea314"}, "closed": true, "closedAt": "2020-11-03T01:07:55Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYmBDxAFqTUyMTcwMzk2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYtb0iABqjM5NTA1NDUwNzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzAzOTY4", "url": "https://github.com/apache/pinot/pull/6220#pullrequestreview-521703968", "createdAt": "2020-11-02T14:57:12Z", "commit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDo1NzoxM1rOHsH43w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDo1OTozMFrOHsH_Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyODYzOQ==", "bodyText": "add a - after githubEvents", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516028639", "createdAt": "2020-11-02T14:57:13Z", "author": {"login": "kishoreg"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/GitHubEventsQuickstart.java", "diffHunk": "@@ -62,7 +62,7 @@ private void startKafka() {\n \n   public void execute(String personalAccessToken)\n       throws Exception {\n-    final File quickStartDataDir = new File(\"githubEvents\" + System.currentTimeMillis());\n+    final File quickStartDataDir = new File(new File(\"githubEvents\" + System.currentTimeMillis()), \"pullRequestMergedEvents\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyOTczMw==", "bodyText": "java docs, you can put the same content in the PR description", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516029733", "createdAt": "2020-11-02T14:58:47Z", "author": {"login": "kishoreg"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/BootstrapTableTool.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.ingestion.batch.IngestionJobLauncher;\n+import org.apache.pinot.spi.ingestion.batch.spec.SegmentGenerationJobSpec;\n+import org.apache.pinot.tools.admin.command.AddTableCommand;\n+import org.apache.pinot.tools.admin.command.QuickstartRunner;\n+import org.apache.pinot.tools.utils.JarUtils;\n+import org.yaml.snakeyaml.Yaml;\n+\n+\n+public class BootstrapTableTool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzMDI3NA==", "bodyText": "better to use logger here so that it can be used in other places?", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516030274", "createdAt": "2020-11-02T14:59:30Z", "author": {"login": "kishoreg"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/BootstrapTableTool.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.ingestion.batch.IngestionJobLauncher;\n+import org.apache.pinot.spi.ingestion.batch.spec.SegmentGenerationJobSpec;\n+import org.apache.pinot.tools.admin.command.AddTableCommand;\n+import org.apache.pinot.tools.admin.command.QuickstartRunner;\n+import org.apache.pinot.tools.utils.JarUtils;\n+import org.yaml.snakeyaml.Yaml;\n+\n+\n+public class BootstrapTableTool {\n+  private final String _controllerHost;\n+  private final int _controllerPort;\n+  private final String _tableDir;\n+\n+  public BootstrapTableTool(String controllerHost, int controllerPort, String tableDir) {\n+    _controllerHost = controllerHost;\n+    _controllerPort = controllerPort;\n+    _tableDir = tableDir;\n+  }\n+\n+  public boolean execute()\n+      throws Exception {\n+    File setupTableTmpDir = new File(FileUtils.getTempDirectory(), String.valueOf(System.currentTimeMillis()));\n+\n+    File tableDir = new File(_tableDir);\n+    String tableName = tableDir.getName();\n+    File schemaFile = new File(tableDir, String.format(\"%s_schema.json\", tableName));\n+    if (!schemaFile.exists()) {\n+      throw new RuntimeException(\n+          \"Unable to find schema file for table - \" + tableName + \", at \" + schemaFile.getAbsolutePath());\n+    }\n+    boolean tableCreationResult = false;\n+    File offlineTableConfigFile = new File(tableDir, String.format(\"%s_offline_table_config.json\", tableName));\n+    if (offlineTableConfigFile.exists()) {\n+      File ingestionJobSpecFile = new File(tableDir, \"ingestionJobSpec.yaml\");\n+      tableCreationResult =\n+          bootstrapOfflineTable(setupTableTmpDir, tableName, schemaFile, offlineTableConfigFile, ingestionJobSpecFile);\n+    }\n+    File realtimeTableConfigFile = new File(tableDir, String.format(\"%s_realtime_table_config.json\", tableName));\n+    if (realtimeTableConfigFile.exists()) {\n+      tableCreationResult = bootstrapRealtimeTable(tableName, schemaFile, realtimeTableConfigFile);\n+    }\n+    if (!tableCreationResult) {\n+      throw new RuntimeException(String\n+          .format(\"Unable to find config files for table - %s, at location [%s] or [%s].\", tableName,\n+              offlineTableConfigFile.getAbsolutePath(), realtimeTableConfigFile.getAbsolutePath()));\n+    }\n+    return true;\n+  }\n+\n+  private boolean bootstrapRealtimeTable(String tableName, File schemaFile, File realtimeTableConfigFile)\n+      throws Exception {\n+    Quickstart.printStatus(Quickstart.Color.CYAN, String.format(\"***** Adding %s realtime table *****\", tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODkxNjE5", "url": "https://github.com/apache/pinot/pull/6220#pullrequestreview-521891619", "createdAt": "2020-11-02T18:28:27Z", "commit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoyODoyOFrOHsQxiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoyODoyOFrOHsQxiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDIxNg==", "bodyText": "this change is not right?", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516174216", "createdAt": "2020-11-02T18:28:28Z", "author": {"login": "yupeng9"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/UpsertQuickStart.java", "diffHunk": "@@ -48,13 +48,12 @@ public static void main(String[] args)\n   public void execute()\n       throws Exception {\n     File quickstartTmpDir = new File(FileUtils.getTempDirectory(), String.valueOf(System.currentTimeMillis()));\n-    File configDir = new File(quickstartTmpDir, \"configs\");\n-    File dataDir = new File(quickstartTmpDir, \"data\");\n-    Preconditions.checkState(configDir.mkdirs());\n+    File bootstrapTableDir = new File(quickstartTmpDir, \"meetupRsvp\");\n+    File dataDir = new File(bootstrapTableDir, \"data\");\n     Preconditions.checkState(dataDir.mkdirs());\n \n-    File schemaFile = new File(configDir, \"upsert_meetupRsvp_schema.json\");\n-    File tableConfigFile = new File(configDir, \"upsert_meetupRsvp_realtime_table_config.json\");\n+    File schemaFile = new File(bootstrapTableDir, \"meetupRsvp_schema.json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTExMTQ2", "url": "https://github.com/apache/pinot/pull/6220#pullrequestreview-521911146", "createdAt": "2020-11-02T18:57:09Z", "commit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODo1NzowOVrOHsRtLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOTowMDowN1rOHsRzSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4OTQ4NA==", "bodyText": "+1", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516189484", "createdAt": "2020-11-02T18:57:09Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/BootstrapTableTool.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.ingestion.batch.IngestionJobLauncher;\n+import org.apache.pinot.spi.ingestion.batch.spec.SegmentGenerationJobSpec;\n+import org.apache.pinot.tools.admin.command.AddTableCommand;\n+import org.apache.pinot.tools.admin.command.QuickstartRunner;\n+import org.apache.pinot.tools.utils.JarUtils;\n+import org.yaml.snakeyaml.Yaml;\n+\n+\n+public class BootstrapTableTool {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyOTczMw=="}, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5MTA1MA==", "bodyText": "Users may not have all data/configs within a directory structure. They can definitely create soft links. However, does it make sense to also provide other flags (mutually exclusive with this flag) such as -dataDir, -tableConfig, etc?", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516191050", "createdAt": "2020-11-02T19:00:07Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/BootstrapTableCommand.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.admin.command;\n+\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.tools.Command;\n+import org.apache.pinot.tools.BootstrapTableTool;\n+import org.kohsuke.args4j.Option;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+public class BootstrapTableCommand extends AbstractBaseAdminCommand implements Command {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(BootstrapTableCommand.class.getName());\n+\n+  @Option(name = \"-controllerHost\", required = false, metaVar = \"<String>\", usage = \"host name for controller.\")\n+  private String _controllerHost;\n+\n+  @Option(name = \"-controllerPort\", required = false, metaVar = \"<int>\", usage = \"http port for broker.\")\n+  private final String _controllerPort = DEFAULT_CONTROLLER_PORT;\n+\n+  @Option(name = \"-dir\", required = false, aliases = {\"-d\", \"-directory\"}, metaVar = \"<String>\", usage = \"The directory contains all the configs and data to bootstrap a table\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c59f79d76460058760c944bfaf70b2843b5db00a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/c59f79d76460058760c944bfaf70b2843b5db00a", "committedDate": "2020-11-02T23:47:20Z", "message": "Adding bootstrap table command and move quickstart to use it"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21d34dc499a187273e001744c28dd5096e49cef9", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/21d34dc499a187273e001744c28dd5096e49cef9", "committedDate": "2020-11-02T08:36:19Z", "message": "Adding bootstrap table command and move quickstart to use it"}, "afterCommit": {"oid": "c59f79d76460058760c944bfaf70b2843b5db00a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/c59f79d76460058760c944bfaf70b2843b5db00a", "committedDate": "2020-11-02T23:47:20Z", "message": "Adding bootstrap table command and move quickstart to use it"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1723, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}