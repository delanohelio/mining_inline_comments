{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjQzNjY0", "number": 5926, "title": "Introduce IdSet and add IdSetAggregationFunction", "bodyText": "Description\nFor issue #5925\nIntroduce IdSet which represents a collection of ids and can be used to replace the large IN clause to optimize the query.\n4 types of IdSet are introduced:\n\nEmptyIdSet: Used as a place holder for empty id set\nRoaringBitmapIdSet: Based on RoaringBitmap and can be used to store INT ids\nRoaring64NavigableMapIdSet: Based on Roaring64NavigableMap and can be used to store LONG ids\nBloomFilterIdSet: Based on BloomFilter and can be used to store any type of ids (contains won't be 100% accurate because of the nature of BloomFilter)\n\nAdd IdSetAggregationFunction to create IdSet for a column.\n3 configurable parameters for the function:\n\nsizeThresholdInBytes: Once the size of the IdSet reaches this threshold, convert it to BloomFilterIdSet to save space\nexpectedInsertions: Number of expected insertions for the BloomFilter, must be positive\nfpp: Desired false positive probability for the BloomFilter, must be positive and less than 1.0\n\nThe parameters can be passed to the function as the second argument, e.g.:\nSELECT IDSET(intColumn, 'sizeThresholdInBytes=1000;expectedInsertions=1000;fpp=0.03') FROM testTable\nBump up the version of RoaringBitmap to 0.9.0 to include some bug fixes for Roaring64NavigableMap.", "createdAt": "2020-08-26T04:53:47Z", "url": "https://github.com/apache/pinot/pull/5926", "merged": true, "mergeCommit": {"oid": "86a01ff6da71e433a29f26db5c3a586fa57e7ea7"}, "closed": true, "closedAt": "2020-08-31T18:35:28Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCkuPBAFqTQ3NTE1MzM0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDaeDdABqjM3MDU0MjE0ODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTUzMzQ3", "url": "https://github.com/apache/pinot/pull/5926#pullrequestreview-475153347", "createdAt": "2020-08-26T05:06:52Z", "commit": {"oid": "de6eee3535d9aac026f3cd3f64465c68bac740a0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNTowNjo1MlrOHG7_2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNToxMTo1OFrOHG8FGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAzNjUwNQ==", "bodyText": "Do you think this constructor is the only thing we need? If not, We should make this private and add static builders", "url": "https://github.com/apache/pinot/pull/5926#discussion_r477036505", "createdAt": "2020-08-26T05:06:52Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/utils/IdSet.java", "diffHunk": "@@ -0,0 +1,326 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.query.utils;\n+\n+import com.google.common.base.Preconditions;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.Base64;\n+import java.util.Objects;\n+import javax.annotation.Nullable;\n+import org.apache.pinot.spi.data.FieldSpec.DataType;\n+import org.roaringbitmap.RoaringBitmap;\n+import org.roaringbitmap.longlong.Roaring64NavigableMap;\n+\n+\n+/**\n+ * The {@code IdSet} represents a collection of ids. It can be used to optimize the query with huge IN clause.\n+ */\n+public class IdSet implements Comparable<IdSet> {\n+  public static final IdSet EMPTY_ID_SET = new IdSet(Type.EMPTY, null, null);\n+\n+  // Throw exception when the serialized IdSet is exceeding this threshold (32MB)\n+  private static final int MAX_SIZE_IN_BYTES = 32 * 1024 * 1024;\n+\n+  private enum Type {\n+    // DO NOT change the index of the types as the ser/de relies on them\n+    EMPTY(0), ROARING_BITMAP(1), ROARING_64_NAVIGABLE_MAP(2);\n+\n+    private final int _index;\n+\n+    Type(int index) {\n+      _index = index;\n+    }\n+  }\n+\n+  private final Type _type;\n+  private final RoaringBitmap _bitmap;\n+  private final Roaring64NavigableMap _longBitmap;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6eee3535d9aac026f3cd3f64465c68bac740a0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAzNzg0OQ==", "bodyText": "Let\u2019s make this an interface with multiple implementations?", "url": "https://github.com/apache/pinot/pull/5926#discussion_r477037849", "createdAt": "2020-08-26T05:11:58Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/utils/IdSet.java", "diffHunk": "@@ -0,0 +1,326 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.query.utils;\n+\n+import com.google.common.base.Preconditions;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.Base64;\n+import java.util.Objects;\n+import javax.annotation.Nullable;\n+import org.apache.pinot.spi.data.FieldSpec.DataType;\n+import org.roaringbitmap.RoaringBitmap;\n+import org.roaringbitmap.longlong.Roaring64NavigableMap;\n+\n+\n+/**\n+ * The {@code IdSet} represents a collection of ids. It can be used to optimize the query with huge IN clause.\n+ */\n+public class IdSet implements Comparable<IdSet> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6eee3535d9aac026f3cd3f64465c68bac740a0"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de6eee3535d9aac026f3cd3f64465c68bac740a0", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/de6eee3535d9aac026f3cd3f64465c68bac740a0", "committedDate": "2020-08-26T04:47:40Z", "message": "Add IdSet and IdSetAggregationFunction"}, "afterCommit": {"oid": "456de3419a4d24e73887c47c7a918a42fce3ade5", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/456de3419a4d24e73887c47c7a918a42fce3ade5", "committedDate": "2020-08-28T02:32:05Z", "message": "Add IdSet and IdSetAggregationFunction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "456de3419a4d24e73887c47c7a918a42fce3ade5", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/456de3419a4d24e73887c47c7a918a42fce3ade5", "committedDate": "2020-08-28T02:32:05Z", "message": "Add IdSet and IdSetAggregationFunction"}, "afterCommit": {"oid": "fab464fcfa250f92bee4e897c62b69976a5bc0db", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/fab464fcfa250f92bee4e897c62b69976a5bc0db", "committedDate": "2020-08-28T02:39:51Z", "message": "Add IdSet and IdSetAggregationFunction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MjQ3NDIx", "url": "https://github.com/apache/pinot/pull/5926#pullrequestreview-477247421", "createdAt": "2020-08-28T05:24:36Z", "commit": {"oid": "fab464fcfa250f92bee4e897c62b69976a5bc0db"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNToyNDozNlrOHIp4yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNToyNTo1OVrOHIp6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzNjkzNw==", "bodyText": "add a sample call", "url": "https://github.com/apache/pinot/pull/5926#discussion_r478836937", "createdAt": "2020-08-28T05:24:36Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/IdSetAggregationFunction.java", "diffHunk": "@@ -0,0 +1,339 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.query.aggregation.function;\n+\n+import com.google.common.base.Preconditions;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.pinot.common.function.AggregationFunctionType;\n+import org.apache.pinot.common.utils.DataSchema.ColumnDataType;\n+import org.apache.pinot.core.common.BlockValSet;\n+import org.apache.pinot.core.query.aggregation.AggregationResultHolder;\n+import org.apache.pinot.core.query.aggregation.ObjectAggregationResultHolder;\n+import org.apache.pinot.core.query.aggregation.groupby.GroupByResultHolder;\n+import org.apache.pinot.core.query.aggregation.groupby.ObjectGroupByResultHolder;\n+import org.apache.pinot.core.query.request.context.ExpressionContext;\n+import org.apache.pinot.core.query.utils.idset.IdSet;\n+import org.apache.pinot.core.query.utils.idset.IdSets;\n+import org.apache.pinot.spi.data.FieldSpec.DataType;\n+\n+\n+/**\n+ * The {@code IdSetAggregationFunction} collects the values for a given single-value expression into an IdSet, which can\n+ * be used in the second query to optimize the query with huge IN clause generated from another query.\n+ */\n+public class IdSetAggregationFunction extends BaseSingleInputAggregationFunction<IdSet, String> {\n+  public static final char PARAMETER_DELIMITER = ';';\n+  public static final char PARAMETER_KEY_VALUE_SEPARATOR = '=';\n+  public static final String SIZE_THRESHOLD_IN_BYTES_KEY = \"SIZETHRESHOLDINBYTES\";\n+  public static final String EXPECTED_INSERTIONS_KEY = \"EXPECTEDINSERTIONS\";\n+  public static final String FPP_KEY = \"FPP\";\n+\n+  private final int _sizeThresholdInBytes;\n+  private final int _expectedInsertions;\n+  private final double _fpp;\n+\n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab464fcfa250f92bee4e897c62b69976a5bc0db"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzNzMxMg==", "bodyText": "what are these? java docs", "url": "https://github.com/apache/pinot/pull/5926#discussion_r478837312", "createdAt": "2020-08-28T05:25:59Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/IdSetAggregationFunction.java", "diffHunk": "@@ -0,0 +1,339 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.query.aggregation.function;\n+\n+import com.google.common.base.Preconditions;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.pinot.common.function.AggregationFunctionType;\n+import org.apache.pinot.common.utils.DataSchema.ColumnDataType;\n+import org.apache.pinot.core.common.BlockValSet;\n+import org.apache.pinot.core.query.aggregation.AggregationResultHolder;\n+import org.apache.pinot.core.query.aggregation.ObjectAggregationResultHolder;\n+import org.apache.pinot.core.query.aggregation.groupby.GroupByResultHolder;\n+import org.apache.pinot.core.query.aggregation.groupby.ObjectGroupByResultHolder;\n+import org.apache.pinot.core.query.request.context.ExpressionContext;\n+import org.apache.pinot.core.query.utils.idset.IdSet;\n+import org.apache.pinot.core.query.utils.idset.IdSets;\n+import org.apache.pinot.spi.data.FieldSpec.DataType;\n+\n+\n+/**\n+ * The {@code IdSetAggregationFunction} collects the values for a given single-value expression into an IdSet, which can\n+ * be used in the second query to optimize the query with huge IN clause generated from another query.\n+ */\n+public class IdSetAggregationFunction extends BaseSingleInputAggregationFunction<IdSet, String> {\n+  public static final char PARAMETER_DELIMITER = ';';\n+  public static final char PARAMETER_KEY_VALUE_SEPARATOR = '=';\n+  public static final String SIZE_THRESHOLD_IN_BYTES_KEY = \"SIZETHRESHOLDINBYTES\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab464fcfa250f92bee4e897c62b69976a5bc0db"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e62153e57dbffdbe9ab8b09a6170e04ee85dc66", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/9e62153e57dbffdbe9ab8b09a6170e04ee85dc66", "committedDate": "2020-08-28T18:01:31Z", "message": "Add more javadoc"}, "afterCommit": {"oid": "178e4797ef0bbab652eeddaa58f382782aacecf7", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/178e4797ef0bbab652eeddaa58f382782aacecf7", "committedDate": "2020-08-28T18:02:58Z", "message": "Add more javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aa4070bb86dc79e920f70cdff0eb5ea32e07e53", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/9aa4070bb86dc79e920f70cdff0eb5ea32e07e53", "committedDate": "2020-08-28T19:49:10Z", "message": "Add IdSet and IdSetAggregationFunction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "178e4797ef0bbab652eeddaa58f382782aacecf7", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/178e4797ef0bbab652eeddaa58f382782aacecf7", "committedDate": "2020-08-28T18:02:58Z", "message": "Add more javadoc"}, "afterCommit": {"oid": "9aa4070bb86dc79e920f70cdff0eb5ea32e07e53", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/9aa4070bb86dc79e920f70cdff0eb5ea32e07e53", "committedDate": "2020-08-28T19:49:10Z", "message": "Add IdSet and IdSetAggregationFunction"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 280, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}