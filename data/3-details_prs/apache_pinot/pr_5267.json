{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTY4NTIw", "number": 5267, "title": "Re-implement ORCRecordReader", "bodyText": "Support batch read\nSupport most value types\nSupport read only required fields\nEnhance tests to cover most value types", "createdAt": "2020-04-17T07:28:02Z", "url": "https://github.com/apache/pinot/pull/5267", "merged": true, "mergeCommit": {"oid": "0622d2c492139738c9078e0a23ce226367ed2b96"}, "closed": true, "closedAt": "2020-04-17T22:08:08Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYcLi4gFqTM5NTIyMjUzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYl6JkABqjMyNDU1ODYxMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjIyNTMw", "url": "https://github.com/apache/pinot/pull/5267#pullrequestreview-395222530", "createdAt": "2020-04-17T07:30:13Z", "commit": {"oid": "774d9091827a99757ca3b96cb957fe87ed296806"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjI5Mjkw", "url": "https://github.com/apache/pinot/pull/5267#pullrequestreview-395629290", "createdAt": "2020-04-17T17:10:19Z", "commit": {"oid": "774d9091827a99757ca3b96cb957fe87ed296806"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoxMDoxOVrOGHWOGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoxMDoxOVrOGHWOGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NzI3Mw==", "bodyText": "Hive's ORC reader has a zero copy option to boost performance when reading from HDFS -- https://issues.apache.org/jira/browse/HIVE-6347\nSecondly, I wonder if we can do something about making this vectorized. Probably not because we anyway have to create a GenericRow and return it for every next() call. However, in general it is possible to read a single column vector at a time from VectorizedRowBatch and avoid the repeated dynamic dispatch in the loop\nSay if we do vectorized reads from each column vector from a single VectorizedRowBatch and then pick values from each cell to create a batch of GenericRow, would performance be any different? In that case, the next() API semantics can be changed to bulk based.", "url": "https://github.com/apache/pinot/pull/5267#discussion_r410357273", "createdAt": "2020-04-17T17:10:19Z", "author": {"login": "siddharthteotia"}, "path": "pinot-plugins/pinot-input-format/pinot-orc/src/main/java/org/apache/pinot/plugin/inputformat/orc/ORCRecordReader.java", "diffHunk": "@@ -95,25 +171,151 @@ public GenericRow next()\n   @Override\n   public GenericRow next(GenericRow reuse)\n       throws IOException {\n-    _recordReader.nextBatch(_reusableVectorizedRowBatch);\n-    return _recordExtractor.extract(_reusableVectorizedRowBatch, reuse);\n+    int numFields = _orcFields.size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "774d9091827a99757ca3b96cb957fe87ed296806"}, "originalPosition": 191}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a80fad5469afa43bffabc5724f21aedfc496405", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/5a80fad5469afa43bffabc5724f21aedfc496405", "committedDate": "2020-04-17T18:49:57Z", "message": "Re-implement ORCRecordReader\n\n- Support batch read\n- Support most value types\n- Support read only required fields\n- Enhance tests to cover most value types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "774d9091827a99757ca3b96cb957fe87ed296806", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/774d9091827a99757ca3b96cb957fe87ed296806", "committedDate": "2020-04-17T07:27:41Z", "message": "Re-implement ORCRecordReader\n\n- Support batch read\n- Support most value types\n- Support read only required fields\n- Enhance tests to cover most value types"}, "afterCommit": {"oid": "5a80fad5469afa43bffabc5724f21aedfc496405", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/5a80fad5469afa43bffabc5724f21aedfc496405", "committedDate": "2020-04-17T18:49:57Z", "message": "Re-implement ORCRecordReader\n\n- Support batch read\n- Support most value types\n- Support read only required fields\n- Enhance tests to cover most value types"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1246, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}