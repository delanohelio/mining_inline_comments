{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTI2NDMy", "number": 5487, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozMzowM1rOEB_RQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozMzowM1rOEB_RQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTIwNjQzOnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/SegmentDumpTool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozMzowM1rOGeK4sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTowOToxMVrOGeMOLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4ODgxNg==", "bodyText": "add a System.out.print(\"\\t\");?", "url": "https://github.com/apache/pinot/pull/5487#discussion_r434288816", "createdAt": "2020-06-03T03:33:03Z", "author": {"login": "xiangfu0"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/SegmentDumpTool.java", "diffHunk": "@@ -91,11 +102,27 @@ public void doMain(String[] args)\n       System.out.print(i);\n       System.out.print(\"\\t\");\n       for (String columnName : columnNames) {\n-        BlockSingleValIterator itr = iterators.get(columnName);\n-        int encodedValue = itr.nextIntVal();\n-        Object value = dictionaries.get(columnName).get(encodedValue);\n-        System.out.print(value);\n-        System.out.print(\"\\t\");\n+        BlockValIterator itr = iterators.get(columnName);\n+        if (itr instanceof BlockSingleValIterator) {\n+          int encodedValue = ((BlockSingleValIterator) itr).nextIntVal();\n+          Object value = dictionaries.get(columnName).get(encodedValue);\n+          System.out.print(value);\n+          System.out.print(\"\\t\");\n+        } else {\n+          BlockMultiValIterator mItr = (BlockMultiValIterator) itr;\n+          int maxNumValuesPerMVEntry =\n+              indexSegment.getDataSource(columnName).getDataSourceMetadata().getMaxNumValuesPerMVEntry();\n+          int[] intArray = new int[maxNumValuesPerMVEntry];\n+          int length = mItr.nextIntVal(intArray);\n+          System.out.print(\"[\");\n+          for (int j = 0; j < length; j++) {\n+            System.out.print(dictionaries.get(columnName).get(intArray[j]));\n+            if (j != length - 1) {\n+              System.out.print(\",\");\n+            }\n+          }\n+          System.out.print(\"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae91c7b04cd61bbd2a6241251c8ef9dfd2320128"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxMDcwMQ==", "bodyText": "good catch", "url": "https://github.com/apache/pinot/pull/5487#discussion_r434310701", "createdAt": "2020-06-03T05:09:11Z", "author": {"login": "yupeng9"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/SegmentDumpTool.java", "diffHunk": "@@ -91,11 +102,27 @@ public void doMain(String[] args)\n       System.out.print(i);\n       System.out.print(\"\\t\");\n       for (String columnName : columnNames) {\n-        BlockSingleValIterator itr = iterators.get(columnName);\n-        int encodedValue = itr.nextIntVal();\n-        Object value = dictionaries.get(columnName).get(encodedValue);\n-        System.out.print(value);\n-        System.out.print(\"\\t\");\n+        BlockValIterator itr = iterators.get(columnName);\n+        if (itr instanceof BlockSingleValIterator) {\n+          int encodedValue = ((BlockSingleValIterator) itr).nextIntVal();\n+          Object value = dictionaries.get(columnName).get(encodedValue);\n+          System.out.print(value);\n+          System.out.print(\"\\t\");\n+        } else {\n+          BlockMultiValIterator mItr = (BlockMultiValIterator) itr;\n+          int maxNumValuesPerMVEntry =\n+              indexSegment.getDataSource(columnName).getDataSourceMetadata().getMaxNumValuesPerMVEntry();\n+          int[] intArray = new int[maxNumValuesPerMVEntry];\n+          int length = mItr.nextIntVal(intArray);\n+          System.out.print(\"[\");\n+          for (int j = 0; j < length; j++) {\n+            System.out.print(dictionaries.get(columnName).get(intArray[j]));\n+            if (j != length - 1) {\n+              System.out.print(\",\");\n+            }\n+          }\n+          System.out.print(\"]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4ODgxNg=="}, "originalCommit": {"oid": "ae91c7b04cd61bbd2a6241251c8ef9dfd2320128"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4524, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}