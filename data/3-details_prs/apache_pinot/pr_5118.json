{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDQ3MDI0", "number": 5118, "title": "Synthetic Time Series Generator for pinot-tools", "bodyText": "Extends pinot-tools data generator with realistic time series templates considering seasonality,\ntrends, noise, and major outliers. #5117\nSpecifically, this adds support for:\n\nseasonal (diurnal) patterns to simulate page views and clicks metrics\nspiky (long-tailed) patterns to simulate error metrics\nsequential patterns to deterministically populate time stamp columns\nstring dictionaries to deterministically populate dimension columns\nmixture models of the above\n\nAdditionally provides two sample configurations \"simpleWebsite\" and \"complexWebsite\" which\ngenerate non-dimensional and dimensional examples of time series respectively. Also provides\ninstructions for generating and loading mock data onto an existing Pinot cluster.", "createdAt": "2020-03-05T19:01:10Z", "url": "https://github.com/apache/pinot/pull/5118", "merged": true, "mergeCommit": {"oid": "2ec6ed8e0ded7fc9442866d98d2ce24513f03e7a"}, "closed": true, "closedAt": "2020-03-06T20:13:46Z", "author": {"login": "apucher"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKwQdogH2gAyMzg0NDQ3MDI0OmY3MDk0NTcyZTRhM2YyYTg2YTAwMWM1ZWRjMzA1NjhjOTIzODc5ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLEu32AH2gAyMzg0NDQ3MDI0OmE2ZjI3MWVmOTRlM2MwMjFlOGE3MWI1ZDg1ODFmMmFjOWM0OTMyYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/f7094572e4a3f2a86a001c5edc30568c923879e0", "committedDate": "2020-03-05T18:58:45Z", "message": "Extends pinot-tools data generator with realistic time series templates considering seasonality,\ntrends, noise, and major outliers. #5117\n\nSpecifically, this adds support for:\n* seasonal (diurnal) patterns to simulate page views and clicks metrics\n* spiky (long-tailed) patterns to simulate error metrics\n* sequential patterns to deterministically populate time stamp columns\n* string dictionaries to deterministically populate dimension columns\n* mixture models of the above\n\nAdditionally provides two sample configurations \"simpleWebsite\" and \"complexWebsite\" which\ngenerate non-dimensional and dimensional examples of time series respectively. Also provides\ninstructions for generating and loading mock data onto an existing Pinot cluster."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5OTg1NTc4", "url": "https://github.com/apache/pinot/pull/5118#pullrequestreview-369985578", "createdAt": "2020-03-05T23:29:31Z", "commit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMzoyOTozMVrOFyn0Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMzozOTo1NVrOFyoANw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYyNTQ5NQ==", "bodyText": "Output file name should come from cli?", "url": "https://github.com/apache/pinot/pull/5118#discussion_r388625495", "createdAt": "2020-03-05T23:29:31Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/data/generator/DataGenerator.java", "diffHunk": "@@ -100,6 +110,23 @@ public void generate(long totalDocs, int numFiles)\n     }\n   }\n \n+  public void generateCsv(long totalDocs, int numFiles)\n+      throws IOException {\n+    final int numPerFiles = (int) (totalDocs / numFiles);\n+    for (int i = 0; i < numFiles; i++) {\n+      try (FileWriter writer = new FileWriter(outDir + \"/output.csv\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYyNTkxMg==", "bodyText": "System.getProperty(\"java.io.tmpdir\") instead of /tmp.", "url": "https://github.com/apache/pinot/pull/5118#discussion_r388625912", "createdAt": "2020-03-05T23:30:52Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/data/generator/DataGeneratorSpec.java", "diffHunk": "@@ -47,17 +48,19 @@\n   private final boolean overrideOutDir;\n \n   public DataGeneratorSpec() {\n-    this(new ArrayList<String>(), new HashMap<String, Integer>(), new HashMap<String, IntRange>(),\n-        new HashMap<String, DataType>(), new HashMap<String, FieldType>(), new HashMap<String, TimeUnit>(),\n+    this(new ArrayList<String>(), new HashMap<>(), new HashMap<>(), new HashMap<>(),\n+        new HashMap<>(), new HashMap<>(), new HashMap<>(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYyNzk0NA==", "bodyText": "Is this needed?", "url": "https://github.com/apache/pinot/pull/5118#discussion_r388627944", "createdAt": "2020-03-05T23:37:47Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/data/generator/TemplateSpikeGenerator.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.data.generator;\n+\n+import org.apache.commons.math3.distribution.LogNormalDistribution;\n+\n+import java.util.Map;\n+\n+/**\n+ * TemplateSpikeGenerator produces a series of log-normal spikes with log-normal arrival times, with optional smoothing.\n+ * This pattern is typical for rare even spikes, such as error counts. The generated values are sampled non-deterministically.\n+ *\n+ * Generator example:\n+ * <pre>\n+ *     baseline = 0\n+ *     arrivalMean = ?\n+ *     magnitudeMean = ?\n+ *\n+ *     returns [ 0, 0, 0, 0, 0, 0, 47, 15, 2, 1, 0, 0, ... ]\n+ * </pre>\n+ *\n+ * Configuration examples:\n+ * <ul>\n+ *     <li>./pinot-tools/src/main/resources/generator/simpleWebsite_generator.json</li>\n+ *     <li>./pinot-tools/src/main/resources/generator/complexWebsite_generator.json</li>\n+ * </ul>\n+ */\n+public class TemplateSpikeGenerator implements Generator {\n+    private final double baseline;\n+    private final double smoothing;\n+\n+    private final LogNormalDistribution arrivalGenerator;\n+    private final LogNormalDistribution magnitudeGenerator;\n+\n+    private long step = -1;\n+\n+    private long nextArrival;\n+    private double lastValue;\n+\n+    public TemplateSpikeGenerator(Map<String, Object> templateConfig) {\n+        this(toDouble(templateConfig.get(\"baseline\"), 0),\n+                toDouble(templateConfig.get(\"arrivalMean\"), 2),\n+                toDouble(templateConfig.get(\"arrivalSigma\"), 1),\n+                toDouble(templateConfig.get(\"magnitudeMean\"), 2),\n+                toDouble(templateConfig.get(\"magnitudeSigma\"), 1),\n+                toDouble(templateConfig.get(\"smoothing\"), 0));\n+    }\n+\n+    public TemplateSpikeGenerator(double baseline, double arrivalMean, double arrivalSigma, double magnitudeMean, double magnitudeSigma, double smoothing) {\n+        this.baseline = baseline;\n+        this.smoothing = smoothing;\n+\n+        this.arrivalGenerator = new LogNormalDistribution(arrivalMean, arrivalSigma);\n+        this.magnitudeGenerator = new LogNormalDistribution(magnitudeMean, magnitudeSigma);\n+\n+        this.nextArrival = (long) arrivalGenerator.sample();\n+        this.lastValue = baseline;\n+    }\n+\n+    @Override\n+    public void init() {\n+        // left blank\n+    }\n+\n+    @Override\n+    public Object next() {\n+        step++;\n+\n+        if (step < nextArrival) {\n+            lastValue = (1 - smoothing) * baseline + smoothing * lastValue;\n+            return (long) lastValue;\n+        }\n+\n+        nextArrival += (long) arrivalGenerator.sample();\n+        lastValue = baseline + this.magnitudeGenerator.sample();\n+        return (long) lastValue;\n+    }\n+\n+    private static double toDouble(Object obj, double defaultValue) {\n+        if (obj == null) {\n+            return defaultValue;\n+        }\n+        return Double.valueOf(obj.toString());\n+    }\n+\n+    public static void main(String[] args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYyODAxNg==", "bodyText": "Same here.", "url": "https://github.com/apache/pinot/pull/5118#discussion_r388628016", "createdAt": "2020-03-05T23:38:01Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/data/generator/TemplateStringGenerator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.data.generator;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * TemplateStringGenerator produces series of strings by cycling through a predefined list of values, optionally with\n+ * a number of repetitions per value.\n+ *\n+ * Generator example:\n+ * <pre>\n+ *     values = [ \"hello\", \"world\" ]\n+ *     repetitions = 2\n+ *\n+ *     returns [ \"hello\", \"hello\", \"world\", \"world\", \"hello\", ... ]\n+ * </pre>\n+ *\n+ * Configuration examples:\n+ * <ul>\n+ *     <li>./pinot-tools/src/main/resources/generator/simpleWebsite_generator.json</li>\n+ *     <li>./pinot-tools/src/main/resources/generator/complexWebsite_generator.json</li>\n+ * </ul>\n+ */\n+public class TemplateStringGenerator implements Generator {\n+    private final String[] values;\n+    private final long repetitions;\n+\n+    private long step;\n+\n+    public TemplateStringGenerator(Map<String, Object> templateConfig) {\n+        this(((List<String>) templateConfig.get(\"values\")).toArray(new String[0]), toLong(templateConfig.get(\"repetitions\"), 1));\n+    }\n+\n+    public TemplateStringGenerator(String[] values, long repetitions) {\n+        this.values = values;\n+        this.repetitions = repetitions;\n+    }\n+\n+    @Override\n+    public void init() {\n+        // left blank\n+    }\n+\n+    @Override\n+    public Object next() {\n+        return values[(int) (step++ / repetitions) % values.length];\n+    }\n+\n+    private static long toLong(Object obj, long defaultValue) {\n+        if (obj == null) {\n+            return defaultValue;\n+        }\n+        return Long.valueOf(obj.toString());\n+    }\n+\n+    public static void main(String[] args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYyODUzNQ==", "bodyText": "Apologies for my ignorance, is Template a generally accepted term here? If not, it is not intuitive enough, and may be PATTERN/DISTRIBUTION is a better word?\nAlso, would be good to add javadoc explaining each type.", "url": "https://github.com/apache/pinot/pull/5118#discussion_r388628535", "createdAt": "2020-03-05T23:39:55Z", "author": {"login": "mayankshriv"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/data/generator/TemplateType.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.data.generator;\n+\n+public enum TemplateType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7094572e4a3f2a86a001c5edc30568c923879e0"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfb8bb10ee9af2e48a8eb58532843b856ccda367", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/dfb8bb10ee9af2e48a8eb58532843b856ccda367", "committedDate": "2020-03-06T02:50:03Z", "message": "review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMDg0Mzg5", "url": "https://github.com/apache/pinot/pull/5118#pullrequestreview-370084389", "createdAt": "2020-03-06T05:06:02Z", "commit": {"oid": "dfb8bb10ee9af2e48a8eb58532843b856ccda367"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f271ef94e3c021e8a71b5d8581f2ac9c4932af", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/a6f271ef94e3c021e8a71b5d8581f2ac9c4932af", "committedDate": "2020-03-06T18:50:04Z", "message": "readme and script tweaks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1351, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}