{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTYyMTA0", "number": 5224, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxODozNVrODwIW1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTowNDo1NlrODwOAhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk1MTU5OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxODozNVrOGC9bDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxODozNVrOGC9bDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NjY4NA==", "bodyText": "When will this be the case? Can you also add that in the comments?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405756684", "createdAt": "2020-04-08T19:18:35Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -99,49 +99,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n         _offlineTableName);\n     LOGGER.info(\"Assigning segment: {} with instance partitions: {} for table: {}\", segmentName, instancePartitions,\n         _offlineTableName);\n+    checkReplication(instancePartitions);\n \n-    List<String> instancesAssigned;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n+    List<String> instancesAssigned = assignSegment(segmentName, currentAssignment, instancePartitions);\n+\n+    LOGGER\n+        .info(\"Assigned segment: {} to instances: {} for table: {}\", segmentName, instancesAssigned, _offlineTableName);\n+    return instancesAssigned;\n+  }\n+\n+  /**\n+   * Helper method to check whether the number of replica-groups matches the table replication for replica-group based", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODE1NzE1OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDoxODo0NlrOGC_ZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo0OTo1NVrOGDAcdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4OTA2NQ==", "bodyText": "Can you adjust the comment here?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405789065", "createdAt": "2020-04-08T20:18:46Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -189,45 +163,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n     InstancePartitions instancePartitions = instancePartitionsMap.get(InstancePartitionsType.OFFLINE);\n     Preconditions.checkState(instancePartitions != null, \"Failed to find OFFLINE instance partitions for table: %s\",\n         _offlineTableName);\n-    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}\", _offlineTableName, instancePartitions);\n+    boolean bootstrap =\n+        config.getBoolean(RebalanceConfigConstants.BOOTSTRAP, RebalanceConfigConstants.DEFAULT_BOOTSTRAP);\n+    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}, bootstrap: {}\", _offlineTableName,\n+        instancePartitions, bootstrap);\n+    checkReplication(instancePartitions);\n \n     Map<String, Map<String, String>> newAssignment;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n-      // Non-replica-group based assignment\n+    if (bootstrap) {\n+      LOGGER.info(\"Bootstrapping the table: {}\", _offlineTableName);\n \n-      List<String> instances =\n-          SegmentAssignmentUtils.getInstancesForNonReplicaGroupBasedAssignment(instancePartitions, _replication);\n-      newAssignment = SegmentAssignmentUtils\n-          .rebalanceTableWithHelixAutoRebalanceStrategy(currentAssignment, instances, _replication);\n+      // When bootstrap is enabled, start with an empty table add reassign all segments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwNjE5Nw==", "bodyText": "What's the suggestion? I feel this comment is clear?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405806197", "createdAt": "2020-04-08T20:49:55Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -189,45 +163,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n     InstancePartitions instancePartitions = instancePartitionsMap.get(InstancePartitionsType.OFFLINE);\n     Preconditions.checkState(instancePartitions != null, \"Failed to find OFFLINE instance partitions for table: %s\",\n         _offlineTableName);\n-    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}\", _offlineTableName, instancePartitions);\n+    boolean bootstrap =\n+        config.getBoolean(RebalanceConfigConstants.BOOTSTRAP, RebalanceConfigConstants.DEFAULT_BOOTSTRAP);\n+    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}, bootstrap: {}\", _offlineTableName,\n+        instancePartitions, bootstrap);\n+    checkReplication(instancePartitions);\n \n     Map<String, Map<String, String>> newAssignment;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n-      // Non-replica-group based assignment\n+    if (bootstrap) {\n+      LOGGER.info(\"Bootstrapping the table: {}\", _offlineTableName);\n \n-      List<String> instances =\n-          SegmentAssignmentUtils.getInstancesForNonReplicaGroupBasedAssignment(instancePartitions, _replication);\n-      newAssignment = SegmentAssignmentUtils\n-          .rebalanceTableWithHelixAutoRebalanceStrategy(currentAssignment, instances, _replication);\n+      // When bootstrap is enabled, start with an empty table add reassign all segments", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4OTA2NQ=="}, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODE5ODY0OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDozMDo0MVrOGC_zFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo0OToxM1rOGDAa_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NTYwNw==", "bodyText": "Will it print too many messages if there are many segments in a table?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405795607", "createdAt": "2020-04-08T20:30:41Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -99,49 +99,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n         _offlineTableName);\n     LOGGER.info(\"Assigning segment: {} with instance partitions: {} for table: {}\", segmentName, instancePartitions,\n         _offlineTableName);\n+    checkReplication(instancePartitions);\n \n-    List<String> instancesAssigned;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n+    List<String> instancesAssigned = assignSegment(segmentName, currentAssignment, instancePartitions);\n+\n+    LOGGER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwNTgyMQ==", "bodyText": "That is exactly the reason why the assignSegment is extracted into a helper method (line 128)", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405805821", "createdAt": "2020-04-08T20:49:13Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -99,49 +99,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n         _offlineTableName);\n     LOGGER.info(\"Assigning segment: {} with instance partitions: {} for table: {}\", segmentName, instancePartitions,\n         _offlineTableName);\n+    checkReplication(instancePartitions);\n \n-    List<String> instancesAssigned;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n+    List<String> instancesAssigned = assignSegment(segmentName, currentAssignment, instancePartitions);\n+\n+    LOGGER", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NTYwNw=="}, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODUwMjc0OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowODo0NVrOGDCuSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1Njo1MVrOGDE_pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0MzUyOQ==", "bodyText": "empty table -> empty assignment?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405843529", "createdAt": "2020-04-08T22:08:45Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -184,41 +199,45 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n       LOGGER\n           .info(\"Reassigning COMPLETED segments with COMPLETED instance partitions for table: {}\", _realtimeTableName);\n \n-      if (completedInstancePartitions.getNumReplicaGroups() == 1) {\n-        // Non-replica-group based assignment\n+      if (bootstrap) {\n+        LOGGER.info(\"Bootstrapping the COMPLETED segments for table: {}\", _realtimeTableName);\n \n-        List<String> instances = SegmentAssignmentUtils\n-            .getInstancesForNonReplicaGroupBasedAssignment(completedInstancePartitions, _replication);\n-        newAssignment = SegmentAssignmentUtils\n-            .rebalanceTableWithHelixAutoRebalanceStrategy(completedSegmentAssignment, instances, _replication);\n+        // When bootstrap is enabled, start with an empty table add reassign all segments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDc0MQ==", "bodyText": "Added more comments", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405880741", "createdAt": "2020-04-08T23:56:51Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -184,41 +199,45 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n       LOGGER\n           .info(\"Reassigning COMPLETED segments with COMPLETED instance partitions for table: {}\", _realtimeTableName);\n \n-      if (completedInstancePartitions.getNumReplicaGroups() == 1) {\n-        // Non-replica-group based assignment\n+      if (bootstrap) {\n+        LOGGER.info(\"Bootstrapping the COMPLETED segments for table: {}\", _realtimeTableName);\n \n-        List<String> instances = SegmentAssignmentUtils\n-            .getInstancesForNonReplicaGroupBasedAssignment(completedInstancePartitions, _replication);\n-        newAssignment = SegmentAssignmentUtils\n-            .rebalanceTableWithHelixAutoRebalanceStrategy(completedSegmentAssignment, instances, _replication);\n+        // When bootstrap is enabled, start with an empty table add reassign all segments", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0MzUyOQ=="}, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODUwNzUzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/SegmentAssignmentUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjoxMDoyNlrOGDCxCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzo1NjoyOVrOGDE_EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0NDIzNA==", "bodyText": "I assume that Pairs.intPairComparator will be an ascending order?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405844234", "createdAt": "2020-04-08T22:10:26Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/SegmentAssignmentUtils.java", "diffHunk": "@@ -86,6 +86,55 @@ private SegmentAssignmentUtils() {\n     return instances;\n   }\n \n+  /**\n+   * Assigns the segment for the non-replica-group based segment assignment strategy and returns the assigned instances.\n+   */\n+  static List<String> assignSegmentWithoutReplicaGroup(Map<String, Map<String, String>> currentAssignment,\n+      InstancePartitions instancePartitions, int replication) {\n+    List<String> instances =\n+        SegmentAssignmentUtils.getInstancesForNonReplicaGroupBasedAssignment(instancePartitions, replication);\n+    int[] numSegmentsAssignedPerInstance = getNumSegmentsAssignedPerInstance(currentAssignment, instances);\n+    int numInstances = numSegmentsAssignedPerInstance.length;\n+    PriorityQueue<Pairs.IntPair> heap = new PriorityQueue<>(numInstances, Pairs.intPairComparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4MDU5Mw==", "bodyText": "Yes, it is sorted on the left value firstly, then right value secondly.", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405880593", "createdAt": "2020-04-08T23:56:29Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/SegmentAssignmentUtils.java", "diffHunk": "@@ -86,6 +86,55 @@ private SegmentAssignmentUtils() {\n     return instances;\n   }\n \n+  /**\n+   * Assigns the segment for the non-replica-group based segment assignment strategy and returns the assigned instances.\n+   */\n+  static List<String> assignSegmentWithoutReplicaGroup(Map<String, Map<String, String>> currentAssignment,\n+      InstancePartitions instancePartitions, int replication) {\n+    List<String> instances =\n+        SegmentAssignmentUtils.getInstancesForNonReplicaGroupBasedAssignment(instancePartitions, replication);\n+    int[] numSegmentsAssignedPerInstance = getNumSegmentsAssignedPerInstance(currentAssignment, instances);\n+    int numInstances = numSegmentsAssignedPerInstance.length;\n+    PriorityQueue<Pairs.IntPair> heap = new PriorityQueue<>(numInstances, Pairs.intPairComparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0NDIzNA=="}, "originalCommit": {"oid": "94b79fb4818f32c3978d23dc4ec16233641e533f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODg2NDgzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo1NzozOVrOGDGCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo1NzozOVrOGDGCbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NzgzOQ==", "bodyText": "Suggest wording : \"Bootstrapping segment assignment for table ...\" Otherwise it may throw an admin off", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405897839", "createdAt": "2020-04-09T00:57:39Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/OfflineSegmentAssignment.java", "diffHunk": "@@ -189,45 +163,48 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n     InstancePartitions instancePartitions = instancePartitionsMap.get(InstancePartitionsType.OFFLINE);\n     Preconditions.checkState(instancePartitions != null, \"Failed to find OFFLINE instance partitions for table: %s\",\n         _offlineTableName);\n-    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}\", _offlineTableName, instancePartitions);\n+    boolean bootstrap =\n+        config.getBoolean(RebalanceConfigConstants.BOOTSTRAP, RebalanceConfigConstants.DEFAULT_BOOTSTRAP);\n+    LOGGER.info(\"Rebalancing table: {} with instance partitions: {}, bootstrap: {}\", _offlineTableName,\n+        instancePartitions, bootstrap);\n+    checkReplication(instancePartitions);\n \n     Map<String, Map<String, String>> newAssignment;\n-    if (instancePartitions.getNumReplicaGroups() == 1) {\n-      // Non-replica-group based assignment\n+    if (bootstrap) {\n+      LOGGER.info(\"Bootstrapping the table: {}\", _offlineTableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2bb76b6df802772df93e549accdfd5b3be14d3"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODg3NTE2OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTowMzo0MlrOGDGIgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTowMzo0MlrOGDGIgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5OTM5NA==", "bodyText": "\"Bootstrapping segment assignment for COMPLETED segments...\"", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405899394", "createdAt": "2020-04-09T01:03:42Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -184,41 +199,45 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n       LOGGER\n           .info(\"Reassigning COMPLETED segments with COMPLETED instance partitions for table: {}\", _realtimeTableName);\n \n-      if (completedInstancePartitions.getNumReplicaGroups() == 1) {\n-        // Non-replica-group based assignment\n+      if (bootstrap) {\n+        LOGGER.info(\"Bootstrapping the COMPLETED segments for table: {}\", _realtimeTableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2bb76b6df802772df93e549accdfd5b3be14d3"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODg3NzQ4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTowNDo1NlrOGDGJ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMToxNzozN1rOGDGWWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5OTczMA==", "bodyText": "Is this a typo? Or are you intentionally calling assignConsumingSegment() method?", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405899730", "createdAt": "2020-04-09T01:04:56Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -230,7 +249,7 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n \n       newAssignment = new TreeMap<>();\n       for (String segmentName : completedSegmentAssignment.keySet()) {\n-        List<String> instancesAssigned = assignSegment(segmentName, consumingInstancePartitions);\n+        List<String> instancesAssigned = assignConsumingSegment(segmentName, consumingInstancePartitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2bb76b6df802772df93e549accdfd5b3be14d3"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwMjY5OA==", "bodyText": "This is intentional. This code path is for scenarios when completed instance partitions are not provided (no segment relocation), we want to keep the consuming partition on the correct server. This is useful when adding/removing servers for real-time tables.", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405902698", "createdAt": "2020-04-09T01:16:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -230,7 +249,7 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n \n       newAssignment = new TreeMap<>();\n       for (String segmentName : completedSegmentAssignment.keySet()) {\n-        List<String> instancesAssigned = assignSegment(segmentName, consumingInstancePartitions);\n+        List<String> instancesAssigned = assignConsumingSegment(segmentName, consumingInstancePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5OTczMA=="}, "originalCommit": {"oid": "da2bb76b6df802772df93e549accdfd5b3be14d3"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwMjkzNw==", "bodyText": "ah got it", "url": "https://github.com/apache/pinot/pull/5224#discussion_r405902937", "createdAt": "2020-04-09T01:17:37Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -230,7 +249,7 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n \n       newAssignment = new TreeMap<>();\n       for (String segmentName : completedSegmentAssignment.keySet()) {\n-        List<String> instancesAssigned = assignSegment(segmentName, consumingInstancePartitions);\n+        List<String> instancesAssigned = assignConsumingSegment(segmentName, consumingInstancePartitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5OTczMA=="}, "originalCommit": {"oid": "da2bb76b6df802772df93e549accdfd5b3be14d3"}, "originalPosition": 155}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3366, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}