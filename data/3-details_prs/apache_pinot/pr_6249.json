{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTg5MTU2", "number": 6249, "title": "Adding support of logical functions AND and OR", "bodyText": "Description\nPer #6243, adding logical functions support(AND/OR) so we can power more expressions in CASE-WHEN statement.\nBelow is a sample query we can support now:\nSELECT\n    numberOfGames, \n    CASE\n        WHEN (numberOfGames >= 50 OR numberOfGames < 30) THEN 5\n        WHEN numberOfGames >= 40 THEN 4\n        ELSE 0\n    END AS columnA\nFROM baseballStats", "createdAt": "2020-11-07T20:35:32Z", "url": "https://github.com/apache/pinot/pull/6249", "merged": true, "mergeCommit": {"oid": "8ce2271f2e7b6e5cea71d4dc15814099aae88c6b"}, "closed": true, "closedAt": "2020-11-09T20:46:53Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaSNMTABqjM5NzAyMTg2NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdatf6VgFqTUyNTkyMjIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "138579b118c3ccb5adcdd53c1716a35394703e34", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/138579b118c3ccb5adcdd53c1716a35394703e34", "committedDate": "2020-11-07T20:35:16Z", "message": "Adding support of logical functions AND and OR"}, "afterCommit": {"oid": "f38efc57b04be4ce7f550f874ffde39da71f4b53", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/f38efc57b04be4ce7f550f874ffde39da71f4b53", "committedDate": "2020-11-07T21:11:50Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f38efc57b04be4ce7f550f874ffde39da71f4b53", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/f38efc57b04be4ce7f550f874ffde39da71f4b53", "committedDate": "2020-11-07T21:11:50Z", "message": "Adding support of logical functions AND and OR"}, "afterCommit": {"oid": "b424a781e7b8f0b22c8e14c1397dad5f1ccad2ee", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b424a781e7b8f0b22c8e14c1397dad5f1ccad2ee", "committedDate": "2020-11-07T21:30:42Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b424a781e7b8f0b22c8e14c1397dad5f1ccad2ee", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b424a781e7b8f0b22c8e14c1397dad5f1ccad2ee", "committedDate": "2020-11-07T21:30:42Z", "message": "Adding support of logical functions AND and OR"}, "afterCommit": {"oid": "1e99d95e431c2f8199fe6209717a3ac287d65b9a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/1e99d95e431c2f8199fe6209717a3ac287d65b9a", "committedDate": "2020-11-07T21:36:53Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e99d95e431c2f8199fe6209717a3ac287d65b9a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/1e99d95e431c2f8199fe6209717a3ac287d65b9a", "committedDate": "2020-11-07T21:36:53Z", "message": "Adding support of logical functions AND and OR"}, "afterCommit": {"oid": "2c67301336623468281ed323300f3ff62b4f6509", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/2c67301336623468281ed323300f3ff62b4f6509", "committedDate": "2020-11-07T21:37:09Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTEzNzM5", "url": "https://github.com/apache/pinot/pull/6249#pullrequestreview-525913739", "createdAt": "2020-11-09T04:15:11Z", "commit": {"oid": "2c67301336623468281ed323300f3ff62b4f6509"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDoxNToxMVrOHvecmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDoxNToxMVrOHvecmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0Mzk2Mg==", "bodyText": "How about we print out the actual values of the arguments here?", "url": "https://github.com/apache/pinot/pull/6249#discussion_r519543962", "createdAt": "2020-11-09T04:15:11Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/LogicalOperatorTransformFunction.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.operator.transform.function;\n+\n+import com.google.common.base.Preconditions;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.pinot.core.common.DataSource;\n+import org.apache.pinot.core.operator.blocks.ProjectionBlock;\n+import org.apache.pinot.core.operator.transform.TransformResultMetadata;\n+import org.apache.pinot.core.plan.DocIdSetPlanNode;\n+import org.apache.pinot.core.util.ArrayCopyUtils;\n+\n+\n+/**\n+ * <code>LogicalOperatorTransformFunction</code> abstracts common functions for logical operators (AND, OR).\n+ * The results are in boolean format and stored as an integer array with 1 represents true and 0 represents false.\n+ */\n+public abstract class LogicalOperatorTransformFunction extends BaseTransformFunction {\n+\n+  protected List<TransformFunction> _arguments;\n+  protected int[] _results;\n+\n+  @Override\n+  public void init(List<TransformFunction> arguments, Map<String, DataSource> dataSourceMap) {\n+    _arguments = arguments;\n+    Preconditions\n+        .checkState(arguments.size() > 1, String.format(\"Expect more than 1 argument for logical operator [%s], found %d.\", getName(), arguments.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c67301336623468281ed323300f3ff62b4f6509"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8a9758148e48a2c3910a655778576e26e94b154", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b8a9758148e48a2c3910a655778576e26e94b154", "committedDate": "2020-11-09T04:45:55Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c67301336623468281ed323300f3ff62b4f6509", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/2c67301336623468281ed323300f3ff62b4f6509", "committedDate": "2020-11-07T21:37:09Z", "message": "Adding support of logical functions AND and OR"}, "afterCommit": {"oid": "b8a9758148e48a2c3910a655778576e26e94b154", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b8a9758148e48a2c3910a655778576e26e94b154", "committedDate": "2020-11-09T04:45:55Z", "message": "Adding support of logical functions AND and OR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTIyMjA4", "url": "https://github.com/apache/pinot/pull/6249#pullrequestreview-525922208", "createdAt": "2020-11-09T04:50:20Z", "commit": {"oid": "b8a9758148e48a2c3910a655778576e26e94b154"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDo1NjowNFrOHve-sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDo1NjowNFrOHve-sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU1MjY4OQ==", "bodyText": "Should we support multi-value column as well? If not, can we add some description on this class?", "url": "https://github.com/apache/pinot/pull/6249#discussion_r519552689", "createdAt": "2020-11-09T04:56:04Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/LogicalOperatorTransformFunction.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.operator.transform.function;\n+\n+import com.google.common.base.Preconditions;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.pinot.core.common.DataSource;\n+import org.apache.pinot.core.operator.blocks.ProjectionBlock;\n+import org.apache.pinot.core.operator.transform.TransformResultMetadata;\n+import org.apache.pinot.core.plan.DocIdSetPlanNode;\n+import org.apache.pinot.core.util.ArrayCopyUtils;\n+\n+\n+/**\n+ * <code>LogicalOperatorTransformFunction</code> abstracts common functions for logical operators (AND, OR).\n+ * The results are in boolean format and stored as an integer array with 1 represents true and 0 represents false.\n+ */\n+public abstract class LogicalOperatorTransformFunction extends BaseTransformFunction {\n+\n+  protected List<TransformFunction> _arguments;\n+  protected int[] _results;\n+\n+  @Override\n+  public void init(List<TransformFunction> arguments, Map<String, DataSource> dataSourceMap) {\n+    _arguments = arguments;\n+    Preconditions.checkState(arguments.size() > 1, String\n+        .format(\"Expect more than 1 argument for logical operator [%s], args [%s].\", getName(),\n+            Arrays.toString(arguments.toArray())));\n+    for (TransformFunction argument : arguments) {\n+      Preconditions.checkState(\n+          argument.getResultMetadata().getDataType().isNumeric() && argument.getResultMetadata().isSingleValue(), String\n+              .format(\n+                  \"Unsupported data type for logical operator [%s] arguments, only supports single-valued number. Invalid argument: expression [%s], result type [%s]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8a9758148e48a2c3910a655778576e26e94b154"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1760, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}