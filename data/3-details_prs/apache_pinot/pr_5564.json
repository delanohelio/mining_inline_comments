{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTM5NDIw", "number": 5564, "title": "Adding support to configure log2m value for hyperloglog", "bodyText": "Description\nCurrent distinctCountHLL hard coded Hyperloglo object's log2m value to 8, which prevents users from tuning the results accuracy vs query speed.\nThis PR extends distinctCountHLL to take log2m value as the second argument.\nAdding a cluster config to allow users to customize default log2m value for query.\nRelease Notes\n\nSupport customized accuracy for distinctCountHLL, distinctCountHLLMV functions by adding log2m value as the second parameter in the function.\nAdding cluster config: default.hyperloglog.log2m to allow user set default log2m value.", "createdAt": "2020-06-14T12:42:36Z", "url": "https://github.com/apache/pinot/pull/5564", "merged": true, "mergeCommit": {"oid": "e19e1c5e75122b49b4893b480d8eb92c7214191c"}, "closed": true, "closedAt": "2020-06-16T03:53:30Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrMNRbgH2gAyNDM0MTM5NDIwOjM3OTlkOTNmYTI1OTVjMDFkZjRkZTIyODllN2M2Y2NhNjVlMmMxZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrpmd6gBqjM0NDY2NDYwNDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/3799d93fa2595c01df4de2289e7c6cca65e2c1df", "committedDate": "2020-06-14T13:38:11Z", "message": "Adding support to configure log2m value for hyperloglog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fec0e54e7622770cbf0ea9ce9fa63e610963037a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/fec0e54e7622770cbf0ea9ce9fa63e610963037a", "committedDate": "2020-06-14T12:29:39Z", "message": "Adding support to configure log2m value for hyperloglog"}, "afterCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/3799d93fa2595c01df4de2289e7c6cca65e2c1df", "committedDate": "2020-06-14T13:38:11Z", "message": "Adding support to configure log2m value for hyperloglog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwODU4OTAy", "url": "https://github.com/apache/pinot/pull/5564#pullrequestreview-430858902", "createdAt": "2020-06-15T17:41:25Z", "commit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo0MToyNVrOGj8QOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1ODo1MFrOGj81kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MDUzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.warn(\"Unable to set Log2M value {} for DistinctCountHLL function. {}\", log2mStr, e);\n          \n          \n            \n                    LOGGER.warn(\"Invalid config of '{}': '{}', using: {} as the default log2m for HyperLogLog\", Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M, log2mStr, CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440340536", "createdAt": "2020-06-15T17:41:25Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "diffHunk": "@@ -191,11 +191,19 @@ public void start()\n         new HelixConfigScopeBuilder(HelixConfigScope.ConfigScopeProperty.CLUSTER).forCluster(_clusterName).build();\n     Map<String, String> configMap = configAccessor.get(helixConfigScope, Arrays\n         .asList(Helix.ENABLE_CASE_INSENSITIVE_KEY, Helix.DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY,\n-            Broker.CONFIG_OF_ENABLE_QUERY_LIMIT_OVERRIDE));\n+            Broker.CONFIG_OF_ENABLE_QUERY_LIMIT_OVERRIDE, Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M));\n     if (Boolean.parseBoolean(configMap.get(Helix.ENABLE_CASE_INSENSITIVE_KEY)) || Boolean\n         .parseBoolean(configMap.get(Helix.DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY))) {\n       _brokerConf.setProperty(Helix.ENABLE_CASE_INSENSITIVE_KEY, true);\n     }\n+    String log2mStr = configMap.get(Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M);\n+    if (log2mStr != null) {\n+      try {\n+        _brokerConf.setProperty(Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M, Integer.parseInt(log2mStr));\n+      } catch (NumberFormatException e) {\n+        LOGGER.warn(\"Unable to set Log2M value {} for DistinctCountHLL function. {}\", log2mStr, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MTQxOA==", "bodyText": "Rename to _defaultHllLog2m?", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440341418", "createdAt": "2020-06-15T17:43:07Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -112,6 +114,7 @@\n \n   private final boolean _enableCaseInsensitive;\n   private final boolean _enableQueryLimitOverride;\n+  private final int _hllLog2mOverride;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MTY1OQ==", "bodyText": "_defaultHllLog2m =\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (_config.containsKey(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M)) {\n          \n          \n            \n                  _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n          \n          \n            \n                      CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\n          \n          \n            \n                } else {\n          \n          \n            \n                  _hllLog2mOverride = -1;\n          \n          \n            \n                }\n          \n          \n            \n                _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n          \n          \n            \n                      CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440341659", "createdAt": "2020-06-15T17:43:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -129,6 +132,12 @@ public BaseBrokerRequestHandler(Configuration config, RoutingManager routingMana\n     } else {\n       _tableCache = null;\n     }\n+    if (_config.containsKey(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M)) {\n+      _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n+          CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\n+    } else {\n+      _hllLog2mOverride = -1;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mjc4OA==", "bodyText": "Why do we need brokerRequest.getSelections() != null here? It will never be true for aggregation right?", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440342788", "createdAt": "2020-06-15T17:45:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mzg4NQ==", "bodyText": "Please handle exception here, or switch on String instead of AggregationFunctionType", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440343885", "createdAt": "2020-06-15T17:47:40Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NTcwOQ==", "bodyText": "(nit) This check is redundant?", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440345709", "createdAt": "2020-06-15T17:51:00Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {\n+      for (Expression expr : brokerRequest.getPinotQuery().getSelectList()) {\n+        updateDistinctCountHllExpr(expr, hllLog2mOverride);\n+      }\n+    }\n+  }\n+\n+  private static void updateDistinctCountHllExpr(Expression expr, int hllLog2mOverride) {\n+    if (expr == null || expr.getFunctionCall() == null) {\n+      return;\n+    }\n+    Function functionCall = expr.getFunctionCall();\n+    try {\n+      switch (AggregationFunctionType.getAggregationFunctionType(functionCall.getOperator())) {\n+        case DISTINCTCOUNTHLL:\n+        case DISTINCTCOUNTHLLMV:\n+        case DISTINCTCOUNTRAWHLL:\n+        case DISTINCTCOUNTRAWHLLMV:\n+          if (functionCall.getOperandsSize() == 1) {\n+            functionCall.addToOperands(RequestUtils.getLiteralExpression(hllLog2mOverride));\n+          }\n+          return;\n+      }\n+    } catch (Exception e) {\n+      // Swallow exceptions\n+    }\n+    if (functionCall.getOperandsSize() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjM3Ng==", "bodyText": "expr can never be null here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (expr == null || expr.getFunctionCall() == null) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n                Function functionCall = expr.getFunctionCall();\n          \n          \n            \n                Function functionCall = expr.getFunctionCall();\n          \n          \n            \n                if (functionCall == null) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440346376", "createdAt": "2020-06-15T17:52:15Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {\n+      for (Expression expr : brokerRequest.getPinotQuery().getSelectList()) {\n+        updateDistinctCountHllExpr(expr, hllLog2mOverride);\n+      }\n+    }\n+  }\n+\n+  private static void updateDistinctCountHllExpr(Expression expr, int hllLog2mOverride) {\n+    if (expr == null || expr.getFunctionCall() == null) {\n+      return;\n+    }\n+    Function functionCall = expr.getFunctionCall();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjYxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M = \"default.hyperloglog.log2m\";\n          \n          \n            \n                public static final String DEFAULT_HYPERLOGLOG_LOG2M_KEY = \"default.hyperloglog.log2m\";", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440346619", "createdAt": "2020-06-15T17:52:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -44,6 +44,9 @@\n     public static final String ENABLE_CASE_INSENSITIVE_KEY = \"enable.case.insensitive\";\n     public static final String DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY = \"enable.case.insensitive.pql\";\n \n+    public static final String CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M = \"default.hyperloglog.log2m\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NzMzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Preconditions\n          \n          \n            \n                    .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n          \n          \n            \n                        numExpressions);\n          \n          \n            \n                Preconditions\n          \n          \n            \n                    .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: %s\",\n          \n          \n            \n                        numExpressions);", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440347333", "createdAt": "2020-06-15T17:54:01Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;\n \n-  public DistinctCountHLLAggregationFunction(String column) {\n-    super(column);\n+  public DistinctCountHLLAggregationFunction(List<String> arguments) {\n+    super(arguments.get(0));\n+    int numExpressions = arguments.size();\n+    // This function expects 1 or 2 arguments.\n+    Preconditions\n+        .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n+            numExpressions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg==", "bodyText": "No need to replace single quote here", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440348052", "createdAt": "2020-06-15T17:55:18Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;\n \n-  public DistinctCountHLLAggregationFunction(String column) {\n-    super(column);\n+  public DistinctCountHLLAggregationFunction(List<String> arguments) {\n+    super(arguments.get(0));\n+    int numExpressions = arguments.size();\n+    // This function expects 1 or 2 arguments.\n+    Preconditions\n+        .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n+            numExpressions);\n+    if (arguments.size() == 2) {\n+      _log2M = Integer.valueOf(arguments.get(1).replace(\"'\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODQyOA==", "bodyText": "(nit) Rename to _log2m?", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440348428", "createdAt": "2020-06-15T17:55:59Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTA1Mw==", "bodyText": "Replace this with the one in CommonConstants?", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440349053", "createdAt": "2020-06-15T17:56:59Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTQ2Mg==", "bodyText": "You don't need to pass member variable _log2M to getDefaultHyperLogLog(), just remove the static should be good", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440349462", "createdAt": "2020-06-15T17:57:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -67,7 +79,7 @@ public void aggregate(int length, AggregationResultHolder aggregationResultHolde\n     DataType valueType = blockValSet.getValueType();\n \n     if (valueType != DataType.BYTES) {\n-      HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder);\n+      HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder, _log2M);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MDA5OQ==", "bodyText": "Same here, don't pass _log2M", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440350099", "createdAt": "2020-06-15T17:58:50Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLMVAggregationFunction.java", "diffHunk": "@@ -47,7 +48,7 @@ public void accept(AggregationFunctionVisitorBase visitor) {\n   @Override\n   public void aggregate(int length, AggregationResultHolder aggregationResultHolder,\n       Map<TransformExpressionTree, BlockValSet> blockValSetMap) {\n-    HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder);\n+    HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder, _log2M);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "854805e1b02804fc4720ffa5bbcb0f1558157668", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/854805e1b02804fc4720ffa5bbcb0f1558157668", "committedDate": "2020-06-15T20:23:18Z", "message": "Adress comments"}, "afterCommit": {"oid": "02f72472c78465ee3b535a1617ecf35b76e8e250", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/02f72472c78465ee3b535a1617ecf35b76e8e250", "committedDate": "2020-06-15T20:24:34Z", "message": "Adress comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDQ1OTU4", "url": "https://github.com/apache/pinot/pull/5564#pullrequestreview-431045958", "createdAt": "2020-06-15T22:52:47Z", "commit": {"oid": "02f72472c78465ee3b535a1617ecf35b76e8e250"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "535d8c0a9c072c401ad41d3839b02625b8fc86bd", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/535d8c0a9c072c401ad41d3839b02625b8fc86bd", "committedDate": "2020-06-15T23:52:48Z", "message": "Adress comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02f72472c78465ee3b535a1617ecf35b76e8e250", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/02f72472c78465ee3b535a1617ecf35b76e8e250", "committedDate": "2020-06-15T20:24:34Z", "message": "Adress comments"}, "afterCommit": {"oid": "535d8c0a9c072c401ad41d3839b02625b8fc86bd", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/535d8c0a9c072c401ad41d3839b02625b8fc86bd", "committedDate": "2020-06-15T23:52:48Z", "message": "Adress comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 604, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}