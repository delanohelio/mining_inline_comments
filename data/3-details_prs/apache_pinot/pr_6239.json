{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Njk1MTU1", "number": 6239, "title": "Always read start/end time in millis from the segment ZK metadata", "bodyText": "Description\nFor issue #6222\nThis PR adds the APIs to read the start/end time in millis from the SegmentZKMetadata, deprecates the old getters.\nAlso modifies the logic in TimeBoundaryManager to support SDF for the hybrid table.", "createdAt": "2020-11-04T23:25:01Z", "url": "https://github.com/apache/pinot/pull/6239", "merged": true, "mergeCommit": {"oid": "750af31133f758f3c13cda7d9b22126eb7d52512"}, "closed": true, "closedAt": "2020-11-10T22:05:13Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZWnbPgBqjM5NTk5MTg1MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbOqeFgBqjM5ODA2MjU1NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d74ef813da73243f8c8e64d3cc19669c3fe59ac0", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/d74ef813da73243f8c8e64d3cc19669c3fe59ac0", "committedDate": "2020-11-04T23:02:02Z", "message": "Always read start/end time in millis from the segment ZK metadata"}, "afterCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a38db3231b296cfcaae4bdfd9ff501c4f21b41b5", "committedDate": "2020-11-04T23:46:07Z", "message": "Always read start/end time in millis from the segment ZK metadata"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODc4Nzgw", "url": "https://github.com/apache/pinot/pull/6239#pullrequestreview-523878780", "createdAt": "2020-11-05T02:17:46Z", "commit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMjoxNzo0NlrOHtwpRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMjoxNzo0NlrOHtwpRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc0NDk2Ng==", "bodyText": "For consuming segment, neither start nor end time will be set.", "url": "https://github.com/apache/pinot/pull/6239#discussion_r517744966", "createdAt": "2020-11-05T02:17:46Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/segment/SegmentZKMetadata.java", "diffHunk": "@@ -105,54 +97,40 @@ public void setSegmentName(String segmentName) {\n     _segmentName = segmentName;\n   }\n \n-  @Deprecated\n-  public String getTableName() {\n-    return _tableName;\n+  public SegmentType getSegmentType() {\n+    return _segmentType;\n   }\n \n-  @Deprecated\n-  public void setTableName(String tableName) {\n-    _tableName = tableName;\n+  public void setSegmentType(SegmentType segmentType) {\n+    _segmentType = segmentType;\n   }\n \n-  public long getStartTime() {\n-    return _startTime;\n+  public long getStartTimeMs() {\n+    if (_startTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_startTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setStartTime(long startTime) {\n     _startTime = startTime;\n   }\n \n-  public long getEndTime() {\n-    return _endTime;\n+  public long getEndTimeMs() {\n+    if (_endTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_endTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setEndTime(long endTime) {\n     _endTime = endTime;\n   }\n \n-  public TimeUnit getTimeUnit() {\n-    return _timeUnit;\n-  }\n-\n-  /**\n-   * NOTE: should be called after setting start and end time.\n-   */\n-  public void setTimeUnit(@Nonnull TimeUnit timeUnit) {\n+  public void setTimeUnit(TimeUnit timeUnit) {\n     _timeUnit = timeUnit;\n-    _timeGranularity = new Duration(_timeUnit.toMillis(1));\n-    // For consuming segment, end time might not be set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "originalPosition": 152}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDE3MjA0", "url": "https://github.com/apache/pinot/pull/6239#pullrequestreview-525417204", "createdAt": "2020-11-06T19:02:30Z", "commit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOTowMjozMFrOHu6AHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOTowNjowM1rOHu6G6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk0Njg0Ng==", "bodyText": "Can we put @Deprecated annotation instead of removing the function?", "url": "https://github.com/apache/pinot/pull/6239#discussion_r518946846", "createdAt": "2020-11-06T19:02:30Z", "author": {"login": "snleee"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/segment/SegmentZKMetadata.java", "diffHunk": "@@ -105,54 +97,40 @@ public void setSegmentName(String segmentName) {\n     _segmentName = segmentName;\n   }\n \n-  @Deprecated\n-  public String getTableName() {\n-    return _tableName;\n+  public SegmentType getSegmentType() {\n+    return _segmentType;\n   }\n \n-  @Deprecated\n-  public void setTableName(String tableName) {\n-    _tableName = tableName;\n+  public void setSegmentType(SegmentType segmentType) {\n+    _segmentType = segmentType;\n   }\n \n-  public long getStartTime() {\n-    return _startTime;\n+  public long getStartTimeMs() {\n+    if (_startTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_startTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setStartTime(long startTime) {\n     _startTime = startTime;\n   }\n \n-  public long getEndTime() {\n-    return _endTime;\n+  public long getEndTimeMs() {\n+    if (_endTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_endTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setEndTime(long endTime) {\n     _endTime = endTime;\n   }\n \n-  public TimeUnit getTimeUnit() {\n-    return _timeUnit;\n-  }\n-\n-  /**\n-   * NOTE: should be called after setting start and end time.\n-   */\n-  public void setTimeUnit(@Nonnull TimeUnit timeUnit) {\n+  public void setTimeUnit(TimeUnit timeUnit) {\n     _timeUnit = timeUnit;\n-    _timeGranularity = new Duration(_timeUnit.toMillis(1));\n-    // For consuming segment, end time might not be set\n-    if (_startTime >= 0 && _startTime <= _endTime) {\n-      _timeInterval = new Interval(_timeUnit.toMillis(_startTime), _timeUnit.toMillis(_endTime));\n-    }\n-  }\n-\n-  public Duration getTimeGranularity() {\n-    return _timeGranularity;\n-  }\n-\n-  public Interval getTimeInterval() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk0NzEyMQ==", "bodyText": "Can we put @Deprecated  annotation instead of removing this?", "url": "https://github.com/apache/pinot/pull/6239#discussion_r518947121", "createdAt": "2020-11-06T19:03:09Z", "author": {"login": "snleee"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/segment/SegmentZKMetadata.java", "diffHunk": "@@ -105,54 +97,40 @@ public void setSegmentName(String segmentName) {\n     _segmentName = segmentName;\n   }\n \n-  @Deprecated\n-  public String getTableName() {\n-    return _tableName;\n+  public SegmentType getSegmentType() {\n+    return _segmentType;\n   }\n \n-  @Deprecated\n-  public void setTableName(String tableName) {\n-    _tableName = tableName;\n+  public void setSegmentType(SegmentType segmentType) {\n+    _segmentType = segmentType;\n   }\n \n-  public long getStartTime() {\n-    return _startTime;\n+  public long getStartTimeMs() {\n+    if (_startTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_startTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setStartTime(long startTime) {\n     _startTime = startTime;\n   }\n \n-  public long getEndTime() {\n-    return _endTime;\n+  public long getEndTimeMs() {\n+    if (_endTime > 0 && _timeUnit != null) {\n+      return _timeUnit.toMillis(_endTime);\n+    } else {\n+      return -1;\n+    }\n   }\n \n   public void setEndTime(long endTime) {\n     _endTime = endTime;\n   }\n \n-  public TimeUnit getTimeUnit() {\n-    return _timeUnit;\n-  }\n-\n-  /**\n-   * NOTE: should be called after setting start and end time.\n-   */\n-  public void setTimeUnit(@Nonnull TimeUnit timeUnit) {\n+  public void setTimeUnit(TimeUnit timeUnit) {\n     _timeUnit = timeUnit;\n-    _timeGranularity = new Duration(_timeUnit.toMillis(1));\n-    // For consuming segment, end time might not be set\n-    if (_startTime >= 0 && _startTime <= _endTime) {\n-      _timeInterval = new Interval(_timeUnit.toMillis(_startTime), _timeUnit.toMillis(_endTime));\n-    }\n-  }\n-\n-  public Duration getTimeGranularity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk0ODU4NQ==", "bodyText": "Do we want to add\nPreconditions.checkState(minStartTimeMs != Long.MAX_VALUE);\n\nto throw the exception at the same condition?", "url": "https://github.com/apache/pinot/pull/6239#discussion_r518948585", "createdAt": "2020-11-06T19:06:03Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/minion/generator/RealtimeToOfflineSegmentsTaskGenerator.java", "diffHunk": "@@ -287,21 +284,14 @@ private long getWatermarkMs(String realtimeTableName, List<LLCRealtimeSegmentZKM\n       long watermarkMs;\n \n       // Find the smallest time from all segments\n-      RealtimeSegmentZKMetadata minSegmentZkMetadata = null;\n+      long minStartTimeMs = Long.MAX_VALUE;\n       for (LLCRealtimeSegmentZKMetadata realtimeSegmentZKMetadata : completedSegmentsMetadata) {\n-        if (minSegmentZkMetadata == null || realtimeSegmentZKMetadata.getStartTime() < minSegmentZkMetadata\n-            .getStartTime()) {\n-          minSegmentZkMetadata = realtimeSegmentZKMetadata;\n-        }\n+        minStartTimeMs = Math.min(minStartTimeMs, realtimeSegmentZKMetadata.getStartTimeMs());\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "580c85b9016d2bb8adc2cdaca74a80dc28bce017", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/580c85b9016d2bb8adc2cdaca74a80dc28bce017", "committedDate": "2020-11-10T19:38:02Z", "message": "Always read start/end time in millis from the segment ZK metadata"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a38db3231b296cfcaae4bdfd9ff501c4f21b41b5", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a38db3231b296cfcaae4bdfd9ff501c4f21b41b5", "committedDate": "2020-11-04T23:46:07Z", "message": "Always read start/end time in millis from the segment ZK metadata"}, "afterCommit": {"oid": "580c85b9016d2bb8adc2cdaca74a80dc28bce017", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/580c85b9016d2bb8adc2cdaca74a80dc28bce017", "committedDate": "2020-11-10T19:38:02Z", "message": "Always read start/end time in millis from the segment ZK metadata"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1745, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}