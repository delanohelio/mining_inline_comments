{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDYzNjkw", "number": 6069, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowMzo1M1rOEqccZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowMzo1M1rOEqccZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQxNjY4OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowMzo1M1rOHcp9qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoxMToxOVrOHcvgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwOTcwNQ==", "bodyText": "This won't take effect... Here is the Helix code for it (I would count it as a bug):\n  @Override\n  public List<T> getChildren(String parentPath, List<Stat> stats, int options, int retryCount,\n      int retryInterval) throws HelixException {\n    return getChildren(parentPath, stats, options);\n  }\n\nI don't see an easy way to throw exception for this API unless we create the children paths manually.", "url": "https://github.com/apache/pinot/pull/6069#discussion_r499809705", "createdAt": "2020-10-05T19:03:53Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "diffHunk": "@@ -305,7 +308,7 @@ public static Schema getTableSchema(@Nonnull ZkHelixPropertyStore<ZNRecord> prop\n       ZkHelixPropertyStore<ZNRecord> propertyStore, String tableName) {\n     String offlineTableName = TableNameBuilder.OFFLINE.tableNameWithType(tableName);\n     String parentPath = constructPropertyStorePathForResource(offlineTableName);\n-    List<ZNRecord> znRecords = propertyStore.getChildren(parentPath, null, AccessOption.PERSISTENT);\n+    List<ZNRecord> znRecords = propertyStore.getChildren(parentPath, null, AccessOption.PERSISTENT, ZK_OP_RETRY_COUNT, ZK_OP_RETRY_INTERVAL_MS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7323688bd837f4c03e9a70ebfa6c1c4738ef0ea4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwMDQ4Mg==", "bodyText": "We are working with the helix team to give us a new version with the API implemented. Since I took the trouble to trace all the APIs, I took the liberty to modify them so that when we upgrade to newer helix version, we have the right calls", "url": "https://github.com/apache/pinot/pull/6069#discussion_r499900482", "createdAt": "2020-10-05T22:11:19Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "diffHunk": "@@ -305,7 +308,7 @@ public static Schema getTableSchema(@Nonnull ZkHelixPropertyStore<ZNRecord> prop\n       ZkHelixPropertyStore<ZNRecord> propertyStore, String tableName) {\n     String offlineTableName = TableNameBuilder.OFFLINE.tableNameWithType(tableName);\n     String parentPath = constructPropertyStorePathForResource(offlineTableName);\n-    List<ZNRecord> znRecords = propertyStore.getChildren(parentPath, null, AccessOption.PERSISTENT);\n+    List<ZNRecord> znRecords = propertyStore.getChildren(parentPath, null, AccessOption.PERSISTENT, ZK_OP_RETRY_COUNT, ZK_OP_RETRY_INTERVAL_MS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwOTcwNQ=="}, "originalCommit": {"oid": "7323688bd837f4c03e9a70ebfa6c1c4738ef0ea4"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3675, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}