{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjE0MzM5", "number": 5867, "title": "[Post-Aggregation] Support post-aggregation in SELECT", "bodyText": "Description\nAdd PostAggregationHandler to handle the post-aggregation calculation\nEnhance AggregationDataTableReducer and GroupByDataTableReducer to support post-aggregation in SELECT", "createdAt": "2020-08-14T22:53:32Z", "url": "https://github.com/apache/pinot/pull/5867", "merged": true, "mergeCommit": {"oid": "89cd958dbabce88befa7561d3d4a25a9f97afaaa"}, "closed": true, "closedAt": "2020-08-18T21:42:00Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-9o-UgBqjM2NTgwMDY3OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdALpHZABqjM2Njc2ODIwMjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e1a46dd3e25cb37c47b6eb044f3aaa72a7c02f0", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/0e1a46dd3e25cb37c47b6eb044f3aaa72a7c02f0", "committedDate": "2020-08-14T20:08:22Z", "message": "Support post-aggregation in SELECT"}, "afterCommit": {"oid": "fad58fccabc4d6e26d1b528d20cb5343107e4fac", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/fad58fccabc4d6e26d1b528d20cb5343107e4fac", "committedDate": "2020-08-14T23:58:08Z", "message": "Support post-aggregation in SELECT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fad58fccabc4d6e26d1b528d20cb5343107e4fac", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/fad58fccabc4d6e26d1b528d20cb5343107e4fac", "committedDate": "2020-08-14T23:58:08Z", "message": "Support post-aggregation in SELECT"}, "afterCommit": {"oid": "edc41780701dbce192e799d3aaffe334a9851f17", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/edc41780701dbce192e799d3aaffe334a9851f17", "committedDate": "2020-08-17T19:26:42Z", "message": "Support post-aggregation in SELECT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edc41780701dbce192e799d3aaffe334a9851f17", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/edc41780701dbce192e799d3aaffe334a9851f17", "committedDate": "2020-08-17T19:26:42Z", "message": "Support post-aggregation in SELECT"}, "afterCommit": {"oid": "597705967ed172f0a08e6a7f46bbbbd49d7651c2", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/597705967ed172f0a08e6a7f46bbbbd49d7651c2", "committedDate": "2020-08-17T19:34:44Z", "message": "Support post-aggregation in SELECT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjY2Njg3", "url": "https://github.com/apache/pinot/pull/5867#pullrequestreview-469666687", "createdAt": "2020-08-18T17:20:12Z", "commit": {"oid": "597705967ed172f0a08e6a7f46bbbbd49d7651c2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMDoxMlrOHCeddw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OTozNlrOHCf5gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1ODI2Mw==", "bodyText": "how about adding a query with literals", "url": "https://github.com/apache/pinot/pull/5867#discussion_r472358263", "createdAt": "2020-08-18T17:20:12Z", "author": {"login": "npawar"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "diffHunk": "@@ -231,6 +231,13 @@ public void testHardcodedSqlQueries()\n     testSqlQuery(query, Collections.singletonList(query));\n     query = \"SELECT MAX(ArrDelay), Month FROM mytable GROUP BY Month ORDER BY ABS(Month - 6) + MAX(ArrDelay)\";\n     testSqlQuery(query, Collections.singletonList(query));\n+\n+    // Post-aggregation in SELECT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597705967ed172f0a08e6a7f46bbbbd49d7651c2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTgyNA==", "bodyText": "looks like the reordering logic happens within postAggregationHandler, whether we have post aggregations functions or not? Can we add a comment either here or inside postAggregationHandler, that reordering is handled as one of the post aggregation operations?", "url": "https://github.com/apache/pinot/pull/5867#discussion_r472381824", "createdAt": "2020-08-18T17:59:36Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/reduce/GroupByDataTableReducer.java", "diffHunk": "@@ -160,103 +160,49 @@ public void reduceAndSetResults(String tableName, DataSchema dataSchema,\n    */\n   private void setSQLGroupByInResultTable(BrokerResponseNative brokerResponseNative, DataSchema dataSchema,\n       Collection<DataTable> dataTables) {\n-    DataSchema resultTableSchema = getSQLResultTableSchema(dataSchema);\n     IndexedTable indexedTable = getIndexedTable(dataSchema, dataTables);\n     Iterator<Record> sortedIterator = indexedTable.iterator();\n+    DataSchema prePostAggregationDataSchema = getPrePostAggregationDataSchema(dataSchema);\n     int limit = _queryContext.getLimit();\n     List<Object[]> rows = new ArrayList<>(limit);\n+    for (int i = 0; i < limit && sortedIterator.hasNext(); i++) {\n+      Object[] row = sortedIterator.next().getValues();\n+      for (int j = 0; j < _numAggregationFunctions; j++) {\n+        int valueIndex = j + _numGroupByExpressions;\n+        row[valueIndex] =\n+            AggregationFunctionUtils.getSerializableValue(_aggregationFunctions[j].extractFinalResult(row[valueIndex]));\n+      }\n+      rows.add(row);\n+    }\n \n     if (_sqlQuery) {\n       // SQL query with SQL group-by mode and response format\n-      // NOTE: For SQL query, need to reorder the columns in the data table based on the select expressions.\n-\n-      int[] selectExpressionIndexMap = getSelectExpressionIndexMap();\n-      int numSelectExpressions = selectExpressionIndexMap.length;\n-      String[] columnNames = resultTableSchema.getColumnNames();\n-      DataSchema.ColumnDataType[] columnDataTypes = resultTableSchema.getColumnDataTypes();\n-      String[] reorderedColumnNames = new String[numSelectExpressions];\n-      DataSchema.ColumnDataType[] reorderedColumnDataTypes = new DataSchema.ColumnDataType[numSelectExpressions];\n-      resultTableSchema = new DataSchema(reorderedColumnNames, reorderedColumnDataTypes);\n-      for (int i = 0; i < numSelectExpressions; i++) {\n-        reorderedColumnNames[i] = columnNames[selectExpressionIndexMap[i]];\n-        reorderedColumnDataTypes[i] = columnDataTypes[selectExpressionIndexMap[i]];\n-      }\n-      while (rows.size() < limit && sortedIterator.hasNext()) {\n-        Record nextRecord = sortedIterator.next();\n-        Object[] values = nextRecord.getValues();\n-        for (int i = 0; i < _numAggregationFunctions; i++) {\n-          int valueIndex = i + _numGroupByExpressions;\n-          values[valueIndex] = AggregationFunctionUtils\n-              .getSerializableValue(_aggregationFunctions[i].extractFinalResult(values[valueIndex]));\n-        }\n \n-        Object[] reorderedValues = new Object[numSelectExpressions];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597705967ed172f0a08e6a7f46bbbbd49d7651c2"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a361c9f4bf449da42f165caf5558c3d400cf883d", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a361c9f4bf449da42f165caf5558c3d400cf883d", "committedDate": "2020-08-18T18:50:46Z", "message": "Support post-aggregation in SELECT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "597705967ed172f0a08e6a7f46bbbbd49d7651c2", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/597705967ed172f0a08e6a7f46bbbbd49d7651c2", "committedDate": "2020-08-17T19:34:44Z", "message": "Support post-aggregation in SELECT"}, "afterCommit": {"oid": "a361c9f4bf449da42f165caf5558c3d400cf883d", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a361c9f4bf449da42f165caf5558c3d400cf883d", "committedDate": "2020-08-18T18:50:46Z", "message": "Support post-aggregation in SELECT"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 195, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}