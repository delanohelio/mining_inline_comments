{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTU3Njg1", "number": 5163, "title": "Optimization for selection only queries: Allow early termination", "bodyText": "In Pinot CombineOpearator,  queries are scheduled with at most 10 threads. For tables with many segments(say 10k), it means each thread will process 1k segments.\nFor selection only queries (e.g. select * from myTable limit 10), each thread may collect enough results to return after scan a few segments. There is no means to wait and scan all the segments.\nThis is extremely useful for people want to randomly browse a big table from query console clicks.", "createdAt": "2020-03-18T01:10:22Z", "url": "https://github.com/apache/pinot/pull/5163", "merged": true, "mergeCommit": {"oid": "917493fc96c93442571c47ee5fed36160691b924"}, "closed": true, "closedAt": "2020-03-18T22:54:23Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOt9VygFqTM3NjUyMzI2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO_aXDAFqTM3NzI5MjEwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTIzMjY3", "url": "https://github.com/apache/pinot/pull/5163#pullrequestreview-376523267", "createdAt": "2020-03-18T02:22:12Z", "commit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjoyMjoxMlrOF30Pdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjozMjoyN1rOF30YwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3MTkyNw==", "bodyText": "Can we rename this method to something more intuitive? Like isQuerySatisfied()?", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394071927", "createdAt": "2020-03-18T02:22:12Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java", "diffHunk": "@@ -196,6 +202,17 @@ public IntermediateResultsBlock callJob()\n     return mergedBlock;\n   }\n \n+  // This will check if IntermediateResultsBlock already satisfying query, so there is no need to continue query processing.\n+  private boolean allowEarlyTermination(BrokerRequest brokerRequest, IntermediateResultsBlock mergedBlock) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3MzcxNw==", "bodyText": "You can make CombineOperator. MAX_NUM_THREADS_PER_QUERY public to make this test easier to understand.", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394073717", "createdAt": "2020-03-18T02:29:48Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3Mzc3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            @Override", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394073775", "createdAt": "2020-03-18T02:30:05Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDAyMA==", "bodyText": "(nit) please reformat and cache getNumSegmentDataManagers()", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394074020", "createdAt": "2020-03-18T02:31:07Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java", "diffHunk": "@@ -121,8 +122,14 @@ public void loadSegment()\n       throws Exception {\n     ImmutableSegment immutableSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     _indexSegment = immutableSegment;\n-    _segmentDataManagers = Arrays\n-        .asList(new ImmutableSegmentDataManager(immutableSegment), new ImmutableSegmentDataManager(immutableSegment));\n+    _segmentDataManagers = new ArrayList<>();\n+    for (int i = 0; i< getNumSegmentDataManagers(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDMwNA==", "bodyText": "Why does numSegmentsMatched also change?", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394074304", "createdAt": "2020-03-18T02:32:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;\n+\n+  protected int getNumSegmentDataManagers() {\n+    return numSegmentDataManagers;\n+  }\n+\n+  /**\n+   * With early termination, Selection Only query is scheduled with ${numSegmentDataManagers} threads,\n+   * total segment processed is same at num threads.\n+   */\n+  @Test\n+  public void testSelectOnlyQuery() {\n+    String query = \"SELECT column1, column6 FROM testTable\";\n+    BrokerResponseNative brokerResponse = getBrokerResponseForPqlQuery(query);\n+    Assert.assertNotNull(brokerResponse.getSelectionResults());\n+    Assert.assertNull(brokerResponse.getResultTable());\n+    Assert.assertTrue(brokerResponse.getNumSegmentsMatched() == numSegmentDataManagers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "committedDate": "2020-03-18T02:56:45Z", "message": "Allow early termination for selection only queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/c98b96efcbcbc70fe11502291f934b7ca85afd11", "committedDate": "2020-03-18T01:01:09Z", "message": "Allow early termination for selection only queries"}, "afterCommit": {"oid": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "committedDate": "2020-03-18T02:56:45Z", "message": "Allow early termination for selection only queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "committedDate": "2020-03-18T05:42:06Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTE1MDM1", "url": "https://github.com/apache/pinot/pull/5163#pullrequestreview-377115035", "createdAt": "2020-03-18T18:07:12Z", "commit": {"oid": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODowNzoxMlrOF4RCxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODowNzoxMlrOF4RCxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MzgxNA==", "bodyText": "Why numThreadsPerQuery != CombineOperator.MAX_NUM_THREADS_PER_QUERY?", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394543814", "createdAt": "2020-03-18T18:07:12Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.apache.pinot.core.operator.CombineOperator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+\n+  /**\n+   * In order to ensure each thread is executing more than 1 segment, this test is against\n+   * (2 * MAX_NUM_THREADS_PER_QUERY) segments.\n+   */\n+  @Override\n+  protected int getNumSegmentDataManagers() {\n+    return CombineOperator.MAX_NUM_THREADS_PER_QUERY * 2;\n+  }\n+\n+  /**\n+   * With early termination, Selection Only query is scheduled with getNumSegmentDataManagers() threads,\n+   * total segment processed is same at num threads.\n+   */\n+  @Test\n+  public void testSelectOnlyQuery() {\n+    int numThreadsPerQuery = getNumSegmentDataManagers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "committedDate": "2020-03-18T19:11:40Z", "message": "refine test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8eee19854655443137f003988b6a654b15d7bf5", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/d8eee19854655443137f003988b6a654b15d7bf5", "committedDate": "2020-03-18T19:06:54Z", "message": "refine test"}, "afterCommit": {"oid": "12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "committedDate": "2020-03-18T19:11:40Z", "message": "refine test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f533ea972acfe18eca8b691ac6260b98fd779583", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/f533ea972acfe18eca8b691ac6260b98fd779583", "committedDate": "2020-03-18T20:12:38Z", "message": "Fix the metadata issue with the early termination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f568b5082e25c193a4c503f6d9da7381283799a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/3f568b5082e25c193a4c503f6d9da7381283799a", "committedDate": "2020-03-18T21:20:32Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjkyMTAw", "url": "https://github.com/apache/pinot/pull/5163#pullrequestreview-377292100", "createdAt": "2020-03-18T22:53:50Z", "commit": {"oid": "3f568b5082e25c193a4c503f6d9da7381283799a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1063, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}