{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4ODA3ODQ2", "number": 6255, "title": "Creating a pluggable interface for Table config tuner", "bodyText": "Description\nRelated to step 1 of #6254\nThis diff adds an annotation type to register table config tuner methods with the Pinot controller. When a new table is being added, this tuner can be used to customize the table config.\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade?\nNo\nDoes this PR fix a zero-downtime upgrade introduced earlier?\nNo\nDoes this PR otherwise need attention when creating release notes?\nYes (will add release notes in final commit)", "createdAt": "2020-11-10T22:42:22Z", "url": "https://github.com/apache/pinot/pull/6255", "merged": true, "mergeCommit": {"oid": "f2c37d5149c59badc5a29e84998ab5ec9c9d188d"}, "closed": true, "closedAt": "2020-12-11T17:51:49Z", "author": {"login": "icefury71"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb8VlMAFqTUyOTYyMTY4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlBTRHgBqjQwOTg1ODI4MTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjIxNjgz", "url": "https://github.com/apache/pinot/pull/6255#pullrequestreview-529621683", "createdAt": "2020-11-13T00:51:04Z", "commit": {"oid": "f45a2e0ccf7b05fc5fb92a65728af9d37f91188c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzA3NjU2", "url": "https://github.com/apache/pinot/pull/6255#pullrequestreview-538707656", "createdAt": "2020-11-25T17:15:50Z", "commit": {"oid": "76d6a43c91e3d8d32787d86cd7549efc655b8001"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzoxNTo1MFrOH59EaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzoxOTowMVrOH59L1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUzMTQzMw==", "bodyText": "Why are we measuring the time here? This should happen during startup, and should be fairly quick.", "url": "https://github.com/apache/pinot/pull/6255#discussion_r530531433", "createdAt": "2020-11-25T17:15:50Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/tuner/TableConfigTunerRegistry.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.config.tuner;\n+\n+import com.google.common.base.Preconditions;\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.pinot.common.function.FunctionInfo;\n+import org.apache.pinot.common.function.FunctionInvoker;\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.config.table.tuner.TableConfigTuner;\n+import org.apache.pinot.spi.data.Schema;\n+import org.reflections.Reflections;\n+import org.reflections.scanners.MethodAnnotationsScanner;\n+import org.reflections.util.ClasspathHelper;\n+import org.reflections.util.ConfigurationBuilder;\n+import org.reflections.util.FilterBuilder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * Helper class to dynamically register all annotated {@link TableConfigTuner} methods\n+ */\n+public class TableConfigTunerRegistry {\n+  private static final int NUM_PARAMETERS = 2;\n+\n+  private TableConfigTunerRegistry() {\n+  }\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(TableConfigTunerRegistry.class);\n+  private static final Map<String, FunctionInfo> tunerFunctionInfoMap = new HashMap<>();\n+\n+  static {\n+    long startTimeMs = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d6a43c91e3d8d32787d86cd7549efc655b8001"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUzMTg1Ng==", "bodyText": "Should think of adding one column as sorted. I am not sure how to pick that column.", "url": "https://github.com/apache/pinot/pull/6255#discussion_r530531856", "createdAt": "2020-11-25T17:16:32Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/tuner/RealTimeAutoIndexTuner.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.config.tuner;\n+\n+import org.apache.pinot.spi.config.table.IndexingConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.config.table.tuner.TableConfigTuner;\n+import org.apache.pinot.spi.data.Schema;\n+\n+\n+/**\n+ * Used to auto-tune the table indexing config. It takes the original table\n+ * config, table schema and adds the following to indexing config:\n+ * - Inverted indices for all dimensions\n+ * - No dictionary index for all metrics\n+ */\n+public class RealTimeAutoIndexTuner {\n+\n+  @TableConfigTuner(name = \"realtimeAutoIndexTuner\")\n+  public static TableConfig tuneTableConfig(TableConfig initialConfig, Schema schema) {\n+    IndexingConfig initialIndexingConfig = initialConfig.getIndexingConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d6a43c91e3d8d32787d86cd7549efc655b8001"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUzMzMzNQ==", "bodyText": "I suggest adding a check in (perhaps some base class?) if there are already some columns configured for inv index, no dictionary, etc.  If so, then the configured items take precedence over what this method does.", "url": "https://github.com/apache/pinot/pull/6255#discussion_r530533335", "createdAt": "2020-11-25T17:19:01Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/tuner/RealTimeAutoIndexTuner.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.config.tuner;\n+\n+import org.apache.pinot.spi.config.table.IndexingConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.config.table.tuner.TableConfigTuner;\n+import org.apache.pinot.spi.data.Schema;\n+\n+\n+/**\n+ * Used to auto-tune the table indexing config. It takes the original table\n+ * config, table schema and adds the following to indexing config:\n+ * - Inverted indices for all dimensions\n+ * - No dictionary index for all metrics\n+ */\n+public class RealTimeAutoIndexTuner {\n+\n+  @TableConfigTuner(name = \"realtimeAutoIndexTuner\")\n+  public static TableConfig tuneTableConfig(TableConfig initialConfig, Schema schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d6a43c91e3d8d32787d86cd7549efc655b8001"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDMzMjgz", "url": "https://github.com/apache/pinot/pull/6255#pullrequestreview-549433283", "createdAt": "2020-12-10T17:25:53Z", "commit": {"oid": "1312ea378a3933927ec5e07496a94326b7eac834"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzoyNTo1M1rOIDUwUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzoyNTo1M1rOIDUwUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NjY5MQ==", "bodyText": "Is this the tuner registered by default with the TableConfigTunerRegistry?", "url": "https://github.com/apache/pinot/pull/6255#discussion_r540356691", "createdAt": "2020-12-10T17:25:53Z", "author": {"login": "siddharthteotia"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/tuner/NoOpTableTableConfigTuner.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.config.tuner;\n+\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.config.table.TunerConfig;\n+import org.apache.pinot.spi.config.table.tuner.TableConfigTuner;\n+import org.apache.pinot.spi.config.table.tuner.Tuner;\n+import org.apache.pinot.spi.data.Schema;\n+\n+\n+@Tuner(name = \"noopConfigTuner\")\n+public class NoOpTableTableConfigTuner implements TableConfigTuner {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1312ea378a3933927ec5e07496a94326b7eac834"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDUyOTU2", "url": "https://github.com/apache/pinot/pull/6255#pullrequestreview-549452956", "createdAt": "2020-12-10T17:47:18Z", "commit": {"oid": "1312ea378a3933927ec5e07496a94326b7eac834"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b75b40754d2e0f2de98a90f3970247c97ff15a", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/d5b75b40754d2e0f2de98a90f3970247c97ff15a", "committedDate": "2020-12-11T05:33:38Z", "message": "Creating a pluggable interface for indexing config resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2836152b9f91cdf17b9559a0e32488d4e02e6bf5", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/2836152b9f91cdf17b9559a0e32488d4e02e6bf5", "committedDate": "2020-12-11T05:33:38Z", "message": "Adding a simple auto tune indexing config resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2b325b411c99cffcdcb893561c494f8d6706c7d", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/f2b325b411c99cffcdcb893561c494f8d6706c7d", "committedDate": "2020-12-11T05:33:38Z", "message": "Adding ability to deregister indexing config resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64cefb840a241ab1996c05c68d0e38294c339548", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/64cefb840a241ab1996c05c68d0e38294c339548", "committedDate": "2020-12-11T05:38:50Z", "message": "Enabling dynamically registered TableConfigTuner methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f184974241b0f4a224cd992caef23506eaa372ac", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/f184974241b0f4a224cd992caef23506eaa372ac", "committedDate": "2020-12-11T05:41:31Z", "message": " - Adding a TableConfigTuner interface\n - Adding a Tuner annotation type for auto-discovering such tuners"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd8dc0622d1635956899239676d48c96ef3b40d5", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/cd8dc0622d1635956899239676d48c96ef3b40d5", "committedDate": "2020-12-11T05:41:31Z", "message": "Bug fix in TunerConfig. Adding serde test for TunerConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1312ea378a3933927ec5e07496a94326b7eac834", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/1312ea378a3933927ec5e07496a94326b7eac834", "committedDate": "2020-12-04T19:21:00Z", "message": "Bug fix in TunerConfig. Adding serde test for TunerConfig"}, "afterCommit": {"oid": "cd8dc0622d1635956899239676d48c96ef3b40d5", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/cd8dc0622d1635956899239676d48c96ef3b40d5", "committedDate": "2020-12-11T05:41:31Z", "message": "Bug fix in TunerConfig. Adding serde test for TunerConfig"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1772, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}