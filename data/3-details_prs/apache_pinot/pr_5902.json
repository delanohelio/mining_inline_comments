{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTEyMjY4", "number": 5902, "title": "Instance API to directly updateTags", "bodyText": "Description\nNew API for updating instance tags.\ncurl -i -X PUT \"localhost:9000/instances/Server_10.20.30.40_8000/updateTags?tags=server_OFFLINE,server_REALTIME\"\nHTTP/1.1 200 OK\nPinot-Controller-Host: 10.20.30.40\nPinot-Controller-Version: Unknown\nAccess-Control-Allow-Origin: *\nContent-Type: application/json\nContent-Length: 42\n\n{\"status\":\"Instance successfully updated\"}\n\nRelease Notes\nNew API for updating instance tags directly", "createdAt": "2020-08-19T23:27:50Z", "url": "https://github.com/apache/pinot/pull/5902", "merged": true, "mergeCommit": {"oid": "6640affe5b2ac6bc0a972c7a9e291c1d5189effb"}, "closed": true, "closedAt": "2020-09-03T23:23:57Z", "author": {"login": "npawar"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAk_deAFqTQ3MTA0Mzg2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFWaeQgBqjM3MjY0Njk3NTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDQzODY0", "url": "https://github.com/apache/pinot/pull/5902#pullrequestreview-471043864", "createdAt": "2020-08-20T00:08:36Z", "commit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowODozNlrOHDhqSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoyMjozNlrOHDiOXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1OTI3NA==", "bodyText": "Also log the tags", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473459274", "createdAt": "2020-08-20T00:08:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg==", "bodyText": "If the instance does not exist, we should return BAD_REQUEST", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473460422", "createdAt": "2020-08-20T00:10:14Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MTM1Nw==", "bodyText": "Pass in a List<String> so that it is easier to use?", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473461357", "createdAt": "2020-08-20T00:11:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +53,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, String tagsList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODUwOQ==", "bodyText": "Can be simplified as following (not sure why Helix does not provide setTags()), also StringUtils.split() has better performance than String.split() which takes a regex\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String[] newTags = tags.split(\",\");\n          \n          \n            \n                List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n          \n          \n            \n                for (String tag : existingTags) {\n          \n          \n            \n                  instanceConfig.removeTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                for (String tag : newTags) {\n          \n          \n            \n                  instanceConfig.addTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                List<String> tagList = Arrays.asList(StringUtils.split(tags, ','));\n          \n          \n            \n                instanceConfig.getRecord().setListField(InstanceConfig.InstanceConfigProperty.TAG_LIST.name(), tagList);", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473468509", "createdAt": "2020-08-20T00:22:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);\n+    if (instanceConfig == null) {\n+      return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n+    }\n+    String[] newTags = tags.split(\",\");\n+    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n+    for (String tag : existingTags) {\n+      instanceConfig.removeTag(tag);\n+    }\n+    for (String tag : newTags) {\n+      instanceConfig.addTag(tag);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzU0ODYx", "url": "https://github.com/apache/pinot/pull/5902#pullrequestreview-471354861", "createdAt": "2020-08-20T08:00:38Z", "commit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODowMDozOFrOHDyXmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODowMjoxNVrOHDye9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw==", "bodyText": "run this in a compare and set loop to handle race conditions. we can wrap this function in updater", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473733017", "createdAt": "2020-08-20T08:00:38Z", "author": {"login": "kishoreg"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczNDkwMA==", "bodyText": "print the new tags. Instance tags successfully updated from:{old tags} to: {new tags}", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473734900", "createdAt": "2020-08-20T08:02:15Z", "author": {"login": "kishoreg"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+    return new SuccessResponse(\"Instance successfully updated\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d65ebecfe0d568163ae90ab29c2ee630b724014", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/5d65ebecfe0d568163ae90ab29c2ee630b724014", "committedDate": "2020-08-31T17:17:12Z", "message": "Instance API to directly updateTags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "committedDate": "2020-08-31T18:23:41Z", "message": "Review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/e1b04f8c617f86767632e366f2487d6890a9131a", "committedDate": "2020-08-19T23:24:16Z", "message": "Instance API to directly updateTags"}, "afterCommit": {"oid": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "committedDate": "2020-08-31T18:23:41Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "773f80a154885427b7ca03be1e23631f02163166", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/773f80a154885427b7ca03be1e23631f02163166", "committedDate": "2020-08-31T18:28:24Z", "message": "List in param instead of string"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTQ2NjU4", "url": "https://github.com/apache/pinot/pull/5902#pullrequestreview-482146658", "createdAt": "2020-09-03T19:39:37Z", "commit": {"oid": "773f80a154885427b7ca03be1e23631f02163166"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTozOTozN1rOHM05tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTo0MDoxN1rOHM07Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMTcwMw==", "bodyText": "Suggest using StringUtils to join\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));\n          \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + StringUtils.join(tags, ',');", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483211703", "createdAt": "2020-09-03T19:39:37Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +55,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, List<String> tags) {\n+    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773f80a154885427b7ca03be1e23631f02163166"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMjA0Mw==", "bodyText": "Not from this PR, but let's change it to lang3 for consistency\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.apache.commons.lang.StringUtils;\n          \n          \n            \n            import org.apache.commons.lang3.StringUtils;", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483212043", "createdAt": "2020-09-03T19:40:17Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -18,6 +18,8 @@\n  */\n package org.apache.pinot.controller.helix;\n \n+import com.google.common.base.Joiner;\n+import java.util.List;\n import javax.annotation.Nullable;\n import org.apache.commons.lang.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773f80a154885427b7ca03be1e23631f02163166"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "committedDate": "2020-09-03T20:13:27Z", "message": "Review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c45cee4019c38938c8b5e98ac09b3c12914790c", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/8c45cee4019c38938c8b5e98ac09b3c12914790c", "committedDate": "2020-09-03T20:12:03Z", "message": "Review comments"}, "afterCommit": {"oid": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "committedDate": "2020-09-03T20:13:27Z", "message": "Review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 240, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}