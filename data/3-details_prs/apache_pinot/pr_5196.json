{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODk3MzQx", "number": 5196, "title": "[TE] fix the merger issue that it can't merge historical anomaly generated by multiple rules", "bodyText": "Issue: Child-keeping merge wrapper won't merge the historical anomaly generated by multiple rules.\nFix: Let the child-keeping merger retrieves the historical anomaly generated by multiple rules from the database and re-merges them. Previously this was ignored.", "createdAt": "2020-03-30T20:55:16Z", "url": "https://github.com/apache/pinot/pull/5196", "merged": true, "mergeCommit": {"oid": "fedd1aeb48aacee39d590e22758556ab77dd50ce"}, "closed": true, "closedAt": "2020-03-31T22:43:52Z", "author": {"login": "jihaozh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS03BigH2gAyMzk1ODk3MzQxOjBjZTFmNzIxM2FkNDU0YzhmMjYyMjk2MmE1ZTg2N2JlMjM5YTA0NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTKzjMAFqTM4NTE0ODEwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/0ce1f7213ad454c8f2622962a5e867be239a046c", "committedDate": "2020-03-30T20:51:53Z", "message": "[TE] fix the merger issue that it can't merge historical anomaly generated by multiple rules."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzA5Mzg0", "url": "https://github.com/apache/pinot/pull/5196#pullrequestreview-384309384", "createdAt": "2020-03-30T23:46:03Z", "commit": {"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzo0NjowM1rOF-AQ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzo0OTowMlrOF-AUZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MDM0OA==", "bodyText": "@jihaozh Do you know a reason why we had this logic?", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400560348", "createdAt": "2020-03-30T23:46:03Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTE1Mg==", "bodyText": "This is too hacky.  We can't depend on the string match to tell whether there are multiple components.\nWhat if we decided to change the delimiter some time later then this is a bug hard to debug.\nLet's put some helper function here to actually parse/assemble the component name in a centralized place.", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400561152", "createdAt": "2020-03-30T23:48:43Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database\n+  // retrieve the anomalies that are detected by multiple detectors\n   protected List<MergedAnomalyResultDTO> retrieveAnomaliesFromDatabase(List<MergedAnomalyResultDTO> generated) {\n-    return Collections.emptyList();\n+    AnomalySlice effectiveSlice = this.slice.withDetectionId(this.config.getId())\n+        .withStart(this.getStartTime(generated) - this.maxGap - 1)\n+        .withEnd(this.getEndTime(generated) + this.maxGap + 1);\n+\n+    Collection<MergedAnomalyResultDTO> anomalies =\n+        this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n+\n+    return anomalies.stream()\n+        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))\n+        .collect(Collectors.toList());\n+  }\n+\n+  private boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n+    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n+    return componentName.contains(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTI1Mg==", "bodyText": "Why we need to have a filter on multiple component here?", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400561252", "createdAt": "2020-03-30T23:49:02Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database\n+  // retrieve the anomalies that are detected by multiple detectors\n   protected List<MergedAnomalyResultDTO> retrieveAnomaliesFromDatabase(List<MergedAnomalyResultDTO> generated) {\n-    return Collections.emptyList();\n+    AnomalySlice effectiveSlice = this.slice.withDetectionId(this.config.getId())\n+        .withStart(this.getStartTime(generated) - this.maxGap - 1)\n+        .withEnd(this.getEndTime(generated) + this.maxGap + 1);\n+\n+    Collection<MergedAnomalyResultDTO> anomalies =\n+        this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n+\n+    return anomalies.stream()\n+        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/55eda4b995d47b68e651d92d8ace4dc653ff08b5", "committedDate": "2020-03-31T20:36:25Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDkxOTkz", "url": "https://github.com/apache/pinot/pull/5196#pullrequestreview-385091993", "createdAt": "2020-03-31T20:47:04Z", "commit": {"oid": "55eda4b995d47b68e651d92d8ace4dc653ff08b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0NzowNFrOF-nmpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0NzowNFrOF-nmpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDkwMQ==", "bodyText": "Convert \",\" to a static final string PROP_DETECTOR_COMPONENT_NAME_DELIMETER and use this for all the places it is used. E.g, combineComponents()/", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401204901", "createdAt": "2020-03-31T20:47:04Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java", "diffHunk": "@@ -705,6 +706,16 @@ public static long getCachingPeriodLookback(TimeGranularity granularity) {\n     return period;\n   }\n \n+  /**\n+   * Check if the anomaly is detected by multiple components\n+   * @param anomaly the anomaly\n+   * @return if the anomaly is detected by multiple components\n+   */\n+  public static boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n+    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n+    return componentName.contains(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55eda4b995d47b68e651d92d8ace4dc653ff08b5"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0", "committedDate": "2020-03-31T21:21:25Z", "message": "address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTQ4MTA5", "url": "https://github.com/apache/pinot/pull/5196#pullrequestreview-385148109", "createdAt": "2020-03-31T22:26:00Z", "commit": {"oid": "e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1137, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}