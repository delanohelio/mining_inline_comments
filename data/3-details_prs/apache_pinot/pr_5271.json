{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDI4Mjcw", "number": 5271, "title": "Remove hadoop dependency in Create Segment Command", "bodyText": "Adding LocalPinotFS as default PinotFSFactory\nRemove hadoop Path/FileSystem etc dependency in CreateSegmentCommand", "createdAt": "2020-04-18T02:04:04Z", "url": "https://github.com/apache/pinot/pull/5271", "merged": true, "mergeCommit": {"oid": "4ed36ff6653c53a8780e9a9d68b370561c251f68"}, "closed": true, "closedAt": "2020-04-21T07:15:34Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYtFSVAH2gAyNDA1NDI4MjcwOjNjZWNjYzFjNGFhZDYyNDU2MjllNzA2NGFiNDEyOThiZWUwMGFkOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZlY2QgBqjMyNTM1MjA4Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ceccc1c4aad6245629e7064ab41298bee00ad8c", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/3ceccc1c4aad6245629e7064ab41298bee00ad8c", "committedDate": "2020-04-18T03:11:46Z", "message": "Remove hadoop dependency in Create Segment Command"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1398dd37891ef0673e7d0194141af684aee625e1", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/1398dd37891ef0673e7d0194141af684aee625e1", "committedDate": "2020-04-18T02:03:19Z", "message": "Remove hadoop dependency in Create Segment Command"}, "afterCommit": {"oid": "3ceccc1c4aad6245629e7064ab41298bee00ad8c", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/3ceccc1c4aad6245629e7064ab41298bee00ad8c", "committedDate": "2020-04-18T03:11:46Z", "message": "Remove hadoop dependency in Create Segment Command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32674d0d286faaf269692af09999b5fd19fac83f", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/32674d0d286faaf269692af09999b5fd19fac83f", "committedDate": "2020-04-20T19:37:49Z", "message": "move gson to fasterxml for github events quickstart"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzYwODAw", "url": "https://github.com/apache/pinot/pull/5271#pullrequestreview-396760800", "createdAt": "2020-04-20T19:47:26Z", "commit": {"oid": "32674d0d286faaf269692af09999b5fd19fac83f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo0NzoyNlrOGIk1OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MDozN1rOGIk8jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NTI0MQ==", "bodyText": "Delete the local file after generating the segment? (Also recommend putting it into a temp dir)\nAlso, not sure if it is a good idea directly using the file name because there might be conflict for nested dir.", "url": "https://github.com/apache/pinot/pull/5271#discussion_r411645241", "createdAt": "2020-04-20T19:47:26Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/CreateSegmentCommand.java", "diffHunk": "@@ -334,10 +333,10 @@ public void run() {\n           for (int curr = 0; curr <= _retry; curr++) {\n             try {\n               SegmentGeneratorConfig config = new SegmentGeneratorConfig(segmentGeneratorConfig);\n-\n-              String localFile = dataFilePath.getName();\n-              Path localFilePath = new Path(localFile);\n-              dataDirPath.getFileSystem(new Configuration()).copyToLocalFile(dataFilePath, localFilePath);\n+              URI dataFileUri = URI.create(dataFilePath);\n+              String[] splits = dataFilePath.split(\"/\");\n+              String localFile = splits[splits.length - 1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32674d0d286faaf269692af09999b5fd19fac83f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NzExOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        commits = OBJECT_MAPPER.reader().readTree(commitsResponse.responseString);\n          \n          \n            \n                        commits = JsonUtils.stringToJsonNode(commitsResponse.responseString);\n          \n      \n    \n    \n  \n\nSame for other places. No need to construct another object mapper", "url": "https://github.com/apache/pinot/pull/5271#discussion_r411647119", "createdAt": "2020-04-20T19:50:37Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/streams/githubevents/PullRequestMergedEventsStream.java", "diffHunk": "@@ -206,41 +215,41 @@ public void start() {\n    * Find commits, review comments, comments corresponding to this pull request event.\n    * Construct a PullRequestMergedEvent with the help of the event, commits, review comments and comments.\n    * Converts PullRequestMergedEvent to GenericRecord\n+   * @param event\n    */\n-  private GenericRecord convertToPullRequestMergedGenericRecord(JsonElement eventJson)\n+  private GenericRecord convertToPullRequestMergedGenericRecord(JsonNode event)\n       throws IOException {\n     GenericRecord genericRecord = null;\n-    JsonObject event = eventJson.getAsJsonObject();\n-    String type = event.get(\"type\").getAsString();\n+    String type = event.get(\"type\").asText();\n \n     if (\"PullRequestEvent\".equals(type)) {\n-      JsonObject payload = event.get(\"payload\").getAsJsonObject();\n+      JsonNode payload = event.get(\"payload\");\n       if (payload != null) {\n-        String action = payload.get(\"action\").getAsString();\n-        JsonObject pullRequest = payload.get(\"pull_request\").getAsJsonObject();\n-        String merged = pullRequest.get(\"merged\").getAsString();\n+        String action = payload.get(\"action\").asText();\n+        JsonNode pullRequest = payload.get(\"pull_request\");\n+        String merged = pullRequest.get(\"merged\").asText();\n         if (\"closed\".equals(action) && \"true\".equals(merged)) { // valid pull request merge event\n \n-          JsonArray commits = null;\n-          String commitsURL = pullRequest.get(\"commits_url\").getAsString();\n+          JsonNode commits = null;\n+          String commitsURL = pullRequest.get(\"commits_url\").asText();\n           GitHubAPICaller.GitHubAPIResponse commitsResponse = _gitHubAPICaller.callAPI(commitsURL);\n \n           if (commitsResponse.responseString != null) {\n-            commits = new JsonParser().parse(commitsResponse.responseString).getAsJsonArray();\n+            commits = OBJECT_MAPPER.reader().readTree(commitsResponse.responseString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32674d0d286faaf269692af09999b5fd19fac83f"}, "originalPosition": 96}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1afa37db69c1271f345737e67f95860a9e8a32d0", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/1afa37db69c1271f345737e67f95860a9e8a32d0", "committedDate": "2020-04-20T20:04:57Z", "message": "Address comments"}, "afterCommit": {"oid": "01f5f96ce28ea6680e6f8f8b6e9e54b47a49702f", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/01f5f96ce28ea6680e6f8f8b6e9e54b47a49702f", "committedDate": "2020-04-20T20:14:38Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0952f31ca739986fb3d1db8a458c611153817823", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/0952f31ca739986fb3d1db8a458c611153817823", "committedDate": "2020-04-20T20:47:38Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01f5f96ce28ea6680e6f8f8b6e9e54b47a49702f", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/01f5f96ce28ea6680e6f8f8b6e9e54b47a49702f", "committedDate": "2020-04-20T20:14:38Z", "message": "Address comments"}, "afterCommit": {"oid": "0952f31ca739986fb3d1db8a458c611153817823", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/0952f31ca739986fb3d1db8a458c611153817823", "committedDate": "2020-04-20T20:47:38Z", "message": "Address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1250, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}