{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTEyMjY4", "number": 5902, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowODozNlrOEaOpOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTo0MDoxN1rOEgIW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTM4MzYxOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowODozNlrOHDhqSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowODozNlrOHDhqSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1OTI3NA==", "bodyText": "Also log the tags", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473459274", "createdAt": "2020-08-20T00:08:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTM5MDczOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoxMDoxNFrOHDhuxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowODoxOVrOHEPa2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg==", "bodyText": "If the instance does not exist, we should return BAD_REQUEST", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473460422", "createdAt": "2020-08-20T00:10:14Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMjQ4Mw==", "bodyText": "Instance check is happening in PinotHelixResourceManager. How do i return BAD_REQUEST from PinotHelixResourceManager? I want that instance check to remain in PinotHelixResourceManager, because that method is synchronized and will protect against race condition with delete.", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474112483", "createdAt": "2020-08-20T16:26:38Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg=="}, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwODk4NQ==", "bodyText": "Seems the updateInstance has the same behavior. We should probably provide more status info in the PinotResourceManagerResponse besides success/failure. Not a blocker for this PR", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474208985", "createdAt": "2020-08-20T19:08:19Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg=="}, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTM5NTg4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoxMTozNlrOHDhybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoxMTozNlrOHDhybQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MTM1Nw==", "bodyText": "Pass in a List<String> so that it is easier to use?", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473461357", "createdAt": "2020-08-20T00:11:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +53,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, String tagsList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTQzNzU4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoyMjozNlrOHDiOXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODoyNDo0MVrOHKDqHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODUwOQ==", "bodyText": "Can be simplified as following (not sure why Helix does not provide setTags()), also StringUtils.split() has better performance than String.split() which takes a regex\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String[] newTags = tags.split(\",\");\n          \n          \n            \n                List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n          \n          \n            \n                for (String tag : existingTags) {\n          \n          \n            \n                  instanceConfig.removeTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                for (String tag : newTags) {\n          \n          \n            \n                  instanceConfig.addTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                List<String> tagList = Arrays.asList(StringUtils.split(tags, ','));\n          \n          \n            \n                instanceConfig.getRecord().setListField(InstanceConfig.InstanceConfigProperty.TAG_LIST.name(), tagList);", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473468509", "createdAt": "2020-08-20T00:22:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);\n+    if (instanceConfig == null) {\n+      return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n+    }\n+    String[] newTags = tags.split(\",\");\n+    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n+    for (String tag : existingTags) {\n+      instanceConfig.removeTag(tag);\n+    }\n+    for (String tag : newTags) {\n+      instanceConfig.addTag(tag);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwNzc0Mw==", "bodyText": "Ah thanks for this", "url": "https://github.com/apache/pinot/pull/5902#discussion_r480307743", "createdAt": "2020-08-31T18:24:41Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);\n+    if (instanceConfig == null) {\n+      return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n+    }\n+    String[] newTags = tags.split(\",\");\n+    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n+    for (String tag : existingTags) {\n+      instanceConfig.removeTag(tag);\n+    }\n+    for (String tag : newTags) {\n+      instanceConfig.addTag(tag);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODUwOQ=="}, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTA1MjA0OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODowMDozOFrOHDyXmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzoyNTowNlrOHJZqFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw==", "bodyText": "run this in a compare and set loop to handle race conditions. we can wrap this function in updater", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473733017", "createdAt": "2020-08-20T08:00:38Z", "author": {"login": "kishoreg"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMDUzMQ==", "bodyText": "what kind of race conditions are you thinking about? All of the methods which update this config are synchronized methods.\nAre you thinking about race conditions across controllers? (we haven't really handled that for any of our APIs)", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474110531", "createdAt": "2020-08-20T16:23:41Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw=="}, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxOTYwNg==", "bodyText": "ok, we can handle that in another PR", "url": "https://github.com/apache/pinot/pull/5902#discussion_r479619606", "createdAt": "2020-08-29T07:25:06Z", "author": {"login": "kishoreg"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw=="}, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTA2MjYxOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODowMjoxNVrOHDye9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODowMjoxNVrOHDye9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczNDkwMA==", "bodyText": "print the new tags. Instance tags successfully updated from:{old tags} to: {new tags}", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473734900", "createdAt": "2020-08-20T08:02:15Z", "author": {"login": "kishoreg"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+    return new SuccessResponse(\"Instance successfully updated\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1b04f8c617f86767632e366f2487d6890a9131a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTI2NTgyOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTozOTozN1rOHM05tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTozOTozN1rOHM05tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMTcwMw==", "bodyText": "Suggest using StringUtils to join\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));\n          \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + StringUtils.join(tags, ',');", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483211703", "createdAt": "2020-09-03T19:39:37Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +55,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, List<String> tags) {\n+    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773f80a154885427b7ca03be1e23631f02163166"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTI2ODEzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTo0MDoxN1rOHM07Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOTo0MDoxN1rOHM07Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMjA0Mw==", "bodyText": "Not from this PR, but let's change it to lang3 for consistency\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.apache.commons.lang.StringUtils;\n          \n          \n            \n            import org.apache.commons.lang3.StringUtils;", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483212043", "createdAt": "2020-09-03T19:40:17Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -18,6 +18,8 @@\n  */\n package org.apache.pinot.controller.helix;\n \n+import com.google.common.base.Joiner;\n+import java.util.List;\n import javax.annotation.Nullable;\n import org.apache.commons.lang.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773f80a154885427b7ca03be1e23631f02163166"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4032, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}