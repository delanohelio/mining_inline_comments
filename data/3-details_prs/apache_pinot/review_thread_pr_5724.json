{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjcyOTE1", "number": 5724, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NDo0N1rOEQ0sqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxODoxNFrOEROP6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc2MDc0OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NDo0N1rOG1MdbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NDo0N1rOG1MdbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMTg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",\n          \n          \n            \n                LOGGER.info(\"Set query rate limiting to: {} for all tables in this broker.\", _enabled ? \"ENABLED\" : \"DISABLED\",", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458431852", "createdAt": "2020-07-21T22:44:47Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n+    _enabled = Boolean.parseBoolean(queryQuotaEnabled);\n+    LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc2NDc0OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NjoyMFrOG1MftA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NjoyMFrOG1MftA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMjQzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String QUERY_QUOTA_STATE_ENABLED = \"queryQuotaStateEnabled\";\n          \n          \n            \n                public static final String QUERY_RATE_LIMIT_DISABLED = \"queryRateLimitDisabled\";\n          \n      \n    \n    \n  \n\nSince this is not the normal state, IMO it is better to highlight if this is disabled rather than enabled.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458432436", "createdAt": "2020-07-21T22:46:20Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -30,6 +30,7 @@\n   public static class Helix {\n     public static final String IS_SHUTDOWN_IN_PROGRESS = \"shutdownInProgress\";\n     public static final String QUERIES_DISABLED = \"queriesDisabled\";\n+    public static final String QUERY_QUOTA_STATE_ENABLED = \"queryQuotaStateEnabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc2ODQ1OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0Nzo1MlrOG1Mh2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0Nzo1MlrOG1Mh2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMjk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n          \n          \n            \n                String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"false\");", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458432987", "createdAt": "2020-07-21T22:47:52Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc3MDc0OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0ODo1MlrOG1MjMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMzoxMjo0N1rOG1NClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzMyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    _rateLimiterMap.size());\n          \n          \n            \n                    );\n          \n      \n    \n    \n  \n\nEven if new tables are added, query rate limiting check will not be done. Maybe you can add in the same message that there are currently N tables on this broker, but the log should clearly indicate that it is disabled for all tables", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458433328", "createdAt": "2020-07-21T22:48:52Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n+    _enabled = Boolean.parseBoolean(queryQuotaEnabled);\n+    LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",\n+        _rateLimiterMap.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTM2NQ==", "bodyText": "I'd insist keeping the size of the map. That'll give us a good insight on how many tables are affected by this state change.\nAnd sure, I can add the state message in the message.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458441365", "createdAt": "2020-07-21T23:12:47Z", "author": {"login": "jackjlli"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n+    _enabled = Boolean.parseBoolean(queryQuotaEnabled);\n+    LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",\n+        _rateLimiterMap.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzMyOA=="}, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc3NTEzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1MDo0M1rOG1MlvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1MDo0M1rOG1MlvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzk4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n          \n          \n            \n              @ApiOperation(value = \"Enable/disable the query rate limiting for a broker instance\", notes = \"Enable/disable the query rate limiting for a broker instance\")", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458433980", "createdAt": "2020-07-21T22:50:43Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc3NjcyOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1MTozMFrOG1Mmtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMzoxNDoxOVrOG1NEQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDIzMA==", "bodyText": "What does 409 mean in this case?", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458434230", "createdAt": "2020-07-21T22:51:30Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTc5Mg==", "bodyText": "Good catch! \ud83d\udc4d Removed.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458441792", "createdAt": "2020-07-21T23:14:19Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDIzMA=="}, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc3OTM2OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1Mjo0MlrOG1MoRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMzo0NzoyOFrOG1NteA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDYzMQ==", "bodyText": "Can you move this line down after the parameter checking? thanks", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458434631", "createdAt": "2020-07-21T22:52:42Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    List<String> liveInstances = _pinotHelixResourceManager.getOnlineInstanceList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1MjM0NA==", "bodyText": "Done.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458452344", "createdAt": "2020-07-21T23:47:28Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    List<String> liveInstances = _pinotHelixResourceManager.getOnlineInstanceList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDYzMQ=="}, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc4NDE3OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1NDo1MVrOG1MrDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1NDo1MVrOG1MrDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNTM0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String msg = String.format(\"Toggled query quota state to: %s for broker: %s\", state, brokerInstanceName);\n          \n          \n            \n                String msg = String.format(\"Set query rate limiting to: %s for all tables in broker: %s\", state, brokerInstanceName);", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458435340", "createdAt": "2020-07-21T22:54:51Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    List<String> liveInstances = _pinotHelixResourceManager.getOnlineInstanceList();\n+    if (brokerInstanceName == null || !brokerInstanceName.startsWith(\"Broker_\")) {\n+      LOGGER.info(\"{} isn't a valid broker instance name\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER,\n+          String.format(\"'%s' is not a valid broker instance name.\", brokerInstanceName), Response.Status.BAD_REQUEST);\n+    }\n+    if (!liveInstances.contains(brokerInstanceName)) {\n+      LOGGER.info(\"Broker instance: {} not found from live instances\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER, String.format(\"Instance '%s' not found.\", brokerInstanceName),\n+          Response.Status.NOT_FOUND);\n+    }\n+    validateQueryQuotaStateChange(state);\n+    _pinotHelixResourceManager.toggleQueryQuotaStateForBroker(brokerInstanceName, state);\n+    String msg = String.format(\"Toggled query quota state to: %s for broker: %s\", state, brokerInstanceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDc4NzE4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1NjoxMFrOG1Ms3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1NjoxMFrOG1Ms3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNTgwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public SuccessResponse toggleBrokerQpsState(\n          \n          \n            \n              public SuccessResponse toggleQueryRateLimiting(", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458435804", "createdAt": "2020-07-21T22:56:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDkzOTQ2OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxNTo1OFrOG10gzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxNTo1OFrOG10gzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4ODA3OA==", "bodyText": "suggest renaming these two methods as per new change in config names", "url": "https://github.com/apache/pinot/pull/5724#discussion_r459088078", "createdAt": "2020-07-22T21:15:58Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -352,13 +369,42 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n         numRebuilt++;\n       }\n     }\n+    if (isQueryRateLimitDisabled()) {\n+      LOGGER.info(\"Query rate limiting is currently disabled for this broker. So it won't take effect immediately.\");\n+    }\n     _lastKnownBrokerResourceVersion.set(currentVersionNumber);\n     long endTime = System.currentTimeMillis();\n     LOGGER\n         .info(\"Processed query quota change in {}ms, {} out of {} query quota configs rebuilt.\", (endTime - startTime),\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDk0Njk4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxODoxNFrOG10lYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToyODo0M1rOG105Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4OTI1MQ==", "bodyText": "nit: Create an error string, and then use it in log as well as exeption.\nSame in other places as well, will not repeat.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r459089251", "createdAt": "2020-07-22T21:18:14Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the query rate limiting for a broker instance\", notes = \"Enable/disable the query rate limiting for a broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleQueryRateLimiting(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    if (brokerInstanceName == null || !brokerInstanceName.startsWith(\"Broker_\")) {\n+      LOGGER.info(\"{} isn't a valid broker instance name\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER,\n+          String.format(\"'%s' is not a valid broker instance name.\", brokerInstanceName), Response.Status.BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5NDM0Ng==", "bodyText": "Removed the duplicate logging.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r459094346", "createdAt": "2020-07-22T21:28:43Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the query rate limiting for a broker instance\", notes = \"Enable/disable the query rate limiting for a broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleQueryRateLimiting(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    if (brokerInstanceName == null || !brokerInstanceName.startsWith(\"Broker_\")) {\n+      LOGGER.info(\"{} isn't a valid broker instance name\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER,\n+          String.format(\"'%s' is not a valid broker instance name.\", brokerInstanceName), Response.Status.BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4OTI1MQ=="}, "originalCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4165, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}