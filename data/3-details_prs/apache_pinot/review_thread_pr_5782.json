{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5Nzk5ODc3", "number": 5782, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNzo1MlrOEUQAZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozNjoyOFrOEVnQpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjY5MjIzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNzo1MlrOG6bCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNzo1MlrOG6bCLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMzUxOA==", "bodyText": "Directly throw exception instead of returning null here to avoid NPE on the caller side:\nPreconditions.checkState(externalView != null, ...)", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463913518", "createdAt": "2020-08-01T03:07:52Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2366,6 +2404,23 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n         tableNameWithType, segmentLineageEntryId);\n   }\n \n+  private Set<String> getOnlineSegmentsFromExternalView(String tableNameWithType) {\n+    ExternalView externalView = getTableExternalView(tableNameWithType);\n+    if (externalView != null) {\n+      Set<String> partitionSet = externalView.getPartitionSet();\n+      Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n+      for (String partition : partitionSet) {\n+        Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n+        if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n+            .containsValue(SegmentStateModel.CONSUMING)) {\n+          onlineSegments.add(partition);\n+        }\n+      }\n+      return onlineSegments;\n+    } else {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjcwMDI1OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzoxMzo0M1rOG6bFsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODo1NDo1MFrOG8Ahng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNDQxOA==", "bodyText": "Use externalView.getMapFields() to avoid extra map lookups.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Set<String> partitionSet = externalView.getPartitionSet();\n          \n          \n            \n                  Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n          \n          \n            \n                  for (String partition : partitionSet) {\n          \n          \n            \n                    Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n          \n          \n            \n                    if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n          \n          \n            \n                        .containsValue(SegmentStateModel.CONSUMING)) {\n          \n          \n            \n                      onlineSegments.add(partition);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  return onlineSegments;\n          \n          \n            \n                  Map<String, Map<String, String>> segmentAssignment = externalView.getMapFields();\n          \n          \n            \n                  Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(segmentAssignment.size()));\n          \n          \n            \n                  for (Map.Entry<String, Map<String, String>> entry : segmentAssignment.entrySet()) {\n          \n          \n            \n                    Map<String, String> instanceStateMap = entry.getValue();\n          \n          \n            \n                    if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n          \n          \n            \n                        .containsValue(SegmentStateModel.CONSUMING)) {\n          \n          \n            \n                      onlineSegments.add(entry.getKey());\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  return onlineSegments;", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463914418", "createdAt": "2020-08-01T03:13:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2366,6 +2404,23 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n         tableNameWithType, segmentLineageEntryId);\n   }\n \n+  private Set<String> getOnlineSegmentsFromExternalView(String tableNameWithType) {\n+    ExternalView externalView = getTableExternalView(tableNameWithType);\n+    if (externalView != null) {\n+      Set<String> partitionSet = externalView.getPartitionSet();\n+      Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n+      for (String partition : partitionSet) {\n+        Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n+        if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n+            .containsValue(SegmentStateModel.CONSUMING)) {\n+          onlineSegments.add(partition);\n+        }\n+      }\n+      return onlineSegments;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3NjM1MA==", "bodyText": "fixed", "url": "https://github.com/apache/pinot/pull/5782#discussion_r465576350", "createdAt": "2020-08-05T08:54:50Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2366,6 +2404,23 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n         tableNameWithType, segmentLineageEntryId);\n   }\n \n+  private Set<String> getOnlineSegmentsFromExternalView(String tableNameWithType) {\n+    ExternalView externalView = getTableExternalView(tableNameWithType);\n+    if (externalView != null) {\n+      Set<String> partitionSet = externalView.getPartitionSet();\n+      Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n+      for (String partition : partitionSet) {\n+        Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n+        if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n+            .containsValue(SegmentStateModel.CONSUMING)) {\n+          onlineSegments.add(partition);\n+        }\n+      }\n+      return onlineSegments;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNDQxOA=="}, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjcwNjA3OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzoxOTozNVrOG6bIUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODo1Mjo1NlrOG8Addw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTA4OA==", "bodyText": "We should not throw exception here. It takes some time for segment to become online in external view, so we might want to block for some time (put a proper timeout)", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463915088", "createdAt": "2020-08-01T03:19:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2344,14 +2361,35 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n           return true;\n         }\n \n+        // Check that all the segments from 'segmentsTo' exist in the table\n+        Set<String> segmentsForTable = new HashSet<>(getSegmentsFor(tableNameWithType));\n+        Preconditions.checkArgument(segmentsForTable.containsAll(lineageEntry.getSegmentsTo()), String.format(\n+            \"Not all segments from 'segmentsTo' are available in the table. (tableName = '%s', segmentsTo = '%s', \"\n+                + \"segmentsFromTable = '%s')\", tableNameWithType, lineageEntry.getSegmentsTo(), segmentsForTable));\n+\n+        // Check that all the segments from 'segmentsTo' became ONLINE in the external view\n+        Set<String> onlineSegmentsFromEV = getOnlineSegmentsFromExternalView(tableNameWithType);\n+        Preconditions.checkArgument(onlineSegmentsFromEV.containsAll(lineageEntry.getSegmentsTo()), String.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3NTI4Nw==", "bodyText": "this makes sense. I changed it", "url": "https://github.com/apache/pinot/pull/5782#discussion_r465575287", "createdAt": "2020-08-05T08:52:56Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2344,14 +2361,35 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n           return true;\n         }\n \n+        // Check that all the segments from 'segmentsTo' exist in the table\n+        Set<String> segmentsForTable = new HashSet<>(getSegmentsFor(tableNameWithType));\n+        Preconditions.checkArgument(segmentsForTable.containsAll(lineageEntry.getSegmentsTo()), String.format(\n+            \"Not all segments from 'segmentsTo' are available in the table. (tableName = '%s', segmentsTo = '%s', \"\n+                + \"segmentsFromTable = '%s')\", tableNameWithType, lineageEntry.getSegmentsTo(), segmentsForTable));\n+\n+        // Check that all the segments from 'segmentsTo' became ONLINE in the external view\n+        Set<String> onlineSegmentsFromEV = getOnlineSegmentsFromExternalView(tableNameWithType);\n+        Preconditions.checkArgument(onlineSegmentsFromEV.containsAll(lineageEntry.getSegmentsTo()), String.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTA4OA=="}, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjcwNzMzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzoyMToxMVrOG6bI5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODo1MzoxN1rOG8AeLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTIzOQ==", "bodyText": "The API should handle this wait instead of the client. User doesn't need to understand that they need to wait for external view to change before ending the replacement", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463915239", "createdAt": "2020-08-01T03:21:11Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -639,6 +643,29 @@ public void testBatchUpload()\n     Assert.assertEquals(segmentLineage.getLineageEntry(lineageEntryId2).getState(), LineageEntryState.COMPLETED);\n   }\n \n+  private void waitForEVUpdateForSegments(String tableNameWithType, Set<String> segments)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3NTQ2OA==", "bodyText": "changed the API to wait online segments for some time.", "url": "https://github.com/apache/pinot/pull/5782#discussion_r465575468", "createdAt": "2020-08-05T08:53:17Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -639,6 +643,29 @@ public void testBatchUpload()\n     Assert.assertEquals(segmentLineage.getLineageEntry(lineageEntryId2).getState(), LineageEntryState.COMPLETED);\n   }\n \n+  private void waitForEVUpdateForSegments(String tableNameWithType, Set<String> segments)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTIzOQ=="}, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDk4Nzg4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozNjoyOFrOG8eJlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozODo0OFrOG8eMUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MTcxOQ==", "bodyText": "(nit) unused?", "url": "https://github.com/apache/pinot/pull/5782#discussion_r466061719", "createdAt": "2020-08-05T23:36:28Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -24,6 +24,7 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MjQxOQ==", "bodyText": "thanks for catching this :)", "url": "https://github.com/apache/pinot/pull/5782#discussion_r466062419", "createdAt": "2020-08-05T23:38:48Z", "author": {"login": "snleee"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -24,6 +24,7 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MTcxOQ=="}, "originalCommit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4246, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}