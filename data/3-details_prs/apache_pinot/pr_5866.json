{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTIwODkx", "number": 5866, "title": "[TE] add anomaly detection as a service - new table for storing ad-hoc data", "bodyText": "Phase 2 is separated into two parts. This PR is for the 1st part. The main change is that a new table is created for storing online ad-hoc data. The PR for Phase 1 can be found in #5769.\nHere are some other minor changes:\n\nRemove the cleanExistingState method in the AnomalyDetectionResource. This is not necessary because each request is distinct now and the monitor job will periodically clean them (dataset/metric/detection configs, ad-hoc data).\nRemove the suffix appended to metric as the metric name is allowed to be duplicate.\n\nThe 2nd part of phase 2 is about creating a new endpoint to provide registering and CRUD operations on ad-hoc data.", "createdAt": "2020-08-14T18:14:24Z", "url": "https://github.com/apache/pinot/pull/5866", "merged": true, "mergeCommit": {"oid": "c425b0feabf674bd5e8de3b034c126bb8ffdd9fc"}, "closed": true, "closedAt": "2020-08-25T19:04:01Z", "author": {"login": "jasonyanwenl"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-5QeLAFqTQ2NzgwNTI0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCcA3JAFqTQ3NDc2OTkzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODA1MjQ0", "url": "https://github.com/apache/pinot/pull/5866#pullrequestreview-467805244", "createdAt": "2020-08-14T18:50:06Z", "commit": {"oid": "3b85273f88c20fa49ff075a6715be9ea14b56cd1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxODo1MDowNlrOHA_71Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxODo1MDowNlrOHA_71Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgwOTU1Nw==", "bodyText": "@jasonyanwenl This code looks good.  Are there docs that tell users the formatting for adhoc data, or is that future work for Thirdeye?", "url": "https://github.com/apache/pinot/pull/5866#discussion_r470809557", "createdAt": "2020-08-14T18:50:06Z", "author": {"login": "harleyjj"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/api/detection/AnomalyDetectionResource.java", "diffHunk": "@@ -464,6 +420,38 @@ TaskDTO generateTaskConfig(DetectionConfigDTO detectionConfigDTO,\n     return taskDTO;\n   }\n \n+  long saveOnlineDetectionData(JsonNode payloadNode,\n+      DatasetConfigDTO datasetConfigDTO, MetricConfigDTO metricConfigDTO)\n+        throws JsonProcessingException {\n+    JsonNode dataNode = payloadNode.get(DATA_FIELD);\n+    String timeColumnName = datasetConfigDTO.getTimeColumn();\n+    String datasetName = datasetConfigDTO.getDataset();\n+    String metricName = metricConfigDTO.getName();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b85273f88c20fa49ff075a6715be9ea14b56cd1"}, "originalPosition": 179}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb", "author": {"user": {"login": "jasonyanwenl", "name": "Yanwen(Jason) Lin"}}, "url": "https://github.com/apache/pinot/commit/c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb", "committedDate": "2020-08-18T00:34:39Z", "message": "add a separate table for storing online data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b85273f88c20fa49ff075a6715be9ea14b56cd1", "author": {"user": {"login": "jasonyanwenl", "name": "Yanwen(Jason) Lin"}}, "url": "https://github.com/apache/pinot/commit/3b85273f88c20fa49ff075a6715be9ea14b56cd1", "committedDate": "2020-08-14T17:59:06Z", "message": "add a separate table for storing online data"}, "afterCommit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb", "author": {"user": {"login": "jasonyanwenl", "name": "Yanwen(Jason) Lin"}}, "url": "https://github.com/apache/pinot/commit/c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb", "committedDate": "2020-08-18T00:34:39Z", "message": "add a separate table for storing online data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODI2OTc0", "url": "https://github.com/apache/pinot/pull/5866#pullrequestreview-469826974", "createdAt": "2020-08-18T20:59:51Z", "commit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDo1OTo1MlrOHCmf0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMTozMzo1MFrOHCneqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ4OTkzOQ==", "bodyText": "Any reason we need to hardcode this here?", "url": "https://github.com/apache/pinot/pull/5866#discussion_r472489939", "createdAt": "2020-08-18T20:59:52Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/api/detection/AnomalyDetectionResource.java", "diffHunk": "@@ -345,18 +323,15 @@ DatasetConfigDTO generateDatasetConfig(JsonNode payloadNode, String suffix) {\n     return datasetConfigDTO;\n   }\n \n-  MetricConfigDTO generateMetricConfig(JsonNode payloadNode, String suffix,\n-        DatasetConfigDTO datasetConfigDTO)\n-      throws JsonProcessingException {\n+  MetricConfigDTO generateMetricConfig(JsonNode payloadNode, String suffix) {\n     MetricConfigDTO metricConfigDTO = new MetricConfigDTO();\n-    JsonNode dataNode = payloadNode.get(DATA_FIELD);\n \n     // Default configuration\n-    metricConfigDTO.setName(DEFAULT_METRIC_NAME + suffix);\n+    metricConfigDTO.setName(DEFAULT_METRIC_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUwMTU2Mw==", "bodyText": "If we store the ad-hoc data, do we still want store the metadata in normalized form? Since we clean up the dataset every time, we can store all the metadata into the ad hoc data table.", "url": "https://github.com/apache/pinot/pull/5866#discussion_r472501563", "createdAt": "2020-08-18T21:24:11Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/api/detection/AnomalyDetectionResource.java", "diffHunk": "@@ -511,24 +499,19 @@ private TaskDTO pollingTask(long taskId) {\n   }\n \n   private void cleanStates(MetricConfigDTO metricConfigDTO, DatasetConfigDTO datasetConfigDTO) {\n+    // Clean up ad hoc data\n     if (datasetConfigDTO != null) {\n-      datasetConfigDAO.delete(datasetConfigDTO);\n-      LOG.info(\"Deleted dataset: {}\", datasetConfigDTO);\n-\n-      int anomalyCnt = anomalyDAO.deleteByPredicate(\n-          Predicate.EQ(\"collection\", datasetConfigDTO.getName()));\n-      LOG.info(\"Deleted {} anomalies with dataset {}\",\n-          anomalyCnt, datasetConfigDTO.getName());\n+      int onlineDetectionDataCnt = onlineDetectionDataDAO\n+          .deleteByPredicate(Predicate.EQ(\"dataset\", datasetConfigDTO.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUwMzYxMA==", "bodyText": "Since we are storing the time series data in JSON, we might exceed the limit of MySQL text field, which is 64KB. We should at least make sure that the field should not be overflowed the large data users posted.", "url": "https://github.com/apache/pinot/pull/5866#discussion_r472503610", "createdAt": "2020-08-18T21:28:25Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/api/detection/AnomalyDetectionResource.java", "diffHunk": "@@ -464,6 +420,38 @@ TaskDTO generateTaskConfig(DetectionConfigDTO detectionConfigDTO,\n     return taskDTO;\n   }\n \n+  long saveOnlineDetectionData(JsonNode payloadNode,\n+      DatasetConfigDTO datasetConfigDTO, MetricConfigDTO metricConfigDTO)\n+        throws JsonProcessingException {\n+    JsonNode dataNode = payloadNode.get(DATA_FIELD);\n+    String timeColumnName = datasetConfigDTO.getTimeColumn();\n+    String datasetName = datasetConfigDTO.getDataset();\n+    String metricName = metricConfigDTO.getName();\n+\n+    // Check if time & metric columns exist in adhoc data\n+    ArrayNode columnsNode = dataNode.withArray(COLUMNS_FIELD);\n+    int[] colIndices = findTimeAndMetricColumns(columnsNode,\n+        timeColumnName, metricName);\n+    int timeColIdx = colIndices[0];\n+    int metricColIdx = colIndices[1];\n+    Preconditions.checkArgument(metricColIdx>=0 && timeColIdx>=0,\n+        String.format(\"metric: %s or time: %s not found in adhoc data.\",\n+            metricName, timeColumnName));\n+\n+    // Save online data\n+    OnlineDetectionDataDTO onlineDetectionDataDTO = new OnlineDetectionDataDTO();\n+    onlineDetectionDataDTO.setDataset(datasetName);\n+    onlineDetectionDataDTO.setMetric(metricName);\n+    onlineDetectionDataDTO.setOnlineDetectionData(this.objectMapper.writeValueAsString(dataNode));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUwNjAyNg==", "bodyText": "For long term, we might want to consider using BLOB/CLOB to storing ad hoc data so that we can support dataset larger than 64KB, not to mention that the data is stored in JSON format, which is really inefficient ways to store data, compare to any binary format.", "url": "https://github.com/apache/pinot/pull/5866#discussion_r472506026", "createdAt": "2020-08-18T21:33:50Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/resources/schema/create-schema.sql", "diffHunk": "@@ -437,3 +437,15 @@ create index rootcause_template_id_idx ON rootcause_template_index(base_id);\n create index rootcause_template_owner_idx ON rootcause_template_index(owner);\n create index rootcause_template_metric_idx on rootcause_template_index(metric_id);\n create index rootcause_template_config_application_idx ON rootcause_template_index(`application`);\n+\n+create table if not exists online_detection_data_index (\n+    base_id bigint(20) not null,\n+    dataset varchar(200),\n+    metric varchar(200),\n+    create_time timestamp default 0,\n+    update_time timestamp default current_timestamp,\n+    version int(10)\n+) ENGINE=InnoDB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c118b16a4a4a85ece30cd241c5c2e5f770ccd2eb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31ec241c489a22b0a60ef8da6ee5d14ca92d5a91", "author": {"user": {"login": "akshayrai", "name": "Akshay Rai"}}, "url": "https://github.com/apache/pinot/commit/31ec241c489a22b0a60ef8da6ee5d14ca92d5a91", "committedDate": "2020-08-24T20:42:19Z", "message": "Merge branch 'master' into online-data-table-yanlin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac19e63fa6ef07fbe5beeb16e5e75b2886e3b38", "author": {"user": {"login": "akshayrai", "name": "Akshay Rai"}}, "url": "https://github.com/apache/pinot/commit/2ac19e63fa6ef07fbe5beeb16e5e75b2886e3b38", "committedDate": "2020-08-24T22:54:10Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NzY5OTM0", "url": "https://github.com/apache/pinot/pull/5866#pullrequestreview-474769934", "createdAt": "2020-08-25T19:03:22Z", "commit": {"oid": "2ac19e63fa6ef07fbe5beeb16e5e75b2886e3b38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}