{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjgxMzY2", "number": 4959, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozMjo0MlrODV2sRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjo1Njo0OVrODWBxFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQyNzU3OnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozMjo0MlrOFaScWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozMjo0MlrOFaScWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTQ2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return \"Create Pinot table with table config and schema.\";\n          \n          \n            \n                return \"Create a Pinot table\";", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363109466", "createdAt": "2020-01-05T18:32:42Z", "author": {"login": "mcvsubbu"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -66,24 +72,28 @@ public String getName() {\n \n   @Override\n   public String description() {\n-    return \"Add table specified in the json file, to the controller.\";\n+    return \"Create Pinot table with table config and schema.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dfa9d2608ceb21fba02e7d248929afcdd54032"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQyODE5OnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozMzo1NlrOFaScrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozMzo1NlrOFaScrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTU1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    throw new FileNotFoundException(\"schema file does not exist: \" + _schemaFile);\n          \n          \n            \n                    throw new FileNotFoundException(\"Schema file does not exist: \" + _schemaFile);", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363109550", "createdAt": "2020-01-05T18:33:56Z", "author": {"login": "mcvsubbu"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -102,33 +112,51 @@ public AddTableCommand setExecute(boolean exec) {\n     return this;\n   }\n \n-  public boolean execute(JsonNode node)\n+  public boolean sendTableCreationRequest(JsonNode node)\n       throws IOException {\n-    if (_controllerHost == null) {\n-      _controllerHost = NetUtil.getHostAddress();\n-    }\n-    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n+    String res = AbstractBaseAdminCommand\n+        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    LOGGER.info(res);\n+    return res.contains(\"succesfully added\");\n+  }\n \n+  @Override\n+  public boolean execute()\n+      throws Exception {\n     if (!_exec) {\n       LOGGER.warn(\"Dry Running Command: \" + toString());\n       LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n       return true;\n     }\n \n-    LOGGER.info(\"Executing command: \" + toString());\n-    String res = AbstractBaseAdminCommand\n-        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    if (_controllerHost == null) {\n+      _controllerHost = NetUtil.getHostAddress();\n+    }\n+    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n \n-    LOGGER.info(res);\n-    if (res.contains(\"succesfully added\")) {\n-      return true;\n+    LOGGER.info(\"Executing command: \" + toString());\n+    // Backward compatible\n+    if (_schemaFile != null) {\n+      File schemaFile = new File(_schemaFile);\n+      if (!schemaFile.exists()) {\n+        throw new FileNotFoundException(\"schema file does not exist: \" + _schemaFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dfa9d2608ceb21fba02e7d248929afcdd54032"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQyOTMzOnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozNzoxMVrOFaSdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozNzoxMVrOFaSdSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTcwNw==", "bodyText": "You may get an exception here if the schema file is illegal or incorrect format. Not sure what the exception looks like, but it may be better to explicitly field any exception from this call and wrap it into an exception that contains the file name, e.g. \"Incorrect schema specification in \". This way, you can also avoid checking if the file existance in line 141, and combine all exceptions here.", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363109707", "createdAt": "2020-01-05T18:37:11Z", "author": {"login": "mcvsubbu"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -102,33 +112,51 @@ public AddTableCommand setExecute(boolean exec) {\n     return this;\n   }\n \n-  public boolean execute(JsonNode node)\n+  public boolean sendTableCreationRequest(JsonNode node)\n       throws IOException {\n-    if (_controllerHost == null) {\n-      _controllerHost = NetUtil.getHostAddress();\n-    }\n-    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n+    String res = AbstractBaseAdminCommand\n+        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    LOGGER.info(res);\n+    return res.contains(\"succesfully added\");\n+  }\n \n+  @Override\n+  public boolean execute()\n+      throws Exception {\n     if (!_exec) {\n       LOGGER.warn(\"Dry Running Command: \" + toString());\n       LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n       return true;\n     }\n \n-    LOGGER.info(\"Executing command: \" + toString());\n-    String res = AbstractBaseAdminCommand\n-        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    if (_controllerHost == null) {\n+      _controllerHost = NetUtil.getHostAddress();\n+    }\n+    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n \n-    LOGGER.info(res);\n-    if (res.contains(\"succesfully added\")) {\n-      return true;\n+    LOGGER.info(\"Executing command: \" + toString());\n+    // Backward compatible\n+    if (_schemaFile != null) {\n+      File schemaFile = new File(_schemaFile);\n+      if (!schemaFile.exists()) {\n+        throw new FileNotFoundException(\"schema file does not exist: \" + _schemaFile);\n+      }\n+\n+      Schema schema = Schema.fromFile(schemaFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dfa9d2608ceb21fba02e7d248929afcdd54032"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQyOTYyOnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozODoxOFrOFaSdeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODozODoxOFrOFaSdeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTc1Mg==", "bodyText": "Maybe same technique can be used here and the file existence check avoided?", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363109752", "createdAt": "2020-01-05T18:38:18Z", "author": {"login": "mcvsubbu"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -102,33 +112,51 @@ public AddTableCommand setExecute(boolean exec) {\n     return this;\n   }\n \n-  public boolean execute(JsonNode node)\n+  public boolean sendTableCreationRequest(JsonNode node)\n       throws IOException {\n-    if (_controllerHost == null) {\n-      _controllerHost = NetUtil.getHostAddress();\n-    }\n-    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n+    String res = AbstractBaseAdminCommand\n+        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    LOGGER.info(res);\n+    return res.contains(\"succesfully added\");\n+  }\n \n+  @Override\n+  public boolean execute()\n+      throws Exception {\n     if (!_exec) {\n       LOGGER.warn(\"Dry Running Command: \" + toString());\n       LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n       return true;\n     }\n \n-    LOGGER.info(\"Executing command: \" + toString());\n-    String res = AbstractBaseAdminCommand\n-        .sendPostRequest(ControllerRequestURLBuilder.baseUrl(_controllerAddress).forTableCreate(), node.toString());\n+    if (_controllerHost == null) {\n+      _controllerHost = NetUtil.getHostAddress();\n+    }\n+    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n \n-    LOGGER.info(res);\n-    if (res.contains(\"succesfully added\")) {\n-      return true;\n+    LOGGER.info(\"Executing command: \" + toString());\n+    // Backward compatible\n+    if (_schemaFile != null) {\n+      File schemaFile = new File(_schemaFile);\n+      if (!schemaFile.exists()) {\n+        throw new FileNotFoundException(\"schema file does not exist: \" + _schemaFile);\n+      }\n+\n+      Schema schema = Schema.fromFile(schemaFile);\n+      try (FileUploadDownloadClient fileUploadDownloadClient = new FileUploadDownloadClient()) {\n+        fileUploadDownloadClient.addSchema(\n+            FileUploadDownloadClient.getUploadSchemaHttpURI(_controllerHost, Integer.parseInt(_controllerPort)),\n+            schema.getSchemaName(), schemaFile);\n+      } catch (Exception e) {\n+        LOGGER.error(\"Got Exception to upload Pinot Schema: \" + schema.getSchemaName(), e);\n+        throw e;\n+      }\n+    }\n+    File tableConfigFile = new File(_tableConfigFile);\n+    if (!tableConfigFile.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dfa9d2608ceb21fba02e7d248929afcdd54032"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDI0MjE0OnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjo1Njo0OVrOFajKag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToyMToyN1rOFaplvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4MzQwMg==", "bodyText": "Do we still want to upload schema if exec is not true?", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363383402", "createdAt": "2020-01-06T16:56:49Z", "author": {"login": "mcvsubbu"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -102,33 +111,55 @@ public AddTableCommand setExecute(boolean exec) {\n     return this;\n   }\n \n-  public boolean execute(JsonNode node)\n-      throws IOException {\n-    if (_controllerHost == null) {\n-      _controllerHost = NetUtil.getHostAddress();\n+  public void uploadSchema()\n+      throws Exception {\n+    File schemaFile;\n+    Schema schema;\n+    try {\n+      schemaFile = new File(_schemaFile);\n+      schema = Schema.fromFile(schemaFile);\n+    } catch (Exception e) {\n+      LOGGER.error(\"Got exception while reading Pinot schema from file: [\" + _schemaFile + \"]\");\n+      throw e;\n     }\n-    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n-\n-    if (!_exec) {\n-      LOGGER.warn(\"Dry Running Command: \" + toString());\n-      LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n-      return true;\n+    try (FileUploadDownloadClient fileUploadDownloadClient = new FileUploadDownloadClient()) {\n+      fileUploadDownloadClient.addSchema(\n+          FileUploadDownloadClient.getUploadSchemaHttpURI(_controllerHost, Integer.parseInt(_controllerPort)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9651b3b3dc44423811dc1a62657e2213f717d5"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4ODcwMQ==", "bodyText": "Dry run shouldn't upload schema. This check is at line 146.", "url": "https://github.com/apache/pinot/pull/4959#discussion_r363488701", "createdAt": "2020-01-06T21:21:27Z", "author": {"login": "xiangfu0"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/AddTableCommand.java", "diffHunk": "@@ -102,33 +111,55 @@ public AddTableCommand setExecute(boolean exec) {\n     return this;\n   }\n \n-  public boolean execute(JsonNode node)\n-      throws IOException {\n-    if (_controllerHost == null) {\n-      _controllerHost = NetUtil.getHostAddress();\n+  public void uploadSchema()\n+      throws Exception {\n+    File schemaFile;\n+    Schema schema;\n+    try {\n+      schemaFile = new File(_schemaFile);\n+      schema = Schema.fromFile(schemaFile);\n+    } catch (Exception e) {\n+      LOGGER.error(\"Got exception while reading Pinot schema from file: [\" + _schemaFile + \"]\");\n+      throw e;\n     }\n-    _controllerAddress = \"http://\" + _controllerHost + \":\" + _controllerPort;\n-\n-    if (!_exec) {\n-      LOGGER.warn(\"Dry Running Command: \" + toString());\n-      LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n-      return true;\n+    try (FileUploadDownloadClient fileUploadDownloadClient = new FileUploadDownloadClient()) {\n+      fileUploadDownloadClient.addSchema(\n+          FileUploadDownloadClient.getUploadSchemaHttpURI(_controllerHost, Integer.parseInt(_controllerPort)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4MzQwMg=="}, "originalCommit": {"oid": "9f9651b3b3dc44423811dc1a62657e2213f717d5"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3556, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}