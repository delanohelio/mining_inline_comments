{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjAyMTk4", "number": 5618, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzo1MToxOFrOEI9exw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzo1MToxOFrOEI9exw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODMxMzY3OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzo1MToxOFrOGpPeow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDozNDowOFrOGpt7Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw==", "bodyText": "Can you shed some light into why we want to treat dateTimeFields as a dimension? what's the difference?", "url": "https://github.com/apache/pinot/pull/5618#discussion_r445898403", "createdAt": "2020-06-25T23:51:18Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxNTUxNQ==", "bodyText": "up until now, Pinot had 3 types of columns - DIMENSION, METRIC, TIME. DIMENSION are a list, METRIC are a list, but TIME is only 1.\nFor example:\n{\n  \"schemaName\": \"flights\",\n  \"dimensionFieldSpecs\": [ {\n      \"name\": \"flightNumber\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"city\",\n      \"dataType\": \"STRING\"\n    } ],\n  \"metricFieldSpecs\": [ {\n      \"name\": \"price\",\n      \"dataType\": \"DOUBLE\"\n    } ],\n  \"timeFieldSpec\": {\n      \"incomingGranularitySpec\": {\n         \"name\": \"millisSinceEpoch\",\n         \"dataType\": \"LONG\",\n          \"timeUnit\": \"MILLSECONDS\"\n      }\n   }\n}\n\nI see in TE, dimensionFieldSpec get stored in DatasetConfig, metricFieldSpec in the MetricsConfig, and timeFieldSpec  also in the DatasetConfig.\nStarting release 0.4.0, we have a new type of column DATETIME. This is set to replace TIME soon. DATETIME is a list. This means now there can be more than 1 time column.\nFor example:\n{\n  \"schemaName\": \"flights\",\n  \"dimensionFieldSpecs\": [ {\n      \"name\": \"flightNumber\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"city\",\n      \"dataType\": \"STRING\"\n    } ],\n  \"metricFieldSpecs\": [ {\n      \"name\": \"price\",\n      \"dataType\": \"DOUBLE\"\n    } ],\n  \"dateTimeFieldSpecs\": [{\n      \"name\": \"millisSinceEpoch\",\n      \"dataType\": \"LONG\",\n      \"format\": \"1:MILLSECONDS:EPOCH\",\n      \"granularity\": \"15:MINUTES\"\n    },\n    {\n      \"name\": \"arrivalTime\",\n      \"dataType\": \"LONG\",\n      \"format\": \"1:MILLISECONDS:EPOCH\",\n      \"granularity\": \"1:MILLISECONDS\"\n    },\n    {\n      \"name\": \"departureTime,\n      \"dataType\": \"LONG\",\n      \"format\": \"1:MILLISECONDS:EPOCH\",\n      \"granularity\": \"1:MILLISECONDS\"\n    }]\n}\n\nIn TE, the DatasetConfig has place only for a single time column. So for the remaining DATETIME from the list, we have following options:\n\nignore them - but this won't be correct for users\nadd them as dimensions - this is probably the only suitable place for these columns as of now\nadd some new construct in TE to keep the multiple time columns.\n\nSo this would actually be a question for the TE team, how do you think should the new columns be stored?", "url": "https://github.com/apache/pinot/pull/5618#discussion_r445915515", "createdAt": "2020-06-26T00:59:54Z", "author": {"login": "npawar"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw=="}, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzODE5MA==", "bodyText": "Chatted with @kishoreg and we decided to ignore the remaining dateTimeFieldSpecs for now", "url": "https://github.com/apache/pinot/pull/5618#discussion_r446338190", "createdAt": "2020-06-26T18:14:50Z", "author": {"login": "npawar"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw=="}, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM0NjYzOQ==", "bodyText": "Thanks. I think we can ignore the remaining time columns for now. In the future, we can think about how to support those in TE.", "url": "https://github.com/apache/pinot/pull/5618#discussion_r446346639", "createdAt": "2020-06-26T18:33:49Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw=="}, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2MTk1Mg==", "bodyText": "thank for confirming @jihaozh", "url": "https://github.com/apache/pinot/pull/5618#discussion_r446361952", "createdAt": "2020-06-26T19:08:32Z", "author": {"login": "npawar"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw=="}, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NzIyNg==", "bodyText": "Thanks Neha for the detailed explanation. I think option 3 would be a better approach but we need to think about the design. For now you can merge this PR and we can take that up separately.", "url": "https://github.com/apache/pinot/pull/5618#discussion_r446397226", "createdAt": "2020-06-26T20:34:08Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/auto/onboard/AutoOnboardPinotMetadataSource.java", "diffHunk": "@@ -200,23 +201,26 @@ private void addNewDataset(String dataset, Schema schema, Map<String, String> cu\n   /**\n    * Refreshes an existing dataset in the thirdeye database\n    * with any dimension/metric changes from pinot schema\n-   * @param dataset\n-   * @param schema\n-   * @param datasetConfig\n    */\n-  private void refreshOldDataset(String dataset, Schema schema, Map<String, String> customConfigs,\n-      DatasetConfigDTO datasetConfig) throws Exception {\n-    checkDimensionChanges(dataset, datasetConfig, schema);\n+  private void refreshOldDataset(String dataset, Schema schema, String timeColumnName,\n+      Map<String, String> customConfigs, DatasetConfigDTO datasetConfig) {\n+    checkDimensionChanges(dataset, datasetConfig, schema, timeColumnName);\n     checkMetricChanges(dataset, datasetConfig, schema);\n-    checkTimeFieldChanges(datasetConfig, schema);\n+    checkTimeFieldChanges(datasetConfig, schema, timeColumnName);\n     appendNewCustomConfigs(datasetConfig, customConfigs);\n     checkNonAdditive(datasetConfig);\n     datasetConfig.setActive(true);\n   }\n \n-  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema) {\n+  private void checkDimensionChanges(String dataset, DatasetConfigDTO datasetConfig, Schema schema,\n+      String timeColumnName) {\n     LOG.info(\"Checking for dimensions changes in {}\", dataset);\n-    List<String> schemaDimensions = schema.getDimensionNames();\n+    List<String> schemaDimensions = new ArrayList<>(schema.getDimensionNames());\n+     for (String dateTimeColumn : schema.getDateTimeNames()) { // treat all dateTimeFields specs as dimensions, except the primary time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODQwMw=="}, "originalCommit": {"oid": "ddf647f2a944ca6bb5c02d88d2c6c9508f247030"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4384, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}