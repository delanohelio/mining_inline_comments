{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Nzg4MjY2", "number": 5758, "title": "Pradeep/sr ssl fix", "bodyText": "Add ability to pass SSL certs info to schema registry.\nExample Config to pass SSL certs to schema registry in the table config follows:\n\"stream.kafka.decoder.prop.schema.registry.ssl.truststore.location\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.keystore.location\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.truststore.password\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.keystore.password\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.keystore.type\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.truststore.type\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.key.password\": \"\",\n\"stream.kafka.decoder.prop.schema.registry.ssl.protocol\": \"SSL\",", "createdAt": "2020-07-26T18:34:13Z", "url": "https://github.com/apache/pinot/pull/5758", "merged": true, "mergeCommit": {"oid": "2e08602c086f02294714beaec761c2c6a9de7c30"}, "closed": true, "closedAt": "2020-08-06T17:23:27Z", "author": {"login": "pradeepgv42"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4jFkWAH2gAyNDU2Nzg4MjY2Ojc0YzkwOTQzZmU4NDljMWU4NWUzYjk4ZDNmOGZmOTA2NjFlZDI5OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8AWFyAFqTQ2MTk1ODI1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/74c90943fe849c1e85e3b98d3f8ff90661ed2995", "committedDate": "2020-07-26T01:38:36Z", "message": "Stashing avro bug fixe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a78f3df43ac613663975844e598f07b18bf623", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/39a78f3df43ac613663975844e598f07b18bf623", "committedDate": "2020-07-26T17:58:15Z", "message": "Only add known ssl configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2ODI4OTcz", "url": "https://github.com/apache/pinot/pull/5758#pullrequestreview-456828973", "createdAt": "2020-07-28T16:56:36Z", "commit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjo1NjozNlrOG4V2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMDozM1rOG4cmDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMTMzNA==", "bodyText": "Why not rename to sslConfigs?", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461731334", "createdAt": "2020-07-28T16:56:36Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjA2OQ==", "bodyText": "Can you use a logger to output these?\nIf this just for debugging you can just do log.debug()", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461732069", "createdAt": "2020-07-28T16:57:46Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {\n+        String value = configs.get(key);\n+        key = key.substring(\"schema.registry.\".length());\n+        if (key.contains(\"password\")) {\n+          sslConfigs.put(key, new Password(value));\n+        } else {\n+          sslConfigs.put(key, value);\n+        }\n+      }\n+    }\n+\n+    System.out.println(configs.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MTkzMw==", "bodyText": "Can you use the Configuration library, instead of manually extracting the substring?", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461841933", "createdAt": "2020-07-28T20:00:33Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f7ab0c713af877ae3d62ef32468f145a9d5f5bb", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/5f7ab0c713af877ae3d62ef32468f145a9d5f5bb", "committedDate": "2020-08-05T19:05:11Z", "message": "Add documentation for the new configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTU4MjU3", "url": "https://github.com/apache/pinot/pull/5758#pullrequestreview-461958257", "createdAt": "2020-08-05T19:25:40Z", "commit": {"oid": "5f7ab0c713af877ae3d62ef32468f145a9d5f5bb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 468, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}