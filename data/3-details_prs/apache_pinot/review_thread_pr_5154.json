{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4ODYxMDE5", "number": 5154, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NDoxM1rODpcCoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NTo1OVrODpcFSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzc3NjMyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NDoxM1rOF4nMjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODowNDo1OFrOF46aBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNjc2Nw==", "bodyText": "I think this is the scenario when the overall result set of DISTINCT query at table level is empty and was throwing NPE as DistinctTable was null.\nCan we please also add a test where the overall result at table level is non-empty but one or more segment returns empty?\nThen we have everything  covered.", "url": "https://github.com/apache/pinot/pull/5154#discussion_r394906767", "createdAt": "2020-03-19T09:54:13Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -685,6 +694,18 @@ public void testDistinctWithFilter()\n         sortedResults.add(new Record(new Object[]{\"California\", \"San Mateo\", 400000}));\n         sortedResults.add(new Record(new Object[]{\"California\", \"Sunnyvale\", 300000}));\n         runQueryInterSegmentWithOrderBy(orderByQuery, sortedResults, new String[]{\"State\", \"City\", \"SaleAmount\"});\n+\n+        String emptyResultQuery =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MTEzOQ==", "bodyText": "Now that I think more about it, I don't think this solution will work for the case when result from all segments on a single server is empty but across the servers is non empty.\nThe current solution would have sent. a Distinct table from the server with string types. However when the broker reduces distinct tables across server, it might choose the result column types as string if the server that sent empty distinct tables happens to be the 0th server. The broker has to decide the result column types for.the final response and it does that upfront by looking at the column types from first server's table since it assumes they will be the same (they should be in general cases except for this corner case). This will be wrong.", "url": "https://github.com/apache/pinot/pull/5154#discussion_r394941139", "createdAt": "2020-03-19T10:54:41Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -685,6 +694,18 @@ public void testDistinctWithFilter()\n         sortedResults.add(new Record(new Object[]{\"California\", \"San Mateo\", 400000}));\n         sortedResults.add(new Record(new Object[]{\"California\", \"Sunnyvale\", 300000}));\n         runQueryInterSegmentWithOrderBy(orderByQuery, sortedResults, new String[]{\"State\", \"City\", \"SaleAmount\"});\n+\n+        String emptyResultQuery =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNjc2Nw=="}, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MTU1Mg==", "bodyText": "We need to introduce some hacky way of knowing this scenario in the broker.reduce code.", "url": "https://github.com/apache/pinot/pull/5154#discussion_r394941552", "createdAt": "2020-03-19T10:55:29Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -685,6 +694,18 @@ public void testDistinctWithFilter()\n         sortedResults.add(new Record(new Object[]{\"California\", \"San Mateo\", 400000}));\n         sortedResults.add(new Record(new Object[]{\"California\", \"Sunnyvale\", 300000}));\n         runQueryInterSegmentWithOrderBy(orderByQuery, sortedResults, new String[]{\"State\", \"City\", \"SaleAmount\"});\n+\n+        String emptyResultQuery =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNjc2Nw=="}, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyMTUwOQ==", "bodyText": "As long as it is using the DistinctAggregationFunction.merge() to merge the DistinctTables, it is handled. Check the fix in  DistinctAggregationFunction.merge().\nLet me try to enhance the test to cover that.", "url": "https://github.com/apache/pinot/pull/5154#discussion_r395221509", "createdAt": "2020-03-19T18:04:58Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -685,6 +694,18 @@ public void testDistinctWithFilter()\n         sortedResults.add(new Record(new Object[]{\"California\", \"San Mateo\", 400000}));\n         sortedResults.add(new Record(new Object[]{\"California\", \"Sunnyvale\", 300000}));\n         runQueryInterSegmentWithOrderBy(orderByQuery, sortedResults, new String[]{\"State\", \"City\", \"SaleAmount\"});\n+\n+        String emptyResultQuery =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNjc2Nw=="}, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Nzc4MzEyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo1NTo1OVrOF4nQ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODowMToyOFrOF46SBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNzg5MQ==", "bodyText": "I am unable to recall why I had this if check. I think there was a code-path where null broker request could have been passed. It is not possible right?", "url": "https://github.com/apache/pinot/pull/5154#discussion_r394907891", "createdAt": "2020-03-19T09:55:59Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -112,8 +111,10 @@ public static AggregationFunction getAggregationFunction(AggregationInfo aggrega\n           case DISTINCTCOUNTRAWHLLMV:\n             return new DistinctCountRawHLLMVAggregationFunction();\n           case DISTINCT:\n+            Preconditions.checkState(brokerRequest != null,\n+                \"Broker request must be provided for 'DISTINCT' aggregation function\");\n             return new DistinctAggregationFunction(AggregationFunctionUtils.getColumn(aggregationInfo),\n-                brokerRequest != null ? brokerRequest.getLimit() : SelectAstNode.DEFAULT_RECORD_LIMIT, brokerRequest.getOrderBy());\n+                brokerRequest.getOrderBy(), brokerRequest.getLimit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxOTQ2Mw==", "bodyText": "The existing code never works for null brokerRequest because brokerRequest.getOrderBy() will directly throw NPE. The broker aggregation reducer might call this without brokerRequest, but distinct is not using that code path to reduce the result.\nI added TODOs in AggregationFunctionUtils to always pass broker request for all code paths", "url": "https://github.com/apache/pinot/pull/5154#discussion_r395219463", "createdAt": "2020-03-19T18:01:28Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/AggregationFunctionFactory.java", "diffHunk": "@@ -112,8 +111,10 @@ public static AggregationFunction getAggregationFunction(AggregationInfo aggrega\n           case DISTINCTCOUNTRAWHLLMV:\n             return new DistinctCountRawHLLMVAggregationFunction();\n           case DISTINCT:\n+            Preconditions.checkState(brokerRequest != null,\n+                \"Broker request must be provided for 'DISTINCT' aggregation function\");\n             return new DistinctAggregationFunction(AggregationFunctionUtils.getColumn(aggregationInfo),\n-                brokerRequest != null ? brokerRequest.getLimit() : SelectAstNode.DEFAULT_RECORD_LIMIT, brokerRequest.getOrderBy());\n+                brokerRequest.getOrderBy(), brokerRequest.getLimit());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwNzg5MQ=="}, "originalCommit": {"oid": "8dd77cff736fb66a926c40c499b7711140637e02"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3530, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}