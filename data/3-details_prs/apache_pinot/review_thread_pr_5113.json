{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTk5NDEx", "number": 5113, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjozMzo1MFrODlfoaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjozMzo1MFrODlfoaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjQyMTUyOnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjozMzo1MFrOFya2Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzoxMDowN1rOFycT5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxMjk5OQ==", "bodyText": "There are some use cases (e.g, DHM) that they only want to create alert w/o subscription groups.", "url": "https://github.com/apache/pinot/pull/5113#discussion_r388412999", "createdAt": "2020-03-05T16:33:50Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -262,6 +263,23 @@ private Response processBadAuthorizationResponse(String type, String operation,\n     return Response.status(Response.Status.UNAUTHORIZED).entity(responseMessage).build();\n   }\n \n+  /**\n+   * Perform some basic validations on the create alert payload\n+   */\n+  public void validateCreateAlertYaml(Map<String, String> config) throws IOException {\n+    Preconditions.checkArgument(config.containsKey(PROP_DETECTION), \"Detection pipeline yaml is missing\");\n+    Preconditions.checkArgument(config.containsKey(PROP_SUBSCRIPTION), \"Subscription group yaml is missing.\");\n+\n+    // check if subscription group has subscribed to the detection\n+    Map<String, Object> detectionConfigMap = new HashMap<>(ConfigUtils.getMap(this.yaml.load(config.get(PROP_DETECTION))));\n+    String detectionName = MapUtils.getString(detectionConfigMap, PROP_DETECTION_NAME);\n+    Map<String, Object> subscriptionConfigMap = new HashMap<>(ConfigUtils.getMap(this.yaml.load(config.get(PROP_SUBSCRIPTION))));\n+    List<String> detectionNames = ConfigUtils.getList(subscriptionConfigMap.get(PROP_DETECTION_NAMES));\n+    Preconditions.checkArgument(detectionNames.contains(detectionName),\n+        \"You have not subscribed to the alert. Please copy-paste the detectionName under the \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f09723800f0f71f8237ce6bbcc31788e409d77f6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQzNjk2Ng==", "bodyText": "There is already a separate api to create just the detection.", "url": "https://github.com/apache/pinot/pull/5113#discussion_r388436966", "createdAt": "2020-03-05T17:10:07Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -262,6 +263,23 @@ private Response processBadAuthorizationResponse(String type, String operation,\n     return Response.status(Response.Status.UNAUTHORIZED).entity(responseMessage).build();\n   }\n \n+  /**\n+   * Perform some basic validations on the create alert payload\n+   */\n+  public void validateCreateAlertYaml(Map<String, String> config) throws IOException {\n+    Preconditions.checkArgument(config.containsKey(PROP_DETECTION), \"Detection pipeline yaml is missing\");\n+    Preconditions.checkArgument(config.containsKey(PROP_SUBSCRIPTION), \"Subscription group yaml is missing.\");\n+\n+    // check if subscription group has subscribed to the detection\n+    Map<String, Object> detectionConfigMap = new HashMap<>(ConfigUtils.getMap(this.yaml.load(config.get(PROP_DETECTION))));\n+    String detectionName = MapUtils.getString(detectionConfigMap, PROP_DETECTION_NAME);\n+    Map<String, Object> subscriptionConfigMap = new HashMap<>(ConfigUtils.getMap(this.yaml.load(config.get(PROP_SUBSCRIPTION))));\n+    List<String> detectionNames = ConfigUtils.getList(subscriptionConfigMap.get(PROP_DETECTION_NAMES));\n+    Preconditions.checkArgument(detectionNames.contains(detectionName),\n+        \"You have not subscribed to the alert. Please copy-paste the detectionName under the \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxMjk5OQ=="}, "originalCommit": {"oid": "f09723800f0f71f8237ce6bbcc31788e409d77f6"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3484, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}