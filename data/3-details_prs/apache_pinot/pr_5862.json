{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NzI3NTkw", "number": 5862, "title": "Fix NPE for aggregate metrics", "bodyText": "Description\nFor real-time table with aggregate metrics enabled, the metrics will have null min/max value in the column stats while creating the segment, which causes NPE.\nAdded the null check to prevent the exception.\nAlso added an integration test for the aggregate metrics", "createdAt": "2020-08-14T02:15:51Z", "url": "https://github.com/apache/pinot/pull/5862", "merged": true, "mergeCommit": {"oid": "449bf94d0dd9ba7e07f32d44bcc534e95248c321"}, "closed": true, "closedAt": "2020-08-14T04:56:26Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-rEDgABqjM2NTQ1MDEyNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-scRAgFqTQ2NzI5MTQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0767dec91a8bce66217133b0859a93eed111b666", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/0767dec91a8bce66217133b0859a93eed111b666", "committedDate": "2020-08-14T02:12:32Z", "message": "Fix NPE for aggregate metrics"}, "afterCommit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/0b40cc0ba0908a558834f6a9843a1aacfb06d359", "committedDate": "2020-08-14T02:19:32Z", "message": "Fix NPE for aggregate metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3Mjc2MzE5", "url": "https://github.com/apache/pinot/pull/5862#pullrequestreview-467276319", "createdAt": "2020-08-14T02:56:41Z", "commit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1Njo0MVrOHAl2qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1Njo0MVrOHAl2qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjI1MA==", "bodyText": "Without doing toString is there any impact on non null values?", "url": "https://github.com/apache/pinot/pull/5862#discussion_r470382250", "createdAt": "2020-08-14T02:56:41Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/SegmentColumnarIndexCreator.java", "diffHunk": "@@ -532,34 +532,36 @@ public static void addColumnMetadataInfo(PropertiesConfiguration properties, Str\n       properties.setProperty(getKeyFor(column, DATETIME_GRANULARITY), dateTimeFieldSpec.getGranularity());\n     }\n \n-    String minValue = columnIndexCreationInfo.getMin().toString();\n-    String maxValue = columnIndexCreationInfo.getMax().toString();\n+    // NOTE: Min/max could be null for real-time aggregate metrics.\n+    Object min = columnIndexCreationInfo.getMin();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3Mjc2NTM4", "url": "https://github.com/apache/pinot/pull/5862#pullrequestreview-467276538", "createdAt": "2020-08-14T02:57:31Z", "commit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1NzozMVrOHAl3WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1NzozMVrOHAl3WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjQyNA==", "bodyText": "Why do we need to check for data type?", "url": "https://github.com/apache/pinot/pull/5862#discussion_r470382424", "createdAt": "2020-08-14T02:57:31Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/SegmentColumnarIndexCreator.java", "diffHunk": "@@ -532,34 +532,36 @@ public static void addColumnMetadataInfo(PropertiesConfiguration properties, Str\n       properties.setProperty(getKeyFor(column, DATETIME_GRANULARITY), dateTimeFieldSpec.getGranularity());\n     }\n \n-    String minValue = columnIndexCreationInfo.getMin().toString();\n-    String maxValue = columnIndexCreationInfo.getMax().toString();\n+    // NOTE: Min/max could be null for real-time aggregate metrics.\n+    Object min = columnIndexCreationInfo.getMin();\n+    Object max = columnIndexCreationInfo.getMax();\n+    if (min != null && max != null) {\n+      addColumnMinMaxValueInfo(properties, column, dataType, min.toString(), max.toString());\n+    }\n+\n     String defaultNullValue = columnIndexCreationInfo.getDefaultNullValue().toString();\n     if (dataType == DataType.STRING) {\n       // Check special characters for STRING column\n-      if (isValidPropertyValue(minValue)) {\n-        properties.setProperty(getKeyFor(column, MIN_VALUE), minValue);\n-      }\n-      if (isValidPropertyValue(maxValue)) {\n-        properties.setProperty(getKeyFor(column, MAX_VALUE), maxValue);\n-      }\n       if (isValidPropertyValue(defaultNullValue)) {\n         properties.setProperty(getKeyFor(column, DEFAULT_NULL_VALUE), defaultNullValue);\n       }\n     } else {\n-      properties.setProperty(getKeyFor(column, MIN_VALUE), minValue);\n-      properties.setProperty(getKeyFor(column, MAX_VALUE), maxValue);\n       properties.setProperty(getKeyFor(column, DEFAULT_NULL_VALUE), defaultNullValue);\n     }\n   }\n \n-  public static void addColumnMinMaxValueInfo(PropertiesConfiguration properties, String column, String minValue,\n-      String maxValue) {\n-    // Check special characters for STRING column\n-    if (isValidPropertyValue(minValue)) {\n+  public static void addColumnMinMaxValueInfo(PropertiesConfiguration properties, String column, DataType dataType,\n+      String minValue, String maxValue) {\n+    if (dataType == DataType.STRING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3Mjc2ODc0", "url": "https://github.com/apache/pinot/pull/5862#pullrequestreview-467276874", "createdAt": "2020-08-14T02:58:44Z", "commit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1ODo0NFrOHAl4Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1ODo0NFrOHAl4Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjY5NA==", "bodyText": "Have we verified that without the fix, this test actually fails with the same call stack as seen in the original issue while committing the segment ?", "url": "https://github.com/apache/pinot/pull/5862#discussion_r470382694", "createdAt": "2020-08-14T02:58:44Z", "author": {"login": "siddharthteotia"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/AggregateMetricsClusterIntegrationTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.integration.tests;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.config.table.IndexingConfig;\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.data.FieldSpec.DataType;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.util.TestUtils;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Integration test that enables aggregate metrics for the LLC real-time table.\n+ */\n+public class AggregateMetricsClusterIntegrationTest extends BaseClusterIntegrationTestSet {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a83c61180db8786365b32c5d1646b923b24812aa", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a83c61180db8786365b32c5d1646b923b24812aa", "committedDate": "2020-08-14T03:20:48Z", "message": "Fix NPE for aggregate metrics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b40cc0ba0908a558834f6a9843a1aacfb06d359", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/0b40cc0ba0908a558834f6a9843a1aacfb06d359", "committedDate": "2020-08-14T02:19:32Z", "message": "Fix NPE for aggregate metrics"}, "afterCommit": {"oid": "a83c61180db8786365b32c5d1646b923b24812aa", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/a83c61180db8786365b32c5d1646b923b24812aa", "committedDate": "2020-08-14T03:20:48Z", "message": "Fix NPE for aggregate metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjkxNDkz", "url": "https://github.com/apache/pinot/pull/5862#pullrequestreview-467291493", "createdAt": "2020-08-14T03:56:05Z", "commit": {"oid": "a83c61180db8786365b32c5d1646b923b24812aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 180, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}