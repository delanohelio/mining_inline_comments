{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjIzNjM1", "number": 5823, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo1MDoyMVrOEWASNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODo1ODo0N1rOEWUm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTA4NzkwOnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/datalayer/bao/jdbc/MergedAnomalyResultManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo1MDoyMVrOG9FbtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMTo1MDoyMVrOG9FbtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNTMzMw==", "bodyText": "we may need to consider the potential merging gap between the parent and children anomaly.", "url": "https://github.com/apache/pinot/pull/5823#discussion_r466705333", "createdAt": "2020-08-06T21:50:21Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/datalayer/bao/jdbc/MergedAnomalyResultManagerImpl.java", "diffHunk": "@@ -456,6 +456,24 @@ public void updateAnomalyFeedback(MergedAnomalyResultDTO entity) {\n     return this.getAnomaliesForMetricBeanAndTimeRange(mbean, start, end);\n   }\n \n+  @Override\n+  public MergedAnomalyResultDTO findParent(MergedAnomalyResultDTO entity) {\n+    List<MergedAnomalyResultBean> candidates = genericPojoDao.get(Predicate.AND(\n+        Predicate.EQ(\"detectionConfigId\", entity.getDetectionConfigId()),\n+        Predicate.LE(\"startTime\", entity.getStartTime()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d7271542f9e0d326b0d34867ac9d510b9e5851"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODIxMzA5OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzo0OToxMFrOG9ip_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowNzo0MVrOG9k5vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NDEyNg==", "bodyText": "Hi Vincent, is the same API used for both anomalies page, root cause page, application page and potentially alert page? Let's make sure the consistent behavior, if users update the children anomalies' feedback from any page above, it will always propagate the feedbacks to the parent anomaly?", "url": "https://github.com/apache/pinot/pull/5823#discussion_r467184126", "createdAt": "2020-08-07T17:49:10Z", "author": {"login": "cecilynie"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "diffHunk": "@@ -156,30 +156,49 @@ public MergedAnomalyResultDTO getMergedAnomalyDetail(\n    *                        eg. payload\n    *                        <p/>\n    *                        { \"feedbackType\": \"NOT_ANOMALY\", \"comment\": \"this is not an anomaly\" }\n+   * @param propagate       : a flag whether it should propagate the same feedback value to the parent of this anomaly\n+   *                        and all its siblings if they exist\n    */\n   @POST\n   @Path(value = \"anomaly-merged-result/feedback/{anomaly_merged_result_id}\")\n   @ApiOperation(\"update anomaly merged result feedback\")\n-  public void updateAnomalyMergedResultFeedback(@PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+  public void updateAnomalyMergedResultFeedback(\n+      @PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+      @QueryParam(\"propagate\") @DefaultValue(\"true\") boolean propagate,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d7271542f9e0d326b0d34867ac9d510b9e5851"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIyMDkyNg==", "bodyText": "I confirm that updating feedbacks in anomaly pages, root cause pages, application pages and alert pages will trigger this API call. I don't think there is any other page where we can update the feedback.", "url": "https://github.com/apache/pinot/pull/5823#discussion_r467220926", "createdAt": "2020-08-07T19:07:41Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "diffHunk": "@@ -156,30 +156,49 @@ public MergedAnomalyResultDTO getMergedAnomalyDetail(\n    *                        eg. payload\n    *                        <p/>\n    *                        { \"feedbackType\": \"NOT_ANOMALY\", \"comment\": \"this is not an anomaly\" }\n+   * @param propagate       : a flag whether it should propagate the same feedback value to the parent of this anomaly\n+   *                        and all its siblings if they exist\n    */\n   @POST\n   @Path(value = \"anomaly-merged-result/feedback/{anomaly_merged_result_id}\")\n   @ApiOperation(\"update anomaly merged result feedback\")\n-  public void updateAnomalyMergedResultFeedback(@PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+  public void updateAnomalyMergedResultFeedback(\n+      @PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+      @QueryParam(\"propagate\") @DefaultValue(\"true\") boolean propagate,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NDEyNg=="}, "originalCommit": {"oid": "86d7271542f9e0d326b0d34867ac9d510b9e5851"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODQxNzU3OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODo1ODo0N1rOG9koeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMToxNzozNlrOG9oEFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNjUwNQ==", "bodyText": "Hi Vincent, just a quick question, where is the sibling anomaly updated? Thanks!", "url": "https://github.com/apache/pinot/pull/5823#discussion_r467216505", "createdAt": "2020-08-07T18:58:47Z", "author": {"login": "jasonyanwenl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "diffHunk": "@@ -156,30 +156,49 @@ public MergedAnomalyResultDTO getMergedAnomalyDetail(\n    *                        eg. payload\n    *                        <p/>\n    *                        { \"feedbackType\": \"NOT_ANOMALY\", \"comment\": \"this is not an anomaly\" }\n+   * @param propagate       : a flag whether it should propagate the same feedback value to the parent of this anomaly\n+   *                        and all its siblings if they exist\n    */\n   @POST\n   @Path(value = \"anomaly-merged-result/feedback/{anomaly_merged_result_id}\")\n   @ApiOperation(\"update anomaly merged result feedback\")\n-  public void updateAnomalyMergedResultFeedback(@PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+  public void updateAnomalyMergedResultFeedback(\n+      @PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+      @QueryParam(\"propagate\") @DefaultValue(\"true\") boolean propagate,\n       String payload) {\n     try {\n       MergedAnomalyResultDTO result = anomalyMergedResultDAO.findById(anomalyResultId);\n       if (result == null) {\n         throw new IllegalArgumentException(\"AnomalyResult not found with id \" + anomalyResultId);\n       }\n       AnomalyFeedbackDTO feedbackRequest = OBJECT_MAPPER.readValue(payload, AnomalyFeedbackDTO.class);\n-      AnomalyFeedback feedback = result.getFeedback();\n-      if (feedback == null) {\n-        feedback = new AnomalyFeedbackDTO();\n-        result.setFeedback(feedback);\n-      }\n-      feedback.setComment(feedbackRequest.getComment());\n-      if (feedbackRequest.getFeedbackType() != null){\n-        feedback.setFeedbackType(feedbackRequest.getFeedbackType());\n+      if (propagate && result.isChild()) {\n+        // propagate the feedback to its parent and siblings\n+        MergedAnomalyResultDTO parent = anomalyMergedResultDAO.findParent(result);\n+        if (parent != null) {\n+          updateAnomalyFeedback(parent, feedbackRequest);\n+        } else {\n+          LOG.warn(\"Cannot find parent for anomaly : {}, thus only updating the feedback of it\", result.getId());\n+          updateAnomalyFeedback(result, feedbackRequest);\n+        }\n+      } else {\n+        updateAnomalyFeedback(result, feedbackRequest);\n       }\n-      anomalyMergedResultDAO.updateAnomalyFeedback(result);\n     } catch (IOException e) {\n       throw new IllegalArgumentException(\"Invalid payload \" + payload, e);\n     }\n   }\n+\n+  private void updateAnomalyFeedback(MergedAnomalyResultDTO anomaly, AnomalyFeedbackDTO newFeedback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d7271542f9e0d326b0d34867ac9d510b9e5851"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjcyNg==", "bodyText": "anomalyMergedResultDAO.updateAnomalyFeedback(anomaly) actually updates the feedback labels of anomaly and all its child anomaly.", "url": "https://github.com/apache/pinot/pull/5823#discussion_r467272726", "createdAt": "2020-08-07T21:17:36Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/dashboard/resources/AnomalyResource.java", "diffHunk": "@@ -156,30 +156,49 @@ public MergedAnomalyResultDTO getMergedAnomalyDetail(\n    *                        eg. payload\n    *                        <p/>\n    *                        { \"feedbackType\": \"NOT_ANOMALY\", \"comment\": \"this is not an anomaly\" }\n+   * @param propagate       : a flag whether it should propagate the same feedback value to the parent of this anomaly\n+   *                        and all its siblings if they exist\n    */\n   @POST\n   @Path(value = \"anomaly-merged-result/feedback/{anomaly_merged_result_id}\")\n   @ApiOperation(\"update anomaly merged result feedback\")\n-  public void updateAnomalyMergedResultFeedback(@PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+  public void updateAnomalyMergedResultFeedback(\n+      @PathParam(\"anomaly_merged_result_id\") long anomalyResultId,\n+      @QueryParam(\"propagate\") @DefaultValue(\"true\") boolean propagate,\n       String payload) {\n     try {\n       MergedAnomalyResultDTO result = anomalyMergedResultDAO.findById(anomalyResultId);\n       if (result == null) {\n         throw new IllegalArgumentException(\"AnomalyResult not found with id \" + anomalyResultId);\n       }\n       AnomalyFeedbackDTO feedbackRequest = OBJECT_MAPPER.readValue(payload, AnomalyFeedbackDTO.class);\n-      AnomalyFeedback feedback = result.getFeedback();\n-      if (feedback == null) {\n-        feedback = new AnomalyFeedbackDTO();\n-        result.setFeedback(feedback);\n-      }\n-      feedback.setComment(feedbackRequest.getComment());\n-      if (feedbackRequest.getFeedbackType() != null){\n-        feedback.setFeedbackType(feedbackRequest.getFeedbackType());\n+      if (propagate && result.isChild()) {\n+        // propagate the feedback to its parent and siblings\n+        MergedAnomalyResultDTO parent = anomalyMergedResultDAO.findParent(result);\n+        if (parent != null) {\n+          updateAnomalyFeedback(parent, feedbackRequest);\n+        } else {\n+          LOG.warn(\"Cannot find parent for anomaly : {}, thus only updating the feedback of it\", result.getId());\n+          updateAnomalyFeedback(result, feedbackRequest);\n+        }\n+      } else {\n+        updateAnomalyFeedback(result, feedbackRequest);\n       }\n-      anomalyMergedResultDAO.updateAnomalyFeedback(result);\n     } catch (IOException e) {\n       throw new IllegalArgumentException(\"Invalid payload \" + payload, e);\n     }\n   }\n+\n+  private void updateAnomalyFeedback(MergedAnomalyResultDTO anomaly, AnomalyFeedbackDTO newFeedback) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNjUwNQ=="}, "originalCommit": {"oid": "86d7271542f9e0d326b0d34867ac9d510b9e5851"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3954, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}