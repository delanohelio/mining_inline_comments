{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NDc2ODU0", "number": 5613, "title": "[QueryContext] Use QueryContext in functions", "bodyText": "Description\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions\nThis is the last PR of removing BrokerRequest classes from the query execution path. After this PR, the query engine will be independent of BrokerRequest and only access QueryContext classes, and all the redundant expression parsing will be saved.\nBesides replacing BrokerRequest classes, also refactored DistinctCountThetaSketchAggregationFunction to use the QueryContext classes, which solves the TODO of standardizing the predicate strings and simplifies the predicate handling.\nMinor bug-fixes:\n\nFix HLL log2m override for SQL query and make it case insensitive (In BaseBrokerRequestHandler)\nAdd special argument handling for DistinctCountRawThetaSketch (In BrokerRequestToQueryContextConverter)\nAlways use single argument * for COUNT when converting FunctionCallAstNode  to FunctionContext (In QueryContextConverterUtils)\n\nUpgrade Notes\nBecause of the standardization of the DistinctCountThetaSketch predicate strings, please upgrade Broker before Server. The new Broker can handle both standard and non-standard predicate strings for backward-compatibility.", "createdAt": "2020-06-24T20:31:45Z", "url": "https://github.com/apache/pinot/pull/5613", "merged": true, "mergeCommit": {"oid": "1d9135bdb84dbae28dd867be7c4a3bcdc667d4c7"}, "closed": true, "closedAt": "2020-06-29T17:35:02Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuhRaUgBqjM0Nzk1MzA0NzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwDcEKgFqTQzOTMwMDU1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a6b85917b62644679e6366def070588b91e9b83", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/1a6b85917b62644679e6366def070588b91e9b83", "committedDate": "2020-06-24T20:14:43Z", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions"}, "afterCommit": {"oid": "e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "committedDate": "2020-06-24T21:46:48Z", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "committedDate": "2020-06-24T23:35:17Z", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "committedDate": "2020-06-24T21:46:48Z", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions"}, "afterCommit": {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "committedDate": "2020-06-24T23:35:17Z", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDE0Njg1", "url": "https://github.com/apache/pinot/pull/5613#pullrequestreview-438014685", "createdAt": "2020-06-26T05:02:39Z", "commit": {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNTowMjo0MFrOGpTwlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNTowMjo0MFrOGpTwlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2ODUzMw==", "bodyText": "what's the issue with calling init()?", "url": "https://github.com/apache/pinot/pull/5613#discussion_r445968533", "createdAt": "2020-06-26T05:02:40Z", "author": {"login": "mayankshriv"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountThetaSketchAggregationFunction.java", "diffHunk": "@@ -83,16 +73,69 @@\n    *                    <li> Required: Last expression is the one that will be evaluated to compute final result. </li>\n    *                    </ul>\n    */\n-  public DistinctCountThetaSketchAggregationFunction(List<String> arguments)\n+  public DistinctCountThetaSketchAggregationFunction(List<ExpressionContext> arguments)\n       throws SqlParseException {\n-    int numExpressions = arguments.size();\n+    int numArguments = arguments.size();\n+\n+    // NOTE: This function expects at least 3 arguments: theta-sketch column, parameters, post-aggregation expression.\n+    Preconditions.checkArgument(numArguments >= 3,\n+        \"DistinctCountThetaSketch expects at least three arguments (theta-sketch column, parameters, post-aggregation expression), got: \",\n+        numArguments);\n+\n+    // Initialize the theta-sketch column\n+    _thetaSketchColumn = arguments.get(0);\n+    Preconditions.checkArgument(_thetaSketchColumn.getType() == ExpressionContext.Type.IDENTIFIER,\n+        \"First argument of DistinctCountThetaSketch must be identifier (theta-sketch column)\");\n+\n+    // Initialize the theta-sketch parameters\n+    ExpressionContext paramsExpression = arguments.get(1);\n+    Preconditions.checkArgument(paramsExpression.getType() == ExpressionContext.Type.LITERAL,\n+        \"Second argument of DistinctCountThetaSketch must be literal (parameters)\");\n+    _thetaSketchParams = ThetaSketchParams.fromString(paramsExpression.getLiteral());\n \n-    // This function expects at least 3 arguments: Theta Sketch Column, Predicates & final aggregation expression.\n-    Preconditions.checkArgument(numExpressions >= 3, \"DistinctCountThetaSketch expects at least three arguments, got: \",\n-        numExpressions);\n+    // Initialize the theta-sketch set operation builder\n+    _setOperationBuilder = getSetOperationBuilder();\n \n-    // Initialize all the internal state.\n-    init(arguments);\n+    // Initialize the input expressions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzAwNTUy", "url": "https://github.com/apache/pinot/pull/5613#pullrequestreview-439300552", "createdAt": "2020-06-29T16:14:49Z", "commit": {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 694, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}