{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzk2NjE4", "number": 6358, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDoyMjo1NlrOFF3waw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDoyMjo1NlrOFF3waw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNzAwNzE1OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/pub-sub.js", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDoyMjo1NlrOIGl-xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTozOToyN1rOIHaTAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDY0Ng==", "bodyText": "why you need a singleton to create an observer and subscriber here not an ember service and computed property to execute it?", "url": "https://github.com/apache/pinot/pull/6358#discussion_r543784646", "createdAt": "2020-12-16T00:22:56Z", "author": {"login": "zhangloo333"}, "path": "thirdeye/thirdeye-frontend/app/utils/pub-sub.js", "diffHunk": "@@ -0,0 +1,72 @@\n+/** A very lightweight pub-sub implementation to communicate between ember-model-table\n+ *  and the hosting component\n+ *\n+ *  Usage:\n+ *  import pubSub from 'app/utils/pub-sub';\n+ *\n+ *  For publishing\n+ *  pubSub.publish('testEvent', data);\n+ *\n+ *  For subscribing\n+ *  const subscription = pubSub.subscribe('testEvent', (data) => {\n+ *  });\n+ *\n+ *  For unsubscribing\n+ *  subscription.unSubscribe();\n+ */\n+class PubSub {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff94c572bf55e1a09fdb71eb1888310a83a77d23"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzNTM2MA==", "bodyText": "I had considered but did not do it because of 2 reasons:-\n\nBecause it is a temporary implementation until we have API ready to be able to do deep-linking. It is expected to go away.\nBecause if it turns out to be an implementation which lingers for a for longer due to unavailability of API in 1. above for a longer duration for any reason, then we don't want to do any additional initial refactoring as we transition to ember-octane. The more the services and computed properties, more tedious the refactoring effort.\n\nEssentially, my idea is we want to keep new code lightweight and use as much vanilla javascript as we could to make our life easier as we transition towards ember octane. That means temporarily less reliance on native ember routines, services, computed properties and such.", "url": "https://github.com/apache/pinot/pull/6358#discussion_r544535360", "createdAt": "2020-12-16T18:41:53Z", "author": {"login": "tejasajmera"}, "path": "thirdeye/thirdeye-frontend/app/utils/pub-sub.js", "diffHunk": "@@ -0,0 +1,72 @@\n+/** A very lightweight pub-sub implementation to communicate between ember-model-table\n+ *  and the hosting component\n+ *\n+ *  Usage:\n+ *  import pubSub from 'app/utils/pub-sub';\n+ *\n+ *  For publishing\n+ *  pubSub.publish('testEvent', data);\n+ *\n+ *  For subscribing\n+ *  const subscription = pubSub.subscribe('testEvent', (data) => {\n+ *  });\n+ *\n+ *  For unsubscribing\n+ *  subscription.unSubscribe();\n+ */\n+class PubSub {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDY0Ng=="}, "originalCommit": {"oid": "ff94c572bf55e1a09fdb71eb1888310a83a77d23"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NDg0Ng==", "bodyText": "LGTM, but I am not sure this singleton pattern work, you could check whether every import shares the same instance.", "url": "https://github.com/apache/pinot/pull/6358#discussion_r544544846", "createdAt": "2020-12-16T18:56:37Z", "author": {"login": "zhangloo333"}, "path": "thirdeye/thirdeye-frontend/app/utils/pub-sub.js", "diffHunk": "@@ -0,0 +1,72 @@\n+/** A very lightweight pub-sub implementation to communicate between ember-model-table\n+ *  and the hosting component\n+ *\n+ *  Usage:\n+ *  import pubSub from 'app/utils/pub-sub';\n+ *\n+ *  For publishing\n+ *  pubSub.publish('testEvent', data);\n+ *\n+ *  For subscribing\n+ *  const subscription = pubSub.subscribe('testEvent', (data) => {\n+ *  });\n+ *\n+ *  For unsubscribing\n+ *  subscription.unSubscribe();\n+ */\n+class PubSub {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDY0Ng=="}, "originalCommit": {"oid": "ff94c572bf55e1a09fdb71eb1888310a83a77d23"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0MTc5Mw==", "bodyText": "@zhangloo333 Every import shares the same instance. I have further validated it with a dry run.", "url": "https://github.com/apache/pinot/pull/6358#discussion_r544641793", "createdAt": "2020-12-16T21:39:27Z", "author": {"login": "tejasajmera"}, "path": "thirdeye/thirdeye-frontend/app/utils/pub-sub.js", "diffHunk": "@@ -0,0 +1,72 @@\n+/** A very lightweight pub-sub implementation to communicate between ember-model-table\n+ *  and the hosting component\n+ *\n+ *  Usage:\n+ *  import pubSub from 'app/utils/pub-sub';\n+ *\n+ *  For publishing\n+ *  pubSub.publish('testEvent', data);\n+ *\n+ *  For subscribing\n+ *  const subscription = pubSub.subscribe('testEvent', (data) => {\n+ *  });\n+ *\n+ *  For unsubscribing\n+ *  subscription.unSubscribe();\n+ */\n+class PubSub {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDY0Ng=="}, "originalCommit": {"oid": "ff94c572bf55e1a09fdb71eb1888310a83a77d23"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3039, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}