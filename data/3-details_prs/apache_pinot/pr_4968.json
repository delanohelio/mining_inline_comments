{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTkwMTU1", "number": 4968, "title": "Remove Kafka and Stream dependency on avro", "bodyText": "", "createdAt": "2020-01-09T22:27:05Z", "url": "https://github.com/apache/pinot/pull/4968", "merged": true, "mergeCommit": {"oid": "b5d1f42a1b6db36626935ef0d22652903f913e76"}, "closed": true, "closedAt": "2020-01-10T22:17:15Z", "author": {"login": "mcvsubbu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4xgTNgH2gAyMzYxMTkwMTU1OmVmZjVjY2ExNjc4Yzk1YjQ5YTlmMTg2MDYxNmRhOTA3NzU2ZGZlOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5F2XPgFqTM0MTQ0NDEyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eff5cca1678c95b49a9f1860616da907756dfe8f", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/eff5cca1678c95b49a9f1860616da907756dfe8f", "committedDate": "2020-01-09T22:15:19Z", "message": "Remove avro depenency from Kafka modules\n\nStreams ingestion was depending on pinot-avro (and org.apache.avro) because\nthe kafka-to-avro decoders depended on them, and the decoders lived in\nthe streams module.\n\nMoved the decoders to pinot-avro.\n\nAlso introduced a base class to extract a pinot GenerirRow from any\ninput format. pinot-avro now has the class to extract a pinot row\nfrom avro record.\n\nOther input formats may have introduce their own extractors.\n\nUpdated tests accordingly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05c4b787cc8ccbe7d8ef7daee4b47756027c24e1", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/05c4b787cc8ccbe7d8ef7daee4b47756027c24e1", "committedDate": "2020-01-09T22:23:44Z", "message": "Cleaned up member variables in KafkaAvroMessageDecoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODU2NTAy", "url": "https://github.com/apache/pinot/pull/4968#pullrequestreview-340856502", "createdAt": "2020-01-09T22:30:46Z", "commit": {"oid": "05c4b787cc8ccbe7d8ef7daee4b47756027c24e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjozMDo0NlrOFcFV3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjozMDo0NlrOFcFV3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5MTk2Nw==", "bodyText": "I would keep this as an interface and add a base class if you want to add some default util methods.", "url": "https://github.com/apache/pinot/pull/4968#discussion_r364991967", "createdAt": "2020-01-09T22:30:46Z", "author": {"login": "kishoreg"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/readers/RecordExtractor.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data.readers;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.pinot.spi.data.FieldSpec;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.TimeFieldSpec;\n+\n+\n+public abstract class RecordExtractor<T> {\n+\n+  protected FieldSpec getFieldSpecToUse(Schema schema, FieldSpec incomingFieldSpec) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05c4b787cc8ccbe7d8ef7daee4b47756027c24e1"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODg2MDg5", "url": "https://github.com/apache/pinot/pull/4968#pullrequestreview-340886089", "createdAt": "2020-01-09T23:51:18Z", "commit": {"oid": "05c4b787cc8ccbe7d8ef7daee4b47756027c24e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMzo1MToxOFrOFcGynQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMzo1MToxOFrOFcGynQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAxNTcwOQ==", "bodyText": "this interface assumes T is self-describing (like thrift, avro, json) but it fails for format like csv, tsv etc where we get a comma separated line. This means it needs an init method :(.", "url": "https://github.com/apache/pinot/pull/4968#discussion_r365015709", "createdAt": "2020-01-09T23:51:18Z", "author": {"login": "kishoreg"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/readers/RecordExtractor.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data.readers;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.pinot.spi.data.FieldSpec;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.TimeFieldSpec;\n+\n+\n+public abstract class RecordExtractor<T> {\n+\n+  protected FieldSpec getFieldSpecToUse(Schema schema, FieldSpec incomingFieldSpec) {\n+    if (incomingFieldSpec.getFieldType() == FieldSpec.FieldType.TIME) {\n+      TimeFieldSpec timeFieldSpec = schema.getTimeFieldSpec();\n+      Preconditions.checkNotNull(timeFieldSpec);\n+      return new TimeFieldSpec(timeFieldSpec.getIncomingGranularitySpec());\n+    }\n+\n+    return incomingFieldSpec;\n+  }\n+\n+  abstract public GenericRow extract(Schema schema, T from, GenericRow to);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05c4b787cc8ccbe7d8ef7daee4b47756027c24e1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bcccb9f6825c522d91874068e38e56a4463b1fe", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/8bcccb9f6825c522d91874068e38e56a4463b1fe", "committedDate": "2020-01-10T01:54:39Z", "message": "Changed RecordExtractor to be an interface and added a base class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDQ0MTI4", "url": "https://github.com/apache/pinot/pull/4968#pullrequestreview-341444128", "createdAt": "2020-01-10T21:57:31Z", "commit": {"oid": "8bcccb9f6825c522d91874068e38e56a4463b1fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1444, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}