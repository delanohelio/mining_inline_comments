{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDEzMjQ0", "number": 5575, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyMjoxMFrOEGE6qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMjowMVrOEGGRfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODA3NDY1OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyMjoxMFrOGkp4TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo1MTo0MlrOGkstxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw==", "bodyText": "Use roundToNearest.longValue() and cache it for performance concern.", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441088077", "createdAt": "2020-06-16T19:22:10Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket\n+   */\n+  @ScalarFunction\n+  static Long round(Long timeValue, Number roundToNearest) {\n+    return (timeValue / roundToNearest.intValue()) * roundToNearest.intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDgwMw==", "bodyText": "We apply this on the stream, which presumably has different input values coming in (e.g. millis). Not sure how we can cache it?", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441124803", "createdAt": "2020-06-16T20:33:07Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket\n+   */\n+  @ScalarFunction\n+  static Long round(Long timeValue, Number roundToNearest) {\n+    return (timeValue / roundToNearest.intValue()) * roundToNearest.intValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}, "originalCommit": {"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNTA3NQ==", "bodyText": "But using long is better, yes.", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441125075", "createdAt": "2020-06-16T20:33:38Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket\n+   */\n+  @ScalarFunction\n+  static Long round(Long timeValue, Number roundToNearest) {\n+    return (timeValue / roundToNearest.intValue()) * roundToNearest.intValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}, "originalCommit": {"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNDUzNA==", "bodyText": "changed to roundToNearest.longValue and cached it", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441134534", "createdAt": "2020-06-16T20:51:42Z", "author": {"login": "npawar"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket\n+   */\n+  @ScalarFunction\n+  static Long round(Long timeValue, Number roundToNearest) {\n+    return (timeValue / roundToNearest.intValue()) * roundToNearest.intValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}, "originalCommit": {"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODI5NjkzOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMjowMVrOGksE9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMjowMVrOGksE9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDA4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Round the given time value to nearest rounding bucket\n          \n          \n            \n               * Round the given time value to nearest multiple\n          \n          \n            \n               * @return the original value but rounded to the nearest multiple of @param roundToNearest", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441124087", "createdAt": "2020-06-16T20:32:01Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4324, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}