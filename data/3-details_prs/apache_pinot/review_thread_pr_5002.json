{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjMwMDU2", "number": 5002, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMzoxNDo0M1rODZtDYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMjoxNlrODaBNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Mjc5MTM2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMzoxNDo0M1rOFgPgow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoxNjo1OVrOFguWSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjg2Nw==", "bodyText": "Will this throw exception in normal case? We should not swallow exception", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369352867", "createdAt": "2020-01-22T03:14:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {\n+      try {\n+        CleanerUtil.getCleaner().freeBuffer(_buffer);\n+      } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5NDYyNA==", "bodyText": "will log the error", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369394624", "createdAt": "2020-01-22T06:54:30Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {\n+      try {\n+        CleanerUtil.getCleaner().freeBuffer(_buffer);\n+      } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjg2Nw=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0NjYwNw==", "bodyText": "We should throw the IOException out (the interface expects IOException to be thrown)", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369846607", "createdAt": "2020-01-22T22:44:32Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {\n+      try {\n+        CleanerUtil.getCleaner().freeBuffer(_buffer);\n+      } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjg2Nw=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1ODEyMA==", "bodyText": "will do", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369858120", "createdAt": "2020-01-22T23:16:59Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {\n+      try {\n+        CleanerUtil.getCleaner().freeBuffer(_buffer);\n+      } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjg2Nw=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Mjc5MTg1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMzoxNToxMlrOFgPg7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMzowN1rOFgvVuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg==", "bodyText": "If UNMAP is not supported, are we going to leak resources?", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369352942", "createdAt": "2020-01-22T03:15:12Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5NTg2Mw==", "bodyText": "Yes, currently we log error message for the reason. Shall we fatal the program instead?", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369395863", "createdAt": "2020-01-22T06:59:17Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTAzNg==", "bodyText": "Why would we get to this code block?", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369401036", "createdAt": "2020-01-22T07:20:27Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3Mjg0OQ==", "bodyText": "It\u2019s possible that users may not have permission, e.g. security manager not grant reflectPermission", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369472849", "createdAt": "2020-01-22T10:14:47Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0NzY1NA==", "bodyText": "I would recommend aborting the program because this will cause severe resource leak (unable to offload any segment)", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369847654", "createdAt": "2020-01-22T22:47:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0OTE2NA==", "bodyText": "does this occur in heap and offHeap load mode?", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369849164", "createdAt": "2020-01-22T22:51:17Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1NDk1OQ==", "bodyText": "@kishoreg It occurs in both modes\nhttps://stackoverflow.com/questions/36077641/java-when-does-direct-buffer-released\nAfter some research, seems like the direct memory will be freed eventually, but there is no guarantee on how long it takes, and the JVM might run out of direct memory.\nI think it is okay to log an error and keep the program running, but let's make sure in normal case it can free the direct memory properly.", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369854959", "createdAt": "2020-01-22T23:07:15Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3NDM2MA==", "bodyText": "In normal case, this code will just incur different methods to clean DirectBuffer in different java runtime.", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369874360", "createdAt": "2020-01-23T00:13:07Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -327,8 +327,11 @@ public void flush() {\n \n   @Override\n   protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1Mjk0Mg=="}, "originalCommit": {"oid": "1e6dd26dd6dd5d95635d869de31038b891040aa3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjA5MDExOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/segment/memory/PinotDataBufferTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMDozMlrOFgvS5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMDozMlrOFgvS5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3MzYzOA==", "bodyText": "No need for this test as release() is called in close().", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369873638", "createdAt": "2020-01-23T00:10:32Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/segment/memory/PinotDataBufferTest.java", "diffHunk": "@@ -115,6 +115,34 @@ public void testPinotByteBuffer()\n     }\n   }\n \n+  @Test\n+  public void testPinotByteBufferRelease()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d53e38bd7f86cbe99174561b457916ef1cade"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjA5MTg2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMTozMFrOFgvT6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxNzoyOVrOFgvaPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3Mzg5Nw==", "bodyText": "Maybe better to log an warning with the reason when CleanerUtil.UNMAP_SUPPORTED is false", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369873897", "createdAt": "2020-01-23T00:11:30Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -326,9 +329,15 @@ public void flush() {\n   }\n \n   @Override\n-  protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+  protected void release()\n+      throws IOException {\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d53e38bd7f86cbe99174561b457916ef1cade"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3NTUxOA==", "bodyText": "It's logged in CleanerUtil", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369875518", "createdAt": "2020-01-23T00:17:29Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -326,9 +329,15 @@ public void flush() {\n   }\n \n   @Override\n-  protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+  protected void release()\n+      throws IOException {\n+    if (CleanerUtil.UNMAP_SUPPORTED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3Mzg5Nw=="}, "originalCommit": {"oid": "b79d53e38bd7f86cbe99174561b457916ef1cade"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjA5MzI3OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMjoxNlrOFgvUvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoxMjoxNlrOFgvUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3NDExMA==", "bodyText": "No need to try-catch and log the error if we throw the exception out", "url": "https://github.com/apache/pinot/pull/5002#discussion_r369874110", "createdAt": "2020-01-23T00:12:16Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/memory/PinotByteBuffer.java", "diffHunk": "@@ -326,9 +329,15 @@ public void flush() {\n   }\n \n   @Override\n-  protected void release() {\n-    if (((DirectBuffer) _buffer).cleaner() != null) {\n-      ((DirectBuffer) _buffer).cleaner().clean();\n+  protected void release()\n+      throws IOException {\n+    if (CleanerUtil.UNMAP_SUPPORTED) {\n+      try {\n+        CleanerUtil.getCleaner().freeBuffer(_buffer);\n+      } catch (IOException e) {\n+        LOGGER.error(\"Failed to release ByteBuffer: {}\", _buffer, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d53e38bd7f86cbe99174561b457916ef1cade"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3620, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}