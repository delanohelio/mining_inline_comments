{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MTY1OTU4", "number": 6332, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1NDo0MVrOFDvg_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToxMDo0OFrOFEIXzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDY4NTQxOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1NDo0MVrOIDi2jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjoyMjoxNlrOIDmJQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NzY2Mg==", "bodyText": "Curious on why this change?", "url": "https://github.com/apache/pinot/pull/6332#discussion_r540587662", "createdAt": "2020-12-10T23:54:41Z", "author": {"login": "mayankshriv"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java", "diffHunk": "@@ -38,8 +38,8 @@\n   private PinotFSFactory() {\n   }\n \n+  public static final String LOCAL_PINOT_FS_SCHEME = \"file\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b72f0d37227a181caee299412d8ef11fbc1f36f5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY0MTYwMw==", "bodyText": "It will be used as default scheme value when we specify the path uri without scheme.", "url": "https://github.com/apache/pinot/pull/6332#discussion_r540641603", "createdAt": "2020-12-11T02:22:16Z", "author": {"login": "xiangfu0"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java", "diffHunk": "@@ -38,8 +38,8 @@\n   private PinotFSFactory() {\n   }\n \n+  public static final String LOCAL_PINOT_FS_SCHEME = \"file\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NzY2Mg=="}, "originalCommit": {"oid": "b72f0d37227a181caee299412d8ef11fbc1f36f5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODc1NzkwOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/ingestion/batch/BatchConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOToxMDo0OFrOIEGzuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwMzo0Njo1NVrOIEvDGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE3Njc2MQ==", "bodyText": "As discussed offline, please relax this requirement of input and output dir, so that user can pass in their own BatchConfig with null input and output for file uploads", "url": "https://github.com/apache/pinot/pull/6332#discussion_r541176761", "createdAt": "2020-12-11T19:10:48Z", "author": {"login": "npawar"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/ingestion/batch/BatchConfig.java", "diffHunk": "@@ -28,73 +28,57 @@\n  * Provides all config related to the batch data source, as configured in the table config's ingestion config\n  */\n public class BatchConfig {\n+  private final Map<String, String> _batchConfigMap;\n+\n   private final String _tableNameWithType;\n-  private final String _type;\n   private final String _inputDirURI;\n   private final String _outputDirURI;\n-  private final String _fsClassName;\n-  private final Map<String, String> _fsProps = new HashMap<>();\n+  private final String _inputFsClassName;\n+  private final Map<String, String> _inputFsProps = new HashMap<>();\n+  private final String _outputFsClassName;\n+  private final Map<String, String> _outputFsProps = new HashMap<>();\n   private final FileFormat _inputFormat;\n   private final String _recordReaderClassName;\n   private final String _recordReaderConfigClassName;\n   private final Map<String, String> _recordReaderProps = new HashMap<>();\n \n-  private final Map<String, String> _batchConfigMap = new HashMap<>();\n-\n   public BatchConfig(String tableNameWithType, Map<String, String> batchConfigsMap) {\n-    _tableNameWithType = tableNameWithType;\n-\n-    _type = batchConfigsMap.get(BatchConfigProperties.BATCH_TYPE);\n-    Preconditions.checkState(_type != null, \"Property: %s cannot be null\", BatchConfigProperties.BATCH_TYPE);\n+    _batchConfigMap = batchConfigsMap;\n \n-    String inputDirURIKey = BatchConfigProperties.constructBatchProperty(_type, BatchConfigProperties.INPUT_DIR_URI);\n-    _inputDirURI = batchConfigsMap.get(inputDirURIKey);\n-    Preconditions.checkState(_inputDirURI != null, \"Property: %s cannot be null\", inputDirURIKey);\n+    _tableNameWithType = tableNameWithType;\n \n-    String outputDirURIKey = BatchConfigProperties.constructBatchProperty(_type, BatchConfigProperties.OUTPUT_DIR_URI);\n-    _outputDirURI = batchConfigsMap.get(outputDirURIKey);\n-    Preconditions.checkState(_outputDirURI != null, \"Property: %s cannot be null\", outputDirURIKey);\n+    _inputDirURI = batchConfigsMap.get(BatchConfigProperties.INPUT_DIR_URI);\n+    Preconditions.checkState(_inputDirURI != null, \"Property: %s cannot be null\", BatchConfigProperties.INPUT_DIR_URI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b72f0d37227a181caee299412d8ef11fbc1f36f5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzNjA1OA==", "bodyText": "done", "url": "https://github.com/apache/pinot/pull/6332#discussion_r541836058", "createdAt": "2020-12-13T03:46:55Z", "author": {"login": "xiangfu0"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/ingestion/batch/BatchConfig.java", "diffHunk": "@@ -28,73 +28,57 @@\n  * Provides all config related to the batch data source, as configured in the table config's ingestion config\n  */\n public class BatchConfig {\n+  private final Map<String, String> _batchConfigMap;\n+\n   private final String _tableNameWithType;\n-  private final String _type;\n   private final String _inputDirURI;\n   private final String _outputDirURI;\n-  private final String _fsClassName;\n-  private final Map<String, String> _fsProps = new HashMap<>();\n+  private final String _inputFsClassName;\n+  private final Map<String, String> _inputFsProps = new HashMap<>();\n+  private final String _outputFsClassName;\n+  private final Map<String, String> _outputFsProps = new HashMap<>();\n   private final FileFormat _inputFormat;\n   private final String _recordReaderClassName;\n   private final String _recordReaderConfigClassName;\n   private final Map<String, String> _recordReaderProps = new HashMap<>();\n \n-  private final Map<String, String> _batchConfigMap = new HashMap<>();\n-\n   public BatchConfig(String tableNameWithType, Map<String, String> batchConfigsMap) {\n-    _tableNameWithType = tableNameWithType;\n-\n-    _type = batchConfigsMap.get(BatchConfigProperties.BATCH_TYPE);\n-    Preconditions.checkState(_type != null, \"Property: %s cannot be null\", BatchConfigProperties.BATCH_TYPE);\n+    _batchConfigMap = batchConfigsMap;\n \n-    String inputDirURIKey = BatchConfigProperties.constructBatchProperty(_type, BatchConfigProperties.INPUT_DIR_URI);\n-    _inputDirURI = batchConfigsMap.get(inputDirURIKey);\n-    Preconditions.checkState(_inputDirURI != null, \"Property: %s cannot be null\", inputDirURIKey);\n+    _tableNameWithType = tableNameWithType;\n \n-    String outputDirURIKey = BatchConfigProperties.constructBatchProperty(_type, BatchConfigProperties.OUTPUT_DIR_URI);\n-    _outputDirURI = batchConfigsMap.get(outputDirURIKey);\n-    Preconditions.checkState(_outputDirURI != null, \"Property: %s cannot be null\", outputDirURIKey);\n+    _inputDirURI = batchConfigsMap.get(BatchConfigProperties.INPUT_DIR_URI);\n+    Preconditions.checkState(_inputDirURI != null, \"Property: %s cannot be null\", BatchConfigProperties.INPUT_DIR_URI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE3Njc2MQ=="}, "originalCommit": {"oid": "b72f0d37227a181caee299412d8ef11fbc1f36f5"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}