{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTcwMjUz", "number": 5492, "title": "Handle extractions to Map in Avro and Json", "bodyText": "Description\nStumbled upon some issues while trying to use toJsonMapStr function.\n\nIn the current implementation, the Map type was not being handled in Json. A Map type node would get converted to STRING via a toString() resulting in the json say, { \"first\": \"Bob\", \"last\": \"Marley\" } becoming {first=Bob, last=Marley}.  It is not possible to apply jsonExtract functions on this string.\nWhile Map type was being handled in Avro, only 1 level of depth was being handled. After that, the values were being treated as single values.\nAdditionally, toJsonMapStr only operated on Map. As a result, we could not save an array with complex objects as a string.\n\nIn this PR:\n\nHandled Map type for both Avro/Json.\nHandling more than 1 level of depth for Map/GenericRecord/Collections. This is the only way we can actually use toJsonStr correctly.\nAdded toJsonObjectStr function\n\nRelease Notes\nJSON\nBefore this PR, we extracted json values as\n\nNumber/string as single-value 2) Collection as Object[].\nThere was no case to handle Map, hence a json Map would be treated as single-value STRING, and be converted using toString ({ \"first\": \"Bob\", \"last\": \"Marley\" } becomes {first=Bob, last=Marley} which is not json anymore). Anything beyond the first level of nesting in Collection also became a single-value STRING using toString (\"areas\": [ { \"code\": 16, \"state\": \"CA\" }, { \"code\": 34, \"state\": \"TX\" }]} becomes \"areas\": [ {code=16, state=CA}, {code=34, state=TX}]).\nAs a result of this, json Map would never reach the transformation stage, and hence we could never have stored a json map as string using toJsonMapStr.\n\nAfter this PR, we extract json values as\n\nNumber/String as single-value 2) Collection as Object[] 3) Map as Map<Object, Object>.\nWe also handle nested extraction, hence preserving the json objects.\nAs a result, we can now apply toJsonMapStr() on json maps.\nIntroduced a toJsonObjectStr to operate on any Object.\n\nBackward incompatibility\nIf an input file has a Map or a Collection with complex objects, those objects will be retained, instead of converting them using toString. So if someone was expecting the map to become {first=Bob, last=Marley}, this will not hold true anymore. Same for complex objects in Collections.\nAVRO\nBefore this PR, we extracted avro values as\n\nNumber/string/ByteBuffer as single-value 2) Arrays as Object[] 3) Map as Map<Object, Object>\nThere was no case to properly handle type record. If record was found, we simply took 1st field, and treated it as single value. Only 1 level of nesting was handled in Map and Array.\nAs a result, we could not completely apply toJsonMapStr function to store the complex objects.\n\nAfter this PR,\n\nNumber/String/bytebuffer as single-value 2) Arrays as Object[] 3) Map as Map<Object, Object>. 4) GenericData.Record as Map<Object, Object>.\nWe also handle nested extraction, hence preserving json structure.\nAs a result, we can now apply toJsonMapStr() on json maps.\nIntroduced a toJsonObjectStr to operate on any Object.\n\nBackward incompatibility\nIf input file has GenericData.Record, that object will get converted to Map, instead of picking only 1st field as single-value. Nesting will be handled in Arrays and Maps and Records. If someone has a \"record\" type field in the input, we will no longer treat it as a single value field and pull out only the 1st field.", "createdAt": "2020-06-04T03:46:42Z", "url": "https://github.com/apache/pinot/pull/5492", "merged": true, "mergeCommit": {"oid": "d54b04a2562f86dfb3adaa02ff400951d8108738"}, "closed": true, "closedAt": "2020-06-06T01:05:30Z", "author": {"login": "npawar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoFRL6gH2gAyNDI3NTcwMjUzOjNjMjMzYTMyYzk5M2U0MWI5ZTMzZTBmNzI1OGIwY2U5ZWM3MTRjOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcob7B9AH2gAyNDI3NTcwMjUzOjNhOGQ2YTg5ZWE5MmVkYzkzNTIzYjlhYjFjZWY4YTUyYzM3OGQxMDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3c233a32c993e41b9e33e0f7258b0ce9ec714c8d", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/3c233a32c993e41b9e33e0f7258b0ce9ec714c8d", "committedDate": "2020-06-04T21:51:21Z", "message": "Handle extractions to Map in Avro and Json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40335a1334853f2901c6eccc451ae0982e700c0d", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/40335a1334853f2901c6eccc451ae0982e700c0d", "committedDate": "2020-06-04T21:51:22Z", "message": "Fix test data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dde84c079276f0da6d7153b7332c86871e9d331", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/1dde84c079276f0da6d7153b7332c86871e9d331", "committedDate": "2020-06-05T03:15:12Z", "message": "Remove record from column6 and column7 array - we no longer pull out 1st element and treat it as single value"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e0068f9a97247f71258dbb1bfa37e5c14c2edb6", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/9e0068f9a97247f71258dbb1bfa37e5c14c2edb6", "committedDate": "2020-06-04T21:17:46Z", "message": "Fix test data"}, "afterCommit": {"oid": "1dde84c079276f0da6d7153b7332c86871e9d331", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/1dde84c079276f0da6d7153b7332c86871e9d331", "committedDate": "2020-06-05T03:15:12Z", "message": "Remove record from column6 and column7 array - we no longer pull out 1st element and treat it as single value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTMwMDIw", "url": "https://github.com/apache/pinot/pull/5492#pullrequestreview-425530020", "createdAt": "2020-06-05T18:25:33Z", "commit": {"oid": "1dde84c079276f0da6d7153b7332c86871e9d331"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoyNTozNFrOGf4_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoyNTozNFrOGf4_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA5Mjc4OQ==", "bodyText": "Don't see anything related to json here. Looks like a common ExtractorUtil", "url": "https://github.com/apache/pinot/pull/5492#discussion_r436092789", "createdAt": "2020-06-05T18:25:34Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-json/src/main/java/org/apache/pinot/plugin/inputformat/json/JSONRecordExtractorUtils.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.json;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+\n+\n+/**\n+ * Helper methods for converting values from json nodes to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dde84c079276f0da6d7153b7332c86871e9d331"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01965ba8da661013c601e7227722f880fc05aec0", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/01965ba8da661013c601e7227722f880fc05aec0", "committedDate": "2020-06-06T00:02:39Z", "message": "s/toJsonObjectStr/json_format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a8d6a89ea92edc93523b9ab1cef8a52c378d102", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/3a8d6a89ea92edc93523b9ab1cef8a52c378d102", "committedDate": "2020-06-06T00:14:58Z", "message": "Change function name in tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 901, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}