{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3Mzc0MjAz", "number": 5082, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODoyOTowMlrODh-LEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowODoxOFrODh-2wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQ4MjQwOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODoyOTowM1rOFtAbqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowMToxMFrOFtBVFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzMyMw==", "bodyText": "Can we update the javadoc to state the time boundary refresh is now done as part of SegmentRefreshMessage?", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382737323", "createdAt": "2020-02-21T18:29:03Z", "author": {"login": "siddharthteotia"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java", "diffHunk": "@@ -19,52 +19,60 @@\n package org.apache.pinot.common.messages;\n \n import java.util.UUID;\n+import org.apache.helix.ZNRecord;\n import org.apache.helix.model.Message;\n \n \n /**\n- * This (helix) message is sent from the controller to the server when a request is received to refresh\n+ * This (Helix) message is sent from the controller to brokers and servers when a request is received to refresh\n  * an existing segment.\n  *\n- * There is one mandatory field in the message -- the CRC of the new segment.\n+ * NOTE: Changing this class to include new fields is a change in the protocol, so the new fields must be made optional,\n+ * and coded in such a way that either controller, broker or server may be upgraded first.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MjAyMw==", "bodyText": "Added", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382752023", "createdAt": "2020-02-21T19:01:10Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java", "diffHunk": "@@ -19,52 +19,60 @@\n package org.apache.pinot.common.messages;\n \n import java.util.UUID;\n+import org.apache.helix.ZNRecord;\n import org.apache.helix.model.Message;\n \n \n /**\n- * This (helix) message is sent from the controller to the server when a request is received to refresh\n+ * This (Helix) message is sent from the controller to brokers and servers when a request is received to refresh\n  * an existing segment.\n  *\n- * There is one mandatory field in the message -- the CRC of the new segment.\n+ * NOTE: Changing this class to include new fields is a change in the protocol, so the new fields must be made optional,\n+ * and coded in such a way that either controller, broker or server may be upgraded first.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzMyMw=="}, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQ5NTgxOnYy", "diffSide": "LEFT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODozMzo1NFrOFtAkSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowMTozMlrOFtBVtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzMA==", "bodyText": "It looks like with these changes we can delete HelixExternalViewBasedRouting class and RoutingTable interface? (assuming RoutingManager is backward compatible)", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382739530", "createdAt": "2020-02-21T18:33:54Z", "author": {"login": "siddharthteotia"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "diffHunk": "@@ -82,16 +82,16 @@\n   private ZkHelixPropertyStore<ZNRecord> _propertyStore;\n   private HelixDataAccessor _helixDataAccessor;\n \n-  // Cluster change handlers\n-  private HelixExternalViewBasedRouting _helixExternalViewBasedRouting;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MjE4Mw==", "bodyText": "Yes. The code cleanup will be in the following pr.", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382752183", "createdAt": "2020-02-21T19:01:32Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "diffHunk": "@@ -82,16 +82,16 @@\n   private ZkHelixPropertyStore<ZNRecord> _propertyStore;\n   private HelixDataAccessor _helixDataAccessor;\n \n-  // Cluster change handlers\n-  private HelixExternalViewBasedRouting _helixExternalViewBasedRouting;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzMA=="}, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQ5NjEyOnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODozNDowMlrOFtAkgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowNTo1NVrOFtBdqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTU4NA==", "bodyText": "(nit): Can we please add Javadoc?", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382739584", "createdAt": "2020-02-21T18:34:02Z", "author": {"login": "siddharthteotia"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.broker.broker.helix;\n+\n+import org.apache.helix.NotificationContext;\n+import org.apache.helix.messaging.handling.HelixTaskResult;\n+import org.apache.helix.messaging.handling.MessageHandler;\n+import org.apache.helix.messaging.handling.MessageHandlerFactory;\n+import org.apache.helix.model.Message;\n+import org.apache.pinot.broker.routing.v2.RoutingManager;\n+import org.apache.pinot.common.messages.SegmentRefreshMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NDIxNg==", "bodyText": "Added", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382754216", "createdAt": "2020-02-21T19:05:55Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.broker.broker.helix;\n+\n+import org.apache.helix.NotificationContext;\n+import org.apache.helix.messaging.handling.HelixTaskResult;\n+import org.apache.helix.messaging.handling.MessageHandler;\n+import org.apache.helix.messaging.handling.MessageHandlerFactory;\n+import org.apache.helix.model.Message;\n+import org.apache.pinot.broker.routing.v2.RoutingManager;\n+import org.apache.pinot.common.messages.SegmentRefreshMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTU4NA=="}, "originalCommit": {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTU5NDI2OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerDebug.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowODoxOFrOFtBh8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowODoxOFrOFtBh8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTMxMg==", "bodyText": "I generally like the REST API resources to document in the javadoc each API endpoint and purpose as bullet list. But upto you.", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382755312", "createdAt": "2020-02-21T19:08:18Z", "author": {"login": "siddharthteotia"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerDebug.java", "diffHunk": "@@ -23,77 +23,96 @@\n import io.swagger.annotations.ApiParam;\n import io.swagger.annotations.ApiResponse;\n import io.swagger.annotations.ApiResponses;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.pinot.broker.routing.RoutingTable;\n-import org.apache.pinot.broker.routing.TimeBoundaryService;\n+import org.apache.pinot.broker.routing.v2.RoutingManager;\n+import org.apache.pinot.broker.routing.v2.timeboundary.TimeBoundaryInfo;\n import org.apache.pinot.common.config.TableNameBuilder;\n-import org.apache.pinot.common.metrics.BrokerMeter;\n-import org.apache.pinot.common.metrics.BrokerMetrics;\n-import org.apache.pinot.common.utils.CommonConstants;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.pinot.common.utils.CommonConstants.Helix.TableType;\n+import org.apache.pinot.core.transport.ServerInstance;\n+import org.apache.pinot.pql.parsers.Pql2Compiler;\n \n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3466, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}