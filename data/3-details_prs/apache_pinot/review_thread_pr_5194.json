{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDA5MjQy", "number": 5194, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMDowNjowMFrODsWOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMDoxMTowN1rODsWQMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODI4MTcxOnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMDowNjowMFrOF9L_Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMzo0OToxMVrOF9WRrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwMzkwMw==", "bodyText": "parseDouble would throw NumberFormatException if the the input string isn't a valid number.", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399703903", "createdAt": "2020-03-28T20:06:00Z", "author": {"login": "jackjlli"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -200,14 +201,7 @@ private void createRateLimiter(String tableNameWithType, ExternalView brokerReso\n     LOGGER.info(\"The number of online brokers for table {} is {}\", tableNameWithType, onlineCount);\n \n     // Get the dynamic rate\n-    double overallRate;\n-    if (quotaConfig.isMaxQueriesPerSecondValid()) {\n-      overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());\n-    } else {\n-      LOGGER.error(\"Failed to init qps quota: error when parsing qps quota: {} for table: {}\",\n-          quotaConfig.getMaxQueriesPerSecond(), tableNameWithType);\n-      return;\n-    }\n+    double overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MjQzMQ==", "bodyText": "Already fixed", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399872431", "createdAt": "2020-03-29T23:49:11Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -200,14 +201,7 @@ private void createRateLimiter(String tableNameWithType, ExternalView brokerReso\n     LOGGER.info(\"The number of online brokers for table {} is {}\", tableNameWithType, onlineCount);\n \n     // Get the dynamic rate\n-    double overallRate;\n-    if (quotaConfig.isMaxQueriesPerSecondValid()) {\n-      overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());\n-    } else {\n-      LOGGER.error(\"Failed to init qps quota: error when parsing qps quota: {} for table: {}\",\n-          quotaConfig.getMaxQueriesPerSecond(), tableNameWithType);\n-      return;\n-    }\n+    double overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwMzkwMw=="}, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODI4Mjg0OnYy", "diffSide": "RIGHT", "path": "pinot-broker/src/test/java/org/apache/pinot/broker/broker/HelixBrokerStarterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMDowNzo0NFrOF9L_8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMzo1MzozOVrOF9WTqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDA1MA==", "bodyText": "Why does the builder need to be a public class instead of an inner class?", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399704050", "createdAt": "2020-03-28T20:07:44Z", "author": {"login": "jackjlli"}, "path": "pinot-broker/src/test/java/org/apache/pinot/broker/broker/HelixBrokerStarterTest.java", "diffHunk": "@@ -83,11 +84,11 @@ public void setUp()\n         .addTime(TIME_COLUMN_NAME, TimeUnit.DAYS, FieldSpec.DataType.INT).build();\n     _helixResourceManager.addSchema(schema, true);\n     TableConfig offlineTableConfig =\n-        new TableConfig.Builder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)\n+        new TableConfigBuilder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MjkzOA==", "bodyText": "To keep the config class clean and maintain the builder as an util class. There are multiple ways to get the table config: using a builder; deserialize from json; construct from ZNRecord.", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399872938", "createdAt": "2020-03-29T23:53:39Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/test/java/org/apache/pinot/broker/broker/HelixBrokerStarterTest.java", "diffHunk": "@@ -83,11 +84,11 @@ public void setUp()\n         .addTime(TIME_COLUMN_NAME, TimeUnit.DAYS, FieldSpec.DataType.INT).build();\n     _helixResourceManager.addSchema(schema, true);\n     TableConfig offlineTableConfig =\n-        new TableConfig.Builder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)\n+        new TableConfigBuilder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDA1MA=="}, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODI4NTI4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/util/TableRetentionValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQyMDoxMTowN1rOF9MBJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMzo1NTo0M1rOF9WUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDM1Ng==", "bodyText": "There are multiple ways to convert to TableConfig, like TableConfigUtils and Builder. Can they be unified to one class?", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399704356", "createdAt": "2020-03-28T20:11:07Z", "author": {"login": "jackjlli"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/util/TableRetentionValidator.java", "diffHunk": "@@ -184,7 +185,7 @@ public void run()\n \n   private TableConfig getTableConfig(String tableName)\n       throws Exception {\n-    return TableConfig.fromZnRecord(\n+    return TableConfigUtils.fromZNRecord(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MzE3OQ==", "bodyText": "No because ZNRecord is a Helix specific concept which should not be pulled into the pinot-spi.", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399873179", "createdAt": "2020-03-29T23:55:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/util/TableRetentionValidator.java", "diffHunk": "@@ -184,7 +185,7 @@ public void run()\n \n   private TableConfig getTableConfig(String tableName)\n       throws Exception {\n-    return TableConfig.fromZnRecord(\n+    return TableConfigUtils.fromZNRecord(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDM1Ng=="}, "originalCommit": {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}