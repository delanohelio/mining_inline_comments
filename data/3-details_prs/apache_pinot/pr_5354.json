{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDIzOTc2", "number": 5354, "title": "[TE] Mock event generator for demo purposes", "bodyText": "Pseudo-random distribution-based generator for events similar to mock data source\n\nconfiguration via detector.yml, defaults to on for demo\none-time execution at startup in backend with db-persistence and deduplication\nrandom event name generator (for kishore)", "createdAt": "2020-05-08T20:40:05Z", "url": "https://github.com/apache/pinot/pull/5354", "merged": true, "mergeCommit": {"oid": "29ac1519588222ab6b31479df19c6c59f3d96402"}, "closed": true, "closedAt": "2020-05-12T05:09:48Z", "author": {"login": "apucher"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgbbEsAFqTQwOTY2MjY4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgckQSABqjMzMjU3MDE3OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjYyNjgy", "url": "https://github.com/apache/pinot/pull/5354#pullrequestreview-409662682", "createdAt": "2020-05-12T02:49:49Z", "commit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMjo0OTo0OVrOGT0Lww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMzowNjoyMlrOGT0bvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzMTEwNw==", "bodyText": "nit: Add license header", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423431107", "createdAt": "2020-05-12T02:49:49Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/MockEventsLoaderConfiguration.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.pinot.thirdeye.anomaly;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzMTY5Mg==", "bodyText": "might want to remove the new imports (here and below) in this class!", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423431692", "createdAt": "2020-05-12T02:52:13Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/rootcause/impl/ThirdEyeEventsPipeline.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n package org.apache.pinot.thirdeye.rootcause.impl;\n \n+import org.apache.commons.lang3.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzMzU3NQ==", "bodyText": "Can you include a one-line comment for these fields?", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423433575", "createdAt": "2020-05-12T03:00:05Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/MockEventsLoaderConfiguration.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.pinot.thirdeye.anomaly;\n+\n+\n+import org.apache.pinot.thirdeye.anomaly.events.MockEventsLoader;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class MockEventsLoaderConfiguration {\n+    public static class EventGeneratorConfig {\n+        String type;\n+        String arrivalType = MockEventsLoader.DIST_TYPE_EXPONENTIAL;\n+        double arrivalMean;\n+        String durationType = MockEventsLoader.DIST_TYPE_FIXED;\n+        double durationMean = 86400000;\n+        int seed = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzMzcyNA==", "bodyText": "nit: license", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423433724", "createdAt": "2020-05-12T03:00:40Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/events/MockEventsLoader.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.apache.pinot.thirdeye.anomaly.events;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNDAwOA==", "bodyText": "consider including a javadoc comment about this class", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423434008", "createdAt": "2020-05-12T03:01:47Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/events/MockEventsLoader.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.apache.pinot.thirdeye.anomaly.events;\n+\n+import org.apache.commons.math3.distribution.*;\n+import org.apache.commons.math3.random.Well19937c;\n+import org.apache.pinot.thirdeye.anomaly.MockEventsLoaderConfiguration;\n+import org.apache.pinot.thirdeye.datalayer.bao.EventManager;\n+import org.apache.pinot.thirdeye.datalayer.dto.EventDTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+\n+public class MockEventsLoader implements Runnable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTE5OA==", "bodyText": "This is really cool! Can you include a comment about the technique in the code?", "url": "https://github.com/apache/pinot/pull/5354#discussion_r423435198", "createdAt": "2020-05-12T03:06:22Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/events/MockEventsLoader.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.apache.pinot.thirdeye.anomaly.events;\n+\n+import org.apache.commons.math3.distribution.*;\n+import org.apache.commons.math3.random.Well19937c;\n+import org.apache.pinot.thirdeye.anomaly.MockEventsLoaderConfiguration;\n+import org.apache.pinot.thirdeye.datalayer.bao.EventManager;\n+import org.apache.pinot.thirdeye.datalayer.dto.EventDTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+\n+public class MockEventsLoader implements Runnable {\n+    private static final Logger LOG = LoggerFactory.getLogger(MockEventsLoader.class);\n+\n+    private static Comparator<EventDTO> MOCK_EVENT_COMPARATOR = Comparator\n+            .comparingLong(EventDTO::getStartTime)\n+            .thenComparingLong(EventDTO::getEndTime)\n+            .thenComparing(EventDTO::getEventType)\n+            .thenComparing(EventDTO::getName);\n+\n+    private static final long START_TIMESTAMP = 1546300800000L; // January 1, 2019 12:00:00 AM GMT\n+    private static final long END_OFFSET = 31536000000L; // 365d in ms\n+\n+    public static final String DIST_TYPE_GAUSSIAN = \"gaussian\";\n+    public static final String DIST_TYPE_EXPONENTIAL = \"exponential\";\n+    public static final String DIST_TYPE_LOGNORMAL = \"lognormal\";\n+    public static final String DIST_TYPE_FIXED = \"fixed\";\n+\n+    MockEventsLoaderConfiguration configuration;\n+    EventManager eventDAO;\n+\n+    public MockEventsLoader(MockEventsLoaderConfiguration configuration, EventManager eventDAO) {\n+        this.configuration = configuration;\n+        this.eventDAO = eventDAO;\n+    }\n+\n+    @Override\n+    public void run() {\n+        final long cutoff = System.currentTimeMillis() + END_OFFSET;\n+\n+        for (MockEventsLoaderConfiguration.EventGeneratorConfig conf : this.configuration.getGenerators()) {\n+            LOG.info(\"Generating '{}' events from {} to {}\", conf.getType(), START_TIMESTAMP, cutoff);\n+\n+            List<EventDTO> generated = generateEvents(conf, cutoff);\n+            List<EventDTO> existing = this.eventDAO.findEventsBetweenTimeRange(conf.getType(), START_TIMESTAMP, cutoff);\n+\n+            Set<EventDTO> deduplicated = dedup(generated, existing);\n+            LOG.info(\"Generated '{}' events: {} generated, {} pre-existing, {} saved after deduplication\",\n+                    conf.getType(), generated.size(), existing.size(), deduplicated.size());\n+\n+            deduplicated.forEach(this.eventDAO::save);\n+        }\n+    }\n+\n+    List<EventDTO> generateEvents(MockEventsLoaderConfiguration.EventGeneratorConfig conf, long cutoff) {\n+        List<EventDTO> generated = new ArrayList<>();\n+\n+        AbstractRealDistribution arrivalDist = makeDist(conf.getArrivalType(), conf.getArrivalMean(), conf.getSeed());\n+        AbstractRealDistribution durationDist = makeDist(conf.getDurationType(), conf.getDurationMean(), conf.getSeed());\n+\n+        EventGenerator generator = new EventGenerator(conf.getType(), arrivalDist, durationDist);\n+\n+        EventDTO event;\n+        while ((event = generator.next()).getStartTime() < cutoff) {\n+            generated.add(event);\n+        }\n+\n+        return generated;\n+    }\n+\n+    Set<EventDTO> dedup(Collection<EventDTO> generated, Collection<EventDTO> existing) {\n+        Set<EventDTO> sorted = new TreeSet<>(MOCK_EVENT_COMPARATOR);\n+        sorted.addAll(generated);\n+        existing.forEach(sorted::remove);\n+        return sorted;\n+    }\n+\n+    AbstractRealDistribution makeDist(String type, double param, int seed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbf0995e6dc89d874327157e8ff62abbc0131bd7", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/dbf0995e6dc89d874327157e8ff62abbc0131bd7", "committedDate": "2020-05-12T03:22:42Z", "message": "Mock event generator for demo purposes\n- pseudo-random distribution-based generator similar to mock data source\n- configuration via detector.yml\n- one-time execution at statup in backend with db-persistence and deduplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a958064281d4c0152924b9e869d30415295d75", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/16a958064281d4c0152924b9e869d30415295d75", "committedDate": "2020-05-12T04:28:17Z", "message": "review fixes and name generator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ee05d198e248b1c0138aa8e9d7726ec55ef66b5", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/7ee05d198e248b1c0138aa8e9d7726ec55ef66b5", "committedDate": "2020-05-08T20:32:26Z", "message": "Mock event generator for demo purposes\n- pseudo-random distribution-based generator similar to mock data source\n- configuration via detector.yml\n- one-time execution at statup in backend with db-persistence and deduplication"}, "afterCommit": {"oid": "16a958064281d4c0152924b9e869d30415295d75", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/16a958064281d4c0152924b9e869d30415295d75", "committedDate": "2020-05-12T04:28:17Z", "message": "review fixes and name generator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1014, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}