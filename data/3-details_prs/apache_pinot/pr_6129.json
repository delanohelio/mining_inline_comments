{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODY5NTIy", "number": 6129, "title": "Framework for adding compatibility tests", "bodyText": "This PR includes a basic framework for us to build compatibility tests across releases\nThe actual tests and a lot of code is yet to be written.\nThe framework is set up so that we can run operations during a cluster upgrade, and\ndetect incompatibility across releases. The value of the tests will be in the operations\nwe choose to test during upgrades\nConfiguration is done via YAML, and some sample yaml files and skinny classes have been\nprovided.\nIssue 4854\nDescription\nAdd a description of your PR here.\nA good description should include pointers to an issue or design document, etc.\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\n\n Yes (Please label as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR fix a zero-downtime upgrade introduced earlier?\n\n Yes (Please label this as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR otherwise need attention when creating release notes? Things to consider:\n\nNew configuration options\nDeprecation of configurations\nSignature changes to public methods/interfaces\nNew plugins added or old plugins removed\n\n\n Yes (Please label this PR as release-notes and complete the section on Release Notes)\n\nRelease Notes\nIf you have tagged this as either backward-incompat or release-notes,\nyou MUST add text here that you would like to see appear in release notes of the\nnext release.\nIf you have a series of commits adding or enabling a feature, then\nadd this section only in final commit that marks the feature completed.\nRefer to earlier release notes to see examples of text\nDocumentation\nIf you have introduced a new feature or configuration, please add it to the documentation as well.\nSee https://docs.pinot.apache.org/developers/developers-and-contributors/update-document", "createdAt": "2020-10-09T23:52:42Z", "url": "https://github.com/apache/pinot/pull/6129", "merged": true, "mergeCommit": {"oid": "e15fa8045347b2a73ffc5c1c05b0c0f095bca4b3"}, "closed": true, "closedAt": "2020-10-19T23:04:08Z", "author": {"login": "mcvsubbu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ_GdhAH2gAyNTAwODY5NTIyOmEyNTFlZTdhYTkxNmI3NGExN2E3ZDJhNDk4NTliNDc5NGVhYmZjMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUKWnAAFqTUxMjE0MTI4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/a251ee7aa916b74a17a7d2a49859b4794eabfc14", "committedDate": "2020-10-09T23:51:06Z", "message": "Issue #4854 Framework for adding compatibility tests\n\nThis PR includes a basic framework for us to build compatibility tests across releases\nThe actual tests and a lot of code is yet to be written.\n\nThe framekwork is set up so that we can run operations during a cluster upgrade, and\ndetect incompatibility across releases. The value of the tests will be in the operations\nwe choose to test during upgrades\n\nConfiguration is done via YAML, and some sample yaml files and skinny classes have been\nprovided."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODI4OTQ4", "url": "https://github.com/apache/pinot/pull/6129#pullrequestreview-506828948", "createdAt": "2020-10-12T18:19:07Z", "commit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoxOTowN1rOHgI2Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoxOTowN1rOHgI2Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2MTQ2Ng==", "bodyText": "I'm not sure why 20 seconds sleep was chosen in the first place, but does replacing it with running compat_tester mean the tests are going to take 20 seconds?\nAlso maybe it reads better if $COMPAT_TESTER is replaced with a function call, something like runCompatiblityTests, which is more consistent with startService, startService, ... here.", "url": "https://github.com/apache/pinot/pull/6129#discussion_r503461466", "createdAt": "2020-10-12T18:19:07Z", "author": {"login": "sajjad-moradi"}, "path": "compatibility-verifier/compCheck.sh", "diffHunk": "@@ -157,20 +181,27 @@ fi\n \n # Setup initial cluster with olderCommit and do rolling upgrade\n startServices \"$oldTargetDir\"\n-sleep 20\n+#$COMPAT_TESTER pre-controller-upgrade.yaml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODI5NzM2", "url": "https://github.com/apache/pinot/pull/6129#pullrequestreview-506829736", "createdAt": "2020-10-12T18:20:31Z", "commit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoyMDozMVrOHgI40Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoyMDozMVrOHgI40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2MjA5Nw==", "bodyText": "If you decide to have(or remove) previous sleeps, please do the same for this one as well?", "url": "https://github.com/apache/pinot/pull/6129#discussion_r503462097", "createdAt": "2020-10-12T18:20:31Z", "author": {"login": "sajjad-moradi"}, "path": "compatibility-verifier/compCheck.sh", "diffHunk": "@@ -157,20 +181,27 @@ fi\n \n # Setup initial cluster with olderCommit and do rolling upgrade\n startServices \"$oldTargetDir\"\n-sleep 20\n+#$COMPAT_TESTER pre-controller-upgrade.yaml\n stopService controller \"$oldTargetDir\"\n startService controller \"$newTargetDir\"\n+#$COMPAT_TESTER pre-broker-upgrade.yaml\n stopService broker \"$oldTargetDir\"\n startService broker \"$newTargetDir\"\n+#$COMPAT_TESTER pre-server-upgrade.yaml\n stopService server \"$oldTargetDir\"\n startService server \"$newTargetDir\"\n-sleep 20\n+#$COMPAT_TESTER post-server-upgrade.yaml\n+\n+# Upgrade complated, now do a rollback\n stopService controller \"$newTargetDir\"\n startService controller \"$oldTargetDir\"\n+#$COMPAT_TESTER post-server-rollback.yaml\n stopService broker \"$newTargetDir\"\n startService broker \"$oldTargetDir\"\n+#$COMPAT_TESTER post-broker-rollback.yaml\n stopService server \"$newTargetDir\"\n startService server \"$oldTargetDir\"\n+#$COMPAT_TESTER post-controller-rollback.yaml\n sleep 20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODgwNTEz", "url": "https://github.com/apache/pinot/pull/6129#pullrequestreview-507880513", "createdAt": "2020-10-13T22:45:27Z", "commit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjo0NToyN1rOHg8FZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjo0NToyN1rOHg8FZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMDkwMA==", "bodyText": "We may not need to print it out in the console?", "url": "https://github.com/apache/pinot/pull/6129#discussion_r504300900", "createdAt": "2020-10-13T22:45:27Z", "author": {"login": "jackjlli"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/compat/SegmentOp.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.compat;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+\n+/**\n+ * Segment Operations:\n+ * UPLOAD:\n+ *   Generates a segment for a table from the data in the input file.\n+ *   Uploads the segment, and verifies that the segments appear in externalview\n+ * DELETE:\n+ *   Deletes the segment from the table.\n+ *\n+ * TODO:\n+ *  - Maybe segment names can be auto-generated if the name is \"AUTO\".\n+ *  - We can add segmentGeneration config file as an option also\n+ *  - We can consider supporting different readers, starting with csv. Will help in easily scanning the data.\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SegmentOp extends BaseOp {\n+  public enum Op {\n+    UPLOAD,\n+    DELETE\n+  }\n+\n+  private Op _op;\n+  private String _inputDataFileName;\n+  private String _segmentName;\n+  private String _tableConfigFileName;\n+\n+  public SegmentOp() {\n+    super(OpType.SEGMENT_OP);\n+  }\n+\n+  public Op getOp() {\n+    return _op;\n+  }\n+\n+  public void setOp(Op op) {\n+    _op = op;\n+  }\n+\n+  public String getInputDataFileName() {\n+    return _inputDataFileName;\n+  }\n+\n+  public void setInputDataFileName(String inputDataFileName) {\n+    _inputDataFileName = inputDataFileName;\n+  }\n+\n+  public String getSegmentName() {\n+    return _segmentName;\n+  }\n+\n+  public void setSegmentName(String segmentName) {\n+    _segmentName = segmentName;\n+  }\n+\n+  public String getTableConfigFileName() {\n+    return _tableConfigFileName;\n+  }\n+\n+  public void setTableConfigFileName(String tableConfigFileName) {\n+    _tableConfigFileName = tableConfigFileName;\n+  }\n+\n+  @Override\n+  boolean runOp() {\n+    switch(_op) {\n+      case UPLOAD:\n+        System.out.println(\"Generating segment \" + _segmentName + \" from \" + _inputDataFileName + \" and uploading to \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ab67406e45f25a3a869c16ffce08bb40028a67", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/72ab67406e45f25a3a869c16ffce08bb40028a67", "committedDate": "2020-10-19T20:17:45Z", "message": "Moved classes to pinot-integration-tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTQxMjg2", "url": "https://github.com/apache/pinot/pull/6129#pullrequestreview-512141286", "createdAt": "2020-10-19T20:39:29Z", "commit": {"oid": "72ab67406e45f25a3a869c16ffce08bb40028a67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1581, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}