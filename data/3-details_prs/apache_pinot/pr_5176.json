{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzkzMzE2", "number": 5176, "title": "Make text index query cache a configurable option", "bodyText": "During design of text index feature, we had done some heap overhead experiments. As part of that we had determined that while Lucene's internal query cache helps with performance significantly for repeatable queries, it adds heap overhead. Therefore, it was disabled during index loading.\nIt is worthwhile to make this configurable on per-index basis for users to enable it. Of course, they need to know the downside of more heap overhead (which could potentially negate the perf improvements due to more GC).\nAs part of ongoing internal user acceptance testing, we learned that most of the queries are repeatable. The UI will more or less keep the text search filter constant and tweak the other filters. For such cases, it is good to see the performance improvements by enabling the query cache and if the heap overhead is not significantly high, user might want to keep it enabled.\nNote: By default it is still disabled. So nothing really changed in the existing behavior.", "createdAt": "2020-03-24T05:57:57Z", "url": "https://github.com/apache/pinot/pull/5176", "merged": true, "mergeCommit": {"oid": "0d5b5e28afddf24a0b4deb72207c5418d3712a0c"}, "closed": true, "closedAt": "2020-04-06T20:00:46Z", "author": {"login": "siddharthteotia"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ2v8tgFqTM4MDU2MDQ4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVCSKAAH2gAyMzkyNzkzMzE2OjFlNWYyNzYwMjhkZjRlMmZkMWExNzRiNDVmMmZjMDU2Yjc3ZTZhMWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTYwNDg5", "url": "https://github.com/apache/pinot/pull/5176#pullrequestreview-380560489", "createdAt": "2020-03-24T17:53:38Z", "commit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzo1MzozOVrOF68Y7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzo1NTo0OVrOF68egQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1MTE0OA==", "bodyText": "I'll suggest using\n!textIndexProperties.get(FieldConfig.LUCENE_TEXT_INDEX_ENABLE_QUERY_CACHE).equalsIgnoreCase(\"true\") instead of false, in case someone mis-spells the value.", "url": "https://github.com/apache/pinot/pull/5176#discussion_r397351148", "createdAt": "2020-03-24T17:53:39Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java", "diffHunk": "@@ -59,17 +62,22 @@\n    * similar to how it is done for other types of indexes.\n    * @param column column name\n    * @param segmentIndexDir segment index directory\n+   * @param textIndexProperties text index properties\n    */\n-  public LuceneTextIndexReader(String column, File segmentIndexDir) {\n+  public LuceneTextIndexReader(String column, File segmentIndexDir, @Nullable Map<String, String> textIndexProperties) {\n     _column = column;\n     try {\n       File indexFile = getTextIndexFile(segmentIndexDir);\n       _indexDirectory = FSDirectory.open(indexFile.toPath());\n       _indexReader = DirectoryReader.open(_indexDirectory);\n       _indexSearcher = new IndexSearcher(_indexReader);\n-      // Disable Lucene query result cache. While it helps a lot with performance for\n-      // repeated queries, on the downside it cause heap issues.\n-      _indexSearcher.setQueryCache(null);\n+      if (textIndexProperties == null ||\n+          textIndexProperties.get(FieldConfig.LUCENE_TEXT_INDEX_ENABLE_QUERY_CACHE) == null ||\n+          textIndexProperties.get(FieldConfig.LUCENE_TEXT_INDEX_ENABLE_QUERY_CACHE).equalsIgnoreCase(\"false\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1MTgzOQ==", "bodyText": "Put a comment above this line on how this cached will be used.", "url": "https://github.com/apache/pinot/pull/5176#discussion_r397351839", "createdAt": "2020-03-24T17:54:39Z", "author": {"login": "jackjlli"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/FieldConfig.java", "diffHunk": "@@ -32,9 +32,12 @@\n \n   public static String BLOOM_FILTER_COLUMN_KEY = \"field.config.bloom.filter\";\n   public static String ON_HEAP_DICTIONARY_COLUMN_KEY = \"field.config.onheap.dictionary\";\n-  public static String TEXT_INDEX_REALTIME_READER_REFRESH_KEY = \"field.config.realtime.reader.refresh\";\n   public static String VAR_LENGTH_DICTIONARY_COLUMN_KEY = \"field.config.var.length.dictionary\";\n \n+  // Lucene index properties\n+  public static String LUCENE_TEXT_INDEX_REALTIME_READER_REFRESH_KEY = \"field.config.text.index.realtime.reader.refresh\";\n+  public static String LUCENE_TEXT_INDEX_ENABLE_QUERY_CACHE = \"field.config.text.index.enable.query.cache\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1MjU3Nw==", "bodyText": "putIfAbsent", "url": "https://github.com/apache/pinot/pull/5176#discussion_r397352577", "createdAt": "2020-03-24T17:55:49Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/TestTextSearchQueries.java", "diffHunk": "@@ -160,7 +162,11 @@ private void createSegment()\n   private void loadSegment()\n       throws Exception {\n     IndexLoadingConfig indexLoadingConfig = new IndexLoadingConfig();\n-    indexLoadingConfig.setTextIndexColumns(new HashSet<>(textIndexColumns));\n+    Map<String, Map<String, String>> textIndexColumnsWithProperties = new HashMap<>();\n+    for (String column : textIndexColumns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTk3ODAz", "url": "https://github.com/apache/pinot/pull/5176#pullrequestreview-380597803", "createdAt": "2020-03-24T18:41:55Z", "commit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODo0MTo1NlrOF6-NhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODo0NzowMVrOF6-ZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4MDk5Nw==", "bodyText": "Not related to this but can we remove the field.config. prefix from all these keys?", "url": "https://github.com/apache/pinot/pull/5176#discussion_r397380997", "createdAt": "2020-03-24T18:41:56Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/FieldConfig.java", "diffHunk": "@@ -32,9 +32,12 @@\n \n   public static String BLOOM_FILTER_COLUMN_KEY = \"field.config.bloom.filter\";\n   public static String ON_HEAP_DICTIONARY_COLUMN_KEY = \"field.config.onheap.dictionary\";\n-  public static String TEXT_INDEX_REALTIME_READER_REFRESH_KEY = \"field.config.realtime.reader.refresh\";\n   public static String VAR_LENGTH_DICTIONARY_COLUMN_KEY = \"field.config.var.length.dictionary\";\n \n+  // Lucene index properties\n+  public static String LUCENE_TEXT_INDEX_REALTIME_READER_REFRESH_KEY = \"field.config.text.index.realtime.reader.refresh\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4Mzk0OA==", "bodyText": "Don't put the whole map here. The map contains all the properties, not for text column only. I think you can keep this config unchanged, but check the field config when loading the text index.", "url": "https://github.com/apache/pinot/pull/5176#discussion_r397383948", "createdAt": "2020-03-24T18:47:01Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/IndexLoadingConfig.java", "diffHunk": "@@ -45,7 +45,7 @@\n   private ReadMode _readMode = ReadMode.DEFAULT_MODE;\n   private List<String> _sortedColumns = Collections.emptyList();\n   private Set<String> _invertedIndexColumns = new HashSet<>();\n-  private Set<String> _textIndexColumns = new HashSet<>();\n+  private Map<String, Map<String, String>> _textIndexColumns = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec311dc007555e65d3dddd46c35a3699b3614605", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/ec311dc007555e65d3dddd46c35a3699b3614605", "committedDate": "2020-04-03T17:36:14Z", "message": "Make text index query cache a configurable option"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6dcae80f3491216fefb94715b7119a5b45f70601", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/6dcae80f3491216fefb94715b7119a5b45f70601", "committedDate": "2020-03-24T05:49:07Z", "message": "Make lucene text index query cache a configurable option"}, "afterCommit": {"oid": "ec311dc007555e65d3dddd46c35a3699b3614605", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/ec311dc007555e65d3dddd46c35a3699b3614605", "committedDate": "2020-04-03T17:36:14Z", "message": "Make text index query cache a configurable option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a8d01e44e3beef62d7a30164268bd258b166c4", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/96a8d01e44e3beef62d7a30164268bd258b166c4", "committedDate": "2020-04-03T18:10:36Z", "message": "Fix doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjU2OTU4", "url": "https://github.com/apache/pinot/pull/5176#pullrequestreview-387656958", "createdAt": "2020-04-04T02:11:29Z", "commit": {"oid": "96a8d01e44e3beef62d7a30164268bd258b166c4"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMjoxMToyOVrOGAuMnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMjoxOTozMVrOGAuP4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQxMDA3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (textIndexProperties == null || textIndexProperties.get(FieldConfig.TEXT_INDEX_ENABLE_QUERY_CACHE) == null\n          \n          \n            \n                  if (textIndexProperties == null || !Boolean.parseBoolean(textIndexProperties.get(FieldConfig.TEXT_INDEX_ENABLE_QUERY_CACHE))) {", "url": "https://github.com/apache/pinot/pull/5176#discussion_r403410079", "createdAt": "2020-04-04T02:11:29Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java", "diffHunk": "@@ -67,16 +69,20 @@\n    * @param indexDir segment index directory\n    * @param numDocs number of documents in the segment\n    */\n-  public LuceneTextIndexReader(String column, File indexDir, int numDocs) {\n+  public LuceneTextIndexReader(String column, File indexDir, int numDocs,\n+      @Nullable Map<String, String> textIndexProperties) {\n     _column = column;\n     try {\n       File indexFile = getTextIndexFile(indexDir);\n       _indexDirectory = FSDirectory.open(indexFile.toPath());\n       _indexReader = DirectoryReader.open(_indexDirectory);\n       _indexSearcher = new IndexSearcher(_indexReader);\n-      // Disable Lucene query result cache. While it helps a lot with performance for\n-      // repeated queries, on the downside it cause heap issues.\n-      _indexSearcher.setQueryCache(null);\n+      if (textIndexProperties == null || textIndexProperties.get(FieldConfig.TEXT_INDEX_ENABLE_QUERY_CACHE) == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a8d01e44e3beef62d7a30164268bd258b166c4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQxMDkxMw==", "bodyText": "Suggest renaming it to _columnProperties. Also don't set it inside the extractTextIndexColumnsFromTableConfig(), set it in extractFromTableConfig() so that other index type can also access it.", "url": "https://github.com/apache/pinot/pull/5176#discussion_r403410913", "createdAt": "2020-04-04T02:19:31Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/IndexLoadingConfig.java", "diffHunk": "@@ -60,6 +60,9 @@\n   private boolean _isDirectRealtimeOffheapAllocation;\n   private boolean _enableSplitCommitEndWithMetadata;\n \n+  // constructed from FieldConfig\n+  private Map<String, Map<String, String>> _columnsWithProperties;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a8d01e44e3beef62d7a30164268bd258b166c4"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a5c8a649321494ca3b4193d07aa95ac44585d56", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/0a5c8a649321494ca3b4193d07aa95ac44585d56", "committedDate": "2020-04-06T17:36:07Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e5f276028df4e2fd1a174b45f2fc056b77e6a1f", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/1e5f276028df4e2fd1a174b45f2fc056b77e6a1f", "committedDate": "2020-04-06T17:38:08Z", "message": "format"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1095, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}