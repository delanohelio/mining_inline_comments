{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5Nzk5ODc3", "number": 5782, "title": "Enhancing the segment replacement api", "bodyText": "Chekcing ONLINE state from the EV when updating\nthe segment lineage.\nTrigger the routing table rebuild to brokers when\nupdating the segment lineage.", "createdAt": "2020-07-31T05:37:33Z", "url": "https://github.com/apache/pinot/pull/5782", "merged": true, "mergeCommit": {"oid": "41539581d72d9aafe903b0cdb492c14738ee5605"}, "closed": true, "closedAt": "2020-08-06T02:27:45Z", "author": {"login": "snleee"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6NZUxgH2gAyNDU5Nzk5ODc3Ojc3N2E3YTIyNTM3ZGU0NmFmMWE4Y2ExNjg1YWFjYmRiYjA4ODcyMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8D9rEgBqjM2MjY4MDgwODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/777a7a22537de46af1a8ca1685aacbdbb0887232", "committedDate": "2020-07-31T05:30:07Z", "message": "Enhancing the segment replacement api\n\n1. Chekcing ONLINE state from the EV when updating\n   the segment lineage.\n2. Trigger the routing table rebuild to brokers when\n   updating the segment lineage."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTQ3MTMz", "url": "https://github.com/apache/pinot/pull/5782#pullrequestreview-459547133", "createdAt": "2020-08-01T03:07:51Z", "commit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNzo1MlrOG6bCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzoyMToxMVrOG6bI5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMzUxOA==", "bodyText": "Directly throw exception instead of returning null here to avoid NPE on the caller side:\nPreconditions.checkState(externalView != null, ...)", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463913518", "createdAt": "2020-08-01T03:07:52Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2366,6 +2404,23 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n         tableNameWithType, segmentLineageEntryId);\n   }\n \n+  private Set<String> getOnlineSegmentsFromExternalView(String tableNameWithType) {\n+    ExternalView externalView = getTableExternalView(tableNameWithType);\n+    if (externalView != null) {\n+      Set<String> partitionSet = externalView.getPartitionSet();\n+      Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n+      for (String partition : partitionSet) {\n+        Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n+        if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n+            .containsValue(SegmentStateModel.CONSUMING)) {\n+          onlineSegments.add(partition);\n+        }\n+      }\n+      return onlineSegments;\n+    } else {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNDQxOA==", "bodyText": "Use externalView.getMapFields() to avoid extra map lookups.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Set<String> partitionSet = externalView.getPartitionSet();\n          \n          \n            \n                  Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n          \n          \n            \n                  for (String partition : partitionSet) {\n          \n          \n            \n                    Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n          \n          \n            \n                    if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n          \n          \n            \n                        .containsValue(SegmentStateModel.CONSUMING)) {\n          \n          \n            \n                      onlineSegments.add(partition);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  return onlineSegments;\n          \n          \n            \n                  Map<String, Map<String, String>> segmentAssignment = externalView.getMapFields();\n          \n          \n            \n                  Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(segmentAssignment.size()));\n          \n          \n            \n                  for (Map.Entry<String, Map<String, String>> entry : segmentAssignment.entrySet()) {\n          \n          \n            \n                    Map<String, String> instanceStateMap = entry.getValue();\n          \n          \n            \n                    if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n          \n          \n            \n                        .containsValue(SegmentStateModel.CONSUMING)) {\n          \n          \n            \n                      onlineSegments.add(entry.getKey());\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  return onlineSegments;", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463914418", "createdAt": "2020-08-01T03:13:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2366,6 +2404,23 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n         tableNameWithType, segmentLineageEntryId);\n   }\n \n+  private Set<String> getOnlineSegmentsFromExternalView(String tableNameWithType) {\n+    ExternalView externalView = getTableExternalView(tableNameWithType);\n+    if (externalView != null) {\n+      Set<String> partitionSet = externalView.getPartitionSet();\n+      Set<String> onlineSegments = new HashSet<>(HashUtil.getHashMapCapacity(partitionSet.size()));\n+      for (String partition : partitionSet) {\n+        Map<String, String> instanceStateMap = externalView.getStateMap(partition);\n+        if (instanceStateMap.containsValue(SegmentStateModel.ONLINE) || instanceStateMap\n+            .containsValue(SegmentStateModel.CONSUMING)) {\n+          onlineSegments.add(partition);\n+        }\n+      }\n+      return onlineSegments;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTA4OA==", "bodyText": "We should not throw exception here. It takes some time for segment to become online in external view, so we might want to block for some time (put a proper timeout)", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463915088", "createdAt": "2020-08-01T03:19:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -2344,14 +2361,35 @@ public void endReplaceSegments(String tableNameWithType, String segmentLineageEn\n           return true;\n         }\n \n+        // Check that all the segments from 'segmentsTo' exist in the table\n+        Set<String> segmentsForTable = new HashSet<>(getSegmentsFor(tableNameWithType));\n+        Preconditions.checkArgument(segmentsForTable.containsAll(lineageEntry.getSegmentsTo()), String.format(\n+            \"Not all segments from 'segmentsTo' are available in the table. (tableName = '%s', segmentsTo = '%s', \"\n+                + \"segmentsFromTable = '%s')\", tableNameWithType, lineageEntry.getSegmentsTo(), segmentsForTable));\n+\n+        // Check that all the segments from 'segmentsTo' became ONLINE in the external view\n+        Set<String> onlineSegmentsFromEV = getOnlineSegmentsFromExternalView(tableNameWithType);\n+        Preconditions.checkArgument(onlineSegmentsFromEV.containsAll(lineageEntry.getSegmentsTo()), String.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxNTIzOQ==", "bodyText": "The API should handle this wait instead of the client. User doesn't need to understand that they need to wait for external view to change before ending the replacement", "url": "https://github.com/apache/pinot/pull/5782#discussion_r463915239", "createdAt": "2020-08-01T03:21:11Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -639,6 +643,29 @@ public void testBatchUpload()\n     Assert.assertEquals(segmentLineage.getLineageEntry(lineageEntryId2).getState(), LineageEntryState.COMPLETED);\n   }\n \n+  private void waitForEVUpdateForSegments(String tableNameWithType, Set<String> segments)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777a7a22537de46af1a8ca1685aacbdbb0887232"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cadd27a2ec354d3de260614d95ffa9afa6ae465", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/4cadd27a2ec354d3de260614d95ffa9afa6ae465", "committedDate": "2020-08-05T08:54:32Z", "message": "Addressing comments"}, "afterCommit": {"oid": "00293b80f3df7b09afc27fd38ee85be5ea3a3089", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/00293b80f3df7b09afc27fd38ee85be5ea3a3089", "committedDate": "2020-08-05T08:56:58Z", "message": "Addressing comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00293b80f3df7b09afc27fd38ee85be5ea3a3089", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/00293b80f3df7b09afc27fd38ee85be5ea3a3089", "committedDate": "2020-08-05T08:56:58Z", "message": "Addressing comments"}, "afterCommit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/6dc71b28c1f0230b0879df3b2559c242febf56b5", "committedDate": "2020-08-05T08:58:18Z", "message": "Addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDkyODU1", "url": "https://github.com/apache/pinot/pull/5782#pullrequestreview-462092855", "createdAt": "2020-08-05T23:36:28Z", "commit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozNjoyOFrOG8eJlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozNjoyOFrOG8eJlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MTcxOQ==", "bodyText": "(nit) unused?", "url": "https://github.com/apache/pinot/pull/5782#discussion_r466061719", "createdAt": "2020-08-05T23:36:28Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/test/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManagerTest.java", "diffHunk": "@@ -24,6 +24,7 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9a6bc4f784028c58e81f7ef0b1df2b4d4c3d81b", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/b9a6bc4f784028c58e81f7ef0b1df2b4d4c3d81b", "committedDate": "2020-08-05T23:38:22Z", "message": "Addressing comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6dc71b28c1f0230b0879df3b2559c242febf56b5", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/6dc71b28c1f0230b0879df3b2559c242febf56b5", "committedDate": "2020-08-05T08:58:18Z", "message": "Addressing comments"}, "afterCommit": {"oid": "b9a6bc4f784028c58e81f7ef0b1df2b4d4c3d81b", "author": {"user": {"login": "snleee", "name": "Seunghyun Lee"}}, "url": "https://github.com/apache/pinot/commit/b9a6bc4f784028c58e81f7ef0b1df2b4d4c3d81b", "committedDate": "2020-08-05T23:38:22Z", "message": "Addressing comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 515, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}