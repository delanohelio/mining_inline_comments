{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Nzg4MjY2", "number": 5758, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjo1NjozNlrOES5x2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMDozM1rOES-DVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjU2NDczOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjo1NjozNlrOG4V2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1MDo0NlrOG4gZnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMTMzNA==", "bodyText": "Why not rename to sslConfigs?", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461731334", "createdAt": "2020-07-28T16:56:36Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwNDI4NA==", "bodyText": "@elonazoulay This is an outdated copy of the code. Can you look at this\nhttps://github.com/apache/incubator-pinot/pull/5758/files", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461904284", "createdAt": "2020-07-28T21:50:46Z", "author": {"login": "pradeepgv42"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMTMzNA=="}, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjU2OTQ2OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjo1Nzo0NlrOG4V45Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1Mjo0N1rOG4gfhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjA2OQ==", "bodyText": "Can you use a logger to output these?\nIf this just for debugging you can just do log.debug()", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461732069", "createdAt": "2020-07-28T16:57:46Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {\n+        String value = configs.get(key);\n+        key = key.substring(\"schema.registry.\".length());\n+        if (key.contains(\"password\")) {\n+          sslConfigs.put(key, new Password(value));\n+        } else {\n+          sslConfigs.put(key, value);\n+        }\n+      }\n+    }\n+\n+    System.out.println(configs.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwNTc5OA==", "bodyText": "@elonazoulay This is an outdated copy of the code. Can you look at this\nhttps://github.com/apache/incubator-pinot/pull/5758/files", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461905798", "createdAt": "2020-07-28T21:52:47Z", "author": {"login": "pradeepgv42"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {\n+        String value = configs.get(key);\n+        key = key.substring(\"schema.registry.\".length());\n+        if (key.contains(\"password\")) {\n+          sslConfigs.put(key, new Password(value));\n+        } else {\n+          sslConfigs.put(key, value);\n+        }\n+      }\n+    }\n+\n+    System.out.println(configs.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjA2OQ=="}, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzI2NDg3OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMDozM1rOG4cmDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1Nzo1NlrOG4gwEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MTkzMw==", "bodyText": "Can you use the Configuration library, instead of manually extracting the substring?", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461841933", "createdAt": "2020-07-28T20:00:33Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMDAzMw==", "bodyText": "Sorry not very familiar with this, do you have an example or give a bit more info?", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461910033", "createdAt": "2020-07-28T21:57:56Z", "author": {"login": "pradeepgv42"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MTkzMw=="}, "originalCommit": {"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4208, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}