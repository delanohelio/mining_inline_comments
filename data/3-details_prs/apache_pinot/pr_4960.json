{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDA0Mzkw", "number": 4960, "title": "[TE] Use upper and lower bounds as predicted for threshold algorithm", "bodyText": "Issue: The baseline/predicted value for Threshold Algorithms are currently set to be the actual value of the metric (likely a hack). This is quite misleading as the emails show anomalies with 0% change.\nFix: This PR addresses the issue by setting the predicted value to be the upper/lower bound whenever there is an anomaly.\n\nWhen the value cross the upper threshold, predicted/baseline  = upper threshold.\nWhen the value cross the lower threshold, predicted/baseline  = lower threshold.", "createdAt": "2020-01-06T06:03:24Z", "url": "https://github.com/apache/pinot/pull/4960", "merged": true, "mergeCommit": {"oid": "9410dd16f3f0f8fbd4d56529bc8d848ccb59631b"}, "closed": true, "closedAt": "2020-01-27T19:16:28Z", "author": {"login": "akshayrai"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3lwM5AH2gAyMzU5NDA0MzkwOjljMzcxYjRiMmFhM2FiN2MyY2ZlNGYwYzdjMTMxY2E0NjdiMmRjY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-hfhiAFqTM0ODg5OTIwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c371b4b2aa3ab7c2cfe4f0c7c131ca467b2dcce", "author": {"user": {"login": "akshayrai", "name": "Akshay Rai"}}, "url": "https://github.com/apache/pinot/commit/9c371b4b2aa3ab7c2cfe4f0c7c131ca467b2dcce", "committedDate": "2020-01-06T05:59:54Z", "message": "[TE] Use upper and lower bounds as predicted for threshold algorithm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4ODgyMzU5", "url": "https://github.com/apache/pinot/pull/4960#pullrequestreview-338882359", "createdAt": "2020-01-06T20:41:06Z", "commit": {"oid": "9c371b4b2aa3ab7c2cfe4f0c7c131ca467b2dcce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMDo0MTowNlrOFaopNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMDo0MTowNlrOFaopNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3MzIwNw==", "bodyText": "Why we want to change the baseline value?\nIf it is threshold algorithm we should not show upper/lower bounds.\nPlease take a look at this doc: https://docs.google.com/document/d/12bE6e_fIbk3pp0oPCrOHOPFid4NEMguZ-dF3IVjF3xQ/edit", "url": "https://github.com/apache/pinot/pull/4960#discussion_r363473207", "createdAt": "2020-01-06T20:41:06Z", "author": {"login": "xiaohui-sun"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/components/ThresholdRuleDetector.java", "diffHunk": "@@ -101,15 +100,24 @@ public TimeSeries computePredictedTimeSeries(MetricSlice slice) {\n     InputData data =\n         this.dataFetcher.fetchData(new InputDataSpec().withTimeseriesSlices(Collections.singletonList(slice)));\n     DataFrame df = data.getTimeseries().get(slice);\n-    return TimeSeries.fromDataFrame(constructThresholdBoundaries(df));\n+    return TimeSeries.fromDataFrame(constructBaselineAndBoundaries(df));\n   }\n \n-  private DataFrame constructThresholdBoundaries(DataFrame df) {\n+  /**\n+   * Populate the dataframe with upper/lower boundaries and baseline\n+   */\n+  private DataFrame constructBaselineAndBoundaries(DataFrame df) {\n+    // Set default baseline as the actual value\n+    df.addSeries(COL_VALUE, df.getDoubles(COL_CURRENT));\n     if (!Double.isNaN(this.min)) {\n       df.addSeries(COL_LOWER_BOUND, DoubleSeries.fillValues(df.size(), this.min));\n+      // set baseline value as the lower bound when actual value across below the mark\n+      df.mapInPlace(DoubleSeries.MAX, COL_VALUE, COL_LOWER_BOUND, COL_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c371b4b2aa3ab7c2cfe4f0c7c131ca467b2dcce"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODk5MjAz", "url": "https://github.com/apache/pinot/pull/4960#pullrequestreview-348899203", "createdAt": "2020-01-27T18:59:32Z", "commit": {"oid": "9c371b4b2aa3ab7c2cfe4f0c7c131ca467b2dcce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1429, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}