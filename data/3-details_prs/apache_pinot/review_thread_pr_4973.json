{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxODI0ODk3", "number": 4973, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMToxMFrODXYwdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMTozMFrODizcGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODQ5NDYwOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-avro/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMToxMFrOFcqTAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMToxMFrOFcqTAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NzQ0MQ==", "bodyText": "we should not have pinot-avro pull in kafka", "url": "https://github.com/apache/pinot/pull/4973#discussion_r365597441", "createdAt": "2020-01-12T17:11:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-plugins/pinot-input-format/pinot-avro/pom.xml", "diffHunk": "@@ -33,6 +33,7 @@\n   <url>https://pinot.apache.org/</url>\n   <properties>\n     <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODQ5NjAyOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMzoxN1rOFcqTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMjo0NjoxNFrOFcrgSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NzYyOQ==", "bodyText": "Please move this to kafka plugins, see KafkaAvroMessageDecoder", "url": "https://github.com/apache/pinot/pull/4973#discussion_r365597629", "createdAt": "2020-01-12T17:13:17Z", "author": {"login": "mcvsubbu"}, "path": "pinot-plugins/pinot-input-format/pinot-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNzIyNA==", "bodyText": "This is in the same package as KafkaAvroMessageDecoder - do you mean have it in a separate module under pinot-input-format?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r365617224", "createdAt": "2020-01-12T22:46:14Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NzYyOQ=="}, "originalCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODU4MDM4OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1MzoxMlrOFeKJRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDo1NjoxNVrOFlFE4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2NzgxMg==", "bodyText": "can you add some comments on how this is different from AvroDecoder we have in pinot-avro or point to some external link", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367167812", "createdAt": "2020-01-15T23:53:12Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQyNDgwMQ==", "bodyText": "Added in pluggablestreams.rst", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374424801", "createdAt": "2020-02-04T00:56:15Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2NzgxMg=="}, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODU4MzM4OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1NTowNVrOFeKLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTowNDoxNVrOFgnhJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODI4NA==", "bodyText": "Its probably ok to duplicate the AvroRecordExtractor. Plugin depending on another plugin will probably make things harder. For e.g. Avro versions might be different between pinot-avro and pinot-confluent-avro", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168284", "createdAt": "2020-01-15T23:55:05Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODc0MA==", "bodyText": "Another option is to create a separate module(not a plugin) called pinot-avro-utils let both pinot-avro and pinot-confluent-avro share that.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168740", "createdAt": "2020-01-15T23:56:41Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODI4NA=="}, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc0NjIxNA==", "bodyText": "Created pinot-avro-base that both pinot-avro and pinot-confluent-avro plugins use.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r369746214", "createdAt": "2020-01-22T19:04:15Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODI4NA=="}, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODU4Mzk1OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1NToyM1rOFeKLdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1NToyM1rOFeKLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODM3Mg==", "bodyText": "typo avroRecordConvetrer", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168372", "createdAt": "2020-01-15T23:55:23Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());\n+    }\n+\n+    @Override\n+    public GenericRow decode(byte[] payload, GenericRow destination) {\n+        Record avroRecord = (Record) deserializer.deserialize(topicName, payload);\n+        return avroRecordConvetrer.extract(pinotSchema, avroRecord, destination);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODU5MDg0OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1OToyN1rOFeKPww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1OToyN1rOFeKPww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2OTQ3NQ==", "bodyText": "should we move this to the pom specific to this plugin.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367169475", "createdAt": "2020-01-15T23:59:27Z", "author": {"login": "kishoreg"}, "path": "pom.xml", "diffHunk": "@@ -138,6 +138,7 @@\n     To change kafka connector dependency, we only need to update this version number config.\n     TODO: figure out a way to inject kafka dependency instead of explicitly setting the kafka module dependency -->\n     <kafka.version>2.0</kafka.version>\n+    <confluent.version>5.3.1</confluent.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODU5MTQxOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1OTo1MVrOFeKQKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1OTo1MVrOFeKQKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2OTU3Ng==", "bodyText": "move to pom specific to this plugin?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367169576", "createdAt": "2020-01-15T23:59:51Z", "author": {"login": "kishoreg"}, "path": "pom.xml", "diffHunk": "@@ -212,6 +213,14 @@\n       </build>\n     </profile>\n   </profiles>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE4MzU2OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODowOFrOFjjdgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDozMToxNlrOFlErHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQ3Mw==", "bodyText": "do we need to define pinot.root?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372825473", "createdAt": "2020-01-30T08:58:08Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-avro-base</artifactId>\n+  <name>Pinot Avro Base</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MDU5Nw==", "bodyText": "Thanks @fx19880617! Removed. I noticed that this property is set in all the plugins under pinot-input-format. Does it make sense to remove those as well in a separate commit?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374190597", "createdAt": "2020-02-03T16:06:21Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-avro-base</artifactId>\n+  <name>Pinot Avro Base</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQ3Mw=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxODIwNA==", "bodyText": "FYI, I had to add it back as the property is used by the build and fails without it (mycila license error).", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374418204", "createdAt": "2020-02-04T00:31:16Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-avro-base</artifactId>\n+  <name>Pinot Avro Base</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQ3Mw=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE4NTU5OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODo1M1rOFjje1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODo1M1rOFjje1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTgxMw==", "bodyText": "this plugin is already declared in the parent pom", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372825813", "createdAt": "2020-01-30T08:58:53Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE4NzgzOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1OTo0MFrOFjjgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1OTo0MFrOFjjgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjE2NA==", "bodyText": "avro dependency is already defined in pinot-avro-base.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372826164", "createdAt": "2020-01-30T08:59:40Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE5MzMwOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-csv/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowMTozMlrOFjjjZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjoxMDoyM1rOFk27HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjk4MA==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372826980", "createdAt": "2020-01-30T09:01:32Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-csv/pom.xml", "diffHunk": "@@ -43,5 +43,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MjkyNA==", "bodyText": "The build failed with a dependency error without it.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374192924", "createdAt": "2020-02-03T16:10:23Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-csv/pom.xml", "diffHunk": "@@ -43,5 +43,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjk4MA=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE5MzYwOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-json/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowMTozOFrOFjjjlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMToyNToxNlrOFlFgoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzAyOA==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372827028", "createdAt": "2020-01-30T09:01:38Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-json/pom.xml", "diffHunk": "@@ -39,5 +39,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MzA3MA==", "bodyText": "The build failed with a dependency error without it.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374193070", "createdAt": "2020-02-03T16:10:38Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-json/pom.xml", "diffHunk": "@@ -39,5 +39,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzAyOA=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzMTkwNA==", "bodyText": "I thought pinot-spi is in pinot-plugins pom (https://github.com/apache/incubator-pinot/blob/master/pinot-plugins/pom.xml#L50) so you don't need to put it here.\nMaybe to rebase from current master?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374431904", "createdAt": "2020-02-04T01:25:16Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-json/pom.xml", "diffHunk": "@@ -39,5 +39,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzAyOA=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE5NDEyOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-parquet/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowMTo1MlrOFjjj5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjoxMDo1MFrOFk28MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzEwOQ==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372827109", "createdAt": "2020-01-30T09:01:52Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-parquet/pom.xml", "diffHunk": "@@ -55,5 +65,11 @@\n         </exclusion>\n       </exclusions>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MzIwMA==", "bodyText": "Same as above.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374193200", "createdAt": "2020-02-03T16:10:50Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-parquet/pom.xml", "diffHunk": "@@ -55,5 +65,11 @@\n         </exclusion>\n       </exclusions>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzEwOQ=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTIwMTU3OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowNDozN1rOFjjogQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODoyODoyM1rOFmCcjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyODI4OQ==", "bodyText": "why we need kafka-client dependency?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372828289", "createdAt": "2020-01-30T09:04:37Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>slf4j-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.mortbay.jetty</groupId>\n+          <artifactId>jetty</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5Mzc1NA==", "bodyText": "The schema registry client has a dependency and a dependency convergence error is thrown without an explicit dependency.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374193754", "createdAt": "2020-02-03T16:11:43Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>slf4j-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.mortbay.jetty</groupId>\n+          <artifactId>jetty</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyODI4OQ=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzMjQwNQ==", "bodyText": "Is this lib used anywhere in this decoder? shall we exclude this or explicit specify it here?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r374432405", "createdAt": "2020-02-04T01:27:36Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>slf4j-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.mortbay.jetty</groupId>\n+          <artifactId>jetty</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyODI4OQ=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzMDI4NQ==", "bodyText": "It's used by the schema registry client, as it stores schemas in a kafka topic, and uses the kafka client to retrieve and store metadata. It's a direct dependency of schema-registry client. If we exclude it then we get a ClassNotFound exception. So I would say leave it explicitly specified. Let me know what you think.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r375430285", "createdAt": "2020-02-05T18:28:23Z", "author": {"login": "elonazoulay"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>slf4j-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.mortbay.jetty</groupId>\n+          <artifactId>jetty</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyODI4OQ=="}, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIwOTUzOnYy", "diffSide": "RIGHT", "path": "docs/pluggable_streams.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMTozMFrOFuQT7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzo1Mjo0OVrOFvAnlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0NjA2MQ==", "bodyText": "We  have moved the documentation to gitbook. Please add the docs there", "url": "https://github.com/apache/pinot/pull/4973#discussion_r384046061", "createdAt": "2020-02-25T18:31:30Z", "author": {"login": "mcvsubbu"}, "path": "docs/pluggable_streams.rst", "diffHunk": "@@ -230,6 +230,42 @@ Please note:\n #. Config ``stream.kafka.consumer.type`` should be specified as ``LowLevel`` to use partition level consumer. (The use of ``simple`` instead of ``LowLevel`` is deprecated)\n #. Configs ``stream.kafka.zk.broker.url`` and ``stream.kafka.broker.list`` are required under ``tableIndexConfig.streamConfigs`` to provide kafka related information.\n \n+Here is another example which is used to read avro messages using the schema id from confluent schema registry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNzUyNw==", "bodyText": "Will do this shortly, thanks!", "url": "https://github.com/apache/pinot/pull/4973#discussion_r384837527", "createdAt": "2020-02-26T23:52:49Z", "author": {"login": "elonazoulay"}, "path": "docs/pluggable_streams.rst", "diffHunk": "@@ -230,6 +230,42 @@ Please note:\n #. Config ``stream.kafka.consumer.type`` should be specified as ``LowLevel`` to use partition level consumer. (The use of ``simple`` instead of ``LowLevel`` is deprecated)\n #. Configs ``stream.kafka.zk.broker.url`` and ``stream.kafka.broker.list`` are required under ``tableIndexConfig.streamConfigs`` to provide kafka related information.\n \n+Here is another example which is used to read avro messages using the schema id from confluent schema registry.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0NjA2MQ=="}, "originalCommit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3570, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}