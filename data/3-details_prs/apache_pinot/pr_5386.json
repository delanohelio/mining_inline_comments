{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTA2NTk5", "number": 5386, "title": "[TE] Add support for configuring additional custom fields in Jira Alert", "bodyText": "", "createdAt": "2020-05-14T16:24:15Z", "url": "https://github.com/apache/pinot/pull/5386", "merged": true, "mergeCommit": {"oid": "516a16820d7be247c42ff0385654bcecbbaf560b"}, "closed": true, "closedAt": "2020-05-15T16:48:01Z", "author": {"login": "akshayrai"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchEan6gH2gAyNDE4MTA2NTk5OjAzZTBhMTA3MWFmZjI1OWJiZjA5OTRjNzkwMWU3ODhmYTg2ZDEwZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchUd-5AFqTQxMjIwMzA3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03e0a1071aff259bbf0994c7901e788fa86d10d9", "author": {"user": {"login": "akshayrai", "name": "Akshay Rai"}}, "url": "https://github.com/apache/pinot/commit/03e0a1071aff259bbf0994c7901e788fa86d10d9", "committedDate": "2020-05-14T02:54:17Z", "message": "[TE] Add support for configuring additional custom fields in Jira"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTQzMzY1", "url": "https://github.com/apache/pinot/pull/5386#pullrequestreview-412143365", "createdAt": "2020-05-14T20:04:09Z", "commit": {"oid": "03e0a1071aff259bbf0994c7901e788fa86d10d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDowNDoxMFrOGVsPYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDowNDoxMFrOGVsPYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5ODExMg==", "bodyText": "return the error message in the endpoint's response?", "url": "https://github.com/apache/pinot/pull/5386#discussion_r425398112", "createdAt": "2020-05-14T20:04:10Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -1107,4 +1115,33 @@ public Response listYamls(\n     LOG.info(\"Successfully returned \" + yamls.size() + \" detection configs.\");\n     return Response.ok(yamls).build();\n   }\n+\n+  /**\n+   * Api to trigger a notification alert. Mostly used for ad-hoc testing.\n+   * Alert will be sent only if there are new anomalies since the last watermark.\n+   * Watermarks will be updated after notifying anomalies if any.\n+   */\n+  @PUT\n+  @Path(\"/notify/{id}\")\n+  @ApiOperation(\"Send notification email for detection alert config\")\n+  public void test(\n+      @ApiParam(\"Subscription configuration id for the alert\") @NotNull @PathParam(\"id\") long detectionAlertConfigId) {\n+    LOG.info(\"Triggering subscription task with id \" + detectionAlertConfigId);\n+\n+    // Build the task context\n+    ThirdEyeAnomalyConfiguration config = new ThirdEyeAnomalyConfiguration();\n+    config.setAlerterConfiguration(alerterConfig);\n+    TaskContext taskContext = new TaskContext();\n+    taskContext.setThirdEyeAnomalyConfiguration(config);\n+\n+    // Run the notification task. This will update the subscription watermark as well.\n+    DetectionAlertTaskInfo taskInfo = new DetectionAlertTaskInfo(detectionAlertConfigId);\n+    TaskRunner taskRunner = new DetectionAlertTaskRunner();\n+    try {\n+      taskRunner.execute(taskInfo, taskContext);\n+    } catch (Exception e) {\n+      LOG.error(\"Exception while triggering the notification task with id \" + detectionAlertConfigId, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e0a1071aff259bbf0994c7901e788fa86d10d9"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTQzODI1", "url": "https://github.com/apache/pinot/pull/5386#pullrequestreview-412143825", "createdAt": "2020-05-14T20:04:50Z", "commit": {"oid": "03e0a1071aff259bbf0994c7901e788fa86d10d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDowNDo1MFrOGVsQvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDowNDo1MFrOGVsQvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5ODQ2Mg==", "bodyText": "return a success response here?", "url": "https://github.com/apache/pinot/pull/5386#discussion_r425398462", "createdAt": "2020-05-14T20:04:50Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -1107,4 +1115,33 @@ public Response listYamls(\n     LOG.info(\"Successfully returned \" + yamls.size() + \" detection configs.\");\n     return Response.ok(yamls).build();\n   }\n+\n+  /**\n+   * Api to trigger a notification alert. Mostly used for ad-hoc testing.\n+   * Alert will be sent only if there are new anomalies since the last watermark.\n+   * Watermarks will be updated after notifying anomalies if any.\n+   */\n+  @PUT\n+  @Path(\"/notify/{id}\")\n+  @ApiOperation(\"Send notification email for detection alert config\")\n+  public void test(\n+      @ApiParam(\"Subscription configuration id for the alert\") @NotNull @PathParam(\"id\") long detectionAlertConfigId) {\n+    LOG.info(\"Triggering subscription task with id \" + detectionAlertConfigId);\n+\n+    // Build the task context\n+    ThirdEyeAnomalyConfiguration config = new ThirdEyeAnomalyConfiguration();\n+    config.setAlerterConfiguration(alerterConfig);\n+    TaskContext taskContext = new TaskContext();\n+    taskContext.setThirdEyeAnomalyConfiguration(config);\n+\n+    // Run the notification task. This will update the subscription watermark as well.\n+    DetectionAlertTaskInfo taskInfo = new DetectionAlertTaskInfo(detectionAlertConfigId);\n+    TaskRunner taskRunner = new DetectionAlertTaskRunner();\n+    try {\n+      taskRunner.execute(taskInfo, taskContext);\n+    } catch (Exception e) {\n+      LOG.error(\"Exception while triggering the notification task with id \" + detectionAlertConfigId, e);\n+    }\n+    LOG.info(\"Notification api triggered successfully\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e0a1071aff259bbf0994c7901e788fa86d10d9"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4365f44e08f55049e90ea85915b2c4bbf9f3986", "author": {"user": {"login": "akshayrai", "name": "Akshay Rai"}}, "url": "https://github.com/apache/pinot/commit/a4365f44e08f55049e90ea85915b2c4bbf9f3986", "committedDate": "2020-05-14T21:32:37Z", "message": "addressed Jihao's comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjAzMDc0", "url": "https://github.com/apache/pinot/pull/5386#pullrequestreview-412203074", "createdAt": "2020-05-14T21:36:26Z", "commit": {"oid": "a4365f44e08f55049e90ea85915b2c4bbf9f3986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1046, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}