{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTczNzk1", "number": 5910, "title": "5804: Prints file name of invalid json file when parsing", "bodyText": "Description\nEnhances handling runtime exception thrown when parsing JSON by adding file name to the exception message.\nThis was proposed in #5804\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\nNo\nDoes this PR fix a zero-downtime upgrade introduced earlier?\nNo\nDoes this PR otherwise need attention when creating release notes?\nNo", "createdAt": "2020-08-22T11:07:23Z", "url": "https://github.com/apache/pinot/pull/5910", "merged": true, "mergeCommit": {"oid": "2cbf0b5b8e8632d1751cd111f31fa961e020de2d"}, "closed": true, "closedAt": "2020-08-31T18:25:01Z", "author": {"login": "renato2099"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBNZ6rAH2gAyNDcxOTczNzk1OmRhYTlmYjQxMWYxNzZiOTExY2RmNDM0Zjg4MzY2NTc0YWIyZDAzMmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDwFKAgFqTQ3ODE1NDcwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "daa9fb411f176b911cdf434f88366574ab2d032c", "author": {"user": {"login": "renato2099", "name": "Renato Marroquin"}}, "url": "https://github.com/apache/pinot/commit/daa9fb411f176b911cdf434f88366574ab2d032c", "committedDate": "2020-08-21T23:28:14Z", "message": "5804: Prints file name of invalid json file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19bc97c658505533886bb927ae9b8f404bf87b90", "author": {"user": {"login": "renato2099", "name": "Renato Marroquin"}}, "url": "https://github.com/apache/pinot/commit/19bc97c658505533886bb927ae9b8f404bf87b90", "committedDate": "2020-08-26T19:53:59Z", "message": "Moves exception enhancing to createSegmentCommand.java"}, "afterCommit": {"oid": "32599ed3d05f718a5bca1bb35036e4779b0e5eaa", "author": {"user": {"login": "renato2099", "name": "Renato Marroquin"}}, "url": "https://github.com/apache/pinot/commit/32599ed3d05f718a5bca1bb35036e4779b0e5eaa", "committedDate": "2020-08-28T22:37:43Z", "message": "Moves exception enhancing to createSegmentCommand.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32599ed3d05f718a5bca1bb35036e4779b0e5eaa", "author": {"user": {"login": "renato2099", "name": "Renato Marroquin"}}, "url": "https://github.com/apache/pinot/commit/32599ed3d05f718a5bca1bb35036e4779b0e5eaa", "committedDate": "2020-08-28T22:37:43Z", "message": "Moves exception enhancing to createSegmentCommand.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDkwODQz", "url": "https://github.com/apache/pinot/pull/5910#pullrequestreview-478090843", "createdAt": "2020-08-29T02:26:40Z", "commit": {"oid": "32599ed3d05f718a5bca1bb35036e4779b0e5eaa"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjoyNjo0MFrOHJYN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjoyNzozN1rOHJYORg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NjAwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          final String exceptionMessage = String.format(\"%s. File: %s\", e.getMessage(), dataFiles.get(sequenceId));\n          \n          \n            \n                          throw new Exception(exceptionMessage, e);\n          \n          \n            \n                          throw new RuntimeException(\"Caught exception while generating segment from file: \" + dataFiles.get(sequenceId), e);", "url": "https://github.com/apache/pinot/pull/5910#discussion_r479596007", "createdAt": "2020-08-29T02:26:40Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/CreateSegmentCommand.java", "diffHunk": "@@ -252,7 +252,8 @@ public boolean execute()\n             if (j < _retry) {\n               LOGGER.warn(\"Caught exception while creating/verifying segment, will retry\", e);\n             } else {\n-              throw e;\n+              final String exceptionMessage = String.format(\"%s. File: %s\", e.getMessage(), dataFiles.get(sequenceId));\n+              throw new Exception(exceptionMessage, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32599ed3d05f718a5bca1bb35036e4779b0e5eaa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NjEwMg==", "bodyText": "(nit) We don't usually put final for local variables", "url": "https://github.com/apache/pinot/pull/5910#discussion_r479596102", "createdAt": "2020-08-29T02:27:37Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-tools/src/test/java/org/apache/pinot/tools/TestCreateSegmentCommand.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import com.google.common.base.Preconditions;\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import org.apache.pinot.spi.config.table.TableConfig;\n+import org.apache.pinot.spi.config.table.TableType;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.FileFormat;\n+import org.apache.pinot.spi.utils.builder.TableConfigBuilder;\n+import org.apache.pinot.tools.admin.command.CreateSegmentCommand;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestCreateSegmentCommand {\n+  private static final File JSON_INVALID_SAMPLE_DATA_FILE = new File(Preconditions\n+      .checkNotNull(TestCreateSegmentCommand.class.getClassLoader().getResource(\"test_data/test_invalid_data.json\"))\n+      .getFile());\n+\n+  private static CreateSegmentCommand _createSegmentCommand = new CreateSegmentCommand();\n+\n+  @Test(\n+    expectedExceptions = Exception.class,\n+    expectedExceptionsMessageRegExp = \"^.*test_invalid_data.json.*$\"\n+  )\n+  public void testReadingInvalidJsonFile()\n+      throws Exception {\n+    final String fileDirectoryPath = JSON_INVALID_SAMPLE_DATA_FILE.getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32599ed3d05f718a5bca1bb35036e4779b0e5eaa"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e380894520a228db284305a74eb54efd0a4b2c2", "author": {"user": {"login": "renato2099", "name": "Renato Marroquin"}}, "url": "https://github.com/apache/pinot/commit/6e380894520a228db284305a74eb54efd0a4b2c2", "committedDate": "2020-08-29T20:31:21Z", "message": "Addresses reviewers comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTU0NzAz", "url": "https://github.com/apache/pinot/pull/5910#pullrequestreview-478154703", "createdAt": "2020-08-29T21:00:05Z", "commit": {"oid": "6e380894520a228db284305a74eb54efd0a4b2c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 252, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}