{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxODI0ODk3", "number": 4973, "title": "Add confluent schema registry message decoder", "bodyText": "Add a message decoder that can read kafka messages produced using confluent schema registry. The schema id is stored in the message instead of the entire schema and can be retrieved from the schema registry.", "createdAt": "2020-01-12T12:26:31Z", "url": "https://github.com/apache/pinot/pull/4973", "merged": true, "mergeCommit": {"oid": "20b1da9c1b0deb564d01c10c5f958a44e5e26063"}, "closed": true, "closedAt": "2020-03-23T17:23:37Z", "author": {"login": "elonazoulay"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5m6PQgBqjI5NDEyMDcwMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH3Sb2AFqTM2NDM0ODc4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "345748b2ea40077ef7f307cea4f668df9e1711a1", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/345748b2ea40077ef7f307cea4f668df9e1711a1", "committedDate": "2020-01-12T12:24:57Z", "message": "Add Avro Schema Registry Message Decoder"}, "afterCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/3f2de0707f1b6828f6c1f50496994b773c432be2", "committedDate": "2020-01-12T12:28:12Z", "message": "Add Avro Schema Registry Message Decoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTg3NTE4", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-341587518", "createdAt": "2020-01-12T17:11:10Z", "commit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMToxMFrOFcqTAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNzoxMzoxN1rOFcqTvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NzQ0MQ==", "bodyText": "we should not have pinot-avro pull in kafka", "url": "https://github.com/apache/pinot/pull/4973#discussion_r365597441", "createdAt": "2020-01-12T17:11:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-plugins/pinot-input-format/pinot-avro/pom.xml", "diffHunk": "@@ -33,6 +33,7 @@\n   <url>https://pinot.apache.org/</url>\n   <properties>\n     <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NzYyOQ==", "bodyText": "Please move this to kafka plugins, see KafkaAvroMessageDecoder", "url": "https://github.com/apache/pinot/pull/4973#discussion_r365597629", "createdAt": "2020-01-12T17:13:17Z", "author": {"login": "mcvsubbu"}, "path": "pinot-plugins/pinot-input-format/pinot-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f2de0707f1b6828f6c1f50496994b773c432be2", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/3f2de0707f1b6828f6c1f50496994b773c432be2", "committedDate": "2020-01-12T12:28:12Z", "message": "Add Avro Schema Registry Message Decoder"}, "afterCommit": {"oid": "8b9acd1ef4da3d4f532d3da002fa131a0786b65f", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/8b9acd1ef4da3d4f532d3da002fa131a0786b65f", "committedDate": "2020-01-13T01:31:28Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b9acd1ef4da3d4f532d3da002fa131a0786b65f", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/8b9acd1ef4da3d4f532d3da002fa131a0786b65f", "committedDate": "2020-01-13T01:31:28Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/f41c9f79f0f2625d3fc2fc778aad94aad0245d8e", "committedDate": "2020-01-13T04:30:52Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTk4Nzc1", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-343598775", "createdAt": "2020-01-15T23:53:12Z", "commit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1MzoxMlrOFeKJRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1MzoxMlrOFeKJRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2NzgxMg==", "bodyText": "can you add some comments on how this is different from AvroDecoder we have in pinot-avro or point to some external link", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367167812", "createdAt": "2020-01-15T23:53:12Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTk5MzUx", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-343599351", "createdAt": "2020-01-15T23:55:04Z", "commit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1NTowNVrOFeKLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo1OTo1MVrOFeKQKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODI4NA==", "bodyText": "Its probably ok to duplicate the AvroRecordExtractor. Plugin depending on another plugin will probably make things harder. For e.g. Avro versions might be different between pinot-avro and pinot-confluent-avro", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168284", "createdAt": "2020-01-15T23:55:05Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODM3Mg==", "bodyText": "typo avroRecordConvetrer", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168372", "createdAt": "2020-01-15T23:55:23Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());\n+    }\n+\n+    @Override\n+    public GenericRow decode(byte[] payload, GenericRow destination) {\n+        Record avroRecord = (Record) deserializer.deserialize(topicName, payload);\n+        return avroRecordConvetrer.extract(pinotSchema, avroRecord, destination);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODc0MA==", "bodyText": "Another option is to create a separate module(not a plugin) called pinot-avro-utils let both pinot-avro and pinot-confluent-avro share that.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367168740", "createdAt": "2020-01-15T23:56:41Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.plugin.inputformat.avro.confluent;\n+\n+import io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import org.apache.avro.generic.GenericData.Record;\n+import org.apache.pinot.plugin.inputformat.avro.AvroRecordExtractor;\n+import org.apache.pinot.spi.data.Schema;\n+import org.apache.pinot.spi.data.readers.GenericRow;\n+import org.apache.pinot.spi.data.readers.RecordExtractor;\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.spi.stream.StreamMessageDecoder;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static com.google.common.base.Preconditions.checkState;\n+import static java.util.Objects.requireNonNull;\n+\n+public class KafkaConfluentSchemaRegistryAvroMessageDecoder implements StreamMessageDecoder<byte[]> {\n+    private static final String SCHEMA_REGISTRY_REST_URL = \"schema.registry.rest.url\";\n+    private KafkaAvroDeserializer deserializer;\n+    private RecordExtractor<Record> avroRecordConvetrer;\n+    private String topicName;\n+    private Schema pinotSchema;\n+\n+    @Override\n+    public void init(Map<String, String> props, Schema indexingSchema, String topicName) throws Exception {\n+        checkState(props.containsKey(SCHEMA_REGISTRY_REST_URL), \"Missing required property '%s'\", SCHEMA_REGISTRY_REST_URL);\n+        String schemaRegistryUrl = props.get(SCHEMA_REGISTRY_REST_URL);\n+        pinotSchema = requireNonNull(indexingSchema, \"indexingSchema is null\");\n+        SchemaRegistryClient schemaRegistryClient = new CachedSchemaRegistryClient(schemaRegistryUrl, 1000);\n+        deserializer = new KafkaAvroDeserializer(schemaRegistryClient);\n+        this.topicName = requireNonNull(topicName, \"topicName is null\");\n+        this.avroRecordConvetrer = PluginManager.get().createInstance(AvroRecordExtractor.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2ODI4NA=="}, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2OTQ3NQ==", "bodyText": "should we move this to the pom specific to this plugin.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367169475", "createdAt": "2020-01-15T23:59:27Z", "author": {"login": "kishoreg"}, "path": "pom.xml", "diffHunk": "@@ -138,6 +138,7 @@\n     To change kafka connector dependency, we only need to update this version number config.\n     TODO: figure out a way to inject kafka dependency instead of explicitly setting the kafka module dependency -->\n     <kafka.version>2.0</kafka.version>\n+    <confluent.version>5.3.1</confluent.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2OTU3Ng==", "bodyText": "move to pom specific to this plugin?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r367169576", "createdAt": "2020-01-15T23:59:51Z", "author": {"login": "kishoreg"}, "path": "pom.xml", "diffHunk": "@@ -212,6 +213,14 @@\n       </build>\n     </profile>\n   </profiles>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f41c9f79f0f2625d3fc2fc778aad94aad0245d8e", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/f41c9f79f0f2625d3fc2fc778aad94aad0245d8e", "committedDate": "2020-01-13T04:30:52Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/d37346748586cb4cb6bbcc4c5cb608cfe8685224", "committedDate": "2020-01-22T11:23:46Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNjYyOTY4", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-350662968", "createdAt": "2020-01-30T08:58:07Z", "commit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODowOFrOFjjdgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowNDozN1rOFjjogQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQ3Mw==", "bodyText": "do we need to define pinot.root?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372825473", "createdAt": "2020-01-30T08:58:08Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-avro-base</artifactId>\n+  <name>Pinot Avro Base</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTgxMw==", "bodyText": "this plugin is already declared in the parent pom", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372825813", "createdAt": "2020-01-30T08:58:53Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjE2NA==", "bodyText": "avro dependency is already defined in pinot-avro-base.", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372826164", "createdAt": "2020-01-30T08:59:40Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjk4MA==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372826980", "createdAt": "2020-01-30T09:01:32Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-csv/pom.xml", "diffHunk": "@@ -43,5 +43,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzAyOA==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372827028", "createdAt": "2020-01-30T09:01:38Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-json/pom.xml", "diffHunk": "@@ -39,5 +39,11 @@\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNzEwOQ==", "bodyText": "is this needed?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372827109", "createdAt": "2020-01-30T09:01:52Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-parquet/pom.xml", "diffHunk": "@@ -55,5 +65,11 @@\n         </exclusion>\n       </exclusions>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-spi</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyODI4OQ==", "bodyText": "why we need kafka-client dependency?", "url": "https://github.com/apache/pinot/pull/4973#discussion_r372828289", "createdAt": "2020-01-30T09:04:37Z", "author": {"login": "xiangfu0"}, "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/pom.xml", "diffHunk": "@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>pinot-input-format</artifactId>\n+    <groupId>org.apache.pinot</groupId>\n+    <version>0.3.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>pinot-confluent-avro</artifactId>\n+  <name>Pinot Avro</name>\n+  <url>https://pinot.apache.org/</url>\n+  <properties>\n+    <pinot.root>${basedir}/../../..</pinot.root>\n+    <kafka.lib.version>2.0.0</kafka.lib.version>\n+    <confluent.version>5.3.1</confluent.version>\n+  </properties>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <repositories>\n+    <repository>\n+      <id>confluent</id>\n+      <url>http://packages.confluent.io/maven/</url>\n+    </repository>\n+  </repositories>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.pinot</groupId>\n+      <artifactId>pinot-avro-base</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.avro</groupId>\n+      <artifactId>avro</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>slf4j-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.mortbay.jetty</groupId>\n+          <artifactId>jetty</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224"}, "originalPosition": 78}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d37346748586cb4cb6bbcc4c5cb608cfe8685224", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/d37346748586cb4cb6bbcc4c5cb608cfe8685224", "committedDate": "2020-01-22T11:23:46Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "38e3cde702e785ea2f40247664ac07123ac96c6a", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/38e3cde702e785ea2f40247664ac07123ac96c6a", "committedDate": "2020-02-04T00:27:01Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38e3cde702e785ea2f40247664ac07123ac96c6a", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/38e3cde702e785ea2f40247664ac07123ac96c6a", "committedDate": "2020-02-04T00:27:01Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "801ddaf5ad5508194bbc695552cd7fd5e76b2d27", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/801ddaf5ad5508194bbc695552cd7fd5e76b2d27", "committedDate": "2020-02-04T13:27:28Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "801ddaf5ad5508194bbc695552cd7fd5e76b2d27", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/801ddaf5ad5508194bbc695552cd7fd5e76b2d27", "committedDate": "2020-02-04T13:27:28Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "5aa3026316642172d53585e41d4bef4f45fce10e", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/5aa3026316642172d53585e41d4bef4f45fce10e", "committedDate": "2020-02-24T08:53:06Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5aa3026316642172d53585e41d4bef4f45fce10e", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/5aa3026316642172d53585e41d4bef4f45fce10e", "committedDate": "2020-02-24T08:53:06Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "8968e54bf9362559d6462ed4c61af1b85b266dfc", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/8968e54bf9362559d6462ed4c61af1b85b266dfc", "committedDate": "2020-02-24T09:15:36Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/543056e1a928d611c2ea65da4fa52545fc598b5d", "committedDate": "2020-02-24T22:00:54Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8968e54bf9362559d6462ed4c61af1b85b266dfc", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/8968e54bf9362559d6462ed4c61af1b85b266dfc", "committedDate": "2020-02-24T09:15:36Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}, "afterCommit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d", "author": {"user": {"login": "elonazoulay", "name": "Elon Azoulay"}}, "url": "https://github.com/apache/pinot/commit/543056e1a928d611c2ea65da4fa52545fc598b5d", "committedDate": "2020-02-24T22:00:54Z", "message": "Add Confluent Schema Registry Avro Message Decoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzM2ODQ5", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-363736849", "createdAt": "2020-02-24T22:08:30Z", "commit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzYxOTMz", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-363761933", "createdAt": "2020-02-24T22:58:31Z", "commit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzQ4Nzg3", "url": "https://github.com/apache/pinot/pull/4973#pullrequestreview-364348787", "createdAt": "2020-02-25T18:31:30Z", "commit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMTozMFrOFuQT7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMTozMFrOFuQT7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0NjA2MQ==", "bodyText": "We  have moved the documentation to gitbook. Please add the docs there", "url": "https://github.com/apache/pinot/pull/4973#discussion_r384046061", "createdAt": "2020-02-25T18:31:30Z", "author": {"login": "mcvsubbu"}, "path": "docs/pluggable_streams.rst", "diffHunk": "@@ -230,6 +230,42 @@ Please note:\n #. Config ``stream.kafka.consumer.type`` should be specified as ``LowLevel`` to use partition level consumer. (The use of ``simple`` instead of ``LowLevel`` is deprecated)\n #. Configs ``stream.kafka.zk.broker.url`` and ``stream.kafka.broker.list`` are required under ``tableIndexConfig.streamConfigs`` to provide kafka related information.\n \n+Here is another example which is used to read avro messages using the schema id from confluent schema registry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543056e1a928d611c2ea65da4fa52545fc598b5d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1449, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}