{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzAwNTQy", "number": 5413, "title": "[TE] alerts search and pagination endpoint", "bodyText": "This PR adds the endpoint for alert search and pagination. Specifically,\n\nThe endpoint to search and paginate the alerts.\nThe Alert searcher to retrieve the alerts in the database based on the search filter.\nAdd the capability of counting, pagination, and find by JSON value predicate to the generic DAO.\nUnit tests", "createdAt": "2020-05-19T18:49:11Z", "url": "https://github.com/apache/pinot/pull/5413", "merged": true, "mergeCommit": {"oid": "775d57827b38f293cf62748b118d940617b459ed"}, "closed": true, "closedAt": "2020-05-20T20:28:53Z", "author": {"login": "jihaozh"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci5De5AH2gAyNDIwMzAwNTQyOmRjMmU1NjNiYTkxNTU0MTQ2YTU3N2UzNmFhYmIyOGM3OWQ3MDczNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjNMNaAFqTQxNDkzNDg5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dc2e563ba91554146a577e36aabb28c79d707360", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/dc2e563ba91554146a577e36aabb28c79d707360", "committedDate": "2020-05-19T18:47:54Z", "message": "[TE] alerts search and pagination endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTM3MzIz", "url": "https://github.com/apache/pinot/pull/5413#pullrequestreview-415537323", "createdAt": "2020-05-20T16:58:41Z", "commit": {"oid": "dc2e563ba91554146a577e36aabb28c79d707360"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTY0MjE0", "url": "https://github.com/apache/pinot/pull/5413#pullrequestreview-415564214", "createdAt": "2020-05-20T17:33:51Z", "commit": {"oid": "dc2e563ba91554146a577e36aabb28c79d707360"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTM0ODk5", "url": "https://github.com/apache/pinot/pull/5413#pullrequestreview-414934899", "createdAt": "2020-05-20T01:38:32Z", "commit": {"oid": "dc2e563ba91554146a577e36aabb28c79d707360"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTozODozMlrOGX4V2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTozODozMlrOGX4V2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5MzUyOA==", "bodyText": "I understand that we might not need ordering by other columns. Could we pass these as parameters in case we need to do it?", "url": "https://github.com/apache/pinot/pull/5413#discussion_r427693528", "createdAt": "2020-05-20T01:38:32Z", "author": {"login": "vincentchenjl"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/datalayer/util/SqlQueryBuilder.java", "diffHunk": "@@ -338,6 +338,46 @@ public PreparedStatement createFindByParamsStatement(Connection connection,\n     return prepareStatement;\n   }\n \n+  public PreparedStatement createfindByParamsStatementWithLimit(Connection connection,\n+      Class<? extends AbstractEntity> entityClass, Predicate predicate, Long limit, Long offset) throws Exception {\n+    String tableName = entityMappingHolder.tableToEntityNameMap.inverse().get(entityClass.getSimpleName());\n+    BiMap<String, String> entityNameToDBNameMapping =\n+        entityMappingHolder.columnMappingPerTable.get(tableName).inverse();\n+    StringBuilder sqlBuilder = new StringBuilder(\"SELECT * FROM \" + tableName);\n+    StringBuilder whereClause = new StringBuilder(\" WHERE \");\n+    List<Pair<String, Object>> parametersList = new ArrayList<>();\n+    generateWhereClause(entityNameToDBNameMapping, predicate, parametersList, whereClause);\n+    sqlBuilder.append(whereClause.toString());\n+    sqlBuilder.append(\" ORDER BY id DESC\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2e563ba91554146a577e36aabb28c79d707360"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 808, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}