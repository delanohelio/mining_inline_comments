{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MTc2NDcy", "number": 6347, "title": "Adding json path functions to extract values from json object", "bodyText": "Description\nAdding json extract scalar functions to help extract messages from json object.\nThis can help users extract values from json object and flat events during ingestion time.\nSample ingestion config inside the table config:\n...\n  \"ingestionConfig\": {\n    \"transformConfigs\": [\n    {\n      \"columnName\": \"created_ts\",\n      \"transformFunction\": \"fromDateTime(created_at, \\\"yyyy-MM-dd'T'HH:mm:ssZ\\\")\"\n    },\n    {\n      \"columnName\": \"actor_id\",\n      \"transformFunction\": \"jsonPathLong(actor, '$.id')\"\n    },\n    {\n      \"columnName\": \"actor_login\",\n      \"transformFunction\": \"jsonPathString(actor, '$.login')\"\n    },\n    {\n      \"columnName\": \"actor_display_login\",\n      \"transformFunction\": \"jsonPathString(actor, '$.display_login')\"\n    },\n    {\n      \"columnName\": \"actor_gravatar_id\",\n      \"transformFunction\": \"jsonPathString(actor, '$.gravatar_id')\"\n    },\n    {\n      \"columnName\": \"actor_url\",\n      \"transformFunction\": \"jsonPathString(actor, '$.url')\"\n    },\n    {\n      \"columnName\": \"actor_avatar_url\",\n      \"transformFunction\": \"jsonPathString(actor, '$.avatar_url')\"\n    },\n    {\n      \"columnName\": \"repo_id\",\n      \"transformFunction\": \"jsonPathLong(repo, '$.id')\"\n    },\n    {\n      \"columnName\": \"repo_name\",\n      \"transformFunction\": \"jsonPathString(repo, '$.name')\"\n    },\n    {\n      \"columnName\": \"repo_url\",\n      \"transformFunction\": \"jsonPathString(repo, '$.url')\"\n    },\n    {\n      \"columnName\": \"payload_str\",\n      \"transformFunction\": \"jsonFormat(payload)\"\n    }\n    ]\n  }\n...", "createdAt": "2020-12-11T17:20:39Z", "url": "https://github.com/apache/pinot/pull/6347", "merged": true, "mergeCommit": {"oid": "2796b831f2313f9f7c6aaffb91c60e090d572679"}, "closed": true, "closedAt": "2020-12-12T02:36:22Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlP2PJgBqjQxMDI3MDczNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlQNJ8gBqjQxMDI3NzY5NDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9ead60ebf10a3108ae4719ee4d1f8206dc244f6", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/c9ead60ebf10a3108ae4719ee4d1f8206dc244f6", "committedDate": "2020-12-11T17:17:32Z", "message": "Adding json path functions to extract values from json object"}, "afterCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b671689734f81748a4dff8955802ff4e8b1d7292", "committedDate": "2020-12-11T22:40:06Z", "message": "Adding json path functions to extract values from json object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjMxMzk3", "url": "https://github.com/apache/pinot/pull/6347#pullrequestreview-550631397", "createdAt": "2020-12-11T22:58:57Z", "commit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo1ODo1N1rOIETjvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowMjoxOVrOIETo-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NTY2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                + \"'of the transform function must be present in the schema\");\n          \n          \n            \n                                + \"' of the transform function must be present in the schema\");", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541385663", "createdAt": "2020-12-11T22:58:57Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -238,7 +238,8 @@ public static void validateIngestionConfig(TableConfig tableConfig, @Nullable Sc\n           String columnName = transformConfig.getColumnName();\n           if (schema != null) {\n             Preconditions.checkState(schema.getFieldSpecFor(columnName) != null,\n-                \"The destination column of the transform function must be present in the schema\");\n+                \"The destination column '\" + columnName\n+                    + \"'of the transform function must be present in the schema\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjU5Mw==", "bodyText": "return primitive long", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541386593", "createdAt": "2020-12-11T23:01:39Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/scalar/JsonFunctions.java", "diffHunk": "@@ -56,4 +57,42 @@ public static String jsonFormat(Object object)\n       throws JsonProcessingException {\n     return JsonUtils.objectToString(object);\n   }\n+\n+  /**\n+   * Extract object based on Json path\n+   */\n+  @ScalarFunction\n+  public static Object jsonPath(Object object, String jsonPath) {\n+    if (object instanceof String) {\n+      return JsonPath.read((String) object, jsonPath);\n+    }\n+    return JsonPath.read(object, jsonPath);\n+  }\n+\n+  /**\n+   * Extract from Json with path to String\n+   */\n+  @ScalarFunction\n+  public static String jsonPathString(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return JsonUtils.objectToString(jsonPath(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Long\n+   */\n+  @ScalarFunction\n+  public static Long jsonPathLong(Object object, String jsonPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjYzNw==", "bodyText": "return primitive double", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541386637", "createdAt": "2020-12-11T23:01:46Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/function/scalar/JsonFunctions.java", "diffHunk": "@@ -56,4 +57,42 @@ public static String jsonFormat(Object object)\n       throws JsonProcessingException {\n     return JsonUtils.objectToString(object);\n   }\n+\n+  /**\n+   * Extract object based on Json path\n+   */\n+  @ScalarFunction\n+  public static Object jsonPath(Object object, String jsonPath) {\n+    if (object instanceof String) {\n+      return JsonPath.read((String) object, jsonPath);\n+    }\n+    return JsonPath.read(object, jsonPath);\n+  }\n+\n+  /**\n+   * Extract from Json with path to String\n+   */\n+  @ScalarFunction\n+  public static String jsonPathString(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return JsonUtils.objectToString(jsonPath(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Long\n+   */\n+  @ScalarFunction\n+  public static Long jsonPathLong(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return Long.parseLong(jsonPathString(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Double\n+   */\n+  @ScalarFunction\n+  public static Double jsonPathDouble(Object object, String jsonPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NzAwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), Long.valueOf(33500718L));\n          \n          \n            \n                assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), 33500718L);", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541387003", "createdAt": "2020-12-11T23:02:19Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/function/JsonFunctionsTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.function;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.jayway.jsonpath.JsonPath;\n+import org.apache.pinot.common.function.scalar.JsonFunctions;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+\n+public class JsonFunctionsTest {\n+\n+  @Test\n+  public void testJsonFunction()\n+      throws JsonProcessingException {\n+    String jsonString = \"{\" +\n+        \"  \\\"id\\\": \\\"7044885078\\\",\" +\n+        \"  \\\"type\\\": \\\"CreateEvent\\\",\" +\n+        \"  \\\"actor\\\": {\" +\n+        \"    \\\"id\\\": 33500718,\" +\n+        \"    \\\"login\\\": \\\"dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"display_login\\\": \\\"dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"gravatar_id\\\": \\\"\\\",\" +\n+        \"    \\\"url\\\": \\\"https://api.github.com/users/dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"avatar_url\\\": \\\"https://avatars.githubusercontent.com/u/33500718?\\\"\" +\n+        \"  },\" +\n+        \"  \\\"repo\\\": {\" +\n+        \"    \\\"id\\\": 112368043,\" +\n+        \"    \\\"name\\\": \\\"dipper-github-icn-bom-cdg/test-ruby-sample\\\",\" +\n+        \"    \\\"url\\\": \\\"https://api.github.com/repos/dipper-github-icn-bom-cdg/test-ruby-sample\\\"\" +\n+        \"  },\" +\n+        \"  \\\"payload\\\": {\" +\n+        \"    \\\"ref\\\": \\\"canary-test-7f3af0db-3ffa-4259-894f-950d2c76594b\\\",\" +\n+        \"    \\\"ref_type\\\": \\\"branch\\\",\" +\n+        \"    \\\"master_branch\\\": \\\"master\\\",\" +\n+        \"    \\\"description\\\": null,\" +\n+        \"    \\\"pusher_type\\\": \\\"user\\\"\" +\n+        \"  },\" +\n+        \"  \\\"public\\\": true,\" +\n+        \"  \\\"created_at\\\": \\\"2018-01-01T11:12:53Z\\\"\" +\n+        \"}\";\n+    assertEquals(JsonFunctions.jsonPathString(jsonString, \"$.actor.id\"), \"33500718\");\n+    assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), Long.valueOf(33500718L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3dbfcaa193f46458ff61fdecc12f5345165ab04", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/f3dbfcaa193f46458ff61fdecc12f5345165ab04", "committedDate": "2020-12-11T23:05:10Z", "message": "Adding json path functions to extract values from json object"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b671689734f81748a4dff8955802ff4e8b1d7292", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/b671689734f81748a4dff8955802ff4e8b1d7292", "committedDate": "2020-12-11T22:40:06Z", "message": "Adding json path functions to extract values from json object"}, "afterCommit": {"oid": "f3dbfcaa193f46458ff61fdecc12f5345165ab04", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/f3dbfcaa193f46458ff61fdecc12f5345165ab04", "committedDate": "2020-12-11T23:05:10Z", "message": "Adding json path functions to extract values from json object"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1657, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}