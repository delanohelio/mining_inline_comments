{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MDI5NDYz", "number": 6017, "title": "Table indexing config validation", "bodyText": "Related to #5942\nDescription\nThis is to ensure any column name mentioned in the table indexing config is valid (i.e. it exists in the corresponding schema). Also checking for space in the table name.\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\nNo\nDoes this PR fix a zero-downtime upgrade introduced earlier?\nNo\nDoes this PR otherwise need attention when creating release notes?\nNo", "createdAt": "2020-09-15T04:41:52Z", "url": "https://github.com/apache/pinot/pull/6017", "merged": true, "mergeCommit": {"oid": "5548e791f9273ec9ffd74f237385c9e7a531f9f3"}, "closed": true, "closedAt": "2020-09-18T04:02:49Z", "author": {"login": "icefury71"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJAOUyAH2gAyNDg3MDI5NDYzOjEzOWNmZGJmY2YxMDg3MmNlMTJlN2ViYjBkNGY5YmYyYjc3OGIwNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ8JwjgH2gAyNDg3MDI5NDYzOjkxN2I4ZjY3MWFjN2M0YTM5ZDc2ZTg2OWVmMjllZjQyZTc1ZWEyN2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d", "committedDate": "2020-09-15T04:38:12Z", "message": "Adding validation for table indexing config to check for valid column names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODQ3MDY3", "url": "https://github.com/apache/pinot/pull/6017#pullrequestreview-488847067", "createdAt": "2020-09-15T16:13:09Z", "commit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxMzoxMFrOHSJeww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxMzoxMFrOHSJeww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5MTc0Nw==", "bodyText": "Can you also add FieldConfig validation here?", "url": "https://github.com/apache/pinot/pull/6017#discussion_r488791747", "createdAt": "2020-09-15T16:13:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -225,4 +229,54 @@ private static void validateTierConfigList(@Nullable List<TierConfig> tierConfig\n       }\n     }\n   }\n+\n+  private static void validateIndexingConfig(@Nullable IndexingConfig indexingConfig, @Nullable Schema schema) {\n+    if (indexingConfig == null || schema == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODgxODU3", "url": "https://github.com/apache/pinot/pull/6017#pullrequestreview-488881857", "createdAt": "2020-09-15T16:55:47Z", "commit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjo1NTo0N1rOHSLHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjo1NTo0N1rOHSLHNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxODQ4Ng==", "bodyText": "Could you update the description of the method validate as well?", "url": "https://github.com/apache/pinot/pull/6017#discussion_r488818486", "createdAt": "2020-09-15T16:55:47Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -65,6 +68,7 @@ public static void validate(TableConfig tableConfig, @Nullable Schema schema) {\n     validateValidationConfig(tableConfig, schema);\n     validateIngestionConfig(tableConfig.getIngestionConfig(), schema);\n     validateTierConfigList(tableConfig.getTierConfigsList());\n+    validateIndexingConfig(tableConfig.getIndexingConfig(), schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTQ5NDE4", "url": "https://github.com/apache/pinot/pull/6017#pullrequestreview-489149418", "createdAt": "2020-09-15T22:24:32Z", "commit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyNDozMlrOHSX28g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyNDozMlrOHSX28g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyNzMxNA==", "bodyText": "can we include star tree index columns here?", "url": "https://github.com/apache/pinot/pull/6017#discussion_r489027314", "createdAt": "2020-09-15T22:24:32Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -225,4 +229,54 @@ private static void validateTierConfigList(@Nullable List<TierConfig> tierConfig\n       }\n     }\n   }\n+\n+  private static void validateIndexingConfig(@Nullable IndexingConfig indexingConfig, @Nullable Schema schema) {\n+    if (indexingConfig == null || schema == null) {\n+      return;\n+    }\n+    Map<String, String> columnNameToConfigMap = new HashMap<>();\n+\n+    if (indexingConfig.getBloomFilterColumns() != null) {\n+      for (String columnName : indexingConfig.getBloomFilterColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Bloom Filter Config\");\n+      }\n+    }\n+    if (indexingConfig.getInvertedIndexColumns() != null) {\n+      for (String columnName : indexingConfig.getInvertedIndexColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Inverted Index Config\");\n+      }\n+    }\n+    if (indexingConfig.getNoDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getNoDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"No Dictionary Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getOnHeapDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getOnHeapDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"On Heap Dictionary Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getRangeIndexColumns() != null) {\n+      for (String columnName : indexingConfig.getRangeIndexColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Range Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getSortedColumn() != null) {\n+      for (String columnName : indexingConfig.getSortedColumn()) {\n+        columnNameToConfigMap.put(columnName, \"Sorted Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getVarLengthDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getVarLengthDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Var Length Column Config\");\n+      }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139cfdbfcf10872ce12e7ebb0d4f9bf2b778b05d"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ba0dd38be3ef120c3765af45a2c8a10258b7431", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/0ba0dd38be3ef120c3765af45a2c8a10258b7431", "committedDate": "2020-09-17T21:06:53Z", "message": "* Addressing review comments: adding validation for FieldConfigList. Adding javadocs\n* Bug fix in integration test regarding removal of existing column from schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b553b44bdaf79a7e23b91e811d9c87d04f3cef24", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/b553b44bdaf79a7e23b91e811d9c87d04f3cef24", "committedDate": "2020-09-17T21:56:02Z", "message": "Adding validation for StarTreeIndexingConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDUxNzk2", "url": "https://github.com/apache/pinot/pull/6017#pullrequestreview-491051796", "createdAt": "2020-09-17T23:20:47Z", "commit": {"oid": "b553b44bdaf79a7e23b91e811d9c87d04f3cef24"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDU0Mjcx", "url": "https://github.com/apache/pinot/pull/6017#pullrequestreview-491054271", "createdAt": "2020-09-17T23:28:01Z", "commit": {"oid": "b553b44bdaf79a7e23b91e811d9c87d04f3cef24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyODowMVrOHT41zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyODowMVrOHT41zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNjI2OA==", "bodyText": "can we use the AggregationFunctionColumnPair#fromColumnName or reuse the delimiter field in this class?", "url": "https://github.com/apache/pinot/pull/6017#discussion_r490616268", "createdAt": "2020-09-17T23:28:01Z", "author": {"login": "npawar"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -225,4 +233,99 @@ private static void validateTierConfigList(@Nullable List<TierConfig> tierConfig\n       }\n     }\n   }\n+\n+  /**\n+   * Validates the Indexing Config\n+   * Ensures that every referred column name exists in the corresponding schema\n+   */\n+  private static void validateIndexingConfig(@Nullable IndexingConfig indexingConfig, @Nullable Schema schema) {\n+    if (indexingConfig == null || schema == null) {\n+      return;\n+    }\n+    Map<String, String> columnNameToConfigMap = new HashMap<>();\n+\n+    if (indexingConfig.getBloomFilterColumns() != null) {\n+      for (String columnName : indexingConfig.getBloomFilterColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Bloom Filter Config\");\n+      }\n+    }\n+    if (indexingConfig.getInvertedIndexColumns() != null) {\n+      for (String columnName : indexingConfig.getInvertedIndexColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Inverted Index Config\");\n+      }\n+    }\n+    if (indexingConfig.getNoDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getNoDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"No Dictionary Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getOnHeapDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getOnHeapDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"On Heap Dictionary Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getRangeIndexColumns() != null) {\n+      for (String columnName : indexingConfig.getRangeIndexColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Range Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getSortedColumn() != null) {\n+      for (String columnName : indexingConfig.getSortedColumn()) {\n+        columnNameToConfigMap.put(columnName, \"Sorted Column Config\");\n+      }\n+    }\n+    if (indexingConfig.getVarLengthDictionaryColumns() != null) {\n+      for (String columnName : indexingConfig.getVarLengthDictionaryColumns()) {\n+        columnNameToConfigMap.put(columnName, \"Var Length Column Config\");\n+      }\n+    }\n+    List<StarTreeIndexConfig> starTreeIndexConfigList = indexingConfig.getStarTreeIndexConfigs();\n+    if (starTreeIndexConfigList != null) {\n+      for (StarTreeIndexConfig starTreeIndexConfig : starTreeIndexConfigList) {\n+        // Dimension split order cannot be null\n+        for (String columnName : starTreeIndexConfig.getDimensionsSplitOrder()) {\n+          columnNameToConfigMap.put(columnName, \"StarTreeIndex Config\");\n+        }\n+        // Function column pairs cannot be null\n+        for (String functionColumnPair : starTreeIndexConfig.getFunctionColumnPairs()) {\n+          String[] functionColumnArray = functionColumnPair.split(\"__\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b553b44bdaf79a7e23b91e811d9c87d04f3cef24"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "917b8f671ac7c4a39d76e869ef29ef42e75ea27d", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/917b8f671ac7c4a39d76e869ef29ef42e75ea27d", "committedDate": "2020-09-18T02:27:31Z", "message": "Addressing review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 38, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}