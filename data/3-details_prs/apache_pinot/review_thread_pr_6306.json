{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzg0ODk4", "number": 6306, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNDo1MFrOE_eLeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0MDoyN1rOE_wgaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTkwMjAyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/StDistanceFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNDo1MFrOH9MW5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNDo1MFrOH9MW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyNzY1NA==", "bodyText": "remove the comment?", "url": "https://github.com/apache/pinot/pull/6306#discussion_r533927654", "createdAt": "2020-12-02T06:34:50Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/StDistanceFunction.java", "diffHunk": "@@ -126,7 +127,8 @@ private static double sphericalDistance(Geometry leftGeometry, Geometry rightGeo\n     Point leftPoint = (Point) leftGeometry;\n     Point rightPoint = (Point) rightGeometry;\n \n-    return greatCircleDistance(leftPoint.getY(), leftPoint.getX(), rightPoint.getY(), rightPoint.getX());\n+//    return greatCircleDistance(leftPoint.getY(), leftPoint.getX(), rightPoint.getY(), rightPoint.getX());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTkwNDQyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/LiteralTransformFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNTo1MlrOH9MYRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNTo1MlrOH9MYRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyODAwNQ==", "bodyText": "missing space\nif (_bytesResult == null) {", "url": "https://github.com/apache/pinot/pull/6306#discussion_r533928005", "createdAt": "2020-12-02T06:35:52Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/LiteralTransformFunction.java", "diffHunk": "@@ -145,7 +147,11 @@ public Dictionary getDictionary() {\n \n   @Override\n   public byte[][] transformToBytesValuesSV(ProjectionBlock projectionBlock) {\n-    throw new UnsupportedOperationException();\n+    if(_bytesResult==null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTkwNzQzOnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/resources/examples/stream/meetupRsvp/meetupRsvp_realtime_table_config.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjozNzoxM1rOH9MaDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjo0NzoxNVrOH9MnoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyODQ2Mg==", "bodyText": "no need to change this file?", "url": "https://github.com/apache/pinot/pull/6306#discussion_r533928462", "createdAt": "2020-12-02T06:37:13Z", "author": {"login": "xiangfu0"}, "path": "pinot-tools/src/main/resources/examples/stream/meetupRsvp/meetupRsvp_realtime_table_config.json", "diffHunk": "@@ -7,7 +7,9 @@\n     \"segmentPushType\": \"APPEND\",\n     \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n     \"schemaName\": \"meetupRsvp\",\n-    \"replication\": \"1\"\n+    \"replication\": \"1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzMTkzNg==", "bodyText": "adding retentionTimeUnit is helpful. I was annoyed by the NPE thrown by the RetentionManager when debugging the quickStart.", "url": "https://github.com/apache/pinot/pull/6306#discussion_r533931936", "createdAt": "2020-12-02T06:47:15Z", "author": {"login": "yupeng9"}, "path": "pinot-tools/src/main/resources/examples/stream/meetupRsvp/meetupRsvp_realtime_table_config.json", "diffHunk": "@@ -7,7 +7,9 @@\n     \"segmentPushType\": \"APPEND\",\n     \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n     \"schemaName\": \"meetupRsvp\",\n-    \"replication\": \"1\"\n+    \"replication\": \"1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyODQ2Mg=="}, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjkwNDcyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/ScalarFunctions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0MDoyN1rOH9o_lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowMTowNVrOH9t-eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NjgyMg==", "bodyText": "Does boolean work as argument? If not, int might be a better option?", "url": "https://github.com/apache/pinot/pull/6306#discussion_r534396822", "createdAt": "2020-12-02T18:40:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/ScalarFunctions.java", "diffHunk": "@@ -43,6 +44,23 @@\n         .serialize(GeometryUtils.GEOMETRY_FACTORY.createPoint(new Coordinate(x, y)));\n   }\n \n+  /**\n+   * Creates a point.\n+   *\n+   * @param x x\n+   * @param y y\n+   * @param isGeography if it's geography\n+   * @return the created point\n+   */\n+  @ScalarFunction\n+  public static byte[] stPoint(double x, double y, double isGeography) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzOTA1Ng==", "bodyText": "Unfortunately it does not.... The PQL parser will invoke this scalar function and pass in the constant. Since boolean is not available in PQL/SQL, we need to use a number. Also, somehow the parser parses 1 into a double type, any idea on that?", "url": "https://github.com/apache/pinot/pull/6306#discussion_r534439056", "createdAt": "2020-12-02T19:50:32Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/ScalarFunctions.java", "diffHunk": "@@ -43,6 +44,23 @@\n         .serialize(GeometryUtils.GEOMETRY_FACTORY.createPoint(new Coordinate(x, y)));\n   }\n \n+  /**\n+   * Creates a point.\n+   *\n+   * @param x x\n+   * @param y y\n+   * @param isGeography if it's geography\n+   * @return the created point\n+   */\n+  @ScalarFunction\n+  public static byte[] stPoint(double x, double y, double isGeography) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NjgyMg=="}, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3ODQ1Ng==", "bodyText": "The parser parses the value based on the method signature. If you change the third argument to int, it should be able to parse 1 to int", "url": "https://github.com/apache/pinot/pull/6306#discussion_r534478456", "createdAt": "2020-12-02T21:01:05Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/geospatial/transform/function/ScalarFunctions.java", "diffHunk": "@@ -43,6 +44,23 @@\n         .serialize(GeometryUtils.GEOMETRY_FACTORY.createPoint(new Coordinate(x, y)));\n   }\n \n+  /**\n+   * Creates a point.\n+   *\n+   * @param x x\n+   * @param y y\n+   * @param isGeography if it's geography\n+   * @return the created point\n+   */\n+  @ScalarFunction\n+  public static byte[] stPoint(double x, double y, double isGeography) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NjgyMg=="}, "originalCommit": {"oid": "ad112bd795f79284e8266ee5f055cc7ca47319ea"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3173, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}