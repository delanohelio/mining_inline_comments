{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1OTMwMjIy", "number": 6087, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzo1Njo0NFrOEpTiZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzo1Njo0NFrOEpTiZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzQ3MTc1OnYy", "diffSide": "LEFT", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/StarTreeClusterIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzo1Njo0NFrOHa5rbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzo1NzowMVrOHa5rrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk3MDAyOA==", "bodyText": "shall this be starTreeTableTarDir or it doesn't matter?", "url": "https://github.com/apache/pinot/pull/6087#discussion_r497970028", "createdAt": "2020-10-01T03:56:44Z", "author": {"login": "xiangfu0"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/StarTreeClusterIntegrationTest.java", "diffHunk": "@@ -135,14 +140,15 @@ public void setUp()\n     List<File> avroFiles = unpackAvroData(_tempDir);\n \n     // Create and upload segments\n-    ClusterIntegrationTestUtils.buildSegmentsFromAvro(avroFiles, defaultTableConfig, schema, 0, _segmentDir, _tarDir);\n-    uploadSegments(DEFAULT_TABLE_NAME, _tarDir);\n-    TestUtils.ensureDirectoriesExistAndEmpty(_segmentDir, _tarDir);\n-    ClusterIntegrationTestUtils.buildSegmentsFromAvro(avroFiles, starTreeTableConfig, schema, 0, _segmentDir, _tarDir);\n-    uploadSegments(STAR_TREE_TABLE_NAME, _tarDir);\n+    ClusterIntegrationTestUtils\n+        .buildSegmentsFromAvro(avroFiles, defaultTableConfig, schema, 0, defaultTableSegmentDir, defaultTableTarDir);\n+    uploadSegments(DEFAULT_TABLE_NAME, defaultTableTarDir);\n+    ClusterIntegrationTestUtils\n+        .buildSegmentsFromAvro(avroFiles, starTreeTableConfig, schema, 0, starTreeTableSegmentDir, starTreeTableTarDir);\n+    uploadSegments(STAR_TREE_TABLE_NAME, starTreeTableTarDir);\n \n     // Set up the query generators\n-    SegmentInfoProvider segmentInfoProvider = new SegmentInfoProvider(_tarDir.getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e606b949067af429a5c3f11251a4b2eb3dcb196a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk3MDA5NA==", "bodyText": "It doesn't matter", "url": "https://github.com/apache/pinot/pull/6087#discussion_r497970094", "createdAt": "2020-10-01T03:57:01Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/StarTreeClusterIntegrationTest.java", "diffHunk": "@@ -135,14 +140,15 @@ public void setUp()\n     List<File> avroFiles = unpackAvroData(_tempDir);\n \n     // Create and upload segments\n-    ClusterIntegrationTestUtils.buildSegmentsFromAvro(avroFiles, defaultTableConfig, schema, 0, _segmentDir, _tarDir);\n-    uploadSegments(DEFAULT_TABLE_NAME, _tarDir);\n-    TestUtils.ensureDirectoriesExistAndEmpty(_segmentDir, _tarDir);\n-    ClusterIntegrationTestUtils.buildSegmentsFromAvro(avroFiles, starTreeTableConfig, schema, 0, _segmentDir, _tarDir);\n-    uploadSegments(STAR_TREE_TABLE_NAME, _tarDir);\n+    ClusterIntegrationTestUtils\n+        .buildSegmentsFromAvro(avroFiles, defaultTableConfig, schema, 0, defaultTableSegmentDir, defaultTableTarDir);\n+    uploadSegments(DEFAULT_TABLE_NAME, defaultTableTarDir);\n+    ClusterIntegrationTestUtils\n+        .buildSegmentsFromAvro(avroFiles, starTreeTableConfig, schema, 0, starTreeTableSegmentDir, starTreeTableTarDir);\n+    uploadSegments(STAR_TREE_TABLE_NAME, starTreeTableTarDir);\n \n     // Set up the query generators\n-    SegmentInfoProvider segmentInfoProvider = new SegmentInfoProvider(_tarDir.getPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk3MDAyOA=="}, "originalCommit": {"oid": "e606b949067af429a5c3f11251a4b2eb3dcb196a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3688, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}