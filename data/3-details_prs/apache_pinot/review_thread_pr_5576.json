{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDM4MDQ4", "number": 5576, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1Mzo0M1rOEGHyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1NjowNlrOEGH1VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU0NTk1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/PlanNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1Mzo0M1rOGkuggg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1Mzo0M1rOGkuggg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2MzkwNg==", "bodyText": "Do we have some documentation on the guideline for annotations? I think that at least all the committers should know where to put which annotations.", "url": "https://github.com/apache/pinot/pull/5576#discussion_r441163906", "createdAt": "2020-06-16T21:53:43Z", "author": {"login": "snleee"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/PlanNode.java", "diffHunk": "@@ -18,25 +18,21 @@\n  */\n package org.apache.pinot.core.plan;\n \n+import org.apache.pinot.core.common.Block;\n import org.apache.pinot.core.common.Operator;\n+import org.apache.pinot.spi.annotations.InterfaceAudience;\n \n \n /**\n  * The <code>PlanNode</code> is a single execution plan node inside the {@link Plan} tree.\n  */\n+@InterfaceAudience.Private", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b323736b84f7d1a8ed24147b82d80b77039e4d8e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU1MjUzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/ProjectionPlanNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1NjowNlrOGkukYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo1NjowNlrOGkukYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NDg5OQ==", "bodyText": "Also, it would be great if we have some documented guidelines on nullable & nonnull", "url": "https://github.com/apache/pinot/pull/5576#discussion_r441164899", "createdAt": "2020-06-16T21:56:06Z", "author": {"login": "snleee"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/ProjectionPlanNode.java", "diffHunk": "@@ -21,27 +21,22 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n-import javax.annotation.Nonnull;\n import org.apache.pinot.core.common.DataSource;\n import org.apache.pinot.core.indexsegment.IndexSegment;\n import org.apache.pinot.core.operator.ProjectionOperator;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n \n /**\n  * The <code>ProjectionPlanNode</code> class provides the execution plan for fetching projection columns' data source\n  * on a single segment.\n  */\n public class ProjectionPlanNode implements PlanNode {\n-  private static final Logger LOGGER = LoggerFactory.getLogger(ProjectionPlanNode.class);\n-\n   private final IndexSegment _indexSegment;\n   private final Set<String> _projectionColumns;\n   private final DocIdSetPlanNode _docIdSetPlanNode;\n \n-  public ProjectionPlanNode(@Nonnull IndexSegment indexSegment, @Nonnull Set<String> projectionColumns,\n-      @Nonnull DocIdSetPlanNode docIdSetPlanNode) {\n+  public ProjectionPlanNode(IndexSegment indexSegment, Set<String> projectionColumns,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b323736b84f7d1a8ed24147b82d80b77039e4d8e"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4327, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}