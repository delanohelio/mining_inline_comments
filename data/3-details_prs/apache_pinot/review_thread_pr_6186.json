{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5Mzg4MTE5", "number": 6186, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNDo1MDoxOVrOExnxow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNDo1MDoxOVrOExnxow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDY3MzYzOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNDo1MDoxOVrOHn2WwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNjoyNDowMFrOHn2v3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0NzA3Mw==", "bodyText": "Will this groupByExprs.contains(expr) handles functions or just for identifiers?", "url": "https://github.com/apache/pinot/pull/6186#discussion_r511547073", "createdAt": "2020-10-25T04:50:19Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -187,6 +174,22 @@ private static void validateGroupByClause(PinotQuery pinotQuery)\n     }\n   }\n \n+  private static boolean expressionOutsideGroupByList(Expression expr, Set<Expression> groupByExprs) {\n+    if (expr.getType() == ExpressionType.LITERAL || isAggregateExpression(expr) || groupByExprs.contains(expr)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "845499ba02d4a1502dc2fae50b1c9b662ae3b77c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0OTcyMA==", "bodyText": "Hi @fx19880617, it will handle all expression types (including nested). Expression overrides equals() & hashCode() so this should work for arbitrary Expression", "url": "https://github.com/apache/pinot/pull/6186#discussion_r511549720", "createdAt": "2020-10-25T05:29:13Z", "author": {"login": "hotienvu"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -187,6 +174,22 @@ private static void validateGroupByClause(PinotQuery pinotQuery)\n     }\n   }\n \n+  private static boolean expressionOutsideGroupByList(Expression expr, Set<Expression> groupByExprs) {\n+    if (expr.getType() == ExpressionType.LITERAL || isAggregateExpression(expr) || groupByExprs.contains(expr)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0NzA3Mw=="}, "originalCommit": {"oid": "845499ba02d4a1502dc2fae50b1c9b662ae3b77c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU1MzUwMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/pinot/pull/6186#discussion_r511553500", "createdAt": "2020-10-25T06:24:00Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -187,6 +174,22 @@ private static void validateGroupByClause(PinotQuery pinotQuery)\n     }\n   }\n \n+  private static boolean expressionOutsideGroupByList(Expression expr, Set<Expression> groupByExprs) {\n+    if (expr.getType() == ExpressionType.LITERAL || isAggregateExpression(expr) || groupByExprs.contains(expr)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0NzA3Mw=="}, "originalCommit": {"oid": "845499ba02d4a1502dc2fae50b1c9b662ae3b77c"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3792, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}