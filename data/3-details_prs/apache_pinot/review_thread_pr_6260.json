{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NjE0MjAy", "number": 6260, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzozMzowMlrOE4RXQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzozMzowMlrOE4RXQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDQwMTk1OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzozMzowMlrOHyF9Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjoxOToyMVrOHyQyPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4ODM5NQ==", "bodyText": "The picky requirement, I suggest using isInAnomalyRang for a boolean value. It's a clear variable name to express the variable type. it will enhance code readability.", "url": "https://github.com/apache/pinot/pull/6260#discussion_r522288395", "createdAt": "2020-11-12T17:33:02Z", "author": {"login": "zhangloo333"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1032,25 +1032,22 @@ export default Component.extend({\n     edgesLabel,\n     color,\n     useValue) {\n-    // build set of anomalous values (newer of 2 sets of anomalies)\n     if (!_.isEmpty(filteredAnomalies) && timeseries && !_.isEmpty(series.Current)) {\n       const valuesCurrent = [];\n+      // make sure anomalies ascend by startTime\n+      filteredAnomalies.sort((a, b) => a.startTime - b.startTime);\n+      let anomalyIndex = 0\n+      let currentAnomaly = filteredAnomalies[anomalyIndex];\n       // needed because anomalies with startTime before time window are possible\n-      let currentAnomaly = filteredAnomalies.find(anomaly => {\n-        return anomaly.startTime <= series.Current.timestamps[0];\n-      });\n-      let inAnomalyRange = currentAnomaly ? true : false;\n+      let inAnomalyRange = currentAnomaly.startTime <= series.Current.timestamps[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883d83b85d20d6f8ecc8927fb5573b166f7c78fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxMzI1MQ==", "bodyText": "also, please make sure series has Current and timestamps properties.", "url": "https://github.com/apache/pinot/pull/6260#discussion_r522313251", "createdAt": "2020-11-12T18:11:18Z", "author": {"login": "zhangloo333"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1032,25 +1032,22 @@ export default Component.extend({\n     edgesLabel,\n     color,\n     useValue) {\n-    // build set of anomalous values (newer of 2 sets of anomalies)\n     if (!_.isEmpty(filteredAnomalies) && timeseries && !_.isEmpty(series.Current)) {\n       const valuesCurrent = [];\n+      // make sure anomalies ascend by startTime\n+      filteredAnomalies.sort((a, b) => a.startTime - b.startTime);\n+      let anomalyIndex = 0\n+      let currentAnomaly = filteredAnomalies[anomalyIndex];\n       // needed because anomalies with startTime before time window are possible\n-      let currentAnomaly = filteredAnomalies.find(anomaly => {\n-        return anomaly.startTime <= series.Current.timestamps[0];\n-      });\n-      let inAnomalyRange = currentAnomaly ? true : false;\n+      let inAnomalyRange = currentAnomaly.startTime <= series.Current.timestamps[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4ODM5NQ=="}, "originalCommit": {"oid": "883d83b85d20d6f8ecc8927fb5573b166f7c78fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ2NTg1Mw==", "bodyText": "totally makes sense", "url": "https://github.com/apache/pinot/pull/6260#discussion_r522465853", "createdAt": "2020-11-12T22:19:21Z", "author": {"login": "harleyjj"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1032,25 +1032,22 @@ export default Component.extend({\n     edgesLabel,\n     color,\n     useValue) {\n-    // build set of anomalous values (newer of 2 sets of anomalies)\n     if (!_.isEmpty(filteredAnomalies) && timeseries && !_.isEmpty(series.Current)) {\n       const valuesCurrent = [];\n+      // make sure anomalies ascend by startTime\n+      filteredAnomalies.sort((a, b) => a.startTime - b.startTime);\n+      let anomalyIndex = 0\n+      let currentAnomaly = filteredAnomalies[anomalyIndex];\n       // needed because anomalies with startTime before time window are possible\n-      let currentAnomaly = filteredAnomalies.find(anomaly => {\n-        return anomaly.startTime <= series.Current.timestamps[0];\n-      });\n-      let inAnomalyRange = currentAnomaly ? true : false;\n+      let inAnomalyRange = currentAnomaly.startTime <= series.Current.timestamps[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4ODM5NQ=="}, "originalCommit": {"oid": "883d83b85d20d6f8ecc8927fb5573b166f7c78fd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3122, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}