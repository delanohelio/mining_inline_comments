{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5OTQyNzU2", "number": 6352, "title": "Enhance task schedule api for single type/table support", "bodyText": "Description\nAdded 2 optional query parameters to the task schedule API to schedule tasks for the given task type/table.\nExamples:\nPOST /tasks/schedule?taskType=MyTask\nPOST /tasks/schedule?tableName=myTable_OFFLINE\nPOST /tasks/schedule?taskType=MyTask&tableName=myTable_OFFLINE", "createdAt": "2020-12-15T03:12:22Z", "url": "https://github.com/apache/pinot/pull/6352", "merged": true, "mergeCommit": {"oid": "2ea01854866482fe8206a55dec4f2f1b2a648874"}, "closed": true, "closedAt": "2020-12-17T18:35:23Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmoacxgFqTU1MzMzODkyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm4uC0ABqjQxMjI2NzUxNzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzM4OTI4", "url": "https://github.com/apache/pinot/pull/6352#pullrequestreview-553338928", "createdAt": "2020-12-16T03:56:00Z", "commit": {"oid": "1a3f264c66210176b0fb31d8a2e4f944a1b73119"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMzo1NjowMFrOIGtasA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNTozNjoxOVrOIGyE5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzkwNjQ4MA==", "bodyText": "expand the imports", "url": "https://github.com/apache/pinot/pull/6352#discussion_r543906480", "createdAt": "2020-12-16T03:56:00Z", "author": {"login": "xiangfu0"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/SimpleMinionClusterIntegrationTest.java", "diffHunk": "@@ -48,10 +48,7 @@\n import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n-import static org.testng.Assert.assertEquals;\n-import static org.testng.Assert.assertFalse;\n-import static org.testng.Assert.assertNotNull;\n-import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3f264c66210176b0fb31d8a2e4f944a1b73119"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk1ODQ4MQ==", "bodyText": "why this is always false?", "url": "https://github.com/apache/pinot/pull/6352#discussion_r543958481", "createdAt": "2020-12-16T05:04:50Z", "author": {"login": "xiangfu0"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/minion/PinotTaskManager.java", "diffHunk": "@@ -63,99 +65,147 @@ public PinotTaskManager(PinotHelixTaskResourceManager helixTaskResourceManager,\n   }\n \n   /**\n-   * Returns the cluster info provider.\n-   * <p>\n-   * Cluster info provider might be useful when initializing task generators.\n-   *\n-   * @return Cluster info provider\n+   * Returns the cluster info accessor.\n+   * <p>Cluster info accessor can be used to initialize the task generator.\n    */\n   public ClusterInfoAccessor getClusterInfoAccessor() {\n     return _clusterInfoAccessor;\n   }\n \n   /**\n    * Registers a task generator.\n-   * <p>\n-   * This method can be used to plug in custom task generators.\n-   *\n-   * @param pinotTaskGenerator Task generator to be registered\n+   * <p>This method can be used to plug in custom task generators.\n    */\n-  public void registerTaskGenerator(PinotTaskGenerator pinotTaskGenerator) {\n-    _taskGeneratorRegistry.registerTaskGenerator(pinotTaskGenerator);\n+  public void registerTaskGenerator(PinotTaskGenerator taskGenerator) {\n+    _taskGeneratorRegistry.registerTaskGenerator(taskGenerator);\n   }\n \n   /**\n-   * Public API to schedule tasks. It doesn't matter whether current pinot controller is leader.\n+   * Public API to schedule tasks (all task types) for all tables. It might be called from the non-leader controller.\n+   * Returns a map from the task type to the task scheduled.\n    */\n   public synchronized Map<String, String> scheduleTasks() {\n-    Map<String, String> tasksScheduled = scheduleTasks(_pinotHelixResourceManager.getAllTables());\n-\n-    // Reset the task because this method will be called from the Rest API instead of the periodic task scheduler\n-    // TODO: Clean up only the non-leader tables instead of all tables\n-    cleanUpTask();\n-    setUpTask();\n-\n-    return tasksScheduled;\n+    return scheduleTasks(_pinotHelixResourceManager.getAllTables(), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3f264c66210176b0fb31d8a2e4f944a1b73119"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk4MjgyMg==", "bodyText": "Is it possible that we return this info to the client-side? I feel this information is useful for users to test and debug.", "url": "https://github.com/apache/pinot/pull/6352#discussion_r543982822", "createdAt": "2020-12-16T05:36:19Z", "author": {"login": "xiangfu0"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/minion/PinotTaskManager.java", "diffHunk": "@@ -63,99 +65,147 @@ public PinotTaskManager(PinotHelixTaskResourceManager helixTaskResourceManager,\n   }\n \n   /**\n-   * Returns the cluster info provider.\n-   * <p>\n-   * Cluster info provider might be useful when initializing task generators.\n-   *\n-   * @return Cluster info provider\n+   * Returns the cluster info accessor.\n+   * <p>Cluster info accessor can be used to initialize the task generator.\n    */\n   public ClusterInfoAccessor getClusterInfoAccessor() {\n     return _clusterInfoAccessor;\n   }\n \n   /**\n    * Registers a task generator.\n-   * <p>\n-   * This method can be used to plug in custom task generators.\n-   *\n-   * @param pinotTaskGenerator Task generator to be registered\n+   * <p>This method can be used to plug in custom task generators.\n    */\n-  public void registerTaskGenerator(PinotTaskGenerator pinotTaskGenerator) {\n-    _taskGeneratorRegistry.registerTaskGenerator(pinotTaskGenerator);\n+  public void registerTaskGenerator(PinotTaskGenerator taskGenerator) {\n+    _taskGeneratorRegistry.registerTaskGenerator(taskGenerator);\n   }\n \n   /**\n-   * Public API to schedule tasks. It doesn't matter whether current pinot controller is leader.\n+   * Public API to schedule tasks (all task types) for all tables. It might be called from the non-leader controller.\n+   * Returns a map from the task type to the task scheduled.\n    */\n   public synchronized Map<String, String> scheduleTasks() {\n-    Map<String, String> tasksScheduled = scheduleTasks(_pinotHelixResourceManager.getAllTables());\n-\n-    // Reset the task because this method will be called from the Rest API instead of the periodic task scheduler\n-    // TODO: Clean up only the non-leader tables instead of all tables\n-    cleanUpTask();\n-    setUpTask();\n-\n-    return tasksScheduled;\n+    return scheduleTasks(_pinotHelixResourceManager.getAllTables(), false);\n   }\n \n   /**\n-   * Check the Pinot cluster status and schedule new tasks for the given tables.\n-   *\n-   * @param tableNamesWithType List of table names with type suffix\n-   * @return Map from task type to task scheduled\n+   * Helper method to schedule tasks (all task types) for the given tables that have the tasks enabled. Returns a map\n+   * from the task type to the task scheduled.\n    */\n-  private synchronized Map<String, String> scheduleTasks(List<String> tableNamesWithType) {\n+  private synchronized Map<String, String> scheduleTasks(List<String> tableNamesWithType, boolean isLeader) {\n     _controllerMetrics.addMeteredGlobalValue(ControllerMeter.NUMBER_TIMES_SCHEDULE_TASKS_CALLED, 1L);\n \n     Set<String> taskTypes = _taskGeneratorRegistry.getAllTaskTypes();\n-    int numTaskTypes = taskTypes.size();\n-    Map<String, List<TableConfig>> enabledTableConfigMap = new HashMap<>(numTaskTypes);\n-\n-    for (String taskType : taskTypes) {\n-      enabledTableConfigMap.put(taskType, new ArrayList<>());\n-\n-      // Ensure all task queues exist\n-      _helixTaskResourceManager.ensureTaskQueueExists(taskType);\n-    }\n+    Map<String, List<TableConfig>> enabledTableConfigMap = new HashMap<>();\n \n     // Scan all table configs to get the tables with tasks enabled\n     for (String tableNameWithType : tableNamesWithType) {\n       TableConfig tableConfig = _pinotHelixResourceManager.getTableConfig(tableNameWithType);\n-      if (tableConfig != null) {\n-        TableTaskConfig taskConfig = tableConfig.getTaskConfig();\n-        if (taskConfig != null) {\n-          for (String taskType : taskTypes) {\n-            if (taskConfig.isTaskTypeEnabled(taskType)) {\n-              enabledTableConfigMap.get(taskType).add(tableConfig);\n-            }\n+      if (tableConfig != null && tableConfig.getTaskConfig() != null) {\n+        Set<String> enabledTaskTypes = tableConfig.getTaskConfig().getTaskTypeConfigsMap().keySet();\n+        for (String enabledTaskType : enabledTaskTypes) {\n+          if (taskTypes.contains(enabledTaskType)) {\n+            enabledTableConfigMap.computeIfAbsent(enabledTaskType, k -> new ArrayList<>()).add(tableConfig);\n+          } else {\n+            LOGGER.warn(\"Task type: {} is not registered, cannot enable it for table: {}\", enabledTaskType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3f264c66210176b0fb31d8a2e4f944a1b73119"}, "originalPosition": 110}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a3f264c66210176b0fb31d8a2e4f944a1b73119", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/1a3f264c66210176b0fb31d8a2e4f944a1b73119", "committedDate": "2020-12-15T03:08:54Z", "message": "Enhance task schedule api for single type/table support"}, "afterCommit": {"oid": "61898705d5dd6acc81125ef01fa9a052e0e7f7a8", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/61898705d5dd6acc81125ef01fa9a052e0e7f7a8", "committedDate": "2020-12-16T20:42:55Z", "message": "Enhance task schedule api for single type/table support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fc87a5a8663a98949581db079332a47eb2086a9", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/8fc87a5a8663a98949581db079332a47eb2086a9", "committedDate": "2020-12-17T00:50:00Z", "message": "Enhance task schedule api for single type/table support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61898705d5dd6acc81125ef01fa9a052e0e7f7a8", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/61898705d5dd6acc81125ef01fa9a052e0e7f7a8", "committedDate": "2020-12-16T20:42:55Z", "message": "Enhance task schedule api for single type/table support"}, "afterCommit": {"oid": "8fc87a5a8663a98949581db079332a47eb2086a9", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/8fc87a5a8663a98949581db079332a47eb2086a9", "committedDate": "2020-12-17T00:50:00Z", "message": "Enhance task schedule api for single type/table support"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1661, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}