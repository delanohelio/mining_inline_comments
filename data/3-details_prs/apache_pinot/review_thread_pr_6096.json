{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTE4NzM1", "number": 6096, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMTo0OTo0NFrOEp--yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxOTowNDowMlrOEqCTyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDU4OTU0OnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMTo0OTo0NFrOHb-9KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMjoyNTo0MVrOHb_HjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTA2NA==", "bodyText": "This should not be part of the schema, but the upsert config", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499105064", "createdAt": "2020-10-03T01:49:44Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -66,6 +66,9 @@\n   private TimeFieldSpec _timeFieldSpec;\n   private final List<DateTimeFieldSpec> _dateTimeFieldSpecs = new ArrayList<>();\n   private final List<ComplexFieldSpec> _complexFieldSpecs = new ArrayList<>();\n+  // names of the columns that used as primary keys\n+  // TODO: add validation checks like duplicate columns and use of time column\n+  private List<String> _primaryKeyColumns;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNzcyNQ==", "bodyText": "Primary key is an inherent attribute of the schema. And its usage is beyond the upsert. For example, it's also used in the join feature which is happening in parallel.", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499107725", "createdAt": "2020-10-03T02:25:41Z", "author": {"login": "yupeng9"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -66,6 +66,9 @@\n   private TimeFieldSpec _timeFieldSpec;\n   private final List<DateTimeFieldSpec> _dateTimeFieldSpecs = new ArrayList<>();\n   private final List<ComplexFieldSpec> _complexFieldSpecs = new ArrayList<>();\n+  // names of the columns that used as primary keys\n+  // TODO: add validation checks like duplicate columns and use of time column\n+  private List<String> _primaryKeyColumns;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTA2NA=="}, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDU5MDY2OnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/UpsertConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMTo1MTo0MVrOHb-9vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMjoyNzozNVrOHb_H3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTIxMg==", "bodyText": "Recommend not putting NONE as a mode. Upsert is disabled when the UpsertConfig is null in the table config (more intuitive IMO)", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499105212", "createdAt": "2020-10-03T01:51:41Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/UpsertConfig.java", "diffHunk": "@@ -27,44 +27,22 @@\n \n \n public class UpsertConfig extends BaseJsonConfig {\n-  // names of the columns that used as primary keys of an upsert table\n-  private final List<String> _primaryKeyColumns;\n-  // name of the column that we are going to store the offset value to\n-  private final String _offsetColumn;\n-  // name of the virtual column that we are going to store the validFrom value to\n-  private final String _validFromColumn;\n-  // name of the virtual column that we are going to store the validUntil value to\n-  private final String _validUntilColumn;\n+  public static final String MODE_KEY = \"mode\";\n \n-  @JsonCreator\n-  public UpsertConfig(@JsonProperty(value = \"primaryKeyColumns\") List<String> primaryKeyColumns,\n-      @JsonProperty(value = \"offsetColumn\") String offsetColumn,\n-      @JsonProperty(value = \"validFromColumn\") String validFromColumn,\n-      @JsonProperty(value = \"validUntilColumn\") String validUntilColumn) {\n-    Preconditions.checkArgument(primaryKeyColumns != null && primaryKeyColumns.size() == 1,\n-        \"'primaryKeyColumns' must be configured with exact one column\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(offsetColumn), \"'offsetColumn' must be configured\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(validFromColumn), \"'validFromColumn' must be configured\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(validUntilColumn), \"'validUntilColumn' must be configured\");\n-    _primaryKeyColumns = primaryKeyColumns;\n-    _offsetColumn = offsetColumn;\n-    _validFromColumn = validFromColumn;\n-    _validUntilColumn = validUntilColumn;\n+  public enum Mode {\n+    FULL, PARTIAL, NONE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNzgwNQ==", "bodyText": "In the implementation, it's more clearer (and easier) to have a value to represent that upsert is disabled. Also, when UpsertConfig is null, it implies the mode is NONE", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499107805", "createdAt": "2020-10-03T02:27:35Z", "author": {"login": "yupeng9"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/UpsertConfig.java", "diffHunk": "@@ -27,44 +27,22 @@\n \n \n public class UpsertConfig extends BaseJsonConfig {\n-  // names of the columns that used as primary keys of an upsert table\n-  private final List<String> _primaryKeyColumns;\n-  // name of the column that we are going to store the offset value to\n-  private final String _offsetColumn;\n-  // name of the virtual column that we are going to store the validFrom value to\n-  private final String _validFromColumn;\n-  // name of the virtual column that we are going to store the validUntil value to\n-  private final String _validUntilColumn;\n+  public static final String MODE_KEY = \"mode\";\n \n-  @JsonCreator\n-  public UpsertConfig(@JsonProperty(value = \"primaryKeyColumns\") List<String> primaryKeyColumns,\n-      @JsonProperty(value = \"offsetColumn\") String offsetColumn,\n-      @JsonProperty(value = \"validFromColumn\") String validFromColumn,\n-      @JsonProperty(value = \"validUntilColumn\") String validUntilColumn) {\n-    Preconditions.checkArgument(primaryKeyColumns != null && primaryKeyColumns.size() == 1,\n-        \"'primaryKeyColumns' must be configured with exact one column\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(offsetColumn), \"'offsetColumn' must be configured\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(validFromColumn), \"'validFromColumn' must be configured\");\n-    Preconditions.checkArgument(StringUtils.isNotEmpty(validUntilColumn), \"'validUntilColumn' must be configured\");\n-    _primaryKeyColumns = primaryKeyColumns;\n-    _offsetColumn = offsetColumn;\n-    _validFromColumn = validFromColumn;\n-    _validUntilColumn = validUntilColumn;\n+  public enum Mode {\n+    FULL, PARTIAL, NONE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTIxMg=="}, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDU5MDkwOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/TableConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMTo1MTo1N1rOHb-92g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMjoyNzo1M1rOHb_H9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTI0Mg==", "bodyText": "Not sure if this method is needed", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499105242", "createdAt": "2020-10-03T01:51:57Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/TableConfig.java", "diffHunk": "@@ -265,4 +266,9 @@ public void setIngestionConfig(IngestionConfig ingestionConfig) {\n   public void setTierConfigsList(List<TierConfig> tierConfigsList) {\n     _tierConfigsList = tierConfigsList;\n   }\n+\n+  @JsonIgnore\n+  public UpsertConfig.Mode getUpsertMode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNzgzMA==", "bodyText": "yes, in the upcoming PRs", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499107830", "createdAt": "2020-10-03T02:27:53Z", "author": {"login": "yupeng9"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/config/table/TableConfig.java", "diffHunk": "@@ -265,4 +266,9 @@ public void setIngestionConfig(IngestionConfig ingestionConfig) {\n   public void setTierConfigsList(List<TierConfig> tierConfigsList) {\n     _tierConfigsList = tierConfigsList;\n   }\n+\n+  @JsonIgnore\n+  public UpsertConfig.Mode getUpsertMode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwNTI0Mg=="}, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEzMzY5OnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxOTowMjoxMlrOHcDH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxOTowMjoxMlrOHcDH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzM2NQ==", "bodyText": "(nit) put getter before setter for consistency", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499173365", "createdAt": "2020-10-03T19:02:12Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -99,6 +102,14 @@ public void setSchemaName(String schemaName) {\n     _schemaName = schemaName;\n   }\n \n+  public void setPrimaryKeyColumns(List<String> primaryKeyColumns) {\n+    _primaryKeyColumns = primaryKeyColumns;\n+  }\n+\n+  public List<String> getPrimaryKeyColumns() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEzNDgwOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxOTowNDowMlrOHcDIfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxOTowNDowMlrOHcDIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzUwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public SchemaBuilder addPrimaryKeyColumns(List<String> primaryKeyColumns) {\n          \n          \n            \n                public SchemaBuilder setPrimaryKeyColumns(List<String> primaryKeyColumns) {", "url": "https://github.com/apache/pinot/pull/6096#discussion_r499173500", "createdAt": "2020-10-03T19:04:02Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -558,6 +576,11 @@ public SchemaBuilder addComplex(String name, DataType dataType) {\n       return this;\n     }\n \n+    public SchemaBuilder addPrimaryKeyColumns(List<String> primaryKeyColumns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a411fbca49f0aa0d22f12cfac145313a9fa1ba"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3692, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}