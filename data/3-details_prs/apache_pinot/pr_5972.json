{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MDgzODIy", "number": 5972, "title": "[TE] add threshold-based anomaly labeler", "bodyText": "This PR is the first part of adding anomaly labeler for better alerting ThirdEye users. It adds a labeling phase and a threshold-based labeler. The next PR is to add logic of translating YAML to JSON config.", "createdAt": "2020-09-03T23:10:45Z", "url": "https://github.com/apache/pinot/pull/5972", "merged": true, "mergeCommit": {"oid": "aa6d48f183a6e7fd7c3c09e71bd165926da561aa"}, "closed": true, "closedAt": "2020-09-09T00:05:17Z", "author": {"login": "vincentchenjl"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFYX5mgH2gAyNDc5MDgzODIyOmVkNTA5ZDYwOWRiNDRkMjkxNWVlNWU0NmI1ZWZjOGU4OTgyODc4ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHkNAxAFqTQ4NjE1NDQyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed509d609db44d2915ee5e46b5efc8e898287884", "author": {"user": {"login": "vincentchenjl", "name": "Vincent Chen"}}, "url": "https://github.com/apache/pinot/commit/ed509d609db44d2915ee5e46b5efc8e898287884", "committedDate": "2020-09-03T22:30:41Z", "message": "[TE] add threshold-based anomaly labeler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Mzk2OTIx", "url": "https://github.com/apache/pinot/pull/5972#pullrequestreview-484396921", "createdAt": "2020-09-08T18:34:52Z", "commit": {"oid": "ed509d609db44d2915ee5e46b5efc8e898287884"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODozNDo1MlrOHOpU2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODozNDo1MlrOHOpU2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExOTE5Mg==", "bodyText": "let's make the type field follow the existing convention, like THRESHOLD_SEVERITY_LABELER", "url": "https://github.com/apache/pinot/pull/5972#discussion_r485119192", "createdAt": "2020-09-08T18:34:52Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/components/ThresholdSeverityLabeler.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.pinot.thirdeye.detection.components;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import org.apache.pinot.thirdeye.anomaly.AnomalySeverity;\n+import org.apache.pinot.thirdeye.datalayer.dto.MergedAnomalyResultDTO;\n+import org.apache.pinot.thirdeye.detection.InputDataFetcher;\n+import org.apache.pinot.thirdeye.detection.annotation.Components;\n+import org.apache.pinot.thirdeye.detection.annotation.DetectionTag;\n+import org.apache.pinot.thirdeye.detection.spec.SeverityThresholdLabelerSpec;\n+import org.apache.pinot.thirdeye.detection.spi.components.Labeler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.apache.pinot.thirdeye.detection.spec.SeverityThresholdLabelerSpec.Threshold;\n+\n+/**\n+ * Threshold-based severity labeler, which labels anomalies with severity based on deviation from baseline and duration\n+ * of the anomalies. It tries to label anomalies from highest to lowest if deviation or duration exceeds the threshold\n+ */\n+@Components(title = \"ThresholdSeverityLabeler\", type = \"threshold_severity_labeler\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed509d609db44d2915ee5e46b5efc8e898287884"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd9f64c17aea4f4e159e073b66cb7eb03a2f89a0", "author": {"user": {"login": "vincentchenjl", "name": "Vincent Chen"}}, "url": "https://github.com/apache/pinot/commit/fd9f64c17aea4f4e159e073b66cb7eb03a2f89a0", "committedDate": "2020-09-08T22:10:11Z", "message": "address comment and minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTcxOTE4", "url": "https://github.com/apache/pinot/pull/5972#pullrequestreview-484571918", "createdAt": "2020-09-09T00:05:06Z", "commit": {"oid": "fd9f64c17aea4f4e159e073b66cb7eb03a2f89a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTU0NDI2", "url": "https://github.com/apache/pinot/pull/5972#pullrequestreview-486154426", "createdAt": "2020-09-10T17:25:30Z", "commit": {"oid": "fd9f64c17aea4f4e159e073b66cb7eb03a2f89a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyNTozMFrOHP-UEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoyNTozMFrOHP-UEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxMTYzNA==", "bodyText": "These lines were removed in this change, which can be an issue.", "url": "https://github.com/apache/pinot/pull/5972#discussion_r486511634", "createdAt": "2020-09-10T17:25:30Z", "author": {"login": "jihaozh"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/AnomalyFilterWrapper.java", "diffHunk": "@@ -81,21 +80,7 @@ public final DetectionPipelineResult run() throws Exception {\n \n     Set<Long> lastTimeStamps = new HashSet<>();\n     for (Map<String, Object> properties : this.nestedProperties) {\n-      DetectionConfigDTO nestedConfig = new DetectionConfigDTO();\n-\n-      Preconditions.checkArgument(properties.containsKey(PROP_CLASS_NAME), \"Nested missing \" + PROP_CLASS_NAME);\n-      HashMap<String, Object> nestedProp = new HashMap<>(properties);\n-      if (this.metricUrn != null){\n-        nestedProp.put(PROP_METRIC_URN, this.metricUrn);\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9f64c17aea4f4e159e073b66cb7eb03a2f89a0"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1724, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}