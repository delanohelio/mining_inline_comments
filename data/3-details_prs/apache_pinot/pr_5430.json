{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzIxODk0", "number": 5430, "title": "One to many records from record reader/decoder", "bodyText": "Handles the case where a record reader generates multiple records in an invocation of next().\nNote: None of our record readers have the ability to generate multiple records yet. This change assumes a custom record reader has been plugged in, which is generating multiple records. The record reader should generate List<GenericRow> genericRecordsList, and put it in the the GenericRecord to, as,\nto.putValue(\"$MULTIPLE_RECORDS_KEY$\", genericRecordsList);", "createdAt": "2020-05-22T05:24:15Z", "url": "https://github.com/apache/pinot/pull/5430", "merged": true, "mergeCommit": {"oid": "2b09676ace59f737409348c184900d074e5e4051"}, "closed": true, "closedAt": "2020-06-09T20:01:33Z", "author": {"login": "npawar"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpFSZmABqjM0MTc0Nzg3Njk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpoTNtABqjM0MjU5OTQ5MzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62297997a97d8e5d9372648c92465755490d0234", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/62297997a97d8e5d9372648c92465755490d0234", "committedDate": "2020-05-28T19:31:09Z", "message": "Hard code for array"}, "afterCommit": {"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/e61a40248200e89c5f39ba0f2cda04743287a0dc", "committedDate": "2020-06-08T00:26:05Z", "message": "Multiple records from record reader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDc3Njk3", "url": "https://github.com/apache/pinot/pull/5430#pullrequestreview-426477697", "createdAt": "2020-06-08T17:51:02Z", "commit": {"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo1MTowMlrOGgpfXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDozNzowN1rOGgvf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzM5MA==", "bodyText": "is there a way to avoid creating this list. 99% will not have list.", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436887390", "createdAt": "2020-06-08T17:51:02Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java", "diffHunk": "@@ -466,19 +469,28 @@ private void processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeS\n               messagesAndOffsets.getMessageLengthAtIndex(index), reuse);\n       if (decodedRow != null) {\n         try {\n-          GenericRow transformedRow = _recordTransformer.transform(decodedRow);\n-\n-          if (transformedRow != null) {\n-            realtimeRowsConsumedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.REALTIME_ROWS_CONSUMED, 1, realtimeRowsConsumedMeter);\n-            indexedMessageCount++;\n+          List<GenericRow> transformedRows;\n+          if (decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY) != null) {\n+            transformedRows = new ArrayList<>();\n+            for (Object singleRow : (Collection) decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY)) {\n+              transformedRows.add(_recordTransformer.transform((GenericRow) singleRow));\n+            }\n           } else {\n-            realtimeRowsDroppedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.INVALID_REALTIME_ROWS_DROPPED, 1,\n-                    realtimeRowsDroppedMeter);\n+            transformedRows = Collections.singletonList(_recordTransformer.transform(decodedRow));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODIyOQ==", "bodyText": "maybe extract this method into collectRow similar to offline indexing and invoke it directly to avoid the penalty of creating a list", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436888229", "createdAt": "2020-06-08T17:52:26Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java", "diffHunk": "@@ -466,19 +469,28 @@ private void processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeS\n               messagesAndOffsets.getMessageLengthAtIndex(index), reuse);\n       if (decodedRow != null) {\n         try {\n-          GenericRow transformedRow = _recordTransformer.transform(decodedRow);\n-\n-          if (transformedRow != null) {\n-            realtimeRowsConsumedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.REALTIME_ROWS_CONSUMED, 1, realtimeRowsConsumedMeter);\n-            indexedMessageCount++;\n+          List<GenericRow> transformedRows;\n+          if (decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY) != null) {\n+            transformedRows = new ArrayList<>();\n+            for (Object singleRow : (Collection) decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY)) {\n+              transformedRows.add(_recordTransformer.transform((GenericRow) singleRow));\n+            }\n           } else {\n-            realtimeRowsDroppedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.INVALID_REALTIME_ROWS_DROPPED, 1,\n-                    realtimeRowsDroppedMeter);\n+            transformedRows = Collections.singletonList(_recordTransformer.transform(decodedRow));\n           }\n \n-          canTakeMore = _realtimeSegment.index(transformedRow, msgMetadata);\n+          for (GenericRow transformedRow : transformedRows) {\n+            if (transformedRow != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NTgyNg==", "bodyText": "put this in GenericRow?\nmultiple.records.key -> $MULTIPLE_RECORDS_KEY$ avoid '.'", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436985826", "createdAt": "2020-06-08T20:37:07Z", "author": {"login": "kishoreg"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -363,5 +363,7 @@\n \n     @Deprecated\n     public static final String TABLE_NAME = \"segment.table.name\";\n+\n+    public static final String MULTIPLE_RECORDS_KEY = \"multiple.records.key\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87e8a8fe8a00b85f7121a2f939289ea4bf752aa0", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/87e8a8fe8a00b85f7121a2f939289ea4bf752aa0", "committedDate": "2020-06-09T01:56:39Z", "message": "Record index time only if indexed"}, "afterCommit": {"oid": "1f7e59ce829aeca5ddecb80248841e6954e9da39", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/1f7e59ce829aeca5ddecb80248841e6954e9da39", "committedDate": "2020-06-09T02:06:38Z", "message": "Dont create arraylist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1af6960a5f533303bd34e60e34373ca3fbf0c2f", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/e1af6960a5f533303bd34e60e34373ca3fbf0c2f", "committedDate": "2020-06-09T17:13:45Z", "message": "Multiple records from record reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32f8c23c738ae1d1500e691038edefc50b0492e1", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/32f8c23c738ae1d1500e691038edefc50b0492e1", "committedDate": "2020-06-09T17:13:45Z", "message": "Dont create arraylist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f7e59ce829aeca5ddecb80248841e6954e9da39", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/1f7e59ce829aeca5ddecb80248841e6954e9da39", "committedDate": "2020-06-09T02:06:38Z", "message": "Dont create arraylist"}, "afterCommit": {"oid": "32f8c23c738ae1d1500e691038edefc50b0492e1", "author": {"user": {"login": "npawar", "name": "Neha Pawar"}}, "url": "https://github.com/apache/pinot/commit/32f8c23c738ae1d1500e691038edefc50b0492e1", "committedDate": "2020-06-09T17:13:45Z", "message": "Dont create arraylist"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 816, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}