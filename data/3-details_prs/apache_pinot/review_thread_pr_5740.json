{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDY0MDA3", "number": 5740, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1NjozN1rOERk2mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozNjozNFrOETCgDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY1MDUwOnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1NjozN1rOG2XhoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0MzoyOVrOG2_mOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2MTcyOA==", "bodyText": "I'd prefer keeping the template simple and put all the additional configurations in the user guide. Regular users need not know about these parameters.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459661728", "createdAt": "2020-07-23T18:56:37Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4MDg1MA==", "bodyText": "Hey @akshayrai\nI understand your point. The problem is that it is very hard for a regular user to get started on ThirdEye. These configurations are buried in the doc somewhere on a FAQ or you have to go through the code. I didn't know that there is a capability to add cron until someone else told me.\nI think a YAML interface may be good for advanced users who can have configurations saved in files/elsewhere. However for a regular user,  it might help to just have a simple UI with text boxes and dropdowns etc which have hints/prepopulated and are easy to use without the need for documentation.\nI added to the template here so that the user doesn't need to go find information elsewhere but is able to see it right within the app. I agree this makes the template more complex and that's the reason why I pushed it down at the bottom. Let me know what you think and I can revert the template changes.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459680850", "createdAt": "2020-07-23T19:32:39Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2MTcyOA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxODI2Ng==", "bodyText": "I understand. We too discussed this idea in the past, but the issue with this approach is that - There are several basic alert and subscription parameters which we might want to add to the template and this will simply keep growing over time making the config bigger and harder to read.\nTo help with this problem, the alternative we have taken is,\na. A link is provided in the create alert UI  (at the top) that should point to the documentation on the alert configs. (I can work on OS'ing this wiki if it isn't already)\nb. Eventually, we should have a full form UI through which all the basic features should be surfaced. The yaml config is more for advanced users who can refer to a doc and update the configs as required.\nSo, it would be better to keep the template simple and put the additional settings in the doc.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r460318266", "createdAt": "2020-07-24T22:43:29Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2MTcyOA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY3NDU1OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTowMzo0NlrOG2Xwkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NDo0NFrOG2_nWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NTU1NA==", "bodyText": "Can you shed some light on the need for a custom backfill configuration? Since this is a one time setting, I am not very confident of putting it in the detection config.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459665554", "createdAt": "2020-07-23T19:03:46Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MTkwMA==", "bodyText": "Agreed. But I found this to be the easiest way of having this capability without a larger change.\nSo, here is the use case: I uploaded a new dataset and I want to see the anomalies. I was unable to find a way to do this. Creating an alert would trigger detections for the past month but not before that. It is not configurable. And I couldn't find a way to just fire a detection from the UI.\nThis parameter allows the user to have the ability to use a default or choose a start time at the creation of the alert. I agree with you that creating an alert rule and running detection can be separated. This change sort of addresses the immediate requirement that allows users to upload their datasets and run detections on past data. Let me know what you think.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459691900", "createdAt": "2020-07-23T19:55:02Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NTU1NA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxODU1Mg==", "bodyText": "Couple of issues/suggestions\n\nThere is an api through which you can trigger a replay or backfill. You might want to consider exposing this api to the user. It is better to keep the alert creation independent of backfill. 30 days is hard-coded just to populate some metrics on the UI for users to play around.\nIf you haven't explored yet, there is a preview experience through which users can trigger detection on older data. However, this is adhoc and there is no option of saving the results. You can consider adding the option of persisting the results!", "url": "https://github.com/apache/pinot/pull/5740#discussion_r460318552", "createdAt": "2020-07-24T22:44:44Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections\n+# You can use the backfillStart parameter to denote how far back you want the anomalies\n+# to be detected.\n+# A valid entry is a timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.\n+# backfillStart: 0 ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NTU1NA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY3OTg5OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTowNToxM1rOG2Xztw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0Njo1NFrOG2_phA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NjM1OQ==", "bodyText": "The term backfill is a bit overloaded. It could also mean rerunning the detection which is not what is intended.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459666359", "createdAt": "2020-07-23T19:05:13Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4NjY4Ng==", "bodyText": "Yes. That is a side effect but it happens today anyway. Whenever, you create an alert, you run the detection for the past month every time. This parameter just exposes the ability to configure the same.\nBut I totally agree on having separate atomic APIs in the longer term for creating alerts, doing detections and saving them. Currently the preview runs detections but does not save them. Creating an alert also fires detections but doesn't allow configuring the detection. Also, it doesn't seem to be possible to create a new alert without triggering a detectionjob.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459686686", "createdAt": "2020-07-23T19:44:32Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NjM1OQ=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxOTEwOA==", "bodyText": "There are apis for each one of them. I will consider documenting it.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r460319108", "createdAt": "2020-07-24T22:46:54Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Backfill detections", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2NjM1OQ=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY4ODg5OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTowNzo1MlrOG2X5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NTozNlrOG2_oQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Nzc3MA==", "bodyText": "@harleyjj\nCan we customize and configure the default template? At LinkedIn, we are relying on ALGORITHM as the default detection. If we change this, we need to have an alternative to plug a different default setting.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459667770", "createdAt": "2020-07-23T19:07:52Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -12,12 +12,11 @@ dataset: dataset_to_which_this_metric_belongs\n rules:\n - detection:\n   - name: detection_rule_1\n-    type: ALGORITHM             # Configure the detection type here. See doc for more details.\n+    type: PERCENTAGE_RULE       # Configure the detection type here. See doc for more details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4MTUzMQ==", "bodyText": "Hey @akshayrai\nALGORITHM doesn't seem to work in open source. It says type not found. I changed it so that we can have a default that users can use out of the box.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459681531", "createdAt": "2020-07-23T19:34:08Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -12,12 +12,11 @@ dataset: dataset_to_which_this_metric_belongs\n rules:\n - detection:\n   - name: detection_rule_1\n-    type: ALGORITHM             # Configure the detection type here. See doc for more details.\n+    type: PERCENTAGE_RULE       # Configure the detection type here. See doc for more details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Nzc3MA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4ODg0Mw==", "bodyText": "I think we can move these templates into the environment.js file here and then different users can configure their own default templates for detection and subscription group yaml configurations.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459688843", "createdAt": "2020-07-23T19:49:00Z", "author": {"login": "harleyjj"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -12,12 +12,11 @@ dataset: dataset_to_which_this_metric_belongs\n rules:\n - detection:\n   - name: detection_rule_1\n-    type: ALGORITHM             # Configure the detection type here. See doc for more details.\n+    type: PERCENTAGE_RULE       # Configure the detection type here. See doc for more details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Nzc3MA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMjczOQ==", "bodyText": "@harleyjj @akshayrai\nWe could keep the default setting for now if it helps and come up with a plan. I did this now since I thought that have a working default setting would be easier for a user to get started.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459702739", "createdAt": "2020-07-23T20:16:21Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -12,12 +12,11 @@ dataset: dataset_to_which_this_metric_belongs\n rules:\n - detection:\n   - name: detection_rule_1\n-    type: ALGORITHM             # Configure the detection type here. See doc for more details.\n+    type: PERCENTAGE_RULE       # Configure the detection type here. See doc for more details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Nzc3MA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxODc4Ng==", "bodyText": "Yes, we should pull this out into a config. @suvodeep-pyne, feel free to update this or we can do it at a later stage.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r460318786", "createdAt": "2020-07-24T22:45:36Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -12,12 +12,11 @@ dataset: dataset_to_which_this_metric_belongs\n rules:\n - detection:\n   - name: detection_rule_1\n-    type: ALGORITHM             # Configure the detection type here. See doc for more details.\n+    type: PERCENTAGE_RULE       # Configure the detection type here. See doc for more details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2Nzc3MA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY5Nzg0OnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/translator/DetectionConfigTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOToxMDo0N1rOG2X-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTozOTozNFrOG2Y5uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2OTIxOA==", "bodyText": "I think we already have a utility for this. Can you try MapUtils or ConfigUtils?", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459669218", "createdAt": "2020-07-23T19:10:47Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/translator/DetectionConfigTranslator.java", "diffHunk": "@@ -189,6 +190,7 @@ private DetectionConfigDTO generateDetectionConfig(Map<String, Object> yamlConfi\n     config.setCron(cron);\n     config.setActive(MapUtils.getBooleanValue(yamlConfigMap, PROP_ACTIVE, true));\n     config.setYaml(yamlConfig);\n+    config.setBackfillStart(parseTimeStampLong(yamlConfigMap.get(PROP_BACKFILL_START)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4NDI4Mw==", "bodyText": "I found org.apache.pinot.thirdeye.detection.ConfigUtils#getLongs(java.util.Collection<java.lang.Number>) but that takes a list and has a slightly different behavior which would require me to have a separate method anyway.\nAre you aware of any other utility? Please do share if you find something.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r459684283", "createdAt": "2020-07-23T19:39:34Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/translator/DetectionConfigTranslator.java", "diffHunk": "@@ -189,6 +190,7 @@ private DetectionConfigDTO generateDetectionConfig(Map<String, Object> yamlConfi\n     config.setCron(cron);\n     config.setActive(MapUtils.getBooleanValue(yamlConfigMap, PROP_ACTIVE, true));\n     config.setYaml(yamlConfig);\n+    config.setBackfillStart(parseTimeStampLong(yamlConfigMap.get(PROP_BACKFILL_START)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2OTIxOA=="}, "originalCommit": {"oid": "7605d031307b833f70003076d0affe5cb6f0a3be"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk0NjkzOnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozOTo0NlrOG4Zlkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozOTo0NlrOG4Zlkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjY1OQ==", "bodyText": "Couple of concerns with backfilling all the data:\n\nBackfilling all the data can take quite some time, especially if there are years worth of data and possibly even fail due to timeout and other issues.\nThere isn't much benefit of backfilling older data. Users usually don't care about historical anomalies/issues, at least not older than a month.\nThe goal of the 30 day default backfill is to quickly show some stats and recent anomalies as soon as the alert is created. Otherwise, the alert page will look empty and users have to revisit after some time.\nTypically, users tend to create an alert using the basic settings and update it later on. When they update,  anomalies created using the initial setting will no longer make sense.\n\nWe could increase the default limit from 30 days to say 90 days if that is more reasonable?", "url": "https://github.com/apache/pinot/pull/5740#discussion_r461792659", "createdAt": "2020-07-28T18:39:46Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/utils/yaml-tools.js", "diffHunk": "@@ -29,6 +28,20 @@ rules:\n     type: DATA_SLA              # Alert if data is missing.\n     params:\n       sla: 3_DAYS               # Data is missing for 3 days since last availability\n+\n+# You can mention a cron to allow this detection to be run periodically\n+# For example, the cron below would execute every 5 minutes.\n+# cron: \"0 0/5 * 1/1 * ? *\"\n+\n+# Detections in past data\n+# You can use the lastTimestamp parameter to denote how far back you want the anomalies\n+# to be detected. This value acts like a checkpoint or high watermark. \n+# A valid entry is a non negative timestamp value in millis.\n+# \n+# - By default, (if not mentioned), the lookback is 30 days\n+# - A value of 0 (zero) implies complete backfill till the start of data. As shown below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de9f1a0f435bd8deaf0fe6dcb2b77c8d05b212a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mzk5MzczOnYy", "diffSide": "RIGHT", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozNjozNFrOG4jZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMjozMDoxMVrOG4mUNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MzMxOQ==", "bodyText": "Since the default value of lastTimestamp will be 0 (when not set), we should probably change this condition here to not trigger detection on the entire dataset.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r461953319", "createdAt": "2020-07-28T23:36:34Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -236,10 +236,17 @@ private void createYamlOnboardingTask(long configId, long tuningWindowStart, lon\n     info.setTuningWindowStart(tuningWindowStart);\n     info.setTuningWindowEnd(tuningWindowEnd);\n     info.setEnd(System.currentTimeMillis());\n-    info.setStart(info.getEnd() - ONBOARDING_REPLAY_LOOKBACK);\n+\n+    long lastTimestamp = detectionConfig.getLastTimestamp();\n+    // If no value is present, set the default lookback\n+    if (lastTimestamp < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab60e7196ec13a3c755f7a35c514beced82ad7b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwMTIwNw==", "bodyText": "Hey @akshayrai\nDuring org.apache.pinot.thirdeye.detection.yaml.translator.DetectionConfigTranslator#generateDetectionConfig, the default is always set to -1 in which case, it is set to 30 days before current time. ref: org/apache/pinot/thirdeye/detection/yaml/YamlResource.java:242\nI can simplify that a bit but then the YamlResource default needs to accessed from the translator which I found to be a bit confusing.", "url": "https://github.com/apache/pinot/pull/5740#discussion_r462001207", "createdAt": "2020-07-29T02:30:11Z", "author": {"login": "suvodeep-pyne"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -236,10 +236,17 @@ private void createYamlOnboardingTask(long configId, long tuningWindowStart, lon\n     info.setTuningWindowStart(tuningWindowStart);\n     info.setTuningWindowEnd(tuningWindowEnd);\n     info.setEnd(System.currentTimeMillis());\n-    info.setStart(info.getEnd() - ONBOARDING_REPLAY_LOOKBACK);\n+\n+    long lastTimestamp = detectionConfig.getLastTimestamp();\n+    // If no value is present, set the default lookback\n+    if (lastTimestamp < 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MzMxOQ=="}, "originalCommit": {"oid": "aab60e7196ec13a3c755f7a35c514beced82ad7b"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4194, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}