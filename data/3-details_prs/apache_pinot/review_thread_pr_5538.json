{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzUyNTMw", "number": 5538, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjo1NToyNVrOEFuS2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjo1NToyNVrOEFuS2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDM2ODI3OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/executor/ServerQueryExecutorV1Impl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjo1NToyNVrOGkFbSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMzo0NDo0MVrOGkGW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MDgyNg==", "bodyText": "Is this because of step by step migration to QueryContext? We have already converted BrokerRequest to QueryContext at this point but for code that hasn't yet switched to QueryContext, a backward reference to broker request is still maintained inside QueryRequest to help with components that will still use BrokerRequest. Is this correct?", "url": "https://github.com/apache/pinot/pull/5538#discussion_r440490826", "createdAt": "2020-06-15T22:55:25Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/executor/ServerQueryExecutorV1Impl.java", "diffHunk": "@@ -205,8 +205,9 @@ public DataTable processQuery(ServerQueryRequest queryRequest, ExecutorService e\n         metadata.put(DataTable.NUM_SEGMENTS_MATCHED, \"0\");\n       } else {\n         TimerContext.Timer planBuildTimer = timerContext.startNewPhaseTimer(ServerQueryPhase.BUILD_QUERY_PLAN);\n-        Plan globalQueryPlan =\n-            _planMaker.makeInterSegmentPlan(segmentDataManagers, brokerRequest, executorService, remainingTimeMs);\n+        Plan globalQueryPlan = _planMaker\n+            .makeInterSegmentPlan(segmentDataManagers, queryContext.getBrokerRequest(), executorService,\n+                remainingTimeMs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8506b7c04b9ceab935fcbceab9c3d224683524"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5OTUxMA==", "bodyText": "@siddharthteotia Yes. I'll replace BrokerRequest with QueryContext step by step so that each PR won't be too big. Replacing BrokerRequest with QueryContext in PlanNode will be next step.", "url": "https://github.com/apache/pinot/pull/5538#discussion_r440499510", "createdAt": "2020-06-15T23:23:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/executor/ServerQueryExecutorV1Impl.java", "diffHunk": "@@ -205,8 +205,9 @@ public DataTable processQuery(ServerQueryRequest queryRequest, ExecutorService e\n         metadata.put(DataTable.NUM_SEGMENTS_MATCHED, \"0\");\n       } else {\n         TimerContext.Timer planBuildTimer = timerContext.startNewPhaseTimer(ServerQueryPhase.BUILD_QUERY_PLAN);\n-        Plan globalQueryPlan =\n-            _planMaker.makeInterSegmentPlan(segmentDataManagers, brokerRequest, executorService, remainingTimeMs);\n+        Plan globalQueryPlan = _planMaker\n+            .makeInterSegmentPlan(segmentDataManagers, queryContext.getBrokerRequest(), executorService,\n+                remainingTimeMs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MDgyNg=="}, "originalCommit": {"oid": "7a8506b7c04b9ceab935fcbceab9c3d224683524"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwNjA3Mw==", "bodyText": "Got it. Thanks.", "url": "https://github.com/apache/pinot/pull/5538#discussion_r440506073", "createdAt": "2020-06-15T23:44:41Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/executor/ServerQueryExecutorV1Impl.java", "diffHunk": "@@ -205,8 +205,9 @@ public DataTable processQuery(ServerQueryRequest queryRequest, ExecutorService e\n         metadata.put(DataTable.NUM_SEGMENTS_MATCHED, \"0\");\n       } else {\n         TimerContext.Timer planBuildTimer = timerContext.startNewPhaseTimer(ServerQueryPhase.BUILD_QUERY_PLAN);\n-        Plan globalQueryPlan =\n-            _planMaker.makeInterSegmentPlan(segmentDataManagers, brokerRequest, executorService, remainingTimeMs);\n+        Plan globalQueryPlan = _planMaker\n+            .makeInterSegmentPlan(segmentDataManagers, queryContext.getBrokerRequest(), executorService,\n+                remainingTimeMs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MDgyNg=="}, "originalCommit": {"oid": "7a8506b7c04b9ceab935fcbceab9c3d224683524"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4296, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}