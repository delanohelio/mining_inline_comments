{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NzM4ODU5", "number": 6112, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDo0MDoyNlrOEq-Cqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNDoxMjowOVrOEsPvEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkyMTM4OnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDo0MDoyNlrOHdepIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyNzo0MVrOHexBvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjgwMw==", "bodyText": "Please reformat this", "url": "https://github.com/apache/pinot/pull/6112#discussion_r500672803", "createdAt": "2020-10-07T00:40:26Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -499,6 +499,15 @@ public SchemaBuilder addSingleValueDimension(String dimensionName, DataType data\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, int maxLength,\n+                                                 Object defaultNullValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMjU5MA==", "bodyText": "Gotcha, thanks @Jackie-Jiang for code review.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502022590", "createdAt": "2020-10-08T21:27:41Z", "author": {"login": "deemoliu"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -499,6 +499,15 @@ public SchemaBuilder addSingleValueDimension(String dimensionName, DataType data\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, int maxLength,\n+                                                 Object defaultNullValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjgwMw=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDkyMjAzOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMDo0MDo0NFrOHdepiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyNzozN1rOHexBmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjkwNA==", "bodyText": "Reformat this", "url": "https://github.com/apache/pinot/pull/6112#discussion_r500672904", "createdAt": "2020-10-07T00:40:44Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -508,13 +517,22 @@ public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataT\n     }\n \n     /**\n-     * Add single value dimensionFieldSpec with defaultNullValue\n+     * Add multi value dimensionFieldSpec with defaultNullValue\n      */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, int maxLength,\n+                                                Object defaultNullValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMjU1Mw==", "bodyText": "Gotcha, thanks for code review.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502022553", "createdAt": "2020-10-08T21:27:37Z", "author": {"login": "deemoliu"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -508,13 +517,22 @@ public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataT\n     }\n \n     /**\n-     * Add single value dimensionFieldSpec with defaultNullValue\n+     * Add multi value dimensionFieldSpec with defaultNullValue\n      */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, int maxLength,\n+                                                Object defaultNullValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjkwNA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg2MzA1OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjowMTo0NVrOHd6lTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoyNDoxNVrOHgPGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA==", "bodyText": "Why do fixed length data types (BOOLEAN/int/float/etc) need maxLength? If not, then we should not allow setting max-length for those and only apply to variable length data types (String/Bytes).", "url": "https://github.com/apache/pinot/pull/6112#discussion_r501130574", "createdAt": "2020-10-07T16:01:45Z", "author": {"login": "mayankshriv"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE5MjY1Mw==", "bodyText": "Good point. The maxLength field only applies to STRING field right now (not even BYTES)", "url": "https://github.com/apache/pinot/pull/6112#discussion_r501192653", "createdAt": "2020-10-07T17:37:41Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMjUxMQ==", "bodyText": "Thanks @mayankshriv  @Jackie-Jiang for review. I will fix this test. Additional to that, do you suggest me to enforce configurable maxLength on String fields only?\nIs it possible that Pinot will support maxLength on other variable length data types in the future?\nIn our use case, we only allow user to set maxLength on String columns.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502022511", "createdAt": "2020-10-08T21:27:31Z", "author": {"login": "deemoliu"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MzU3NQ==", "bodyText": "@Jackie-Jiang How about multi-valued fixed length data types? E.g. Does maxLength applied to multi-value long fields?", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502043575", "createdAt": "2020-10-08T22:18:42Z", "author": {"login": "deemoliu"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc0MzE1Mg==", "bodyText": "@deemoliu The maxLength should only be applied to String field. The method names in Schema.java should reflect this as well. i.e., the method name should be addStringMetric().", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502743152", "createdAt": "2020-10-10T04:10:44Z", "author": {"login": "chenboat"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MTE3Ng==", "bodyText": "@chenboat @Jackie-Jiang thanks for the code review. I added precondition in Schema.java for dimension columns. Regarding metrics column, does METRIC column support String column?\nI think it should be supported according to https://docs.pinot.apache.org/configuration-reference/schema#metricfieldspecs\nHowever in the schema.java it weren't been supported.\nhttps://github.com/apache/incubator-pinot/blob/master/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java#L447", "url": "https://github.com/apache/pinot/pull/6112#discussion_r503541176", "createdAt": "2020-10-12T21:29:27Z", "author": {"login": "deemoliu"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MzIyMg==", "bodyText": "It looks like the doc is not in sync with the code. The code is usually the source of truth. For this PR, I think the update to METRICS column can be skipped.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r503563222", "createdAt": "2020-10-12T22:21:53Z", "author": {"login": "chenboat"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2Mzk1Nw==", "bodyText": "I see. Then I will remove the code related to \"metrics with max length\" (since maxlength ony applied to String and metrics columns cannot be string type) and only keep \"dimension with max length\".", "url": "https://github.com/apache/pinot/pull/6112#discussion_r503563957", "createdAt": "2020-10-12T22:24:15Z", "author": {"login": "deemoliu"}, "path": "pinot-common/src/test/java/org/apache/pinot/common/data/FieldSpecTest.java", "diffHunk": "@@ -80,6 +80,18 @@ public void testFieldSpec() {\n     Assert.assertEquals(fieldSpec1.hashCode(), fieldSpec2.hashCode());\n     Assert.assertEquals(fieldSpec1.getDefaultNullValue(), \"false\");\n \n+    // Single-value boolean type dimension field with max length and default null value.\n+    fieldSpec1 = new DimensionFieldSpec();\n+    fieldSpec1.setName(\"svDimension\");\n+    fieldSpec1.setDataType(BOOLEAN);\n+    fieldSpec1.setDefaultNullValue(false);\n+    fieldSpec1.setMaxLength(20000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3NA=="}, "originalCommit": {"oid": "92cca5b9106b0cde81579592a98e30c145e4d706"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODMwNjEwOnYy", "diffSide": "RIGHT", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNDoxMjowOVrOHfdA3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoxODowOFrOHgO_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc0MzI2MA==", "bodyText": "the maxLength should be applicable only to String type only as discussed earlier. You can add a Precondition Check here to make sure dataType is String.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r502743260", "createdAt": "2020-10-10T04:12:09Z", "author": {"login": "chenboat"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -499,6 +499,15 @@ public SchemaBuilder addSingleValueDimension(String dimensionName, DataType data\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, int maxLength,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27f43268f6f3a49b672f1b0131df4f032f5ee79c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MjA1Nw==", "bodyText": "gotcha, added precondition check. thanks for review.", "url": "https://github.com/apache/pinot/pull/6112#discussion_r503562057", "createdAt": "2020-10-12T22:18:08Z", "author": {"login": "deemoliu"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -499,6 +499,15 @@ public SchemaBuilder addSingleValueDimension(String dimensionName, DataType data\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with maxLength and a defaultNullValue\n+     */\n+    public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, int maxLength,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc0MzI2MA=="}, "originalCommit": {"oid": "27f43268f6f3a49b672f1b0131df4f032f5ee79c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3712, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}