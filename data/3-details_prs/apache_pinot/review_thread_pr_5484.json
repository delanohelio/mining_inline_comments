{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzE4ODY3", "number": 5484, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNDoyN1rOECRjUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNTo1NFrOECRlNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODIwMTc2OnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNDoyN1rOGeofEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNDoyN1rOGeofEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3Mzc3Nw==", "bodyText": "update the javadoc for streamdecoder with the new contract", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434773777", "createdAt": "2020-06-03T18:34:27Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -39,10 +42,15 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    for (String fieldName : _fields) {\n-      Object value = from.get(fieldName);\n-      Object convertedValue = AvroUtils.convert(value);\n-      to.putValue(fieldName, convertedValue);\n+    if (_fields == null || _fields.isEmpty()) { // extract all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f45938d108460d55b776198292741de65b7572"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODIwNjYzOnYy", "diffSide": "RIGHT", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNTo1NFrOGeoiNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDoxNzowNFrOGer05A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NDU4Mw==", "bodyText": "since we know this in the init, can we set a final boolean _extractAll? jvm might be able to optimize it.", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434774583", "createdAt": "2020-06-03T18:35:54Z", "author": {"login": "kishoreg"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -39,10 +42,15 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    for (String fieldName : _fields) {\n-      Object value = from.get(fieldName);\n-      Object convertedValue = AvroUtils.convert(value);\n-      to.putValue(fieldName, convertedValue);\n+    if (_fields == null || _fields.isEmpty()) { // extract all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f45938d108460d55b776198292741de65b7572"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyODUxNg==", "bodyText": "done", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434828516", "createdAt": "2020-06-03T20:17:04Z", "author": {"login": "npawar"}, "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -39,10 +42,15 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    for (String fieldName : _fields) {\n-      Object value = from.get(fieldName);\n-      Object convertedValue = AvroUtils.convert(value);\n-      to.putValue(fieldName, convertedValue);\n+    if (_fields == null || _fields.isEmpty()) { // extract all", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NDU4Mw=="}, "originalCommit": {"oid": "11f45938d108460d55b776198292741de65b7572"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4519, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}