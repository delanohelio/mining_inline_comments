{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjcyOTE1", "number": 5724, "title": "Enable/disable query quotas per broker", "bodyText": "Description\nThis PR adds logic to enable/disable query quotas per Pinot broker.\nThis is helpful to test out the capacity of a given broker without affecting other brokers in production. Higher load can be routed to this dedicated host to find out the capacity, which can give us better insights on the current provisioning of the cluster. LinkedIn currently has one service that has been testing in this way.\nThe query quotas are all enabled/disabled together within a broker. Once the broker gets restarted, query quotas would all be re-enabled again whatever the previous states were before.\nTests done:\nStarted all Pinot components.\nBroker log:\n2020/07/21 15:07:57.813 INFO [HelixExternalViewBasedQueryQuotaManager] [HelixTaskExecutor-message_handle_thread] Initializing rate limiter for table internalTesting_OFFLINE\n2020/07/21 15:07:57.813 INFO [HelixExternalViewBasedQueryQuotaManager] [HelixTaskExecutor-message_handle_thread] The number of online brokers for table internalTesting_OFFLINE is 1\n2020/07/21 15:07:57.816 INFO [HelixExternalViewBasedQueryQuotaManager] [HelixTaskExecutor-message_handle_thread] Rate limiter for table: internalTesting_OFFLINE has been initialized. Overall rate: 0.01. Per-broker rate: 0.01. Number of online broker instances: 1. Table config stat version: 0\n...\n2020/07/21 15:08:32.297 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-5] requestId=6,table=internalTesting_OFFLINE,timeMs=14,docs=20/970,entries=0/480,segments(queried/processed/matched/consuming/unavailable):1/1/1/0/0,consumingFreshnessTimeMs=0,servers=1/1,groupLimitReached=false,exceptions=0,serverStats=(Server=SubmitDelayMs,ResponseDelayMs,ResponseSize,DeserializationTimeMs);172.18.180.84_O=2,9,4515,1,query=select * from internalTesting limit 20\n2020/07/21 15:08:33.415 INFO [HelixExternalViewBasedQueryQuotaManager] [jersey-server-managed-async-executor-6] Quota is exceeded for table: internalTesting_OFFLINE. Per-broker rate: 0.01. Current qps: 1\n2020/07/21 15:08:33.415 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-6] Request 7 exceeds query quota for table:internalTesting, query:select * from internalTesting limit 20\n2020/07/21 15:08:45.776 INFO [HelixExternalViewBasedQueryQuotaManager] [jersey-server-managed-async-executor-7] Quota is exceeded for table: internalTesting_OFFLINE. Per-broker rate: 0.01. Current qps: 1\n2020/07/21 15:08:45.776 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-7] Request 8 exceeds query quota for table:internalTesting, query:select * from internalTesting limit 30\n\nMake the API call to disable query quotas:\ncurl 'http://localhost:9000/brokers/instances/Broker_blabla_8099/qps?state=DISABLE' -X 'POST'\n2020/07/21 15:08:51.313 INFO [ClusterChangeMediator] [ZkClient-EventThread-16-localhost:2181] Enqueue INSTANCE_CONFIG change\n2020/07/21 15:08:51.314 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Start processing INSTANCE_CONFIG change\n2020/07/21 15:08:51.314 INFO [RoutingManager] [ClusterChangeHandlingThread] Processing instance config change\n2020/07/21 15:08:51.335 INFO [RoutingManager] [ClusterChangeHandlingThread] Processed instance config change in 21ms (fetch 3 instance configs: 21ms, calculate changed instances: 0ms) without instance change\n2020/07/21 15:08:51.335 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish handling INSTANCE_CONFIG change for handler: org.apache.pinot.broker.routing.RoutingManager in 21ms\n2020/07/21 15:08:51.363 INFO [HelixExternalViewBasedQueryQuotaManager] [ClusterChangeHandlingThread] Set query quota state to: DISABLE for 1 tables in the current broker.\n2020/07/21 15:08:51.363 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish handling INSTANCE_CONFIG change for handler: org.apache.pinot.broker.queryquota.HelixExternalViewBasedQueryQuotaManager in 28ms\n2020/07/21 15:08:51.363 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish processing INSTANCE_CONFIG change in 49ms\n2020/07/21 15:08:53.669 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-7] requestId=9,table=internalTesting_OFFLINE,timeMs=15,docs=30/970,entries=0/720,segments(queried/processed/matched/consuming/unavailable):1/1/1/0/0,consumingFreshnessTimeMs=0,servers=1/1,groupLimitReached=false,exceptions=0,serverStats=(Server=SubmitDelayMs,ResponseDelayMs,ResponseSize,DeserializationTimeMs);172.18.180.84_O=0,11,6275,0,query=select * from internalTesting limit 30\n2020/07/21 15:08:57.637 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-7] requestId=10,table=internalTesting_OFFLINE,timeMs=14,docs=40/970,entries=0/960,segments(queried/processed/matched/consuming/unavailable):1/1/1/0/0,consumingFreshnessTimeMs=0,servers=1/1,groupLimitReached=false,exceptions=0,serverStats=(Server=SubmitDelayMs,ResponseDelayMs,ResponseSize,DeserializationTimeMs);172.18.180.84_O=0,10,8036,0,query=select * from internalTesting limit 40\n\nRe-enable query quotas:\ncurl 'http://localhost:9000/brokers/instances/Broker_blabla_8099/qps?state=ENABLE' -X 'POST'\n2020/07/21 15:09:05.877 INFO [ClusterChangeMediator] [ZkClient-EventThread-16-localhost:2181] Enqueue INSTANCE_CONFIG change\n2020/07/21 15:09:05.878 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Start processing INSTANCE_CONFIG change\n2020/07/21 15:09:05.878 INFO [RoutingManager] [ClusterChangeHandlingThread] Processing instance config change\n2020/07/21 15:09:05.898 INFO [RoutingManager] [ClusterChangeHandlingThread] Processed instance config change in 20ms (fetch 3 instance configs: 20ms, calculate changed instances: 0ms) without instance change\n2020/07/21 15:09:05.898 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish handling INSTANCE_CONFIG change for handler: org.apache.pinot.broker.routing.RoutingManager in 20ms\n2020/07/21 15:09:05.918 INFO [HelixExternalViewBasedQueryQuotaManager] [ClusterChangeHandlingThread] Set query quota state to: ENABLE for 1 tables in the current broker.\n2020/07/21 15:09:05.919 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish handling INSTANCE_CONFIG change for handler: org.apache.pinot.broker.queryquota.HelixExternalViewBasedQueryQuotaManager in 21ms\n2020/07/21 15:09:05.919 INFO [ClusterChangeMediator] [ClusterChangeHandlingThread] Finish processing INSTANCE_CONFIG change in 41ms\n2020/07/21 15:09:10.028 INFO [HelixExternalViewBasedQueryQuotaManager] [jersey-server-managed-async-executor-7] Quota is exceeded for table: internalTesting_OFFLINE. Per-broker rate: 0.01. Current qps: 1\n2020/07/21 15:09:10.028 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-7] Request 12 exceeds query quota for table:internalTesting, query:select * from internalTesting limit 50\n2020/07/21 15:09:10.920 INFO [HelixExternalViewBasedQueryQuotaManager] [jersey-server-managed-async-executor-7] Quota is exceeded for table: internalTesting_OFFLINE. Per-broker rate: 0.01. Current qps: 2\n2020/07/21 15:09:10.920 INFO [BaseBrokerRequestHandler] [jersey-server-managed-async-executor-7] Request 13 exceeds query quota for table:internalTesting, query:select * from internalTesting limit 50", "createdAt": "2020-07-21T18:26:28Z", "url": "https://github.com/apache/pinot/pull/5724", "merged": true, "mergeCommit": {"oid": "c71044c3833787c8bc1323c520e02b47ec94aba4"}, "closed": true, "closedAt": "2020-07-22T21:34:33Z", "author": {"login": "jackjlli"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3KW22AH2gAyNDU0NjcyOTE1OjgzYjY3NzcwMTRmNDA4YzU1MWIzMmI1ZTI4M2YxYzBmNDM3NGI0MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3hsqXAH2gAyNDU0NjcyOTE1OmM4ODgyZWIxYzBiY2FhMWQ3Mzc0NjljNDYwYmUzOGViNDc1YjcxNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "83b6777014f408c551b32b5e283f1c0f4374b400", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/83b6777014f408c551b32b5e283f1c0f4374b400", "committedDate": "2020-07-21T18:15:56Z", "message": "Enable/disable query quotas per broker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/d79eeb79ab75ff741bef40f1baa71c32e64f1480", "committedDate": "2020-07-21T22:13:28Z", "message": "Refactor to use instance config instead of Helix message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODgwODY2", "url": "https://github.com/apache/pinot/pull/5724#pullrequestreview-452880866", "createdAt": "2020-07-21T22:44:47Z", "commit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0NDo0N1rOG1MdbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo1NjoxMFrOG1Ms3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMTg1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",\n          \n          \n            \n                LOGGER.info(\"Set query rate limiting to: {} for all tables in this broker.\", _enabled ? \"ENABLED\" : \"DISABLED\",", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458431852", "createdAt": "2020-07-21T22:44:47Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n+    _enabled = Boolean.parseBoolean(queryQuotaEnabled);\n+    LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMjQzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String QUERY_QUOTA_STATE_ENABLED = \"queryQuotaStateEnabled\";\n          \n          \n            \n                public static final String QUERY_RATE_LIMIT_DISABLED = \"queryRateLimitDisabled\";\n          \n      \n    \n    \n  \n\nSince this is not the normal state, IMO it is better to highlight if this is disabled rather than enabled.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458432436", "createdAt": "2020-07-21T22:46:20Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -30,6 +30,7 @@\n   public static class Helix {\n     public static final String IS_SHUTDOWN_IN_PROGRESS = \"shutdownInProgress\";\n     public static final String QUERIES_DISABLED = \"queriesDisabled\";\n+    public static final String QUERY_QUOTA_STATE_ENABLED = \"queryQuotaStateEnabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMjk4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n          \n          \n            \n                String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"false\");", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458432987", "createdAt": "2020-07-21T22:47:52Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzMyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    _rateLimiterMap.size());\n          \n          \n            \n                    );\n          \n      \n    \n    \n  \n\nEven if new tables are added, query rate limiting check will not be done. Maybe you can add in the same message that there are currently N tables on this broker, but the log should clearly indicate that it is disabled for all tables", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458433328", "createdAt": "2020-07-21T22:48:52Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -359,6 +372,27 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {\n+    getQueryQuotaEnabledFlagFromInstanceConfig();\n+  }\n+\n+  private void getQueryQuotaEnabledFlagFromInstanceConfig() {\n+    Map<String, String> instanceConfigsMap =\n+        HelixHelper.getInstanceConfigsMapFor(_instanceId, _helixManager.getClusterName(),\n+            _helixManager.getClusterManagmentTool());\n+    String queryQuotaEnabled = instanceConfigsMap.getOrDefault(CommonConstants.Helix.QUERY_QUOTA_STATE_ENABLED, \"true\");\n+    _enabled = Boolean.parseBoolean(queryQuotaEnabled);\n+    LOGGER.info(\"Set query quota state to: {} for {} tables in the current broker.\", _enabled ? \"ENABLE\" : \"DISABLE\",\n+        _rateLimiterMap.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzk4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n          \n          \n            \n              @ApiOperation(value = \"Enable/disable the query rate limiting for a broker instance\", notes = \"Enable/disable the query rate limiting for a broker instance\")", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458433980", "createdAt": "2020-07-21T22:50:43Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDIzMA==", "bodyText": "What does 409 mean in this case?", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458434230", "createdAt": "2020-07-21T22:51:30Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNDYzMQ==", "bodyText": "Can you move this line down after the parameter checking? thanks", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458434631", "createdAt": "2020-07-21T22:52:42Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    List<String> liveInstances = _pinotHelixResourceManager.getOnlineInstanceList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNTM0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String msg = String.format(\"Toggled query quota state to: %s for broker: %s\", state, brokerInstanceName);\n          \n          \n            \n                String msg = String.format(\"Set query rate limiting to: %s for all tables in broker: %s\", state, brokerInstanceName);", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458435340", "createdAt": "2020-07-21T22:54:51Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    List<String> liveInstances = _pinotHelixResourceManager.getOnlineInstanceList();\n+    if (brokerInstanceName == null || !brokerInstanceName.startsWith(\"Broker_\")) {\n+      LOGGER.info(\"{} isn't a valid broker instance name\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER,\n+          String.format(\"'%s' is not a valid broker instance name.\", brokerInstanceName), Response.Status.BAD_REQUEST);\n+    }\n+    if (!liveInstances.contains(brokerInstanceName)) {\n+      LOGGER.info(\"Broker instance: {} not found from live instances\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER, String.format(\"Instance '%s' not found.\", brokerInstanceName),\n+          Response.Status.NOT_FOUND);\n+    }\n+    validateQueryQuotaStateChange(state);\n+    _pinotHelixResourceManager.toggleQueryQuotaStateForBroker(brokerInstanceName, state);\n+    String msg = String.format(\"Toggled query quota state to: %s for broker: %s\", state, brokerInstanceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzNTgwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public SuccessResponse toggleBrokerQpsState(\n          \n          \n            \n              public SuccessResponse toggleQueryRateLimiting(", "url": "https://github.com/apache/pinot/pull/5724#discussion_r458435804", "createdAt": "2020-07-21T22:56:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the qps quotas of an broker instance\", notes = \"Enable/disable the qps quotas of an broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 409, message = \"Instance cannot be dropped\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleBrokerQpsState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d79eeb79ab75ff741bef40f1baa71c32e64f1480"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f3b5842e66b6eeab390024da2afb47b332d5c60", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/7f3b5842e66b6eeab390024da2afb47b332d5c60", "committedDate": "2020-07-21T23:46:56Z", "message": "Address PR comments"}, "afterCommit": {"oid": "a6d5b1c41cd020f1c50509b2c1ada38e70595e9e", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/a6d5b1c41cd020f1c50509b2c1ada38e70595e9e", "committedDate": "2020-07-22T04:24:39Z", "message": "Address PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/f49108cbe4e25f6f3d9d178846844177946382b7", "committedDate": "2020-07-22T18:14:02Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6d5b1c41cd020f1c50509b2c1ada38e70595e9e", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/a6d5b1c41cd020f1c50509b2c1ada38e70595e9e", "committedDate": "2020-07-22T04:24:39Z", "message": "Address PR comments"}, "afterCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/f49108cbe4e25f6f3d9d178846844177946382b7", "committedDate": "2020-07-22T18:14:02Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNjkxMTE4", "url": "https://github.com/apache/pinot/pull/5724#pullrequestreview-453691118", "createdAt": "2020-07-22T21:15:58Z", "commit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxNTo1OFrOG10gzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMToxODoxNFrOG10lYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4ODA3OA==", "bodyText": "suggest renaming these two methods as per new change in config names", "url": "https://github.com/apache/pinot/pull/5724#discussion_r459088078", "createdAt": "2020-07-22T21:15:58Z", "author": {"login": "mcvsubbu"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -352,13 +369,42 @@ public void processQueryQuotaChange(ExternalView currentBrokerResource) {\n         numRebuilt++;\n       }\n     }\n+    if (isQueryRateLimitDisabled()) {\n+      LOGGER.info(\"Query rate limiting is currently disabled for this broker. So it won't take effect immediately.\");\n+    }\n     _lastKnownBrokerResourceVersion.set(currentVersionNumber);\n     long endTime = System.currentTimeMillis();\n     LOGGER\n         .info(\"Processed query quota change in {}ms, {} out of {} query quota configs rebuilt.\", (endTime - startTime),\n             numRebuilt, _rateLimiterMap.size());\n   }\n \n+  /**\n+   * Process query quota state change when instance config gets changed\n+   */\n+  public void processQueryQuotaInstanceConfigChange() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4OTI1MQ==", "bodyText": "nit: Create an error string, and then use it in log as well as exeption.\nSame in other places as well, will not repeat.", "url": "https://github.com/apache/pinot/pull/5724#discussion_r459089251", "createdAt": "2020-07-22T21:18:14Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotBrokerRestletResource.java", "diffHunk": "@@ -129,6 +133,40 @@\n     }\n   }\n \n+\n+  @POST\n+  @Path(\"/brokers/instances/{instanceName}/qps\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Consumes(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Enable/disable the query rate limiting for a broker instance\", notes = \"Enable/disable the query rate limiting for a broker instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 404, message = \"Instance not found\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse toggleQueryRateLimiting(\n+      @ApiParam(value = \"Broker instance name\", required = true, example = \"Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String brokerInstanceName,\n+      @ApiParam(value = \"ENABLE|DISABLE\", allowableValues = \"ENABLE, DISABLE\", required = true)  @QueryParam(\"state\") String state) {\n+    if (brokerInstanceName == null || !brokerInstanceName.startsWith(\"Broker_\")) {\n+      LOGGER.info(\"{} isn't a valid broker instance name\", brokerInstanceName);\n+      throw new ControllerApplicationException(LOGGER,\n+          String.format(\"'%s' is not a valid broker instance name.\", brokerInstanceName), Response.Status.BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49108cbe4e25f6f3d9d178846844177946382b7"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8882eb1c0bcaa1d737469c460be38eb475b7146", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/c8882eb1c0bcaa1d737469c460be38eb475b7146", "committedDate": "2020-07-22T21:27:34Z", "message": "Address PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 408, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}