{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MjA3NDEz", "number": 5018, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMjoyNlrODa49mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMToxNzoxMFrODbYBaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTIyODQzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/TransformFunctionFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMjoyNlrOFiD9iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoyNDowMlrOFiEXsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MDgxMQ==", "bodyText": "It\u2019s probably better to change the function name in calcite sql parser to match Pinot functions. This will restrict calcite classes to parsing", "url": "https://github.com/apache/pinot/pull/5018#discussion_r371260811", "createdAt": "2020-01-27T14:12:26Z", "author": {"login": "kishoreg"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/TransformFunctionFactory.java", "diffHunk": "@@ -49,6 +50,10 @@ private TransformFunctionFactory() {\n           put(SubtractionTransformFunction.FUNCTION_NAME.toLowerCase(), SubtractionTransformFunction.class);\n           put(MultiplicationTransformFunction.FUNCTION_NAME.toLowerCase(), MultiplicationTransformFunction.class);\n           put(DivisionTransformFunction.FUNCTION_NAME.toLowerCase(), DivisionTransformFunction.class);\n+          put(SqlKind.PLUS.name().toLowerCase(), AdditionTransformFunction.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226ed77f48592645240114f650cc382ccbef77d0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2NzUwNQ==", "bodyText": "I cannot refer AdditionTransformFunction.FUNCTION_NAME in CalciteSqlParser, as CalciteSqlParser is in pinot-common module, AdditionTransformFunction is in pinot-core module.\nAnother option here is that I can create a PlusTransformFunction extends AdditionTransformFunction, by just overriding the function name to plus", "url": "https://github.com/apache/pinot/pull/5018#discussion_r371267505", "createdAt": "2020-01-27T14:24:02Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/transform/function/TransformFunctionFactory.java", "diffHunk": "@@ -49,6 +50,10 @@ private TransformFunctionFactory() {\n           put(SubtractionTransformFunction.FUNCTION_NAME.toLowerCase(), SubtractionTransformFunction.class);\n           put(MultiplicationTransformFunction.FUNCTION_NAME.toLowerCase(), MultiplicationTransformFunction.class);\n           put(DivisionTransformFunction.FUNCTION_NAME.toLowerCase(), DivisionTransformFunction.class);\n+          put(SqlKind.PLUS.name().toLowerCase(), AdditionTransformFunction.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MDgxMQ=="}, "originalCommit": {"oid": "226ed77f48592645240114f650cc382ccbef77d0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY2MDA2OnYy", "diffSide": "RIGHT", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0Mzo1MlrOFiubOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDozOTo0MFrOFiztwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1NjUzOQ==", "bodyText": "could we add some more queries here which will cover all the arithmetic operators?", "url": "https://github.com/apache/pinot/pull/5018#discussion_r371956539", "createdAt": "2020-01-28T17:43:52Z", "author": {"login": "npawar"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "diffHunk": "@@ -176,6 +176,8 @@ public void testHardcodedSqlQueries()\n     testSqlQuery(query, Collections.singletonList(query));\n     query = \"SELECT DaysSinceEpoch, COUNT(*), MAX(ArrTime), MIN(ArrTime) FROM mytable GROUP BY DaysSinceEpoch\";\n     testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe5e90995ef602857d2e18a228b006676e76422"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0MzIwMg==", "bodyText": "added", "url": "https://github.com/apache/pinot/pull/5018#discussion_r372043202", "createdAt": "2020-01-28T20:39:40Z", "author": {"login": "xiangfu0"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "diffHunk": "@@ -176,6 +176,8 @@ public void testHardcodedSqlQueries()\n     testSqlQuery(query, Collections.singletonList(query));\n     query = \"SELECT DaysSinceEpoch, COUNT(*), MAX(ArrTime), MIN(ArrTime) FROM mytable GROUP BY DaysSinceEpoch\";\n     testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1NjUzOQ=="}, "originalCommit": {"oid": "9fe5e90995ef602857d2e18a228b006676e76422"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDMxNzIwOnYy", "diffSide": "RIGHT", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMToxNzoxMFrOFi04pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMToyNDo0NlrOFi1GZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA2MjM3Mw==", "bodyText": "Can we add tests for nested? e.g ADD(col1 + 5, col2), ADD(col1 * 5, col2)?\nAlso, expressions with parentheses?", "url": "https://github.com/apache/pinot/pull/5018#discussion_r372062373", "createdAt": "2020-01-28T21:17:10Z", "author": {"login": "siddharthteotia"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "diffHunk": "@@ -176,6 +176,14 @@ public void testHardcodedSqlQueries()\n     testSqlQuery(query, Collections.singletonList(query));\n     query = \"SELECT DaysSinceEpoch, COUNT(*), MAX(ArrTime), MIN(ArrTime) FROM mytable GROUP BY DaysSinceEpoch\";\n     testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime - ArrTime % 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime + ArrTime * 9 - ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2dd7785f2f26e525c93803f96fcbda126a92f4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA2NTg5NQ==", "bodyText": "added", "url": "https://github.com/apache/pinot/pull/5018#discussion_r372065895", "createdAt": "2020-01-28T21:24:46Z", "author": {"login": "xiangfu0"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTestSet.java", "diffHunk": "@@ -176,6 +176,14 @@ public void testHardcodedSqlQueries()\n     testSqlQuery(query, Collections.singletonList(query));\n     query = \"SELECT DaysSinceEpoch, COUNT(*), MAX(ArrTime), MIN(ArrTime) FROM mytable GROUP BY DaysSinceEpoch\";\n     testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime - ArrTime % 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));\n+    query = \"SELECT ArrTime, ArrTime + ArrTime * 9 - ArrTime * 10 FROM mytable WHERE DaysSinceEpoch >= 16312\";\n+    testSqlQuery(query, Collections.singletonList(query));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA2MjM3Mw=="}, "originalCommit": {"oid": "dd2dd7785f2f26e525c93803f96fcbda126a92f4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3646, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}