{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTM0NDM4", "number": 5217, "title": "Add tests for VALUEIN", "bodyText": "As we plan to migrate our internal users to SQL, adding few tests for non-SQL functions (VALUEIN etc) to ensure they are supported by SQL and the result is same as what we see in PQL.\n\n\nAdd Calcite SQL parser tests for native Pinot functions, transform functions, valuein etc\n\n\nAlso, add tests for resuult comparison for VALUEIN between PQL and SQL with/without ORDER BY", "createdAt": "2020-04-07T08:59:42Z", "url": "https://github.com/apache/pinot/pull/5217", "merged": true, "mergeCommit": {"oid": "6b1c10d2ad04e84b58383cb159682faea7bc4aa7"}, "closed": true, "closedAt": "2020-04-07T23:33:40Z", "author": {"login": "siddharthteotia"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVPamFgH2gAyNDAwMTM0NDM4OjAwMDc4OTUxYWFkN2YyZjI0OTQ3YzJkZmJiZTQxMWI2NThmNDhhODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVaUB1AFqTM4OTUwODE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00078951aad7f2f24947c2dfbbe411b658f48a83", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/00078951aad7f2f24947c2dfbbe411b658f48a83", "committedDate": "2020-04-07T08:56:07Z", "message": "Add Calcite SQL parser tests for native Pinot\nfunctions, transform functions, valuein etc\n\nAlso, add tests for resuult comparison for\nVALUEIN between PQL and SQL with/without ORDER BY"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzc3MDYw", "url": "https://github.com/apache/pinot/pull/5217#pullrequestreview-389377060", "createdAt": "2020-04-07T18:22:03Z", "commit": {"oid": "00078951aad7f2f24947c2dfbbe411b658f48a83"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMjowM1rOGCQbZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyNDoyN1rOGCQhHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTQ5NA==", "bodyText": "Should be TOP instead of LIMIT?", "url": "https://github.com/apache/pinot/pull/5217#discussion_r405019494", "createdAt": "2020-04-07T18:22:03Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/test/resources/pql_queries.list", "diffHunk": "@@ -817,3 +817,19 @@ select COUNT(*) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKeys(mapField) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKey(mapField,k1) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKey(mapField,k1) from baseballStats where mapKey(mapField,k1) = 'v1'\n+SELECT count(*) FROM Foo GROUP BY VALUEIN(mv_col, 10790, 16344) LIMIT 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00078951aad7f2f24947c2dfbbe411b658f48a83"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyMDk1Ng==", "bodyText": "The equivalent SQL (preserving old behavior of the pql query) will be\nSELECT VALUEIN(mv_col, 10790, 16344), count(*) FROM Foo GROUP BY VALUEIN(mv_col, 10790, 16344) ORDER BY count(*) DESC LIMIT 10\n\nAm I right?", "url": "https://github.com/apache/pinot/pull/5217#discussion_r405020956", "createdAt": "2020-04-07T18:24:27Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/test/resources/sql_queries.list", "diffHunk": "@@ -817,3 +817,19 @@ select COUNT(*) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKeys(mapField) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKey(mapField,k1) from baseballStats where DIV(numberOfGames,10) = 100\n select mapKey(mapField,k1) from baseballStats where mapKey(mapField,k1) = 'v1'\n+SELECT count(*) FROM Foo GROUP BY VALUEIN(mv_col, 10790, 16344) LIMIT 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00078951aad7f2f24947c2dfbbe411b658f48a83"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad52afa8294efc5715b5b9ffee22fcba2b689bd7", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/ad52afa8294efc5715b5b9ffee22fcba2b689bd7", "committedDate": "2020-04-07T19:54:34Z", "message": "Address review comments. Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTA4MTcw", "url": "https://github.com/apache/pinot/pull/5217#pullrequestreview-389508170", "createdAt": "2020-04-07T21:36:08Z", "commit": {"oid": "ad52afa8294efc5715b5b9ffee22fcba2b689bd7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozNjowOFrOGCXCjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTozNjowOFrOGCXCjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNzgyMA==", "bodyText": "It will be useful to have these numbers defined as key1, key2, value1, value2 ,etc. WIll make it easier to extend the test if we want to.", "url": "https://github.com/apache/pinot/pull/5217#discussion_r405127820", "createdAt": "2020-04-07T21:36:08Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/InterSegmentAggregationMultiValueQueriesTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCountMV() {\n     brokerResponse = getBrokerResponseForPqlQuery(query + MV_GROUP_BY);\n     QueriesTestUtils\n         .testInterSegmentAggregationResult(brokerResponse, 400000L, 0L, 800000L, 400000L, new String[]{\"199896\"});\n+\n+    query = \"SELECT COUNTMV(column6) FROM testTable GROUP BY VALUEIN(column7, 363, 469, 246, 100000)\";\n+    brokerResponse = getBrokerResponseForPqlQuery(query);\n+    List<String[]> groupKeys = new ArrayList<>();\n+    groupKeys.add(new String[]{\"363\"});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad52afa8294efc5715b5b9ffee22fcba2b689bd7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1167, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}