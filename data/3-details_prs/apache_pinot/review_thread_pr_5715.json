{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMTU3ODU2", "number": 5715, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTowMToxMVrOEQVPug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozOTozNVrOEQeIbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTYwNzYyOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTowMToxMVrOG0bVZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNDo0MToxN1rOG0n1-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA==", "bodyText": "We should not remove the sanity check on usage of alias reference\nE.g. we should reject the following query:\nSELECT colA AS a, foo(a, colB) FROM table\n\nAnother way is to replace the alias reference in selection as well", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457626980", "createdAt": "2020-07-20T19:01:11Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,32 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799a75a1bd340635d88b0af4fefde9b73b05abce"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1NjMzNg==", "bodyText": "Added it back, basically remove colA in aliasMap for case like SELECT colA AS colA.", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457756336", "createdAt": "2020-07-20T23:56:31Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,32 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}, "originalCommit": {"oid": "799a75a1bd340635d88b0af4fefde9b73b05abce"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1OTMyOQ==", "bodyText": "I think the correct fix should be just not adding it to the aliasMap?\nYou can rewrite the query before handling the alias by replacing a AS a to a", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457759329", "createdAt": "2020-07-21T00:06:41Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,32 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}, "originalCommit": {"oid": "799a75a1bd340635d88b0af4fefde9b73b05abce"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTkzMQ==", "bodyText": "done.", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457831931", "createdAt": "2020-07-21T04:41:17Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,32 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}, "originalCommit": {"oid": "799a75a1bd340635d88b0af4fefde9b73b05abce"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzA2MzUwOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozOTozNVrOG0o2Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozOTozNVrOG0o2Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0ODM5NQ==", "bodyText": "(nit)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (aliasKeys.contains(aliasName)) {\n          \n          \n            \n                    throw new SqlCompilationException(\"Duplicated alias name found.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  aliasKeys.add(aliasName);\n          \n          \n            \n                  if (!aliasKeys.add(aliasName)) {\n          \n          \n            \n                    throw new SqlCompilationException(\"Duplicated alias name found.\");\n          \n          \n            \n                  }", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457848395", "createdAt": "2020-07-21T05:39:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,7 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.\n     Set<String> aliasKeys = new HashSet<>();\n     for (Identifier identifier : aliasMap.keySet()) {\n-      aliasKeys.add(identifier.getName().toLowerCase());\n+      String aliasName = identifier.getName().toLowerCase();\n+      if (aliasKeys.contains(aliasName)) {\n+        throw new SqlCompilationException(\"Duplicated alias name found.\");\n+      }\n+      aliasKeys.add(aliasName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5178e4b4eb764202590f02971db43e6be44c0db"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}