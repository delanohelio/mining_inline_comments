{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMDgzNjc2", "number": 5229, "title": "enable async processing in pinot broker query api", "bodyText": "right now pinot broker query api issue a blocking call when it try to fetch result from pinot server. If we are seeing high amount of traffic to pinot broker with long request process latency, the whole pinot broker instances could be blocked due to limited amount of processing threads available to grizzly java web container. This change help to address the issue related to blocking call and ensure pinot broker have capacity to handle request even when some of the broker requests are taking too long", "createdAt": "2020-04-08T21:13:15Z", "url": "https://github.com/apache/pinot/pull/5229", "merged": true, "mergeCommit": {"oid": "6943212f8526beb1a6dbb5ccf1437af6fc59465c"}, "closed": true, "closedAt": "2020-04-09T00:50:52Z", "author": {"login": "jamesyfshao"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVcH9wAH2gAyNDAxMDgzNjc2OmI5MGRlYzk3NWVhNjA2NmNlODRmODliMDM5ZDUzZDAxZTYxNTkyNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVvV_bgFqTM5MDM2NTkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b90dec975ea6066ce84f89b039d53d01e615926d", "author": {"user": {"login": "jamesyfshao", "name": "James Shao"}}, "url": "https://github.com/apache/pinot/commit/b90dec975ea6066ce84f89b039d53d01e615926d", "committedDate": "2020-04-07T23:44:32Z", "message": "enable async processing in pinot broker http layer for better performance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzUyNTAw", "url": "https://github.com/apache/pinot/pull/5229#pullrequestreview-390352500", "createdAt": "2020-04-08T21:41:19Z", "commit": {"oid": "b90dec975ea6066ce84f89b039d53d01e615926d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMTo0MToxOVrOGDCApg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMTo0MjozNlrOGDCCyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMTg0Ng==", "bodyText": "(format) re-order the imports", "url": "https://github.com/apache/pinot/pull/5229#discussion_r405831846", "createdAt": "2020-04-08T21:41:19Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotClientRequest.java", "diffHunk": "@@ -32,18 +32,25 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.container.AsyncResponse;\n+import javax.ws.rs.container.Suspended;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.pinot.broker.api.RequestStatistics;\n import org.apache.pinot.broker.requesthandler.BrokerRequestHandler;\n+import org.apache.pinot.broker.requesthandler.PinotQueryRequest;\n import org.apache.pinot.common.metrics.BrokerMeter;\n import org.apache.pinot.common.metrics.BrokerMetrics;\n import org.apache.pinot.common.response.BrokerResponse;\n+import org.apache.pinot.common.utils.CommonConstants;\n import org.apache.pinot.common.utils.CommonConstants.Broker.Request;\n import org.apache.pinot.spi.utils.JsonUtils;\n+import org.glassfish.jersey.server.ManagedAsync;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.util.concurrent.TimeUnit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90dec975ea6066ce84f89b039d53d01e615926d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMjE5NA==", "bodyText": "(convention) remove the final key as we usually don't mark argument as final. Same for other methods.", "url": "https://github.com/apache/pinot/pull/5229#discussion_r405832194", "createdAt": "2020-04-08T21:42:06Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotClientRequest.java", "diffHunk": "@@ -57,15 +64,17 @@\n   private BrokerMetrics brokerMetrics;\n \n   @GET\n+  @ManagedAsync\n   @Produces(MediaType.APPLICATION_JSON)\n   @Path(\"query\")\n   @ApiOperation(value = \"Querying pinot\")\n   @ApiResponses(value = {@ApiResponse(code = 200, message = \"Query response\"), @ApiResponse(code = 500, message = \"Internal Server Error\")})\n-  public String processQueryGet(\n+  public void processQueryGet(\n       // Query param \"bql\" is for backward compatibility\n       @ApiParam(value = \"Query\", required = true) @QueryParam(\"bql\") String query,\n       @ApiParam(value = \"Trace enabled\") @QueryParam(Request.TRACE) String traceEnabled,\n-      @ApiParam(value = \"Debug options\") @QueryParam(Request.DEBUG_OPTIONS) String debugOptions) {\n+      @ApiParam(value = \"Debug options\") @QueryParam(Request.DEBUG_OPTIONS) String debugOptions,\n+      @Suspended final AsyncResponse asyncResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90dec975ea6066ce84f89b039d53d01e615926d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMjM5Mg==", "bodyText": "What is this sleep for?", "url": "https://github.com/apache/pinot/pull/5229#discussion_r405832392", "createdAt": "2020-04-08T21:42:36Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotClientRequest.java", "diffHunk": "@@ -76,24 +85,28 @@ public String processQueryGet(\n         requestJson.put(Request.DEBUG_OPTIONS, debugOptions);\n       }\n       BrokerResponse brokerResponse = requestHandler.handleRequest(requestJson, null, new RequestStatistics());\n-      return brokerResponse.toJsonString();\n+      asyncResponse.resume(brokerResponse.toJsonString());\n     } catch (Exception e) {\n       LOGGER.error(\"Caught exception while processing GET request\", e);\n       brokerMetrics.addMeteredGlobalValue(BrokerMeter.UNCAUGHT_GET_EXCEPTIONS, 1L);\n-      throw new WebApplicationException(e, Response.Status.INTERNAL_SERVER_ERROR);\n+      asyncResponse.resume(new WebApplicationException(e, Response.Status.INTERNAL_SERVER_ERROR));\n     }\n   }\n \n   @POST\n+  @ManagedAsync\n   @Produces(MediaType.APPLICATION_JSON)\n   @Path(\"query\")\n   @ApiOperation(value = \"Querying pinot\")\n   @ApiResponses(value = {@ApiResponse(code = 200, message = \"Query response\"), @ApiResponse(code = 500, message = \"Internal Server Error\")})\n-  public String processQueryPost(String query) {\n+  public void processQueryPost(String query, @Suspended final AsyncResponse asyncResponse) {\n     try {\n       JsonNode requestJson = JsonUtils.stringToJsonNode(query);\n+      if (requestJson.has(\"trace\")) {\n+        TimeUnit.SECONDS.sleep(15);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90dec975ea6066ce84f89b039d53d01e615926d"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea1cf6eae483939b554626051a86f0dd553db60", "author": {"user": {"login": "jamesyfshao", "name": "James Shao"}}, "url": "https://github.com/apache/pinot/commit/eea1cf6eae483939b554626051a86f0dd553db60", "committedDate": "2020-04-08T21:55:02Z", "message": "update per pr"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY1OTAz", "url": "https://github.com/apache/pinot/pull/5229#pullrequestreview-390365903", "createdAt": "2020-04-08T22:08:03Z", "commit": {"oid": "eea1cf6eae483939b554626051a86f0dd553db60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1191, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}