{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjExMTM3", "number": 5671, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowMzo1OFrOEM9bhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToyMDoyNVrOENG67g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDI0ODM5OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowMzo1OFrOGvX3OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NDoyMVrOGvbzEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNzIyNQ==", "bodyText": "Would be good to add doc with sample query translations (as already stated in the PR description).", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452327225", "createdAt": "2020-07-09T16:03:58Z", "author": {"login": "mayankshriv"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -331,12 +345,59 @@ private static void queryRewrite(PinotQuery pinotQuery) {\n       pinotQuery.setFilterExpression(updatedFilterExpression);\n     }\n \n+    // Rewrite GroupBy to Distinct\n+    rewriteNonAggregationGroupByToDistinct(pinotQuery);\n+\n     // Update alias\n     Map<Identifier, Expression> aliasMap = extractAlias(pinotQuery.getSelectList());\n     applyAlias(aliasMap, pinotQuery);\n     validate(aliasMap, pinotQuery);\n   }\n \n+  private static void rewriteNonAggregationGroupByToDistinct(PinotQuery pinotQuery) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25d70e4881dfc81565888f558d2739da8026c94c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MTY5Nw==", "bodyText": "will do", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452391697", "createdAt": "2020-07-09T17:54:21Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -331,12 +345,59 @@ private static void queryRewrite(PinotQuery pinotQuery) {\n       pinotQuery.setFilterExpression(updatedFilterExpression);\n     }\n \n+    // Rewrite GroupBy to Distinct\n+    rewriteNonAggregationGroupByToDistinct(pinotQuery);\n+\n     // Update alias\n     Map<Identifier, Expression> aliasMap = extractAlias(pinotQuery.getSelectList());\n     applyAlias(aliasMap, pinotQuery);\n     validate(aliasMap, pinotQuery);\n   }\n \n+  private static void rewriteNonAggregationGroupByToDistinct(PinotQuery pinotQuery) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNzIyNQ=="}, "originalCommit": {"oid": "25d70e4881dfc81565888f558d2739da8026c94c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDI2NjQ1OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowODo1OFrOGvYDEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NDoxMlrOGvbyrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzMDI1OA==", "bodyText": "May be a non-issue here, but just wanted to point out that there are aggregation functions that take multiple args, some of which are expected to be literals (even though they look like expressions, eg distinctCountThetaSketch).", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452330258", "createdAt": "2020-07-09T16:08:58Z", "author": {"login": "mayankshriv"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -196,13 +198,25 @@ private static boolean isAggregateExpression(Expression expression) {\n     return false;\n   }\n \n-  public static Set<String> extractIdentifiers(List<Expression> expressions) {\n+  /**\n+   * Extract all the identifiers from given expressions.\n+   *\n+   * @param expressions\n+   * @param excludeAs if true, ignores the right side identifier for AS function.\n+   * @return all the identifier names.\n+   */\n+  public static Set<String> extractIdentifiers(List<Expression> expressions, boolean excludeAs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25d70e4881dfc81565888f558d2739da8026c94c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MTU5Ng==", "bodyText": "I see, if those args are single-quoted then it should be fine .", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452391596", "createdAt": "2020-07-09T17:54:12Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -196,13 +198,25 @@ private static boolean isAggregateExpression(Expression expression) {\n     return false;\n   }\n \n-  public static Set<String> extractIdentifiers(List<Expression> expressions) {\n+  /**\n+   * Extract all the identifiers from given expressions.\n+   *\n+   * @param expressions\n+   * @param excludeAs if true, ignores the right side identifier for AS function.\n+   * @return all the identifier names.\n+   */\n+  public static Set<String> extractIdentifiers(List<Expression> expressions, boolean excludeAs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzMDI1OA=="}, "originalCommit": {"oid": "25d70e4881dfc81565888f558d2739da8026c94c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTgwMTczOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToxOToyNlrOGvm1cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToxOToyNlrOGvm1cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MjUzMQ==", "bodyText": "private?", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452572531", "createdAt": "2020-07-10T01:19:26Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -179,18 +179,15 @@ private ImmutableSegment createSegment(int index, List<GenericRow> records)\n    *   <li>Selecting some columns with filter that does not match any record</li>\n    * </ul>\n    */\n-  @Test\n-  public void testDistinctInnerSegment()\n+  public void testDistinctInnerSegmentHelper(String[] queries, boolean isPql)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5103dff769b485fe69f1853fc5f8f81899268fd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTgwMzM0OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToyMDoyNVrOGvm2Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToyMDoyNVrOGvm2Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3Mjc2Ng==", "bodyText": "private?", "url": "https://github.com/apache/pinot/pull/5671#discussion_r452572766", "createdAt": "2020-07-10T01:20:25Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/DistinctQueriesTest.java", "diffHunk": "@@ -347,19 +389,16 @@ private DistinctTable getDistinctTableInnerSegment(String query) {\n    *   </li>\n    * </ul>\n    */\n-  @Test\n-  public void testDistinctInterSegment()\n+  public void testDistinctInterSegmentHelper(String[] pqlQueries, String[] sqlQueries)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5103dff769b485fe69f1853fc5f8f81899268fd"}, "originalPosition": 144}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4085, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}