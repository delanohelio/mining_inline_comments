{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODU4NzU2", "number": 5687, "title": "Adding Controller API to explore Zookeeper", "bodyText": "Description\nThis PR add a /zookeeper end point to the controller resource. This can be used to view the contents of ZK without having to start zooinspector.\nThis is a precursor to provide a UI component in the controller to explore ZK contents\n\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\n\n Yes (Please label as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR fix a zero-downtime upgrade introduced earlier?\n\n Yes (Please label this as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR otherwise need attention when creating release notes? Things to consider:\n\nNew configuration options\nDeprecation of configurations\nSignature changes to public methods/interfaces\nNew plugins added or old plugins removed\n\n\n Yes (Please label this PR as release-notes and complete the section on Release Notes)\n\nRelease Notes\nIf you have tagged this as either backward-incompat or release-notes,\nyou MUST add text here that you would like to see appear in release notes of the\nnext release.\nIf you have a series of commits adding or enabling a feature, then\nadd this section only in final commit that marks the feature completed.\nRefer to earlier release notes to see examples of text\nDocumentation\nIf you have introduced a new feature or configuration, please add it to the documentation as well.\nSee https://docs.pinot.apache.org/developers/developers-and-contributors/update-document", "createdAt": "2020-07-12T06:36:31Z", "url": "https://github.com/apache/pinot/pull/5687", "merged": true, "mergeCommit": {"oid": "4378e87aba652a727076b535f77f4c0bbd4473d2"}, "closed": true, "closedAt": "2020-07-14T05:34:39Z", "author": {"login": "kishoreg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0Go3wgH2gAyNDQ3ODU4NzU2OmIwMGE2NTQ0NGQ4ZTNkOTllNDk2ZDQ0ZTc5NTAxMjIyMDgwMjJiMDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0raFOgH2gAyNDQ3ODU4NzU2OjdjZTc4Zjc1NTA4NTM5NzdlMTg3ZGFkNWE2N2Y0ZjQ2NTc4NTRhZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b00a65444d8e3d99e496d44e7950122208022b00", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/b00a65444d8e3d99e496d44e7950122208022b00", "committedDate": "2020-07-12T06:14:13Z", "message": "Adding Zookeeper resource to browse ZK data via controller API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95fabab8ad93ef91a4f74022dd070b8c73f4fe13", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/95fabab8ad93ef91a4f74022dd070b8c73f4fe13", "committedDate": "2020-07-12T06:26:01Z", "message": "Fixing api documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae16d8b7231a12362844657bacdec4705dfaf45c", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/ae16d8b7231a12362844657bacdec4705dfaf45c", "committedDate": "2020-07-12T06:27:17Z", "message": "Fixing api documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/d29a7f6d0b449c1e15899607063577c27e14f961", "committedDate": "2020-07-12T06:34:18Z", "message": "Fixing api documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDQ0NTMw", "url": "https://github.com/apache/pinot/pull/5687#pullrequestreview-447444530", "createdAt": "2020-07-13T17:14:44Z", "commit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzoxNDo0NFrOGwx-gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzoxNDo0NFrOGwx-gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwMzY0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @ApiOperation(value = \"Get cluster Ingo\", notes = \"Get cluster Info\")\n          \n          \n            \n              @ApiOperation(value = \"Get cluster Info\", notes = \"Get cluster Info\")", "url": "https://github.com/apache/pinot/pull/5687#discussion_r453803648", "createdAt": "2020-07-13T17:14:44Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotClusterConfigs.java", "diffHunk": "@@ -57,6 +57,17 @@\n   @Inject\n   PinotHelixResourceManager pinotHelixResourceManager;\n \n+  @GET\n+  @Path(\"/cluster/info\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Get cluster Ingo\", notes = \"Get cluster Info\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDUwNTY0", "url": "https://github.com/apache/pinot/pull/5687#pullrequestreview-447450564", "createdAt": "2020-07-13T17:22:45Z", "commit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzoyMjo0NVrOGwyR7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzoyNDo1NFrOGwyW1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwODYyMA==", "bodyText": "Cluster info is just name?", "url": "https://github.com/apache/pinot/pull/5687#discussion_r453808620", "createdAt": "2020-07-13T17:22:45Z", "author": {"login": "mayankshriv"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotClusterConfigs.java", "diffHunk": "@@ -57,6 +57,17 @@\n   @Inject\n   PinotHelixResourceManager pinotHelixResourceManager;\n \n+  @GET\n+  @Path(\"/cluster/info\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Get cluster Ingo\", notes = \"Get cluster Info\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal server error\")})\n+  public String getClusterInfo() {\n+    ObjectNode ret = JsonUtils.newObjectNode();\n+    ret.put(\"clusterName\", pinotHelixResourceManager.getHelixClusterName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwOTg3OQ==", "bodyText": "Is using zookeeper the norm? Wondering if ok to use zk for lazy folks like me?", "url": "https://github.com/apache/pinot/pull/5687#discussion_r453809879", "createdAt": "2020-07-13T17:24:54Z", "author": {"login": "mayankshriv"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/ZookeeperResource.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.controller.api.resources;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.annotations.ApiResponses;\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.helix.ZNRecord;\n+import org.apache.helix.manager.zk.ZNRecordSerializer;\n+import org.apache.pinot.controller.helix.core.PinotHelixResourceManager;\n+import org.apache.pinot.spi.utils.JsonUtils;\n+import org.apache.zookeeper.data.Stat;\n+import org.slf4j.LoggerFactory;\n+\n+\n+@Api(tags = Constants.ZOOKEEPER)\n+@Path(\"/\")\n+public class ZookeeperResource {\n+\n+  public static org.slf4j.Logger LOGGER = LoggerFactory.getLogger(ZookeeperResource.class);\n+\n+  @Inject\n+  PinotHelixResourceManager pinotHelixResourceManager;\n+\n+  ZNRecordSerializer _znRecordSerializer = new ZNRecordSerializer();\n+\n+  @GET\n+  @Path(\"/zookeeper/get\")\n+  @Produces(MediaType.TEXT_PLAIN)\n+  @ApiOperation(value = \"Get content of the znode\")\n+  @ApiResponses(value = { //\n+      @ApiResponse(code = 200, message = \"Success\"), //\n+      @ApiResponse(code = 404, message = \"ZK Path not found\"), //\n+      @ApiResponse(code = 204, message = \"No Content\"), //\n+      @ApiResponse(code = 500, message = \"Internal server error\")})\n+  public String getData(\n+      @ApiParam(value = \"Zookeeper Path, must start with /\", required = true, defaultValue = \"/\") @QueryParam(\"path\") @DefaultValue(\"\") String path) {\n+\n+    path = validateAndNormalizeZKPath(path);\n+\n+    ZNRecord znRecord = pinotHelixResourceManager.readZKData(path);\n+    if (znRecord != null) {\n+      return new String(_znRecordSerializer.serialize(znRecord), StandardCharsets.UTF_8);\n+    }\n+    return null;\n+  }\n+\n+  @GET\n+  @Path(\"/zookeeper/ls\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29a7f6d0b449c1e15899607063577c27e14f961"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ce78f7550853977e187dad5a67f4f4657854af2", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/7ce78f7550853977e187dad5a67f4f4657854af2", "committedDate": "2020-07-14T01:04:33Z", "message": "Addressing comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 329, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}