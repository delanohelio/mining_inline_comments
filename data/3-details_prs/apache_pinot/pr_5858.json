{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjAwNDgy", "number": 5858, "title": "Change group key delimiter from '\\t' to '\\0'", "bodyText": "Description\nUsing '\\t' as the group key delimiter will cause unexpected behavior when grouping on string value with '\\t' inside. To solve it, we can use '\\0' as the delimiter which is not allowed in the string values.\n\nAdd code to handle both '\\0' and '\\t' as limiter on broker side for backward-compatibility\nSpecialize case of grouping on single expression to save the redundant group key splits.\n\nUpgrade Notes\nIn order to achieve zero down-time upgrade, Brokers must be upgraded before Servers.", "createdAt": "2020-08-13T07:24:07Z", "url": "https://github.com/apache/pinot/pull/5858", "merged": true, "mergeCommit": {"oid": "ed2daaaa7057872d32007364e6e5b8150c341f1d"}, "closed": true, "closedAt": "2020-08-18T00:07:08Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-pWvaABqjM2NTQyODk0MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_7OxtgFqTQ2ODg5OTI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17cb4c9190faa787b89047bd2ca273a663ddf834", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/17cb4c9190faa787b89047bd2ca273a663ddf834", "committedDate": "2020-08-13T07:17:49Z", "message": "Change group key delimiter from '\\t' to '\\0'"}, "afterCommit": {"oid": "4525626eaeb131b022ce52e9b2d3d4042e6a62aa", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/4525626eaeb131b022ce52e9b2d3d4042e6a62aa", "committedDate": "2020-08-14T00:20:09Z", "message": "Change group key delimiter from '\\t' to '\\0'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4525626eaeb131b022ce52e9b2d3d4042e6a62aa", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/4525626eaeb131b022ce52e9b2d3d4042e6a62aa", "committedDate": "2020-08-14T00:20:09Z", "message": "Change group key delimiter from '\\t' to '\\0'"}, "afterCommit": {"oid": "4d0cee95c979022838471b82b4d28d3da17b2f1e", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/4d0cee95c979022838471b82b4d28d3da17b2f1e", "committedDate": "2020-08-14T00:24:57Z", "message": "Change group key delimiter from '\\t' to '\\0'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6266c6d6d3f36c8d4da287404e6a13c41164a1", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/1d6266c6d6d3f36c8d4da287404e6a13c41164a1", "committedDate": "2020-08-17T19:47:13Z", "message": "Change group key delimiter from '\\t' to '\\0'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d0cee95c979022838471b82b4d28d3da17b2f1e", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/4d0cee95c979022838471b82b4d28d3da17b2f1e", "committedDate": "2020-08-14T00:24:57Z", "message": "Change group key delimiter from '\\t' to '\\0'"}, "afterCommit": {"oid": "1d6266c6d6d3f36c8d4da287404e6a13c41164a1", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/1d6266c6d6d3f36c8d4da287404e6a13c41164a1", "committedDate": "2020-08-17T19:47:13Z", "message": "Change group key delimiter from '\\t' to '\\0'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODk5MjQ3", "url": "https://github.com/apache/pinot/pull/5858#pullrequestreview-468899247", "createdAt": "2020-08-17T23:37:37Z", "commit": {"oid": "1d6266c6d6d3f36c8d4da287404e6a13c41164a1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzozNzozN1rOHB-Ucg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzozODo0NlrOHB-VpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzMTY2Ng==", "bodyText": "why we separate single groupby ? for performance ?", "url": "https://github.com/apache/pinot/pull/5858#discussion_r471831666", "createdAt": "2020-08-17T23:37:37Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/combine/GroupByOrderByCombineOperator.java", "diffHunk": "@@ -155,33 +155,53 @@ public void runJob() {\n             // Merge aggregation group-by result.\n             AggregationGroupByResult aggregationGroupByResult = intermediateResultsBlock.getAggregationGroupByResult();\n             if (aggregationGroupByResult != null) {\n-              // Get converter functions\n-              Function[] converterFunctions = new Function[numGroupByExpressions];\n-              for (int i = 0; i < numGroupByExpressions; i++) {\n-                converterFunctions[i] = getConverterFunction(_dataSchema.getColumnDataType(i));\n-              }\n+              if (numGroupByExpressions == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6266c6d6d3f36c8d4da287404e6a13c41164a1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzMTk3Mw==", "bodyText": "shall we stick to Preconditions.checkArgument?", "url": "https://github.com/apache/pinot/pull/5858#discussion_r471831973", "createdAt": "2020-08-17T23:38:46Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/AggregationGroupByTrimmingService.java", "diffHunk": "@@ -29,34 +28,39 @@\n import java.util.Map;\n import java.util.PriorityQueue;\n import java.util.TreeMap;\n-import javax.annotation.Nonnull;\n import org.apache.commons.collections.comparators.ComparableComparator;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.pinot.common.response.broker.GroupByResult;\n import org.apache.pinot.core.query.aggregation.function.AggregationFunction;\n import org.apache.pinot.core.query.aggregation.function.AggregationFunctionUtils;\n import org.apache.pinot.core.query.aggregation.function.MinAggregationFunction;\n+import org.apache.pinot.core.query.request.context.ExpressionContext;\n+import org.apache.pinot.core.query.request.context.QueryContext;\n import org.apache.pinot.core.util.GroupByUtils;\n \n \n /**\n  * The <code>AggregationGroupByTrimmingService</code> class provides trimming service for aggregation group-by queries.\n  */\n+@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n public class AggregationGroupByTrimmingService {\n-\n   private final AggregationFunction[] _aggregationFunctions;\n-  private final int _groupByTopN;\n+  private final int _numGroupByExpressions;\n+  private final int _limit;\n   private final int _trimSize;\n   private final int _trimThreshold;\n \n-  public AggregationGroupByTrimmingService(@Nonnull AggregationFunction[] aggregationFunctions, int groupByTopN) {\n-    Preconditions.checkArgument(groupByTopN > 0);\n-\n-    _aggregationFunctions = aggregationFunctions;\n-    _groupByTopN = groupByTopN;\n+  public AggregationGroupByTrimmingService(QueryContext queryContext) {\n+    _aggregationFunctions = queryContext.getAggregationFunctions();\n+    List<ExpressionContext> groupByExpressions = queryContext.getGroupByExpressions();\n+    assert groupByExpressions != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6266c6d6d3f36c8d4da287404e6a13c41164a1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 173, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}