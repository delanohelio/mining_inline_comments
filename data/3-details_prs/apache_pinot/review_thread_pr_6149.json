{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzM5NzI4", "number": 6149, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxODo1OFrOEuKFYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MzozNVrOEuOSwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODM1MTcwOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxODo1OFrOHiYcSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxODo1OFrOHiYcSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDA4OA==", "bodyText": "Please add some javadoc on the checks performed here", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814088", "createdAt": "2020-10-15T20:18:58Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODM1NjQ0OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoyMDoyN1rOHiYfFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjo1NDozN1rOHiePIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()), \"Upsert table must have primary key columns in the schema\");", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814806", "createdAt": "2020-10-15T20:20:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NzM4OA==", "bodyText": "I saw some checks in this class use precondition, others use IllegalStateException. Shall we make it consistent? @icefury71", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505877388", "createdAt": "2020-10-15T21:39:37Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwOTAyNA==", "bodyText": "Will do so in my next pass", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505909024", "createdAt": "2020-10-15T22:54:37Z", "author": {"login": "icefury71"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODM2OTU4OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoyNDowNVrOHiYmrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0NjowMVrOHilusg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ==", "bodyText": "This can potentially have NPE\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n          \n          \n            \n                    .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE. equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()), \"Upsert table must use replica-group based routing\")", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505816751", "createdAt": "2020-10-15T20:24:05Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NDg5NQ==", "bodyText": "why? this seems the same rewrite.", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505884895", "createdAt": "2020-10-15T21:50:49Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDQ4Mw==", "bodyText": "tableConfig.getRoutingConfig().getInstanceSelectorType() might be null", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505924483", "createdAt": "2020-10-15T23:42:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTc5NA==", "bodyText": "then it's the same :)", "url": "https://github.com/apache/pinot/pull/6149#discussion_r506031794", "createdAt": "2020-10-16T03:46:01Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODM5NTkyOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozMDozMFrOHiY3Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozMDozMFrOHiY3Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMDk0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (streamConfig.getConsumerTypes().size() != 1\n          \n          \n            \n                      || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n          \n          \n            \n                    throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(), \"\"Upsert table must use low-level streaming consumer type\");", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505820946", "createdAt": "2020-10-15T20:30:30Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODQxMjIxOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozMzo1NVrOHiZB-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MjoyNlrOHic1GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMzczNw==", "bodyText": "Use precondition, also recommend reorder the checks in this order: upsert mode -> primary key -> table type -> consumer type -> routing type, which IMO is more intuitive", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505823737", "createdAt": "2020-10-15T20:33:55Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NTk3Nw==", "bodyText": "sgtm", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505885977", "createdAt": "2020-10-15T21:52:26Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMzczNw=="}, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODQ0MjMzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo0MDoxNFrOHiZVxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo0MDoxNFrOHiZVxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyODgwNA==", "bodyText": "nit: do this in the beginning ?", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505828804", "createdAt": "2020-10-15T20:40:14Z", "author": {"login": "icefury71"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTA0MTI5OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MzozNVrOHifMxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0NjozN1rOHilvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDgwNw==", "bodyText": "(nit) Use precondition for this as well", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505924807", "createdAt": "2020-10-15T23:43:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +235,39 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n+   */\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // check table type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMjAwMw==", "bodyText": "done", "url": "https://github.com/apache/pinot/pull/6149#discussion_r506032003", "createdAt": "2020-10-16T03:46:37Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +235,39 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n+   */\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // check table type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDgwNw=="}, "originalCommit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3752, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}