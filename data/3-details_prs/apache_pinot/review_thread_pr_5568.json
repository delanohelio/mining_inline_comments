{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODYzNzc1", "number": 5568, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozNDoxM1rOEGigSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozNDoxM1rOEGigSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjkyMjMyOnYy", "diffSide": "LEFT", "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/maker/PlanMaker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozNDoxM1rOGlZodQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozNDoxM1rOGlZodQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3MDQ1Mw==", "bodyText": "This seems like refactoring to me which is not really needed to move to QueryContext? We can keep the interfaces same right?", "url": "https://github.com/apache/pinot/pull/5568#discussion_r441870453", "createdAt": "2020-06-17T22:34:13Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/maker/PlanMaker.java", "diffHunk": "@@ -20,36 +20,27 @@\n \n import java.util.List;\n import java.util.concurrent.ExecutorService;\n-import org.apache.pinot.common.request.BrokerRequest;\n-import org.apache.pinot.core.data.manager.SegmentDataManager;\n import org.apache.pinot.core.indexsegment.IndexSegment;\n import org.apache.pinot.core.plan.Plan;\n import org.apache.pinot.core.plan.PlanNode;\n+import org.apache.pinot.core.query.request.context.QueryContext;\n+import org.apache.pinot.spi.annotations.InterfaceAudience;\n \n \n /**\n- * The <code>PlanMaker</code> provides interfaces to make segment level and instance level execution plan.\n+ * The {@code PlanMaker} makes logical execution plan for the queries.\n  */\n+@InterfaceAudience.Private\n public interface PlanMaker {\n \n   /**\n-   * Make segment level {@link PlanNode} which contains execution plan on only one segment.\n-   *\n-   * @param indexSegment index segment.\n-   * @param brokerRequest broker request.\n-   * @return segment level plan node.\n+   * Returns an instance level {@link Plan} which contains the logical execution plan for multiple segments.\n    */\n-  PlanNode makeInnerSegmentPlan(IndexSegment indexSegment, BrokerRequest brokerRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a45c9ea12d4b66a74a13096cc4e43f104b19ecf8"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4317, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}