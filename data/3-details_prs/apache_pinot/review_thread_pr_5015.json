{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTc3MDg3", "number": 5015, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzozNjo1N1rODa9q9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzo1ODozOVrODa-E4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTk5OTkxOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/relocation/RealtimeSegmentRelocator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzozNjo1N1rOFiLYlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0Nzo0OVrOFiNdXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4MjQyMA==", "bodyText": "May be add a debug log saying the relocation is NO-OP?", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371382420", "createdAt": "2020-01-27T17:36:57Z", "author": {"login": "siddharthteotia"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/relocation/RealtimeSegmentRelocator.java", "diffHunk": "@@ -72,40 +69,33 @@ protected void processTable(String tableNameWithType) {\n         .hasHighLevelConsumerType()) {\n       return;\n     }\n+    if (!InstanceAssignmentConfigUtils.shouldRelocateCompletedSegments(tableConfig)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNjQxMw==", "bodyText": "Added", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371416413", "createdAt": "2020-01-27T18:47:49Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/relocation/RealtimeSegmentRelocator.java", "diffHunk": "@@ -72,40 +69,33 @@ protected void processTable(String tableNameWithType) {\n         .hasHighLevelConsumerType()) {\n       return;\n     }\n+    if (!InstanceAssignmentConfigUtils.shouldRelocateCompletedSegments(tableConfig)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4MjQyMA=="}, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjAxOTM0OnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/config/instance/InstanceAssignmentConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzo0MzowNFrOFiLkqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0MjoxNlrOFiNTDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4NTUxNA==", "bodyText": "Maybe it is time we switch back to mandating a znode for realtime tables as well? Otherwise the checks for instance partitions being present is sprinkled everywhere?", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371385514", "createdAt": "2020-01-27T17:43:04Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/instance/InstanceAssignmentConfigUtils.java", "diffHunk": "@@ -34,7 +34,21 @@ private InstanceAssignmentConfigUtils() {\n   }\n \n   /**\n-   * Returns whether the instance assignment is allowed for the given table config.\n+   * Returns whether the COMPLETED segments should be relocated (offloaded from CONSUMING instances to COMPLETED\n+   * instances) for a LLC real-time table based on the given table config.\n+   * <p>COMPLETED segments should be relocated iff the COMPLETED instance assignment is configured or (for\n+   * backward-compatibility) COMPLETED server tag is overridden to be different from the CONSUMING server tag.\n+   */\n+  public static boolean shouldRelocateCompletedSegments(TableConfig tableConfig) {\n+    Map<InstancePartitionsType, InstanceAssignmentConfig> instanceAssignmentConfigMap =\n+        tableConfig.getInstanceAssignmentConfigMap();\n+    return (instanceAssignmentConfigMap != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMzc3Mg==", "bodyText": "Once we migrate to the new instance assignment model, we will have a instance partitions znode for every table. Right now it is for backward-compatibility to check this.", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371413772", "createdAt": "2020-01-27T18:42:16Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/config/instance/InstanceAssignmentConfigUtils.java", "diffHunk": "@@ -34,7 +34,21 @@ private InstanceAssignmentConfigUtils() {\n   }\n \n   /**\n-   * Returns whether the instance assignment is allowed for the given table config.\n+   * Returns whether the COMPLETED segments should be relocated (offloaded from CONSUMING instances to COMPLETED\n+   * instances) for a LLC real-time table based on the given table config.\n+   * <p>COMPLETED segments should be relocated iff the COMPLETED instance assignment is configured or (for\n+   * backward-compatibility) COMPLETED server tag is overridden to be different from the CONSUMING server tag.\n+   */\n+  public static boolean shouldRelocateCompletedSegments(TableConfig tableConfig) {\n+    Map<InstancePartitionsType, InstanceAssignmentConfig> instanceAssignmentConfigMap =\n+        tableConfig.getInstanceAssignmentConfigMap();\n+    return (instanceAssignmentConfigMap != null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4NTUxNA=="}, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjA2NjI2OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzo1ODozOVrOFiMCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyMDo0MFrOFiOc1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM5MzEzMw==", "bodyText": "This statement is a bit confusing. Why should it be that there is only one partition for consuming stance partitions? Can you add some comments here? The InstancePartition class says in comments that a \"partition\" means either field partition for offline or stream partition for realtime.", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371393133", "createdAt": "2020-01-27T17:58:39Z", "author": {"login": "mcvsubbu"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -143,62 +156,81 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n   @Override\n   public Map<String, Map<String, String>> rebalanceTable(Map<String, Map<String, String>> currentAssignment,\n       Map<InstancePartitionsType, InstancePartitions> instancePartitionsMap, Configuration config) {\n+    InstancePartitions completedInstancePartitions = instancePartitionsMap.get(InstancePartitionsType.COMPLETED);\n+    InstancePartitions consumingInstancePartitions = instancePartitionsMap.get(InstancePartitionsType.CONSUMING);\n+    Preconditions.checkState(consumingInstancePartitions != null,\n+        \"Failed to find COMPLETED or CONSUMING instance partitions for table: %s\", _realtimeTableName);\n+    Preconditions.checkState(consumingInstancePartitions.getNumPartitions() == 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMjY2Mg==", "bodyText": "Good point. Added comments in the InstancePartitions", "url": "https://github.com/apache/pinot/pull/5015#discussion_r371432662", "createdAt": "2020-01-27T19:20:40Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/assignment/segment/RealtimeSegmentAssignment.java", "diffHunk": "@@ -143,62 +156,81 @@ public void init(HelixManager helixManager, TableConfig tableConfig) {\n   @Override\n   public Map<String, Map<String, String>> rebalanceTable(Map<String, Map<String, String>> currentAssignment,\n       Map<InstancePartitionsType, InstancePartitions> instancePartitionsMap, Configuration config) {\n+    InstancePartitions completedInstancePartitions = instancePartitionsMap.get(InstancePartitionsType.COMPLETED);\n+    InstancePartitions consumingInstancePartitions = instancePartitionsMap.get(InstancePartitionsType.CONSUMING);\n+    Preconditions.checkState(consumingInstancePartitions != null,\n+        \"Failed to find COMPLETED or CONSUMING instance partitions for table: %s\", _realtimeTableName);\n+    Preconditions.checkState(consumingInstancePartitions.getNumPartitions() == 1,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM5MzEzMw=="}, "originalCommit": {"oid": "63151ebd07e7fa694ca82c270f64bcfe33d693f8"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3640, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}