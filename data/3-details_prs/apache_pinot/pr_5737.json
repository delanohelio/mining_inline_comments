{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1Mzk3NzI5", "number": 5737, "title": "Improvements to RealtimeProvisioningHelper command", "bodyText": "Fixed a bug where we were looking for push frequency setting in the table config\nPush frequency is not usually set in realtime table, so changed that to be an\noptional argument instead.\nInstead of push frequency, the user may specify retentionHours, meaning the number\nof hours of most recent data that will be queried most often.\nAdded the amount of total mapped memory to the output\nAdded the number of segments queried per host to the output.\nAdded a link to the documentation to the output.\nInstead of accepting the time taken to consume the segment, introduced an argument\nto accept the ingestion rate per partition. This is determined easier when looking\nat metrics for the topic that we need to ingest, and is more convenient when\nan offline segment is being provided as a sample\nAdded the command line arguments printed with the output so that it is easy for us\nto debug when we get questions from the community.\n\nTODO Next:\nCan we compute a score and just recommend a configuration? We know we want to minimize\nnum segments scanned per host, num hosts, segment size (to fit memory).\nIssue #5588\nHere is a sample output:\nRealtimeProvisioningHelperCommand -tableConfigFile /Users/ssubrama/tmp/samza/realtimeTableConfig.json -numPartitions 16 -pushFrequency null -numHosts 8,6,10 -numHours 6,12,18,24 -sampleCompletedSegmentDir /Users/ssubrama/tmp/samza/TestSamzaAnalyticsFeatures_1593411480000_1593500340000_0/ -ingestionRate 100 -maxUsableHostMemory 48G -retentionHours 72\nNote:\n\nTable retention and push frequency ignored for determining retentionHours\nSee https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\n\nMemory used per host (Active/Mapped)\nnumHosts --> 6               |8               |10              |\nnumHours\n6 --------> 5.05G/19.49G    |3.37G/12.99G    |3.37G/12.99G    |\n12 --------> 5.89G/20.33G    |3.93G/13.55G    |3.93G/13.55G    |\n18 --------> 6.73G/21.49G    |4.48G/14.33G    |4.48G/14.33G    |\n24 --------> 7.56G/22G       |5.04G/14.66G    |5.04G/14.66G    |\nOptimal segment size\nnumHosts --> 6               |8               |10              |\nnumHours\n6 --------> 111.98M         |111.98M         |111.98M         |\n12 --------> 223.96M         |223.96M         |223.96M         |\n18 --------> 335.94M         |335.94M         |335.94M         |\n24 --------> 447.92M         |447.92M         |447.92M         |\nConsuming memory\nnumHosts --> 6               |8               |10              |\nnumHours\n6 --------> 1.45G           |987.17M         |987.17M         |\n12 --------> 2.61G           |1.74G           |1.74G           |\n18 --------> 3.77G           |2.52G           |2.52G           |\n24 --------> 4.94G           |3.29G           |3.29G           |\nNumber of segments queried per host\nnumHosts --> 6               |8               |10              |\nnumHours\n6 --------> 12              |12              |12              |\n12 --------> 6               |6               |6               |\n18 --------> 4               |4               |4               |\n24 --------> 3               |3               |3               |\nDescription\nAdd a description of your PR here.\nA good description should include pointers to an issue or design document, etc.\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\n\n Yes (Please label as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR fix a zero-downtime upgrade introduced earlier?\n\n Yes (Please label this as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR otherwise need attention when creating release notes? Things to consider:\n\nNew configuration options\nDeprecation of configurations\nSignature changes to public methods/interfaces\nNew plugins added or old plugins removed\n\n\n Yes (Please label this PR as release-notes and complete the section on Release Notes)\n\nRelease Notes\nIf you have tagged this as either backward-incompat or release-notes,\nyou MUST add text here that you would like to see appear in release notes of the\nnext release.\nIf you have a series of commits adding or enabling a feature, then\nadd this section only in final commit that marks the feature completed.\nRefer to earlier release notes to see examples of text\nDocumentation\nIf you have introduced a new feature or configuration, please add it to the documentation as well.\nSee https://docs.pinot.apache.org/developers/developers-and-contributors/update-document", "createdAt": "2020-07-22T23:04:32Z", "url": "https://github.com/apache/pinot/pull/5737", "merged": true, "mergeCommit": {"oid": "540853d786c9e4b4bb27bf4bbc6fa73837ff1bc3"}, "closed": true, "closedAt": "2020-07-25T03:18:38Z", "author": {"login": "mcvsubbu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3i8BdgH2gAyNDU1Mzk3NzI5OmI4OThmNDE2Njk1MGJhNjBlOGFiNjRlYTFiZDBlYzEzYWM5ZWE2NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4OG2wAFqTQ1NTI0ODE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "committedDate": "2020-07-22T22:54:15Z", "message": "Improvements to RealtimepRovisioningHelper command\n\n- Fixed a bug where we were looking for push frequency setting in the table config\n  Push frequency is not usually set in realtime table, so changed that to be an\n  optional argument instead.\n- Instead of push frequency, the user may specify retentionHours, meaning the number\n  of hours of most recent data that will be queried most often.\n- Added the amount of total mapped memory to the output\n- Added the number of segments queried per host to the output.\n- Added a link to the documentation to the output.\n- Instead of accepting the time taken to consume the segment, introduced an argument\n  to accept the ingestion rate per partition. This is determined easier when looking\n  at metrics for the topic that we need to ingest, and is more convenient when\n  an offline segment is being provided as a sample\n- Added the command line arguments printed with the output so that it is easy for us\n  to debug when we get questions from the community.\n\nTODO Next:\n\nCan we compute a score and just recommend a configuration? We know we want to minimize\nnum segments scanned per host, num hosts, segment size (to fit memory).\n\nIssue #5588\n\nHere is a sample output:\n============================================================\nRealtimeProvisioningHelperCommand -tableConfigFile /Users/ssubrama/tmp/samza/realtimeTableConfig.json -numPartitions 16 -pushFrequency null -numHosts 8,6,10 -numHours 6,12,18,24 -sampleCompletedSegmentDir /Users/ssubrama/tmp/samza/TestSamzaAnalyticsFeatures_1593411480000_1593500340000_0/ -ingestionRate 100 -maxUsableHostMemory 48G -retentionHours 72\n\nNote:\n\n* Table retention and push frequency ignored for determining retentionHours\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\n\nMemory used per host (Active/Mapped)\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 5.05G/19.49G    |3.37G/12.99G    |3.37G/12.99G    |\n12 --------> 5.89G/20.33G    |3.93G/13.55G    |3.93G/13.55G    |\n18 --------> 6.73G/21.49G    |4.48G/14.33G    |4.48G/14.33G    |\n24 --------> 7.56G/22G       |5.04G/14.66G    |5.04G/14.66G    |\n\nOptimal segment size\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 111.98M         |111.98M         |111.98M         |\n12 --------> 223.96M         |223.96M         |223.96M         |\n18 --------> 335.94M         |335.94M         |335.94M         |\n24 --------> 447.92M         |447.92M         |447.92M         |\n\nConsuming memory\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 1.45G           |987.17M         |987.17M         |\n12 --------> 2.61G           |1.74G           |1.74G           |\n18 --------> 3.77G           |2.52G           |2.52G           |\n24 --------> 4.94G           |3.29G           |3.29G           |\n\nNumber of segments queried per host\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 12              |12              |12              |\n12 --------> 6               |6               |6               |\n18 --------> 4               |4               |4               |\n24 --------> 3               |3               |3               |"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTI1NjM4", "url": "https://github.com/apache/pinot/pull/5737#pullrequestreview-455125638", "createdAt": "2020-07-24T19:12:54Z", "commit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToxMjo1NFrOG261Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzozMDoyNFrOG3ARRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDEzNA==", "bodyText": "setter for retentionHours is still needed rt?", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460240134", "createdAt": "2020-07-24T19:12:54Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -90,8 +91,8 @@ public RealtimeProvisioningHelperCommand setNumPartitions(int numPartitions) {\n     return this;\n   }\n \n-  public RealtimeProvisioningHelperCommand setRetentionHours(int retentionHours) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDM4OA==", "bodyText": "setter name should be setIngestionRate() ?", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460240388", "createdAt": "2020-07-24T19:13:31Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -115,17 +116,17 @@ public RealtimeProvisioningHelperCommand setSampleCompletedSegmentDir(String sam\n     return this;\n   }\n \n-  public RealtimeProvisioningHelperCommand setPeriodSampleSegmentConsumed(String periodSampleSegmentConsumed) {\n-    _periodSampleSegmentConsumed = periodSampleSegmentConsumed;\n+  public RealtimeProvisioningHelperCommand setPeriodSampleSegmentConsumed(int ingestionRate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MTQ3OQ==", "bodyText": "LOGGER instead of sout?", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460241479", "createdAt": "2020-07-24T19:15:57Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -145,6 +146,20 @@ public boolean getHelp() {\n     return _help;\n   }\n \n+  @Override\n+  public void printExamples() {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"\\n\\nThis command allows you to estimate the capacity needed for provisioning realtime hosts\")\n+        .append(\"It assumes that there is no upper limit to the amount of memory you can mmap\")\n+        .append(\"\\nIf you have a hybrid table, then consult the push frequency setting in your offline table specify it in the -pushFrequency argument\")\n+        .append(\"\\nIf you have a realtime-only table, then the default behavior is to assume that your queries need all data in memory all the time\")\n+        .append(\"\\nHowever, if most of your queries are going to be for (say) the last 96 hours, then you can specify that in -retentionHours\")\n+        .append(\"\\nDoing so will let this program assume that you are willing to take a page hit when querying older data\")\n+        .append(\"\\nand optimize memory and number of hosts accordingly.\")\n+        ;\n+    System.out.println(builder.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDM3Mg==", "bodyText": "thats over 3 weeks for a weekly push. SHould it instead be 7days + 72h for weekly and 31 days + 72h for monthly?", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460244372", "createdAt": "2020-07-24T19:22:16Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -158,17 +173,36 @@ public boolean execute()\n       throw new RuntimeException(\"Exception in reading table config from file \" + _tableConfigFile, e);\n     }\n \n+    StringBuilder note = new StringBuilder();\n+    note.append(\"\\nNote:\\n\");\n     int numReplicas = tableConfig.getValidationConfig().getReplicasPerPartitionNumber();\n-    if (_retentionHours == 0) {\n-      if (tableConfig.getValidationConfig().getSegmentPushFrequency().equalsIgnoreCase(\"hourly\")) {\n-        _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+    int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n+            .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n+    if (_retentionHours > 0) {\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");\n+    } else {\n+      if (_pushFrequency == null) {\n+        // This is a realtime-only table. Pick up the retention time\n+        _retentionHours = tableRetentionHours;\n+        note.append(\"\\n* Retention hours taken from tableConfig\");\n       } else {\n-        _retentionHours = DEFAULT_RETENTION_FOR_DAILY_PUSH;\n+        if (\"hourly\".equalsIgnoreCase(_pushFrequency)) {\n+          _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+        } else if (\"daily\".equalsIgnoreCase(_pushFrequency)) {\n+          _retentionHours = DEFAULT_RETENTION_FOR_DAILY_PUSH;\n+        } else if (\"weekly\".equalsIgnoreCase(_pushFrequency)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDk2Mw==", "bodyText": "use LOGGER in all these lines?", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460244963", "createdAt": "2020-07-24T19:23:31Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -177,25 +211,26 @@ public boolean execute()\n     // Completed: Use multiple (completedSize,numHours) data points to calculate completed size for our numHours\n     File sampleCompletedSegmentFile = new File(_sampleCompletedSegmentDir);\n \n-    long sampleSegmentConsumedSeconds =\n-        TimeUnit.SECONDS.convert(TimeUtils.convertPeriodToMillis(_periodSampleSegmentConsumed), TimeUnit.MILLISECONDS);\n-\n     long maxUsableHostMemBytes = DataSizeUtils.toBytes(_maxUsableHostMemory);\n \n     MemoryEstimator memoryEstimator =\n-        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, sampleSegmentConsumedSeconds,\n-            maxUsableHostMemBytes);\n+        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, _ingestionRate, maxUsableHostMemBytes, tableRetentionHours);\n     File sampleStatsHistory = memoryEstimator.initializeStatsHistory();\n     memoryEstimator\n         .estimateMemoryUsed(sampleStatsHistory, numHosts, numHours, totalConsumingPartitions, _retentionHours);\n \n+    note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    LOGGER.info(\"\\nMemory used per host\");\n-    displayResults(memoryEstimator.getTotalMemoryPerHost(), numHosts, numHours);\n+    System.out.println(\"\\n============================================================\\n\" + toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NTg3NA==", "bodyText": "I don't follow what \"Number of segments queries per host\" means. Won't that depend on the specific query patterns? Some more info about this in the log might help", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460245874", "createdAt": "2020-07-24T19:25:31Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -177,25 +211,26 @@ public boolean execute()\n     // Completed: Use multiple (completedSize,numHours) data points to calculate completed size for our numHours\n     File sampleCompletedSegmentFile = new File(_sampleCompletedSegmentDir);\n \n-    long sampleSegmentConsumedSeconds =\n-        TimeUnit.SECONDS.convert(TimeUtils.convertPeriodToMillis(_periodSampleSegmentConsumed), TimeUnit.MILLISECONDS);\n-\n     long maxUsableHostMemBytes = DataSizeUtils.toBytes(_maxUsableHostMemory);\n \n     MemoryEstimator memoryEstimator =\n-        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, sampleSegmentConsumedSeconds,\n-            maxUsableHostMemBytes);\n+        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, _ingestionRate, maxUsableHostMemBytes, tableRetentionHours);\n     File sampleStatsHistory = memoryEstimator.initializeStatsHistory();\n     memoryEstimator\n         .estimateMemoryUsed(sampleStatsHistory, numHosts, numHours, totalConsumingPartitions, _retentionHours);\n \n+    note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    LOGGER.info(\"\\nMemory used per host\");\n-    displayResults(memoryEstimator.getTotalMemoryPerHost(), numHosts, numHours);\n+    System.out.println(\"\\n============================================================\\n\" + toString());\n+    System.out.println(note.toString());\n+    LOGGER.info(\"\\nMemory used per host (Active/Mapped)\");\n+    displayResults(memoryEstimator.getActiveMemoryPerHost(), numHosts, numHours);\n     LOGGER.info(\"\\nOptimal segment size\");\n     displayResults(memoryEstimator.getOptimalSegmentSize(), numHosts, numHours);\n     LOGGER.info(\"\\nConsuming memory\");\n     displayResults(memoryEstimator.getConsumingMemoryPerHost(), numHosts, numHours);\n+    LOGGER.info(\"\\nNumber of segments queried per host\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTI4Ng==", "bodyText": "can we add \"since retentionHours is provided\" to this message. Otherwise it looks like it is flagging something that went wrong", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460329286", "createdAt": "2020-07-24T23:30:24Z", "author": {"login": "npawar"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -158,17 +173,36 @@ public boolean execute()\n       throw new RuntimeException(\"Exception in reading table config from file \" + _tableConfigFile, e);\n     }\n \n+    StringBuilder note = new StringBuilder();\n+    note.append(\"\\nNote:\\n\");\n     int numReplicas = tableConfig.getValidationConfig().getReplicasPerPartitionNumber();\n-    if (_retentionHours == 0) {\n-      if (tableConfig.getValidationConfig().getSegmentPushFrequency().equalsIgnoreCase(\"hourly\")) {\n-        _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+    int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n+            .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n+    if (_retentionHours > 0) {\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e25225d9a6b5f83678bb814cc62195734d83d473", "author": {"user": {"login": "mcvsubbu", "name": "Subbu Subramaniam"}}, "url": "https://github.com/apache/pinot/commit/e25225d9a6b5f83678bb814cc62195734d83d473", "committedDate": "2020-07-25T00:39:07Z", "message": "Addressed review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjQ4MTk3", "url": "https://github.com/apache/pinot/pull/5737#pullrequestreview-455248197", "createdAt": "2020-07-25T01:12:00Z", "commit": {"oid": "e25225d9a6b5f83678bb814cc62195734d83d473"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 437, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}