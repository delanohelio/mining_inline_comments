{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MjE1ODky", "number": 6109, "title": "Enhance star-tree to skip matching-all predicate on non-star-tree dimension", "bodyText": "Description\nFor #6093\nCurrently in order to use the star-tree index, all the predicates must be applied to the star-tree dimensions. This could limit the usage of star-tree when a predicates is not applied to the star-tree dimensions, but can be skipped because it matches all the records. This is especially common for the implicit predicate applied to time column for the hybrid tables.\nThis PR enhances the planning phase for star-tree to skip the predicates that matches all the records, so that star-tree can be applied to the use cases described above.", "createdAt": "2020-10-06T02:03:51Z", "url": "https://github.com/apache/pinot/pull/6109", "merged": true, "mergeCommit": {"oid": "81028ceedec3b07feeb383063599c37dfd9b59a5"}, "closed": true, "closedAt": "2020-10-08T05:15:19Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQSet8AFqTUwNDIxNDgzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQZ1JXABqjM4NTM0MTk5Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjE0ODMx", "url": "https://github.com/apache/pinot/pull/6109#pullrequestreview-504214831", "createdAt": "2020-10-07T19:50:01Z", "commit": {"oid": "6519f22df04d8174715530f16c101ae86841024b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1MDowMVrOHeDDFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1MTowMFrOHeDFIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2OTI2OA==", "bodyText": "do we need to make a copy of groupByColumns?", "url": "https://github.com/apache/pinot/pull/6109#discussion_r501269268", "createdAt": "2020-10-07T19:50:01Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/startree/operator/StarTreeFilterOperator.java", "diffHunk": "@@ -121,81 +117,23 @@\n \n   // Star-tree\n   private final StarTreeV2 _starTreeV2;\n-  // Set of group-by columns\n-  private final Set<String> _groupByColumns;\n   // Map from column to predicate evaluators\n   private final Map<String, List<PredicateEvaluator>> _predicateEvaluatorsMap;\n-  // Map from column to matching dictionary ids\n-  private final Map<String, IntSet> _matchingDictIdsMap;\n+  // Set of group-by columns\n+  private final Set<String> _groupByColumns;\n \n   private final Map<String, String> _debugOptions;\n   boolean _resultEmpty = false;\n \n-  public StarTreeFilterOperator(StarTreeV2 starTreeV2, @Nullable FilterContext filter,\n-      @Nullable Set<String> groupByColumns, @Nullable Map<String, String> debugOptions) {\n+  public StarTreeFilterOperator(StarTreeV2 starTreeV2, Map<String, List<PredicateEvaluator>> predicateEvaluatorsMap,\n+      Set<String> groupByColumns, @Nullable Map<String, String> debugOptions) {\n     _starTreeV2 = starTreeV2;\n-    _groupByColumns = groupByColumns != null ? new HashSet<>(groupByColumns) : Collections.emptySet();\n+    _predicateEvaluatorsMap = predicateEvaluatorsMap;\n+    _groupByColumns = groupByColumns;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6519f22df04d8174715530f16c101ae86841024b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2OTc5Mw==", "bodyText": "while (searchEntry = queue.poll() != null) {", "url": "https://github.com/apache/pinot/pull/6109#discussion_r501269793", "createdAt": "2020-10-07T19:51:00Z", "author": {"login": "xiangfu0"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/startree/operator/StarTreeFilterOperator.java", "diffHunk": "@@ -267,19 +206,19 @@ private StarTreeResult traverseStarTree() {\n     // Use BFS to traverse the star tree\n     Queue<SearchEntry> queue = new LinkedList<>();\n     queue.add(new SearchEntry(starTreeRootNode, _predicateEvaluatorsMap.keySet(), _groupByColumns));\n-    while (!queue.isEmpty()) {\n-      SearchEntry searchEntry = queue.remove();\n+    SearchEntry searchEntry;\n+    while ((searchEntry = queue.poll()) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6519f22df04d8174715530f16c101ae86841024b"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f07d407b63ee827facefaf27f444cee79644bd6", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/6f07d407b63ee827facefaf27f444cee79644bd6", "committedDate": "2020-10-08T02:31:07Z", "message": "Enhance star-tree to skip matching-all predicate on non-star-tree dimension"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6519f22df04d8174715530f16c101ae86841024b", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/6519f22df04d8174715530f16c101ae86841024b", "committedDate": "2020-10-06T01:44:09Z", "message": "Enhance star-tree to skip matching-all predicate on non-star-tree dimension"}, "afterCommit": {"oid": "6f07d407b63ee827facefaf27f444cee79644bd6", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/6f07d407b63ee827facefaf27f444cee79644bd6", "committedDate": "2020-10-08T02:31:07Z", "message": "Enhance star-tree to skip matching-all predicate on non-star-tree dimension"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1540, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}