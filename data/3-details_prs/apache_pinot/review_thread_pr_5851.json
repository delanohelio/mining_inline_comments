{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjAyOTU4", "number": 5851, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1MTozMFrOEXu-Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1OToyN1rOEXvJFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzIyMjYzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1MTozMFrOG_sJ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1MTozMFrOG_sJ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNjg5MQ==", "bodyText": "(nit)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int[] getGroupIdsForKey(int[][] keysList) {\n          \n          \n            \n              private int[] getGroupIdsForKeys(int[][] keysList) {", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469436891", "createdAt": "2020-08-12T17:51:30Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzIzOTk1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1NjoyNFrOG_sVPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1NjoyNFrOG_sVPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzOTgwNQ==", "bodyText": "Avoid using stream in query engine for performance concern.\nTo avoid boxing/unboxing, you may use fastutil IntArrayList and toIntArray() to get the primitive array.", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469439805", "createdAt": "2020-08-12T17:56:24Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI0NTIzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Nzo0OVrOG_sYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Nzo0OVrOG_sYjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDY1NA==", "bodyText": "(Critical) Need to make a copy of groupKeyIds, because it can be inserted into the map", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469440654", "createdAt": "2020-08-12T17:57:49Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();\n+  }\n+\n+  private void getGroupIdsForKeyHelper(int[][] keysList, int[] groupKeyIds, int level, List<Integer> groupIds) {\n+    if (level == keysList.length) {\n+      groupIds.add(getGroupIdForKey(new FixedIntArray(groupKeyIds)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI1MDc3OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1OToyN1rOG_scEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1OToyN1rOG_scEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MTU1Mw==", "bodyText": "(nit) Store keysList[level].length as a local variable", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469441553", "createdAt": "2020-08-12T17:59:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();\n+  }\n+\n+  private void getGroupIdsForKeyHelper(int[][] keysList, int[] groupKeyIds, int level, List<Integer> groupIds) {\n+    if (level == keysList.length) {\n+      groupIds.add(getGroupIdForKey(new FixedIntArray(groupKeyIds)));\n+      return;\n+    }\n+    for (int i = 0; i < keysList[level].length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6"}, "originalPosition": 189}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3970, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}