{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NjA0MzEz", "number": 6037, "title": "Add list of allowed tables for emitting table level metrics", "bodyText": "Description\nCurrently there is one config to enable/disable emitting table level metrics for all tables in a cluster. For big clusters, let's say the ones with a few thousands tables, this is problematic as one might need to set up alerts/monitoring on some the tables that have higher priority than others in the cluster. This PR introduces a config for whitelisted tables to address this problem. Table level metrics are still emitted for whitelisted tables even if emitting table level metrics is disabled for the whole cluster.\nTesting Done\nFor the following scenarios, deployed pinot locally; ran quick-start-batch script; and took a snapshot of metrics using jvisualvm.\n\nenableTableLevelMetrics = false and added baseballStats to the whitelist\n\n\n\nenableTableLevelMetrics = false and empty whitelist\n\n\n\nenableTableLevelMetrics = true", "createdAt": "2020-09-19T01:43:59Z", "url": "https://github.com/apache/pinot/pull/6037", "merged": true, "mergeCommit": {"oid": "40cb64d0606961042b3af8351b7da0b7cfbfad31"}, "closed": true, "closedAt": "2020-09-29T22:46:57Z", "author": {"login": "sajjad-moradi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKPusDgH2gAyNDg5NjA0MzEzOjBiZTI3NzBlMmIwYjdkN2Q2MTIxNmJhZTIwNTFlNjA3NDM1NTFmNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLcoKqgFqTQ5Mzc0NTYxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0be2770e2b0b7d7d61216bae2051e60743551f74", "author": {"user": {"login": "sajjad-moradi", "name": "Sajjad Moradi"}}, "url": "https://github.com/apache/pinot/commit/0be2770e2b0b7d7d61216bae2051e60743551f74", "committedDate": "2020-09-19T01:16:03Z", "message": "Add whitelist for emitting table level metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11cfe3eff1f4aa66b2706376f5ccd30efebc0fe2", "author": {"user": {"login": "sajjad-moradi", "name": "Sajjad Moradi"}}, "url": "https://github.com/apache/pinot/commit/11cfe3eff1f4aa66b2706376f5ccd30efebc0fe2", "committedDate": "2020-09-19T01:47:13Z", "message": "Change default value in AbstractMetrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3386e2d7bac7b51c6d2e45ad042f7eafac75e8d9", "author": {"user": {"login": "sajjad-moradi", "name": "Sajjad Moradi"}}, "url": "https://github.com/apache/pinot/commit/3386e2d7bac7b51c6d2e45ad042f7eafac75e8d9", "committedDate": "2020-09-19T02:09:52Z", "message": "Minor changes in comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODUzNjg4", "url": "https://github.com/apache/pinot/pull/6037#pullrequestreview-491853688", "createdAt": "2020-09-19T02:20:02Z", "commit": {"oid": "11cfe3eff1f4aa66b2706376f5ccd30efebc0fe2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODUzODg1", "url": "https://github.com/apache/pinot/pull/6037#pullrequestreview-491853885", "createdAt": "2020-09-19T02:23:42Z", "commit": {"oid": "3386e2d7bac7b51c6d2e45ad042f7eafac75e8d9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86fab4ded8219a28be52a9da433d8a42d49bf6a6", "author": {"user": {"login": "sajjad-moradi", "name": "Sajjad Moradi"}}, "url": "https://github.com/apache/pinot/commit/86fab4ded8219a28be52a9da433d8a42d49bf6a6", "committedDate": "2020-09-19T02:32:36Z", "message": "whitelist tables -> allowed tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNzQ1NjE3", "url": "https://github.com/apache/pinot/pull/6037#pullrequestreview-493745617", "createdAt": "2020-09-22T18:40:06Z", "commit": {"oid": "86fab4ded8219a28be52a9da433d8a42d49bf6a6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo0MDowN1rOHWHjKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo0OToyN1rOHWH4sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1NDQxMQ==", "bodyText": "thanks for changing this name", "url": "https://github.com/apache/pinot/pull/6037#discussion_r492954411", "createdAt": "2020-09-22T18:40:07Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metrics/AbstractMetrics.java", "diffHunk": "@@ -47,21 +53,36 @@\n \n   private final Map<String, AtomicLong> _gaugeValues = new ConcurrentHashMap<String, AtomicLong>();\n \n-  protected final boolean _global;\n+  private final boolean _isTableLevelMetricsEnabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86fab4ded8219a28be52a9da433d8a42d49bf6a6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1OTkyMQ==", "bodyText": "I think you are trying to keep the new configs you introduced in the same place. It is unfortunate that we don't have a BrokerConf (as yet), but let us keep the server-specific configs in the ServerConf file instead of moving that up to common constants.", "url": "https://github.com/apache/pinot/pull/6037#discussion_r492959921", "createdAt": "2020-09-22T18:49:27Z", "author": {"login": "mcvsubbu"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -279,7 +281,10 @@\n     }\n \n     public static final String DEFAULT_METRICS_PREFIX = \"pinot.server.\";\n-    public static final boolean DEFAULT_METRICS_GLOBAL_ENABLED = false;\n+    public static final String CONFIG_OF_ENABLE_TABLE_LEVEL_METRICS = \"pinot.server.enableTableLevelMetrics\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86fab4ded8219a28be52a9da433d8a42d49bf6a6"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 72, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}