{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzM5NzI4", "number": 6149, "title": "add validation for upsert tables", "bodyText": "Description\nPart of a series of PRs for #4261\nCheck this doc out for the new design", "createdAt": "2020-10-15T19:36:19Z", "url": "https://github.com/apache/pinot/pull/6149", "merged": true, "mergeCommit": {"oid": "1750548f08d842449dc7742abae58f0a5c47f280"}, "closed": true, "closedAt": "2020-10-16T19:24:35Z", "author": {"login": "yupeng9"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS3B1JgH2gAyNTA0MzM5NzI4OmQ0OTlmN2M0MzIxMzkyNmJjNWQ1NTliZjhjZTQ0N2FmNDk5MzE4NWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS-EBpgH2gAyNTA0MzM5NzI4Ojg3MDRlNTU1YjUwOWE4ZDFjODY0MjVmZmYxNTY2MGU4NWIwZjY3NWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b", "author": {"user": {"login": "yupeng9", "name": "Yupeng Fu"}}, "url": "https://github.com/apache/pinot/commit/d499f7c43213926bc5d559bf8ce447af4993185b", "committedDate": "2020-10-15T19:34:39Z", "message": "add validation for upsert tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NzY4NDE1", "url": "https://github.com/apache/pinot/pull/6149#pullrequestreview-509768415", "createdAt": "2020-10-15T20:18:58Z", "commit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDoxODo1OFrOHiYcSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDozMzo1NVrOHiZB-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDA4OA==", "bodyText": "Please add some javadoc on the checks performed here", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814088", "createdAt": "2020-10-15T20:18:58Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()), \"Upsert table must have primary key columns in the schema\");", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814806", "createdAt": "2020-10-15T20:20:27Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ==", "bodyText": "This can potentially have NPE\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n          \n          \n            \n                    .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE. equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()), \"Upsert table must use replica-group based routing\")", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505816751", "createdAt": "2020-10-15T20:24:05Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMDk0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (streamConfig.getConsumerTypes().size() != 1\n          \n          \n            \n                      || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n          \n          \n            \n                    throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(), \"\"Upsert table must use low-level streaming consumer type\");", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505820946", "createdAt": "2020-10-15T20:30:30Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMzczNw==", "bodyText": "Use precondition, also recommend reorder the checks in this order: upsert mode -> primary key -> table type -> consumer type -> routing type, which IMO is more intuitive", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505823737", "createdAt": "2020-10-15T20:33:55Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NzkxMzM0", "url": "https://github.com/apache/pinot/pull/6149#pullrequestreview-509791334", "createdAt": "2020-10-15T20:40:13Z", "commit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo0MDoxNFrOHiZVxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo0MDoxNFrOHiZVxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyODgwNA==", "bodyText": "nit: do this in the beginning ?", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505828804", "createdAt": "2020-10-15T20:40:14Z", "author": {"login": "icefury71"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d499f7c43213926bc5d559bf8ce447af4993185b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336", "author": {"user": {"login": "yupeng9", "name": "Yupeng Fu"}}, "url": "https://github.com/apache/pinot/commit/12e2ab5b400ef56fcc02f435a043785d42f71336", "committedDate": "2020-10-15T22:36:24Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODYzODMz", "url": "https://github.com/apache/pinot/pull/6149#pullrequestreview-509863833", "createdAt": "2020-10-15T22:56:06Z", "commit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODg3MDI0", "url": "https://github.com/apache/pinot/pull/6149#pullrequestreview-509887024", "createdAt": "2020-10-15T23:43:34Z", "commit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MzozNVrOHifMxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MzozNVrOHifMxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDgwNw==", "bodyText": "(nit) Use precondition for this as well", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505924807", "createdAt": "2020-10-15T23:43:35Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +235,39 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n+   */\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // check table type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8704e555b509a8d1c86425fff15660e85b0f675c", "author": {"user": {"login": "yupeng9", "name": "Yupeng Fu"}}, "url": "https://github.com/apache/pinot/commit/8704e555b509a8d1c86425fff15660e85b0f675c", "committedDate": "2020-10-16T03:46:23Z", "message": "comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}