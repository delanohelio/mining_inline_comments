{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTc2NzA4", "number": 5277, "title": "[Part 2] Deepstore by-pass in LLC: introduce segment uploader for segment split commit.", "bodyText": "Refactor the current LLC code to introduce segment uploader.\n(1) It allows segment upload to configurable locations during a split commit:\n(2) A controller vip uploader is refactored out which has the exactly same behavior as the current uploader.\nNo behavior difference is expected from this refactoring -- a new BestEffortSegmentUploader will be added soon.\n@mcvsubbu @Jackie-Jiang", "createdAt": "2020-04-20T16:44:34Z", "url": "https://github.com/apache/pinot/pull/5277", "merged": true, "mergeCommit": {"oid": "f2c56a737dea42b7f97e09afddca6df0e7b4be22"}, "closed": true, "closedAt": "2020-04-24T16:20:51Z", "author": {"login": "chenboat"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYo2JygH2gAyNDA2MTc2NzA4OmUxNjBmZmExYjVmNmI5MDZkODU0NTU1ZGRkZmZiMjg2ZWRkYmYwNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaz9s8AFqTQwMDA5MDcyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e160ffa1b5f6b906d854555dddffb286eddbf04d", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/e160ffa1b5f6b906d854555dddffb286eddbf04d", "committedDate": "2020-04-17T22:15:37Z", "message": "Introduce the concept of segment uploader and refactor the server LLC logic to use a configurable segment uploader in SegmentCommitter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8de830493ea1d75200fdcc15e069be40fea270c", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/d8de830493ea1d75200fdcc15e069be40fea270c", "committedDate": "2020-04-17T22:16:53Z", "message": "Add a new segment uploader."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17db52c4e4141dfbac5be891edaa1552cd8ab54f", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/17db52c4e4141dfbac5be891edaa1552cd8ab54f", "committedDate": "2020-04-18T00:08:44Z", "message": "Revert merge errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/6d8352ffb71157000c02bf9098167a95d3bcc5b3", "committedDate": "2020-04-20T16:38:49Z", "message": "Delete the BestEffortSegmentUploader for now."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjkzMjY5", "url": "https://github.com/apache/pinot/pull/5277#pullrequestreview-396693269", "createdAt": "2020-04-20T18:09:32Z", "commit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowOTozM1rOGIhNvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoyMToxNlrOGIhpWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NTk4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              SegmentUploadStatus segmentUpload(File segmentFile);\n          \n          \n            \n              SegmentUploadStatus uploadSegment(File segmentFile);", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411585980", "createdAt": "2020-04-20T18:09:33Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploader.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+\n+\n+public interface SegmentUploader {\n+  SegmentUploadStatus segmentUpload(File segmentFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NjMzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean uploadSuccessful;\n          \n          \n            \n              private boolean _uploadSuccessful;", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411586331", "createdAt": "2020-04-20T18:10:10Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploadStatus.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+public class SegmentUploadStatus {\n+  // True if and only if the upload is successful.\n+  private boolean uploadSuccessful;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NjQ5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String segmentLocation;\n          \n          \n            \n              private String _segmentLocation;", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411586499", "createdAt": "2020-04-20T18:10:26Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploadStatus.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+public class SegmentUploadStatus {\n+  // True if and only if the upload is successful.\n+  private boolean uploadSuccessful;\n+  // Segment location uri string when the upload is successful.\n+  private String segmentLocation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NjkzMA==", "bodyText": "why not just return the URL here?", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411586930", "createdAt": "2020-04-20T18:11:04Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploader.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+\n+\n+public interface SegmentUploader {\n+  SegmentUploadStatus segmentUpload(File segmentFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4NTk4MA=="}, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MTc3OQ==", "bodyText": "you should not be using the protocol handler here. Instead, you need to introduce a method to upload the segment to contrller vip. Copy/paste protocolHandler.uploadSegment. Refactor the protocol handler to use this method.", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411591779", "createdAt": "2020-04-20T18:19:04Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/ControllerVipBasedSegmentUploader.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.server.realtime.ServerSegmentCompletionProtocolHandler;\n+import org.slf4j.Logger;\n+\n+\n+// A segment uploader which uploads segments to the controller via the controller's segmentCommitUpload end point\n+// point.\n+public class ControllerVipBasedSegmentUploader implements SegmentUploader {\n+  private final SegmentCompletionProtocol.Request.Params _params;\n+  private final ServerSegmentCompletionProtocolHandler _protocolHandler;\n+  private final Logger _segmentLogger;\n+  private final String _controllerVipUrl;\n+\n+  public ControllerVipBasedSegmentUploader(Logger segmentLogger, ServerSegmentCompletionProtocolHandler protocolHandler,\n+      SegmentCompletionProtocol.Request.Params params, String controllerVipUrl) {\n+    _segmentLogger = segmentLogger;\n+    _protocolHandler = protocolHandler;\n+    _params = params;\n+    _controllerVipUrl = controllerVipUrl;\n+  }\n+\n+  @Override\n+  public SegmentUploadStatus segmentUpload(File segmentFile) {\n+    SegmentCompletionProtocol.Response segmentCommitUploadResponse =\n+        _protocolHandler.segmentCommitUpload(_params, segmentFile, _controllerVipUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MzA1MA==", "bodyText": "You dont need this class. If return values turn out to be more complex, we can introduce a status class then", "url": "https://github.com/apache/pinot/pull/5277#discussion_r411593050", "createdAt": "2020-04-20T18:21:16Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploadStatus.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+public class SegmentUploadStatus {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8352ffb71157000c02bf9098167a95d3bcc5b3"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "703120214919ffb03614d5aaf0a13c7eb9436f79", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/703120214919ffb03614d5aaf0a13c7eb9436f79", "committedDate": "2020-04-21T04:52:07Z", "message": "Update pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploader.java\n\nCo-Authored-By: Subbu Subramaniam <mcvsubbu@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30830a9dd802775145629e754d8156621161d5a1", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/30830a9dd802775145629e754d8156621161d5a1", "committedDate": "2020-04-22T00:57:15Z", "message": "Refactoring the classes based on Subbu's suggestion."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDI2OTYy", "url": "https://github.com/apache/pinot/pull/5277#pullrequestreview-398426962", "createdAt": "2020-04-22T17:40:46Z", "commit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo0MDo0NlrOGKC0Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo1Mzo0NlrOGKDYXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4NTAzNQ==", "bodyText": "Why does this throw URISyntax exception? We are providing a File handle, it does not seem correct to let the upper layer handle the URI syntax failure. The uploader, when constructed, should verify the URIs right?", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413185035", "createdAt": "2020-04-22T17:40:46Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/SegmentUploader.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+\n+public interface SegmentUploader {\n+  // Returns the URI of the uploaded segment. null if the upload fails.\n+  URI uploadSegment(File segmentFile)\n+      throws URISyntaxException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4NjYyOQ==", "bodyText": "can we just call this method uploadSegment? The file part is implied since the first argument is the FileUploadDownloadClient", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413186629", "createdAt": "2020-04-22T17:42:57Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SegmentCompletionProtocolUtils.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.util;\n+\n+import java.io.File;\n+import java.net.URI;\n+import org.apache.pinot.common.metrics.ServerMeter;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+\n+/**\n+ * Util methods related to low level consumers' segment completion protocols. \n+ */\n+public class SegmentCompletionProtocolUtils {\n+  public static SegmentCompletionProtocol.Response uploadSegmentWithFileUploadDownloadClient(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4ODI4Ng==", "bodyText": "Can this logic be moved into ControllerVipBasedSegmentUploader?", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413188286", "createdAt": "2020-04-22T17:45:17Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SegmentCompletionProtocolUtils.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.util;\n+\n+import java.io.File;\n+import java.net.URI;\n+import org.apache.pinot.common.metrics.ServerMeter;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+\n+/**\n+ * Util methods related to low level consumers' segment completion protocols. \n+ */\n+public class SegmentCompletionProtocolUtils {\n+  public static SegmentCompletionProtocol.Response uploadSegmentWithFileUploadDownloadClient(\n+      FileUploadDownloadClient fileUploadDownloadClient, File segmentFile, String controllerVipUrl, String segmentName,\n+      int segmentUploadRequestTimeoutMs, Logger logger) {\n+    SegmentCompletionProtocol.Response response;\n+    try {\n+      String responseStr = fileUploadDownloadClient\n+          .uploadSegment(new URI(controllerVipUrl), segmentName, segmentFile, null, null, segmentUploadRequestTimeoutMs)\n+          .getResponse();\n+      response = SegmentCompletionProtocol.Response.fromJsonString(responseStr);\n+      logger.info(\"Controller response {} for {}\", response.toJsonString(), controllerVipUrl);\n+      if (response.getStatus().equals(SegmentCompletionProtocol.ControllerResponseStatus.NOT_LEADER)) {\n+        ControllerLeaderLocator.getInstance().invalidateCachedControllerLeader();\n+      }\n+    } catch (Exception e) {\n+      // Catch all exceptions, we want the protocol to handle the case assuming the request was never sent.\n+      response = SegmentCompletionProtocol.RESP_NOT_SENT;\n+      logger.error(\"Could not send request {}\", controllerVipUrl, e);\n+      // Invalidate controller leader cache, as exception could be because of leader being down (deployment/failure) and hence unable to send {@link SegmentCompletionProtocol.ControllerResponseStatus.NOT_LEADER}\n+      // If cache is not invalidated, we will not recover from exceptions until the controller comes back up\n+      ControllerLeaderLocator.getInstance().invalidateCachedControllerLeader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5MDU4Mg==", "bodyText": "can this logic be moved to the ControllerVip Uploader?", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413190582", "createdAt": "2020-04-22T17:48:23Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SegmentCompletionProtocolUtils.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.util;\n+\n+import java.io.File;\n+import java.net.URI;\n+import org.apache.pinot.common.metrics.ServerMeter;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+\n+/**\n+ * Util methods related to low level consumers' segment completion protocols. \n+ */\n+public class SegmentCompletionProtocolUtils {\n+  public static SegmentCompletionProtocol.Response uploadSegmentWithFileUploadDownloadClient(\n+      FileUploadDownloadClient fileUploadDownloadClient, File segmentFile, String controllerVipUrl, String segmentName,\n+      int segmentUploadRequestTimeoutMs, Logger logger) {\n+    SegmentCompletionProtocol.Response response;\n+    try {\n+      String responseStr = fileUploadDownloadClient\n+          .uploadSegment(new URI(controllerVipUrl), segmentName, segmentFile, null, null, segmentUploadRequestTimeoutMs)\n+          .getResponse();\n+      response = SegmentCompletionProtocol.Response.fromJsonString(responseStr);\n+      logger.info(\"Controller response {} for {}\", response.toJsonString(), controllerVipUrl);\n+      if (response.getStatus().equals(SegmentCompletionProtocol.ControllerResponseStatus.NOT_LEADER)) {\n+        ControllerLeaderLocator.getInstance().invalidateCachedControllerLeader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5MTc3Nw==", "bodyText": "Maybe call it Server2ControllerSegmentUploader? I think we should omit Vip in the name, there is nothing in here that says we should go through vip", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413191777", "createdAt": "2020-04-22T17:50:09Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/ControllerVipBasedSegmentUploader.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.core.util.SegmentCompletionProtocolUtils;\n+import org.slf4j.Logger;\n+\n+import static org.apache.pinot.common.protocols.SegmentCompletionProtocol.ControllerResponseStatus.UPLOAD_SUCCESS;\n+\n+\n+// A segment uploader which uploads segments to the controller via the controller's segmentCommitUpload end point\n+// point.\n+public class ControllerVipBasedSegmentUploader implements SegmentUploader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5MjAyNA==", "bodyText": "Can construct URI here and throw exception if it fails", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413192024", "createdAt": "2020-04-22T17:50:29Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/ControllerVipBasedSegmentUploader.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.core.util.SegmentCompletionProtocolUtils;\n+import org.slf4j.Logger;\n+\n+import static org.apache.pinot.common.protocols.SegmentCompletionProtocol.ControllerResponseStatus.UPLOAD_SUCCESS;\n+\n+\n+// A segment uploader which uploads segments to the controller via the controller's segmentCommitUpload end point\n+// point.\n+public class ControllerVipBasedSegmentUploader implements SegmentUploader {\n+  private final Logger _segmentLogger;\n+  private final String _controllerVipUrl;\n+  private final FileUploadDownloadClient _fileUploadDownloadClient;\n+  private final String _segmentName;\n+  private final int _segmentUploadRequestTimeoutMs;\n+  private final ServerMetrics _serverMetrics;\n+\n+  public ControllerVipBasedSegmentUploader(Logger segmentLogger, FileUploadDownloadClient fileUploadDownloadClient,\n+      String controllerVipUrl, String segmentName, int segmentUploadRequestTimeoutMs, ServerMetrics serverMetrics) {\n+    _segmentLogger = segmentLogger;\n+    _fileUploadDownloadClient = fileUploadDownloadClient;\n+    _controllerVipUrl = controllerVipUrl;\n+    _segmentName = segmentName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5NDMzNA==", "bodyText": "Or, maybe just inline the logic of this method inside the uploader. The logic for  a different uploader is going to be different anyway.", "url": "https://github.com/apache/pinot/pull/5277#discussion_r413194334", "createdAt": "2020-04-22T17:53:46Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SegmentCompletionProtocolUtils.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.util;\n+\n+import java.io.File;\n+import java.net.URI;\n+import org.apache.pinot.common.metrics.ServerMeter;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+\n+/**\n+ * Util methods related to low level consumers' segment completion protocols. \n+ */\n+public class SegmentCompletionProtocolUtils {\n+  public static SegmentCompletionProtocol.Response uploadSegmentWithFileUploadDownloadClient(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4NjYyOQ=="}, "originalCommit": {"oid": "30830a9dd802775145629e754d8156621161d5a1"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fea5273b117fff6e5001ab83aeddb1794c78f9d2", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/fea5273b117fff6e5001ab83aeddb1794c78f9d2", "committedDate": "2020-04-23T01:09:14Z", "message": "Revise based on comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "346bf2e2370ea66c5ed33a05db6f583f8e8e8140", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/346bf2e2370ea66c5ed33a05db6f583f8e8e8140", "committedDate": "2020-04-23T21:07:31Z", "message": "Fix broken integration tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTU0NzQ3", "url": "https://github.com/apache/pinot/pull/5277#pullrequestreview-399554747", "createdAt": "2020-04-23T23:55:32Z", "commit": {"oid": "346bf2e2370ea66c5ed33a05db6f583f8e8e8140"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo1NTozMlrOGLAytQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDowMToyMVrOGLA65w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwMDUwMQ==", "bodyText": "remove this line", "url": "https://github.com/apache/pinot/pull/5277#discussion_r414200501", "createdAt": "2020-04-23T23:55:32Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/Server2ControllerSegmentUploader.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.core.util.SegmentCompletionProtocolUtils;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+import static org.apache.pinot.common.protocols.SegmentCompletionProtocol.ControllerResponseStatus.UPLOAD_SUCCESS;\n+\n+\n+// A segment uploader which uploads segments to the controller via the controller's segmentCommitUpload end point\n+// point.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "346bf2e2370ea66c5ed33a05db6f583f8e8e8140"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwMjI2Nw==", "bodyText": "can we avoid the static import please", "url": "https://github.com/apache/pinot/pull/5277#discussion_r414202267", "createdAt": "2020-04-24T00:00:27Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/Server2ControllerSegmentUploader.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.core.util.SegmentCompletionProtocolUtils;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+import static org.apache.pinot.common.protocols.SegmentCompletionProtocol.ControllerResponseStatus.UPLOAD_SUCCESS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "346bf2e2370ea66c5ed33a05db6f583f8e8e8140"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwMjU5OQ==", "bodyText": "Please parse the URI here and save it as a member, throw exception if URI does not parse.", "url": "https://github.com/apache/pinot/pull/5277#discussion_r414202599", "createdAt": "2020-04-24T00:01:21Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/Server2ControllerSegmentUploader.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.data.manager.realtime;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import org.apache.pinot.common.metrics.ServerMetrics;\n+import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n+import org.apache.pinot.common.utils.FileUploadDownloadClient;\n+import org.apache.pinot.core.util.SegmentCompletionProtocolUtils;\n+import org.apache.pinot.server.realtime.ControllerLeaderLocator;\n+import org.slf4j.Logger;\n+\n+import static org.apache.pinot.common.protocols.SegmentCompletionProtocol.ControllerResponseStatus.UPLOAD_SUCCESS;\n+\n+\n+// A segment uploader which uploads segments to the controller via the controller's segmentCommitUpload end point\n+// point.\n+public class Server2ControllerSegmentUploader implements SegmentUploader {\n+  private final Logger _segmentLogger;\n+  // The controller segment upload url.\n+  private final String _controllerSegmentUploadCommitUrl;\n+  private final FileUploadDownloadClient _fileUploadDownloadClient;\n+  private final String _segmentName;\n+  private final int _segmentUploadRequestTimeoutMs;\n+  private final ServerMetrics _serverMetrics;\n+\n+  public Server2ControllerSegmentUploader(Logger segmentLogger, FileUploadDownloadClient fileUploadDownloadClient,\n+      String controllerSegmentUploadCommitUrl, String segmentName, int segmentUploadRequestTimeoutMs,\n+      ServerMetrics serverMetrics) {\n+    _segmentLogger = segmentLogger;\n+    _fileUploadDownloadClient = fileUploadDownloadClient;\n+    _controllerSegmentUploadCommitUrl = controllerSegmentUploadCommitUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "346bf2e2370ea66c5ed33a05db6f583f8e8e8140"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45cf75d956999de671dce89eed593a7f796290fd", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/45cf75d956999de671dce89eed593a7f796290fd", "committedDate": "2020-04-24T00:59:36Z", "message": "Revise based on feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMDg3Nzgy", "url": "https://github.com/apache/pinot/pull/5277#pullrequestreview-400087782", "createdAt": "2020-04-24T16:16:41Z", "commit": {"oid": "45cf75d956999de671dce89eed593a7f796290fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjoxNjo0MVrOGLfK6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjoxNjo0MVrOGLfK6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5ODIxNg==", "bodyText": "I looked up the code, and it seems that we sanitize the url returned by the controller, but then we pass strings around. We need to clean this up, but it can be in a later PR.", "url": "https://github.com/apache/pinot/pull/5277#discussion_r414698216", "createdAt": "2020-04-24T16:16:41Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/server/realtime/ServerSegmentCompletionProtocolHandler.java", "diffHunk": "@@ -131,7 +140,15 @@ public ServerSegmentCompletionProtocolHandler(ServerMetrics serverMetrics, Strin\n       return SegmentCompletionProtocol.RESP_NOT_SENT;\n     }\n \n-    return uploadSegment(url, params.getSegmentName(), segmentTarFile);\n+    Server2ControllerSegmentUploader segmentUploader= null;\n+    try {\n+      segmentUploader = new Server2ControllerSegmentUploader(LOGGER,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45cf75d956999de671dce89eed593a7f796290fd"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMDkwNzIx", "url": "https://github.com/apache/pinot/pull/5277#pullrequestreview-400090721", "createdAt": "2020-04-24T16:20:40Z", "commit": {"oid": "45cf75d956999de671dce89eed593a7f796290fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 916, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}