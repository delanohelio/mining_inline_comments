{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NjgwNDcz", "number": 5768, "title": "Add untar failure server meter", "bodyText": "Description\nThis PR adds untar failure server meter, so that we know how often this exception happens in production.", "createdAt": "2020-07-29T20:41:10Z", "url": "https://github.com/apache/pinot/pull/5768", "merged": true, "mergeCommit": {"oid": "10117aef74f5574da422798cd61ad7e452f2b10e"}, "closed": true, "closedAt": "2020-07-30T17:08:45Z", "author": {"login": "jackjlli"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5xMoxgH2gAyNDU4NjgwNDczOmVmOTM0NzdiMjBmODRmZmU1N2UwZWUzOTQ4MWQzYzc1OWQ1Zjg2Yjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6Cx0fgH2gAyNDU4NjgwNDczOmY1YmNlMWEzMjNjNDZhZTBmNzExYmViN2FmMDM5Y2ZiZDkzM2Y0OWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/ef93477b20f84ffe57e0ee39481d3c759d5f86b7", "committedDate": "2020-07-29T20:38:55Z", "message": "Add untar failure server meter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTAxNTY1", "url": "https://github.com/apache/pinot/pull/5768#pullrequestreview-458501565", "createdAt": "2020-07-30T15:16:10Z", "commit": {"oid": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTY4NDQ5", "url": "https://github.com/apache/pinot/pull/5768#pullrequestreview-458568449", "createdAt": "2020-07-30T16:32:33Z", "commit": {"oid": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjozMjozM1rOG5q2Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjozMjozM1rOG5q2Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyNDAwNg==", "bodyText": "Utils.rethrow() will keep the original exception type.", "url": "https://github.com/apache/pinot/pull/5768#discussion_r463124006", "createdAt": "2020-07-30T16:32:33Z", "author": {"login": "mayankshriv"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java", "diffHunk": "@@ -202,18 +206,22 @@ private String downloadSegmentToLocal(String uri, PinotCrypter crypter, String t\n           .info(\"Downloaded tarred segment: {} for table: {} from: {} to: {}, file length: {}\", segmentName, tableName,\n               uri, tempTarFile, tempTarFile.length());\n \n-      // If an exception is thrown when untarring, it means the tar file is broken OR not found after the retry.\n-      // Thus, there's no need to retry again.\n-      File tempIndexDir = TarGzCompressionUtils.untar(tempTarFile, tempSegmentDir).get(0);\n-\n-      File indexDir = new File(new File(_instanceDataManager.getSegmentDataDirectory(), tableName), segmentName);\n-      if (indexDir.exists()) {\n-        LOGGER.info(\"Deleting existing index directory for segment: {} for table: {}\", segmentName, tableName);\n-        FileUtils.deleteDirectory(indexDir);\n+      try {\n+        // If an exception is thrown when untarring, it means the tar file is broken OR not found after the retry.\n+        // Thus, there's no need to retry again.\n+        File tempIndexDir = TarGzCompressionUtils.untar(tempTarFile, tempSegmentDir).get(0);\n+        File indexDir = new File(new File(_instanceDataManager.getSegmentDataDirectory(), tableName), segmentName);\n+        if (indexDir.exists()) {\n+          LOGGER.info(\"Deleting existing index directory for segment: {} for table: {}\", segmentName, tableName);\n+          FileUtils.deleteDirectory(indexDir);\n+        }\n+        FileUtils.moveDirectory(tempIndexDir, indexDir);\n+        LOGGER.info(\"Successfully downloaded segment: {} for table: {} to: {}\", segmentName, tableName, indexDir);\n+        return indexDir.getAbsolutePath();\n+      } catch (Exception e) {\n+        _serverMetrics.addMeteredTableValue(tableName, ServerMeter.UNTAR_FAILURES, 1L);\n+        throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5bce1a323c46ae0f711beb7af039cfbd933f49a", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/f5bce1a323c46ae0f711beb7af039cfbd933f49a", "committedDate": "2020-07-30T17:07:55Z", "message": "Address PR comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 489, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}