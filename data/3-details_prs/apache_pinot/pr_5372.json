{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NjQ4ODI2", "number": 5372, "title": "Re-work on adding template support for Pinot Ingestion Job Spec", "bodyText": "This is the re-work of #5330, as the previous PR #5341 is reverted in #5366.\nTemplating is based on Groovy SimpleTemplateEngine.\nwe need to support Pinot Ingestion job take an ingestion job spec template file and passing thru values.\nThis will make user to schedule daily job simpler, without generating new yaml file everyday.\n\nAdding groovy template render support for Pinot.\nAdding -propertyFile parameter in LaunchDataIngestionJobCommand (in format of 'k1=v1' 'k2=v2'...) which will be the context to set in the template.\nAdding -values parameter in LaunchDataIngestionJobCommand which takes a list of parameters(in format of 'k1=v1' 'k2=v2'...) that will override the context read from the propertyFile and set to the template.\nThe template ingestion spec file will be rendered to final ingestion spec with the given context values.\nAdding support for default values today, yesterday into context for dev simplicity.\n\nUsage example:\nUser can define inputDirURI as 'file:///path/to/input/${year}/${month}/${day}/${hour}'\nin job spec and a config file job.config contains:\nyear=2020\nmonth=05\nday=01\nhour=00\n\nThen the new command line is :\nbin/pinot-admin.sh LaunchDataIngestionJob  \\\n-jobSpecFile ingestionJobSpec.yaml \\\n-propertyFile job.confg \\\n-values day=06 hour=07\n\nAfter that the real ingestion spec passed to ingestion job will have inputDirURI as 'file:///path/to/input/2020/05/06/07'", "createdAt": "2020-05-12T10:58:38Z", "url": "https://github.com/apache/pinot/pull/5372", "merged": true, "mergeCommit": {"oid": "8bd7a4ba51e4b28b575acadd7d3599760c87f8a2"}, "closed": true, "closedAt": "2020-05-13T05:26:34Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgh_TOAH2gAyNDE2NjQ4ODI2OjQyYTFiNmY1NzVmN2IxNzQ5Y2VlMjc5NDdlZjViZGY2MzExNDVlM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgpYVogBqjMzMjg5ODAwNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/42a1b6f575f7b1749cee27947ef5bdf631145e3d", "committedDate": "2020-05-12T10:47:40Z", "message": "Re-work on adding template support for Pinot Ingestion Job Spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMDkyNzU3", "url": "https://github.com/apache/pinot/pull/5372#pullrequestreview-410092757", "createdAt": "2020-05-12T14:20:37Z", "commit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyMDozN1rOGUJDOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyNToxNVrOGUJSlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3Mjk4NQ==", "bodyText": "What's the delimiter between two [template_key=template_value]? (Assuming ... indicates there's more than one of those.)", "url": "https://github.com/apache/pinot/pull/5372#discussion_r423772985", "createdAt": "2020-05-12T14:20:37Z", "author": {"login": "mayankshriv"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/ingestion/batch/IngestionJobLauncher.java", "diffHunk": "@@ -36,24 +41,34 @@\n \n   public static final Logger LOGGER = LoggerFactory.getLogger(IngestionJobLauncher.class);\n \n-  private static final String USAGE = \"usage: [jobSpec.yaml]\";\n+  private static final String USAGE = \"usage: [jobSpec.yaml] [template_key=template_value]...\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3NjkxOQ==", "bodyText": "How about LATEST?", "url": "https://github.com/apache/pinot/pull/5372#discussion_r423776919", "createdAt": "2020-05-12T14:25:15Z", "author": {"login": "mayankshriv"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/utils/GroovyTemplateUtils.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.utils;\n+\n+import groovy.text.SimpleTemplateEngine;\n+import groovy.text.TemplateEngine;\n+import java.io.IOException;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TimeZone;\n+\n+\n+public class GroovyTemplateUtils {\n+  private static final TemplateEngine GROOVY_TEMPLATE_ENGINE = new SimpleTemplateEngine();\n+  private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd\");\n+\n+  public static String renderTemplate(String template, Map<String, Object> newContext)\n+      throws IOException, ClassNotFoundException {\n+    Map<String, Object> contextMap = getDefaultContextMap();\n+    contextMap.putAll(newContext);\n+    return GROOVY_TEMPLATE_ENGINE.createTemplate(template).make(contextMap).toString();\n+  }\n+\n+  /**\n+   Construct default template context:\n+   today : today's date in format `yyyy-MM-dd`, example value: '2020-05-06'\n+   yesterday : yesterday's date in format `yyyy-MM-dd`, example value: '2020-05-06'\n+   */\n+  public static Map<String, Object> getDefaultContextMap() {\n+    Map<String, Object> defaultContextMap = new HashMap<>();\n+    Instant now = Instant.now();\n+    defaultContextMap.put(\"today\", DATE_FORMAT.format(new Date(now.toEpochMilli())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjgzMjE3", "url": "https://github.com/apache/pinot/pull/5372#pullrequestreview-410283217", "createdAt": "2020-05-12T17:50:30Z", "commit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo1MDozMVrOGUSKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo1MjowNVrOGUSObw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyMjI3OQ==", "bodyText": "can this be a list?", "url": "https://github.com/apache/pinot/pull/5372#discussion_r423922279", "createdAt": "2020-05-12T17:50:31Z", "author": {"login": "kishoreg"}, "path": "pinot-spi/src/test/resources/ingestionJobSpecTemplate.yaml", "diffHunk": "@@ -0,0 +1,45 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+executionFrameworkSpec:\n+  name: 'standalone'\n+  segmentGenerationJobRunnerClassName: 'org.apache.pinot.plugin.ingestion.batch.standalone.SegmentGenerationJobRunner'\n+  segmentTarPushJobRunnerClassName: 'org.apache.pinot.plugin.ingestion.batch.standalone.SegmentTarPushJobRunner'\n+  segmentUriPushJobRunnerClassName: 'org.apache.pinot.plugin.ingestion.batch.standalone.SegmentUriPushJobRunner'\n+jobType: SegmentCreationAndTarPush\n+inputDirURI: 'file:///path/to/input/${ year }/${ month }/${ day }'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyMzMxMQ==", "bodyText": "also, think of adding an option to take the properties file as an argument - something similar to helm", "url": "https://github.com/apache/pinot/pull/5372#discussion_r423923311", "createdAt": "2020-05-12T17:52:05Z", "author": {"login": "kishoreg"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/LaunchDataIngestionJobCommand.java", "diffHunk": "@@ -35,6 +39,9 @@\n   @Option(name = \"-jobSpecFile\", required = true, metaVar = \"<string>\", usage = \"Ingestion job spec file\")\n   private String _jobSpecFile;\n \n+  @Option(name = \"-values\", required = false, metaVar = \"<template context>\", handler = StringArrayOptionHandler.class, usage = \"Context values set to the job spec template\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzAyODkz", "url": "https://github.com/apache/pinot/pull/5372#pullrequestreview-410302893", "createdAt": "2020-05-12T18:15:50Z", "commit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoxNTo1MFrOGUTH9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoxNTo1MFrOGUTH9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkzODAzNg==", "bodyText": "I suggest fielding the exceptions and adding error message in the output that directs the user to the right action to fix it.", "url": "https://github.com/apache/pinot/pull/5372#discussion_r423938036", "createdAt": "2020-05-12T18:15:50Z", "author": {"login": "mcvsubbu"}, "path": "pinot-spi/src/main/java/org/apache/pinot/spi/ingestion/batch/IngestionJobLauncher.java", "diffHunk": "@@ -36,24 +41,34 @@\n \n   public static final Logger LOGGER = LoggerFactory.getLogger(IngestionJobLauncher.class);\n \n-  private static final String USAGE = \"usage: [jobSpec.yaml]\";\n+  private static final String USAGE = \"usage: [jobSpec.yaml] [template_key=template_value]...\";\n \n   private static void usage() {\n     System.err.println(USAGE);\n   }\n \n   public static void main(String[] args)\n       throws Exception {\n-    if (args.length != 1) {\n+    if (args.length < 1) {\n       usage();\n       System.exit(1);\n     }\n     String jobSpecFilePath = args[0];\n-\n-    try (Reader reader = new BufferedReader(new FileReader(jobSpecFilePath))) {\n-      SegmentGenerationJobSpec spec = new Yaml().loadAs(reader, SegmentGenerationJobSpec.class);\n-      runIngestionJob(spec);\n+    List<String> valueList = new ArrayList<>();\n+    for (int i = 1; i < args.length; i++) {\n+      valueList.add(args[i]);\n     }\n+    SegmentGenerationJobSpec spec =\n+        getSegmentGenerationJobSpec(jobSpecFilePath, GroovyTemplateUtils.getTemplateContext(valueList));\n+    runIngestionJob(spec);\n+  }\n+\n+  public static SegmentGenerationJobSpec getSegmentGenerationJobSpec(String jobSpecFilePath,\n+      Map<String, Object> context)\n+      throws IOException, ClassNotFoundException {\n+    String yamlTemplate = IOUtils.toString(new BufferedReader(new FileReader(jobSpecFilePath)));\n+    String yamlStr = GroovyTemplateUtils.renderTemplate(yamlTemplate, context);\n+    return new Yaml().loadAs(yamlStr, SegmentGenerationJobSpec.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a1b6f575f7b1749cee27947ef5bdf631145e3d"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfbd372692ad979f8b4e3204fed0055f0acd3d68", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/dfbd372692ad979f8b4e3204fed0055f0acd3d68", "committedDate": "2020-05-12T18:56:04Z", "message": "Adding support for property file"}, "afterCommit": {"oid": "077fe526456ebde6caf53af020a4d208edd6727f", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/077fe526456ebde6caf53af020a4d208edd6727f", "committedDate": "2020-05-12T19:15:49Z", "message": "Adding support for property file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa54768573cc777b7eb22d9e712ce6283e03af43", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/aa54768573cc777b7eb22d9e712ce6283e03af43", "committedDate": "2020-05-12T19:24:13Z", "message": "Adding support for property file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "077fe526456ebde6caf53af020a4d208edd6727f", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/077fe526456ebde6caf53af020a4d208edd6727f", "committedDate": "2020-05-12T19:15:49Z", "message": "Adding support for property file"}, "afterCommit": {"oid": "aa54768573cc777b7eb22d9e712ce6283e03af43", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/apache/pinot/commit/aa54768573cc777b7eb22d9e712ce6283e03af43", "committedDate": "2020-05-12T19:24:13Z", "message": "Adding support for property file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1029, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}