{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDYzMTA4", "number": 5256, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo1OToyMlrODyopDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMDozOVrODyo3Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDIxMjYzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/invertedindex/TextIndexHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo1OToyMlrOGGzFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo1OToyMlrOGGzFWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MTU5Mw==", "bodyText": "+1", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409781593", "createdAt": "2020-04-16T18:59:22Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/invertedindex/TextIndexHandler.java", "diffHunk": "@@ -162,8 +163,9 @@ private void createTextIndexForColumn(ColumnMetadata columnMetadata)\n     try (LuceneTextIndexCreator textIndexCreator = new LuceneTextIndexCreator(column, segmentDirectory, true)) {\n       try (DataFileReader forwardIndexReader = getForwardIndexReader(columnMetadata)) {\n         VarByteChunkSingleValueReader forwardIndex = (VarByteChunkSingleValueReader) forwardIndexReader;\n+        ChunkReaderContext readerContext = forwardIndex.createContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDIxNTgxOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/defaultcolumn/BaseDefaultColumnHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTowMDoxNVrOGGzHOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNToyNTo1NlrOGHAX2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MjA3NA==", "bodyText": "Good catch\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;\n          \n          \n            \n                int lengthOfLongestEntry = StringUtil.encodeUtf8(stringDefaultValue).length;", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409782074", "createdAt": "2020-04-16T19:00:15Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/defaultcolumn/BaseDefaultColumnHandler.java", "diffHunk": "@@ -338,7 +339,7 @@ void createV1ForwardIndexForTextIndex(String column, IndexLoadingConfig indexLoa\n     int totalDocs = _segmentMetadata.getTotalDocs();\n     Object defaultValue = fieldSpec.getDefaultNullValue();\n     String stringDefaultValue = (String) defaultValue;\n-    int lengthOfLongestEntry = stringDefaultValue.length();\n+    int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTMyMA==", "bodyText": "done", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999320", "createdAt": "2020-04-17T05:25:56Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/defaultcolumn/BaseDefaultColumnHandler.java", "diffHunk": "@@ -338,7 +339,7 @@ void createV1ForwardIndexForTextIndex(String column, IndexLoadingConfig indexLoa\n     int totalDocs = _segmentMetadata.getTotalDocs();\n     Object defaultValue = fieldSpec.getDefaultNullValue();\n     String stringDefaultValue = (String) defaultValue;\n-    int lengthOfLongestEntry = stringDefaultValue.length();\n+    int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MjA3NA=="}, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDIzNjg2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTowNjo0M1rOGGzUrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNToyODozOVrOGHAaTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTUxOQ==", "bodyText": "This logic can be pushed down to the VarByteChunkSingleValueWriter?", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409785519", "createdAt": "2020-04-16T19:06:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;\n \n   private final VarByteChunkSingleValueWriter _indexWriter;\n \n   public SingleValueVarByteRawIndexCreator(File baseIndexDir, ChunkCompressorFactory.CompressionType compressionType,\n       String column, int totalDocs, int maxLength)\n       throws IOException {\n     File file = new File(baseIndexDir, column + V1Constants.Indexes.RAW_SV_FORWARD_INDEX_FILE_EXTENSION);\n-    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, NUM_DOCS_PER_CHUNK, maxLength);\n+    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, getNumDocsPerChunk(maxLength), maxLength);\n+  }\n+\n+  @VisibleForTesting\n+  public static int getNumDocsPerChunk(int lengthOfLongestEntry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTk1MQ==", "bodyText": "It can be. The call to super() in the constructor of VarByteChunkSingleValueWriter makes things slightly since you have to call this function two times (as part of the call to super). I think the constructor of VarByteChunkSingleValueWriter and its base class can be refactored a little bit to make this logic private to the writer.\nI have a follow-up coming up for the TODO mentioned in the PR description. Will do as part of that", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999951", "createdAt": "2020-04-17T05:28:39Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;\n \n   private final VarByteChunkSingleValueWriter _indexWriter;\n \n   public SingleValueVarByteRawIndexCreator(File baseIndexDir, ChunkCompressorFactory.CompressionType compressionType,\n       String column, int totalDocs, int maxLength)\n       throws IOException {\n     File file = new File(baseIndexDir, column + V1Constants.Indexes.RAW_SV_FORWARD_INDEX_FILE_EXTENSION);\n-    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, NUM_DOCS_PER_CHUNK, maxLength);\n+    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, getNumDocsPerChunk(maxLength), maxLength);\n+  }\n+\n+  @VisibleForTesting\n+  public static int getNumDocsPerChunk(int lengthOfLongestEntry) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTUxOQ=="}, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDI0ODI0OnYy", "diffSide": "LEFT", "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/VarByteChunkSingleValueWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMDoyMVrOGGzcbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNToyNTo1MlrOGHAXyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzUwMA==", "bodyText": "?", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787500", "createdAt": "2020-04-16T19:10:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/VarByteChunkSingleValueWriter.java", "diffHunk": "@@ -61,7 +62,6 @@\n    * @param file File to write to.\n    * @param compressionType Type of compression to use.\n    * @param totalDocs Total number of docs to write.\n-   * @param numDocsPerChunk Number of documents per chunk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTMwNg==", "bodyText": "sorry, forgot to undo", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999306", "createdAt": "2020-04-17T05:25:52Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/VarByteChunkSingleValueWriter.java", "diffHunk": "@@ -61,7 +62,6 @@\n    * @param file File to write to.\n    * @param compressionType Type of compression to use.\n    * @param totalDocs Total number of docs to write.\n-   * @param numDocsPerChunk Number of documents per chunk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzUwMA=="}, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDI0OTE4OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMDozOVrOGGzdBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNToyNTo0OFrOGHAXvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzY1NQ==", "bodyText": "(nit) reformat", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787655", "createdAt": "2020-04-16T19:10:39Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTI5Mw==", "bodyText": "done", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999293", "createdAt": "2020-04-17T05:25:48Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzY1NQ=="}, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3409, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}