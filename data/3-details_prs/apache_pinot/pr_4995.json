{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzMxMjQ1", "number": 4995, "title": "Decouple server instance id with hostname/port config.", "bodyText": "Currently Helix will derived hostname/port from the server instanceId string (as demonstrated in the test testDisableLogicalServerID()) if the instance id is set in server config. This PR decouples the configuration of server instance id and hostname/port.  This allows Pinot user to set the following field independently:\n\n\nInstance ID\n\n\nserver_netty_host\n\n\nserver_netty_port\n\n\nThis is done by overwriting the Helix zk data after server connects to the zk cluster. It is hidden behind a flag now so the current use cases will not be affected.\nAlso added an integration test to test different configuration choices for servers.\n@mayankshriv @Jackie-Jiang @icefury71\nIssue link #4525", "createdAt": "2020-01-17T21:44:57Z", "url": "https://github.com/apache/pinot/pull/4995", "merged": true, "mergeCommit": {"oid": "6a9712728a1f0e981f9726573533633579ccd35b"}, "closed": true, "closedAt": "2020-01-29T17:44:55Z", "author": {"login": "chenboat"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7VsDTgH2gAyMzY0MzMxMjQ1OjlhNWQ2M2M3ZTNhZWUxZTQzYmJkYWY4ODk3YWI1MDU0MGE2N2YxM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_A7aRgH2gAyMzY0MzMxMjQ1OmVmNmNlOGE0MjQ1M2I4MjM3NjJkYWMzM2ExNzFlMjM3NzZlMjE4NTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e", "committedDate": "2020-01-17T21:32:35Z", "message": "Decouple server instance id and hostname/port config."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODcyNTIx", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-344872521", "createdAt": "2020-01-17T22:20:50Z", "commit": {"oid": "9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyMDo1MFrOFfGt1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyMjo0MVrOFfGwGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MDIxMg==", "bodyText": "Following code looks like its repeated in every test. Consider refactoring ?", "url": "https://github.com/apache/pinot/pull/4995#discussion_r368160212", "createdAt": "2020-01-17T22:20:50Z", "author": {"login": "icefury71"}, "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.integration.tests;\n+\n+\n+import org.apache.commons.configuration.Configuration;\n+import org.apache.commons.configuration.PropertiesConfiguration;\n+import org.apache.helix.HelixManager;\n+import org.apache.helix.PropertyKey;\n+import org.apache.helix.model.InstanceConfig;\n+import org.apache.pinot.common.utils.CommonConstants;\n+import org.apache.pinot.common.utils.ZkStarter;\n+import org.apache.pinot.controller.helix.ControllerTest;\n+import org.apache.pinot.server.starter.helix.HelixServerStarter;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import static org.apache.pinot.common.utils.CommonConstants.Helix.KEY_OF_SERVER_NETTY_HOST;\n+import static org.apache.pinot.common.utils.CommonConstants.Helix.KEY_OF_SERVER_NETTY_PORT;\n+import static org.apache.pinot.common.utils.CommonConstants.Server.CONFIG_OF_INSTANCE_ID;\n+import static org.apache.pinot.common.utils.CommonConstants.Server.CONFIG_OF_USE_LOGICAL_INSTANCE_ID;\n+import static org.testng.Assert.assertEquals;\n+\n+\n+public class ServerStarterIntegrationTest extends ControllerTest {\n+  public static final String DEFAULT_SERVER_ID = \"Server_127.0.0.1_8098\";\n+  public static final String SERVER1 = \"Server1\";\n+  @BeforeClass\n+  public void setUp()\n+      throws Exception {\n+    startZk();\n+    startController();\n+  }\n+\n+  @AfterClass\n+  public void tearDown()\n+      throws Exception {\n+    stopController();\n+    stopZk();\n+  }\n+\n+  @Test\n+  public void testWithNoInstanceIdNoHostnamePort()\n+      throws Exception {\n+    // Test the behavior when no instance id nor hostname/port is specified in server conf.\n+    Configuration serverConf = new PropertiesConfiguration();\n+    // Start the server\n+    HelixServerStarter helixServerStarter =\n+        new HelixServerStarter(getHelixClusterName(), ZkStarter.DEFAULT_ZK_STR, serverConf);\n+\n+    // Verify the serverId, host and port are set correctly in Zk.\n+    HelixManager helixManager = helixServerStarter.getHelixManager();\n+    PropertyKey.Builder keyBuilder = helixManager.getHelixDataAccessor().keyBuilder();\n+    InstanceConfig config =  helixManager.getHelixDataAccessor().getProperty(keyBuilder.instanceConfig(DEFAULT_SERVER_ID));\n+    helixServerStarter.stop();\n+\n+    assertEquals(config.getInstanceName(), DEFAULT_SERVER_ID);\n+    // By default (auto joined instances), server instance name is of format: {@code Server_<hostname>_<port>}, e.g.\n+    // {@code Server_localhost_12345}, hostname is of format: {@code Server_<hostname>}, e.g. {@code Server_localhost}.\n+    // More details refer to the class ServerInstance.\n+    assertEquals(config.getHostName(), \"Server_127.0.0.1\");\n+    assertEquals(config.getPort(), \"8098\");\n+  }\n+\n+  @Test\n+  public void testWithNoInstanceIdButWithHostnamePort()\n+      throws Exception {\n+    // Test the behavior when no instance id specified but hostname/port is specified in server conf.\n+    Configuration serverConf = new PropertiesConfiguration();\n+    serverConf.setProperty(KEY_OF_SERVER_NETTY_HOST, \"host1\");\n+    serverConf.setProperty(KEY_OF_SERVER_NETTY_PORT, 10001);\n+    // Start the server\n+    HelixServerStarter helixServerStarter =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MDUzMQ==", "bodyText": "Why do we need this ? I think we will always use the Zk info to look up host and port (whether logical id is enabled or not).", "url": "https://github.com/apache/pinot/pull/4995#discussion_r368160531", "createdAt": "2020-01-17T22:21:57Z", "author": {"login": "icefury71"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -192,6 +192,9 @@ public ServerType getServerType() {\n     public static final String CONFIG_OF_REQUEST_HANDLER_FACTORY_CLASS = \"pinot.server.requestHandlerFactory.class\";\n     public static final String CONFIG_OF_NETTY_PORT = \"pinot.server.netty.port\";\n     public static final String CONFIG_OF_ADMIN_API_PORT = \"pinot.server.adminapi.port\";\n+    // A logical instance id is one which does not contain server host name and/or port info. E.g., server1.\n+    // It is by default disabled.\n+    public static final String CONFIG_OF_USE_LOGICAL_INSTANCE_ID = \"pinot.server.logical.instance.id.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MDc5Mw==", "bodyText": "You could also simply look up if the server config has instance id set ?", "url": "https://github.com/apache/pinot/pull/4995#discussion_r368160793", "createdAt": "2020-01-17T22:22:41Z", "author": {"login": "icefury71"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -145,6 +146,11 @@ public HelixServerStarter(String helixClusterName, String zkServer, Configuratio\n \n     LOGGER.info(\"Connecting Helix manager\");\n     _helixManager.connect();\n+    // Overwrite the server netty host and port.\n+    if (_serverConf.getBoolean(CONFIG_OF_USE_LOGICAL_INSTANCE_ID, false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a5d63c7e3aee1e43bbdaf8897ab50540a67f13e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "481f5e1a7e493d4312698bcfb856da72bcee6787", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/481f5e1a7e493d4312698bcfb856da72bcee6787", "committedDate": "2020-01-17T22:56:49Z", "message": "Fix a test failure due to using local ip address. Refactor tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e740466d494129d2d7e4628313bbb6b857744e", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/22e740466d494129d2d7e4628313bbb6b857744e", "committedDate": "2020-01-17T23:25:57Z", "message": "Fix a test failure due to using local ip address."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fec862ee108a5948e8d0aefc7df37c94dd2eff9", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/8fec862ee108a5948e8d0aefc7df37c94dd2eff9", "committedDate": "2020-01-19T05:52:41Z", "message": "Fix test failure due to hostname."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTQ1NDQy", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-346145442", "createdAt": "2020-01-21T19:48:07Z", "commit": {"oid": "8fec862ee108a5948e8d0aefc7df37c94dd2eff9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f87cd46ef0aced62d5e5741439a55452c1e91fc7", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/f87cd46ef0aced62d5e5741439a55452c1e91fc7", "committedDate": "2020-01-21T23:06:12Z", "message": "Remove config flags about instance id overwrite."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTQwMzc1", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-348940375", "createdAt": "2020-01-27T20:06:24Z", "commit": {"oid": "f87cd46ef0aced62d5e5741439a55452c1e91fc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNjoyNVrOFiP2Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNjoyNVrOFiP2Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NTU1OA==", "bodyText": "Can you combine this with addInstanceTagIfNeeded() as both of them need to access the InstanceConfig to reduce the overhead?", "url": "https://github.com/apache/pinot/pull/4995#discussion_r371455558", "createdAt": "2020-01-27T20:06:25Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -186,6 +194,16 @@ public HelixServerStarter(String helixClusterName, String zkServer, Configuratio\n     serverMetrics.addCallbackGauge(\"memory.allocationFailureCount\", PinotDataBuffer::getAllocationFailureCount);\n   }\n \n+  private void overwriteServerHostInfo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87cd46ef0aced62d5e5741439a55452c1e91fc7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72e620b97f2c64dbe28691e5de63ad5c35f2ab62", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/72e620b97f2c64dbe28691e5de63ad5c35f2ab62", "committedDate": "2020-01-28T00:56:34Z", "message": "Revise based on comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/326560301f2cefeeb94e7b68971e036b63f19576", "committedDate": "2020-01-28T01:00:28Z", "message": "Add more log for server config udpates."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTAzNTQ0", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-349103544", "createdAt": "2020-01-28T02:44:52Z", "commit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NDo1MlrOFiX4fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NDo1MlrOFiX4fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4NzE5OQ==", "bodyText": "_helixAdmin.addInstanceTag() can be simplified to instanceTags.add()", "url": "https://github.com/apache/pinot/pull/4995#discussion_r371587199", "createdAt": "2020-01-28T02:44:52Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -266,7 +266,7 @@ private void updateInstanceConfigInHelix(Map<String, String> props) {\n     _helixAdmin.setConfig(scope, props);\n   }\n \n-  private void addInstanceTagIfNeeded(String clusterName, String instanceName) {\n+  private void updateInstanceConfigIfNeeded(String clusterName, String instanceName, Configuration serverConf) {\n     InstanceConfig instanceConfig = _helixAdmin.getInstanceConfig(clusterName, instanceName);\n     List<String> instanceTags = instanceConfig.getTags();\n     if (instanceTags == null || instanceTags.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTAzNzUz", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-349103753", "createdAt": "2020-01-28T02:45:48Z", "commit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NTo0OFrOFiX5Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NTo0OFrOFiX5Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4NzM3NA==", "bodyText": "Add a boolean flag to track whether the instance config needs to be updated", "url": "https://github.com/apache/pinot/pull/4995#discussion_r371587374", "createdAt": "2020-01-28T02:45:48Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -266,7 +266,7 @@ private void updateInstanceConfigInHelix(Map<String, String> props) {\n     _helixAdmin.setConfig(scope, props);\n   }\n \n-  private void addInstanceTagIfNeeded(String clusterName, String instanceName) {\n+  private void updateInstanceConfigIfNeeded(String clusterName, String instanceName, Configuration serverConf) {\n     InstanceConfig instanceConfig = _helixAdmin.getInstanceConfig(clusterName, instanceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTA0MDM2", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-349104036", "createdAt": "2020-01-28T02:47:13Z", "commit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NzoxM1rOFiX6Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjo0NzoxM1rOFiX6Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4NzU5OQ==", "bodyText": "Don't use System.exit() for production code. Throwing an exception is good enough to abort", "url": "https://github.com/apache/pinot/pull/4995#discussion_r371587599", "createdAt": "2020-01-28T02:47:13Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -277,6 +277,26 @@ private void addInstanceTagIfNeeded(String clusterName, String instanceName) {\n         _helixAdmin.addInstanceTag(clusterName, instanceName, UNTAGGED_SERVER_INSTANCE);\n       }\n     }\n+\n+    // If the server config has both instance_id and host/port info, overwrite the host/port info in zk. Without the\n+    // overwrite, Helix will extract host/port from the instance_id instead of use those in config.\n+    // Use serverConf instead of _serverConf as the latter has been modified.\n+    if (serverConf.containsKey(CONFIG_OF_INSTANCE_ID) && serverConf.containsKey(KEY_OF_SERVER_NETTY_HOST)) {\n+      // Internally, Helix use instanceId to derive Hostname and Port. To decouple them, explicitly set the hostname/port\n+      // field in zk.\n+      instanceConfig.setHostName(_serverConf.getString(KEY_OF_SERVER_NETTY_HOST));\n+      instanceConfig.setPort(Integer.toString(_serverConf.getInt(KEY_OF_SERVER_NETTY_PORT, DEFAULT_SERVER_NETTY_PORT)));\n+      // Use setProperty instead of _helixAdmin.setInstanceConfig because the latter explicitly forbids instance host\n+      // port modification.\n+      if(_helixManager.getHelixDataAccessor().setProperty(\n+          _helixManager.getHelixDataAccessor().keyBuilder().instanceConfig(instanceName), instanceConfig)) {\n+        LOGGER.info(\"Updated server hostname/port successfully for server id {} to {}:\", instanceName, instanceConfig);\n+      } else {\n+        LOGGER.error(\"Failed to update hostname/port for instance: {}\", instanceName);\n+        // Treat this is as a fatal error.\n+        System.exit(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326560301f2cefeeb94e7b68971e036b63f19576"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ff501d94a359bdea15b891f05bacc0d6a57fb9", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/11ff501d94a359bdea15b891f05bacc0d6a57fb9", "committedDate": "2020-01-28T19:17:29Z", "message": "Update based on reviews."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ef497364c7593120b2173d59e8990f0be8c9e7", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/a0ef497364c7593120b2173d59e8990f0be8c9e7", "committedDate": "2020-01-29T01:35:31Z", "message": "Update the zk only once."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODMyMjE2", "url": "https://github.com/apache/pinot/pull/4995#pullrequestreview-349832216", "createdAt": "2020-01-29T02:37:18Z", "commit": {"oid": "a0ef497364c7593120b2173d59e8990f0be8c9e7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMjozNzoxOVrOFi7CvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMjozNzoxOVrOFi7CvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MzI2MA==", "bodyText": "Compare then set:\nif (serverConf.containsKey(CONFIG_OF_INSTANCE_ID)) {\n  String hostName = _serverConf.getString(KEY_OF_SERVER_NETTY_HOST);\n  if (hostName != null && !hostName.equals(instanceConfig.getHostName())) {\n    instanceConfig.setHostName(hostName);\n    toUpdateHelixRecord = true;\n  }\n  String port = _serverConf.getString(KEY_OF_SERVER_NETTY_PORT);\n  if (port != null && !port.equals(instanceConfig.getPort())) {\n    instanceConfig.setPort(port);\n    toUpdateHelixRecord = true;\n  }\n}", "url": "https://github.com/apache/pinot/pull/4995#discussion_r372163260", "createdAt": "2020-01-29T02:37:19Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -266,16 +267,42 @@ private void updateInstanceConfigInHelix(Map<String, String> props) {\n     _helixAdmin.setConfig(scope, props);\n   }\n \n-  private void addInstanceTagIfNeeded(String clusterName, String instanceName) {\n+  private void updateInstanceConfigIfNeeded(String clusterName, String instanceName, Configuration serverConf) {\n     InstanceConfig instanceConfig = _helixAdmin.getInstanceConfig(clusterName, instanceName);\n     List<String> instanceTags = instanceConfig.getTags();\n+    boolean toUpdateHelixRecord = false;\n     if (instanceTags == null || instanceTags.size() == 0) {\n       if (ZKMetadataProvider.getClusterTenantIsolationEnabled(_helixManager.getHelixPropertyStore())) {\n-        _helixAdmin.addInstanceTag(clusterName, instanceName, TagNameUtils.getOfflineTagForTenant(null));\n-        _helixAdmin.addInstanceTag(clusterName, instanceName, TagNameUtils.getRealtimeTagForTenant(null));\n+        instanceConfig.addTag(TagNameUtils.getOfflineTagForTenant(null));\n+        instanceConfig.addTag(TagNameUtils.getRealtimeTagForTenant(null));\n       } else {\n-        _helixAdmin.addInstanceTag(clusterName, instanceName, UNTAGGED_SERVER_INSTANCE);\n+        instanceConfig.addTag(UNTAGGED_SERVER_INSTANCE);\n       }\n+      toUpdateHelixRecord = true;\n+    }\n+\n+    // If the server config has both instance_id and host/port info, overwrite the host/port info in zk. Without the\n+    // overwrite, Helix will extract host/port from the instance_id instead of use those in config.\n+    // Use serverConf instead of _serverConf as the latter has been modified.\n+    if (serverConf.containsKey(CONFIG_OF_INSTANCE_ID) && serverConf.containsKey(KEY_OF_SERVER_NETTY_HOST)) {\n+      toUpdateHelixRecord = true;\n+      // Internally, Helix use instanceId to derive Hostname and Port. To decouple them, explicitly set the hostname/port\n+      // field in zk.\n+      instanceConfig.setHostName(_serverConf.getString(KEY_OF_SERVER_NETTY_HOST));\n+      instanceConfig.setPort(Integer.toString(_serverConf.getInt(KEY_OF_SERVER_NETTY_PORT, DEFAULT_SERVER_NETTY_PORT)));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ef497364c7593120b2173d59e8990f0be8c9e7"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae8ce3bec2e7086cf81931cf3cda7fd4fafc542c", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/ae8ce3bec2e7086cf81931cf3cda7fd4fafc542c", "committedDate": "2020-01-29T05:56:21Z", "message": "Revised based on comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe501e570dc21ad016655e4d432da438ed1a339d", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/fe501e570dc21ad016655e4d432da438ed1a339d", "committedDate": "2020-01-29T06:37:45Z", "message": "Port is an integer in the config."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef6ce8a42453b823762dac33a171e23776e21853", "author": {"user": {"login": "chenboat", "name": "Ting Chen"}}, "url": "https://github.com/apache/pinot/commit/ef6ce8a42453b823762dac33a171e23776e21853", "committedDate": "2020-01-29T07:37:03Z", "message": "Port is an integer in the config."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1499, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}