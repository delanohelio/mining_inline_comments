{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MDkyMTk1", "number": 5199, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoyOTo1NlrODtPBnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoyOTo1NlrODtPBnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzU4Njg3OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/invertedindex/RealtimeLuceneDocIdCollector.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoyOTo1NlrOF-ixxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToyOToyNFrOF-k82A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNTgyOQ==", "bodyText": "(OCD) Can we always use docId for naming instead of mixing use of docId and docID", "url": "https://github.com/apache/pinot/pull/5199#discussion_r401125829", "createdAt": "2020-03-31T18:29:56Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/invertedindex/RealtimeLuceneDocIdCollector.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.realtime.impl.invertedindex;\n+\n+import java.io.IOException;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.search.Collector;\n+import org.apache.lucene.search.LeafCollector;\n+import org.apache.lucene.search.Scorable;\n+import org.apache.lucene.search.ScoreMode;\n+import org.roaringbitmap.buffer.MutableRoaringBitmap;\n+\n+/**\n+ * DocID collector for Lucene search query. We have optimized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431e09be72474e7b87fb8d84e369e818155ca1db"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTIxNQ==", "bodyText": "I would recommend implementing the real-time docId translator instead of having a separate real-time collector. You can also do that as the next step.\nLGTM otherwise.\n\nYes, that is the next step (implementing this optimization for realtime)", "url": "https://github.com/apache/pinot/pull/5199#discussion_r401161215", "createdAt": "2020-03-31T19:29:02Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/invertedindex/RealtimeLuceneDocIdCollector.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.realtime.impl.invertedindex;\n+\n+import java.io.IOException;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.search.Collector;\n+import org.apache.lucene.search.LeafCollector;\n+import org.apache.lucene.search.Scorable;\n+import org.apache.lucene.search.ScoreMode;\n+import org.roaringbitmap.buffer.MutableRoaringBitmap;\n+\n+/**\n+ * DocID collector for Lucene search query. We have optimized", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNTgyOQ=="}, "originalCommit": {"oid": "431e09be72474e7b87fb8d84e369e818155ca1db"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTQzMg==", "bodyText": "(OCD) Can we always use docId for naming instead of mixing use of docId and docID\n\nDone.", "url": "https://github.com/apache/pinot/pull/5199#discussion_r401161432", "createdAt": "2020-03-31T19:29:24Z", "author": {"login": "siddharthteotia"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/invertedindex/RealtimeLuceneDocIdCollector.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.core.realtime.impl.invertedindex;\n+\n+import java.io.IOException;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.search.Collector;\n+import org.apache.lucene.search.LeafCollector;\n+import org.apache.lucene.search.Scorable;\n+import org.apache.lucene.search.ScoreMode;\n+import org.roaringbitmap.buffer.MutableRoaringBitmap;\n+\n+/**\n+ * DocID collector for Lucene search query. We have optimized", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNTgyOQ=="}, "originalCommit": {"oid": "431e09be72474e7b87fb8d84e369e818155ca1db"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3340, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}