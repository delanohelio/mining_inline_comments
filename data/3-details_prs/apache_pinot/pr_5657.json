{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzc1NzQz", "number": 5657, "title": "Using dictionary based aggregation operator when there is no filter/g\u2026", "bodyText": "\u2026roup by\nDescription\n  select distinctcount(league) from baseballStats limit 10\nThis query can be answered by going over the dictionary instead of scanning the entire forward index.\nWe already have the code to check if a query can be answered just based on the dictionary for min/max. Enhanced it to support distinctcount as well.\nselect distinctcount(league) from baseballStats limit 10\nBefore\n{\n    \"resultTable\": {\n        \"dataSchema\": {\n            \"columnDataTypes\": [\"INT\"],\n            \"columnNames\": [\"distinctcount(league)\"]\n        },\n        \"rows\": [\n            [7]\n        ]\n    },\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numSegmentsQueried\": 1,\n    \"numSegmentsProcessed\": 1,\n    \"numSegmentsMatched\": 1,\n    \"numConsumingSegmentsQueried\": 0,\n    \"numDocsScanned\": 97889,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 97889,\n    \"numGroupsLimitReached\": false,\n    \"totalDocs\": 97889,\n    \"timeUsedMs\": 20,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {},\n    \"minConsumingFreshnessTimeMs\": 0\n}\n\nAfter this change\n\n{\n    \"resultTable\": {\n        \"dataSchema\": {\n            \"columnDataTypes\": [\"INT\"],\n            \"columnNames\": [\"distinctcount(league)\"]\n        },\n        \"rows\": [\n            [7]\n        ]\n    },\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numSegmentsQueried\": 1,\n    \"numSegmentsProcessed\": 1,\n    \"numSegmentsMatched\": 1,\n    \"numConsumingSegmentsQueried\": 0,\n    \"numDocsScanned\": 97889,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 0,\n    \"numGroupsLimitReached\": false,\n    \"totalDocs\": 97889,\n    \"timeUsedMs\": 15,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {},\n    \"minConsumingFreshnessTimeMs\": 0\n}\n\n\nBefore : \"numEntriesScannedPostFilter\": 97889,\nAfter: \"numEntriesScannedPostFilter\": 0,\n\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade? (Assume upgrade order: Controller, Broker, Server, Minion)\n\n Yes (Please label as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR fix a zero-downtime upgrade introduced earlier?\n\n Yes (Please label this as backward-incompat, and complete the section below on Release Notes)\n\nDoes this PR otherwise need attention when creating release notes? Things to consider:\n\nNew configuration options\nDeprecation of configurations\nSignature changes to public methods/interfaces\nNew plugins added or old plugins removed\n\n\n Yes (Please label this PR as release-notes and complete the section on Release Notes)\n\nRelease Notes\nIf you have tagged this as either backward-incompat or release-notes,\nyou MUST add text here that you would like to see appear in release notes of the\nnext release.\nIf you have a series of commits adding or enabling a feature, then\nadd this section only in final commit that marks the feature completed.\nRefer to earlier release notes to see examples of text\nDocumentation\nIf you have introduced a new feature or configuration, please add it to the documentation as well.\nSee https://docs.pinot.apache.org/developers/developers-and-contributors/update-document", "createdAt": "2020-07-02T22:58:47Z", "url": "https://github.com/apache/pinot/pull/5657", "merged": true, "mergeCommit": {"oid": "13a0c68274b2bb81e2607d4a603a09396260cc51"}, "closed": true, "closedAt": "2020-07-05T15:28:57Z", "author": {"login": "kishoreg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxG7xGgH2gAyNDQzNzc1NzQzOjFmOTIyNzg1ODEyMWJjYWEzNWNiY2FiZGUwOGU3OTMxMGNkNTgyMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcx2LPDgH2gAyNDQzNzc1NzQzOmEwN2IxNmM0NTg1ODU5OGM2OGM5YmU2YmM3MjMyMDZhMjdhY2ZiODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f9227858121bcaa35cbcabde08e79310cd5820f", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/1f9227858121bcaa35cbcabde08e79310cd5820f", "committedDate": "2020-07-02T22:53:05Z", "message": "Using dictionary based aggregation operator when there is no filter/group by"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddd3f5f450b7579bc62d8b07efb101c4af1d94ef", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/ddd3f5f450b7579bc62d8b07efb101c4af1d94ef", "committedDate": "2020-07-03T19:45:37Z", "message": "Fixing test cases, numEntriesScannedPostFilter has changed if there is a filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjQxNTE3", "url": "https://github.com/apache/pinot/pull/5657#pullrequestreview-442641517", "createdAt": "2020-07-05T02:55:17Z", "commit": {"oid": "ddd3f5f450b7579bc62d8b07efb101c4af1d94ef"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMjo1NToxN1rOGs_Hig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMjo1NToxN1rOGs_Hig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDY1MA==", "bodyText": "Would be good to use AggregationFunctionType instead of string name. Also, would be good to factor out as isFunctionFitForDictionaryBasedComputation in say AggregationFunctionUtils, for readability.", "url": "https://github.com/apache/pinot/pull/5657#discussion_r449824650", "createdAt": "2020-07-05T02:55:17Z", "author": {"login": "mayankshriv"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/maker/InstancePlanMakerImplV2.java", "diffHunk": "@@ -164,7 +164,8 @@ static boolean isFitForDictionaryBasedPlan(QueryContext queryContext, IndexSegme\n     for (ExpressionContext expression : selectExpressions) {\n       FunctionContext function = expression.getFunction();\n       String functionName = function.getFunctionName();\n-      if (!functionName.equals(\"min\") && !functionName.equals(\"max\") && !functionName.equals(\"minmaxrange\")) {\n+      if (!functionName.equals(\"min\") && !functionName.equals(\"max\") && !functionName.equals(\"minmaxrange\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddd3f5f450b7579bc62d8b07efb101c4af1d94ef"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a07b16c45858598c68c9be6bc723206a27acfb80", "author": {"user": {"login": "kishoreg", "name": "Kishore Gopalakrishna"}}, "url": "https://github.com/apache/pinot/commit/a07b16c45858598c68c9be6bc723206a27acfb80", "committedDate": "2020-07-05T05:55:31Z", "message": "Addressing comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 771, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}