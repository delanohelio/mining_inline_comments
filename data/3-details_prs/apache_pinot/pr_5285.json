{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTU1MzAz", "number": 5285, "title": "Use 8byte offsets in chunk based raw index creator", "bodyText": "This is a follow-up to #5256\nIn the previous PR support was added for computing the number of rows per chunk based on the metadata (variable width column value max length).\nIn this PR, the writer tracks the chunk offsets in the file header using long instead of int.  The writer version has been bumped to protect compatibility. Backward compatibility test has also been added.\nThe need for this and #5256 was seen as part of our internal testing of text search feature. There could be cases where text column value is several hundred thousands of characters. In our particular case around 1% values (of the total rows in a segment) were around 1.5million characters in the worst case.\nLimits of the current implementation (without this PR) -  let's say we have 10million rows in a segment. The 4-byte chunk offsets require each text column value to have less than or equal 75 characters on average in order to keep overall index size (across rows) <= 2GB which can be accessed using int offsets for each chunk in the file header. This is for the case of uncompressed chunks and with 1:3 average ratio of encoding String as UTF-8. If the index is compressed, the max number of characters could be around 150 assuming a decent compression ratio.\nIf we go beyond these limits, the chunk offsets overflow since index size becomes > 2GB. These limits were gathered through unit tests.\nIn our case, there are actually 10million rows per segment for the table using text search feature.\nThe above change isn't really aimed at supporting blobs. The PR fixes a limitation in our raw index. The user should still be aware of the potential memory overhead that comes with unreasonably large variable width column values. During indexing, they will be on heap (string, byte[]) and are going to increase the GC.", "createdAt": "2020-04-22T09:10:30Z", "url": "https://github.com/apache/pinot/pull/5285", "merged": true, "mergeCommit": {"oid": "410fd708508cff3ea33ca2567a296fa62b5bfecd"}, "closed": true, "closedAt": "2020-04-23T16:49:36Z", "author": {"login": "siddharthteotia"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaESoYgH2gAyNDA3MTU1MzAzOjE5ZWM2Mzg4ZDVlYzNmNjViYTg4NmEzMDFhN2EyODM2NzlmMTZmYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcafw6qAFqTM5OTI4ODc4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "19ec6388d5ec3f65ba886a301a7a283679f16fc6", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/19ec6388d5ec3f65ba886a301a7a283679f16fc6", "committedDate": "2020-04-22T08:48:05Z", "message": "Use 8byte offsets in chunk based raw index\ncreator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/4321b3370eebc8853dd28e780a9a0e9d1c81d0fe", "committedDate": "2020-04-22T09:12:32Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MzQzODY0", "url": "https://github.com/apache/pinot/pull/5285#pullrequestreview-398343864", "createdAt": "2020-04-22T16:03:55Z", "commit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjowMzo1NVrOGJ-Xjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxMTozMFrOGKBg5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMjIwNw==", "bodyText": "Nice. Do we also want to add a v1 raw data in the tests?", "url": "https://github.com/apache/pinot/pull/5285#discussion_r413112207", "createdAt": "2020-04-22T16:03:55Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/test/java/org/apache/pinot/index/readerwriter/VarByteChunkSingleValueReaderWriteTest.java", "diffHunk": "@@ -113,27 +117,37 @@ public void test(ChunkCompressorFactory.CompressionType compressionType)\n    * @throws IOException\n    */\n   @Test\n-  public void testBackwardCompatibility()\n-      throws IOException {\n+  public void testBackwardCompatibilityV1()\n+      throws Exception {\n     String[] expected = new String[]{\"abcde\", \"fgh\", \"ijklmn\", \"12345\"};\n+    testBackwardCompatibilityHelper(\"data/varByteStrings.v1\", expected, 1009);\n+  }\n \n-    // Get v1 from resources folder\n+  /**\n+   * This test ensures that the reader can read in an data file from version 2.\n+   */\n+  @Test\n+  public void testBackwardCompatibilityV2()\n+      throws Exception {\n+    String[] data = {\"abcdefghijk\", \"12456887\", \"pqrstuv\", \"500\"};\n+    testBackwardCompatibilityHelper(\"data/varByteStringsCompressed.v2\", data, 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2MjU1Mg==", "bodyText": "this should be based on the version passed in to the writer. Yes, we use only version 2 now, but let us keep the versioning clean. It is there in the constructor, use it. It will help if we want to select a different version in the writer for whatever reason.", "url": "https://github.com/apache/pinot/pull/5285#discussion_r413162552", "createdAt": "2020-04-22T17:09:53Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/BaseChunkSingleValueWriter.java", "diffHunk": "@@ -139,7 +141,8 @@ public void close()\n   private int writeHeader(ChunkCompressorFactory.CompressionType compressionType, int totalDocs, int numDocsPerChunk,\n       int sizeOfEntry, int version) {\n     int numChunks = (totalDocs + numDocsPerChunk - 1) / numDocsPerChunk;\n-    int headerSize = (numChunks + 7) * Integer.BYTES; // 7 items written before chunk indexing.\n+    // 7 items written before chunk indexing.\n+    int headerSize = (7 * Integer.BYTES) + (numChunks * VarByteChunkSingleValueWriter.FILE_HEADER_ENTRY_CHUNK_OFFSET_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2Mjg4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final int FILE_HEADER_ENTRY_CHUNK_OFFSET_SIZE = Long.BYTES;\n          \n          \n            \n              public static final int FILE_HEADER_ENTRY_CHUNK_OFFSET_SIZE_V3 = Long.BYTES;", "url": "https://github.com/apache/pinot/pull/5285#discussion_r413162888", "createdAt": "2020-04-22T17:10:21Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/BaseChunkSingleValueWriter.java", "diffHunk": "@@ -37,6 +37,8 @@\n  */\n public abstract class BaseChunkSingleValueWriter implements SingleColumnSingleValueWriter {\n   private static final Logger LOGGER = LoggerFactory.getLogger(BaseChunkSingleValueWriter.class);\n+  public static final int FILE_HEADER_ENTRY_CHUNK_OFFSET_SIZE_V1V2 = Integer.BYTES;\n+  public static final int FILE_HEADER_ENTRY_CHUNK_OFFSET_SIZE = Long.BYTES;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2Mzc1MA==", "bodyText": "Add another final int _headerEntryChunkOffsetSize here, determined based on version", "url": "https://github.com/apache/pinot/pull/5285#discussion_r413163750", "createdAt": "2020-04-22T17:11:30Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/BaseChunkSingleValueWriter.java", "diffHunk": "@@ -45,7 +47,7 @@\n   protected final ChunkCompressor _chunkCompressor;\n \n   protected int _chunkSize;\n-  protected int _dataOffset;\n+  protected long _dataOffset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDE0MjQw", "url": "https://github.com/apache/pinot/pull/5285#pullrequestreview-398414240", "createdAt": "2020-04-22T17:26:30Z", "commit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyNjozMFrOGKCLQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyNjozMFrOGKCLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3NDU5NQ==", "bodyText": "nice.\nI would also introduce a private final _headerEntryChunkOffsetSize here, and initialize it by calling a method getHeaderEntryChunkOffssetSize(version) in the writer.", "url": "https://github.com/apache/pinot/pull/5285#discussion_r413174595", "createdAt": "2020-04-22T17:26:30Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/reader/impl/v1/BaseChunkSingleValueReader.java", "diffHunk": "@@ -47,6 +48,7 @@\n   protected final int _numDocsPerChunk;\n   protected final int _numChunks;\n   protected final int _lengthOfLongestEntry;\n+  private final int _version;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4321b3370eebc8853dd28e780a9a0e9d1c81d0fe"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "562107d141d960693a4a76667fc08493d6e05d73", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/562107d141d960693a4a76667fc08493d6e05d73", "committedDate": "2020-04-22T17:32:30Z", "message": "fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf9ae370fd58008a3ca8ac24f0910c99a1ead12", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/baf9ae370fd58008a3ca8ac24f0910c99a1ead12", "committedDate": "2020-04-22T19:41:55Z", "message": "Fix tests and address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306369d5427143648e91bc5f12d1958383975428", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/306369d5427143648e91bc5f12d1958383975428", "committedDate": "2020-04-22T21:14:41Z", "message": "Use 8-byte offset for fixed-byte chunk writer.\nAdd backward compatibility test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Mjg4Nzg5", "url": "https://github.com/apache/pinot/pull/5285#pullrequestreview-399288789", "createdAt": "2020-04-23T16:48:36Z", "commit": {"oid": "306369d5427143648e91bc5f12d1958383975428"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 923, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}