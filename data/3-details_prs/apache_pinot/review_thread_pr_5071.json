{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjM1MDAx", "number": 5071, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMToxMzo1MVrODgDkMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMToxMzo1MVrODgDkMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTM5NDQyOnYy", "diffSide": "RIGHT", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/anonymizer/PinotDataAndQueryAnonymizer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMToxMzo1MVrOFqHZSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMToyMDowM1rOFqHbiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTY3Mw==", "bodyText": "It'd be good not just print the schemas for this particular edge case but for all the cases.", "url": "https://github.com/apache/pinot/pull/5071#discussion_r379705673", "createdAt": "2020-02-15T01:13:51Z", "author": {"login": "jackjlli"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/anonymizer/PinotDataAndQueryAnonymizer.java", "diffHunk": "@@ -287,6 +290,20 @@ public void buildGlobalDictionaries() throws Exception {\n     LOGGER.info(\"Finished building global dictionaries. Time taken: {}secs\", _timeToBuildDictionaries.elapsed(TimeUnit.SECONDS));\n   }\n \n+  private void getSchemaFromFirstSegment(String segmentDirectory) throws Exception {\n+    LOGGER.info(\"Reading metadata from segment: \" + segmentDirectory);\n+    File segmentIndexDir = new File(segmentDirectory);\n+    SegmentMetadataImpl segmentMetadata = new SegmentMetadataImpl(segmentIndexDir);\n+    if (_pinotSchema == null) {\n+      // only do this for first segment\n+      _pinotSchema = segmentMetadata.getSchema();\n+      anonymizeColumnNames(_pinotSchema);\n+      _avroSchema = getAvroSchemaFromPinotSchema(_pinotSchema);\n+      LOGGER.info(\"Pinot schema: \" + _pinotSchema.toPrettyJsonString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd8cce8cf3fe9206d854f3323a875b24b248a86"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNjI0OQ==", "bodyText": "Done", "url": "https://github.com/apache/pinot/pull/5071#discussion_r379706249", "createdAt": "2020-02-15T01:20:03Z", "author": {"login": "siddharthteotia"}, "path": "pinot-tools/src/main/java/org/apache/pinot/tools/anonymizer/PinotDataAndQueryAnonymizer.java", "diffHunk": "@@ -287,6 +290,20 @@ public void buildGlobalDictionaries() throws Exception {\n     LOGGER.info(\"Finished building global dictionaries. Time taken: {}secs\", _timeToBuildDictionaries.elapsed(TimeUnit.SECONDS));\n   }\n \n+  private void getSchemaFromFirstSegment(String segmentDirectory) throws Exception {\n+    LOGGER.info(\"Reading metadata from segment: \" + segmentDirectory);\n+    File segmentIndexDir = new File(segmentDirectory);\n+    SegmentMetadataImpl segmentMetadata = new SegmentMetadataImpl(segmentIndexDir);\n+    if (_pinotSchema == null) {\n+      // only do this for first segment\n+      _pinotSchema = segmentMetadata.getSchema();\n+      anonymizeColumnNames(_pinotSchema);\n+      _avroSchema = getAvroSchemaFromPinotSchema(_pinotSchema);\n+      LOGGER.info(\"Pinot schema: \" + _pinotSchema.toPrettyJsonString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTY3Mw=="}, "originalCommit": {"oid": "6dd8cce8cf3fe9206d854f3323a875b24b248a86"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3451, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}