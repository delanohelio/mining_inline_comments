{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDM2NjA2", "number": 5137, "title": "Fix the default value provider classes", "bodyText": "Implement the insertionIndexOf() for all constant value dictionaries\nSupport BYTES type\nFix the constant value indexes\nEnhance the integration test to cover all data types", "createdAt": "2020-03-11T01:18:25Z", "url": "https://github.com/apache/pinot/pull/5137", "merged": true, "mergeCommit": {"oid": "6daeb59318cadfc1c355be5276a044904ba96f45"}, "closed": true, "closedAt": "2020-03-11T20:58:13Z", "author": {"login": "Jackie-Jiang"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMcvVYgBqjMxMTY5OTA5MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMtbhpAFqTM3MzExMDU5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b6feb67d8f87d7d266a91fc24551e42542364ca", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/3b6feb67d8f87d7d266a91fc24551e42542364ca", "committedDate": "2020-03-11T01:15:49Z", "message": "Fix the ConstantValueDictionary\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Enhance the integration test to cover that"}, "afterCommit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/9cca930e83deaa184e15be759d1da6a0d81e7359", "committedDate": "2020-03-11T01:22:02Z", "message": "Fix the ConstantValueDictionary\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Enhance the integration test to cover that"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDU2MDQ4", "url": "https://github.com/apache/pinot/pull/5137#pullrequestreview-372456048", "createdAt": "2020-03-11T03:31:34Z", "commit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozMTozNFrOF0oKnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozMTozNFrOF0oKnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyODM1MQ==", "bodyText": "Good catch. Could you fix another older misuse too:\nhttps://github.com/apache/incubator-pinot/blob/master/pinot-core/src/main/java/org/apache/pinot/core/io/reader/impl/IntSingleValueDataFileReader.java#L54", "url": "https://github.com/apache/pinot/pull/5137#discussion_r390728351", "createdAt": "2020-03-11T03:31:34Z", "author": {"login": "haibow"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/reader/impl/ConstantSingleValueSortedIndex.java", "diffHunk": "@@ -59,26 +42,32 @@ public int getInt(int row) {\n   }\n \n   @Override\n-  public int getInt(int rowId, SortedIndexReaderImpl.Context context) {\n+  public int getInt(int rowId, ReaderContext context) {\n     return 0;\n   }\n \n   @Override\n-  public void close()\n-      throws IOException {\n+  public void readValues(int[] rows, int rowStartPos, int rowSize, int[] values, int valuesStartPos) {\n+    Arrays.fill(values, valuesStartPos, valuesStartPos + rowSize, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDU2NzY3", "url": "https://github.com/apache/pinot/pull/5137#pullrequestreview-372456767", "createdAt": "2020-03-11T03:34:36Z", "commit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozNDozN1rOF0oM_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozNDozN1rOF0oM_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyODk1Ng==", "bodyText": "How about constant double value? I also used \"single double\" earlier but was persuaded by Subbu it sounded a little weird", "url": "https://github.com/apache/pinot/pull/5137#discussion_r390728956", "createdAt": "2020-03-11T03:34:37Z", "author": {"login": "haibow"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/ConstantValueDoubleDictionary.java", "diffHunk": "@@ -19,20 +19,25 @@\n package org.apache.pinot.core.segment.index.readers;\n \n /**\n- * Dictionary for constant-value double\n+ * Dictionary of a single double value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cca930e83deaa184e15be759d1da6a0d81e7359", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/9cca930e83deaa184e15be759d1da6a0d81e7359", "committedDate": "2020-03-11T01:22:02Z", "message": "Fix the ConstantValueDictionary\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Enhance the integration test to cover that"}, "afterCommit": {"oid": "839f126e32606300c77b778d68aa2309092be6a0", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/839f126e32606300c77b778d68aa2309092be6a0", "committedDate": "2020-03-11T04:24:59Z", "message": "Fix the ConstantValueDictionary\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Enhance the integration test to cover that"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDc4NDQy", "url": "https://github.com/apache/pinot/pull/5137#pullrequestreview-372478442", "createdAt": "2020-03-11T05:07:45Z", "commit": {"oid": "839f126e32606300c77b778d68aa2309092be6a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowNzo0NVrOF0pY-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowNzo0NVrOF0pY-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0ODQwOQ==", "bodyText": "Why is this class renamed to SortedIndex instead of InvertedIndex?", "url": "https://github.com/apache/pinot/pull/5137#discussion_r390748409", "createdAt": "2020-03-11T05:07:45Z", "author": {"login": "jackjlli"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/column/BaseVirtualColumnProvider.java", "diffHunk": "@@ -39,7 +39,7 @@\n \n   public DataFileReader buildReader(VirtualColumnContext context) {\n     if (context.getFieldSpec().isSingleValueField()) {\n-      return new ConstantSingleValueInvertedIndex(0);\n+      return new ConstantSingleValueSortedIndex(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f126e32606300c77b778d68aa2309092be6a0"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617d263612b55322344674bcd3c86eb3694e6866", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/617d263612b55322344674bcd3c86eb3694e6866", "committedDate": "2020-03-11T19:52:31Z", "message": "Fix the default value provider classes\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Support BYTES type\n3. Fix the constant value indexes\n4. Enhance the integration test to cover all data types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "839f126e32606300c77b778d68aa2309092be6a0", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/839f126e32606300c77b778d68aa2309092be6a0", "committedDate": "2020-03-11T04:24:59Z", "message": "Fix the ConstantValueDictionary\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Enhance the integration test to cover that"}, "afterCommit": {"oid": "617d263612b55322344674bcd3c86eb3694e6866", "author": {"user": {"login": "Jackie-Jiang", "name": "Xiaotian (Jackie) Jiang"}}, "url": "https://github.com/apache/pinot/commit/617d263612b55322344674bcd3c86eb3694e6866", "committedDate": "2020-03-11T19:52:31Z", "message": "Fix the default value provider classes\n\n1. Implement the insertionIndexOf() for all constant value dictionaries\n2. Support BYTES type\n3. Fix the constant value indexes\n4. Enhance the integration test to cover all data types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTEwNTkw", "url": "https://github.com/apache/pinot/pull/5137#pullrequestreview-373110590", "createdAt": "2020-03-11T20:42:22Z", "commit": {"oid": "617d263612b55322344674bcd3c86eb3694e6866"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDo0MjoyMlrOF1IY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDo0MjoyMlrOF1IY3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NjI4NA==", "bodyText": "I didnt knoiw we had this convention. The jacvadocs on insertionIndexOf() does not state this in comments. Also, it points to a binarysearch implementation that does not exist (or, I could not locate it).. Can you fix the comments to reflect this convention? thanks.", "url": "https://github.com/apache/pinot/pull/5137#discussion_r391256284", "createdAt": "2020-03-11T20:42:22Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/ConstantValueDoubleDictionary.java", "diffHunk": "@@ -19,20 +19,25 @@\n package org.apache.pinot.core.segment.index.readers;\n \n /**\n- * Dictionary for constant-value double\n+ * Dictionary of a single double value.\n  */\n-\n public class ConstantValueDoubleDictionary extends BaseImmutableDictionary {\n-  final Double _value;\n+  private final double _value;\n \n-  public ConstantValueDoubleDictionary(Double value) {\n+  public ConstantValueDoubleDictionary(double value) {\n     super(1);\n     _value = value;\n   }\n \n   @Override\n   public int insertionIndexOf(String stringValue) {\n-\n+    double doubleValue = Double.parseDouble(stringValue);\n+    if (doubleValue < _value) {\n+      return -1;\n+    }\n+    if (doubleValue > _value) {\n+      return -2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617d263612b55322344674bcd3c86eb3694e6866"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1371, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}