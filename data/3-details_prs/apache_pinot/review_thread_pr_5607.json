{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzMyMDI1", "number": 5607, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTo1Njo1MVrOEIivkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoxMDowOVrOEIi8Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzkzMjk3OnYy", "diffSide": "LEFT", "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTo1Njo1MVrOGokhxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNTozMTo1N1rOGor61w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NDY5Mw==", "bodyText": "Are there any functional changes as part of this UI change? Will the default display time window be the same as before (based on granularity)?", "url": "https://github.com/apache/pinot/pull/5607#discussion_r445194693", "createdAt": "2020-06-24T21:56:51Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -30,17 +30,14 @@ import { getValueFromYaml } from 'thirdeye-frontend/utils/yaml-tools';\n import { inject as service } from '@ember/service';\n import { task } from 'ember-concurrency';\n import floatToPercent from 'thirdeye-frontend/utils/float-to-percent';\n-import { setUpTimeRangeOptions } from 'thirdeye-frontend/utils/manage-alert-utils';\n import moment from 'moment';\n import _ from 'lodash';\n import config from 'thirdeye-frontend/config/environment';\n \n const TABLE_DATE_FORMAT = 'MMM DD, hh:mm A'; // format for anomaly table\n const TIME_PICKER_INCREMENT = 5; // tells date picker hours field how granularly to display time\n-const DEFAULT_ACTIVE_DURATION = '1m'; // setting this date range selection as default (Last 24 Hours)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea8b2eb5bb07013ff4fb03b24a33d64fbc644acf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMxNTc5OQ==", "bodyText": "The default display window is determined using the response received from the backend.  The way the new time picker displays, we don't need to have a duration anymore.", "url": "https://github.com/apache/pinot/pull/5607#discussion_r445315799", "createdAt": "2020-06-25T05:31:57Z", "author": {"login": "harleyjj"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -30,17 +30,14 @@ import { getValueFromYaml } from 'thirdeye-frontend/utils/yaml-tools';\n import { inject as service } from '@ember/service';\n import { task } from 'ember-concurrency';\n import floatToPercent from 'thirdeye-frontend/utils/float-to-percent';\n-import { setUpTimeRangeOptions } from 'thirdeye-frontend/utils/manage-alert-utils';\n import moment from 'moment';\n import _ from 'lodash';\n import config from 'thirdeye-frontend/config/environment';\n \n const TABLE_DATE_FORMAT = 'MMM DD, hh:mm A'; // format for anomaly table\n const TIME_PICKER_INCREMENT = 5; // tells date picker hours field how granularly to display time\n-const DEFAULT_ACTIVE_DURATION = '1m'; // setting this date range selection as default (Last 24 Hours)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NDY5Mw=="}, "originalCommit": {"oid": "ea8b2eb5bb07013ff4fb03b24a33d64fbc644acf"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mzk2NTU1OnYy", "diffSide": "LEFT", "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoxMDowOVrOGok1xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzozMjowNlrOGrvKmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5OTgxNQ==", "bodyText": "is this no longer required?", "url": "https://github.com/apache/pinot/pull/5607#discussion_r445199815", "createdAt": "2020-06-24T22:10:09Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1449,32 +1449,13 @@ export default Component.extend({\n      * @method onRangeSelection\n      * @param {Object} rangeOption - the user-selected time range to load\n      */\n-    onRangeSelection(timeRangeOptions) {\n-      const {\n-        start,\n-        end,\n-        value: duration\n-      } = timeRangeOptions;\n-\n+    onRangeSelection(start, end) {\n       const startDate = moment(start).valueOf();\n       const endDate = moment(end).valueOf();\n+\n       //Update the time range option selected\n       set(this, 'analysisRange', [startDate, endDate]);\n       set(this, 'displayRange', [startDate, endDate]);\n-      set(this, 'duration', duration);\n-      // This makes sure we don't fetch if the preview is collapsed\n-      if(get(this, 'showDetails') && get(this, 'dataIsCurrent')){\n-        // With a new date range, we should reset the state of time series and anomalies for comparison\n-        if (get(this, 'isPreviewMode')) {\n-          this.setProperties({\n-            anomaliesOld: [],\n-            anomaliesOldSet: false,\n-            anomaliesCurrent: [],\n-            anomaliesCurrentSet: false\n-          });\n-        }\n-        this._fetchAnomalies();\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea8b2eb5bb07013ff4fb03b24a33d64fbc644acf"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMxNzAxNg==", "bodyText": "Here, I removed duration since it's no longer needed.  Old lines 1468-1475 were duplicate logic, so I condensed it to one check (new lines 1460-1467).  The fetchAnomalies check is now on lines 1468-1471  (new lines).", "url": "https://github.com/apache/pinot/pull/5607#discussion_r445317016", "createdAt": "2020-06-25T05:36:25Z", "author": {"login": "harleyjj"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1449,32 +1449,13 @@ export default Component.extend({\n      * @method onRangeSelection\n      * @param {Object} rangeOption - the user-selected time range to load\n      */\n-    onRangeSelection(timeRangeOptions) {\n-      const {\n-        start,\n-        end,\n-        value: duration\n-      } = timeRangeOptions;\n-\n+    onRangeSelection(start, end) {\n       const startDate = moment(start).valueOf();\n       const endDate = moment(end).valueOf();\n+\n       //Update the time range option selected\n       set(this, 'analysisRange', [startDate, endDate]);\n       set(this, 'displayRange', [startDate, endDate]);\n-      set(this, 'duration', duration);\n-      // This makes sure we don't fetch if the preview is collapsed\n-      if(get(this, 'showDetails') && get(this, 'dataIsCurrent')){\n-        // With a new date range, we should reset the state of time series and anomalies for comparison\n-        if (get(this, 'isPreviewMode')) {\n-          this.setProperties({\n-            anomaliesOld: [],\n-            anomaliesOldSet: false,\n-            anomaliesCurrent: [],\n-            anomaliesCurrentSet: false\n-          });\n-        }\n-        this._fetchAnomalies();\n-      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5OTgxNQ=="}, "originalCommit": {"oid": "ea8b2eb5bb07013ff4fb03b24a33d64fbc644acf"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDcxNQ==", "bodyText": "Thanks", "url": "https://github.com/apache/pinot/pull/5607#discussion_r448514715", "createdAt": "2020-07-01T17:32:06Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-frontend/app/pods/components/alert-details/component.js", "diffHunk": "@@ -1449,32 +1449,13 @@ export default Component.extend({\n      * @method onRangeSelection\n      * @param {Object} rangeOption - the user-selected time range to load\n      */\n-    onRangeSelection(timeRangeOptions) {\n-      const {\n-        start,\n-        end,\n-        value: duration\n-      } = timeRangeOptions;\n-\n+    onRangeSelection(start, end) {\n       const startDate = moment(start).valueOf();\n       const endDate = moment(end).valueOf();\n+\n       //Update the time range option selected\n       set(this, 'analysisRange', [startDate, endDate]);\n       set(this, 'displayRange', [startDate, endDate]);\n-      set(this, 'duration', duration);\n-      // This makes sure we don't fetch if the preview is collapsed\n-      if(get(this, 'showDetails') && get(this, 'dataIsCurrent')){\n-        // With a new date range, we should reset the state of time series and anomalies for comparison\n-        if (get(this, 'isPreviewMode')) {\n-          this.setProperties({\n-            anomaliesOld: [],\n-            anomaliesOldSet: false,\n-            anomaliesCurrent: [],\n-            anomaliesCurrentSet: false\n-          });\n-        }\n-        this._fetchAnomalies();\n-      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5OTgxNQ=="}, "originalCommit": {"oid": "ea8b2eb5bb07013ff4fb03b24a33d64fbc644acf"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4370, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}