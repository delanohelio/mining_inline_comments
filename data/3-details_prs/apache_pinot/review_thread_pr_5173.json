{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTgyNzMw", "number": 5173, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0Njo1NFrODqjJPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0NzoyN1rODqjJ4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTQyNTkwOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0Njo1NFrOF6Xdvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0Njo1NFrOF6Xdvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0NjE3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      numDocsScanned >= NUM_SERVERS * limit && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS * limit);\n          \n          \n            \n                      numDocsScanned >= NUM_SERVERS * limit && numDocsScanned <= numThreadsPerServer * NUM_SERVERS * limit);", "url": "https://github.com/apache/pinot/pull/5173#discussion_r396746175", "createdAt": "2020-03-23T20:46:54Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -61,8 +62,13 @@ public void testSelectOnlyQuery() {\n       assertNotNull(brokerResponse.getSelectionResults());\n       assertNull(brokerResponse.getResultTable());\n       assertEquals(brokerResponse.getNumSegmentsProcessed(), numSegmentsPerServer * NUM_SERVERS);\n-      assertEquals(brokerResponse.getNumSegmentsMatched(), numThreadsPerServer * NUM_SERVERS);\n-      assertEquals(brokerResponse.getNumDocsScanned(), numThreadsPerServer * NUM_SERVERS * limit);\n+      // NOTE: 'numSegmentsMatched' and 'numDocsScanned' could be in a range because when the CombineOperator second\n+      //       phase merge early terminates, the operators might not finish scanning the documents\n+      long numSegmentsMatched = brokerResponse.getNumSegmentsMatched();\n+      assertTrue(numSegmentsMatched >= NUM_SERVERS && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS);\n+      long numDocsScanned = brokerResponse.getNumDocsScanned();\n+      assertTrue(\n+          numDocsScanned >= NUM_SERVERS * limit && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS * limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4db944c4f9cc9e304712e1187198b113cec361b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTQyNzU0OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0NzoyN1rOF6Xezw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0NzoyN1rOF6Xezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0NjQ0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      numDocsScanned >= NUM_SERVERS * limit && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS * limit);\n          \n          \n            \n                      numDocsScanned >= NUM_SERVERS * limit && numDocsScanned <= numThreadsPerServer * NUM_SERVERS * limit);", "url": "https://github.com/apache/pinot/pull/5173#discussion_r396746447", "createdAt": "2020-03-23T20:47:27Z", "author": {"login": "mcvsubbu"}, "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -72,8 +78,13 @@ public void testSelectOnlyQuery() {\n       assertNull(brokerResponse.getSelectionResults());\n       assertNotNull(brokerResponse.getResultTable());\n       assertEquals(brokerResponse.getNumSegmentsProcessed(), numSegmentsPerServer * NUM_SERVERS);\n-      assertEquals(brokerResponse.getNumSegmentsMatched(), numThreadsPerServer * NUM_SERVERS);\n-      assertEquals(brokerResponse.getNumDocsScanned(), numThreadsPerServer * NUM_SERVERS * limit);\n+      // NOTE: 'numSegmentsMatched' and 'numDocsScanned' could be in a range because when the CombineOperator second\n+      //       phase merge early terminates, the operators might not finish scanning the documents\n+      numSegmentsMatched = brokerResponse.getNumSegmentsMatched();\n+      assertTrue(numSegmentsMatched >= NUM_SERVERS && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS);\n+      numDocsScanned = brokerResponse.getNumDocsScanned();\n+      assertTrue(\n+          numDocsScanned >= NUM_SERVERS * limit && numSegmentsMatched <= numThreadsPerServer * NUM_SERVERS * limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4db944c4f9cc9e304712e1187198b113cec361b"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3301, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}