{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTg2NzE1", "number": 6204, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowNjo0M1rOEymXhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MzowMlrOEzA1Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDkyODcwOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowNjo0M1rOHpVV_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowNjo0M1rOHpVV_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzM1Nw==", "bodyText": "Use _tableNameWithType for clarity", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103357", "createdAt": "2020-10-28T00:06:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -51,6 +53,16 @@\n public class PartitionUpsertMetadataManager {\n   private static final Logger LOGGER = LoggerFactory.getLogger(PartitionUpsertMetadataManager.class);\n \n+  private final String _tableName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDkyOTg5OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowNzoxN1rOHpVWqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTozOTo1N1rOHp-hHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ==", "bodyText": "This line is mis-deleted?", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103531", "createdAt": "2020-10-28T00:07:17Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,8 +97,7 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new\n-              // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n+               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyNDY3Mg==", "bodyText": "no.. auto formatting", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513124672", "createdAt": "2020-10-28T01:23:21Z", "author": {"login": "yupeng9"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,8 +97,7 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new\n-              // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n+               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ=="}, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3Nzk1MA==", "bodyText": "This is not auto formatting. One line is mis-deleted. Please double check", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513777950", "createdAt": "2020-10-28T21:39:57Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,8 +97,7 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new\n-              // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n+               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ=="}, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDkzMjY1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowODo0OFrOHpVYXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowODo0OFrOHpVYXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzk2NA==", "bodyText": "_tableNameWithType", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103964", "createdAt": "2020-10-28T00:08:48Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "diffHunk": "@@ -29,8 +30,16 @@\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n+  private final String _tableName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDkzMzc1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowOToxNlrOHpVY8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDowOToxNlrOHpVY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNDExMw==", "bodyText": "(nit)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));\n          \n          \n            \n                    .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, k, _serverMetrics));", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513104113", "createdAt": "2020-10-28T00:09:16Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "diffHunk": "@@ -29,8 +30,16 @@\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n+  private final String _tableName;\n+  private final ServerMetrics _serverMetrics;\n+\n+  public TableUpsertMetadataManager(String tableName, ServerMetrics serverMetrics) {\n+    _tableName = tableName;\n+    _serverMetrics = serverMetrics;\n+  }\n \n   public PartitionUpsertMetadataManager getOrCreatePartitionManager(int partitionId) {\n-    return _partitionMetadataManagerMap.computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager());\n+    return _partitionMetadataManagerMap\n+        .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDkzODA1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxMToyOVrOHpVbaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxMToyOVrOHpVbaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNDc0NQ==", "bodyText": "Use the serverMetrics available instead of mocking one", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513104745", "createdAt": "2020-10-28T00:11:29Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "diffHunk": "@@ -800,7 +801,8 @@ public FakeLLRealtimeSegmentDataManager(RealtimeSegmentZKMetadata segmentZKMetad\n         throws Exception {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n-          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics, new PartitionUpsertMetadataManager());\n+          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n+          new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDk0MTI2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxMzoyMVrOHpVdSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxMzoyMVrOHpVdSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTIyNg==", "bodyText": "(nit) Mock a ServerMetrics here locally instead of having a member variable", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105226", "createdAt": "2020-10-28T00:13:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "diffHunk": "@@ -121,7 +125,8 @@ public void loadSegment()\n     _indexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(), new ThreadSafeMutableRoaringBitmap());\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, _serverMetrics),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDk0MzE0OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxNDoyM1rOHpVeWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxNDoyM1rOHpVeWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTQ5OQ==", "bodyText": "Make \"testTable\" a constant and change it to testTable_REALTIME?", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105499", "createdAt": "2020-10-28T00:14:23Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "diffHunk": "@@ -37,7 +39,8 @@\n \n   @Test\n   public void testAddSegment() {\n-    PartitionUpsertMetadataManager upsertMetadataManager = new PartitionUpsertMetadataManager();\n+    PartitionUpsertMetadataManager upsertMetadataManager =\n+        new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDk0NDc4OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxNTowNlrOHpVfSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDoxNTowNlrOHpVfSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTczNg==", "bodyText": "(nit) Capitalize the first character for consistency", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105736", "createdAt": "2020-10-28T00:15:06Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -113,6 +124,9 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n         }\n       });\n     }\n+    // update metrics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a34351a71bb88c9a11312d0acb147a8567495d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI1Nzg1OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MTowMlrOHp-jXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MTowMlrOHp-jXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3ODUyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));\n          \n          \n            \n                      new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics));", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513778525", "createdAt": "2020-10-28T21:41:02Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "diffHunk": "@@ -800,7 +800,8 @@ public FakeLLRealtimeSegmentDataManager(RealtimeSegmentZKMetadata segmentZKMetad\n         throws Exception {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n-          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics, new PartitionUpsertMetadataManager());\n+          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n+          new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89602e7fca246dfb0c8008044dee8282a0535129"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI1OTM4OnYy", "diffSide": "LEFT", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MToyNVrOHp-kIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MToyNVrOHp-kIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3ODcyMQ==", "bodyText": "Revert this removal", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513778721", "createdAt": "2020-10-28T21:41:25Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,7 +97,6 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89602e7fca246dfb0c8008044dee8282a0535129"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI2MTU2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjowMVrOHp-lTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjowMVrOHp-lTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTAyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new TableUpsertMetadataManager(\"testTable\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);\n          \n          \n            \n                    new TableUpsertMetadataManager(\"testTable_REALTINE\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779022", "createdAt": "2020-10-28T21:42:01Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java", "diffHunk": "@@ -58,7 +60,8 @@ public void setup()\n         .setUpsertConfig(new UpsertConfig(UpsertConfig.Mode.FULL)).build();\n     _recordTransformer = CompositeTransformer.getDefaultTransformer(_tableConfig, _schema);\n     File jsonFile = new File(dataResourceUrl.getFile());\n-    _partitionUpsertMetadataManager = new TableUpsertMetadataManager().getOrCreatePartitionManager(0);\n+    _partitionUpsertMetadataManager =\n+        new TableUpsertMetadataManager(\"testTable\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89602e7fca246dfb0c8008044dee8282a0535129"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI2MjYzOnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjoyMlrOHp-l7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjoyMlrOHp-l7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),\n          \n          \n            \n                    .enableUpsert(new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics),", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779181", "createdAt": "2020-10-28T21:42:22Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "diffHunk": "@@ -119,9 +121,11 @@ public void buildSegment()\n   public void loadSegment()\n       throws Exception {\n     _indexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n+    ServerMetrics serverMetrics = Mockito.mock(ServerMetrics.class);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(), new ThreadSafeMutableRoaringBitmap());\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89602e7fca246dfb0c8008044dee8282a0535129"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI2NDg2OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MzowMlrOHp-nQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MzowMlrOHp-nQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTUyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String TEST_TABLE = \"testTable\";\n          \n          \n            \n              private static final String REALTIME_TABLE_NAME = \"testTable_REALTIME\";", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779522", "createdAt": "2020-10-28T21:43:02Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "diffHunk": "@@ -34,10 +36,12 @@\n \n public class PartitionUpsertMetadataManagerTest {\n   private static final String SEGMENT_PREFIX = \"testSegment\";\n+  private static final String TEST_TABLE = \"testTable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89602e7fca246dfb0c8008044dee8282a0535129"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3799, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}