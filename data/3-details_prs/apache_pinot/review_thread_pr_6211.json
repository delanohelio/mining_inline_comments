{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMzUyNjU3", "number": 6211, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxODoyNlrOE0f3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMDoxNToxMVrOE1ccbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDgzNTg4OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxODoyNlrOHsQb7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxODoyNlrOHsQb7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2ODY4NQ==", "bodyText": "Let's keep this method's return type a boolean - isTableEnabled.", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516168685", "createdAt": "2020-11-02T18:18:26Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -1981,6 +1981,16 @@ public boolean hasRealtimeTable(String tableName) {\n     return hasTable(TableNameBuilder.REALTIME.tableNameWithType(tableName));\n   }\n \n+  /**\n+   * Gets the current state of the table\n+   * @param tableNameWithType Table name with suffix\n+   * @return String enabled | disabled\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDg0MDkzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxOTo0NVrOHsQe8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxOTo0NVrOHsQe8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2OTQ1Nw==", "bodyText": "current state\" has a different meaning in helix/pinot. I would suggest saying something about it being enabled ot not.", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516169457", "createdAt": "2020-11-02T18:19:45Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -1981,6 +1981,16 @@ public boolean hasRealtimeTable(String tableName) {\n     return hasTable(TableNameBuilder.REALTIME.tableNameWithType(tableName));\n   }\n \n+  /**\n+   * Gets the current state of the table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDg3MDI3OnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoyODoxOVrOHsQxIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1NDoyMlrOHt92mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw==", "bodyText": "Let's just make type as required, and keep return type binary, instead of introducing a json blurb here.", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516174113", "createdAt": "2020-11-02T18:28:19Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTI0NQ==", "bodyText": "@npawar  just 0 or 1?", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516531245", "createdAt": "2020-11-03T09:36:54Z", "author": {"login": "galalen"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4NjEzNw==", "bodyText": "Can still be enabled/disabled or true/false. But just single string with only 2 possible options", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516786137", "createdAt": "2020-11-03T16:13:22Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0NTY0Ng==", "bodyText": "Done, updated the return to disabled/enabled.\nWouldn't be better if we create an enum TableState with these values [enabled/disabled]?", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516845646", "createdAt": "2020-11-03T17:41:47Z", "author": {"login": "galalen"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwNjAyMg==", "bodyText": "yes certainly. We already have one called StateType I believe. Wonder if we can reuse", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517706022", "createdAt": "2020-11-05T00:12:50Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTM2OQ==", "bodyText": "Yeah, I saw it, but I guess we should leave it as just these simple strings [disabled/enabled].", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517961369", "createdAt": "2020-11-05T10:54:22Z", "author": {"login": "galalen"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, "originalCommit": {"oid": "48fc2fbb4d773f2352de7f08357bf111a937fb71"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NDc2MDEzOnYy", "diffSide": "RIGHT", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMDoxNToxMVrOHtuURw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMDoxNToxMVrOHtuURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwNjgyMw==", "bodyText": "we dont need to again return tableName in the response do we? You can just return \"enabled\" or \"disabled\".", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517706823", "createdAt": "2020-11-05T00:15:11Z", "author": {"login": "npawar"}, "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,32 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\", required = true) @QueryParam(\"type\") String tableTypeStr\n+  ) {\n+    TableType tableType;\n+    try {\n+      tableType = TableType.valueOf(tableTypeStr.toUpperCase());\n+    } catch (IllegalArgumentException e) {\n+      throw new ControllerApplicationException(LOGGER, \"Illegal table type: \" + tableTypeStr,\n+          Response.Status.BAD_REQUEST);\n+    }\n+\n+    String tableNameWithType = TableNameBuilder.forType(tableType).tableNameWithType(tableName);\n+    try {\n+      ObjectNode data = JsonUtils.newObjectNode();\n+      data.put(\"tableName\", tableNameWithType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3180c260d6a3f97b00631bc13399bdc31e7ff98"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3807, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}