{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDYzMTA4", "number": 5256, "title": "Derive num docs per chunk from max column value length for varbyte raw index creator", "bodyText": "As part of internal testing for text search, we found that there could be cases where a text column value is several hundred thousands of characters. This would be for a very small percentage of rows from the overall dataset.\nThe VarByteChunkWriter uses a fixed hard-coded value 1000 for number of docs per chunk. It is better to derive this from metadata (length of longest value in bytes from stats). For unusually higher (1million) value of lengthOfLongestEntry (in bytes), we were seeing int overflow since the chunk size was computed as :\n1000 * (lengthOfLongestEntry + 4 byte header offset). Secondly, the compression buffer is allocated twice of this size to account for negative compression so the capacity for compression buffer became negative.\nThe PR has change for deriving num docs per chunk from lengthOfLongestEntry using a fix target max chunk size of 1MB.\nThis is backward compatible since we wrote the number of docs per chunk in the file header.\nThere is a tentative follow-up\nUse long for the chunk offset array in file header. Currently we use int. If most of the text column values are blob like data, then the total size of text data across all rows could be more than 2GB. So we need long to track chunk offsets. This would be backward incompatible change with a new version of chunk writer and reader.", "createdAt": "2020-04-16T01:10:36Z", "url": "https://github.com/apache/pinot/pull/5256", "merged": true, "mergeCommit": {"oid": "142a86fd9976783cdc5416fa13eccd3b6dbfa5fa"}, "closed": true, "closedAt": "2020-04-17T05:29:18Z", "author": {"login": "siddharthteotia"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYIO24AH2gAyNDA0MDYzMTA4OjM5YWY1OWExNWIwN2ZlZjA3MjE4YjQ0YzlkNzE3MTlmNGYyOWI0ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYaY4_gH2gAyNDA0MDYzMTA4OjIzNzhiYmZkMGQ2NzU0ZWM0MDFmM2E3ODQ2YWFhNWJjNjFlYzlhMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/39af59a15b07fef07218b44c9d71719f4f29b4ec", "committedDate": "2020-04-16T08:15:44Z", "message": "Derive numDocsPerChunk from max column value length\nfor var byte raw forward index creator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f310180b351730dbbaf1a7a75749044d64bb1359", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/f310180b351730dbbaf1a7a75749044d64bb1359", "committedDate": "2020-04-16T07:44:06Z", "message": "Fix tests"}, "afterCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/39af59a15b07fef07218b44c9d71719f4f29b4ec", "committedDate": "2020-04-16T08:15:44Z", "message": "Derive numDocsPerChunk from max column value length\nfor var byte raw forward index creator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTE2MjQx", "url": "https://github.com/apache/pinot/pull/5256#pullrequestreview-394916241", "createdAt": "2020-04-16T18:59:21Z", "commit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo1OToyMlrOGGzFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxMDozOVrOGGzdBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MTU5Mw==", "bodyText": "+1", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409781593", "createdAt": "2020-04-16T18:59:22Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/invertedindex/TextIndexHandler.java", "diffHunk": "@@ -162,8 +163,9 @@ private void createTextIndexForColumn(ColumnMetadata columnMetadata)\n     try (LuceneTextIndexCreator textIndexCreator = new LuceneTextIndexCreator(column, segmentDirectory, true)) {\n       try (DataFileReader forwardIndexReader = getForwardIndexReader(columnMetadata)) {\n         VarByteChunkSingleValueReader forwardIndex = (VarByteChunkSingleValueReader) forwardIndexReader;\n+        ChunkReaderContext readerContext = forwardIndex.createContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MjA3NA==", "bodyText": "Good catch\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;\n          \n          \n            \n                int lengthOfLongestEntry = StringUtil.encodeUtf8(stringDefaultValue).length;", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409782074", "createdAt": "2020-04-16T19:00:15Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/defaultcolumn/BaseDefaultColumnHandler.java", "diffHunk": "@@ -338,7 +339,7 @@ void createV1ForwardIndexForTextIndex(String column, IndexLoadingConfig indexLoa\n     int totalDocs = _segmentMetadata.getTotalDocs();\n     Object defaultValue = fieldSpec.getDefaultNullValue();\n     String stringDefaultValue = (String) defaultValue;\n-    int lengthOfLongestEntry = stringDefaultValue.length();\n+    int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTUxOQ==", "bodyText": "This logic can be pushed down to the VarByteChunkSingleValueWriter?", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409785519", "createdAt": "2020-04-16T19:06:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;\n \n   private final VarByteChunkSingleValueWriter _indexWriter;\n \n   public SingleValueVarByteRawIndexCreator(File baseIndexDir, ChunkCompressorFactory.CompressionType compressionType,\n       String column, int totalDocs, int maxLength)\n       throws IOException {\n     File file = new File(baseIndexDir, column + V1Constants.Indexes.RAW_SV_FORWARD_INDEX_FILE_EXTENSION);\n-    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, NUM_DOCS_PER_CHUNK, maxLength);\n+    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, getNumDocsPerChunk(maxLength), maxLength);\n+  }\n+\n+  @VisibleForTesting\n+  public static int getNumDocsPerChunk(int lengthOfLongestEntry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzUwMA==", "bodyText": "?", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787500", "createdAt": "2020-04-16T19:10:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/VarByteChunkSingleValueWriter.java", "diffHunk": "@@ -61,7 +62,6 @@\n    * @param file File to write to.\n    * @param compressionType Type of compression to use.\n    * @param totalDocs Total number of docs to write.\n-   * @param numDocsPerChunk Number of documents per chunk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzY1NQ==", "bodyText": "(nit) reformat", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787655", "createdAt": "2020-04-16T19:10:39Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTMwNDc1", "url": "https://github.com/apache/pinot/pull/5256#pullrequestreview-394930475", "createdAt": "2020-04-16T19:20:10Z", "commit": {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2378bbfd0d6754ec401f3a7846aaa5bc61ec9a10", "author": {"user": null}, "url": "https://github.com/apache/pinot/commit/2378bbfd0d6754ec401f3a7846aaa5bc61ec9a10", "committedDate": "2020-04-17T05:24:59Z", "message": "review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1231, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}