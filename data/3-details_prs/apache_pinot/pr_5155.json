{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NDIzMDY4", "number": 5155, "title": "[TE] anomaly detection model downloader", "bodyText": "The model downloader interface. Its implementation is expected to download model files (e.x., trained TensorFlow models), to a local path.\nModel downloader manager class. It initializes the model downloader via reflection and triggers the model downloader to run periodically.", "createdAt": "2020-03-16T18:24:55Z", "url": "https://github.com/apache/pinot/pull/5155", "merged": true, "mergeCommit": {"oid": "bbaa1d9305c2f7ac265b55939fabc3a9a4e12243"}, "closed": true, "closedAt": "2020-03-17T20:43:30Z", "author": {"login": "jihaozh"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOSTOrgH2gAyMzg5NDIzMDY4OjkwYTAzMWFlMWM3YTRhMWQzZTFmNmM3MzJiOGQwNjUzMWZiMDczYTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOo78dAFqTM3NjM5MDAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4", "committedDate": "2020-03-16T18:20:19Z", "message": "[TE] anomaly detection model downloaders"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTc1OTM3", "url": "https://github.com/apache/pinot/pull/5155#pullrequestreview-375575937", "createdAt": "2020-03-16T20:55:05Z", "commit": {"oid": "90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1NTowNVrOF3Fbqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1NzowNVrOF3FfzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwNTAwMg==", "bodyText": "nit: license header", "url": "https://github.com/apache/pinot/pull/5155#discussion_r393305002", "createdAt": "2020-03-16T20:55:05Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/model/download/ModelDownloaderManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.apache.pinot.thirdeye.model.download;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwNjA2MQ==", "bodyText": "Where will this run? every worker?", "url": "https://github.com/apache/pinot/pull/5155#discussion_r393306061", "createdAt": "2020-03-16T20:57:05Z", "author": {"login": "akshayrai"}, "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/model/download/ModelDownloaderManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.apache.pinot.thirdeye.model.download;\n+\n+import java.lang.reflect.Constructor;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import org.apache.pinot.thirdeye.auto.onboard.AutoOnboardService;\n+import org.apache.pinot.thirdeye.common.time.TimeGranularity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * The model downloader manager. This class manages the life cycle of the model downloader.\n+ * It constructs the model downloader, and then schedules the model downloader to run periodically and downloads the\n+ * models into a local destination path. The class names, the run frequency and the download path can be configured.\n+ */\n+public class ModelDownloaderManager {\n+  private static final Logger LOG = LoggerFactory.getLogger(AutoOnboardService.class);\n+\n+  private final List<ModelDownloaderConfiguration> configs;\n+  private final Map<String, ModelDownloader> modelDownloaders;\n+  private ScheduledExecutorService scheduledExecutorService;\n+\n+  public ModelDownloaderManager(List<ModelDownloaderConfiguration> modelDownloaderConfigs) {\n+    this.configs = modelDownloaderConfigs;\n+    this.modelDownloaders = new HashMap<>();\n+    this.scheduledExecutorService = Executors.newScheduledThreadPool(5);\n+\n+    constructModelDownloaders();\n+  }\n+\n+  private void constructModelDownloaders() {\n+    for (ModelDownloaderConfiguration config : this.configs) {\n+      try {\n+        Constructor<?> constructor = Class.forName(config.getClassName()).getConstructor(Map.class);\n+        ModelDownloader downloader = (ModelDownloader) constructor.newInstance(config.getProperties());\n+        this.modelDownloaders.put(config.getClassName(), downloader);\n+      } catch (Exception e) {\n+        LOG.warn(\"Failed to initialize model downloader {}\", config.getClassName(), e);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * start the model downloader manager\n+   */\n+  public void start() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjIyOTY5", "url": "https://github.com/apache/pinot/pull/5155#pullrequestreview-375622969", "createdAt": "2020-03-16T22:24:50Z", "commit": {"oid": "90a031ae1c7a4a1d3e1f6c732b8d06531fb073a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0f4fe7ff9f7182bbfbeb804544a7bd49af5424", "author": {"user": {"login": "jihaozh", "name": "Jihao Zhang"}}, "url": "https://github.com/apache/pinot/commit/aa0f4fe7ff9f7182bbfbeb804544a7bd49af5424", "committedDate": "2020-03-17T19:04:33Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzkwMDM4", "url": "https://github.com/apache/pinot/pull/5155#pullrequestreview-376390038", "createdAt": "2020-03-17T20:42:42Z", "commit": {"oid": "aa0f4fe7ff9f7182bbfbeb804544a7bd49af5424"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1401, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}