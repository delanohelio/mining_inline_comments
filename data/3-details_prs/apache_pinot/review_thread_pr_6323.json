{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyOTA0ODAw", "number": 6323, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyODowMFrOFBVE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyODowMFrOFBVE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM4MjI0OnYy", "diffSide": "RIGHT", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/PercentileTDigestMVAggregationFunction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyODowMFrOIACEAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMDo1MDoyOVrOIAPP8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDcwNg==", "bodyText": "@Jackie-Jiang Thoughts on what should we return as column name for the new way of calling percentile(column, <double>)?", "url": "https://github.com/apache/pinot/pull/6323#discussion_r536904706", "createdAt": "2020-12-05T22:28:00Z", "author": {"login": "mayankshriv"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/PercentileTDigestMVAggregationFunction.java", "diffHunk": "@@ -33,19 +33,27 @@ public PercentileTDigestMVAggregationFunction(ExpressionContext expression, int\n     super(expression, percentile);\n   }\n \n+  public PercentileTDigestMVAggregationFunction(ExpressionContext expression, double percentile) {\n+    super(expression, percentile);\n+  }\n+\n   @Override\n   public AggregationFunctionType getType() {\n     return AggregationFunctionType.PERCENTILETDIGESTMV;\n   }\n \n   @Override\n   public String getColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName() + (int) _percentile + \"MV_\" + _expression\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n   }\n \n   @Override\n   public String getResultColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + _percentile + \"mv(\" + _expression + \")\";\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + (int) _percentile + \"mv(\"\n+        + _expression + \")\"\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + \"mv(\" + _expression + \", \" + _percentile", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEyMDc1Mw==", "bodyText": "The current way looks good (returning percentile(column, <double>))", "url": "https://github.com/apache/pinot/pull/6323#discussion_r537120753", "createdAt": "2020-12-06T20:50:29Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/PercentileTDigestMVAggregationFunction.java", "diffHunk": "@@ -33,19 +33,27 @@ public PercentileTDigestMVAggregationFunction(ExpressionContext expression, int\n     super(expression, percentile);\n   }\n \n+  public PercentileTDigestMVAggregationFunction(ExpressionContext expression, double percentile) {\n+    super(expression, percentile);\n+  }\n+\n   @Override\n   public AggregationFunctionType getType() {\n     return AggregationFunctionType.PERCENTILETDIGESTMV;\n   }\n \n   @Override\n   public String getColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName() + (int) _percentile + \"MV_\" + _expression\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n   }\n \n   @Override\n   public String getResultColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + _percentile + \"mv(\" + _expression + \")\";\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + (int) _percentile + \"mv(\"\n+        + _expression + \")\"\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + \"mv(\" + _expression + \", \" + _percentile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDcwNg=="}, "originalCommit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2996, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}