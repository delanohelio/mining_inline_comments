{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3OTAxNzMy", "number": 6172, "title": "Adding a new Server API for computing average off heap memory consumed", "bodyText": "Description\nAdding a new API for getting average off heap memory consumed by consuming segments\nof a given real-time table. This number is useful for the caller to get an accurate idea of memory\nrequirements (and thus subsequent provisioning).\nUpgrade Notes\nDoes this PR prevent a zero down-time upgrade?\nNo\nDoes this PR fix a zero-downtime upgrade introduced earlier?\nNo\nDoes this PR otherwise need attention when creating release notes?\nNo", "createdAt": "2020-10-21T22:34:29Z", "url": "https://github.com/apache/pinot/pull/6172", "merged": true, "mergeCommit": {"oid": "b7819e1718c9ef292d622df981ef5d1392004611"}, "closed": true, "closedAt": "2020-11-02T19:41:19Z", "author": {"login": "icefury71"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU1KN9gH2gAyNTA3OTAxNzMyOjdkNTJmYTE2M2VlYmU2NzAxMDE0YTE0ZjkwNDczMmQxZGEzNTRlMWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVau_PAFqTUxNTkwMTYwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d52fa163eebe6701014a14f904732d1da354e1a", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/7d52fa163eebe6701014a14f904732d1da354e1a", "committedDate": "2020-10-21T22:31:51Z", "message": "Adding a new Server API for computing average off heap memory consumed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Mjc1NjAx", "url": "https://github.com/apache/pinot/pull/6172#pullrequestreview-514275601", "createdAt": "2020-10-22T00:12:23Z", "commit": {"oid": "7d52fa163eebe6701014a14f904732d1da354e1a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDoxMjoyM1rOHmMGBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDoxMjoyM1rOHmMGBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNjA4Nw==", "bodyText": "Does it make sense to add it to MmapDebugResource?", "url": "https://github.com/apache/pinot/pull/6172#discussion_r509806087", "createdAt": "2020-10-22T00:12:23Z", "author": {"login": "mcvsubbu"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/api/resources/TableSizeResource.java", "diffHunk": "@@ -119,4 +122,33 @@ public String getTableSizeOld(\n       throws WebApplicationException {\n     return this.getTableSize(tableName, detailed);\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/avgMemoryConsumedRealtime\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d52fa163eebe6701014a14f904732d1da354e1a"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/cc7f05c941cf61efc0a37875f08c581544f36d93", "committedDate": "2020-10-22T22:52:18Z", "message": " - Changing from average to latest segment consumed memory\n - Moving API from tablesize to mmapdebug resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTc4NTYw", "url": "https://github.com/apache/pinot/pull/6172#pullrequestreview-515178560", "createdAt": "2020-10-22T23:06:37Z", "commit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MjI3MTQz", "url": "https://github.com/apache/pinot/pull/6172#pullrequestreview-515227143", "createdAt": "2020-10-23T01:51:52Z", "commit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMTo1MTo1M1rOHm5kQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoxMjowNVrOHm52tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MTEwNg==", "bodyText": "Seems like this main method is for some testing during the development, and was accidentally merged. Let's remove it", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510551106", "createdAt": "2020-10-23T01:51:53Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/RealtimeSegmentStatsHistory.java", "diffHunk": "@@ -385,7 +395,7 @@ public static void main(String[] args)\n       throws Exception {\n     RealtimeSegmentStatsHistory history = RealtimeSegmentStatsHistory.deserialzeFrom(new File(\"/tmp/stats.ser\"));\n     System.out.println(history.toString());\n-    for (int i = 0; i < history.getNumntriesToScan(); i++) {\n+    for (int i = 0; i < history.getNumEntriesToScan(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MTE4MA==", "bodyText": "(nit) reformat", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510551180", "createdAt": "2020-10-23T01:52:15Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/realtime/impl/RealtimeSegmentStatsHistoryTest.java", "diffHunk": "@@ -250,6 +251,29 @@ public void testVersion1()\n     Assert.assertEquals(segmentStats.getNumSeconds(), 700);\n   }\n \n+  @Test\n+  public void testLatestConsumedMemory()\n+      throws IOException, ClassNotFoundException {\n+    final String tmpDir = System.getProperty(\"java.io.tmpdir\");\n+    File serializedFile = new File(tmpDir, STATS_FILE_NAME);\n+    serializedFile.deleteOnExit();\n+    FileUtils.deleteQuietly(serializedFile);\n+    long[] memoryValues = {100, 100, 200, 400, 450, 600};\n+\n+    RealtimeSegmentStatsHistory history = RealtimeSegmentStatsHistory.deserialzeFrom(serializedFile);\n+    Assert.assertEquals(history.getLatestSegmentMemoryConsumed(), 0);\n+    RealtimeSegmentStatsHistory.SegmentStats segmentStats = null;\n+\n+    for (int i=0;i< memoryValues.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MjM2Nw==", "bodyText": "Return -1 to indicate unavailable?", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510552367", "createdAt": "2020-10-23T01:57:04Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/realtime/impl/RealtimeSegmentStatsHistory.java", "diffHunk": "@@ -341,6 +341,16 @@ public synchronized int getEstimatedRowsToIndex() {\n     return (numRowsIndexed > 0) ? (int) (numRowsIndexed / numEntriesToScan) : DEFAULT_ROWS_TO_INDEX;\n   }\n \n+  public synchronized long getLatestSegmentMemoryConsumed() {\n+    if (isEmpty()) {\n+      return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MzAyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              ServerInstance serverInstance;\n          \n          \n            \n              private ServerInstance _serverInstance;", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510553020", "createdAt": "2020-10-23T01:59:52Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/api/resources/MmapDebugResource.java", "diffHunk": "@@ -37,6 +48,9 @@\n @Path(\"debug\")\n public class MmapDebugResource {\n \n+  @Inject\n+  ServerInstance serverInstance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1NDE3MA==", "bodyText": "Recommend \"memory/offheap/table/{tableName}\"", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510554170", "createdAt": "2020-10-23T02:04:55Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/api/resources/MmapDebugResource.java", "diffHunk": "@@ -45,4 +59,33 @@\n   public List<String> getOffHeapSizes() {\n     return PinotDataBuffer.getBufferInfo();\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/memoryConsumedRealtime\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1NDUyOQ==", "bodyText": "Remove line 71 and declare the variable here. Also, the return value should be long instead of double", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510554529", "createdAt": "2020-10-23T02:06:21Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/api/resources/MmapDebugResource.java", "diffHunk": "@@ -45,4 +59,33 @@\n   public List<String> getOffHeapSizes() {\n     return PinotDataBuffer.getBufferInfo();\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/memoryConsumedRealtime\")\n+  @ApiOperation(value = \"Show off heap memory consumed by latest mutable segment\", notes = \"Returns off heap memory consumed by latest consuming segment of realtime table\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal server error\"), @ApiResponse(code = 404, message = \"Table not found\")})\n+  public String getTableSize(\n+      @ApiParam(value = \"Table Name with type\", required = true) @PathParam(\"tableName\") String tableName)\n+      throws WebApplicationException {\n+    double memoryConsumed = 0;\n+    TableType tableType = TableNameBuilder.getTableTypeFromTableName(tableName);\n+    if (tableType != TableType.REALTIME) {\n+      throw new WebApplicationException(\"This api cannot be used with non real-time table: \" + tableName,\n+          Response.Status.BAD_REQUEST);\n+    }\n+\n+    InstanceDataManager instanceDataManager = serverInstance.getInstanceDataManager();\n+    if (instanceDataManager == null) {\n+      throw new WebApplicationException(\"Invalid server initialization\", Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+    RealtimeTableDataManager realtimeTableDataManager =\n+        (RealtimeTableDataManager) instanceDataManager.getTableDataManager(tableName);\n+    if (realtimeTableDataManager == null) {\n+      throw new WebApplicationException(\"Table: \" + tableName + \" is not found\", Response.Status.NOT_FOUND);\n+    }\n+\n+    memoryConsumed = realtimeTableDataManager.getStatsHistory().getLatestSegmentMemoryConsumed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1NTc1MA==", "bodyText": "This will return a string instead of a json (123 -> \"123\").\nWe should create a json to wrap the value.\nE.g. return ResourceUtils.convertToJsonString(Collections.singletonMap(\"offheapMemoryConsumed\", memoryConsumed));", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510555750", "createdAt": "2020-10-23T02:11:43Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-server/src/main/java/org/apache/pinot/server/api/resources/MmapDebugResource.java", "diffHunk": "@@ -45,4 +59,33 @@\n   public List<String> getOffHeapSizes() {\n     return PinotDataBuffer.getBufferInfo();\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/memoryConsumedRealtime\")\n+  @ApiOperation(value = \"Show off heap memory consumed by latest mutable segment\", notes = \"Returns off heap memory consumed by latest consuming segment of realtime table\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal server error\"), @ApiResponse(code = 404, message = \"Table not found\")})\n+  public String getTableSize(\n+      @ApiParam(value = \"Table Name with type\", required = true) @PathParam(\"tableName\") String tableName)\n+      throws WebApplicationException {\n+    double memoryConsumed = 0;\n+    TableType tableType = TableNameBuilder.getTableTypeFromTableName(tableName);\n+    if (tableType != TableType.REALTIME) {\n+      throw new WebApplicationException(\"This api cannot be used with non real-time table: \" + tableName,\n+          Response.Status.BAD_REQUEST);\n+    }\n+\n+    InstanceDataManager instanceDataManager = serverInstance.getInstanceDataManager();\n+    if (instanceDataManager == null) {\n+      throw new WebApplicationException(\"Invalid server initialization\", Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+    RealtimeTableDataManager realtimeTableDataManager =\n+        (RealtimeTableDataManager) instanceDataManager.getTableDataManager(tableName);\n+    if (realtimeTableDataManager == null) {\n+      throw new WebApplicationException(\"Table: \" + tableName + \" is not found\", Response.Status.NOT_FOUND);\n+    }\n+\n+    memoryConsumed = realtimeTableDataManager.getStatsHistory().getLatestSegmentMemoryConsumed();\n+    return ResourceUtils.convertToJsonString(memoryConsumed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1NTgyOQ==", "bodyText": "(nit) reformat", "url": "https://github.com/apache/pinot/pull/6172#discussion_r510555829", "createdAt": "2020-10-23T02:12:05Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/test/java/org/apache/pinot/core/realtime/impl/RealtimeSegmentStatsHistoryTest.java", "diffHunk": "@@ -250,6 +251,29 @@ public void testVersion1()\n     Assert.assertEquals(segmentStats.getNumSeconds(), 700);\n   }\n \n+  @Test\n+  public void testLatestConsumedMemory()\n+      throws IOException, ClassNotFoundException {\n+    final String tmpDir = System.getProperty(\"java.io.tmpdir\");\n+    File serializedFile = new File(tmpDir, STATS_FILE_NAME);\n+    serializedFile.deleteOnExit();\n+    FileUtils.deleteQuietly(serializedFile);\n+    long[] memoryValues = {100, 100, 200, 400, 450, 600};\n+\n+    RealtimeSegmentStatsHistory history = RealtimeSegmentStatsHistory.deserialzeFrom(serializedFile);\n+    Assert.assertEquals(history.getLatestSegmentMemoryConsumed(), 0);\n+    RealtimeSegmentStatsHistory.SegmentStats segmentStats = null;\n+\n+    for (int i=0;i< memoryValues.length; i++) {\n+      segmentStats = new RealtimeSegmentStatsHistory.SegmentStats();\n+      segmentStats.setMemUsedBytes(memoryValues[i]);\n+      history.addSegmentStats(segmentStats);\n+    }\n+\n+    long expectedMemUsed = memoryValues[memoryValues.length-1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1ODQxOTMw", "url": "https://github.com/apache/pinot/pull/6172#pullrequestreview-515841930", "createdAt": "2020-10-23T16:52:10Z", "commit": {"oid": "cc7f05c941cf61efc0a37875f08c581544f36d93"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ee26f88c7633a9ad12ad316ca275aab233b67b8", "author": {"user": {"login": "icefury71", "name": null}}, "url": "https://github.com/apache/pinot/commit/1ee26f88c7633a9ad12ad316ca275aab233b67b8", "committedDate": "2020-10-23T16:59:04Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTAxNjAw", "url": "https://github.com/apache/pinot/pull/6172#pullrequestreview-515901600", "createdAt": "2020-10-23T18:18:30Z", "commit": {"oid": "1ee26f88c7633a9ad12ad316ca275aab233b67b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1633, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}