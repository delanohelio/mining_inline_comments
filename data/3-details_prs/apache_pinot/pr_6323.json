{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyOTA0ODAw", "number": 6323, "title": "Decimal percentile support.", "bodyText": "This PR adds support for specifying decimal percentile (99.999, 0.00001, etc) through the following functions:\nPERCENTILE(column, percentile)\nPERCENTILEEST(column, percentile)\nPERCENTILETDIGEST(column, percentile)\nPERCENTILEMV(column, percentile)\nPERCENTILEESTMV(column, percentile)\nPERCENTILETDIGESTMV(column, percentile)\n\nNote that there is no change in the external behavior of existing percentile functions, that only take integer percentile values, as described in documentation. However, the internal implementation of these functions were changed to support decimal percentile values as well.\nFiles modified to allow for successfully parsing and validating decimal values in new percentile functions:\n\nAggregationFunctionFactory.java\n\nExisting implementation of percentile functions were modified to allow for supporting both the existing and the new percentile functions with decimal values:\n\nPercentileAggregationFunction.java\nPercentileEstAggregationFunction.java\nPercentileEstMVAggregationFunction.java\nPercentileMVAggregationFunction.java\nPercentileTDigestAggregationFunction.java\nPercentileTDigestMVAggregationFunction.java\n\nFiles modified to add / fix new unit tests:\n\nAggregationFunctionFactoryTest.java\nPercentileTDigestQueriesTest.java\nInterSegmentResultTableMultiValueQueriesTest.java\nInterSegmentResultTableSingleValueQueriesTest.java\nPercentileTDigestMVQueriesTest.java\nPercentileTDigestQueriesTest.java\n\nI will update the documentation once this PR is complete.", "createdAt": "2020-12-05T05:48:59Z", "url": "https://github.com/apache/pinot/pull/6323", "merged": true, "mergeCommit": {"oid": "682c95f2b0a759eec54eb0d48c2228e695ff6a3a"}, "closed": true, "closedAt": "2020-12-07T21:44:05Z", "author": {"login": "amrishlal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjE_n_AH2gAyNTMyOTA0ODAwOjE4NzFjMzQyZDY0NTgwNGVmMWJjNmNkYTRkYjYzZjc2Y2Y4ZTZlNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkAH4XgFqTU0NjY4MTkyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1871c342d645804ef1bc6cda4db63f76cf8e6e57", "author": {"user": {"login": "amrishlal", "name": "Amrish Lal"}}, "url": "https://github.com/apache/pinot/commit/1871c342d645804ef1bc6cda4db63f76cf8e6e57", "committedDate": "2020-12-05T04:53:42Z", "message": "decimal percentile support."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a", "author": {"user": {"login": "amrishlal", "name": "Amrish Lal"}}, "url": "https://github.com/apache/pinot/commit/50e7a692288728336306e7db7e30fb31b328f29a", "committedDate": "2020-12-05T07:35:34Z", "message": "fix failing unit tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjU0MzU0", "url": "https://github.com/apache/pinot/pull/6323#pullrequestreview-545654354", "createdAt": "2020-12-05T22:28:00Z", "commit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyODowMFrOIACEAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyODowMFrOIACEAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDcwNg==", "bodyText": "@Jackie-Jiang Thoughts on what should we return as column name for the new way of calling percentile(column, <double>)?", "url": "https://github.com/apache/pinot/pull/6323#discussion_r536904706", "createdAt": "2020-12-05T22:28:00Z", "author": {"login": "mayankshriv"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/PercentileTDigestMVAggregationFunction.java", "diffHunk": "@@ -33,19 +33,27 @@ public PercentileTDigestMVAggregationFunction(ExpressionContext expression, int\n     super(expression, percentile);\n   }\n \n+  public PercentileTDigestMVAggregationFunction(ExpressionContext expression, double percentile) {\n+    super(expression, percentile);\n+  }\n+\n   @Override\n   public AggregationFunctionType getType() {\n     return AggregationFunctionType.PERCENTILETDIGESTMV;\n   }\n \n   @Override\n   public String getColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName() + (int) _percentile + \"MV_\" + _expression\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n   }\n \n   @Override\n   public String getResultColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + _percentile + \"mv(\" + _expression + \")\";\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + (int) _percentile + \"mv(\"\n+        + _expression + \")\"\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + \"mv(\" + _expression + \", \" + _percentile", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzQ2NDUy", "url": "https://github.com/apache/pinot/pull/6323#pullrequestreview-545746452", "createdAt": "2020-12-06T20:50:29Z", "commit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMDo1MDoyOVrOIAPP8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMDo1MDoyOVrOIAPP8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEyMDc1Mw==", "bodyText": "The current way looks good (returning percentile(column, <double>))", "url": "https://github.com/apache/pinot/pull/6323#discussion_r537120753", "createdAt": "2020-12-06T20:50:29Z", "author": {"login": "Jackie-Jiang"}, "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/PercentileTDigestMVAggregationFunction.java", "diffHunk": "@@ -33,19 +33,27 @@ public PercentileTDigestMVAggregationFunction(ExpressionContext expression, int\n     super(expression, percentile);\n   }\n \n+  public PercentileTDigestMVAggregationFunction(ExpressionContext expression, double percentile) {\n+    super(expression, percentile);\n+  }\n+\n   @Override\n   public AggregationFunctionType getType() {\n     return AggregationFunctionType.PERCENTILETDIGESTMV;\n   }\n \n   @Override\n   public String getColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName() + (int) _percentile + \"MV_\" + _expression\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName() + _percentile + \"MV_\" + _expression;\n   }\n \n   @Override\n   public String getResultColumnName() {\n-    return AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + _percentile + \"mv(\" + _expression + \")\";\n+    return _version == 0 ? AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + (int) _percentile + \"mv(\"\n+        + _expression + \")\"\n+        : AggregationFunctionType.PERCENTILETDIGEST.getName().toLowerCase() + \"mv(\" + _expression + \", \" + _percentile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDcwNg=="}, "originalCommit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTYxNTk3", "url": "https://github.com/apache/pinot/pull/6323#pullrequestreview-546561597", "createdAt": "2020-12-07T21:43:58Z", "commit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjgxOTIw", "url": "https://github.com/apache/pinot/pull/6323#pullrequestreview-546681920", "createdAt": "2020-12-08T01:47:07Z", "commit": {"oid": "50e7a692288728336306e7db7e30fb31b328f29a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1603, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}