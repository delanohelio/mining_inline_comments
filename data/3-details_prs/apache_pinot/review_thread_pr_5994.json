{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMTEyMjgy", "number": 5994, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyMjo0MlrOEh2GJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyMjo1NVrOEh2Gaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTI0NzczOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyMjo0MlrOHPY9oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyMjo0MlrOHPY9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg5OTY4MQ==", "bodyText": "schema = getSchema(propertyStore, realtimeSchemaNameFromValidationConfig);", "url": "https://github.com/apache/pinot/pull/5994#discussion_r485899681", "createdAt": "2020-09-09T20:22:42Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "diffHunk": "@@ -274,14 +274,20 @@ public static Schema getTableSchema(@Nonnull ZkHelixPropertyStore<ZNRecord> prop\n     if (tableType == null || tableType == TableType.REALTIME) {\n       TableConfig realtimeTableConfig = getRealtimeTableConfig(propertyStore, tableName);\n       if (realtimeTableConfig != null) {\n-        schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());\n+        String realtimeSchemaNameFromValidationConfig = realtimeTableConfig.getValidationConfig().getSchemaName();\n+        if (realtimeSchemaNameFromValidationConfig != null) {\n+          schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d96ac840ad9b745ca959504b8e5cf2a3e8d912"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTI0ODQzOnYy", "diffSide": "RIGHT", "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyMjo1NVrOHPY-BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDoyNjo1MFrOHPZFqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg5OTc4MQ==", "bodyText": "schema = getSchema(propertyStore, offlineSchemaNameFromValidationConfig);", "url": "https://github.com/apache/pinot/pull/5994#discussion_r485899781", "createdAt": "2020-09-09T20:22:55Z", "author": {"login": "xiangfu0"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "diffHunk": "@@ -274,14 +274,20 @@ public static Schema getTableSchema(@Nonnull ZkHelixPropertyStore<ZNRecord> prop\n     if (tableType == null || tableType == TableType.REALTIME) {\n       TableConfig realtimeTableConfig = getRealtimeTableConfig(propertyStore, tableName);\n       if (realtimeTableConfig != null) {\n-        schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());\n+        String realtimeSchemaNameFromValidationConfig = realtimeTableConfig.getValidationConfig().getSchemaName();\n+        if (realtimeSchemaNameFromValidationConfig != null) {\n+          schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());\n+        }\n       }\n     }\n     // Try to fetch offline schema if realtime schema does not exist\n     if (schema == null && (tableType == null || tableType == TableType.OFFLINE)) {\n       TableConfig offlineTableConfig = getOfflineTableConfig(propertyStore, tableName);\n       if (offlineTableConfig != null) {\n-        schema = getSchema(propertyStore, offlineTableConfig.getValidationConfig().getSchemaName());\n+        String offlineSchemaNameFromValidationConfig = offlineTableConfig.getValidationConfig().getSchemaName();\n+        if (offlineSchemaNameFromValidationConfig != null) {\n+          schema = getSchema(propertyStore, offlineTableConfig.getValidationConfig().getSchemaName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d96ac840ad9b745ca959504b8e5cf2a3e8d912"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwMTczOA==", "bodyText": "good catch :)", "url": "https://github.com/apache/pinot/pull/5994#discussion_r485901738", "createdAt": "2020-09-09T20:26:50Z", "author": {"login": "snleee"}, "path": "pinot-common/src/main/java/org/apache/pinot/common/metadata/ZKMetadataProvider.java", "diffHunk": "@@ -274,14 +274,20 @@ public static Schema getTableSchema(@Nonnull ZkHelixPropertyStore<ZNRecord> prop\n     if (tableType == null || tableType == TableType.REALTIME) {\n       TableConfig realtimeTableConfig = getRealtimeTableConfig(propertyStore, tableName);\n       if (realtimeTableConfig != null) {\n-        schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());\n+        String realtimeSchemaNameFromValidationConfig = realtimeTableConfig.getValidationConfig().getSchemaName();\n+        if (realtimeSchemaNameFromValidationConfig != null) {\n+          schema = getSchema(propertyStore, realtimeTableConfig.getValidationConfig().getSchemaName());\n+        }\n       }\n     }\n     // Try to fetch offline schema if realtime schema does not exist\n     if (schema == null && (tableType == null || tableType == TableType.OFFLINE)) {\n       TableConfig offlineTableConfig = getOfflineTableConfig(propertyStore, tableName);\n       if (offlineTableConfig != null) {\n-        schema = getSchema(propertyStore, offlineTableConfig.getValidationConfig().getSchemaName());\n+        String offlineSchemaNameFromValidationConfig = offlineTableConfig.getValidationConfig().getSchemaName();\n+        if (offlineSchemaNameFromValidationConfig != null) {\n+          schema = getSchema(propertyStore, offlineTableConfig.getValidationConfig().getSchemaName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg5OTc4MQ=="}, "originalCommit": {"oid": "b2d96ac840ad9b745ca959504b8e5cf2a3e8d912"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3858, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}