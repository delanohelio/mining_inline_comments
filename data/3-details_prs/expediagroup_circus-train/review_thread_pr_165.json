{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTE1NDM3", "number": 165, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTowMjowOVrODa6Hkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjowMDoxN1rODbMdLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTQxNzc4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTowMjowOVrOFiFyBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNDoyNFrOFiG_tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI5MDYzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Fixed issue were limit is ignore when generating a partition filter. See [#164](https://github.com/HotelsDotCom/circus-train/issues/164).\n          \n          \n            \n            \n          \n          \n            \n            Fixed issue where limit is ignore when generating a partition filter. See [#164](https://github.com/HotelsDotCom/circus-train/issues/164).", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371290630", "createdAt": "2020-01-27T15:02:09Z", "author": {"login": "max-jacobs"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,6 +1,8 @@\n ## [15.1.0] - TBD\n ### Changed\n * AVRO Schema Copier now re-uses the normal 'data' copier instead of its own. See [#162](https://github.com/HotelsDotCom/circus-train/issues/162). \n+### Fixed\n+Fixed issue were limit is ignore when generating a partition filter. See [#164](https://github.com/HotelsDotCom/circus-train/issues/164).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b3e22b490606e9f4c7209c9792f9e15086807b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMDUxOQ==", "bodyText": "I've reworded it a bit", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371310519", "createdAt": "2020-01-27T15:34:24Z", "author": {"login": "patduin"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,6 +1,8 @@\n ## [15.1.0] - TBD\n ### Changed\n * AVRO Schema Copier now re-uses the normal 'data' copier instead of its own. See [#162](https://github.com/HotelsDotCom/circus-train/issues/162). \n+### Fixed\n+Fixed issue were limit is ignore when generating a partition filter. See [#164](https://github.com/HotelsDotCom/circus-train/issues/164).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI5MDYzMA=="}, "originalCommit": {"oid": "d9b3e22b490606e9f4c7209c9792f9e15086807b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTQzODk2OnYy", "diffSide": "RIGHT", "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTowNzo0M1rOFiF_CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToxOTo1NlrOFiObgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI5Mzk2MQ==", "bodyText": "How comes this isn't initialised to UNLIMITED here? This is only to figure out the limit on line 183 in HiveDifferences right?", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371293961", "createdAt": "2020-01-27T15:07:43Z", "author": {"login": "max-jacobs"}, "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "diffHunk": "@@ -45,6 +46,7 @@\n   private final Function<Path, String> checksumFunction;\n   private String partitionPredicate;\n   private boolean generated = false;\n+  private Short partitionLimit = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b3e22b490606e9f4c7209c9792f9e15086807b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMjMyMw==", "bodyText": "UNLIMITED is max int\npartitionLimit for hive fetch partition call is -1 for being unlimited.\nSo I map -1 to max int in HiveDiferences so my loop nicely reads while (i < limit) https://github.com/HotelsDotCom/circus-train/blob/3a5e3bfaefe28ddcd500fa8a3451f6489005b2e7/circus-train-comparator/src/main/java/com/hotels/bdp/circustrain/comparator/hive/HiveDifferences.java#L219\nit's mostly sugarcoating to be honest...", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371432323", "createdAt": "2020-01-27T19:19:56Z", "author": {"login": "patduin"}, "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "diffHunk": "@@ -45,6 +46,7 @@\n   private final Function<Path, String> checksumFunction;\n   private String partitionPredicate;\n   private boolean generated = false;\n+  private Short partitionLimit = -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI5Mzk2MQ=="}, "originalCommit": {"oid": "d9b3e22b490606e9f4c7209c9792f9e15086807b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTY1MzI2OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMTowMlrOFiIB-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowMTowMlrOFiIB-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNzQ4MA==", "bodyText": "Typo: \"were\" -> \"where\"", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371327480", "createdAt": "2020-01-27T16:01:02Z", "author": {"login": "nvitucci"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,6 +1,8 @@\n ## [15.1.0] - TBD\n ### Changed\n * AVRO Schema Copier now re-uses the normal 'data' copier instead of its own. See [#162](https://github.com/HotelsDotCom/circus-train/issues/162). \n+### Fixed\n+Fixed issue were partition-limit is not correctly applied when generating a partition filter. See [#164](https://github.com/HotelsDotCom/circus-train/issues/164).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a5e3bfaefe28ddcd500fa8a3451f6489005b2e7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTY2ODY2OnYy", "diffSide": "RIGHT", "path": "circus-train-comparator/src/main/java/com/hotels/bdp/circustrain/comparator/hive/HiveDifferences.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjowNDo1MVrOFiILSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToxODozM1rOFiOYsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyOTg2NA==", "bodyText": "What if the partitionLimit is 0?", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371329864", "createdAt": "2020-01-27T16:04:51Z", "author": {"login": "nvitucci"}, "path": "circus-train-comparator/src/main/java/com/hotels/bdp/circustrain/comparator/hive/HiveDifferences.java", "diffHunk": "@@ -162,14 +171,16 @@ private HiveDifferences(\n       Iterator<Partition> sourcePartitionIterator,\n       Optional<Table> replicaTable,\n       Optional<? extends PartitionFetcher> replicaPartitionFetcher,\n-      Function<Path, String> checksumFunction) {\n+      Function<Path, String> checksumFunction,\n+      int partitionLimit) {\n     this.diffListener = diffListener;\n     this.comparatorRegistry = comparatorRegistry;\n     this.sourceTable = sourceTable;\n     this.sourcePartitionIterator = sourcePartitionIterator;\n     this.replicaTable = replicaTable;\n     this.replicaPartitionFetcher = replicaPartitionFetcher;\n     this.checksumFunction = checksumFunction;\n+    this.partitionLimit = partitionLimit < 0 ? UNLIMITED : partitionLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a5e3bfaefe28ddcd500fa8a3451f6489005b2e7"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMTYwMQ==", "bodyText": "then it's 0, and stays 0 and you get 0 partitions back just like you asked :)", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371431601", "createdAt": "2020-01-27T19:18:33Z", "author": {"login": "patduin"}, "path": "circus-train-comparator/src/main/java/com/hotels/bdp/circustrain/comparator/hive/HiveDifferences.java", "diffHunk": "@@ -162,14 +171,16 @@ private HiveDifferences(\n       Iterator<Partition> sourcePartitionIterator,\n       Optional<Table> replicaTable,\n       Optional<? extends PartitionFetcher> replicaPartitionFetcher,\n-      Function<Path, String> checksumFunction) {\n+      Function<Path, String> checksumFunction,\n+      int partitionLimit) {\n     this.diffListener = diffListener;\n     this.comparatorRegistry = comparatorRegistry;\n     this.sourceTable = sourceTable;\n     this.sourcePartitionIterator = sourcePartitionIterator;\n     this.replicaTable = replicaTable;\n     this.replicaPartitionFetcher = replicaPartitionFetcher;\n     this.checksumFunction = checksumFunction;\n+    this.partitionLimit = partitionLimit < 0 ? UNLIMITED : partitionLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyOTg2NA=="}, "originalCommit": {"oid": "3a5e3bfaefe28ddcd500fa8a3451f6489005b2e7"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODE1MDY0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoyNToxNVrOFif6Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoyNToxNVrOFif6Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxODY3NQ==", "bodyText": "Think you also need a line between Changed and Fixed?", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371718675", "createdAt": "2020-01-28T10:25:15Z", "author": {"login": "max-jacobs"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,6 +1,8 @@\n ## [15.1.0] - TBD\n ### Changed\n * AVRO Schema Copier now re-uses the normal 'data' copier instead of its own. See [#162](https://github.com/HotelsDotCom/circus-train/issues/162). \n+### Fixed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODIxOTk4OnYy", "diffSide": "RIGHT", "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDo0NzozMlrOFiglVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTowNToyOVrOFihF6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcyOTc0OQ==", "bodyText": "Isn't this also a change in behaviour that we should mention in the CHANGELOG? HiveDiff will now process the partitions with newest first while in the past it was oldest first?", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371729749", "createdAt": "2020-01-28T10:47:32Z", "author": {"login": "massdosage"}, "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "diffHunk": "@@ -55,19 +57,23 @@ public DiffGeneratedPartitionPredicate(\n     this.replica = replica;\n     this.tableReplication = tableReplication;\n     this.checksumFunction = checksumFunction;\n+    if (tableReplication.getSourceTable().getPartitionLimit() != null) {\n+      partitionLimit = tableReplication.getSourceTable().getPartitionLimit();\n+    }\n   }\n \n   private String generate() {\n     try (CloseableMetaStoreClient sourceMetastore = source.getMetaStoreClientSupplier().get()) {\n       try (CloseableMetaStoreClient replicaMetastore = replica.getMetaStoreClientSupplier().get()) {\n         Table sourceTable = source.getTableAndStatistics(tableReplication).getTable();\n         PartitionIterator partitionIterator = new PartitionIterator(sourceMetastore, sourceTable,\n-            tableReplication.getPartitionIteratorBatchSize());\n+            tableReplication.getPartitionIteratorBatchSize(), Ordering.REVERSE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczODA4OA==", "bodyText": "yeah I'll add a note", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371738088", "createdAt": "2020-01-28T11:05:29Z", "author": {"login": "patduin"}, "path": "circus-train-core/src/main/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicate.java", "diffHunk": "@@ -55,19 +57,23 @@ public DiffGeneratedPartitionPredicate(\n     this.replica = replica;\n     this.tableReplication = tableReplication;\n     this.checksumFunction = checksumFunction;\n+    if (tableReplication.getSourceTable().getPartitionLimit() != null) {\n+      partitionLimit = tableReplication.getSourceTable().getPartitionLimit();\n+    }\n   }\n \n   private String generate() {\n     try (CloseableMetaStoreClient sourceMetastore = source.getMetaStoreClientSupplier().get()) {\n       try (CloseableMetaStoreClient replicaMetastore = replica.getMetaStoreClientSupplier().get()) {\n         Table sourceTable = source.getTableAndStatistics(tableReplication).getTable();\n         PartitionIterator partitionIterator = new PartitionIterator(sourceMetastore, sourceTable,\n-            tableReplication.getPartitionIteratorBatchSize());\n+            tableReplication.getPartitionIteratorBatchSize(), Ordering.REVERSE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcyOTc0OQ=="}, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODIyMjQyOnYy", "diffSide": "RIGHT", "path": "circus-train-core/src/test/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicateTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDo0ODoyNlrOFigm8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMToxMTowNFrOFihOqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMDE2MA==", "bodyText": "I can't make up my mind whether this would be considered a breaking change. Technically I think it is, but I guess most of our end users wouldn't notice?", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371730160", "createdAt": "2020-01-28T10:48:26Z", "author": {"login": "massdosage"}, "path": "circus-train-core/src/test/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicateTest.java", "diffHunk": "@@ -106,17 +105,23 @@ public void setUp() throws Exception {\n   public void autogeneratePredicate() throws Exception {\n     when(replica.getTableAndStatistics(tableReplication)).thenReturn(replicaTableAndStats);\n     when(replicaTableAndStats.getTable()).thenReturn(table2);\n+    when(sourceTable.getPartitionLimit()).thenReturn((short) 10);\n+\n+    predicate = new DiffGeneratedPartitionPredicate(source, replica, tableReplication, checksumFunction);\n \n     assertThat(predicate.getPartitionPredicate(),\n-        is(\"(p1='value1' AND p2='value2') OR (p1='value11' AND p2='value22')\"));\n+        is(\"(p1='value11' AND p2='value22') OR (p1='value1' AND p2='value2')\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczODc5NQ==", "bodyText": "I was doubting if we should make it configurable, but to be honest i you're using hiveDiff and your whole table is copied its all the same. It's just for the backfill, I think it's not a breaking change.", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371738795", "createdAt": "2020-01-28T11:07:06Z", "author": {"login": "patduin"}, "path": "circus-train-core/src/test/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicateTest.java", "diffHunk": "@@ -106,17 +105,23 @@ public void setUp() throws Exception {\n   public void autogeneratePredicate() throws Exception {\n     when(replica.getTableAndStatistics(tableReplication)).thenReturn(replicaTableAndStats);\n     when(replicaTableAndStats.getTable()).thenReturn(table2);\n+    when(sourceTable.getPartitionLimit()).thenReturn((short) 10);\n+\n+    predicate = new DiffGeneratedPartitionPredicate(source, replica, tableReplication, checksumFunction);\n \n     assertThat(predicate.getPartitionPredicate(),\n-        is(\"(p1='value1' AND p2='value2') OR (p1='value11' AND p2='value22')\"));\n+        is(\"(p1='value11' AND p2='value22') OR (p1='value1' AND p2='value2')\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMDE2MA=="}, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0MDMyOQ==", "bodyText": "OK, then let's just document it in the CHANGELOG. If there is an easy place to mention the order that HiveDiff processes the partitions in the README that would be nice but not required. We could add a feature to make it configurable in the future if anyone ever actually needs it.", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371740329", "createdAt": "2020-01-28T11:11:04Z", "author": {"login": "massdosage"}, "path": "circus-train-core/src/test/java/com/hotels/bdp/circustrain/core/DiffGeneratedPartitionPredicateTest.java", "diffHunk": "@@ -106,17 +105,23 @@ public void setUp() throws Exception {\n   public void autogeneratePredicate() throws Exception {\n     when(replica.getTableAndStatistics(tableReplication)).thenReturn(replicaTableAndStats);\n     when(replicaTableAndStats.getTable()).thenReturn(table2);\n+    when(sourceTable.getPartitionLimit()).thenReturn((short) 10);\n+\n+    predicate = new DiffGeneratedPartitionPredicate(source, replica, tableReplication, checksumFunction);\n \n     assertThat(predicate.getPartitionPredicate(),\n-        is(\"(p1='value1' AND p2='value2') OR (p1='value11' AND p2='value22')\"));\n+        is(\"(p1='value11' AND p2='value22') OR (p1='value1' AND p2='value2')\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMDE2MA=="}, "originalCommit": {"oid": "47b5f4d446a56aef39c4c76f0fd51b12dbca1692"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODQyMjIwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjowMDoxN1rOFiie9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjowMDoxN1rOFiie9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2MDg4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Changed the order of the generated partition filter (HiveDiff) it is now reverse natural order (which means new partitions first when partitions are date/time strings). When in doubt use the circus-train-tool `check-filters.sh` to so what would be generated.\n          \n          \n            \n            * Changed the order of the generated partition filter used by \"HiveDiff\"  - it is now reverse natural order (which means new partitions first when partitions are date/time strings). When in doubt use the circus-train-tool `check-filters.sh` to see what would be generated.", "url": "https://github.com/ExpediaGroup/circus-train/pull/165#discussion_r371760884", "createdAt": "2020-01-28T12:00:17Z", "author": {"login": "massdosage"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,6 +1,7 @@\n ## [15.1.0] - TBD\n ### Changed\n * AVRO Schema Copier now re-uses the normal 'data' copier instead of its own. See [#162](https://github.com/HotelsDotCom/circus-train/issues/162). \n+* Changed the order of the generated partition filter (HiveDiff) it is now reverse natural order (which means new partitions first when partitions are date/time strings). When in doubt use the circus-train-tool `check-filters.sh` to so what would be generated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb28377c0c4dfd4271255337ad58fa15e43c131"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3852, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}