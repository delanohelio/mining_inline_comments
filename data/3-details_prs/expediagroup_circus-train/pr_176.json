{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODgyNzY4", "number": 176, "title": "Assume role auto refreshing", "bodyText": "[16.0.1] - TBD\nChanged\n\nFix AssumeRoleCredentialProvider not auto renewing credentials on expiration.", "createdAt": "2020-03-13T16:58:46Z", "url": "https://github.com/ExpediaGroup/circus-train/pull/176", "merged": true, "mergeCommit": {"oid": "8e37f34b3dd396c2945458095d82d4e209e111f5"}, "closed": true, "closedAt": "2020-03-16T14:49:28Z", "author": {"login": "KenFigueiredo"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKzd-9AH2gAyMzg3ODgyNzY4OmJiNzBkODVmNDAxZWYzZjk4NzFlMDg0NjgyODUyOWNiNmI1YzY0Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOO5cNAFqTM3NTI2NDY2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb70d85f401ef3f9871e0846828529cb6b5c6438", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/bb70d85f401ef3f9871e0846828529cb6b5c6438", "committedDate": "2020-03-05T22:43:14Z", "message": "testing s3 copier assume-role issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "committedDate": "2020-03-09T17:30:03Z", "message": "refactor s3 retry logic to be job based vs all or nothing. This should catch errors sooner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb76993aa15b8bc598e1894f968d39fa39394e46", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/bb76993aa15b8bc598e1894f968d39fa39394e46", "committedDate": "2020-03-09T17:36:33Z", "message": "defensive coding against cred failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f988f373fab0bb657bd0b8bb2dd29805e771838", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/2f988f373fab0bb657bd0b8bb2dd29805e771838", "committedDate": "2020-03-09T18:15:54Z", "message": "revert some code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "966b6cf20546537ee84ad99146e305732093cc09", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/966b6cf20546537ee84ad99146e305732093cc09", "committedDate": "2020-03-09T18:18:43Z", "message": "update log comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085740a991b10d682c93d558ccd985c664a7ee63", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/085740a991b10d682c93d558ccd985c664a7ee63", "committedDate": "2020-03-09T18:20:04Z", "message": "revert whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "committedDate": "2020-03-09T18:24:59Z", "message": "set to minimum duration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "committedDate": "2020-03-09T22:02:33Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "001cd306bb49e0c4f63e905666475bbd2d6bd74f", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/001cd306bb49e0c4f63e905666475bbd2d6bd74f", "committedDate": "2020-03-11T16:09:30Z", "message": "debugging wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd36e7c466856ff33492848b05d7e272ff3cce6", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/9bd36e7c466856ff33492848b05d7e272ff3cce6", "committedDate": "2020-03-11T22:14:31Z", "message": "optimize some threadpooling logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50279ff0eb8c2ec7a3f665509eee9256154d2eec", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/50279ff0eb8c2ec7a3f665509eee9256154d2eec", "committedDate": "2020-03-12T21:38:28Z", "message": "update readme & changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4abfa2fd36a15b8493c230a5686d834327f409d", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/a4abfa2fd36a15b8493c230a5686d834327f409d", "committedDate": "2020-03-12T22:39:56Z", "message": "add transfermanagerFactoryTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/e8454abc8598f24e2a7e682da8ea0eed2f8db236", "committedDate": "2020-03-12T22:42:05Z", "message": "reset untouched files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df860e16c709278b091bec93d7b99119f376f6f5", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/df860e16c709278b091bec93d7b99119f376f6f5", "committedDate": "2020-03-13T14:54:24Z", "message": "fix the nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/6b7356b0958d6ec301ced55981b6811b0d2b53f5", "committedDate": "2020-03-13T15:01:15Z", "message": "default_max_thread_pool -> default_thread_pool_max"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDc5MzMx", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#pullrequestreview-374479331", "createdAt": "2020-03-13T17:19:51Z", "commit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxOTo1MVrOF2MHBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoyMzowMFrOF2MN3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NTgzMA==", "bodyText": "As per @massdosage\n\nI don't want to overcomplicate things but I do want to make sure our configuration across the whole project is consistent. Currently when we've used the word duration (see expired-path-duration) this refers to an ISO duration (see https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm). The other time-based configuration I can spot is the metrics reporter period and time-unit. I'd prefer we use that, or if we only ever want to support seconds then we add that to the configuration property name.", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392365830", "createdAt": "2020-03-13T17:19:51Z", "author": {"login": "KenFigueiredo"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,9 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role-credential-duration`|No| Amount of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjQ2Nw==", "bodyText": "As per @massdosage\n\nMove this to line 42, there's no point getting the duration if this is going to fail.", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392366467", "createdAt": "2020-03-13T17:20:59Z", "author": {"login": "KenFigueiredo"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA==", "bodyText": "As per @massdosage\n\nI'm a bit confused why there are so many other changes to this class when the only change I can really see that is necessary is making this value configurable instead of a hardcoded value?", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392366730", "createdAt": "2020-03-13T17:21:28Z", "author": {"login": "KenFigueiredo"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    // STSAssumeRoleSessionCredentialsProvider should auto refresh its creds in the background.\n+    this.credProvider = new STSAssumeRoleSessionCredentialsProvider\n+        .Builder(roleArn, \"ct-assume-role-session\")\n+        .withRoleSessionDurationSeconds(credDuration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzI5Mg==", "bodyText": "As per @massdosage\n\nSuggestion:\nprivate STSAssumeRoleSessionCredentialsProvider credentialsProvider;", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392367292", "createdAt": "2020-03-13T17:22:27Z", "author": {"login": "KenFigueiredo"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzU4MA==", "bodyText": "As per @massdosage\n\nSuggestion:\nprivate void initializeCredentialProvider() {", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392367580", "createdAt": "2020-03-13T17:23:00Z", "author": {"login": "KenFigueiredo"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a374217e0d6e6189674ce9e66bb336994e0d397e", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/a374217e0d6e6189674ce9e66bb336994e0d397e", "committedDate": "2020-03-13T17:26:30Z", "message": "cherrypick changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c39d4c482f683dcc00e17d3bdd0e6da5e192f9c7", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/c39d4c482f683dcc00e17d3bdd0e6da5e192f9c7", "committedDate": "2020-03-13T17:27:35Z", "message": "cherrypick copier options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/18bb02c80e71996b5198376c0b6e5aa038efd7c0", "committedDate": "2020-03-13T17:30:32Z", "message": "whitespace removals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/896bf6889a2d32e275508e813424f2690ac69177", "committedDate": "2020-03-13T17:35:58Z", "message": "update as per review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTE1MTc4", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#pullrequestreview-374515178", "createdAt": "2020-03-13T18:14:21Z", "commit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTk0NTY0", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#pullrequestreview-374594564", "createdAt": "2020-03-13T20:18:08Z", "commit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoxODowOFrOF2RFDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoxODowOFrOF2RFDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0NzI0NA==", "bodyText": "copy paste leftover?", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392447244", "createdAt": "2020-03-13T20:18:08Z", "author": {"login": "patduin"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,9 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role-credential-period`|No| Amount of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|\n+|`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Defaults internally to 10 if unset on the client.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTI0MzUy", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#pullrequestreview-375124352", "createdAt": "2020-03-16T11:31:30Z", "commit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMTozMTozMFrOF2v4-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMTozOTo1N1rOF2wJ-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MjA1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fix AssumeRoleCredentialProvider not auto renewing credentials on expiration.\n          \n          \n            \n            * Fix AssumeRoleCredentialProvider not auto-renewing credentials on expiration.", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392952056", "createdAt": "2020-03-16T11:31:30Z", "author": {"login": "massdosage"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,7 @@\n+## [16.0.1] - TBD\n+### Changed\n+* Fix AssumeRoleCredentialProvider not auto renewing credentials on expiration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MzUwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |`copier-options.assume-role-credential-period`|No| Amount of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|\n          \n          \n            \n            |`copier-options.assume-role-session-duration-seconds`|No| Amount of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|\n          \n      \n    \n    \n  \n\nNow that I read through the code I see that AWS call it \"roleSessionDurationSeconds\" so I think that's the best thing to name it so people familiar with their SDK well recognise it.", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392953504", "createdAt": "2020-03-16T11:34:21Z", "author": {"login": "massdosage"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,9 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role-credential-period`|No| Amount of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NTY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n          \n          \n            \n              public static final String ASSUME_ROLE_SESSION_DURATION_SECONDS_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleSessionDurationSeconds\";\n          \n      \n    \n    \n  \n\netc...", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392955682", "createdAt": "2020-03-16T11:38:32Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,58 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NjAyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n          \n          \n            \n                int rollSessionDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392956028", "createdAt": "2020-03-16T11:39:10Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,58 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credentialsProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredentialProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896bf6889a2d32e275508e813424f2690ac69177"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NjQwOA==", "bodyText": "OK, thanks for the further explanation, makes sense.", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392956408", "createdAt": "2020-03-16T11:39:57Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    // STSAssumeRoleSessionCredentialsProvider should auto refresh its creds in the background.\n+    this.credProvider = new STSAssumeRoleSessionCredentialsProvider\n+        .Builder(roleArn, \"ct-assume-role-session\")\n+        .withRoleSessionDurationSeconds(credDuration)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA=="}, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d10caf3f1351e71bb3acb0bfe6f41ce52a0f8bf", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/3d10caf3f1351e71bb3acb0bfe6f41ce52a0f8bf", "committedDate": "2020-03-16T13:49:56Z", "message": "remove missed cherrypick maxthreadpool from readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e14b630a866b9fe1d4d02305d78b37bd412048ee", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/e14b630a866b9fe1d4d02305d78b37bd412048ee", "committedDate": "2020-03-16T13:52:06Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Adrian Woodhead <massdosage@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f065b473161b7aeb646acdaadb531a214284a3", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/f8f065b473161b7aeb646acdaadb531a214284a3", "committedDate": "2020-03-16T13:52:26Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Adrian Woodhead <massdosage@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64b5950e2ee7852c020ced2a2014d92024ea9ab0", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/64b5950e2ee7852c020ced2a2014d92024ea9ab0", "committedDate": "2020-03-16T13:59:48Z", "message": "finish rename of credential duration property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjY0NjYy", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#pullrequestreview-375264662", "createdAt": "2020-03-16T14:22:26Z", "commit": {"oid": "64b5950e2ee7852c020ced2a2014d92024ea9ab0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3797, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}