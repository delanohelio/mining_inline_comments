{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTA3NDEy", "number": 175, "title": "S3S3Copier thread updates", "bodyText": "[16.1.0] - TBD\nChanged\n\nUpdated S3S3Copier to have a configurable max number of threads to pass to TransferManager.\n\n\nNOTE: Assume role changes have been cherrypicked & removed and will be in their own PR", "createdAt": "2020-03-12T22:40:15Z", "url": "https://github.com/ExpediaGroup/circus-train/pull/175", "merged": true, "mergeCommit": {"oid": "61c91b3577213e42a7be711164e42381db5684f9"}, "closed": true, "closedAt": "2020-03-16T15:51:26Z", "author": {"login": "KenFigueiredo"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKzd-9AH2gAyMzg3NTA3NDEyOmJiNzBkODVmNDAxZWYzZjk4NzFlMDg0NjgyODUyOWNiNmI1YzY0Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOPvD2AFqTM3NTMxOTY5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb70d85f401ef3f9871e0846828529cb6b5c6438", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/bb70d85f401ef3f9871e0846828529cb6b5c6438", "committedDate": "2020-03-05T22:43:14Z", "message": "testing s3 copier assume-role issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "committedDate": "2020-03-09T17:30:03Z", "message": "refactor s3 retry logic to be job based vs all or nothing. This should catch errors sooner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb76993aa15b8bc598e1894f968d39fa39394e46", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/bb76993aa15b8bc598e1894f968d39fa39394e46", "committedDate": "2020-03-09T17:36:33Z", "message": "defensive coding against cred failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f988f373fab0bb657bd0b8bb2dd29805e771838", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/2f988f373fab0bb657bd0b8bb2dd29805e771838", "committedDate": "2020-03-09T18:15:54Z", "message": "revert some code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "966b6cf20546537ee84ad99146e305732093cc09", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/966b6cf20546537ee84ad99146e305732093cc09", "committedDate": "2020-03-09T18:18:43Z", "message": "update log comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085740a991b10d682c93d558ccd985c664a7ee63", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/085740a991b10d682c93d558ccd985c664a7ee63", "committedDate": "2020-03-09T18:20:04Z", "message": "revert whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "committedDate": "2020-03-09T18:24:59Z", "message": "set to minimum duration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "committedDate": "2020-03-09T22:02:33Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "001cd306bb49e0c4f63e905666475bbd2d6bd74f", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/001cd306bb49e0c4f63e905666475bbd2d6bd74f", "committedDate": "2020-03-11T16:09:30Z", "message": "debugging wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd36e7c466856ff33492848b05d7e272ff3cce6", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/9bd36e7c466856ff33492848b05d7e272ff3cce6", "committedDate": "2020-03-11T22:14:31Z", "message": "optimize some threadpooling logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50279ff0eb8c2ec7a3f665509eee9256154d2eec", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/50279ff0eb8c2ec7a3f665509eee9256154d2eec", "committedDate": "2020-03-12T21:38:28Z", "message": "update readme & changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4abfa2fd36a15b8493c230a5686d834327f409d", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/a4abfa2fd36a15b8493c230a5686d834327f409d", "committedDate": "2020-03-12T22:39:56Z", "message": "add transfermanagerFactoryTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/e8454abc8598f24e2a7e682da8ea0eed2f8db236", "committedDate": "2020-03-12T22:42:05Z", "message": "reset untouched files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTM3NDQ2", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374137446", "createdAt": "2020-03-13T09:01:01Z", "commit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTowMTowMlrOF18CEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTowNjowOVrOF18LCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEwMjQxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n          \n          \n            \n              private static final int DEFAULT_MAX_CREDENTIALS_DURATION_SECONDS = TimeUnit.HOURS.toSeconds(12);", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392102417", "createdAt": "2020-03-13T09:01:02Z", "author": {"login": "teabot"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,57 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEwMzUxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return MapUtils.getIntValue(copierOptions, Keys.ASSUME_ROLE_CREDENTIAL_DURATION.keyName(), 12 * 60 * 60);\n          \n          \n            \n                return MapUtils.getIntValue(copierOptions, Keys.ASSUME_ROLE_CREDENTIAL_DURATION.keyName(), TimeUnit.HOURS.toSeconds(12));", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392103510", "createdAt": "2020-03-13T09:03:29Z", "author": {"login": "teabot"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -131,6 +148,10 @@ public String getAssumedRole() {\n     return MapUtils.getString(copierOptions, Keys.ASSUME_ROLE.keyName(), null);\n   }\n \n+  public int getAssumedRoleCredentialDuration() {\n+    return MapUtils.getIntValue(copierOptions, Keys.ASSUME_ROLE_CREDENTIAL_DURATION.keyName(), 12 * 60 * 60);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEwNDcxMg==", "bodyText": "What does -1 mean in this context? If it for example means 'unbounded', then assign to suitably named constant:\n   private static final int UNBOUNDED = -1;\n   ...\n   return MapUtils.getInteger(copierOptions, Keys.MAX_THREAD_POOL_SIZE.keyName(), UNBOUNDED);\n\nNote, I use unbounded as an example - I don't know what -1 means in this context - which is precisely the problem this addresses.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392104712", "createdAt": "2020-03-13T09:06:09Z", "author": {"login": "teabot"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -86,6 +95,14 @@ public S3S3CopierOptions(Map<String, Object> copierOptions) {\n     this.copierOptions = new HashMap<>(copierOptions);\n   }\n \n+  public void overrideMaxThreadPoolSize(int newMax) {\n+    copierOptions.put(Keys.MAX_THREAD_POOL_SIZE.keyName(), newMax);\n+  }\n+\n+  public int getMaxThreadPoolSize() {\n+    return MapUtils.getInteger(copierOptions, Keys.MAX_THREAD_POOL_SIZE.keyName(), -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzE0OTc1", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374314975", "createdAt": "2020-03-13T13:51:45Z", "commit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1Mzo0NFrOF2Efhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1Mzo0NFrOF2Efhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MTAzMQ==", "bodyText": "Amount of time", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392241031", "createdAt": "2020-03-13T13:53:44Z", "author": {"login": "barnharts4"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -60,10 +60,19 @@\n      * access to the target.\n      */\n     ASSUME_ROLE(\"assume-role\"),\n+    /**\n+     * Number of time (in seconds) that the AWS SDK should assume the given role for.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df860e16c709278b091bec93d7b99119f376f6f5", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/df860e16c709278b091bec93d7b99119f376f6f5", "committedDate": "2020-03-13T14:54:24Z", "message": "fix the nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/6b7356b0958d6ec301ced55981b6811b0d2b53f5", "committedDate": "2020-03-13T15:01:15Z", "message": "default_max_thread_pool -> default_thread_pool_max"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzcxOTQ3", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374371947", "createdAt": "2020-03-13T15:02:30Z", "commit": {"oid": "df860e16c709278b091bec93d7b99119f376f6f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowMjozMVrOF2HDgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowMjozMVrOF2HDgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MzAxMA==", "bodyText": "perhaps default this to 10 (as per readme)  and remove the if check for -1 in the TransferManagerFactory. Just always set our own.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392283010", "createdAt": "2020-03-13T15:02:31Z", "author": {"login": "patduin"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -77,6 +87,7 @@ public String keyName() {\n   }\n \n   private final Map<String, Object> copierOptions;\n+  public static final int USE_DEFAULT_MAX_THREAD_POOL = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df860e16c709278b091bec93d7b99119f376f6f5"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzczMDI3", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374373027", "createdAt": "2020-03-13T15:03:51Z", "commit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowMzo1MVrOF2HG2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowMzo1MVrOF2HG2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4Mzg2NA==", "bodyText": "just always set our own executor, will be easier to read the code.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392283864", "createdAt": "2020-03-13T15:03:51Z", "author": {"login": "patduin"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/TransferManagerFactory.java", "diffHunk": "@@ -26,12 +31,19 @@\n @Component\n public class TransferManagerFactory {\n \n+  private static final Logger LOG = LoggerFactory.getLogger(TransferManagerFactory.class);\n+\n   public TransferManager newInstance(AmazonS3 targetS3Client, S3S3CopierOptions s3s3CopierOptions) {\n-    return TransferManagerBuilder\n-        .standard()\n+    TransferManagerBuilder builder = TransferManagerBuilder.standard()\n         .withMultipartCopyThreshold(s3s3CopierOptions.getMultipartCopyThreshold())\n         .withMultipartCopyPartSize(s3s3CopierOptions.getMultipartCopyPartSize())\n-        .withS3Client(targetS3Client)\n-        .build();\n+        .withS3Client(targetS3Client);\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != S3S3CopierOptions.USE_DEFAULT_THREAD_POOL_MAX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzczOTEx", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374373911", "createdAt": "2020-03-13T15:04:58Z", "commit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowNDo1OFrOF2HJbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowNDo1OFrOF2HJbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDUyNw==", "bodyText": "remove the if just set the default.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392284527", "createdAt": "2020-03-13T15:04:58Z", "author": {"login": "patduin"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/JceksAmazonS3ClientFactory.java", "diffHunk": "@@ -103,13 +103,27 @@ private String regionForUri(AmazonS3 client, AmazonS3URI uri) {\n     return bucketRegion;\n   }\n \n+  private AmazonS3ClientBuilder applyClientConfigurations(AmazonS3ClientBuilder builder, S3S3CopierOptions s3s3CopierOptions) {\n+    ClientConfiguration clientConfiguration = new ClientConfiguration();\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != S3S3CopierOptions.USE_DEFAULT_THREAD_POOL_MAX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzUxNjM0", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374351634", "createdAt": "2020-03-13T14:37:47Z", "commit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDozNzo0N1rOF2GHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToxMDoxMFrOF2HVWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2NzU1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## [16.0.1] - TBD\n          \n          \n            \n            ## [16.1.0] - TBD\n          \n      \n    \n    \n  \n\nI think we can consider this a new feature rather than just a bug fix.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392267552", "createdAt": "2020-03-13T14:37:47Z", "author": {"login": "massdosage"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,8 @@\n+## [16.0.1] - TBD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MDY1Mw==", "bodyText": "I don't want to overcomplicate things but I do want to make sure our configuration across the whole project is consistent. Currently when we've used the word duration (see expired-path-duration) this refers to an ISO duration (see https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm). The other time-based configuration I can spot is the metrics reporter period and time-unit. I'd prefer we use that, or if we only ever want to support seconds then we add that to the configuration property name.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392270653", "createdAt": "2020-03-13T14:42:44Z", "author": {"login": "massdosage"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,9 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role-credential-duration`|No| Number of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MTU3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Defaults internally to 10 if unset on the client.|\n          \n          \n            \n            |`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Default value is 10.|\n          \n      \n    \n    \n  \n\nThe end users don't know about and can't use the client themselves can they?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392271570", "createdAt": "2020-03-13T14:44:13Z", "author": {"login": "massdosage"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,9 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role-credential-duration`|No| Number of time (in seconds) that the AWS SDK should assume the given role for. Default value is 12 hours.|\n+|`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Defaults internally to 10 if unset on the client.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MjAwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private STSAssumeRoleSessionCredentialsProvider credProvider;\n          \n          \n            \n              private STSAssumeRoleSessionCredentialsProvider credentialsProvider;", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392272006", "createdAt": "2020-03-13T14:44:58Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,57 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MjYyOQ==", "bodyText": "Move this to line 42, there's no point getting the duration if this is going to fail.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392272629", "createdAt": "2020-03-13T14:45:52Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,57 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3Mzc5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void initializeCredProvider() {\n          \n          \n            \n              private void initializeCredentialProvider() {", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392273797", "createdAt": "2020-03-13T14:47:48Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,57 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NTEwMA==", "bodyText": "I'm a bit confused why there are so many other changes to this class when the only change I can really see that is necessary is making this value configurable instead of a hardcoded value?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392275100", "createdAt": "2020-03-13T14:49:52Z", "author": {"login": "massdosage"}, "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,57 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    // STSAssumeRoleSessionCredentialsProvider should auto refresh its creds in the background.\n+    this.credProvider = new STSAssumeRoleSessionCredentialsProvider\n+        .Builder(roleArn, \"ct-assume-role-session\")\n+        .withRoleSessionDurationSeconds(credDuration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3Nzk3MQ==", "bodyText": "What's the reason for splitting this into two lines? I think it was fine the way it was before.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392277971", "createdAt": "2020-03-13T14:54:33Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3Copier.java", "diffHunk": "@@ -173,8 +172,16 @@ private void initialiseAllCopyRequests() {\n         initialiseCopyJobs(subLocation, targetS3Uri);\n       }\n     }\n-    LOG\n-        .info(\"Finished initialising {} copy job(s)\", copyJobRequests.size());\n+\n+    int totalCopyJobs = copyJobRequests.size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3ODE2MA==", "bodyText": "Why has all this been moved down here instead of where it was being done above?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392278160", "createdAt": "2020-03-13T14:54:52Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3Copier.java", "diffHunk": "@@ -173,8 +172,16 @@ private void initialiseAllCopyRequests() {\n         initialiseCopyJobs(subLocation, targetS3Uri);\n       }\n     }\n-    LOG\n-        .info(\"Finished initialising {} copy job(s)\", copyJobRequests.size());\n+\n+    int totalCopyJobs = copyJobRequests.size();\n+    LOG.info(\"Finished initialising {} copy job(s)\", totalCopyJobs);\n+    s3s3CopierOptions.overrideMaxThreadPoolSize(determineThreadPoolSize(totalCopyJobs, s3s3CopierOptions.getMaxThreadPoolSize()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3ODgwMA==", "bodyText": "I've got a feeling this was set to debug for a reason, why is it being changed to warn?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392278800", "createdAt": "2020-03-13T14:55:48Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3Copier.java", "diffHunk": "@@ -292,7 +299,7 @@ private Copy submitCopyJob(CopyJobRequest copyJob) {\n                   copyObjectRequest.getSourceBucketName(),\n                   copyObjectRequest.getSourceKey());\n           LOG\n-              .debug(\"Copy failed with exception:\", e);\n+              .warn(\"Copy failed with exception:\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MDIyNQ==", "bodyText": "I don't really mind but why was this removed?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392280225", "createdAt": "2020-03-13T14:57:58Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/JceksAmazonS3ClientFactory.java", "diffHunk": "@@ -56,15 +57,14 @@ public JceksAmazonS3ClientFactory(Security security) {\n   @Override\n   public AmazonS3 newInstance(AmazonS3URI uri, S3S3CopierOptions s3s3CopierOptions) {\n     HadoopAWSCredentialProviderChain credentialProviderChain = getCredentialsProviderChain(\n-        s3s3CopierOptions.getAssumedRole());\n+        s3s3CopierOptions.getAssumedRole(), s3s3CopierOptions.getAssumedRoleCredentialDuration());\n     return newS3Client(uri, s3s3CopierOptions, credentialProviderChain);\n   }\n \n   private AmazonS3 newS3Client(\n       AmazonS3URI uri,\n       S3S3CopierOptions s3s3CopierOptions,\n       HadoopAWSCredentialProviderChain credentialProviderChain) {\n-    LOG.debug(\"trying to get a client for uri '{}'\", uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjcxMA==", "bodyText": "Depending on what you decide to do based on @teabot's comment about the -1 magic number, it might be worth introducing a \"can't be <=0 check\" when we get the config and then this can just check >0", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392282710", "createdAt": "2020-03-13T15:02:04Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/JceksAmazonS3ClientFactory.java", "diffHunk": "@@ -103,13 +103,27 @@ private String regionForUri(AmazonS3 client, AmazonS3URI uri) {\n     return bucketRegion;\n   }\n \n+  private AmazonS3ClientBuilder applyClientConfigurations(AmazonS3ClientBuilder builder, S3S3CopierOptions s3s3CopierOptions) {\n+    ClientConfiguration clientConfiguration = new ClientConfiguration();\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDY2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                TransferManagerConfiguration tmConfig = transferManager.getConfiguration();\n          \n          \n            \n                TransferManagerConfiguration managerConfig = transferManager.getConfiguration();", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392284662", "createdAt": "2020-03-13T15:05:12Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/test/java/com/hotels/bdp/circustrain/s3s3copier/aws/TransferManagerFactoryTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.hotels.bdp.circustrain.s3s3copier.aws;\n+\n+import static org.junit.Assert.assertThat;\n+import static org.hamcrest.CoreMatchers.is;\n+\n+import java.util.HashMap;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import com.amazonaws.services.s3.AmazonS3;\n+import com.amazonaws.services.s3.transfer.TransferManager;\n+import com.amazonaws.services.s3.transfer.TransferManagerConfiguration;\n+\n+import com.hotels.bdp.circustrain.s3s3copier.S3S3CopierOptions;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TransferManagerFactoryTest {\n+\n+  @Mock private AmazonS3 mockClient;\n+  private final Long MULTIPART_COPY_THRESHOLD_VALUE = 1L;\n+  private final Long MULTIPART_COPY_PART_SIZE = 1L;\n+\n+  @Test\n+  public void shouldCreateDefaultTransferManagerClient() {\n+    S3S3CopierOptions s3Options = new S3S3CopierOptions(new HashMap<String, Object>() {{\n+      put(S3S3CopierOptions.Keys.MULTIPART_COPY_THRESHOLD.keyName(), MULTIPART_COPY_THRESHOLD_VALUE);\n+      put(S3S3CopierOptions.Keys.MULTIPART_COPY_PART_SIZE.keyName(), MULTIPART_COPY_PART_SIZE);\n+    }});\n+\n+    TransferManagerFactory factory = new TransferManagerFactory();\n+    TransferManager transferManager = factory.newInstance(mockClient, s3Options);\n+    assertThat(transferManager.getAmazonS3Client(), is(mockClient));\n+\n+    TransferManagerConfiguration tmConfig = transferManager.getConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NTI4MA==", "bodyText": "Thanks for adding this, shocking we didn't already have a test class for it!", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392285280", "createdAt": "2020-03-13T15:06:11Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/test/java/com/hotels/bdp/circustrain/s3s3copier/aws/TransferManagerFactoryTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.hotels.bdp.circustrain.s3s3copier.aws;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NTg0NQ==", "bodyText": "Can we add a unit test for this if statement or is it not straightforward to check the existence of the executor factory?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392285845", "createdAt": "2020-03-13T15:07:08Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/TransferManagerFactory.java", "diffHunk": "@@ -26,12 +31,19 @@\n @Component\n public class TransferManagerFactory {\n \n+  private static final Logger LOG = LoggerFactory.getLogger(TransferManagerFactory.class);\n+\n   public TransferManager newInstance(AmazonS3 targetS3Client, S3S3CopierOptions s3s3CopierOptions) {\n-    return TransferManagerBuilder\n-        .standard()\n+    TransferManagerBuilder builder = TransferManagerBuilder.standard()\n         .withMultipartCopyThreshold(s3s3CopierOptions.getMultipartCopyThreshold())\n         .withMultipartCopyPartSize(s3s3CopierOptions.getMultipartCopyPartSize())\n-        .withS3Client(targetS3Client)\n-        .build();\n+        .withS3Client(targetS3Client);\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzMyOA==", "bodyText": "Why do we need this here as well as in the TransferManagerFactory?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392287328", "createdAt": "2020-03-13T15:09:41Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/JceksAmazonS3ClientFactory.java", "diffHunk": "@@ -103,13 +103,27 @@ private String regionForUri(AmazonS3 client, AmazonS3URI uri) {\n     return bucketRegion;\n   }\n \n+  private AmazonS3ClientBuilder applyClientConfigurations(AmazonS3ClientBuilder builder, S3S3CopierOptions s3s3CopierOptions) {\n+    ClientConfiguration clientConfiguration = new ClientConfiguration();\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != -1) {\n+      clientConfiguration.withMaxConnections(s3s3CopierOptions.getMaxThreadPoolSize());\n+    }\n+\n+    return builder.withClientConfiguration(clientConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzU3OQ==", "bodyText": "Can we just have a simple test class for this?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392287579", "createdAt": "2020-03-13T15:10:10Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/ExecutorServiceFactory.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "facd8ee9770645e7fa733c73b1bd201f6c5f0d70", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/facd8ee9770645e7fa733c73b1bd201f6c5f0d70", "committedDate": "2020-03-13T15:59:50Z", "message": "stash assume role changes for a seperate PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbf14913f902d359f243386fbd18baab592d2d2e", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/cbf14913f902d359f243386fbd18baab592d2d2e", "committedDate": "2020-03-13T16:01:25Z", "message": "remove missed copier option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "387cbdbc1074568728919e6cb400dbc2f362d866", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/387cbdbc1074568728919e6cb400dbc2f362d866", "committedDate": "2020-03-13T16:03:50Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Adrian Woodhead <massdosage@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6fc56e28885e74ef1c0a87f8cd3df654584b880", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/f6fc56e28885e74ef1c0a87f8cd3df654584b880", "committedDate": "2020-03-13T16:04:50Z", "message": "tmConfig -> managerConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3115dd44c3414fc422b7b1e38daafa46e5299120", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/3115dd44c3414fc422b7b1e38daafa46e5299120", "committedDate": "2020-03-13T16:12:12Z", "message": "always set executor factory w/ default of 10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09021b6652365e793997bb09e976af7311b46ba6", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/09021b6652365e793997bb09e976af7311b46ba6", "committedDate": "2020-03-13T16:28:00Z", "message": "revert debug log in JCEKS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea51e748dd225d9a834f5141aac73f9cfe8bf870", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ea51e748dd225d9a834f5141aac73f9cfe8bf870", "committedDate": "2020-03-13T16:53:03Z", "message": "remove unused executorServiceFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b2e3868d25857625c887266649bd2e91773e867", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/8b2e3868d25857625c887266649bd2e91773e867", "committedDate": "2020-03-13T17:40:57Z", "message": "cherrypick logs for assumerole"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/463fbb2bcd1a68b0e6f0f8888584e21254079199", "committedDate": "2020-03-13T17:43:48Z", "message": "method formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTkyNzk4", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374592798", "createdAt": "2020-03-13T20:16:51Z", "commit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoxNjo1MVrOF2RDBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoxNjo1MVrOF2RDBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0NjcyNQ==", "bodyText": "beating elliot to it let's make 10 a constant: DEFAULT_MAX_THREAD_POOL_SIZE", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392446725", "createdAt": "2020-03-13T20:16:51Z", "author": {"login": "patduin"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -86,6 +91,14 @@ public S3S3CopierOptions(Map<String, Object> copierOptions) {\n     this.copierOptions = new HashMap<>(copierOptions);\n   }\n \n+  public void overrideMaxThreadPoolSize(int newMax) {\n+    copierOptions.put(Keys.MAX_THREAD_POOL_SIZE.keyName(), newMax);\n+  }\n+\n+  public int getMaxThreadPoolSize() {\n+    return MapUtils.getInteger(copierOptions, Keys.MAX_THREAD_POOL_SIZE.keyName(), 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTkzNzI5", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-374593729", "createdAt": "2020-03-13T20:17:32Z", "commit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTE5OTMy", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-375119932", "createdAt": "2020-03-16T11:24:33Z", "commit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToyNDozM1rOF2vqzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToyOTowMlrOF2vz8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0ODQyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void overrideMaxThreadPoolSize(int newMax) {\n          \n          \n            \n              public void setMaxThreadPoolSize(int maxThreadPoolSize) {", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392948429", "createdAt": "2020-03-16T11:24:33Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -86,6 +91,14 @@ public S3S3CopierOptions(Map<String, Object> copierOptions) {\n     this.copierOptions = new HashMap<>(copierOptions);\n   }\n \n+  public void overrideMaxThreadPoolSize(int newMax) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0OTk5NQ==", "bodyText": "OK", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392949995", "createdAt": "2020-03-16T11:27:30Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/JceksAmazonS3ClientFactory.java", "diffHunk": "@@ -103,13 +103,27 @@ private String regionForUri(AmazonS3 client, AmazonS3URI uri) {\n     return bucketRegion;\n   }\n \n+  private AmazonS3ClientBuilder applyClientConfigurations(AmazonS3ClientBuilder builder, S3S3CopierOptions s3s3CopierOptions) {\n+    ClientConfiguration clientConfiguration = new ClientConfiguration();\n+\n+    if (s3s3CopierOptions.getMaxThreadPoolSize() != -1) {\n+      clientConfiguration.withMaxConnections(s3s3CopierOptions.getMaxThreadPoolSize());\n+    }\n+\n+    return builder.withClientConfiguration(clientConfiguration);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzMyOA=="}, "originalCommit": {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MDM2Ng==", "bodyText": "Left over from other PR, NABD though.", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392950366", "createdAt": "2020-03-16T11:28:13Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/S3S3CopierOptions.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.net.URI;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.concurrent.TimeUnit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MDc3MA==", "bodyText": "This doesn't look right?", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r392950770", "createdAt": "2020-03-16T11:29:02Z", "author": {"login": "massdosage"}, "path": "circus-train-s3-s3-copier/src/main/java/com/hotels/bdp/circustrain/s3s3copier/aws/TransferManagerFactory.java", "diffHunk": "@@ -15,8 +15,15 @@\n  */\n package com.hotels.bdp.circustrain.s3s3copier.aws;\n \n+\n+import java.util.concurrent.Executors;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n+import jline.internal.Log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463fbb2bcd1a68b0e6f0f8888584e21254079199"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ab2b3666fda97d8ce3da90142c8acad1a20855", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/f5ab2b3666fda97d8ce3da90142c8acad1a20855", "committedDate": "2020-03-16T14:05:40Z", "message": "Set changes from pr"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjY3MzI4", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-375267328", "createdAt": "2020-03-16T14:25:10Z", "commit": {"oid": "f5ab2b3666fda97d8ce3da90142c8acad1a20855"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyNToxMFrOF22tFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyNToxMFrOF22tFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MzcwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Default value is 10.|\n          \n          \n            \n            |`copier-options.s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Default value is 10.|\n          \n      \n    \n    \n  \n\nMissed the prefix that all the others have ^", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#discussion_r393063700", "createdAt": "2020-03-16T14:25:10Z", "author": {"login": "massdosage"}, "path": "README.md", "diffHunk": "@@ -396,7 +396,8 @@ If data is being replicated from S3 to S3 then Circus Train will use the AWS S3\n |`copier-options.canned-acl`|No|AWS Canned ACL name. See [Access Control List (ACL) Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for possible values. If not specified `S3S3Copier` will not specify any canned ACL.|\n |`copier-options.copier-factory-class`|No|Controls which copier is used for replication if provided.|\n |`copier-options.s3s3-retry-max-copy-attempts`|No|Controls the maximum number of attempts if AWS throws an error during copy. Default value is 3.|\n-| `copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`copier-options.assume-role`|No|ARN of an IAM role to assume when writing S3 data to the target S3 location. Useful when the target is in a different AWS account than Circus Train is running in. Note that if JCEKS is also configured, JCEKS credentials will be used instead of assuming a role. If `assume-role` is not specified, the copier will use instance credentials. The role provided must have read access to the S3 source and write access to the S3 target.|\n+|`s3s3-max-thread-pool-size`|No| Max number of threads to use for the transferManager thread pool. Default value is 10.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5ab2b3666fda97d8ce3da90142c8acad1a20855"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdd768f2d4285bcc4ac91c44d496953503faf9bf", "author": {"user": {"login": "massdosage", "name": "Adrian Woodhead"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/cdd768f2d4285bcc4ac91c44d496953503faf9bf", "committedDate": "2020-03-16T14:51:53Z", "message": "Merge branch 'master' into s3s3copier-threads-and-assume-role-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6fe106e8552d0db55d02af2ef66e61929fe2c50", "author": {"user": {"login": "massdosage", "name": "Adrian Woodhead"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/e6fe106e8552d0db55d02af2ef66e61929fe2c50", "committedDate": "2020-03-16T14:53:47Z", "message": "tidy up space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Mjk1MjE5", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-375295219", "createdAt": "2020-03-16T14:55:06Z", "commit": {"oid": "e6fe106e8552d0db55d02af2ef66e61929fe2c50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad9b5824b5d90b7eb7fc8ded420a12a0cd34541f", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/ad9b5824b5d90b7eb7fc8ded420a12a0cd34541f", "committedDate": "2020-03-16T15:01:12Z", "message": "add prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8662d42a40f054c204f3bde5b2674c50674236ec", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/8662d42a40f054c204f3bde5b2674c50674236ec", "committedDate": "2020-03-16T15:03:38Z", "message": "fix & merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb6d0e32359945f8664a8b254e1ebdc956c0e3ea", "author": {"user": {"login": "KenFigueiredo", "name": "Ken Figueiredo"}}, "url": "https://github.com/ExpediaGroup/circus-train/commit/cb6d0e32359945f8664a8b254e1ebdc956c0e3ea", "committedDate": "2020-03-16T15:07:45Z", "message": "remove duplicate readme entry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzE5Njkw", "url": "https://github.com/ExpediaGroup/circus-train/pull/175#pullrequestreview-375319690", "createdAt": "2020-03-16T15:21:00Z", "commit": {"oid": "cb6d0e32359945f8664a8b254e1ebdc956c0e3ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3792, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}