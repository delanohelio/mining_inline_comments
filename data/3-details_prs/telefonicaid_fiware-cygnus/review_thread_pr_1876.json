{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTMxMjA2", "number": 1876, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoyMTowMFrOEAaFzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODo1NjoyN1rOEAa5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODYyOTI2OnYy", "diffSide": "RIGHT", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoyMTowMFrOGbqoFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNTowM1rOGb4KXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzEyNw==", "bodyText": "I guess the following entry in CNR\n\n[cygnus-ngsi][PostgisSQLSink] Add dm-by-entity-database and dm-by-entity-database-schema\n\nshould be modiffied to\n\n[cygnus-ngsi][PostgresqlSink][PostgisSQLSink] Add dm-by-entity-database and dm-by-entity-database-schema", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431663127", "createdAt": "2020-05-28T08:21:00Z", "author": {"login": "fgalan"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -314,7 +314,6 @@ void persistBatch(NGSIBatch batch)\n             aggregator.setEntityForNaming(events.get(0).getEntityForNaming(enableGrouping, enableNameMappings, enableEncoding));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NDg5NQ==", "bodyText": "Fixed in d7cf20a", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431884895", "createdAt": "2020-05-28T14:35:03Z", "author": {"login": "IvanHdzC"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -314,7 +314,6 @@ void persistBatch(NGSIBatch batch)\n             aggregator.setEntityForNaming(events.get(0).getEntityForNaming(enableGrouping, enableNameMappings, enableEncoding));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzEyNw=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODY3Njc4OnYy", "diffSide": "RIGHT", "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODozMzo0MFrOGbrGIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNzo0NVrOGb4U4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MDgxNg==", "bodyText": "Both bullets seems to be the same... is that correct?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431670816", "createdAt": "2020-05-28T08:33:40Z", "author": {"login": "fgalan"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -57,22 +57,37 @@ It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/curren\n \n PostgreSQL [databases name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 It's added a new capability for Cygnus to create the schema name on runtime, this is possible trough enabling a specific Data Model on agent properties. That works the following way.\n+\n+* Data model by entity database (`data_model=dm-by-entity-database`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3NDgyNQ==", "bodyText": "Moreover... currently there is a configuration parameter in postgis/postgresql sink to specify the database. What happens in this case? The configuration setting is ignored? The behaviour be specified in the documentation (both in this section and in the database parameter in the configuration table)", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431674825", "createdAt": "2020-05-28T08:40:14Z", "author": {"login": "fgalan"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -57,22 +57,37 @@ It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/curren\n \n PostgreSQL [databases name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 It's added a new capability for Cygnus to create the schema name on runtime, this is possible trough enabling a specific Data Model on agent properties. That works the following way.\n+\n+* Data model by entity database (`data_model=dm-by-entity-database`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MDgxNg=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NzU4Nw==", "bodyText": "It was on purpose that those bullets to be the same because for now they do the same.\nAbout the second comment.\nFixed in 9bcedc4", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431887587", "createdAt": "2020-05-28T14:37:45Z", "author": {"login": "IvanHdzC"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -57,22 +57,37 @@ It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/curren\n \n PostgreSQL [databases name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 It's added a new capability for Cygnus to create the schema name on runtime, this is possible trough enabling a specific Data Model on agent properties. That works the following way.\n+\n+* Data model by entity database (`data_model=dm-by-entity-database`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MDgxNg=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODY4MDU3OnYy", "diffSide": "RIGHT", "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODozNDo0MlrOGbrIkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozODoxNFrOGb4W3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MTQ0Mg==", "bodyText": "It seems to be duplicated in lines L70-71. Maybe L70-71 should be removed?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431671442", "createdAt": "2020-05-28T08:34:42Z", "author": {"login": "fgalan"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -57,22 +57,37 @@ It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/curren\n \n PostgreSQL [databases name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 It's added a new capability for Cygnus to create the schema name on runtime, this is possible trough enabling a specific Data Model on agent properties. That works the following way.\n+\n+* Data model by entity database (`data_model=dm-by-entity-database`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+\n [Top](#top)\n \n #### <a name=\"section1.2.2\"></a>PostgreSQL schemas naming conventions\n A schema named as the notified `fiware-service` header value (or, in absence of such a header, the defaulted value for the FIWARE service) is created (if not existing yet).\n \n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the schema will be auto generated by the sink, this name will be the `fiware-servicePath` found on the headers of the first request to store.\n+\n It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) alphanumeric characters and the underscore (`_`). This leads to  certain [encoding](#section2.3.4) is applied depending on the `enable_encoding` configuration parameter.\n \n PostgreSQL [schemas name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 Cygnus creates the name of the schema name on runtime according to the selected DataModel for the sink.\n+\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the schema will be auto generated by the sink, this name will be the `fiware-servicePath` found on the headers of the first request to store.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4ODA5NA==", "bodyText": "Fixed in 9bcedc4", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431888094", "createdAt": "2020-05-28T14:38:14Z", "author": {"login": "IvanHdzC"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -57,22 +57,37 @@ It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/curren\n \n PostgreSQL [databases name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 It's added a new capability for Cygnus to create the schema name on runtime, this is possible trough enabling a specific Data Model on agent properties. That works the following way.\n+\n+* Data model by entity database (`data_model=dm-by-entity-database`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the database will be auto generated by the sink, this name will be the `fiware-service` found on the headers of the first request incoming to the sink.\n+\n [Top](#top)\n \n #### <a name=\"section1.2.2\"></a>PostgreSQL schemas naming conventions\n A schema named as the notified `fiware-service` header value (or, in absence of such a header, the defaulted value for the FIWARE service) is created (if not existing yet).\n \n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the schema will be auto generated by the sink, this name will be the `fiware-servicePath` found on the headers of the first request to store.\n+\n It must be said [PostgreSQL only accepts](https://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) alphanumeric characters and the underscore (`_`). This leads to  certain [encoding](#section2.3.4) is applied depending on the `enable_encoding` configuration parameter.\n \n PostgreSQL [schemas name length](http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) is limited to 63 characters.\n \n+Since version 2.2.0 Cygnus creates the name of the schema name on runtime according to the selected DataModel for the sink.\n+\n+* Data model by entity database schema (`data_model=dm-by-entity-database-schema`). For this datamodel the name of the schema will be auto generated by the sink, this name will be the `fiware-servicePath` found on the headers of the first request to store.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MTQ0Mg=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODY4NzgyOnYy", "diffSide": "RIGHT", "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODozNjo0MlrOGbrNRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozODoxOVrOGb4XNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MjY0Ng==", "bodyText": "The data_model= maybe should be removed?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431672646", "createdAt": "2020-05-28T08:36:42Z", "author": {"login": "fgalan"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -81,14 +96,14 @@ PostgreSQL [tables name length](http://www.postgresql.org/docs/current/static/sq\n \n The following table summarizes the table name composition (old encoding):\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |\n |---|---|---|---|\n | `/` | N/A | `<entityId>_<entityType>` | `<entityType>` |\n | `/<svcPath>` | `<svcPath>` | `<svcPath>_<entityId>_<entityType>` | `<svcPath>_<entityType>` |\n \n Using the new encoding:\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4ODE4Mg==", "bodyText": "Fixed in 9bcedc4", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431888182", "createdAt": "2020-05-28T14:38:19Z", "author": {"login": "IvanHdzC"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -81,14 +96,14 @@ PostgreSQL [tables name length](http://www.postgresql.org/docs/current/static/sq\n \n The following table summarizes the table name composition (old encoding):\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |\n |---|---|---|---|\n | `/` | N/A | `<entityId>_<entityType>` | `<entityType>` |\n | `/<svcPath>` | `<svcPath>` | `<svcPath>_<entityId>_<entityType>` | `<svcPath>_<entityType>` |\n \n Using the new encoding:\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MjY0Ng=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODY4OTI3OnYy", "diffSide": "RIGHT", "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODozNzowNVrOGbrOMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozODoyM1rOGb4XcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3Mjg4MQ==", "bodyText": "The data_model= maybe should be removed?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431672881", "createdAt": "2020-05-28T08:37:05Z", "author": {"login": "fgalan"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -81,14 +96,14 @@ PostgreSQL [tables name length](http://www.postgresql.org/docs/current/static/sq\n \n The following table summarizes the table name composition (old encoding):\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4ODI0MQ==", "bodyText": "Fixed in 9bcedc4 and 8b2cd22", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431888241", "createdAt": "2020-05-28T14:38:23Z", "author": {"login": "IvanHdzC"}, "path": "doc/cygnus-ngsi/flume_extensions_catalogue/ngsi_postgresql_sink.md", "diffHunk": "@@ -81,14 +96,14 @@ PostgreSQL [tables name length](http://www.postgresql.org/docs/current/static/sq\n \n The following table summarizes the table name composition (old encoding):\n \n-| FIWARE service path | `dm-by-service-path` | `dm-by-entity` | `dm-by-entity-type` |\n+| FIWARE service path | `dm-by-service-path` | `dm-by-entity`, `data_model=dm-by-entity-database-schema`, `data_model=dm-by-entity-database` | `dm-by-entity-type` |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3Mjg4MQ=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODc2MTA1OnYy", "diffSide": "RIGHT", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODo1NjoyN1rOGbr7uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo0MDoxMFrOGb4eqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4NDUzOQ==", "bodyText": "I would expect a else case with a warn log about dbname is null, make sense?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431684539", "createdAt": "2020-05-28T08:56:27Z", "author": {"login": "AlvaroVega"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java", "diffHunk": "@@ -254,7 +254,9 @@ public void configure(Context context) {\n     @Override\n     public void start() {\n         try {\n-            createPersistenceBackend(postgresqlHost, postgresqlPort, postgresqlUsername, postgresqlPassword, maxPoolSize, postgresqlDatabase, postgresqlOptions);\n+            if (buildDBName(null) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5MDA5MA==", "bodyText": "I agree that there must be some mention that the sql backend will not be generated on startup as usual, but I wasn't sure of how lo log it. Please checkout the text I used.\n\"The database name will be created on runtime, so if there is an specified database on the agent properties and you expect it to be read on startup, then you shoul look for the data model you are using. Maybe it's not the correct one\"", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1876#discussion_r431890090", "createdAt": "2020-05-28T14:40:10Z", "author": {"login": "IvanHdzC"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java", "diffHunk": "@@ -254,7 +254,9 @@ public void configure(Context context) {\n     @Override\n     public void start() {\n         try {\n-            createPersistenceBackend(postgresqlHost, postgresqlPort, postgresqlUsername, postgresqlPassword, maxPoolSize, postgresqlDatabase, postgresqlOptions);\n+            if (buildDBName(null) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4NDUzOQ=="}, "originalCommit": {"oid": "d65a9dde13ab9f9bcd8a8409e88c0480710fe7b1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2473, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}