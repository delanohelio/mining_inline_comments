{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTc2ODM1", "number": 1818, "title": "Task/generic aggregation", "bodyText": "This PR is an optimization for closed issue #1787. The reason for this optimization is because with this PR more sinks share the aggregation process.\nThe Generic aggregation class is now used as a bean and it declares (it's an abstract class) two functions for child classes.\nThe Generic Column and Row aggregation classes implements initialize and aggregation methods.\nAll data processing function are declared on Utils class in order to be shared among all sinks. If any function is very specific for a sink, it's declared on the sink itself.\nFunctional testing is still pending, but it would be nice if you guys can take a look to the general idea and implementation.", "createdAt": "2020-02-18T11:57:58Z", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818", "merged": true, "mergeCommit": {"oid": "9f1d2693c6d03dbfc52bc8f7baf155679a2fec3d"}, "closed": true, "closedAt": "2020-03-12T09:45:27Z", "author": {"login": "IvanHdzC"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-y9VkgH2gAyMzc2NTc2ODM1OmM1ZTM5MjkzYzI2NmYxNmNiNzFjOGE4ZjZiZWRlNjVmNThmMDRiZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKqeFiAFqTM2OTUxOTM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5e39293c266f16cb71c8a8f6bede65f58f04bd5", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c5e39293c266f16cb71c8a8f6bede65f58f04bd5", "committedDate": "2020-01-28T15:20:29Z", "message": "edit MySQL tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93e6441580fa5af477eec83fa0ee4dbd9b76d2ea", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/93e6441580fa5af477eec83fa0ee4dbd9b76d2ea", "committedDate": "2020-01-28T15:21:00Z", "message": "add generic aggregation clases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "189e72c441e466cbb7007c894b730edcdeb62d67", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/189e72c441e466cbb7007c894b730edcdeb62d67", "committedDate": "2020-01-28T15:24:51Z", "message": "add sql methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "163ed293b92d62c229d81c3b768bfbcf43f1bb65", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/163ed293b92d62c229d81c3b768bfbcf43f1bb65", "committedDate": "2020-01-28T15:25:37Z", "message": "add generic aggregation to mysql sink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ce2bb7f88323a56c4e36e6bfe733d9d2dff450d", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/8ce2bb7f88323a56c4e36e6bfe733d9d2dff450d", "committedDate": "2020-01-29T11:38:49Z", "message": "add mongo tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "914a74c917b8dec5f4842676510417bd9acf82c1", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/914a74c917b8dec5f4842676510417bd9acf82c1", "committedDate": "2020-01-29T11:41:03Z", "message": "add Mongo changes to use generic aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43278a76707e973296e842ba35c05bec052fe82e", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/43278a76707e973296e842ba35c05bec052fe82e", "committedDate": "2020-01-30T11:16:19Z", "message": "add generic aggregation to mongo sink and metadata persistance flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d0570b6519cfb62a1e34b1a093930f4034bfff8", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/8d0570b6519cfb62a1e34b1a093930f4034bfff8", "committedDate": "2020-01-30T12:12:59Z", "message": "edit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9cad26dc4703451b407c6c1594095f15b22ba4e", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/b9cad26dc4703451b407c6c1594095f15b22ba4e", "committedDate": "2020-01-30T14:04:58Z", "message": "Merge branch 'master' into task/generic_aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95d07a2ec942cdb5bb7e03db319c1f49fa5baa15", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/95d07a2ec942cdb5bb7e03db319c1f49fa5baa15", "committedDate": "2020-01-30T14:19:29Z", "message": "update gitignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79b7c5b49909971374cac2b969d926a2217734be", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/79b7c5b49909971374cac2b969d926a2217734be", "committedDate": "2020-01-30T15:30:23Z", "message": "update postgres and postgis sinks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e145f7771dcc2a9c58aa97cd2dc3fb7fa7bc7d52", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/e145f7771dcc2a9c58aa97cd2dc3fb7fa7bc7d52", "committedDate": "2020-01-31T14:57:34Z", "message": "add generic aggregation to HDFS objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7437f5134186e3f4a943df85e1f56fbe9ea2c0b", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/b7437f5134186e3f4a943df85e1f56fbe9ea2c0b", "committedDate": "2020-02-04T10:58:51Z", "message": "add attrType and timestamp to column aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "addcebc534c80897fbe4a858f6bb0e6782c82777", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/addcebc534c80897fbe4a858f6bb0e6782c82777", "committedDate": "2020-02-04T16:47:00Z", "message": "add csv processing for hdfs sink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24beefb6f7703a2c420dce91b948f51dc773592c", "author": {"user": null}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/24beefb6f7703a2c420dce91b948f51dc773592c", "committedDate": "2020-02-05T09:56:18Z", "message": "add metadata persitance for row aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a24a658c25e12be1edf842cf78efe569f9fbb283", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a24a658c25e12be1edf842cf78efe569f9fbb283", "committedDate": "2020-02-07T13:00:26Z", "message": "add generic aggregation to hdfs sink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "609cbf19fc4c0398c631358f07463a179869af54", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/609cbf19fc4c0398c631358f07463a179869af54", "committedDate": "2020-02-14T12:04:04Z", "message": "edit hdfs test to work with generic aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "979c1d022e594538d25856db27cd83fde93616de", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/979c1d022e594538d25856db27cd83fde93616de", "committedDate": "2020-02-14T12:06:12Z", "message": "add UTC format to timestamp on generic aggregation and remove empty metadata quotes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3abc2783ad0e5e40076e3b27efb8071e6c88838", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a3abc2783ad0e5e40076e3b27efb8071e6c88838", "committedDate": "2020-02-17T09:12:53Z", "message": "add tests for ckan agrregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50030e8d776de26a157663fd170ad4a610a4b06", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/d50030e8d776de26a157663fd170ad4a610a4b06", "committedDate": "2020-02-17T13:53:20Z", "message": "add generic aggregation to ckan sink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12ec533e814f4364f3bd6d73c454826ecb174223", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/12ec533e814f4364f3bd6d73c454826ecb174223", "committedDate": "2020-02-17T13:53:41Z", "message": "edit tests to use generic aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab", "committedDate": "2020-02-17T14:04:52Z", "message": "Merge branch 'master' into task/generic_aggregation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODgwOTMw", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-360880930", "createdAt": "2020-02-19T07:08:18Z", "commit": {"oid": "fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzowODoxOVrOFrdEzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzowODoxOVrOFrdEzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwOTQ1Mw==", "bodyText": "Maybe it is to be done in a next commit, but the style has somehow broken... Functions should have a JavaDoc description and the blocks an ending // comment.", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#discussion_r381109453", "createdAt": "2020-02-19T07:08:19Z", "author": {"login": "fgalan"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/aggregation/NGSIGenericAggregator.java", "diffHunk": "@@ -73,225 +49,282 @@\n     private String attribute;\n     private String dbName;\n     private String tableName;\n+    private String collectionName;\n+    private String orgName;\n+    private String pkgName;\n+    private String resName;\n+    private String hdfsFolder;\n+    private String hdfsFile;\n+    private String hiveFields;\n+    private String csvString;\n+    private boolean attrNativeTypes;\n+    private boolean enableGrouping;\n+    private boolean enableEncoding;\n+    private boolean enableNameMappings;\n+    private boolean enableGeoParse;\n+    private boolean attrMetadataStore;\n+    private boolean enableUTCRecvTime;\n \n-    /**\n-     * Instantiates a new Ngsi generic aggregator.\n-     *\n-     * @param enableGrouping     the enable grouping\n-     * @param enableNameMappings the enable name mappings\n-     * @param enableEncoding     the enable encoding\n-     * @param enableGeoParse     the enable geo parse\n-     * @param attrNativeTypes    the attr native types\n-     */\n-    NGSIGenericAggregator(boolean enableGrouping, boolean enableNameMappings, boolean enableEncoding, boolean enableGeoParse, boolean attrNativeTypes) {\n-        this.enableEncoding = enableEncoding;\n-        this.enableNameMappings = enableNameMappings;\n-        this.enableEncoding = enableEncoding;\n+    public LinkedHashMap<String, ArrayList<JsonElement>> getAggregation() {\n+        if (aggregation == null) {\n+            return new LinkedHashMap<>();\n+        } else {\n+            return aggregation;\n+        }\n+    }\n+\n+    public LinkedHashMap<String, ArrayList<JsonElement>> getAggregationToPersist() {\n+        if (aggregation == null) {\n+            return new LinkedHashMap<>();\n+        } else {\n+            return NGSIUtils.linkedHashMapWithoutDefaultFields(aggregation, attrMetadataStore);\n+        }\n+    }\n+\n+    public void setAggregation(LinkedHashMap<String, ArrayList<JsonElement>> aggregation) {\n+        this.aggregation = aggregation;\n+    }\n+\n+    public String getCollectionName(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return collectionName.toLowerCase();\n+        } else {\n+            return collectionName;\n+        }\n+    }\n+\n+    public Map<String, String> getMdAggregations() {\n+        if (mdAggregations == null) {\n+            return new HashMap<>();\n+        } else {\n+            return mdAggregations;\n+        }\n+    }\n+\n+    public String getCsvString() {\n+        return csvString;\n+    }\n+\n+    public void setCsvString(String csvString) {\n+        this.csvString = csvString;\n+    }\n+\n+    public String getHdfsFolder(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return hdfsFolder.toLowerCase();\n+        } else {\n+            return hdfsFolder;\n+        }\n+    }\n+\n+    public void setHdfsFolder(String hdfsFolder) {\n+        this.hdfsFolder = hdfsFolder;\n+    }\n+\n+    public String getHdfsFile(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return hdfsFile.toLowerCase();\n+        } else {\n+            return hdfsFile;\n+        }\n+    }\n+\n+    public boolean isEnableUTCRecvTime() {\n+        return enableUTCRecvTime;\n+    }\n+\n+    public void setEnableUTCRecvTime(boolean enableUTCRecvTime) {\n+        this.enableUTCRecvTime = enableUTCRecvTime;\n+    }\n+\n+    public void setHdfsFile(String hdfsFile) {\n+        this.hdfsFile = hdfsFile;\n+    }\n+\n+    public void setMdAggregations(Map<String, String> mdAggregations) {\n+        this.mdAggregations = mdAggregations;\n+    }\n+\n+    public void setAttrMetadataStore(boolean attrMetadataStore) {\n+        this.attrMetadataStore = attrMetadataStore;\n+    }\n+\n+    public boolean isAttrMetadataStore() {\n+        return attrMetadataStore;\n+    }\n+\n+    public boolean isEnableGeoParse() {\n+        return enableGeoParse;\n+    }\n+\n+    public void setEnableGeoParse(boolean enableGeoParse) {\n         this.enableGeoParse = enableGeoParse;\n-        this.attrNativeTypes = attrNativeTypes;\n-        aggregation = new LinkedHashMap<>();\n-    } // MySQLAggregator\n+    }\n \n-    /**\n-     * Gets aggregation.\n-     *\n-     * @return the aggregation\n-     */\n-    public LinkedHashMap<String, ArrayList<JsonElement>> getAggregation() {\n-        return aggregation;\n-    } //getAggregation\n+    public void setCollectionName(String collectionName) {\n+        this.collectionName = collectionName;\n+    }\n \n-    /**\n-     * Gets service path for data.\n-     *\n-     * @return the service path for data\n-     */\n-    protected String getServicePathForData() {\n+    public String getService() {\n+        return service;\n+    }\n+\n+    public String getHiveFields() {\n+        return hiveFields;\n+    }\n+\n+    public void setHiveFields(String hiveFields) {\n+        this.hiveFields = hiveFields;\n+    }\n+\n+    public void setService(String service) {\n+        this.service = service;\n+    }\n+\n+    public String getServicePathForData() {\n         return servicePathForData;\n-    } //getServicePathForData\n+    }\n+\n+    public void setServicePathForData(String servicePathForData) {\n+        this.servicePathForData = servicePathForData;\n+    }\n+\n+    public String getServicePathForNaming() {\n+        return servicePathForNaming;\n+    }\n+\n+    public void setServicePathForNaming(String servicePathForNaming) {\n+        this.servicePathForNaming = servicePathForNaming;\n+    }\n+\n+    public String getEntityForNaming() {\n+        return entityForNaming;\n+    }\n+\n+    public void setEntityForNaming(String entityForNaming) {\n+        this.entityForNaming = entityForNaming;\n+    }\n+\n+    public String getEntityType() {\n+        return entityType;\n+    }\n+\n+    public void setEntityType(String entityType) {\n+        this.entityType = entityType;\n+    }\n+\n+    public String getAttribute() {\n+        return attribute;\n+    }\n+\n+    public void setAttribute(String attribute) {\n+        this.attribute = attribute;\n+    }\n \n-    /**\n-     * Gets db name.\n-     *\n-     * @param enableLowercase the enable lowercase\n-     * @return the db name\n-     */\n     public String getDbName(boolean enableLowercase) {\n         if (enableLowercase) {\n             return dbName.toLowerCase();\n         } else {\n             return dbName;\n-        } // if else\n-    } // getDbName\n+        }\n+    }\n+\n+    public void setDbName(String dbName) {\n+        this.dbName = dbName;\n+    }\n \n-    /**\n-     * Gets table name.\n-     *\n-     * @param enableLowercase the enable lowercase\n-     * @return the table name\n-     */\n     public String getTableName(boolean enableLowercase) {\n         if (enableLowercase) {\n             return tableName.toLowerCase();\n         } else {\n             return tableName;\n-        } // if else\n-    } // getTableName\n-\n-\n-    /**\n-     * Sets db name.\n-     *\n-     * @param dbName the db name\n-     */\n-    public void setDbName(String dbName) {\n-        this.dbName = dbName;\n+        }\n     }\n \n-    /**\n-     * Sets table name.\n-     *\n-     * @param tableName the table name\n-     */\n     public void setTableName(String tableName) {\n         this.tableName = tableName;\n     }\n \n-    /**\n-     * Gets string value for json element.\n-     *\n-     * @param value the value\n-     * @return the string value for json element\n-     */\n-    public String getStringValueForJsonElement(JsonElement value) {\n-        String stringValue;\n-        if (attrNativeTypes) {\n-            if (value == null || value.isJsonNull()) {\n-                stringValue = \"NULL\";\n-            } else if (value.isJsonPrimitive()) {\n-                if (value.getAsJsonPrimitive().isBoolean()) {\n-                    stringValue = value.getAsString().toUpperCase();\n-                } else if (value.getAsJsonPrimitive().isNumber()) {\n-                    stringValue = value.getAsString();\n-                }else {\n-                    if (value.toString().contains(\"ST_GeomFromGeoJSON\") || value.toString().contains(\"ST_SetSRID\")) {\n-                        stringValue = value.getAsString().replace(\"\\\\\", \"\");\n-                    } else {\n-                        stringValue = \"'\" + value.getAsString() + \"'\";\n-                    }\n-                }\n-            } else {\n-                stringValue = \"'\" + value.toString() + \"'\";\n-            }\n+    public String getOrgName(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return orgName.toLowerCase();\n         } else {\n-            if (value.isJsonPrimitive()) {\n-                stringValue = \"'\" + value.getAsString() + \"'\";\n-            } else {\n-                stringValue = \"'\" + value.toString() + \"'\";\n-            }\n+            return orgName;\n         }\n-        LOGGER.debug(\"[\" + getName() + \"] aggregation entry = \"  + stringValue);\n-        return stringValue;\n     }\n \n-    /**\n-     * Gets values for insert.\n-     *\n-     * @return the values for insert\n-     */\n-    public String getValuesForInsert() {\n-        String valuesForInsert = \"\";\n-        int numEvents = aggregation.get(NGSIConstants.FIWARE_SERVICE_PATH).size();\n-\n-        for (int i = 0; i < numEvents; i++) {\n-            if (i == 0) {\n-                valuesForInsert += \"(\";\n-            } else {\n-                valuesForInsert += \",(\";\n-            } // if else\n-            boolean first = true;\n-            Iterator<String> it = aggregation.keySet().iterator();\n-            while (it.hasNext()) {\n-                String entry = (String) it.next();\n-                ArrayList<JsonElement> values = (ArrayList<JsonElement>) aggregation.get(entry);\n-                JsonElement value = values.get(i);\n-                String stringValue = getStringValueForJsonElement(value);\n-                if (first) {\n-                    valuesForInsert += stringValue;\n-                    first = false;\n-                } else {\n-                    valuesForInsert += \",\" + stringValue;\n-                } // if else\n-            } // while\n-            valuesForInsert += \")\";\n-        } // for\n-        return valuesForInsert;\n-    } // getValuesForInsert\n-\n-    private String getName() {\n-        return \"NGSIUtils.GenericAggregator\";\n+    public void setOrgName(String orgName) {\n+        this.orgName = orgName;\n     }\n \n-    /**\n-     * Gets fields for create.\n-     *\n-     * @return the fields for create\n-     */\n-    public String getFieldsForCreate() {\n-        String fieldsForCreate = \"(\";\n-        boolean first = true;\n-        Iterator<String> it = aggregation.keySet().iterator();\n-\n-        while (it.hasNext()) {\n-            if (first) {\n-                fieldsForCreate += (String) it.next() + \" text\";\n-                first = false;\n-            } else {\n-                fieldsForCreate += \",\" + (String) it.next() + \" text\";\n-            } // if else\n-        } // while\n-\n-        return fieldsForCreate + \")\";\n-    } // getFieldsForCreate\n+    public String getPkgName(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return pkgName.toLowerCase();\n+        } else {\n+            return pkgName;\n+        }\n+    }\n \n-    /**\n-     * Gets fields for insert.\n-     *\n-     * @return the fields for insert\n-     */\n-    public String getFieldsForInsert() {\n-        String fieldsForInsert = \"(\";\n-        boolean first = true;\n-        Iterator<String> it = aggregation.keySet().iterator();\n-        while (it.hasNext()) {\n-            if (first) {\n-                fieldsForInsert += (String) it.next();\n-                first = false;\n-            } else {\n-                fieldsForInsert += \",\" + (String) it.next();\n-            } // if else\n-        } // while\n-        return fieldsForInsert + \")\";\n-    } // getFieldsForInsert\n+    public void setPkgName(String pkgName) {\n+        this.pkgName = pkgName;\n+    }\n+\n+    public String getResName(boolean enableLowercase) {\n+        if (enableLowercase) {\n+            return resName.toLowerCase();\n+        } else {\n+            return resName;\n+        }\n+    }\n+\n+    public void setResName(String resName) {\n+        this.resName = resName;\n+    }\n+\n+    public boolean isAttrNativeTypes() {\n+        return attrNativeTypes;\n+    }\n+\n+    public void setAttrNativeTypes(boolean attrNativeTypes) {\n+        this.attrNativeTypes = attrNativeTypes;\n+    }\n+\n+    public boolean isEnableGrouping() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab"}, "originalPosition": 472}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODgxNTY3", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-360881567", "createdAt": "2020-02-19T07:09:59Z", "commit": {"oid": "fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzowOTo1OVrOFrdGvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzowOTo1OVrOFrdGvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwOTk1MQ==", "bodyText": "License header in new files", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#discussion_r381109951", "createdAt": "2020-02-19T07:09:59Z", "author": {"login": "fgalan"}, "path": "cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMongoSinkTest.java", "diffHunk": "@@ -0,0 +1,259 @@\n+package com.telefonica.iot.cygnus.sinks;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf6848c023b5832b6bd8a9f87ebbe20fb5b60ab"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25f98f637db431e38bfee19706ae5ac09993eb24", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/25f98f637db431e38bfee19706ae5ac09993eb24", "committedDate": "2020-02-19T07:37:51Z", "message": "add license headers to new class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7932dcc954712066bd7ab1c957e5c769e518bb96", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/7932dcc954712066bd7ab1c957e5c769e518bb96", "committedDate": "2020-02-19T08:40:10Z", "message": "add java doc to new elements"}, "afterCommit": {"oid": "a800e1c7e7f90e1409151fbf5d0d9a54d886beff", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a800e1c7e7f90e1409151fbf5d0d9a54d886beff", "committedDate": "2020-02-19T14:47:26Z", "message": "add java doc to new elements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a800e1c7e7f90e1409151fbf5d0d9a54d886beff", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a800e1c7e7f90e1409151fbf5d0d9a54d886beff", "committedDate": "2020-02-19T14:47:26Z", "message": "add java doc to new elements"}, "afterCommit": {"oid": "28d84554e73c183da0cd1a6d621ba39be8d120d5", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/28d84554e73c183da0cd1a6d621ba39be8d120d5", "committedDate": "2020-02-19T16:18:38Z", "message": "add java doc to new elements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "683ab076f020f01987369925c4e9091d083b7560", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/683ab076f020f01987369925c4e9091d083b7560", "committedDate": "2020-02-19T16:19:32Z", "message": "add java doc to new elements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28d84554e73c183da0cd1a6d621ba39be8d120d5", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/28d84554e73c183da0cd1a6d621ba39be8d120d5", "committedDate": "2020-02-19T16:18:38Z", "message": "add java doc to new elements"}, "afterCommit": {"oid": "683ab076f020f01987369925c4e9091d083b7560", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/683ab076f020f01987369925c4e9091d083b7560", "committedDate": "2020-02-19T16:19:32Z", "message": "add java doc to new elements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxODU0NDg5", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-361854489", "createdAt": "2020-02-20T12:15:59Z", "commit": {"oid": "683ab076f020f01987369925c4e9091d083b7560"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoxNjowMFrOFsRKrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoxNjowMFrOFsRKrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk2MjkyNw==", "bodyText": "Used by? Is there any new dependence in pom.xml ?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#discussion_r381962927", "createdAt": "2020-02-20T12:16:00Z", "author": {"login": "AlvaroVega"}, "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIHDFSSink.java", "diffHunk": "@@ -18,6 +18,12 @@\n \n package com.telefonica.iot.cygnus.sinks;\n \n+import com.amazonaws.services.dynamodbv2.xspec.S;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683ab076f020f01987369925c4e9091d083b7560"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxODY2MzY3", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-361866367", "createdAt": "2020-02-20T12:36:31Z", "commit": {"oid": "683ab076f020f01987369925c4e9091d083b7560"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozNjozMlrOFsRu1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozNjozMlrOFsRu1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjE4Mw==", "bodyText": "leftover?", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#discussion_r381972183", "createdAt": "2020-02-20T12:36:32Z", "author": {"login": "AlvaroVega"}, "path": "cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIHDFSSinkTest.java", "diffHunk": "@@ -1533,76 +1615,101 @@ public void testNativeTypeRowBatchCsvNotMetadata() throws CygnusBadConfiguration\n \n     @Test\n     public void testNativeTypeRowBatchJson() throws CygnusBadConfiguration, CygnusRuntimeError, CygnusPersistenceError, CygnusBadContextData {\n-        String attr_native_types = \"true\";\n-        NGSIHDFSSink ngsihdfsSink= new NGSIHDFSSink();\n-        ngsihdfsSink.configure(createContextforNativeTypes(\"json-row\", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, attr_native_types, \"true\"));\n         NGSIBatch batch = prepaireBatch();\n         String destination = \"someDestination\";\n+        String file_format = \"json-row\";\n+        NGSIHDFSSink ngsihdfsSink = new NGSIHDFSSink();\n+        ngsihdfsSink.configure(createContextforNativeTypes(null, null, null, null, null, null, null, null, null, null, null, file_format, null, null, null, null, null, null, null, null, null, null));\n         try {\n             batch.startIterator();\n+            //NGSIGenericAggregator aggregator = new NGSIGenericColumnAggregator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683ab076f020f01987369925c4e9091d083b7560"}, "originalPosition": 350}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf42de008c59fb41d740ec6b851aee434e50fb7b", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/bf42de008c59fb41d740ec6b851aee434e50fb7b", "committedDate": "2020-02-20T14:48:01Z", "message": "code cleanning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f3f0a778415aa6f3a738cd481e6c90195569147", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/8f3f0a778415aa6f3a738cd481e6c90195569147", "committedDate": "2020-02-20T16:30:29Z", "message": "Merge branch 'master' into task/generic_aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d0c1d561aa4a7ba5379667bf15e3c62f15eaaf3", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/6d0c1d561aa4a7ba5379667bf15e3c62f15eaaf3", "committedDate": "2020-02-20T16:52:01Z", "message": "fix merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTQ1MjEx", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-362545211", "createdAt": "2020-02-21T10:47:44Z", "commit": {"oid": "6d0c1d561aa4a7ba5379667bf15e3c62f15eaaf3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba89c01d1be4a5051c88bdb981c46afcdc851691", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/ba89c01d1be4a5051c88bdb981c46afcdc851691", "committedDate": "2020-03-02T09:32:19Z", "message": "Merge branch 'master' into task/generic_aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bbf71fc751989e2c0392625bd6344b63737bf04", "author": {"user": {"login": "IvanHdzC", "name": "Ivan Hernandez"}}, "url": "https://github.com/telefonicaid/fiware-cygnus/commit/5bbf71fc751989e2c0392625bd6344b63737bf04", "committedDate": "2020-03-02T09:38:24Z", "message": "enable postgis function even if nativetypes is off"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTEyNjAx", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-369512601", "createdAt": "2020-03-05T12:02:45Z", "commit": {"oid": "5bbf71fc751989e2c0392625bd6344b63737bf04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTE5MzY0", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1818#pullrequestreview-369519364", "createdAt": "2020-03-05T12:14:12Z", "commit": {"oid": "5bbf71fc751989e2c0392625bd6344b63737bf04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3814, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}