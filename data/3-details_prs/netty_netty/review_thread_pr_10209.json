{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDAyMjg2", "number": 10209, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoyMjoyMlrOD1p6aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODoxMDozM1rOD203vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTg3ODE5OnYy", "diffSide": "RIGHT", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoyMjoyMlrOGLMSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODozMzoyNVrOGLMuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4ODkzMg==", "bodyText": "@fabienrenaud let's use buf.retainedSlice()", "url": "https://github.com/netty/netty/pull/10209#discussion_r414388932", "createdAt": "2020-04-24T08:22:22Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retain() : buf.copy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7760d9b1e0db6c99e44fd146883dfcb7b8419205"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5NTkzNA==", "bodyText": "right...\ndone!", "url": "https://github.com/netty/netty/pull/10209#discussion_r414395934", "createdAt": "2020-04-24T08:33:25Z", "author": {"login": "fabienrenaud"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retain() : buf.copy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4ODkzMg=="}, "originalCommit": {"oid": "7760d9b1e0db6c99e44fd146883dfcb7b8419205"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMwMTE2OnYy", "diffSide": "RIGHT", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMDoyMVrOGLQKYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoxMDozMlrOGLZjkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjMyMg==", "bodyText": "@fabienrenaud Can you add a comment that its only fine to not copy here as we will never call undecodedChunk.writeBytes(...) later on ?", "url": "https://github.com/netty/netty/pull/10209#discussion_r414452322", "createdAt": "2020-04-24T10:00:21Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "837f8ed8a4bfc52bf645526b346da0004e092e47"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNjIyNg==", "bodyText": "added", "url": "https://github.com/netty/netty/pull/10209#discussion_r414606226", "createdAt": "2020-04-24T14:10:32Z", "author": {"login": "fabienrenaud"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java", "diffHunk": "@@ -321,18 +321,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostMultipartRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjMyMg=="}, "originalCommit": {"oid": "837f8ed8a4bfc52bf645526b346da0004e092e47"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMwMjEwOnYy", "diffSide": "RIGHT", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMDozMVrOGLQK3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoxMDozOFrOGLZj3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ0Nw==", "bodyText": "same comment as above", "url": "https://github.com/netty/netty/pull/10209#discussion_r414452447", "createdAt": "2020-04-24T10:00:31Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoder.java", "diffHunk": "@@ -280,18 +280,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostStandardRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "837f8ed8a4bfc52bf645526b346da0004e092e47"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNjMwMA==", "bodyText": "added", "url": "https://github.com/netty/netty/pull/10209#discussion_r414606300", "createdAt": "2020-04-24T14:10:38Z", "author": {"login": "fabienrenaud"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoder.java", "diffHunk": "@@ -280,18 +280,19 @@ public InterfaceHttpData getBodyHttpData(String name) {\n     public HttpPostStandardRequestDecoder offer(HttpContent content) {\n         checkDestroyed();\n \n+        if (content instanceof LastHttpContent) {\n+            isLastChunk = true;\n+        }\n+\n+        ByteBuf buf = content.content();\n         // Maybe we should better not copy here for performance reasons but this will need\n         // more care by the caller to release the content in a correct manner later\n         // So maybe something to optimize on a later stage\n-        ByteBuf buf = content.content();\n         if (undecodedChunk == null) {\n-            undecodedChunk = buf.copy();\n+            undecodedChunk = isLastChunk ? buf.retainedSlice() : buf.copy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ0Nw=="}, "originalCommit": {"oid": "837f8ed8a4bfc52bf645526b346da0004e092e47"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODE1OTM1OnYy", "diffSide": "RIGHT", "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODoxMDozM1rOGMw7RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNzo0Mjo0OFrOGNG_sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ==", "bodyText": "@fabienrenaud why this change ?", "url": "https://github.com/netty/netty/pull/10209#discussion_r416037701", "createdAt": "2020-04-27T18:10:33Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java", "diffHunk": "@@ -747,7 +769,7 @@ public void testNotLeakHeapBufferWhenWrapIllegalArgumentException() {\n     }\n \n     private static void testNotLeakWhenWrapIllegalArgumentException(ByteBuf buf) {\n-        buf.writeCharSequence(\"==\", CharsetUtil.US_ASCII);\n+        buf.writeCharSequence(\"a=b&foo=%22bar%22&==\", CharsetUtil.US_ASCII);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c742305af8643612f93ec48c1f80580dc5ebd7"}, "originalPosition": 459}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA0NzkwMw==", "bodyText": "the previous sequence was failing decoding immediately (on the first character).\nthe new sequence causes the decoder to create a few new/sliced ByteBufs before failing the decoding of the last entry ==.\nin other words, the check now increases the chance of catching a leak caused by failing to decode the Nth element instead of just the first one.", "url": "https://github.com/netty/netty/pull/10209#discussion_r416047903", "createdAt": "2020-04-27T18:25:13Z", "author": {"login": "fabienrenaud"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java", "diffHunk": "@@ -747,7 +769,7 @@ public void testNotLeakHeapBufferWhenWrapIllegalArgumentException() {\n     }\n \n     private static void testNotLeakWhenWrapIllegalArgumentException(ByteBuf buf) {\n-        buf.writeCharSequence(\"==\", CharsetUtil.US_ASCII);\n+        buf.writeCharSequence(\"a=b&foo=%22bar%22&==\", CharsetUtil.US_ASCII);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ=="}, "originalCommit": {"oid": "33c742305af8643612f93ec48c1f80580dc5ebd7"}, "originalPosition": 459}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM5OTI4MA==", "bodyText": "got it... thanks", "url": "https://github.com/netty/netty/pull/10209#discussion_r416399280", "createdAt": "2020-04-28T07:42:48Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java", "diffHunk": "@@ -747,7 +769,7 @@ public void testNotLeakHeapBufferWhenWrapIllegalArgumentException() {\n     }\n \n     private static void testNotLeakWhenWrapIllegalArgumentException(ByteBuf buf) {\n-        buf.writeCharSequence(\"==\", CharsetUtil.US_ASCII);\n+        buf.writeCharSequence(\"a=b&foo=%22bar%22&==\", CharsetUtil.US_ASCII);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNzcwMQ=="}, "originalCommit": {"oid": "33c742305af8643612f93ec48c1f80580dc5ebd7"}, "originalPosition": 459}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3412, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}