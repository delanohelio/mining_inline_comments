{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzQyMTAx", "number": 10207, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NDoyNVrOD1mtlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzowMzozOFrOD2q76w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTM1MzgzOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NDoyNVrOGLHqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1ODo0NVrOGLHw3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzAzMw==", "bodyText": "let's not change the default values used here.", "url": "https://github.com/netty/netty/pull/10207#discussion_r414313033", "createdAt": "2020-04-24T05:54:25Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java", "diffHunk": "@@ -46,16 +45,17 @@\n     private Integer minTtl;\n     private Integer maxTtl;\n     private Integer negativeTtl;\n-    private long queryTimeoutMillis = 5000;\n+    private long queryTimeoutMillis = -1;\n     private ResolvedAddressTypes resolvedAddressTypes = DnsNameResolver.DEFAULT_RESOLVE_ADDRESS_TYPES;\n     private boolean completeOncePreferredResolved;\n     private boolean recursionDesired = true;\n-    private int maxQueriesPerResolve = 16;\n+    private int maxQueriesPerResolve = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNDcxNw==", "bodyText": "ah never mind... this is because we use the one configured by the system in DnsNameResolver then", "url": "https://github.com/netty/netty/pull/10207#discussion_r414314717", "createdAt": "2020-04-24T05:58:45Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java", "diffHunk": "@@ -46,16 +45,17 @@\n     private Integer minTtl;\n     private Integer maxTtl;\n     private Integer negativeTtl;\n-    private long queryTimeoutMillis = 5000;\n+    private long queryTimeoutMillis = -1;\n     private ResolvedAddressTypes resolvedAddressTypes = DnsNameResolver.DEFAULT_RESOLVE_ADDRESS_TYPES;\n     private boolean completeOncePreferredResolved;\n     private boolean recursionDesired = true;\n-    private int maxQueriesPerResolve = 16;\n+    private int maxQueriesPerResolve = -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzAzMw=="}, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTM1Njk4OnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NTozNFrOGLHr9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NTozNFrOGLHr9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzQ2Mg==", "bodyText": "2020", "url": "https://github.com/netty/netty/pull/10207#discussion_r414313462", "createdAt": "2020-04-24T05:55:34Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2017 The Netty Project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTM3MjMxOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjowMTowNlrOGLH0QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTowMToxM1rOGMQzmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNTU4NQ==", "bodyText": "@fabienrenaud I wonder if we should better do this as part of the builder ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414315585", "createdAt": "2020-04-24T06:01:06Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java", "diffHunk": "@@ -401,7 +403,7 @@ public DnsNameResolver(\n                                                                dnsQueryLifecycleObserverFactory) :\n                 checkNotNull(dnsQueryLifecycleObserverFactory, \"dnsQueryLifecycleObserverFactory\");\n         this.searchDomains = searchDomains != null ? searchDomains.clone() : DEFAULT_SEARCH_DOMAINS;\n-        this.ndots = ndots >= 0 ? ndots : DEFAULT_NDOTS;\n+        this.ndots = ndots >= 0 ? ndots : DEFAULT_OPTIONS.ndots();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5MTgwOA==", "bodyText": "Doable.\nBut I'd need to keep this ndots >= 0 ? ndots : DEFAULT_NDOTS (with DEFAULT_NDOTS loaded from resolv.conf) just in case some users invoke the deprecated constructors with ndots=-1 and expect the value to be loaded from file automatically.\nLet me know which way you prefer.", "url": "https://github.com/netty/netty/pull/10207#discussion_r414391808", "createdAt": "2020-04-24T08:26:54Z", "author": {"login": "fabienrenaud"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java", "diffHunk": "@@ -401,7 +403,7 @@ public DnsNameResolver(\n                                                                dnsQueryLifecycleObserverFactory) :\n                 checkNotNull(dnsQueryLifecycleObserverFactory, \"dnsQueryLifecycleObserverFactory\");\n         this.searchDomains = searchDomains != null ? searchDomains.clone() : DEFAULT_SEARCH_DOMAINS;\n-        this.ndots = ndots >= 0 ? ndots : DEFAULT_NDOTS;\n+        this.ndots = ndots >= 0 ? ndots : DEFAULT_OPTIONS.ndots();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNTU4NQ=="}, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxMTQ0OQ==", "bodyText": "never mind... lets keep it as you did.", "url": "https://github.com/netty/netty/pull/10207#discussion_r415511449", "createdAt": "2020-04-27T05:01:13Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java", "diffHunk": "@@ -401,7 +403,7 @@ public DnsNameResolver(\n                                                                dnsQueryLifecycleObserverFactory) :\n                 checkNotNull(dnsQueryLifecycleObserverFactory, \"dnsQueryLifecycleObserverFactory\");\n         this.searchDomains = searchDomains != null ? searchDomains.clone() : DEFAULT_SEARCH_DOMAINS;\n-        this.ndots = ndots >= 0 ? ndots : DEFAULT_NDOTS;\n+        this.ndots = ndots >= 0 ? ndots : DEFAULT_OPTIONS.ndots();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNTU4NQ=="}, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njk2NDYyOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDowNFrOGLWJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyMToxOVrOGLaCng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDM2Nw==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550367", "createdAt": "2020-04-24T12:50:04Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYxNDE3NA==", "bodyText": "null values are used for error control when parsing from strings failed for example (and not override defaults).\nBut I see you don't like it (I'm not fond of it either), so I moved catching NumberFormatException from parseResIntOption to parseResOption.", "url": "https://github.com/netty/netty/pull/10207#discussion_r414614174", "createdAt": "2020-04-24T14:21:19Z", "author": {"login": "fabienrenaud"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDM2Nw=="}, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njk2NTAyOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDowOVrOGLWJmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDowOVrOGLWJmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDQyNw==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550427", "createdAt": "2020-04-24T12:50:09Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njk2NTU4OnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDoxNlrOGLWJ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDoxNlrOGLWJ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDUxNQ==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550515", "createdAt": "2020-04-24T12:50:16Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {\n+            if (timeout != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njk2NjA4OnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDoyNVrOGLWKRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDoyNVrOGLWKRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDU5OQ==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550599", "createdAt": "2020-04-24T12:50:25Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {\n+            if (timeout != null) {\n+                this.timeout = timeout;\n+            }\n+        }\n+\n+        public void setAttempts(Integer attempts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjUzMDAzOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzowMzoxNFrOGMiAzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjowMDo1MVrOGMrCPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzM1Nw==", "bodyText": "nit: make all of the methods package-private as the class is package-private as well. This also ensures we no expose these by mistake at some point.", "url": "https://github.com/netty/netty/pull/10207#discussion_r415793357", "createdAt": "2020-04-27T13:03:14Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0MTE4MQ==", "bodyText": "done", "url": "https://github.com/netty/netty/pull/10207#discussion_r415941181", "createdAt": "2020-04-27T16:00:51Z", "author": {"login": "fabienrenaud"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzM1Nw=="}, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjUzMTYzOnYy", "diffSide": "RIGHT", "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzowMzozOFrOGMiBvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjowMDo1NVrOGMrCfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzU5OQ==", "bodyText": "add a comment why its ok to ignore.", "url": "https://github.com/netty/netty/pull/10207#discussion_r415793599", "createdAt": "2020-04-27T13:03:38Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.java", "diffHunk": "@@ -306,7 +312,34 @@ static int parseEtcResolverFirstNdots(File etcResolvConf) throws IOException {\n                 br.close();\n             }\n         }\n-        return DEFAULT_NDOTS;\n+\n+        // amend options\n+        if (RES_OPTIONS != null) {\n+            parseResOptions(RES_OPTIONS, optionsBuilder);\n+        }\n+\n+        return optionsBuilder.build();\n+    }\n+\n+    private static void parseResOptions(String line, UnixResolverOptions.Builder builder) {\n+        String[] opts = WHITESPACE_PATTERN.split(line);\n+        for (String opt : opts) {\n+            try {\n+                if (opt.startsWith(\"ndots:\")) {\n+                    builder.setNdots(parseResIntOption(opt, \"ndots:\"));\n+                } else if (opt.startsWith(\"attempts:\")) {\n+                    builder.setAttempts(parseResIntOption(opt, \"attempts:\"));\n+                } else if (opt.startsWith(\"timeout:\")) {\n+                    builder.setTimeout(parseResIntOption(opt, \"timeout:\"));\n+                }\n+            } catch (NumberFormatException ignore) {\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0MTI0Nw==", "bodyText": "done", "url": "https://github.com/netty/netty/pull/10207#discussion_r415941247", "createdAt": "2020-04-27T16:00:55Z", "author": {"login": "fabienrenaud"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.java", "diffHunk": "@@ -306,7 +312,34 @@ static int parseEtcResolverFirstNdots(File etcResolvConf) throws IOException {\n                 br.close();\n             }\n         }\n-        return DEFAULT_NDOTS;\n+\n+        // amend options\n+        if (RES_OPTIONS != null) {\n+            parseResOptions(RES_OPTIONS, optionsBuilder);\n+        }\n+\n+        return optionsBuilder.build();\n+    }\n+\n+    private static void parseResOptions(String line, UnixResolverOptions.Builder builder) {\n+        String[] opts = WHITESPACE_PATTERN.split(line);\n+        for (String opt : opts) {\n+            try {\n+                if (opt.startsWith(\"ndots:\")) {\n+                    builder.setNdots(parseResIntOption(opt, \"ndots:\"));\n+                } else if (opt.startsWith(\"attempts:\")) {\n+                    builder.setAttempts(parseResIntOption(opt, \"attempts:\"));\n+                } else if (opt.startsWith(\"timeout:\")) {\n+                    builder.setTimeout(parseResIntOption(opt, \"timeout:\"));\n+                }\n+            } catch (NumberFormatException ignore) {\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzU5OQ=="}, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 165}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3409, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}