{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzYyMDcy", "number": 10428, "title": "Do not try to use Unsafe.staticFieldOffset() method under a native im\u2026", "bodyText": "\u2026age.\nMotivation:\nGraalVM's native images built with native-image tool do not support Unsafe.staticFieldOffset() method (at least, currently). If an application using Netty (and causing initialization of io.netty.util.internal.PlatformDependent0 class) is built into a native image and run, this results in the following error thrown during initialization:\nException in thread \"main\" com.oracle.svm.core.jdk.UnsupportedFeatureError: Unsupported method of Unsafe\nat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86)\nat jdk.internal.misc.Unsafe.staticFieldOffset(Unsafe.java:230)\nat sun.misc.Unsafe.staticFieldOffset(Unsafe.java:662)\nat io.netty.util.internal.PlatformDependent0$5.run(PlatformDependent0.java:294)\nat java.security.AccessController.doPrivileged(AccessController.java:83)\nat io.netty.util.internal.PlatformDependent0.(PlatformDependent0.java:279)\nThis seems to be the reason of the behavior described in #10051.\nModification:\nThe idea of this commit is to only invoke Unsafe.staticFieldOffset() is we are not in a native image; if we are, behave like if we could not find the field at all.\nGraalDetector is borrowed from Spring framework.\nResult:\nFixes #10051\nThe resulting code works successfully in a native image (at least, on x86_64).", "createdAt": "2020-07-26T15:04:12Z", "url": "https://github.com/netty/netty/pull/10428", "merged": true, "mergeCommit": {"oid": "0601389766e2feec82c1d6d9e1834a3930c82caa"}, "closed": true, "closedAt": "2020-08-03T17:49:07Z", "author": {"login": "rpuch"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5QL0EgFqTQ1NjMyNzk5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5wC97gH2gAyNDU2NzYyMDcyOmIxODEyMjgzNGUzNjg4Y2RhNmVkYzY0YWY2OTRjZjZiMDZhYzZiMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzI3OTkx", "url": "https://github.com/netty/netty/pull/10428#pullrequestreview-456327991", "createdAt": "2020-07-28T06:10:38Z", "commit": {"oid": "c0014a1804517cb7be85003545b198360699cf58"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoxMDozOFrOG39_rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoxMDo0OVrOG39_9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MDU5MQ==", "bodyText": "@rpuch can we merge this directly to PlatformDependent0 ? Seems overkill to add this class just for exposing one method etc", "url": "https://github.com/netty/netty/pull/10428#discussion_r461340591", "createdAt": "2020-07-28T06:10:38Z", "author": {"login": "normanmaurer"}, "path": "common/src/main/java/io/netty/util/internal/GraalDetector.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.util.internal;\n+\n+abstract class GraalDetector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0014a1804517cb7be85003545b198360699cf58"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MDY2Mg==", "bodyText": "Use SystemPropertyUtils.", "url": "https://github.com/netty/netty/pull/10428#discussion_r461340662", "createdAt": "2020-07-28T06:10:49Z", "author": {"login": "normanmaurer"}, "path": "common/src/main/java/io/netty/util/internal/GraalDetector.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.util.internal;\n+\n+abstract class GraalDetector {\n+\n+    // See https://github.com/oracle/graal/blob/master/sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/ImageInfo.java\n+    private static final boolean imageCode = System.getProperty(\"org.graalvm.nativeimage.imagecode\") != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0014a1804517cb7be85003545b198360699cf58"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b18122834e3688cda6edc64af694cf6b06ac6b0d", "author": {"user": {"login": "rpuch", "name": "Roman Puchkovskiy"}}, "url": "https://github.com/netty/netty/commit/b18122834e3688cda6edc64af694cf6b06ac6b0d", "committedDate": "2020-07-29T19:18:27Z", "message": "Do not try to use Unsafe.staticFieldOffset() method under a native image.\n\nGraalVM's native images built with native-image tool do not support Unsafe.staticFieldOffset() method (at least, currently). If an application using Netty (and causing initialization of io.netty.util.internal.PlatformDependent0 class) is built into a native image and run, this results in the following error thrown during initialization:\n\nException in thread \"main\" com.oracle.svm.core.jdk.UnsupportedFeatureError: Unsupported method of Unsafe\n\tat com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86)\n\tat jdk.internal.misc.Unsafe.staticFieldOffset(Unsafe.java:230)\n\tat sun.misc.Unsafe.staticFieldOffset(Unsafe.java:662)\n\tat io.netty.util.internal.PlatformDependent0$5.run(PlatformDependent0.java:294)\n\tat java.security.AccessController.doPrivileged(AccessController.java:83)\n\tat io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:279)\n\nThis seems to be the reason of the behavior described in #10051.\n\nThe idea of this commit is to only invoke Unsafe.staticFieldOffset() is we are not in a native image; if we are, behave like if we could not find the field at all.\n\n'In native image' detection code is borrowed from Spring framework.\n\nThe resulting code works successfully in a native image (at least, on x86_64)."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 167, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}