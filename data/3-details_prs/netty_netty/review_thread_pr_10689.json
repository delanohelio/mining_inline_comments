{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzOTIzNDM3", "number": 10689, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo0OTozMVrOEt4uQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxNzozN1rOEt90Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTUwNzIxOnYy", "diffSide": "RIGHT", "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo0OTozMVrOHh8wzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDowODowNVrOHiAj1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2MDU5MA==", "bodyText": "why was this changed ?", "url": "https://github.com/netty/netty/pull/10689#discussion_r505360590", "createdAt": "2020-10-15T08:49:31Z", "author": {"login": "normanmaurer"}, "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java", "diffHunk": "@@ -109,7 +109,8 @@ int fd(int index) {\n \n     private int getInt(int index, int offset) {\n         if (PlatformDependent.hasUnsafe()) {\n-            return PlatformDependent.getInt(memoryAddress + index * EPOLL_EVENT_SIZE + offset);\n+            long n = index * EPOLL_EVENT_SIZE;\n+            return PlatformDependent.getInt(memoryAddress + n + offset);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "809427182ac8cefcbb5133e310e453a97850258b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMjgwNA==", "bodyText": "LGTM reports a potential integer overflow for index * EPOL_EVENT_SIZE:\nhttps://lgtm.com/projects/g/netty/netty/snapshot/46cad8a5db67884faf2f41f99ed3a74ffa3735f9/files/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java?sort=name&dir=ASC&mode=heatmap#x3b93cf5f22ba2792:1\nI should have converted index and the constant to long as well. Now it's fixed.", "url": "https://github.com/netty/netty/pull/10689#discussion_r505422804", "createdAt": "2020-10-15T10:08:05Z", "author": {"login": "artem-smotrakov"}, "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java", "diffHunk": "@@ -109,7 +109,8 @@ int fd(int index) {\n \n     private int getInt(int index, int offset) {\n         if (PlatformDependent.hasUnsafe()) {\n-            return PlatformDependent.getInt(memoryAddress + index * EPOLL_EVENT_SIZE + offset);\n+            long n = index * EPOLL_EVENT_SIZE;\n+            return PlatformDependent.getInt(memoryAddress + n + offset);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2MDU5MA=="}, "originalCommit": {"oid": "809427182ac8cefcbb5133e310e453a97850258b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjM0MDIwOnYy", "diffSide": "RIGHT", "path": "buffer/src/main/java/io/netty/buffer/ByteBufOutputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxNzowOFrOHiE3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxNzowOFrOHiE3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MzQyMg==", "bodyText": "I think we should throw if closed is true as otherwise we may create a new instance that is never closed again .", "url": "https://github.com/netty/netty/pull/10689#discussion_r505493422", "createdAt": "2020-10-15T12:17:08Z", "author": {"login": "normanmaurer"}, "path": "buffer/src/main/java/io/netty/buffer/ByteBufOutputStream.java", "diffHunk": "@@ -133,7 +134,8 @@ public void writeShort(int v) throws IOException {\n     public void writeUTF(String s) throws IOException {\n         DataOutputStream out = utf8out;\n         if (out == null) {\n-            utf8out = out = new DataOutputStream(this);\n+            // Suppress a warning since the stream is closed in the close() method\n+            utf8out = out = new DataOutputStream(this); // lgtm[java/output-resource-leak]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018fb936d906997d5323b7171f23ed0f2885c142"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjM0MTk4OnYy", "diffSide": "RIGHT", "path": "buffer/src/main/java/io/netty/buffer/ByteBufOutputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxNzozN1rOHiE4vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxNzozN1rOHiE4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MzY5NQ==", "bodyText": "move this in a finally block ?", "url": "https://github.com/netty/netty/pull/10689#discussion_r505493695", "createdAt": "2020-10-15T12:17:37Z", "author": {"login": "normanmaurer"}, "path": "buffer/src/main/java/io/netty/buffer/ByteBufOutputStream.java", "diffHunk": "@@ -144,4 +146,17 @@ public void writeUTF(String s) throws IOException {\n     public ByteBuf buffer() {\n         return buffer;\n     }\n+\n+    @Override\n+    public void close() throws IOException {\n+        if (closed) {\n+            return;\n+        }\n+        closed = true;\n+\n+        super.close();\n+        if (utf8out != null) {\n+            utf8out.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018fb936d906997d5323b7171f23ed0f2885c142"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3617, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}