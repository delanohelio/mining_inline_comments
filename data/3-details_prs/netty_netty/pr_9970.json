{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjI3NzE1", "number": 9970, "title": "Ensure the DefaultChannelHandlerContext is unlinked once removed", "bodyText": "Motivation:\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\nModifications:\n\nFail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\nFix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\nAdjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\nCleanup behaviour and make it more predictible for pipeline modifications", "createdAt": "2020-01-27T18:03:59Z", "url": "https://github.com/netty/netty/pull/9970", "merged": true, "mergeCommit": {"oid": "ae0fbb45e49063f7be71fe6b1b6c37eb152b1552"}, "closed": true, "closedAt": "2020-03-01T07:13:33Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_aCjsgBqjI5OTMyMDMwMDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHlYwmgFqTM2Mzc1MTgyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e11039ad097ba5d0b71084b1afc201ce5c6ce209", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/e11039ad097ba5d0b71084b1afc201ce5c6ce209", "committedDate": "2020-01-28T03:57:22Z", "message": "cleanup"}, "afterCommit": {"oid": "d60bfe8d8bfd308f3df96b9e460be5c52f473473", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/d60bfe8d8bfd308f3df96b9e460be5c52f473473", "committedDate": "2020-01-30T12:51:52Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "147acc6d965c575f3a69ab6810df7eaac150ac8c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/147acc6d965c575f3a69ab6810df7eaac150ac8c", "committedDate": "2020-01-31T19:59:42Z", "message": "Fix bug"}, "afterCommit": {"oid": "8bd0eb834f2e67a62cec644532755eced290ac05", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/8bd0eb834f2e67a62cec644532755eced290ac05", "committedDate": "2020-02-03T09:27:45Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bd0eb834f2e67a62cec644532755eced290ac05", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/8bd0eb834f2e67a62cec644532755eced290ac05", "committedDate": "2020-02-03T09:27:45Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}, "afterCommit": {"oid": "b0a7b563a82ae7a475dd3e4e941ebb183928b057", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/b0a7b563a82ae7a475dd3e4e941ebb183928b057", "committedDate": "2020-02-03T09:43:24Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0a7b563a82ae7a475dd3e4e941ebb183928b057", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/b0a7b563a82ae7a475dd3e4e941ebb183928b057", "committedDate": "2020-02-03T09:43:24Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}, "afterCommit": {"oid": "58cd7c304a88ee1552e329fcb3b3bbcd71b3065c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/58cd7c304a88ee1552e329fcb3b3bbcd71b3065c", "committedDate": "2020-02-03T11:13:31Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzY0Mzg0", "url": "https://github.com/netty/netty/pull/9970#pullrequestreview-352364384", "createdAt": "2020-02-03T15:59:22Z", "commit": {"oid": "58cd7c304a88ee1552e329fcb3b3bbcd71b3065c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTo1OToyMlrOFk2h2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjoxNDozMFrOFk3EuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4NjQ1OA==", "bodyText": "I presume this is the result of the close call unlinking so throwing the exception doesn't do what you think it would at that point. I'd guess this is a relatively common pattern.", "url": "https://github.com/netty/netty/pull/9970#discussion_r374186458", "createdAt": "2020-02-03T15:59:22Z", "author": {"login": "bryce-anderson"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java", "diffHunk": "@@ -266,13 +266,26 @@ protected void handleOversizedMessage(final ChannelHandlerContext ctx, HttpMessa\n                 });\n             }\n         } else if (oversized instanceof HttpResponse) {\n-            ctx.close();\n-            throw new TooLongFrameException(\"Response entity too large: \" + oversized);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58cd7c304a88ee1552e329fcb3b3bbcd71b3065c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5NTM4NA==", "bodyText": "This might deserve a different name: ChannelHandler has a method handlerRemoved which make it sound like this method fires a handler removed event, not an exception.", "url": "https://github.com/netty/netty/pull/9970#discussion_r374195384", "createdAt": "2020-02-03T16:14:30Z", "author": {"login": "bryce-anderson"}, "path": "transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java", "diffHunk": "@@ -76,6 +81,22 @@\n         this.handler = handler;\n     }\n \n+    private static void failRemoved(DefaultChannelHandlerContext ctx, ChannelPromise promise) {\n+        promise.setFailure(newRemovedException(ctx, null));\n+    }\n+\n+    private void fireHandlerRemoved() {\n+        fireHandlerRemoved(null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58cd7c304a88ee1552e329fcb3b3bbcd71b3065c"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58cd7c304a88ee1552e329fcb3b3bbcd71b3065c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/58cd7c304a88ee1552e329fcb3b3bbcd71b3065c", "committedDate": "2020-02-03T11:13:31Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}, "afterCommit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/211a3be1cfe558a3f0aa1b408cc19d355927c5cb", "committedDate": "2020-02-06T13:29:54Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjQwMjU1", "url": "https://github.com/netty/netty/pull/9970#pullrequestreview-354640255", "createdAt": "2020-02-06T17:34:48Z", "commit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozNDo0OFrOFmj_Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo1MzoyOFrOFmkkzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3OTc3OQ==", "bodyText": "I'd feel better with this if this method was still protected. Why was it made public in Netty 5?", "url": "https://github.com/netty/netty/pull/9970#discussion_r375979779", "createdAt": "2020-02-06T17:34:48Z", "author": {"login": "ejona86"}, "path": "common/src/main/java/io/netty/util/concurrent/DefaultPromise.java", "diffHunk": "@@ -440,7 +440,7 @@ protected StringBuilder toStringBuilder() {\n      * @return The executor used to notify listeners when this promise is complete.\n      */\n     @Override\n-    public final EventExecutor executor() {\n+    public EventExecutor executor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MzQzNQ==", "bodyText": "Ewww... This nastiness was mostly pre-existing, but this does worry me. I'm not fully confident DefaultPromise would safely handle this changing, although it does seem like it is mostly fine. It doesn't look like checkDeadlock() uses this method, so that would be broken at least.\nI don't really have any suggestions how to improve this though.", "url": "https://github.com/netty/netty/pull/9970#discussion_r375983435", "createdAt": "2020-02-06T17:41:49Z", "author": {"login": "ejona86"}, "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java", "diffHunk": "@@ -2207,5 +2221,13 @@ protected void checkDeadLock() {\n             }\n             checkDeadLock(ctx.executor());\n         }\n+\n+        @Override\n+        public EventExecutor executor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NDQ4OQ==", "bodyText": "It seems like replace() has become useless. Maybe it should be removed in Netty 5 as well.", "url": "https://github.com/netty/netty/pull/9970#discussion_r375984489", "createdAt": "2020-02-06T17:43:48Z", "author": {"login": "ejona86"}, "path": "testsuite-http2/src/main/java/io/netty/testsuite/http2/Http2ServerInitializer.java", "diffHunk": "@@ -85,8 +85,9 @@ protected void messageReceived(ChannelHandlerContext ctx, HttpMessage msg) throw\n                 ChannelPipeline pipeline = ctx.pipeline();\n                 ChannelHandlerContext thisCtx = pipeline.context(this);\n                 pipeline.addAfter(thisCtx.name(), null, new HelloWorldHttp1Handler(\"Direct. No Upgrade Attempted.\"));\n-                pipeline.replace(this, null, new HttpObjectAggregator(maxHttpContentLength));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4OTQ1Mw==", "bodyText": "This doesn't seem right. Shouldn't the channel+pipeline remain in-place? I thought we were still going to allow deregistering and re-registering on the same event loop.", "url": "https://github.com/netty/netty/pull/9970#discussion_r375989453", "createdAt": "2020-02-06T17:53:28Z", "author": {"login": "ejona86"}, "path": "transport/src/main/java/io/netty/channel/AbstractChannel.java", "diffHunk": "@@ -775,12 +776,25 @@ private void deregister(final ChannelPromise promise, final boolean fireChannelI\n                         pipeline.fireChannelInactive();\n                     }\n                     // Some transports like local and AIO does not allow the deregistration of\n-                    // an open channel.  Their doDeregister() calls close(). Consequently,\n+                    // an open channel. Their doDeregister() calls close(). Consequently,\n                     // close() calls deregister() again - no need to fire channelUnregistered, so check\n                     // if it was registered.\n                     if (registered) {\n                         registered = false;\n                         pipeline.fireChannelUnregistered();\n+\n+                        if (!isOpen()) {\n+                            // Remove all handlers from the ChannelPipeline. This is needed to ensure", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211a3be1cfe558a3f0aa1b408cc19d355927c5cb"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e878db24e964e85de3172be0c6b60544eadc458", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/3e878db24e964e85de3172be0c6b60544eadc458", "committedDate": "2020-02-11T15:34:17Z", "message": "Ensure the DefaultChannelHandlerContext is unlinked once removed\n\nMotivation:\n\nAt the moment the next / prev references are not set to \"null\" in the DefaultChannelHandlerContext once the ChannelHandler is removed. This is bad as it basically let users still use the ChannelHandlerContext of a ChannelHandler after it is removed and may produce very suprising behaviour.\n\nModifications:\n\n- Fail if someone tries to use the ChannelHandlerContext once the ChannelHandler was removed (for outbound operations fail the promise, for inbound fire the error through the ChannelPipeline)\n- Fix some handlers to ensure we not use the ChannelHandlerContext after the handler was removed\n- Adjust DefaultChannelPipeline / DefaultChannelHandlerContext to fixes races with removal / replacement of handlers\n\nResult:\n\nCleanup behaviour and make it more predictible for pipeline modifications"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cb65dcf0c9baa52d52c907cdd61a5432a6ce241", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/1cb65dcf0c9baa52d52c907cdd61a5432a6ce241", "committedDate": "2020-02-11T15:34:18Z", "message": "rename method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2bb04fd83c8eb04a20e1888735752557f49626e2", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/2bb04fd83c8eb04a20e1888735752557f49626e2", "committedDate": "2020-02-07T08:59:36Z", "message": "rename method"}, "afterCommit": {"oid": "1cb65dcf0c9baa52d52c907cdd61a5432a6ce241", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/1cb65dcf0c9baa52d52c907cdd61a5432a6ce241", "committedDate": "2020-02-11T15:34:18Z", "message": "rename method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bbb2e1e2e6141da08dda9bd654e60e64c58fa78", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/2bbb2e1e2e6141da08dda9bd654e60e64c58fa78", "committedDate": "2020-02-13T08:48:24Z", "message": "Address erics comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTMwOTcx", "url": "https://github.com/netty/netty/pull/9970#pullrequestreview-362130971", "createdAt": "2020-02-20T18:25:38Z", "commit": {"oid": "2bbb2e1e2e6141da08dda9bd654e60e64c58fa78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyNTozOVrOFseRYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyNTozOVrOFseRYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3NzYzMg==", "bodyText": "How does this compile?", "url": "https://github.com/netty/netty/pull/9970#discussion_r382177632", "createdAt": "2020-02-20T18:25:39Z", "author": {"login": "carl-mastrangelo"}, "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java", "diffHunk": "@@ -777,19 +720,24 @@ public ChannelHandler removeLast() {\n             assert ctx != null;\n \n             if (!inEventLoop) {\n-                try {\n-                    executor.execute(() -> remove0(ctx));\n-                    return ctx.handler();\n-                } catch (Throwable cause) {\n-                    handlers.add(idx, ctx);\n-                    throw cause;\n-                }\n+                return scheduleRemove(idx, ctx);\n             }\n         }\n         remove0(ctx);\n         return ctx.handler();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends ChannelHandler> T scheduleRemove(int idx, DefaultChannelHandlerContext ctx) {\n+        try {\n+            ctx.executor().execute(() -> remove0(ctx));\n+            return (T) ctx.handler();\n+        } catch (Throwable cause) {\n+            handlers.add(idx, ctx);\n+            throw cause;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bbb2e1e2e6141da08dda9bd654e60e64c58fa78"}, "originalPosition": 358}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTMxNDYy", "url": "https://github.com/netty/netty/pull/9970#pullrequestreview-362131462", "createdAt": "2020-02-20T18:26:27Z", "commit": {"oid": "2bbb2e1e2e6141da08dda9bd654e60e64c58fa78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzUxODI3", "url": "https://github.com/netty/netty/pull/9970#pullrequestreview-363751827", "createdAt": "2020-02-24T22:37:05Z", "commit": {"oid": "2bbb2e1e2e6141da08dda9bd654e60e64c58fa78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 330, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}