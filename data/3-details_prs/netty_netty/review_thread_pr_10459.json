{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NjA4OTQ3", "number": 10459, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDo1NlrOEWPPPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDo1NlrOEWPPPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzUzNzg4OnYy", "diffSide": "RIGHT", "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDo1NlrOG9cK4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMzo0NFrOG9cRbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3Nzg1Ng==", "bodyText": "This check should be applied to the method testTrustManagerVerifyTLSv13 not this one", "url": "https://github.com/netty/netty/pull/10459#discussion_r467077856", "createdAt": "2020-08-07T14:30:56Z", "author": {"login": "violetagg"}, "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "diffHunk": "@@ -130,40 +130,84 @@ private static void testEventExecutorTakeTask(EventExecutor eventExecutor) throw\n     // Tests copied from io.netty.handler.ssl.SslHandlerTest\n     @Test\n     public void testHandshakeWithExecutorThatExecuteDirectory() throws Exception {\n-        testHandshakeWithExecutor(Runnable::run);\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorThatExecuteDirectoryTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateEventExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateEventExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithExecutor() throws Exception {\n         ExecutorService executorService = Executors.newCachedThreadPool();\n         try {\n-            testHandshakeWithExecutor(executorService);\n+            testHandshakeWithExecutor(executorService, \"TLSv1.2\");\n+        } finally {\n+            executorService.shutdown();\n+        }\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        ExecutorService executorService = Executors.newCachedThreadPool();\n+        try {\n+            testHandshakeWithExecutor(executorService, \"TLSv1.3\");\n         } finally {\n             executorService.shutdown();\n         }\n     }\n \n     @Test\n     public void testTrustManagerVerify() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c2c912227c8ccca9f99045986e6bf434abd6b0"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3OTUzNQ==", "bodyText": "doh... good catch", "url": "https://github.com/netty/netty/pull/10459#discussion_r467079535", "createdAt": "2020-08-07T14:33:44Z", "author": {"login": "normanmaurer"}, "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "diffHunk": "@@ -130,40 +130,84 @@ private static void testEventExecutorTakeTask(EventExecutor eventExecutor) throw\n     // Tests copied from io.netty.handler.ssl.SslHandlerTest\n     @Test\n     public void testHandshakeWithExecutorThatExecuteDirectory() throws Exception {\n-        testHandshakeWithExecutor(Runnable::run);\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorThatExecuteDirectoryTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateEventExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateEventExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithExecutor() throws Exception {\n         ExecutorService executorService = Executors.newCachedThreadPool();\n         try {\n-            testHandshakeWithExecutor(executorService);\n+            testHandshakeWithExecutor(executorService, \"TLSv1.2\");\n+        } finally {\n+            executorService.shutdown();\n+        }\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        ExecutorService executorService = Executors.newCachedThreadPool();\n+        try {\n+            testHandshakeWithExecutor(executorService, \"TLSv1.3\");\n         } finally {\n             executorService.shutdown();\n         }\n     }\n \n     @Test\n     public void testTrustManagerVerify() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3Nzg1Ng=="}, "originalCommit": {"oid": "b1c2c912227c8ccca9f99045986e6bf434abd6b0"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3865, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}