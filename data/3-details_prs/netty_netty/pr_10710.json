{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MzczNzAx", "number": 10710, "title": "Minor performance improvement in websocket upgrade", "bodyText": "Motivation:\nI noticed this method taking up ~5% of CPU time in a pipelining based test (similar to techempower plaintext).\nModification:\nI added a check for a 101 response code to check if the response is an upgrade response, as this is faster than reading from a header map. I also moved the actual upgrade code into its own method to increase the chances that the hot path can be inlined.\nResult:\nI noticed around a 5% speedup in my local testing (this will be nowhere near this big without pipelining, but it still helps).", "createdAt": "2020-10-20T00:44:50Z", "url": "https://github.com/netty/netty/pull/10710", "merged": true, "mergeCommit": {"oid": "303baf5c0bea7f5c330290847a8d9eee614f02e1"}, "closed": true, "closedAt": "2020-10-21T10:09:33Z", "author": {"login": "stuartwdouglas"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUQVvggBqjM4OTY0MzU4ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUg2OvgBqjM5MDExMTY3ODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b882c14d95db921daef55d74326ad291c7d4a5b", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/7b882c14d95db921daef55d74326ad291c7d4a5b", "committedDate": "2020-10-20T00:41:07Z", "message": "Minor performance improvement in websocket upgrade\n\n- It is faster to check for a 101 response than to look at headers\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined"}, "afterCommit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8", "committedDate": "2020-10-20T03:34:40Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzEzOTM5", "url": "https://github.com/netty/netty/pull/10710#pullrequestreview-512313939", "createdAt": "2020-10-20T03:58:50Z", "commit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzgyNDAx", "url": "https://github.com/netty/netty/pull/10710#pullrequestreview-512382401", "createdAt": "2020-10-20T06:55:22Z", "commit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo1NToyMlrOHktN9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo1NToyMlrOHktN9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1MTYzOQ==", "bodyText": "nit: please use:\nHttpResponseStatus.SWITCHING_PROTOCOLS.equals(httpResponse.status())", "url": "https://github.com/netty/netty/pull/10710#discussion_r508251639", "createdAt": "2020-10-20T06:55:22Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandler.java", "diffHunk": "@@ -104,50 +105,60 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n     @Override\n     public void write(final ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n         if (msg instanceof HttpResponse) {\n-            HttpHeaders headers = ((HttpResponse) msg).headers();\n+            HttpResponse httpResponse = (HttpResponse) msg;\n+            //checking the status is faster than looking at headers\n+            //so we do this first\n+            if (httpResponse.status().code() == HttpResponseStatus.SWITCHING_PROTOCOLS.code()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDAwMDc2", "url": "https://github.com/netty/netty/pull/10710#pullrequestreview-512400076", "createdAt": "2020-10-20T07:21:32Z", "commit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMTozMlrOHkuDtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMTozMlrOHkuDtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTM5OQ==", "bodyText": "As we're already here, we can move ctx.name() to own local variable out of the loop. That will help the compiler a bit.", "url": "https://github.com/netty/netty/pull/10710#discussion_r508265399", "createdAt": "2020-10-20T07:21:32Z", "author": {"login": "doom369"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandler.java", "diffHunk": "@@ -104,50 +105,60 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n     @Override\n     public void write(final ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n         if (msg instanceof HttpResponse) {\n-            HttpHeaders headers = ((HttpResponse) msg).headers();\n+            HttpResponse httpResponse = (HttpResponse) msg;\n+            //checking the status is faster than looking at headers\n+            //so we do this first\n+            if (httpResponse.status().code() == HttpResponseStatus.SWITCHING_PROTOCOLS.code()) {\n+                handlePotentialUpgrade(ctx, promise, httpResponse);\n+            }\n+        }\n \n-            if (WebSocketExtensionUtil.isWebsocketUpgrade(headers)) {\n+        super.write(ctx, msg, promise);\n+    }\n \n-                if (validExtensions != null) {\n-                    String headerValue = headers.getAsString(HttpHeaderNames.SEC_WEBSOCKET_EXTENSIONS);\n+    private void handlePotentialUpgrade(final ChannelHandlerContext ctx,\n+                                        ChannelPromise promise, HttpResponse httpResponse) {\n+        HttpHeaders headers = httpResponse.headers();\n \n-                    for (WebSocketServerExtension extension : validExtensions) {\n-                        WebSocketExtensionData extensionData = extension.newReponseData();\n-                        headerValue = WebSocketExtensionUtil.appendExtension(headerValue,\n-                                                                             extensionData.name(),\n-                                                                             extensionData.parameters());\n-                    }\n-                    promise.addListener(new ChannelFutureListener() {\n-                        @Override\n-                        public void operationComplete(ChannelFuture future) {\n-                            if (future.isSuccess()) {\n-                                for (WebSocketServerExtension extension : validExtensions) {\n-                                    WebSocketExtensionDecoder decoder = extension.newExtensionDecoder();\n-                                    WebSocketExtensionEncoder encoder = extension.newExtensionEncoder();\n-                                    ctx.pipeline()\n-                                       .addAfter(ctx.name(), decoder.getClass().getName(), decoder)\n-                                       .addAfter(ctx.name(), encoder.getClass().getName(), encoder);\n-                                }\n-                            }\n-                        }\n-                    });\n+        if (WebSocketExtensionUtil.isWebsocketUpgrade(headers)) {\n \n-                    if (headerValue != null) {\n-                        headers.set(HttpHeaderNames.SEC_WEBSOCKET_EXTENSIONS, headerValue);\n-                    }\n-                }\n+            if (validExtensions != null) {\n+                String headerValue = headers.getAsString(HttpHeaderNames.SEC_WEBSOCKET_EXTENSIONS);\n \n+                for (WebSocketServerExtension extension : validExtensions) {\n+                    WebSocketExtensionData extensionData = extension.newReponseData();\n+                    headerValue = WebSocketExtensionUtil.appendExtension(headerValue,\n+                        extensionData.name(),\n+                        extensionData.parameters());\n+                }\n                 promise.addListener(new ChannelFutureListener() {\n                     @Override\n                     public void operationComplete(ChannelFuture future) {\n                         if (future.isSuccess()) {\n-                            ctx.pipeline().remove(WebSocketServerExtensionHandler.this);\n+                            for (WebSocketServerExtension extension : validExtensions) {\n+                                WebSocketExtensionDecoder decoder = extension.newExtensionDecoder();\n+                                WebSocketExtensionEncoder encoder = extension.newExtensionEncoder();\n+                                ctx.pipeline()\n+                                    .addAfter(ctx.name(), decoder.getClass().getName(), decoder)\n+                                    .addAfter(ctx.name(), encoder.getClass().getName(), encoder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8"}, "originalPosition": 76}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/1f2a3c3bd600cc17d8ba001c86093c4fc6158cd8", "committedDate": "2020-10-20T03:34:40Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}, "afterCommit": {"oid": "c9856446d76ef546aebac189e6bf2a635ba3f2e9", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/c9856446d76ef546aebac189e6bf2a635ba3f2e9", "committedDate": "2020-10-20T22:42:24Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n- Add an extra contains() check for the upgrade header, to avoid\nallocating an iterator if there is no upgrade header\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27da2cd734ecd58ffaa657ecb304cbae5aa84897", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/27da2cd734ecd58ffaa657ecb304cbae5aa84897", "committedDate": "2020-10-20T22:51:41Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n- Add an extra contains() check for the upgrade header, to avoid\nallocating an iterator if there is no upgrade header\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9856446d76ef546aebac189e6bf2a635ba3f2e9", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/c9856446d76ef546aebac189e6bf2a635ba3f2e9", "committedDate": "2020-10-20T22:42:24Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n- Add an extra contains() check for the upgrade header, to avoid\nallocating an iterator if there is no upgrade header\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}, "afterCommit": {"oid": "27da2cd734ecd58ffaa657ecb304cbae5aa84897", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/netty/netty/commit/27da2cd734ecd58ffaa657ecb304cbae5aa84897", "committedDate": "2020-10-20T22:51:41Z", "message": "Minor performance improvement in websocket upgrade\n\nMotivation:\n\nI noticed WebSocketServerExtensionHandler taking up a non-trivial\namount of CPU time for a non-websocket based menchmark. This attempts\nto speed it up.\n\nModifications:\n\n- It is faster to check for a 101 response than to look at headers,\nso an initial response code check is done\n- Move all the actual upgrade code into its own method to increase\nchance of this method being inlined\n- Add an extra contains() check for the upgrade header, to avoid\nallocating an iterator if there is no upgrade header\n\nResult:\n\nA small but noticable performance increase.\n\nSigned-off-by: Stuart Douglas <stuart.w.douglas@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4936, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}