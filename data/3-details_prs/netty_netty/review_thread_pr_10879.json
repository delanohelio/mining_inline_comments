{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDEwNTky", "number": 10879, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToxMFrOFIKgyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToyMlrOFIKhCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTA1MTYxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToxMFrOIJ7x7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToxMFrOIJ7x7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzUzMw==", "bodyText": "Break line", "url": "https://github.com/netty/netty/pull/10879#discussion_r547287533", "createdAt": "2020-12-22T13:49:10Z", "author": {"login": "hyperxpro"}, "path": ".github/workflows/ci-build.yml", "diffHunk": "@@ -0,0 +1,180 @@\n+name: Build project\n+\n+on:\n+  push:\n+    branches: [ \"4.1\", master ]\n+  pull_request:\n+    branches: [ \"4.1\", master ]\n+\n+  schedule:\n+    - cron: '30 1 * * 1'  # At 01:30 on Monday, every Monday.\n+\n+  # Allows you to run this workflow manually from the Actions tab\n+  workflow_dispatch:\n+\n+jobs:\n+  verify:\n+    runs-on: ubuntu-18.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: Set up JDK 8\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: verify-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            verify-${{ runner.os }}-maven-\n+\n+      - name: Verify with Maven\n+        run: mvn verify -B --file pom.xml -DskipTests=true\n+\n+  build-linux-x86_64-java8:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java8-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java8-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java8-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java8-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"\n+\n+  build-linux-x86_64-java11:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java11-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java11-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java11-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java11-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"\n+\n+  build-linux-x86_64-java15:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java15-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java15-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java15-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java15-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTA1MjI2OnYy", "diffSide": "RIGHT", "path": "docker/docker-compose.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToyMlrOIJ7ySw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToyMlrOIJ7ySw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzYyNw==", "bodyText": "break line", "url": "https://github.com/netty/netty/pull/10879#discussion_r547287627", "createdAt": "2020-12-22T13:49:22Z", "author": {"login": "hyperxpro"}, "path": "docker/docker-compose.yaml", "diffHunk": "@@ -39,35 +47,4 @@ services:\n       - ~/.gnupg:/root/.gnupg:delegated\n       - ..:/code:delegated\n       - ~/.m2:/root/.m2:delegated\n-    entrypoint: /bin/bash\n-\n-  cross-compile-aarch64-runtime-setup:\n-    image: netty:cross_compile_aarch64\n-    build:\n-      context: .\n-      dockerfile: Dockerfile.cross_compile_aarch64\n-      args:\n-        gcc_version : \"4.9-2016.02\"\n-\n-  cross-compile-aarch64-shell:\n-    image: netty:cross_compile_aarch64\n-    depends_on: [cross-compile-aarch64-runtime-setup]\n-    volumes:\n-      - ~/.ssh:/root/.ssh:delegated\n-      - ~/.gnupg:/root/.gnupg:delegated\n-      - ..:/code:delegated\n-      - ~/.m2:/root/.m2:delegated\n-    entrypoint: /bin/bash\n-    working_dir: /code\n-\n-  cross-compile-aarch64-build:\n-    image: netty:cross_compile_aarch64\n-    depends_on: [cross-compile-aarch64-runtime-setup]\n-    volumes:\n-      - ~/.ssh:/root/.ssh:delegated\n-      - ~/.gnupg:/root/.gnupg:delegated\n-      - ..:/code:delegated\n-      - ~/.m2:/root/.m2:delegated\n-    # Since we are cross compiling netty-transport-native-epoll as aarch64 which cannot be loaded on x86_64, we add `skipTests` here to skip the test.\n-    command: /bin/bash -cl \"pushd ./transport-native-unix-common && ../mvnw clean install -Plinux-aarch64 && popd && pushd ./transport-native-epoll && ../mvnw clean install -Plinux-aarch64 -DskipTests && popd\"\n-    working_dir: /code\n+    entrypoint: /bin/bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3572, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}