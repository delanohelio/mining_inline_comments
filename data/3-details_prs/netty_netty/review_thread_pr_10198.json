{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTIwMDkz", "number": 10198, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo1NTo0OVrODzzKsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo1NTo0OVrODzzKsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjQyMjkxOnYy", "diffSide": "RIGHT", "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/DiskFileUploadTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo1NTo0OVrOGIblaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMzozNlrOGIelag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5MzczNg==", "bodyText": "nit: static", "url": "https://github.com/netty/netty/pull/10198#discussion_r411493736", "createdAt": "2020-04-20T15:55:49Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/DiskFileUploadTest.java", "diffHunk": "@@ -130,4 +133,65 @@ public void testAddContents() throws Exception {\n             f1.delete();\n         }\n     }\n+\n+    @Test\n+    public void testSetContentFromByteBuf() throws Exception {\n+        DiskFileUpload f1 = new DiskFileUpload(\"file2\", \"file2\", \"application/json\", null, null, 0);\n+        try {\n+            String json = \"{\\\"hello\\\":\\\"world\\\"}\";\n+            byte[] bytes = json.getBytes(CharsetUtil.UTF_8);\n+            f1.setContent(Unpooled.wrappedBuffer(bytes));\n+            assertEquals(json, f1.getString());\n+            assertArrayEquals(bytes, f1.get());\n+            File file = f1.getFile();\n+            assertEquals((long) bytes.length, file.length());\n+            assertArrayEquals(bytes, doReadFile(file, bytes.length));\n+        } finally {\n+            f1.delete();\n+        }\n+    }\n+\n+    @Test\n+    public void testSetContentFromInputStream() throws Exception {\n+        String json = \"{\\\"hello\\\":\\\"world\\\",\\\"foo\\\":\\\"bar\\\"}\";\n+        DiskFileUpload f1 = new DiskFileUpload(\"file3\", \"file3\", \"application/json\", null, null, 0);\n+        try {\n+            byte[] bytes = json.getBytes(CharsetUtil.UTF_8);\n+            ByteBuf buf = Unpooled.wrappedBuffer(bytes);\n+            InputStream is = new ByteBufInputStream(buf);\n+            try {\n+                f1.setContent(is);\n+                assertEquals(json, f1.getString());\n+                assertArrayEquals(bytes, f1.get());\n+                File file = f1.getFile();\n+                assertEquals((long) bytes.length, file.length());\n+                assertArrayEquals(bytes, doReadFile(file, bytes.length));\n+            } finally {\n+                buf.release();\n+                is.close();\n+            }\n+        } finally {\n+            f1.delete();\n+        }\n+    }\n+\n+    private byte[] doReadFile(File file, int maxRead) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43a40c2f32f893dd50b16cf175d2def1bd0ce70a"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0Mjg5MA==", "bodyText": "done", "url": "https://github.com/netty/netty/pull/10198#discussion_r411542890", "createdAt": "2020-04-20T17:03:36Z", "author": {"login": "seedeed"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/DiskFileUploadTest.java", "diffHunk": "@@ -130,4 +133,65 @@ public void testAddContents() throws Exception {\n             f1.delete();\n         }\n     }\n+\n+    @Test\n+    public void testSetContentFromByteBuf() throws Exception {\n+        DiskFileUpload f1 = new DiskFileUpload(\"file2\", \"file2\", \"application/json\", null, null, 0);\n+        try {\n+            String json = \"{\\\"hello\\\":\\\"world\\\"}\";\n+            byte[] bytes = json.getBytes(CharsetUtil.UTF_8);\n+            f1.setContent(Unpooled.wrappedBuffer(bytes));\n+            assertEquals(json, f1.getString());\n+            assertArrayEquals(bytes, f1.get());\n+            File file = f1.getFile();\n+            assertEquals((long) bytes.length, file.length());\n+            assertArrayEquals(bytes, doReadFile(file, bytes.length));\n+        } finally {\n+            f1.delete();\n+        }\n+    }\n+\n+    @Test\n+    public void testSetContentFromInputStream() throws Exception {\n+        String json = \"{\\\"hello\\\":\\\"world\\\",\\\"foo\\\":\\\"bar\\\"}\";\n+        DiskFileUpload f1 = new DiskFileUpload(\"file3\", \"file3\", \"application/json\", null, null, 0);\n+        try {\n+            byte[] bytes = json.getBytes(CharsetUtil.UTF_8);\n+            ByteBuf buf = Unpooled.wrappedBuffer(bytes);\n+            InputStream is = new ByteBufInputStream(buf);\n+            try {\n+                f1.setContent(is);\n+                assertEquals(json, f1.getString());\n+                assertArrayEquals(bytes, f1.get());\n+                File file = f1.getFile();\n+                assertEquals((long) bytes.length, file.length());\n+                assertArrayEquals(bytes, doReadFile(file, bytes.length));\n+            } finally {\n+                buf.release();\n+                is.close();\n+            }\n+        } finally {\n+            f1.delete();\n+        }\n+    }\n+\n+    private byte[] doReadFile(File file, int maxRead) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5MzczNg=="}, "originalCommit": {"oid": "43a40c2f32f893dd50b16cf175d2def1bd0ce70a"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3406, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}