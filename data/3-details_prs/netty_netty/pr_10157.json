{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDk4MTA4", "number": 10157, "title": "Close the file when IOException occurs in AbstractMemoryHttpData.", "bodyText": "Motivation:\nAn IOException may be thrown from FileChannel.read, and cause the fd leak.\nModification:\nClose the file when IOException occurs.\nResult:\nAvoid fd leak.", "createdAt": "2020-04-01T16:20:45Z", "url": "https://github.com/netty/netty/pull/10157", "merged": true, "mergeCommit": {"oid": "d4c268ae3e218b15dfd235684640b5d3da8b6242"}, "closed": true, "closedAt": "2020-04-02T12:16:01Z", "author": {"login": "seedeed"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTZ25fAH2gAyMzk3MDk4MTA4OmY5MWI0ZjM2OTdhMTg4MDQ2YzlhMGU5OTNiMTU4ZmMxZmViNGQ2OGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTpHJ9AFqTM4NjI2NjM2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b", "author": {"user": {"login": "seedeed", "name": "feijermu"}}, "url": "https://github.com/netty/netty/commit/f91b4f3697a188046c9a0e993b158fc1feb4d68b", "committedDate": "2020-04-01T15:58:14Z", "message": "Close the file when IOException occurs in AbstractMemoryHttpData."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzQ3Mjk0", "url": "https://github.com/netty/netty/pull/10157#pullrequestreview-385747294", "createdAt": "2020-04-01T16:22:37Z", "commit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjAxMzM2", "url": "https://github.com/netty/netty/pull/10157#pullrequestreview-386201336", "createdAt": "2020-04-02T08:18:02Z", "commit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODoxODowM1rOF_gNpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODoxODowM1rOF_gNpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMjM5MA==", "bodyText": "@seedeed do we need to release this buf ?", "url": "https://github.com/netty/netty/pull/10157#discussion_r402132390", "createdAt": "2020-04-02T08:18:03Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpDataTest.java", "diffHunk": "@@ -19,22 +19,46 @@\n import io.netty.buffer.ByteBufInputStream;\n import io.netty.buffer.ByteBufUtil;\n import io.netty.buffer.Unpooled;\n-import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.util.internal.ThreadLocalRandom;\n \n import org.junit.Test;\n \n import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n+import java.io.File;\n+import java.io.FileOutputStream;\n import java.nio.charset.Charset;\n import java.security.SecureRandom;\n import java.util.Arrays;\n import java.util.Random;\n+import java.util.UUID;\n \n import static io.netty.util.CharsetUtil.*;\n import static org.junit.Assert.*;\n \n /** {@link AbstractMemoryHttpData} test cases. */\n public class AbstractMemoryHttpDataTest {\n+\n+    @Test\n+    public void testSetContentFromFile() throws Exception {\n+        TestHttpData test = new TestHttpData(\"test\", UTF_8, 0);\n+        File tmpFile = File.createTempFile(UUID.randomUUID().toString(), \".tmp\");\n+        tmpFile.deleteOnExit();\n+        FileOutputStream fos = new FileOutputStream(tmpFile);\n+        byte[] bytes = new byte[4096];\n+        ThreadLocalRandom.current().nextBytes(bytes);\n+        try {\n+            fos.write(bytes);\n+            fos.flush();\n+        } finally {\n+            fos.close();\n+        }\n+        test.setContent(tmpFile);\n+        ByteBuf buf = test.getByteBuf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjAxODgx", "url": "https://github.com/netty/netty/pull/10157#pullrequestreview-386201881", "createdAt": "2020-04-02T08:18:49Z", "commit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODoxODo0OVrOF_gPSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODoxODo0OVrOF_gPSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMjgwOQ==", "bodyText": "you should use PlatformDependent.threadLocalRandom()", "url": "https://github.com/netty/netty/pull/10157#discussion_r402132809", "createdAt": "2020-04-02T08:18:49Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpDataTest.java", "diffHunk": "@@ -19,22 +19,46 @@\n import io.netty.buffer.ByteBufInputStream;\n import io.netty.buffer.ByteBufUtil;\n import io.netty.buffer.Unpooled;\n-import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.util.internal.ThreadLocalRandom;\n \n import org.junit.Test;\n \n import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n+import java.io.File;\n+import java.io.FileOutputStream;\n import java.nio.charset.Charset;\n import java.security.SecureRandom;\n import java.util.Arrays;\n import java.util.Random;\n+import java.util.UUID;\n \n import static io.netty.util.CharsetUtil.*;\n import static org.junit.Assert.*;\n \n /** {@link AbstractMemoryHttpData} test cases. */\n public class AbstractMemoryHttpDataTest {\n+\n+    @Test\n+    public void testSetContentFromFile() throws Exception {\n+        TestHttpData test = new TestHttpData(\"test\", UTF_8, 0);\n+        File tmpFile = File.createTempFile(UUID.randomUUID().toString(), \".tmp\");\n+        tmpFile.deleteOnExit();\n+        FileOutputStream fos = new FileOutputStream(tmpFile);\n+        byte[] bytes = new byte[4096];\n+        ThreadLocalRandom.current().nextBytes(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91b4f3697a188046c9a0e993b158fc1feb4d68b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ae637f895d86c0e2784f9fd540a4ec423a36372", "author": {"user": {"login": "seedeed", "name": "feijermu"}}, "url": "https://github.com/netty/netty/commit/4ae637f895d86c0e2784f9fd540a4ec423a36372", "committedDate": "2020-04-02T08:47:35Z", "message": "fix several test case problems."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjY2MzY4", "url": "https://github.com/netty/netty/pull/10157#pullrequestreview-386266368", "createdAt": "2020-04-02T09:44:34Z", "commit": {"oid": "4ae637f895d86c0e2784f9fd540a4ec423a36372"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 227, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}