{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTc2NzAz", "number": 10453, "title": "Fix #10449, buffer.getBytes(...) not change a file channel position", "bodyText": "Motivation:\nRegression appeared after making changes in fix #10360 .\nThe main problem here that buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize)\ndoesn't change channel position after writes.\nModification:\nManually set position according to the written bytes.\nResult:\nFixes #10449 .", "createdAt": "2020-08-04T19:57:01Z", "url": "https://github.com/netty/netty/pull/10453", "merged": true, "mergeCommit": {"oid": "686df17b1a1bca9ca2d26fe53e5e4eb3404a6b3f"}, "closed": true, "closedAt": "2020-08-07T11:53:17Z", "author": {"login": "amizurov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7sDTtgH2gAyNDYyOTc2NzAzOmYxNGQ0MWYxMzE2NWNhNTAyNmE0M2NiMjdiZjM4Y2ZlNDM3MzI1YjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8WuHMgFqTQ2Mjg4OTkwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3", "author": {"user": {"login": "amizurov", "name": "Andrey Mizurov"}}, "url": "https://github.com/netty/netty/commit/f14d41f13165ca5026a43cb27bf38cfe437325b3", "committedDate": "2020-08-04T19:47:03Z", "message": "Fix #10449, buffer.getBytes(...) not change a file channel position"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTU1MDI0", "url": "https://github.com/netty/netty/pull/10453#pullrequestreview-461155024", "createdAt": "2020-08-04T20:37:26Z", "commit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDozNzoyNlrOG7wnWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDozNzoyNlrOG7wnWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw==", "bodyText": "I think this may actually need to be a loop since it's not guaranteed to write all of the bytes in a single invocation", "url": "https://github.com/netty/netty/pull/10453#discussion_r465315673", "createdAt": "2020-08-04T20:37:26Z", "author": {"login": "njhill"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,20 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                long currentPosition = fileChannel.position();\n+                int written = buffer.getBytes(buffer.readerIndex(), fileChannel, currentPosition, localsize);\n+                if (written > 0) {\n+                    fileChannel.position(currentPosition + written);\n+                    buffer.readerIndex(buffer.readerIndex() + written);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzc0NjAy", "url": "https://github.com/netty/netty/pull/10453#pullrequestreview-461374602", "createdAt": "2020-08-05T06:30:28Z", "commit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozMDoyOFrOG78AAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozMDoyOFrOG78AAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMjIwOA==", "bodyText": "@amizurov I think @njhill is right here... can you adjust this please ?", "url": "https://github.com/netty/netty/pull/10453#discussion_r465502208", "createdAt": "2020-08-05T06:30:28Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,20 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                long currentPosition = fileChannel.position();\n+                int written = buffer.getBytes(buffer.readerIndex(), fileChannel, currentPosition, localsize);\n+                if (written > 0) {\n+                    fileChannel.position(currentPosition + written);\n+                    buffer.readerIndex(buffer.readerIndex() + written);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, "originalCommit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331f0c31cbd6d42fc09a456dfa0bf630e7bb3ccd", "author": {"user": {"login": "amizurov", "name": "Andrey Mizurov"}}, "url": "https://github.com/netty/netty/commit/331f0c31cbd6d42fc09a456dfa0bf630e7bb3ccd", "committedDate": "2020-08-05T07:02:08Z", "message": "Add loop to sure that all bytes written"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b399e36edb56cc6fe09400186639f174243f1988", "author": {"user": {"login": "amizurov", "name": "Andrey Mizurov"}}, "url": "https://github.com/netty/netty/commit/b399e36edb56cc6fe09400186639f174243f1988", "committedDate": "2020-08-05T20:31:17Z", "message": "Add break if written bytes are less than or equal to zero"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjIyMTkx", "url": "https://github.com/netty/netty/pull/10453#pullrequestreview-462222191", "createdAt": "2020-08-06T06:33:03Z", "commit": {"oid": "b399e36edb56cc6fe09400186639f174243f1988"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNjozMzowM1rOG8lFGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNjozMzowM1rOG8lFGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NTI1Ng==", "bodyText": "@amizurov I think we should only break on < 0 as 0 is valid.", "url": "https://github.com/netty/netty/pull/10453#discussion_r466175256", "createdAt": "2020-08-06T06:33:03Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,20 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                long currentPosition = fileChannel.position();\n+                int written = buffer.getBytes(buffer.readerIndex(), fileChannel, currentPosition, localsize);\n+                if (written > 0) {\n+                    fileChannel.position(currentPosition + written);\n+                    buffer.readerIndex(buffer.readerIndex() + written);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, "originalCommit": {"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dca3becd3fb962eca8f797eb74b8012ce1ffdab7", "author": {"user": {"login": "amizurov", "name": "Andrey Mizurov"}}, "url": "https://github.com/netty/netty/commit/dca3becd3fb962eca8f797eb74b8012ce1ffdab7", "committedDate": "2020-08-06T14:59:32Z", "message": "Break if written bytes less than zero"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODg5OTAy", "url": "https://github.com/netty/netty/pull/10453#pullrequestreview-462889902", "createdAt": "2020-08-06T21:29:38Z", "commit": {"oid": "dca3becd3fb962eca8f797eb74b8012ce1ffdab7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToyOTozOFrOG9E6Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToyOTozOFrOG9E6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg==", "bodyText": "nit: would be tiny bit simpler to do decrement remaining instead", "url": "https://github.com/netty/netty/pull/10453#discussion_r466696706", "createdAt": "2020-08-06T21:29:38Z", "author": {"login": "njhill"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,28 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                int totalWritten = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dca3becd3fb962eca8f797eb74b8012ce1ffdab7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 183, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}