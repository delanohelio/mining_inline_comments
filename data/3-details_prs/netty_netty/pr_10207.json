{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzQyMTAx", "number": 10207, "title": "Dns resolver: honor resolv.conf timeout, rotate and attempts options", "bodyText": "Motivations\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\nModifications\n\nModified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\nWhen rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\nAmend resolv.conf options with the RES_OPTIONS environment variable\nwhen present.\n\nFixes #10202", "createdAt": "2020-04-24T05:41:01Z", "url": "https://github.com/netty/netty/pull/10207", "merged": true, "mergeCommit": {"oid": "4f72cdf2333f682410e23e1eb5d77bc66b186cf4"}, "closed": true, "closedAt": "2020-04-28T07:28:06Z", "author": {"login": "fabienrenaud"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcarCBDAFqTM5OTY1ODA4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb-vKeAFqTQwMTU2NTY4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjU4MDg1", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-399658085", "createdAt": "2020-04-24T05:54:25Z", "commit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NDoyNVrOGLHqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1NTozNFrOGLHr9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzAzMw==", "bodyText": "let's not change the default values used here.", "url": "https://github.com/netty/netty/pull/10207#discussion_r414313033", "createdAt": "2020-04-24T05:54:25Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java", "diffHunk": "@@ -46,16 +45,17 @@\n     private Integer minTtl;\n     private Integer maxTtl;\n     private Integer negativeTtl;\n-    private long queryTimeoutMillis = 5000;\n+    private long queryTimeoutMillis = -1;\n     private ResolvedAddressTypes resolvedAddressTypes = DnsNameResolver.DEFAULT_RESOLVE_ADDRESS_TYPES;\n     private boolean completeOncePreferredResolved;\n     private boolean recursionDesired = true;\n-    private int maxQueriesPerResolve = 16;\n+    private int maxQueriesPerResolve = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzQ2Mg==", "bodyText": "2020", "url": "https://github.com/netty/netty/pull/10207#discussion_r414313462", "createdAt": "2020-04-24T05:55:34Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2017 The Netty Project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjU5Njgy", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-399659682", "createdAt": "2020-04-24T05:58:45Z", "commit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1ODo0NVrOGLHw3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTo1ODo0NVrOGLHw3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNDcxNw==", "bodyText": "ah never mind... this is because we use the one configured by the system in DnsNameResolver then", "url": "https://github.com/netty/netty/pull/10207#discussion_r414314717", "createdAt": "2020-04-24T05:58:45Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java", "diffHunk": "@@ -46,16 +45,17 @@\n     private Integer minTtl;\n     private Integer maxTtl;\n     private Integer negativeTtl;\n-    private long queryTimeoutMillis = 5000;\n+    private long queryTimeoutMillis = -1;\n     private ResolvedAddressTypes resolvedAddressTypes = DnsNameResolver.DEFAULT_RESOLVE_ADDRESS_TYPES;\n     private boolean completeOncePreferredResolved;\n     private boolean recursionDesired = true;\n-    private int maxQueriesPerResolve = 16;\n+    private int maxQueriesPerResolve = -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxMzAzMw=="}, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjYwNTcw", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-399660570", "createdAt": "2020-04-24T06:01:06Z", "commit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjowMTowNlrOGLH0QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjowMTowNlrOGLH0QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMxNTU4NQ==", "bodyText": "@fabienrenaud I wonder if we should better do this as part of the builder ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414315585", "createdAt": "2020-04-24T06:01:06Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java", "diffHunk": "@@ -401,7 +403,7 @@ public DnsNameResolver(\n                                                                dnsQueryLifecycleObserverFactory) :\n                 checkNotNull(dnsQueryLifecycleObserverFactory, \"dnsQueryLifecycleObserverFactory\");\n         this.searchDomains = searchDomains != null ? searchDomains.clone() : DEFAULT_SEARCH_DOMAINS;\n-        this.ndots = ndots >= 0 ? ndots : DEFAULT_NDOTS;\n+        this.ndots = ndots >= 0 ? ndots : DEFAULT_OPTIONS.ndots();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5e60bd69fa874e6e2c7d81b97052d4340176740", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/b5e60bd69fa874e6e2c7d81b97052d4340176740", "committedDate": "2020-04-24T05:39:45Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}, "afterCommit": {"oid": "91c83cde190359599bd577a10f406d935a85022b", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/91c83cde190359599bd577a10f406d935a85022b", "committedDate": "2020-04-24T08:19:34Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91c83cde190359599bd577a10f406d935a85022b", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/91c83cde190359599bd577a10f406d935a85022b", "committedDate": "2020-04-24T08:19:34Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}, "afterCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/7b2535e376669ae682a3e8786bce7f60a83d2de4", "committedDate": "2020-04-24T08:25:33Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTE1ODg1", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-399915885", "createdAt": "2020-04-24T12:50:04Z", "commit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDowNFrOGLWJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo1MDoyNVrOGLWKRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDM2Nw==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550367", "createdAt": "2020-04-24T12:50:04Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDQyNw==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550427", "createdAt": "2020-04-24T12:50:09Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDUxNQ==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550515", "createdAt": "2020-04-24T12:50:16Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {\n+            if (timeout != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MDU5OQ==", "bodyText": "why not use int ?", "url": "https://github.com/netty/netty/pull/10207#discussion_r414550599", "createdAt": "2020-04-24T12:50:25Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {\n+        return new UnixResolverOptions.Builder();\n+    }\n+\n+    /**\n+     * The number of dots which must appear in a name before an initial absolute query is made.\n+     * The default value is {@code 1}.\n+     */\n+    public int ndots() {\n+        return ndots;\n+    }\n+\n+    /**\n+     * The timeout of each DNS query performed by this resolver (in seconds).\n+     * The default value is {@code 5}.\n+     */\n+    public int timeout() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * The maximum allowed number of DNS queries to send when resolving a host name.\n+     * The default value is {@code 16}.\n+     */\n+    public int attempts() {\n+        return attempts;\n+    }\n+\n+    public static final class Builder {\n+\n+        private int ndots = 1;\n+        private int timeout = 5;\n+        private int attempts = 16;\n+\n+        private Builder() {\n+        }\n+\n+        public void setNdots(Integer ndots) {\n+            if (ndots != null) {\n+                this.ndots = ndots;\n+            }\n+        }\n+\n+        public void setTimeout(Integer timeout) {\n+            if (timeout != null) {\n+                this.timeout = timeout;\n+            }\n+        }\n+\n+        public void setAttempts(Integer attempts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4"}, "originalPosition": 82}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b2535e376669ae682a3e8786bce7f60a83d2de4", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/7b2535e376669ae682a3e8786bce7f60a83d2de4", "committedDate": "2020-04-24T08:25:33Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}, "afterCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/fe7b3fa401b90b98843c860e913c2896c6e10fdf", "committedDate": "2020-04-24T14:18:39Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjI3NzU4", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-400627758", "createdAt": "2020-04-27T05:02:27Z", "commit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTI4OTA1", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-400928905", "createdAt": "2020-04-27T13:03:14Z", "commit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzowMzoxNFrOGMiAzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzowMzozOFrOGMiBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzM1Nw==", "bodyText": "nit: make all of the methods package-private as the class is package-private as well. This also ensures we no expose these by mistake at some point.", "url": "https://github.com/netty/netty/pull/10207#discussion_r415793357", "createdAt": "2020-04-27T13:03:14Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverOptions.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.resolver.dns;\n+\n+/**\n+ * Represents options defined in a file of the format <a href=https://linux.die.net/man/5/resolver>etc/resolv.conf</a>.\n+ */\n+final class UnixResolverOptions {\n+\n+    private final int ndots;\n+    private final int timeout;\n+    private final int attempts;\n+\n+    UnixResolverOptions(int ndots, int timeout, int attempts) {\n+        this.ndots = ndots;\n+        this.timeout = timeout;\n+        this.attempts = attempts;\n+    }\n+\n+    public static UnixResolverOptions.Builder newBuilder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5MzU5OQ==", "bodyText": "add a comment why its ok to ignore.", "url": "https://github.com/netty/netty/pull/10207#discussion_r415793599", "createdAt": "2020-04-27T13:03:38Z", "author": {"login": "normanmaurer"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.java", "diffHunk": "@@ -306,7 +312,34 @@ static int parseEtcResolverFirstNdots(File etcResolvConf) throws IOException {\n                 br.close();\n             }\n         }\n-        return DEFAULT_NDOTS;\n+\n+        // amend options\n+        if (RES_OPTIONS != null) {\n+            parseResOptions(RES_OPTIONS, optionsBuilder);\n+        }\n+\n+        return optionsBuilder.build();\n+    }\n+\n+    private static void parseResOptions(String line, UnixResolverOptions.Builder builder) {\n+        String[] opts = WHITESPACE_PATTERN.split(line);\n+        for (String opt : opts) {\n+            try {\n+                if (opt.startsWith(\"ndots:\")) {\n+                    builder.setNdots(parseResIntOption(opt, \"ndots:\"));\n+                } else if (opt.startsWith(\"attempts:\")) {\n+                    builder.setAttempts(parseResIntOption(opt, \"attempts:\"));\n+                } else if (opt.startsWith(\"timeout:\")) {\n+                    builder.setTimeout(parseResIntOption(opt, \"timeout:\"));\n+                }\n+            } catch (NumberFormatException ignore) {\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf"}, "originalPosition": 165}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52d62f7a5abb5724dd8e320d9469d6001802e2a", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/f52d62f7a5abb5724dd8e320d9469d6001802e2a", "committedDate": "2020-04-27T16:00:41Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe7b3fa401b90b98843c860e913c2896c6e10fdf", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/fe7b3fa401b90b98843c860e913c2896c6e10fdf", "committedDate": "2020-04-24T14:18:39Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}, "afterCommit": {"oid": "f52d62f7a5abb5724dd8e320d9469d6001802e2a", "author": {"user": {"login": "fabienrenaud", "name": "Fabien Renaud"}}, "url": "https://github.com/netty/netty/commit/f52d62f7a5abb5724dd8e320d9469d6001802e2a", "committedDate": "2020-04-27T16:00:41Z", "message": "Dns resolver: honor resolv.conf timeout, rotate and attempts options\n\nMotivations\n-----------\nDnsNameResolverBuilder and DnsNameResolver do not auto-configure\nthemselves uing default options define in /etc/resolv.conf.\nIn particular, rotate, timeout and attempts options are ignored.\n\nModifications\n-------------\n - Modified UnixResolverDnsServerAddressStreamProvider to parse ndots,\nattempts and timeout options all at once and use these defaults to\nconfigure DnsNameResolver when values are not provided by the\nDnsNameResolverBuilder.\n - When rotate option is specified, the DnsServerAddresses returned by\nUnixResolverDnsServerAddressStreamProvider is rotational.\n - Amend resolv.conf options with the RES_OPTIONS environment variable\nwhen present."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjY4NzMx", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-401268731", "createdAt": "2020-04-27T19:40:30Z", "commit": {"oid": "f52d62f7a5abb5724dd8e320d9469d6001802e2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTY1Njg5", "url": "https://github.com/netty/netty/pull/10207#pullrequestreview-401565689", "createdAt": "2020-04-28T07:27:40Z", "commit": {"oid": "f52d62f7a5abb5724dd8e320d9469d6001802e2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 252, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}