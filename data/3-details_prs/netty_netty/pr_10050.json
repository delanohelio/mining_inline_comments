{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MjMzNjk4", "number": 10050, "title": "Added support for the SameSite attribute in Cookies", "bodyText": "Motivation:\nNetty currently does not support the SameSite attribute for response cookies (see issue #8161 for discussion).\nModifications:\nThe attribute has been added to the DefaultCookie class as a quick fix since adding new methods to the Cookie interface would be backwards-incompatible.\nServerCookieEncoder and ClientCookieDecoder have been updated accordingly to process this value. No validation for allowed values (Lax, None, Strict) has been implemented.\nResult:\nResponse cookies with the SameSite attribute set can be read or written by Netty.\nFixes #8161", "createdAt": "2020-02-21T11:22:03Z", "url": "https://github.com/netty/netty/pull/10050", "merged": true, "mergeCommit": {"oid": "e4af5c363152e6589e46eb3e3f7c44e8ebae9b09"}, "closed": true, "closedAt": "2020-03-12T08:48:31Z", "author": {"login": "dvlato"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFLRzHAH2gAyMzc4MjMzNjk4OjAzOTFkZGZlNmMyODBiNjM1MDY3MjliMjNiMzVhYTJjNDM2NTRmN2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJvFB9AFqTM2NzI2Njg3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f", "author": {"user": {"login": "a-dlatorre", "name": null}}, "url": "https://github.com/netty/netty/commit/0391ddfe6c280b63506729b23b35aa2c43654f7f", "committedDate": "2020-02-17T11:04:06Z", "message": "Added support for the SameSite attribute in Cookies\n\nMotivation:\n\nNetty currently does not support the SameSite attribute for response cookies (see issue #8161 for discussion).\n\nModifications:\n\nThe attribute has been added to the DefaultCookie class as a quick fix since adding new methods to the Cookie interface would be backwards-incompatible.\nServerCookieEncoder and ClientCookieDecoder have been updated accordingly to process this value. No validation for allowed values (Lax, None, Strict) has been implemented.\n\nResult:\n\nResponse cookies with the SameSite attribute set can be read or written by Netty."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzc3Nzg4", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-363377788", "createdAt": "2020-02-24T13:13:06Z", "commit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzoxMzowN1rOFtgHuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzoxNDoxOFrOFtgKVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NjUwNA==", "bodyText": "@dvlato please add some java docs", "url": "https://github.com/netty/netty/pull/10050#discussion_r383256504", "createdAt": "2020-02-24T13:13:07Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -119,6 +120,14 @@ public void setHttpOnly(boolean httpOnly) {\n         this.httpOnly = httpOnly;\n     }\n \n+    public String sameSite() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NjYzNQ==", "bodyText": "@dvlato please add some java docs", "url": "https://github.com/netty/netty/pull/10050#discussion_r383256635", "createdAt": "2020-02-24T13:13:21Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -119,6 +120,14 @@ public void setHttpOnly(boolean httpOnly) {\n         this.httpOnly = httpOnly;\n     }\n \n+    public String sameSite() {\n+        return sameSite;\n+    }\n+\n+    public void setSameSite(String sameSite) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NzA3MA==", "bodyText": "@dvlato seems like this is only a formatting change ? Can you revert it ?", "url": "https://github.com/netty/netty/pull/10050#discussion_r383257070", "createdAt": "2020-02-24T13:14:04Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java", "diffHunk": "@@ -214,52 +219,52 @@ public void testDecodingInvalidValuesWithCommaAtStart() {\n     public void testDecodingLongValue() {\n         String longValue =\n                 \"b___$Q__$ha__<NC=MN(F__%#4__<NC=MN(F__2_d____#=IvZB__2_F____'=KqtH__2-9____\" +\n-                \"'=IvZM__3f:____$=HbQW__3g'____%=J^wI__3g-____%=J^wI__3g1____$=HbQW__3g2____\" +\n-                \"$=HbQW__3g5____%=J^wI__3g9____$=HbQW__3gT____$=HbQW__3gX____#=J^wI__3gY____\" +\n-                \"#=J^wI__3gh____$=HbQW__3gj____$=HbQW__3gr____$=HbQW__3gx____#=J^wI__3h_____\" +\n-                \"$=HbQW__3h$____#=J^wI__3h'____$=HbQW__3h_____$=HbQW__3h0____%=J^wI__3h1____\" +\n-                \"#=J^wI__3h2____$=HbQW__3h4____$=HbQW__3h7____$=HbQW__3h8____%=J^wI__3h:____\" +\n-                \"#=J^wI__3h@____%=J^wI__3hB____$=HbQW__3hC____$=HbQW__3hL____$=HbQW__3hQ____\" +\n-                \"$=HbQW__3hS____%=J^wI__3hU____$=HbQW__3h[____$=HbQW__3h^____$=HbQW__3hd____\" +\n-                \"%=J^wI__3he____%=J^wI__3hf____%=J^wI__3hg____$=HbQW__3hh____%=J^wI__3hi____\" +\n-                \"%=J^wI__3hv____$=HbQW__3i/____#=J^wI__3i2____#=J^wI__3i3____%=J^wI__3i4____\" +\n-                \"$=HbQW__3i7____$=HbQW__3i8____$=HbQW__3i9____%=J^wI__3i=____#=J^wI__3i>____\" +\n-                \"%=J^wI__3iD____$=HbQW__3iF____#=J^wI__3iH____%=J^wI__3iM____%=J^wI__3iS____\" +\n-                \"#=J^wI__3iU____%=J^wI__3iZ____#=J^wI__3i]____%=J^wI__3ig____%=J^wI__3ij____\" +\n-                \"%=J^wI__3ik____#=J^wI__3il____$=HbQW__3in____%=J^wI__3ip____$=HbQW__3iq____\" +\n-                \"$=HbQW__3it____%=J^wI__3ix____#=J^wI__3j_____$=HbQW__3j%____$=HbQW__3j'____\" +\n-                \"%=J^wI__3j(____%=J^wI__9mJ____'=KqtH__=SE__<NC=MN(F__?VS__<NC=MN(F__Zw`____\" +\n-                \"%=KqtH__j+C__<NC=MN(F__j+M__<NC=MN(F__j+a__<NC=MN(F__j_.__<NC=MN(F__n>M____\" +\n-                \"'=KqtH__s1X____$=MMyc__s1_____#=MN#O__ypn____'=KqtH__ypr____'=KqtH_#%h_____\" +\n-                \"%=KqtH_#%o_____'=KqtH_#)H6__<NC=MN(F_#*%'____%=KqtH_#+k(____'=KqtH_#-E_____\" +\n-                \"'=KqtH_#1)w____'=KqtH_#1)y____'=KqtH_#1*M____#=KqtH_#1*p____'=KqtH_#14Q__<N\" +\n-                \"C=MN(F_#14S__<NC=MN(F_#16I__<NC=MN(F_#16N__<NC=MN(F_#16X__<NC=MN(F_#16k__<N\" +\n-                \"C=MN(F_#17@__<NC=MN(F_#17A__<NC=MN(F_#1Cq____'=KqtH_#7)_____#=KqtH_#7)b____\" +\n-                \"#=KqtH_#7Ww____'=KqtH_#?cQ____'=KqtH_#His____'=KqtH_#Jrh____'=KqtH_#O@M__<N\" +\n-                \"C=MN(F_#O@O__<NC=MN(F_#OC6__<NC=MN(F_#Os.____#=KqtH_#YOW____#=H/Li_#Zat____\" +\n-                \"'=KqtH_#ZbI____%=KqtH_#Zbc____'=KqtH_#Zbs____%=KqtH_#Zby____'=KqtH_#Zce____\" +\n-                \"'=KqtH_#Zdc____%=KqtH_#Zea____'=KqtH_#ZhI____#=KqtH_#ZiD____'=KqtH_#Zis____\" +\n-                \"'=KqtH_#Zj0____#=KqtH_#Zj1____'=KqtH_#Zj[____'=KqtH_#Zj]____'=KqtH_#Zj^____\" +\n-                \"'=KqtH_#Zjb____'=KqtH_#Zk_____'=KqtH_#Zk6____#=KqtH_#Zk9____%=KqtH_#Zk<____\" +\n-                \"'=KqtH_#Zl>____'=KqtH_#]9R____$=H/Lt_#]I6____#=KqtH_#]Z#____%=KqtH_#^*N____\" +\n-                \"#=KqtH_#^:m____#=KqtH_#_*_____%=J^wI_#`-7____#=KqtH_#`T>____'=KqtH_#`T?____\" +\n-                \"'=KqtH_#`TA____'=KqtH_#`TB____'=KqtH_#`TG____'=KqtH_#`TP____#=KqtH_#`U_____\" +\n-                \"'=KqtH_#`U/____'=KqtH_#`U0____#=KqtH_#`U9____'=KqtH_#aEQ____%=KqtH_#b<)____\" +\n-                \"'=KqtH_#c9-____%=KqtH_#dxC____%=KqtH_#dxE____%=KqtH_#ev$____'=KqtH_#fBi____\" +\n-                \"#=KqtH_#fBj____'=KqtH_#fG)____'=KqtH_#fG+____'=KqtH_#g<d____'=KqtH_#g<e____\" +\n-                \"'=KqtH_#g=J____'=KqtH_#gat____#=KqtH_#s`D____#=J_#p_#sg?____#=J_#p_#t<a____\" +\n-                \"#=KqtH_#t<c____#=KqtH_#trY____$=JiYj_#vA$____'=KqtH_#xs_____'=KqtH_$$rO____\" +\n-                \"#=KqtH_$$rP____#=KqtH_$(_%____'=KqtH_$)]o____%=KqtH_$_@)____'=KqtH_$_k]____\" +\n-                \"'=KqtH_$1]+____%=KqtH_$3IO____%=KqtH_$3J#____'=KqtH_$3J.____'=KqtH_$3J:____\" +\n-                \"#=KqtH_$3JH____#=KqtH_$3JI____#=KqtH_$3JK____%=KqtH_$3JL____'=KqtH_$3JS____\" +\n-                \"'=KqtH_$8+M____#=KqtH_$99d____%=KqtH_$:Lw____#=LK+x_$:N@____#=KqtG_$:NC____\" +\n-                \"#=KqtG_$:hW____'=KqtH_$:i[____'=KqtH_$:ih____'=KqtH_$:it____'=KqtH_$:kO____\" +\n-                \"'=KqtH_$>*B____'=KqtH_$>hD____+=J^x0_$?lW____'=KqtH_$?ll____'=KqtH_$?lm____\" +\n-                \"%=KqtH_$?mi____'=KqtH_$?mx____'=KqtH_$D7]____#=J_#p_$D@T____#=J_#p_$V<g____\" +\n-                \"'=KqtH\";\n+                        \"'=IvZM__3f:____$=HbQW__3g'____%=J^wI__3g-____%=J^wI__3g1____$=HbQW__3g2____\" +\n+                        \"$=HbQW__3g5____%=J^wI__3g9____$=HbQW__3gT____$=HbQW__3gX____#=J^wI__3gY____\" +\n+                        \"#=J^wI__3gh____$=HbQW__3gj____$=HbQW__3gr____$=HbQW__3gx____#=J^wI__3h_____\" +\n+                        \"$=HbQW__3h$____#=J^wI__3h'____$=HbQW__3h_____$=HbQW__3h0____%=J^wI__3h1____\" +\n+                        \"#=J^wI__3h2____$=HbQW__3h4____$=HbQW__3h7____$=HbQW__3h8____%=J^wI__3h:____\" +\n+                        \"#=J^wI__3h@____%=J^wI__3hB____$=HbQW__3hC____$=HbQW__3hL____$=HbQW__3hQ____\" +\n+                        \"$=HbQW__3hS____%=J^wI__3hU____$=HbQW__3h[____$=HbQW__3h^____$=HbQW__3hd____\" +\n+                        \"%=J^wI__3he____%=J^wI__3hf____%=J^wI__3hg____$=HbQW__3hh____%=J^wI__3hi____\" +\n+                        \"%=J^wI__3hv____$=HbQW__3i/____#=J^wI__3i2____#=J^wI__3i3____%=J^wI__3i4____\" +\n+                        \"$=HbQW__3i7____$=HbQW__3i8____$=HbQW__3i9____%=J^wI__3i=____#=J^wI__3i>____\" +\n+                        \"%=J^wI__3iD____$=HbQW__3iF____#=J^wI__3iH____%=J^wI__3iM____%=J^wI__3iS____\" +\n+                        \"#=J^wI__3iU____%=J^wI__3iZ____#=J^wI__3i]____%=J^wI__3ig____%=J^wI__3ij____\" +\n+                        \"%=J^wI__3ik____#=J^wI__3il____$=HbQW__3in____%=J^wI__3ip____$=HbQW__3iq____\" +\n+                        \"$=HbQW__3it____%=J^wI__3ix____#=J^wI__3j_____$=HbQW__3j%____$=HbQW__3j'____\" +\n+                        \"%=J^wI__3j(____%=J^wI__9mJ____'=KqtH__=SE__<NC=MN(F__?VS__<NC=MN(F__Zw`____\" +\n+                        \"%=KqtH__j+C__<NC=MN(F__j+M__<NC=MN(F__j+a__<NC=MN(F__j_.__<NC=MN(F__n>M____\" +\n+                        \"'=KqtH__s1X____$=MMyc__s1_____#=MN#O__ypn____'=KqtH__ypr____'=KqtH_#%h_____\" +\n+                        \"%=KqtH_#%o_____'=KqtH_#)H6__<NC=MN(F_#*%'____%=KqtH_#+k(____'=KqtH_#-E_____\" +\n+                        \"'=KqtH_#1)w____'=KqtH_#1)y____'=KqtH_#1*M____#=KqtH_#1*p____'=KqtH_#14Q__<N\" +\n+                        \"C=MN(F_#14S__<NC=MN(F_#16I__<NC=MN(F_#16N__<NC=MN(F_#16X__<NC=MN(F_#16k__<N\" +\n+                        \"C=MN(F_#17@__<NC=MN(F_#17A__<NC=MN(F_#1Cq____'=KqtH_#7)_____#=KqtH_#7)b____\" +\n+                        \"#=KqtH_#7Ww____'=KqtH_#?cQ____'=KqtH_#His____'=KqtH_#Jrh____'=KqtH_#O@M__<N\" +\n+                        \"C=MN(F_#O@O__<NC=MN(F_#OC6__<NC=MN(F_#Os.____#=KqtH_#YOW____#=H/Li_#Zat____\" +\n+                        \"'=KqtH_#ZbI____%=KqtH_#Zbc____'=KqtH_#Zbs____%=KqtH_#Zby____'=KqtH_#Zce____\" +\n+                        \"'=KqtH_#Zdc____%=KqtH_#Zea____'=KqtH_#ZhI____#=KqtH_#ZiD____'=KqtH_#Zis____\" +\n+                        \"'=KqtH_#Zj0____#=KqtH_#Zj1____'=KqtH_#Zj[____'=KqtH_#Zj]____'=KqtH_#Zj^____\" +\n+                        \"'=KqtH_#Zjb____'=KqtH_#Zk_____'=KqtH_#Zk6____#=KqtH_#Zk9____%=KqtH_#Zk<____\" +\n+                        \"'=KqtH_#Zl>____'=KqtH_#]9R____$=H/Lt_#]I6____#=KqtH_#]Z#____%=KqtH_#^*N____\" +\n+                        \"#=KqtH_#^:m____#=KqtH_#_*_____%=J^wI_#`-7____#=KqtH_#`T>____'=KqtH_#`T?____\" +\n+                        \"'=KqtH_#`TA____'=KqtH_#`TB____'=KqtH_#`TG____'=KqtH_#`TP____#=KqtH_#`U_____\" +\n+                        \"'=KqtH_#`U/____'=KqtH_#`U0____#=KqtH_#`U9____'=KqtH_#aEQ____%=KqtH_#b<)____\" +\n+                        \"'=KqtH_#c9-____%=KqtH_#dxC____%=KqtH_#dxE____%=KqtH_#ev$____'=KqtH_#fBi____\" +\n+                        \"#=KqtH_#fBj____'=KqtH_#fG)____'=KqtH_#fG+____'=KqtH_#g<d____'=KqtH_#g<e____\" +\n+                        \"'=KqtH_#g=J____'=KqtH_#gat____#=KqtH_#s`D____#=J_#p_#sg?____#=J_#p_#t<a____\" +\n+                        \"#=KqtH_#t<c____#=KqtH_#trY____$=JiYj_#vA$____'=KqtH_#xs_____'=KqtH_$$rO____\" +\n+                        \"#=KqtH_$$rP____#=KqtH_$(_%____'=KqtH_$)]o____%=KqtH_$_@)____'=KqtH_$_k]____\" +\n+                        \"'=KqtH_$1]+____%=KqtH_$3IO____%=KqtH_$3J#____'=KqtH_$3J.____'=KqtH_$3J:____\" +\n+                        \"#=KqtH_$3JH____#=KqtH_$3JI____#=KqtH_$3JK____%=KqtH_$3JL____'=KqtH_$3JS____\" +\n+                        \"'=KqtH_$8+M____#=KqtH_$99d____%=KqtH_$:Lw____#=LK+x_$:N@____#=KqtG_$:NC____\" +\n+                        \"#=KqtG_$:hW____'=KqtH_$:i[____'=KqtH_$:ih____'=KqtH_$:it____'=KqtH_$:kO____\" +\n+                        \"'=KqtH_$>*B____'=KqtH_$>hD____+=J^x0_$?lW____'=KqtH_$?ll____'=KqtH_$?lm____\" +\n+                        \"%=KqtH_$?mi____'=KqtH_$?mx____'=KqtH_$D7]____#=J_#p_$D@T____#=J_#p_$V<g____\" +\n+                        \"'=KqtH\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NzE3Mg==", "bodyText": "same comment... please revert formatting changes", "url": "https://github.com/netty/netty/pull/10050#discussion_r383257172", "createdAt": "2020-02-24T13:14:18Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java", "diffHunk": "@@ -214,52 +219,52 @@ public void testDecodingInvalidValuesWithCommaAtStart() {\n     public void testDecodingLongValue() {\n         String longValue =\n                 \"b___$Q__$ha__<NC=MN(F__%#4__<NC=MN(F__2_d____#=IvZB__2_F____'=KqtH__2-9____\" +\n-                \"'=IvZM__3f:____$=HbQW__3g'____%=J^wI__3g-____%=J^wI__3g1____$=HbQW__3g2____\" +\n-                \"$=HbQW__3g5____%=J^wI__3g9____$=HbQW__3gT____$=HbQW__3gX____#=J^wI__3gY____\" +\n-                \"#=J^wI__3gh____$=HbQW__3gj____$=HbQW__3gr____$=HbQW__3gx____#=J^wI__3h_____\" +\n-                \"$=HbQW__3h$____#=J^wI__3h'____$=HbQW__3h_____$=HbQW__3h0____%=J^wI__3h1____\" +\n-                \"#=J^wI__3h2____$=HbQW__3h4____$=HbQW__3h7____$=HbQW__3h8____%=J^wI__3h:____\" +\n-                \"#=J^wI__3h@____%=J^wI__3hB____$=HbQW__3hC____$=HbQW__3hL____$=HbQW__3hQ____\" +\n-                \"$=HbQW__3hS____%=J^wI__3hU____$=HbQW__3h[____$=HbQW__3h^____$=HbQW__3hd____\" +\n-                \"%=J^wI__3he____%=J^wI__3hf____%=J^wI__3hg____$=HbQW__3hh____%=J^wI__3hi____\" +\n-                \"%=J^wI__3hv____$=HbQW__3i/____#=J^wI__3i2____#=J^wI__3i3____%=J^wI__3i4____\" +\n-                \"$=HbQW__3i7____$=HbQW__3i8____$=HbQW__3i9____%=J^wI__3i=____#=J^wI__3i>____\" +\n-                \"%=J^wI__3iD____$=HbQW__3iF____#=J^wI__3iH____%=J^wI__3iM____%=J^wI__3iS____\" +\n-                \"#=J^wI__3iU____%=J^wI__3iZ____#=J^wI__3i]____%=J^wI__3ig____%=J^wI__3ij____\" +\n-                \"%=J^wI__3ik____#=J^wI__3il____$=HbQW__3in____%=J^wI__3ip____$=HbQW__3iq____\" +\n-                \"$=HbQW__3it____%=J^wI__3ix____#=J^wI__3j_____$=HbQW__3j%____$=HbQW__3j'____\" +\n-                \"%=J^wI__3j(____%=J^wI__9mJ____'=KqtH__=SE__<NC=MN(F__?VS__<NC=MN(F__Zw`____\" +\n-                \"%=KqtH__j+C__<NC=MN(F__j+M__<NC=MN(F__j+a__<NC=MN(F__j_.__<NC=MN(F__n>M____\" +\n-                \"'=KqtH__s1X____$=MMyc__s1_____#=MN#O__ypn____'=KqtH__ypr____'=KqtH_#%h_____\" +\n-                \"%=KqtH_#%o_____'=KqtH_#)H6__<NC=MN(F_#*%'____%=KqtH_#+k(____'=KqtH_#-E_____\" +\n-                \"'=KqtH_#1)w____'=KqtH_#1)y____'=KqtH_#1*M____#=KqtH_#1*p____'=KqtH_#14Q__<N\" +\n-                \"C=MN(F_#14S__<NC=MN(F_#16I__<NC=MN(F_#16N__<NC=MN(F_#16X__<NC=MN(F_#16k__<N\" +\n-                \"C=MN(F_#17@__<NC=MN(F_#17A__<NC=MN(F_#1Cq____'=KqtH_#7)_____#=KqtH_#7)b____\" +\n-                \"#=KqtH_#7Ww____'=KqtH_#?cQ____'=KqtH_#His____'=KqtH_#Jrh____'=KqtH_#O@M__<N\" +\n-                \"C=MN(F_#O@O__<NC=MN(F_#OC6__<NC=MN(F_#Os.____#=KqtH_#YOW____#=H/Li_#Zat____\" +\n-                \"'=KqtH_#ZbI____%=KqtH_#Zbc____'=KqtH_#Zbs____%=KqtH_#Zby____'=KqtH_#Zce____\" +\n-                \"'=KqtH_#Zdc____%=KqtH_#Zea____'=KqtH_#ZhI____#=KqtH_#ZiD____'=KqtH_#Zis____\" +\n-                \"'=KqtH_#Zj0____#=KqtH_#Zj1____'=KqtH_#Zj[____'=KqtH_#Zj]____'=KqtH_#Zj^____\" +\n-                \"'=KqtH_#Zjb____'=KqtH_#Zk_____'=KqtH_#Zk6____#=KqtH_#Zk9____%=KqtH_#Zk<____\" +\n-                \"'=KqtH_#Zl>____'=KqtH_#]9R____$=H/Lt_#]I6____#=KqtH_#]Z#____%=KqtH_#^*N____\" +\n-                \"#=KqtH_#^:m____#=KqtH_#_*_____%=J^wI_#`-7____#=KqtH_#`T>____'=KqtH_#`T?____\" +\n-                \"'=KqtH_#`TA____'=KqtH_#`TB____'=KqtH_#`TG____'=KqtH_#`TP____#=KqtH_#`U_____\" +\n-                \"'=KqtH_#`U/____'=KqtH_#`U0____#=KqtH_#`U9____'=KqtH_#aEQ____%=KqtH_#b<)____\" +\n-                \"'=KqtH_#c9-____%=KqtH_#dxC____%=KqtH_#dxE____%=KqtH_#ev$____'=KqtH_#fBi____\" +\n-                \"#=KqtH_#fBj____'=KqtH_#fG)____'=KqtH_#fG+____'=KqtH_#g<d____'=KqtH_#g<e____\" +\n-                \"'=KqtH_#g=J____'=KqtH_#gat____#=KqtH_#s`D____#=J_#p_#sg?____#=J_#p_#t<a____\" +\n-                \"#=KqtH_#t<c____#=KqtH_#trY____$=JiYj_#vA$____'=KqtH_#xs_____'=KqtH_$$rO____\" +\n-                \"#=KqtH_$$rP____#=KqtH_$(_%____'=KqtH_$)]o____%=KqtH_$_@)____'=KqtH_$_k]____\" +\n-                \"'=KqtH_$1]+____%=KqtH_$3IO____%=KqtH_$3J#____'=KqtH_$3J.____'=KqtH_$3J:____\" +\n-                \"#=KqtH_$3JH____#=KqtH_$3JI____#=KqtH_$3JK____%=KqtH_$3JL____'=KqtH_$3JS____\" +\n-                \"'=KqtH_$8+M____#=KqtH_$99d____%=KqtH_$:Lw____#=LK+x_$:N@____#=KqtG_$:NC____\" +\n-                \"#=KqtG_$:hW____'=KqtH_$:i[____'=KqtH_$:ih____'=KqtH_$:it____'=KqtH_$:kO____\" +\n-                \"'=KqtH_$>*B____'=KqtH_$>hD____+=J^x0_$?lW____'=KqtH_$?ll____'=KqtH_$?lm____\" +\n-                \"%=KqtH_$?mi____'=KqtH_$?mx____'=KqtH_$D7]____#=J_#p_$D@T____#=J_#p_$V<g____\" +\n-                \"'=KqtH\";\n+                        \"'=IvZM__3f:____$=HbQW__3g'____%=J^wI__3g-____%=J^wI__3g1____$=HbQW__3g2____\" +\n+                        \"$=HbQW__3g5____%=J^wI__3g9____$=HbQW__3gT____$=HbQW__3gX____#=J^wI__3gY____\" +\n+                        \"#=J^wI__3gh____$=HbQW__3gj____$=HbQW__3gr____$=HbQW__3gx____#=J^wI__3h_____\" +\n+                        \"$=HbQW__3h$____#=J^wI__3h'____$=HbQW__3h_____$=HbQW__3h0____%=J^wI__3h1____\" +\n+                        \"#=J^wI__3h2____$=HbQW__3h4____$=HbQW__3h7____$=HbQW__3h8____%=J^wI__3h:____\" +\n+                        \"#=J^wI__3h@____%=J^wI__3hB____$=HbQW__3hC____$=HbQW__3hL____$=HbQW__3hQ____\" +\n+                        \"$=HbQW__3hS____%=J^wI__3hU____$=HbQW__3h[____$=HbQW__3h^____$=HbQW__3hd____\" +\n+                        \"%=J^wI__3he____%=J^wI__3hf____%=J^wI__3hg____$=HbQW__3hh____%=J^wI__3hi____\" +\n+                        \"%=J^wI__3hv____$=HbQW__3i/____#=J^wI__3i2____#=J^wI__3i3____%=J^wI__3i4____\" +\n+                        \"$=HbQW__3i7____$=HbQW__3i8____$=HbQW__3i9____%=J^wI__3i=____#=J^wI__3i>____\" +\n+                        \"%=J^wI__3iD____$=HbQW__3iF____#=J^wI__3iH____%=J^wI__3iM____%=J^wI__3iS____\" +\n+                        \"#=J^wI__3iU____%=J^wI__3iZ____#=J^wI__3i]____%=J^wI__3ig____%=J^wI__3ij____\" +\n+                        \"%=J^wI__3ik____#=J^wI__3il____$=HbQW__3in____%=J^wI__3ip____$=HbQW__3iq____\" +\n+                        \"$=HbQW__3it____%=J^wI__3ix____#=J^wI__3j_____$=HbQW__3j%____$=HbQW__3j'____\" +\n+                        \"%=J^wI__3j(____%=J^wI__9mJ____'=KqtH__=SE__<NC=MN(F__?VS__<NC=MN(F__Zw`____\" +\n+                        \"%=KqtH__j+C__<NC=MN(F__j+M__<NC=MN(F__j+a__<NC=MN(F__j_.__<NC=MN(F__n>M____\" +\n+                        \"'=KqtH__s1X____$=MMyc__s1_____#=MN#O__ypn____'=KqtH__ypr____'=KqtH_#%h_____\" +\n+                        \"%=KqtH_#%o_____'=KqtH_#)H6__<NC=MN(F_#*%'____%=KqtH_#+k(____'=KqtH_#-E_____\" +\n+                        \"'=KqtH_#1)w____'=KqtH_#1)y____'=KqtH_#1*M____#=KqtH_#1*p____'=KqtH_#14Q__<N\" +\n+                        \"C=MN(F_#14S__<NC=MN(F_#16I__<NC=MN(F_#16N__<NC=MN(F_#16X__<NC=MN(F_#16k__<N\" +\n+                        \"C=MN(F_#17@__<NC=MN(F_#17A__<NC=MN(F_#1Cq____'=KqtH_#7)_____#=KqtH_#7)b____\" +\n+                        \"#=KqtH_#7Ww____'=KqtH_#?cQ____'=KqtH_#His____'=KqtH_#Jrh____'=KqtH_#O@M__<N\" +\n+                        \"C=MN(F_#O@O__<NC=MN(F_#OC6__<NC=MN(F_#Os.____#=KqtH_#YOW____#=H/Li_#Zat____\" +\n+                        \"'=KqtH_#ZbI____%=KqtH_#Zbc____'=KqtH_#Zbs____%=KqtH_#Zby____'=KqtH_#Zce____\" +\n+                        \"'=KqtH_#Zdc____%=KqtH_#Zea____'=KqtH_#ZhI____#=KqtH_#ZiD____'=KqtH_#Zis____\" +\n+                        \"'=KqtH_#Zj0____#=KqtH_#Zj1____'=KqtH_#Zj[____'=KqtH_#Zj]____'=KqtH_#Zj^____\" +\n+                        \"'=KqtH_#Zjb____'=KqtH_#Zk_____'=KqtH_#Zk6____#=KqtH_#Zk9____%=KqtH_#Zk<____\" +\n+                        \"'=KqtH_#Zl>____'=KqtH_#]9R____$=H/Lt_#]I6____#=KqtH_#]Z#____%=KqtH_#^*N____\" +\n+                        \"#=KqtH_#^:m____#=KqtH_#_*_____%=J^wI_#`-7____#=KqtH_#`T>____'=KqtH_#`T?____\" +\n+                        \"'=KqtH_#`TA____'=KqtH_#`TB____'=KqtH_#`TG____'=KqtH_#`TP____#=KqtH_#`U_____\" +\n+                        \"'=KqtH_#`U/____'=KqtH_#`U0____#=KqtH_#`U9____'=KqtH_#aEQ____%=KqtH_#b<)____\" +\n+                        \"'=KqtH_#c9-____%=KqtH_#dxC____%=KqtH_#dxE____%=KqtH_#ev$____'=KqtH_#fBi____\" +\n+                        \"#=KqtH_#fBj____'=KqtH_#fG)____'=KqtH_#fG+____'=KqtH_#g<d____'=KqtH_#g<e____\" +\n+                        \"'=KqtH_#g=J____'=KqtH_#gat____#=KqtH_#s`D____#=J_#p_#sg?____#=J_#p_#t<a____\" +\n+                        \"#=KqtH_#t<c____#=KqtH_#trY____$=JiYj_#vA$____'=KqtH_#xs_____'=KqtH_$$rO____\" +\n+                        \"#=KqtH_$$rP____#=KqtH_$(_%____'=KqtH_$)]o____%=KqtH_$_@)____'=KqtH_$_k]____\" +\n+                        \"'=KqtH_$1]+____%=KqtH_$3IO____%=KqtH_$3J#____'=KqtH_$3J.____'=KqtH_$3J:____\" +\n+                        \"#=KqtH_$3JH____#=KqtH_$3JI____#=KqtH_$3JK____%=KqtH_$3JL____'=KqtH_$3JS____\" +\n+                        \"'=KqtH_$8+M____#=KqtH_$99d____%=KqtH_$:Lw____#=LK+x_$:N@____#=KqtG_$:NC____\" +\n+                        \"#=KqtG_$:hW____'=KqtH_$:i[____'=KqtH_$:ih____'=KqtH_$:it____'=KqtH_$:kO____\" +\n+                        \"'=KqtH_$>*B____'=KqtH_$>hD____+=J^x0_$?lW____'=KqtH_$?ll____'=KqtH_$?lm____\" +\n+                        \"%=KqtH_$?mi____'=KqtH_$?mx____'=KqtH_$D7]____#=J_#p_$D@T____#=J_#p_$V<g____\" +\n+                        \"'=KqtH\";\n \n         Cookie cookie = ClientCookieDecoder.STRICT.decode(\"bh=\\\"\" + longValue\n-                                                   + \"\\\";\");\n+                + \"\\\";\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzgxNTY0", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-363381564", "createdAt": "2020-02-24T13:19:35Z", "commit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzoxOTozNVrOFtgTcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzoyNzo1MFrOFtgiwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1OTUwNA==", "bodyText": "Personally, I would go with an enum.", "url": "https://github.com/netty/netty/pull/10050#discussion_r383259504", "createdAt": "2020-02-24T13:19:35Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -154,6 +154,7 @@ public Cookie decode(String header) {\n         private int expiresEnd;\n         private boolean secure;\n         private boolean httpOnly;\n+        private String sameSite;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MDI0NQ==", "bodyText": "Is this correct? According to draft:\n\nIf the \"cookie-attribute-list\" contains an attribute with an \"attribute-name\" of \"SameSite\", set the cookie's \"samesite-flag\" to \"attribute-value\" (\"Strict\" or \"Lax\").  Otherwise, set the cookie's \"samesite-flag\" to \"None\".\n\nSo it looks to me \"None\" is only a possible value in the storage model, not on the wire, and we could use null as well.", "url": "https://github.com/netty/netty/pull/10050#discussion_r383260245", "createdAt": "2020-02-24T13:21:13Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -232,6 +241,9 @@ public String toString() {\n         if (isHttpOnly()) {\n             buf.append(\", HTTPOnly\");\n         }\n+        if (sameSite() != null) {\n+            buf.append(\", SameSite=\").append(sameSite());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MDUzNg==", "bodyText": "See above, I don't think None is a possible value over the wire, only in the storage model.", "url": "https://github.com/netty/netty/pull/10050#discussion_r383260536", "createdAt": "2020-02-24T13:21:49Z", "author": {"login": "slandelle"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java", "diffHunk": "@@ -25,14 +25,16 @@\n import java.util.Iterator;\n import java.util.TimeZone;\n \n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.*;\n \n public class ClientCookieDecoderTest {\n     @Test\n     public void testDecodingSingleCookieV0() {\n         String cookieString = \"myCookie=myValue;expires=\"\n                 + DateFormatter.format(new Date(System.currentTimeMillis() + 50000))\n-                + \";path=/apathsomewhere;domain=.adomainsomewhere;secure;\";\n+                + \";path=/apathsomewhere;domain=.adomainsomewhere;secure;SameSite=None\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MzQyNg==", "bodyText": "Should we use null for None?", "url": "https://github.com/netty/netty/pull/10050#discussion_r383263426", "createdAt": "2020-02-24T13:27:50Z", "author": {"login": "slandelle"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java", "diffHunk": "@@ -44,6 +46,9 @@ public void testDecodingSingleCookieV0() {\n                 cookie.maxAge() >= 40 && cookie.maxAge() <= 60);\n         assertEquals(\"/apathsomewhere\", cookie.path());\n         assertTrue(cookie.isSecure());\n+\n+        assertThat(cookie, is(instanceOf(DefaultCookie.class)));\n+        assertEquals(\"None\", ((DefaultCookie) cookie).sameSite());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1bad3d438520ea4758976f0d9f35a2f68c394b", "author": {"user": null}, "url": "https://github.com/netty/netty/commit/6d1bad3d438520ea4758976f0d9f35a2f68c394b", "committedDate": "2020-02-24T16:21:47Z", "message": "Javadoc added."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTEzMDAz", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-363513003", "createdAt": "2020-02-24T16:15:07Z", "commit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjoxNTowN1rOFtmmxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjoxNTowN1rOFtmmxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM2Mjc1OQ==", "bodyText": "+1 to enum. Wrt illegal values, I'd act as if the attribute isn't present.", "url": "https://github.com/netty/netty/pull/10050#discussion_r383362759", "createdAt": "2020-02-24T16:15:07Z", "author": {"login": "bryce-anderson"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -154,6 +154,7 @@ public Cookie decode(String header) {\n         private int expiresEnd;\n         private boolean secure;\n         private boolean httpOnly;\n+        private String sameSite;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1OTUwNA=="}, "originalCommit": {"oid": "0391ddfe6c280b63506729b23b35aa2c43654f7f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e", "author": {"user": null}, "url": "https://github.com/netty/netty/commit/222603eedd8945f929b6acf02170c9ab16b2e87e", "committedDate": "2020-02-25T13:35:08Z", "message": "Use an enum to represent the values of the SameSite attributes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTQ0ODQ1", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-364144845", "createdAt": "2020-02-25T13:38:12Z", "commit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzozODoxM1rOFuGUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzozODoxM1rOFuGUew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MjM2Mw==", "bodyText": "should we regrow the e if we did not find a match ?", "url": "https://github.com/netty/netty/pull/10050#discussion_r383882363", "createdAt": "2020-02-25T13:38:13Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java", "diffHunk": "@@ -30,6 +30,37 @@\n \n     public static final String SAMESITE = \"SameSite\";\n \n+    /**\n+     * Possible values for the SameSite attribute.\n+     * See <a href=https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1>changes to RFC6265bis</a>\n+     */\n+    public enum SameSite {\n+        Lax,\n+        Strict,\n+        None;\n+\n+        /**\n+         * Return the enum value corresponding to the passed in same-site-flag, using a case insensitive comparison.\n+         *\n+         * @param name value for the SameSite Attribute\n+         * @return enum value for the provided name or null\n+         */\n+        static SameSite of(String name) {\n+            if (name != null) {\n+                try {\n+                    return SameSite.valueOf(name);\n+                } catch (IllegalArgumentException e) {\n+                    for (SameSite each : SameSite.class.getEnumConstants()) {\n+                        if (each.name().equalsIgnoreCase(name)) {\n+                            return each;\n+                        }\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NzI5MzE1", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-364729315", "createdAt": "2020-02-26T09:13:24Z", "commit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOToxMzoyNFrOFujf7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOToxMzoyNFrOFujf7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2MDQzMQ==", "bodyText": "Why do you want to do that?\nFrom https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1:\n\nIf \"cookie-av\"'s \"attribute-value\" is not a case-sensitive match\nfor \"Strict\" or \"Lax\", ignore the \"cookie-av\".\n\nI'd say to initially stick to the spec and not allow for broken implementations that don't use the proper case.", "url": "https://github.com/netty/netty/pull/10050#discussion_r384360431", "createdAt": "2020-02-26T09:13:24Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java", "diffHunk": "@@ -28,6 +28,39 @@\n \n     public static final String HTTPONLY = \"HTTPOnly\";\n \n+    public static final String SAMESITE = \"SameSite\";\n+\n+    /**\n+     * Possible values for the SameSite attribute.\n+     * See <a href=https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1>changes to RFC6265bis</a>\n+     */\n+    public enum SameSite {\n+        Lax,\n+        Strict,\n+        None;\n+\n+        /**\n+         * Return the enum value corresponding to the passed in same-site-flag, using a case insensitive comparison.\n+         *\n+         * @param name value for the SameSite Attribute\n+         * @return enum value for the provided name or null\n+         */\n+        static SameSite of(String name) {\n+            if (name != null) {\n+                try {\n+                    return SameSite.valueOf(name);\n+                } catch (IllegalArgumentException e) {\n+                    for (SameSite each : SameSite.class.getEnumConstants()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTUyNzUw", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-364952750", "createdAt": "2020-02-26T14:41:02Z", "commit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDo0MTowM1rOFuuGiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDo0MTowM1rOFuuGiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNDE1NQ==", "bodyText": "I'm really not fond of using exceptions for expected flow control.\nIMHO, as value matching must be case insensitive, we should drop the SameSite.valueOf and have one single code branch.", "url": "https://github.com/netty/netty/pull/10050#discussion_r384534155", "createdAt": "2020-02-26T14:41:03Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java", "diffHunk": "@@ -28,6 +28,39 @@\n \n     public static final String HTTPONLY = \"HTTPOnly\";\n \n+    public static final String SAMESITE = \"SameSite\";\n+\n+    /**\n+     * Possible values for the SameSite attribute.\n+     * See <a href=https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1>changes to RFC6265bis</a>\n+     */\n+    public enum SameSite {\n+        Lax,\n+        Strict,\n+        None;\n+\n+        /**\n+         * Return the enum value corresponding to the passed in same-site-flag, using a case insensitive comparison.\n+         *\n+         * @param name value for the SameSite Attribute\n+         * @return enum value for the provided name or null\n+         */\n+        static SameSite of(String name) {\n+            if (name != null) {\n+                try {\n+                    return SameSite.valueOf(name);\n+                } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222603eedd8945f929b6acf02170c9ab16b2e87e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6df6d4f3ef69edaf0b2314200bead86d17a07a30", "author": {"user": null}, "url": "https://github.com/netty/netty/commit/6df6d4f3ef69edaf0b2314200bead86d17a07a30", "committedDate": "2020-02-26T14:56:26Z", "message": "Log any errors parsing SameSite attribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTczODc5", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-364973879", "createdAt": "2020-02-26T15:04:45Z", "commit": {"oid": "6df6d4f3ef69edaf0b2314200bead86d17a07a30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNDo0NlrOFuvG1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNDo0NlrOFuvG1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MDYxNA==", "bodyText": "Useless. The purpose of such test would be to avoid message resolution (eg String concatenation) when logging level is disabled. But there's no resolution here as you use the {} interpolation.\nPlease remove.", "url": "https://github.com/netty/netty/pull/10050#discussion_r384550614", "createdAt": "2020-02-26T15:04:46Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -248,11 +248,18 @@ private void parse8(int nameStart, int valueStart, int valueEnd) {\n             if (header.regionMatches(true, nameStart, CookieHeaderNames.HTTPONLY, 0, 8)) {\n                 httpOnly = true;\n             } else if (header.regionMatches(true, nameStart, CookieHeaderNames.SAMESITE, 0, 8)) {\n-                sameSite = SameSite.of(computeValue(valueStart, valueEnd));\n+                String sameSiteValue = computeValue(valueStart, valueEnd);\n+                try {\n+                    sameSite = SameSite.of(sameSiteValue);\n+                } catch (IllegalArgumentException e) {\n+                    if (logger.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6df6d4f3ef69edaf0b2314200bead86d17a07a30"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe", "author": {"user": null}, "url": "https://github.com/netty/netty/commit/3b82151c3d6ef5891c0d321f64c2a71a808deebe", "committedDate": "2020-02-26T16:28:51Z", "message": "remove isDebugEnabled() guard."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MDcwMjE0", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-365070214", "createdAt": "2020-02-26T16:53:03Z", "commit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo1MzowM1rOFuzuzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo1MzozMVrOFuzwCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyNjM4Mw==", "bodyText": "Please update to latest RFC6265bis latest draft :)", "url": "https://github.com/netty/netty/pull/10050#discussion_r384626383", "createdAt": "2020-02-26T16:53:03Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java", "diffHunk": "@@ -28,6 +28,40 @@\n \n     public static final String HTTPONLY = \"HTTPOnly\";\n \n+    public static final String SAMESITE = \"SameSite\";\n+\n+    /**\n+     * Possible values for the SameSite attribute.\n+     * See <a href=https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1>changes to RFC6265bis</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyNjYyMg==", "bodyText": "RFC6265bis", "url": "https://github.com/netty/netty/pull/10050#discussion_r384626622", "createdAt": "2020-02-26T16:53:25Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -119,6 +123,26 @@ public void setHttpOnly(boolean httpOnly) {\n         this.httpOnly = httpOnly;\n     }\n \n+    /**\n+     * Checks to see if this {@link Cookie} can be sent along cross-site requests.\n+     * For more information, please look\n+     * <a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1\">here</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyNjY5OQ==", "bodyText": "RFC6265bis", "url": "https://github.com/netty/netty/pull/10050#discussion_r384626699", "createdAt": "2020-02-26T16:53:31Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -119,6 +123,26 @@ public void setHttpOnly(boolean httpOnly) {\n         this.httpOnly = httpOnly;\n     }\n \n+    /**\n+     * Checks to see if this {@link Cookie} can be sent along cross-site requests.\n+     * For more information, please look\n+     * <a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1\">here</a>\n+     * @return <b>same-site-flag</b> value\n+     */\n+    public SameSite sameSite() {\n+        return sameSite;\n+    }\n+\n+    /**\n+     * Determines if this this {@link Cookie} can be sent along cross-site requests.\n+     * For more information, please look\n+     *  <a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1\">here</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjEwMzI3", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-365210327", "createdAt": "2020-02-26T20:15:31Z", "commit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDoxNTozMlrOFu6qgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDoxNTozMlrOFu6qgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczOTk2OQ==", "bodyText": "@dvlato is there a reason why this can't be static anymore ?", "url": "https://github.com/netty/netty/pull/10050#discussion_r384739969", "createdAt": "2020-02-26T20:15:32Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -143,7 +144,7 @@ public Cookie decode(String header) {\n         return cookieBuilder != null ? cookieBuilder.cookie() : null;\n     }\n \n-    private static class CookieBuilder {\n+    private class CookieBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDQ0OTY3", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-365444967", "createdAt": "2020-02-27T06:45:38Z", "commit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjo0NTozOVrOFvG0Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjo0NzoxMFrOFvG1tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzOTAyMg==", "bodyText": "IMHO, you don't need to throw an IllegalArgumentException from SameSite.of and catch it right after. You could just return null.", "url": "https://github.com/netty/netty/pull/10050#discussion_r384939022", "createdAt": "2020-02-27T06:45:39Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -241,13 +244,20 @@ private void parse7(int nameStart, int valueStart, int valueEnd) {\n             }\n         }\n \n-        private void parse8(int nameStart) {\n+        private void parse8(int nameStart, int valueStart, int valueEnd) {\n             if (header.regionMatches(true, nameStart, CookieHeaderNames.HTTPONLY, 0, 8)) {\n                 httpOnly = true;\n+            } else if (header.regionMatches(true, nameStart, CookieHeaderNames.SAMESITE, 0, 8)) {\n+                String sameSiteValue = computeValue(valueStart, valueEnd);\n+                try {\n+                    sameSite = SameSite.of(sameSiteValue);\n+                } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzOTQ0NQ==", "bodyText": "Please revert to static. That's a general practice in Netty for methods that don't depend on any instance state.", "url": "https://github.com/netty/netty/pull/10050#discussion_r384939445", "createdAt": "2020-02-27T06:47:10Z", "author": {"login": "slandelle"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java", "diffHunk": "@@ -241,13 +244,20 @@ private void parse7(int nameStart, int valueStart, int valueEnd) {\n             }\n         }\n \n-        private void parse8(int nameStart) {\n+        private void parse8(int nameStart, int valueStart, int valueEnd) {\n             if (header.regionMatches(true, nameStart, CookieHeaderNames.HTTPONLY, 0, 8)) {\n                 httpOnly = true;\n+            } else if (header.regionMatches(true, nameStart, CookieHeaderNames.SAMESITE, 0, 8)) {\n+                String sameSiteValue = computeValue(valueStart, valueEnd);\n+                try {\n+                    sameSite = SameSite.of(sameSiteValue);\n+                } catch (IllegalArgumentException e) {\n+                    logger.debug(\"Skipping SameSite attribute because value '{}' is invalid\", sameSiteValue);\n+                }\n             }\n         }\n \n-        private static boolean isValueDefined(int valueStart, int valueEnd) {\n+        private boolean isValueDefined(int valueStart, int valueEnd) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b82151c3d6ef5891c0d321f64c2a71a808deebe"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c82b2c83f7dcf41bdd6ef1541446c43ca86c2e4", "author": {"user": {"login": "a-dlatorre", "name": null}}, "url": "https://github.com/netty/netty/commit/5c82b2c83f7dcf41bdd6ef1541446c43ca86c2e4", "committedDate": "2020-02-27T14:43:49Z", "message": "Drop (currently) invalid SameSite values silently. Usage of Enum.valueOf() removed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940", "author": {"user": {"login": "a-dlatorre", "name": null}}, "url": "https://github.com/netty/netty/commit/74a3675130707e115cd3fda9a67029f44c938940", "committedDate": "2020-02-28T15:05:26Z", "message": "Updated documentation to point to the latest rfc6265 draft."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDY3ODE0", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-366467814", "createdAt": "2020-02-28T15:12:20Z", "commit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxMjoyMVrOFv4Qkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxMjoyMVrOFv4Qkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0OTEzOQ==", "bodyText": "should be non null, according to spec it should fallback to None..?\nhttps://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-4.1\nIf the \"SameSite\" attribute's value is \"Strict\", the cookie will only\nbe sent along with \"same-site\" requests.  If the value is \"Lax\", the\ncookie will be sent with same-site requests, and with \"cross-site\"\ntop-level navigations, as described in Section 5.3.7.1.  If the value\nis \"None\", the cookie will be sent with same-site and cross-site\nrequests.  If the \"SameSite\" attribute's value is something other\nthan these three known keywords, the attribute's value will be\ntreated as \"None\".", "url": "https://github.com/netty/netty/pull/10050#discussion_r385749139", "createdAt": "2020-02-28T15:12:21Z", "author": {"login": "johnou"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java", "diffHunk": "@@ -28,6 +28,35 @@\n \n     public static final String HTTPONLY = \"HTTPOnly\";\n \n+    public static final String SAMESITE = \"SameSite\";\n+\n+    /**\n+     * Possible values for the SameSite attribute.\n+     * See <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05\">changes to RFC6265bis</a>\n+     */\n+    public enum SameSite {\n+        Lax,\n+        Strict,\n+        None;\n+\n+        /**\n+         * Return the enum value corresponding to the passed in same-site-flag, using a case insensitive comparison.\n+         *\n+         * @param name value for the SameSite Attribute\n+         * @return enum value for the provided name or null\n+         */\n+        static SameSite of(String name) {\n+            if (name != null) {\n+                for (SameSite each : SameSite.class.getEnumConstants()) {\n+                    if (each.name().equalsIgnoreCase(name)) {\n+                        return each;\n+                    }\n+                }\n+            }\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDY5NDMx", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-366469431", "createdAt": "2020-02-28T15:14:28Z", "commit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxNDoyOFrOFv4VPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxNDoyOFrOFv4VPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1MDMzNQ==", "bodyText": "missing double quote in the a href breaking javadoc.", "url": "https://github.com/netty/netty/pull/10050#discussion_r385750335", "createdAt": "2020-02-28T15:14:28Z", "author": {"login": "johnou"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java", "diffHunk": "@@ -119,6 +123,26 @@ public void setHttpOnly(boolean httpOnly) {\n         this.httpOnly = httpOnly;\n     }\n \n+    /**\n+     * Checks to see if this {@link Cookie} can be sent along cross-site requests.\n+     * For more information, please look\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05\">here</a>\n+     * @return <b>same-site-flag</b> value\n+     */\n+    public SameSite sameSite() {\n+        return sameSite;\n+    }\n+\n+    /**\n+     * Determines if this this {@link Cookie} can be sent along cross-site requests.\n+     * For more information, please look\n+     *  <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05>here</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDcwNjgw", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-366470680", "createdAt": "2020-02-28T15:16:10Z", "commit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxNjoxMFrOFv4ZJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToxNjoxMFrOFv4ZJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1MTMzMg==", "bodyText": "reference the enum directly instead of using a bareword", "url": "https://github.com/netty/netty/pull/10050#discussion_r385751332", "createdAt": "2020-02-28T15:16:10Z", "author": {"login": "johnou"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java", "diffHunk": "@@ -44,6 +46,9 @@ public void testDecodingSingleCookieV0() {\n                 cookie.maxAge() >= 40 && cookie.maxAge() <= 60);\n         assertEquals(\"/apathsomewhere\", cookie.path());\n         assertTrue(cookie.isSecure());\n+\n+        assertThat(cookie, is(instanceOf(DefaultCookie.class)));\n+        assertEquals(\"None\", ((DefaultCookie) cookie).sameSite().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a3675130707e115cd3fda9a67029f44c938940"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ba54e5f71296b7854cadd9390c44dec32e4d307", "author": {"user": {"login": "a-dlatorre", "name": null}}, "url": "https://github.com/netty/netty/commit/3ba54e5f71296b7854cadd9390c44dec32e4d307", "committedDate": "2020-02-28T18:54:57Z", "message": "fixed missing double quite in href attribute."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Njc4NDI2", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-366678426", "createdAt": "2020-02-28T20:53:08Z", "commit": {"oid": "3ba54e5f71296b7854cadd9390c44dec32e4d307"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjY2ODcy", "url": "https://github.com/netty/netty/pull/10050#pullrequestreview-367266872", "createdAt": "2020-03-02T15:02:26Z", "commit": {"oid": "3ba54e5f71296b7854cadd9390c44dec32e4d307"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 357, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}