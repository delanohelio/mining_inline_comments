{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3ODg2NzM0", "number": 10294, "title": "Guard against re-entrancy issues while draining AbstractCoalescingBuf\u2026", "bodyText": "\u2026ferQueue\nMotivation:\nAbstractCoalescingBufferQueue had a bug which could lead to an empty queue while still report bytes left. This was due the fact that we decremented the pending bytes before draining the queue one-by-one. The problem here is that while the queue is drained we may notify the promise which may add again buffers to the queue for which we never decrement the bytes while we drain these\nModifications:\n\nDecrement the pending bytes every time we drain a buffer from the queue\nAdd unit tests\n\nResult:\nFixes #10286", "createdAt": "2020-05-14T09:59:19Z", "url": "https://github.com/netty/netty/pull/10294", "merged": true, "mergeCommit": {"oid": "75df58a7e160938716146bb761f4099a0a89c38f"}, "closed": true, "closedAt": "2020-05-15T07:51:34Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchKksngH2gAyNDE3ODg2NzM0OjQ2MmRiYjg3YjM1NTJiZmExNDNjOTkyYTMwNWVlMTIyYTdhYTVmMWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchVX57AFqTQxMjIzMzY4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/462dbb87b3552bfa143c992a305ee122a7aa5f1e", "committedDate": "2020-05-14T10:04:43Z", "message": "Guard against re-entrancy issues while draining AbstractCoalescingBufferQueue\n\nMotivation:\n\nAbstractCoalescingBufferQueue had a bug which could lead to an empty queue while still report bytes left. This was due the fact that we decremented the pending bytes before draining the queue one-by-one. The problem here is that while the queue is drained we may notify the promise which may add again buffers to the queue for which we never decrement the bytes while we drain these\n\nModifications:\n\n- Decrement the pending bytes every time we drain a buffer from the queue\n- Add unit tests\n\nResult:\n\nFixes https://github.com/netty/netty/issues/10286"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76d1e3254b539b8bd4b5ab05f44a33afd6d78c7f", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/76d1e3254b539b8bd4b5ab05f44a33afd6d78c7f", "committedDate": "2020-05-14T09:55:47Z", "message": "Guard against re-entrancy issues while draining AbstractCoalescingBufferQueue\n\nMotivation:\n\nAbstractCoalescingBufferQueue had a bug which could lead to an empty queue while still report bytes left. This was due the fact that we decremented the pending bytes before draining the queue one-by-one. The problem here is that while the queue is drained we may notify the promise which may add again buffers to the queue for which we never decrement the bytes while we drain these\n\nModifications:\n\n- Decrement the pending bytes every time we drain a buffer from the queue\n- Add unit tests\n\nResult:\n\nFixes https://github.com/netty/netty/issues/10286"}, "afterCommit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/462dbb87b3552bfa143c992a305ee122a7aa5f1e", "committedDate": "2020-05-14T10:04:43Z", "message": "Guard against re-entrancy issues while draining AbstractCoalescingBufferQueue\n\nMotivation:\n\nAbstractCoalescingBufferQueue had a bug which could lead to an empty queue while still report bytes left. This was due the fact that we decremented the pending bytes before draining the queue one-by-one. The problem here is that while the queue is drained we may notify the promise which may add again buffers to the queue for which we never decrement the bytes while we drain these\n\nModifications:\n\n- Decrement the pending bytes every time we drain a buffer from the queue\n- Add unit tests\n\nResult:\n\nFixes https://github.com/netty/netty/issues/10286"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzI3MTIy", "url": "https://github.com/netty/netty/pull/10294#pullrequestreview-411727122", "createdAt": "2020-05-14T11:52:41Z", "commit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1Mjo0MVrOGVYs1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1Mjo0MVrOGVYs1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3Nzk3Mw==", "bodyText": "If you suppose that\n\"while the queue is drained we may notify the promise which may add again buffers to the queue\", the fix seems not correct enough.\nThrere is raise condition between incrementReadableBytes\nint nextReadableBytes = readableBytes + increment;\n...\nreadableBytes = nextReadableBytes;\n\nand decrementReadableBytes\nreadableBytes -= decrement;\nSeems to me #readableBytes should be AtomicInteger.\nassert readableBytes == 0; // looks cool", "url": "https://github.com/netty/netty/pull/10294#discussion_r425077973", "createdAt": "2020-05-14T11:52:41Z", "author": {"login": "progulin"}, "path": "transport/src/main/java/io/netty/channel/AbstractCoalescingBufferQueue.java", "diffHunk": "@@ -221,28 +222,31 @@ public final void copyTo(AbstractCoalescingBufferQueue dest) {\n      * @param ctx The context to write all elements to.\n      */\n     public final void writeAndRemoveAll(ChannelHandlerContext ctx) {\n-        decrementReadableBytes(readableBytes);\n         Throwable pending = null;\n         ByteBuf previousBuf = null;\n         for (;;) {\n             Object entry = bufAndListenerPairs.poll();\n             try {\n                 if (entry == null) {\n                     if (previousBuf != null) {\n+                        decrementReadableBytes(previousBuf.readableBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTM3ODI1", "url": "https://github.com/netty/netty/pull/10294#pullrequestreview-411937825", "createdAt": "2020-05-14T15:44:55Z", "commit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NDo1NVrOGViiMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NDo1NVrOGViiMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzOTA4OQ==", "bodyText": "consider just doing buffer.release() now that you have the cast, this code is in a try/catch and will ensure all elements are drained.", "url": "https://github.com/netty/netty/pull/10294#discussion_r425239089", "createdAt": "2020-05-14T15:44:55Z", "author": {"login": "Scottmitch"}, "path": "transport/src/main/java/io/netty/channel/AbstractCoalescingBufferQueue.java", "diffHunk": "@@ -335,7 +338,9 @@ private void releaseAndCompleteAll(ChannelFuture future) {\n             }\n             try {\n                 if (entry instanceof ByteBuf) {\n-                    safeRelease(entry);\n+                    ByteBuf buffer = (ByteBuf) entry;\n+                    decrementReadableBytes(buffer.readableBytes());\n+                    safeRelease(buffer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTUxODA4", "url": "https://github.com/netty/netty/pull/10294#pullrequestreview-412151808", "createdAt": "2020-05-14T20:16:48Z", "commit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjMzNjg0", "url": "https://github.com/netty/netty/pull/10294#pullrequestreview-412233684", "createdAt": "2020-05-14T22:39:42Z", "commit": {"oid": "462dbb87b3552bfa143c992a305ee122a7aa5f1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 316, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}