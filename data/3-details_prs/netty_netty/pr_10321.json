{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTQ5NjQ3", "number": 10321, "title": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure", "bodyText": "Motivation:\ncontainsValue() will check if there are multiple values defined in the specific header name, we need to use this method instead of contains() for the Transfer-Encoding header to cover the case that multiple values defined, like: Transfer-Encoding: gzip, chunked\nModification:\nChange from contains() to containsValue() in HttpUtil.isTransferEncodingChunked() method.\nFixes #10320", "createdAt": "2020-05-27T01:19:13Z", "url": "https://github.com/netty/netty/pull/10321", "merged": true, "mergeCommit": {"oid": "de134da720d23909151d20e6af6eb2a96181bf03"}, "closed": true, "closedAt": "2020-06-02T12:29:20Z", "author": {"login": "gaol"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclT7QaAFqTQxODkxNDg1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnUBkygFqTQyMjYyNTA0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTE0ODU2", "url": "https://github.com/netty/netty/pull/10321#pullrequestreview-418914856", "createdAt": "2020-05-27T07:13:46Z", "commit": {"oid": "399a39183f43ffc9104cb6e769c85b24b512bf1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxMzo0NlrOGa8Qgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxNDowNlrOGa8RIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwMzQyNg==", "bodyText": "you need to call c.release();", "url": "https://github.com/netty/netty/pull/10321#discussion_r430903426", "createdAt": "2020-05-27T07:13:46Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java", "diffHunk": "@@ -486,4 +486,23 @@ private static void testInvalidHeaders0(String requestStr) {\n         assertTrue(request.decoderResult().cause() instanceof IllegalArgumentException);\n         assertFalse(channel.finish());\n     }\n+\n+    @Test\n+    public void testTransferCodingGZIPAndChunked() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Host: example.com\\r\\n\" +\n+                \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n+                \"Transfer-Encoding: gzip, chunked\\r\\n\" +\n+                \"\\r\\n\" +\n+                \"71\\r\\n\"\n+                ;\n+        EmbeddedChannel channel = new EmbeddedChannel(new HttpRequestDecoder());\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(requestStr, CharsetUtil.US_ASCII)));\n+        HttpRequest request = channel.readInbound();\n+        assertFalse(request.decoderResult().isFailure());\n+        assertTrue(request.headers().containsValue(\"Transfer-Encoding\", \"chunked\", true));\n+        assertFalse(request.headers().contains(\"Content-Length\"));\n+        LastHttpContent c = channel.readInbound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "399a39183f43ffc9104cb6e769c85b24b512bf1e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwMzU4NQ==", "bodyText": "nit: move the ; one line up", "url": "https://github.com/netty/netty/pull/10321#discussion_r430903585", "createdAt": "2020-05-27T07:14:06Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java", "diffHunk": "@@ -486,4 +486,23 @@ private static void testInvalidHeaders0(String requestStr) {\n         assertTrue(request.decoderResult().cause() instanceof IllegalArgumentException);\n         assertFalse(channel.finish());\n     }\n+\n+    @Test\n+    public void testTransferCodingGZIPAndChunked() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Host: example.com\\r\\n\" +\n+                \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n+                \"Transfer-Encoding: gzip, chunked\\r\\n\" +\n+                \"\\r\\n\" +\n+                \"71\\r\\n\"\n+                ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "399a39183f43ffc9104cb6e769c85b24b512bf1e"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "399a39183f43ffc9104cb6e769c85b24b512bf1e", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/399a39183f43ffc9104cb6e769c85b24b512bf1e", "committedDate": "2020-05-27T01:12:41Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}, "afterCommit": {"oid": "acb2313a76da33492f88166b9d44186e5fb761d7", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/acb2313a76da33492f88166b9d44186e5fb761d7", "committedDate": "2020-05-27T08:09:03Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Mzc5MzUw", "url": "https://github.com/netty/netty/pull/10321#pullrequestreview-419379350", "createdAt": "2020-05-27T16:02:52Z", "commit": {"oid": "acb2313a76da33492f88166b9d44186e5fb761d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMjo1MlrOGbSAnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMjo1MlrOGbSAnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1OTgwNw==", "bodyText": "Consider writing the full HTTP request (including one or two chunks + last (zero) chunk + some trailers) to make sure that decoder's state machine transitions to the correct state and handles the entire request correctly.", "url": "https://github.com/netty/netty/pull/10321#discussion_r431259807", "createdAt": "2020-05-27T16:02:52Z", "author": {"login": "idelpivnitskiy"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java", "diffHunk": "@@ -486,4 +486,23 @@ private static void testInvalidHeaders0(String requestStr) {\n         assertTrue(request.decoderResult().cause() instanceof IllegalArgumentException);\n         assertFalse(channel.finish());\n     }\n+\n+    @Test\n+    public void testTransferCodingGZIPAndChunked() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Host: example.com\\r\\n\" +\n+                \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n+                \"Transfer-Encoding: gzip, chunked\\r\\n\" +\n+                \"\\r\\n\" +\n+                \"71\\r\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb2313a76da33492f88166b9d44186e5fb761d7"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acb2313a76da33492f88166b9d44186e5fb761d7", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/acb2313a76da33492f88166b9d44186e5fb761d7", "committedDate": "2020-05-27T08:09:03Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}, "afterCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/7e98c1a56794fce5ccf562b3968a0d5281b27dd7", "committedDate": "2020-05-29T05:06:56Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODAxNjA5", "url": "https://github.com/netty/netty/pull/10321#pullrequestreview-420801609", "createdAt": "2020-05-29T09:38:41Z", "commit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozODo0MVrOGcV3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozODo0MVrOGcV3LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3MTUwMQ==", "bodyText": "This can be changed to the following code to reduce the trim() operations and also reduce allocations:\nint idx = transferEncoding.indexOf(\",\");\nif (idx != -1) {\n    contentEncoding = transferEncoding.subString(0, idx).trim();\n} else {\n    contentEncoding = transferEncoding.trim();\n}", "url": "https://github.com/netty/netty/pull/10321#discussion_r432371501", "createdAt": "2020-05-29T09:38:41Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java", "diffHunk": "@@ -85,7 +85,15 @@ protected void decode(ChannelHandlerContext ctx, HttpObject msg, List<Object> ou\n                 if (contentEncoding != null) {\n                     contentEncoding = contentEncoding.trim();\n                 } else {\n-                    contentEncoding = IDENTITY;\n+                    String transferEncoding = headers.get(HttpHeaderNames.TRANSFER_ENCODING);\n+                    if (transferEncoding != null) {\n+                        contentEncoding = transferEncoding.trim();\n+                        if (transferEncoding.contains(\",\")) {\n+                            contentEncoding = transferEncoding.split(\",\")[0].trim();\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTcxNjUy", "url": "https://github.com/netty/netty/pull/10321#pullrequestreview-421171652", "createdAt": "2020-05-29T18:00:32Z", "commit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMDozMlrOGcm1LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMzozOFrOGcm66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0OTUxNg==", "bodyText": "Consider using HttpHeaderNames.CONTENT_LENGTH constant.", "url": "https://github.com/netty/netty/pull/10321#discussion_r432649516", "createdAt": "2020-05-29T18:00:32Z", "author": {"login": "idelpivnitskiy"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentDecoderTest.java", "diffHunk": "@@ -563,6 +563,78 @@ public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n         assertEquals(0, content.refCnt());\n     }\n \n+    @Test\n+    public void testTransferCodingGZIP() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\" +\n+                \"Transfer-Encoding: gzip\\r\\n\" +\n+                \"\\r\\n\";\n+        HttpRequestDecoder decoder = new HttpRequestDecoder();\n+        HttpContentDecoder decompressor = new HttpContentDecompressor();\n+        EmbeddedChannel channel = new EmbeddedChannel(decoder, decompressor);\n+\n+        channel.writeInbound(Unpooled.copiedBuffer(requestStr.getBytes()));\n+        channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD));\n+\n+        HttpRequest request = channel.readInbound();\n+        assertTrue(request.decoderResult().isSuccess());\n+        assertFalse(request.headers().contains(\"Content-Length\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MDYzMw==", "bodyText": "Looks like too many \\r\\n. Should we have only 2 pairs instead of 3?", "url": "https://github.com/netty/netty/pull/10321#discussion_r432650633", "createdAt": "2020-05-29T18:02:56Z", "author": {"login": "idelpivnitskiy"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentDecoderTest.java", "diffHunk": "@@ -563,6 +563,78 @@ public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n         assertEquals(0, content.refCnt());\n     }\n \n+    @Test\n+    public void testTransferCodingGZIP() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\" +\n+                \"Transfer-Encoding: gzip\\r\\n\" +\n+                \"\\r\\n\";\n+        HttpRequestDecoder decoder = new HttpRequestDecoder();\n+        HttpContentDecoder decompressor = new HttpContentDecompressor();\n+        EmbeddedChannel channel = new EmbeddedChannel(decoder, decompressor);\n+\n+        channel.writeInbound(Unpooled.copiedBuffer(requestStr.getBytes()));\n+        channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD));\n+\n+        HttpRequest request = channel.readInbound();\n+        assertTrue(request.decoderResult().isSuccess());\n+        assertFalse(request.headers().contains(\"Content-Length\"));\n+\n+        HttpContent content = channel.readInbound();\n+        assertTrue(content.decoderResult().isSuccess());\n+        assertEquals(HELLO_WORLD, content.content().toString(CharsetUtil.US_ASCII));\n+        content.release();\n+\n+        LastHttpContent lastHttpContent = channel.readInbound();\n+        assertTrue(lastHttpContent.decoderResult().isSuccess());\n+        lastHttpContent.release();\n+\n+        assertHasInboundMessages(channel, false);\n+        assertHasOutboundMessages(channel, false);\n+        assertFalse(channel.finish());\n+        channel.releaseInbound();\n+    }\n+\n+    @Test\n+    public void testTransferCodingGZIPAndChunked() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Host: example.com\\r\\n\" +\n+                \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n+                \"Trailer: My-Trailer\\r\\n\" +\n+                \"Transfer-Encoding: gzip, chunked\\r\\n\" +\n+                \"\\r\\n\";\n+        HttpRequestDecoder decoder = new HttpRequestDecoder();\n+        HttpContentDecoder decompressor = new HttpContentDecompressor();\n+        EmbeddedChannel channel = new EmbeddedChannel(decoder, decompressor);\n+\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(requestStr, CharsetUtil.US_ASCII)));\n+\n+        String chunkLength = Integer.toHexString(GZ_HELLO_WORLD.length);\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(chunkLength + \"\\r\\n\", CharsetUtil.US_ASCII)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"\\r\\n\".getBytes(CharsetUtil.US_ASCII))));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"0\\r\\n\", CharsetUtil.US_ASCII)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"My-Trailer: 42\\r\\n\\r\\n\\r\\n\", CharsetUtil.US_ASCII)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MDk4Ng==", "bodyText": "Consider using constants from HttpHeaderNames and HttpHeaderValues.", "url": "https://github.com/netty/netty/pull/10321#discussion_r432650986", "createdAt": "2020-05-29T18:03:38Z", "author": {"login": "idelpivnitskiy"}, "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentDecoderTest.java", "diffHunk": "@@ -563,6 +563,78 @@ public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n         assertEquals(0, content.refCnt());\n     }\n \n+    @Test\n+    public void testTransferCodingGZIP() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\" +\n+                \"Transfer-Encoding: gzip\\r\\n\" +\n+                \"\\r\\n\";\n+        HttpRequestDecoder decoder = new HttpRequestDecoder();\n+        HttpContentDecoder decompressor = new HttpContentDecompressor();\n+        EmbeddedChannel channel = new EmbeddedChannel(decoder, decompressor);\n+\n+        channel.writeInbound(Unpooled.copiedBuffer(requestStr.getBytes()));\n+        channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD));\n+\n+        HttpRequest request = channel.readInbound();\n+        assertTrue(request.decoderResult().isSuccess());\n+        assertFalse(request.headers().contains(\"Content-Length\"));\n+\n+        HttpContent content = channel.readInbound();\n+        assertTrue(content.decoderResult().isSuccess());\n+        assertEquals(HELLO_WORLD, content.content().toString(CharsetUtil.US_ASCII));\n+        content.release();\n+\n+        LastHttpContent lastHttpContent = channel.readInbound();\n+        assertTrue(lastHttpContent.decoderResult().isSuccess());\n+        lastHttpContent.release();\n+\n+        assertHasInboundMessages(channel, false);\n+        assertHasOutboundMessages(channel, false);\n+        assertFalse(channel.finish());\n+        channel.releaseInbound();\n+    }\n+\n+    @Test\n+    public void testTransferCodingGZIPAndChunked() {\n+        String requestStr = \"POST / HTTP/1.1\\r\\n\" +\n+                \"Host: example.com\\r\\n\" +\n+                \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n+                \"Trailer: My-Trailer\\r\\n\" +\n+                \"Transfer-Encoding: gzip, chunked\\r\\n\" +\n+                \"\\r\\n\";\n+        HttpRequestDecoder decoder = new HttpRequestDecoder();\n+        HttpContentDecoder decompressor = new HttpContentDecompressor();\n+        EmbeddedChannel channel = new EmbeddedChannel(decoder, decompressor);\n+\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(requestStr, CharsetUtil.US_ASCII)));\n+\n+        String chunkLength = Integer.toHexString(GZ_HELLO_WORLD.length);\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(chunkLength + \"\\r\\n\", CharsetUtil.US_ASCII)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"\\r\\n\".getBytes(CharsetUtil.US_ASCII))));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"0\\r\\n\", CharsetUtil.US_ASCII)));\n+        assertTrue(channel.writeInbound(Unpooled.copiedBuffer(\"My-Trailer: 42\\r\\n\\r\\n\\r\\n\", CharsetUtil.US_ASCII)));\n+\n+        HttpRequest request = channel.readInbound();\n+        assertTrue(request.decoderResult().isSuccess());\n+        assertTrue(request.headers().containsValue(\"Transfer-Encoding\", \"chunked\", true));\n+        assertFalse(request.headers().contains(\"Content-Length\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cadd572d687471e51646a481b1583bd3a2a1840", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/7cadd572d687471e51646a481b1583bd3a2a1840", "committedDate": "2020-05-30T07:51:28Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e98c1a56794fce5ccf562b3968a0d5281b27dd7", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/7e98c1a56794fce5ccf562b3968a0d5281b27dd7", "committedDate": "2020-05-29T05:06:56Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}, "afterCommit": {"oid": "7cadd572d687471e51646a481b1583bd3a2a1840", "author": {"user": {"login": "gaol", "name": "Lin Gao"}}, "url": "https://github.com/netty/netty/commit/7cadd572d687471e51646a481b1583bd3a2a1840", "committedDate": "2020-05-30T07:51:28Z", "message": "[Issue-10320] More values other than chunked defined in Transfer-Encoding header leads to decode failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjI1MDQy", "url": "https://github.com/netty/netty/pull/10321#pullrequestreview-422625042", "createdAt": "2020-06-02T12:28:57Z", "commit": {"oid": "7cadd572d687471e51646a481b1583bd3a2a1840"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 99, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}