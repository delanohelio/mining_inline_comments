{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NjA4OTQ3", "number": 10459, "title": "Add whitelist entry to BlockHound config to workaround issue when TLS\u2026", "bodyText": "\u20261.3 is enabled and the SslProvider.JDK is used\nMotivation:\nSSLEngineImpl.unwrap(...) may call FileInputStream.read(...) internally when TLS1.3 is used. This will cause an BlockingOperationError when BlockHound is enabled.\nFor more details see https://mail.openjdk.java.net/pipermail/security-dev/2020-August/022271.html\nModifications:\n\nAdd whitelist entry to BlockHound config for now\nUpdate NettyBlockHoundIntegrationTest to include testing for this workaround\n\nResult:\nNo BlockingOperationError when TLS1.3 is used with JDK SSL implementation and BlockHound is enabled", "createdAt": "2020-08-07T13:34:50Z", "url": "https://github.com/netty/netty/pull/10459", "merged": true, "mergeCommit": {"oid": "cd7552f551bc108039ed6637b44507718c7b0446"}, "closed": true, "closedAt": "2020-08-10T09:10:36Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8ke-MgH2gAyNDY0NjA4OTQ3OmIxYzJjOTEyMjI3YzhjY2NhOWY5OTA0NTk4NmU2YmY0MzRhYmQ2YjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9dlqlgBqjM2Mzc2NDk4OTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b1c2c912227c8ccca9f99045986e6bf434abd6b0", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/b1c2c912227c8ccca9f99045986e6bf434abd6b0", "committedDate": "2020-08-07T13:31:57Z", "message": "Add whitelist entry to BlockHound config to workaround issue when TLS1.3 is enabled and the SslProvider.JDK is used\n\nMotivation:\n\nSSLEngineImpl.unwrap(...) may call FileInputStream.read(...) internally when TLS1.3 is used. This will cause an BlockingOperationError when BlockHound is enabled.\n\nFor more details see https://mail.openjdk.java.net/pipermail/security-dev/2020-August/022271.html\n\nModifications:\n\n- Add whitelist entry to BlockHound config for now\n- Update NettyBlockHoundIntegrationTest to include testing for this workaround\n\nResult:\n\nNo BlockingOperationError when TLS1.3 is used with JDK SSL implementation and BlockHound is enabled"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzYwNTg4", "url": "https://github.com/netty/netty/pull/10459#pullrequestreview-463360588", "createdAt": "2020-08-07T14:30:56Z", "commit": {"oid": "b1c2c912227c8ccca9f99045986e6bf434abd6b0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDo1NlrOG9cK4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDo1NlrOG9cK4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3Nzg1Ng==", "bodyText": "This check should be applied to the method testTrustManagerVerifyTLSv13 not this one", "url": "https://github.com/netty/netty/pull/10459#discussion_r467077856", "createdAt": "2020-08-07T14:30:56Z", "author": {"login": "violetagg"}, "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "diffHunk": "@@ -130,40 +130,84 @@ private static void testEventExecutorTakeTask(EventExecutor eventExecutor) throw\n     // Tests copied from io.netty.handler.ssl.SslHandlerTest\n     @Test\n     public void testHandshakeWithExecutorThatExecuteDirectory() throws Exception {\n-        testHandshakeWithExecutor(Runnable::run);\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorThatExecuteDirectoryTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(Runnable::run, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithImmediateEventExecutor() throws Exception {\n-        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE);\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.2\");\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateEventExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE, \"TLSv1.3\");\n     }\n \n     @Test\n     public void testHandshakeWithExecutor() throws Exception {\n         ExecutorService executorService = Executors.newCachedThreadPool();\n         try {\n-            testHandshakeWithExecutor(executorService);\n+            testHandshakeWithExecutor(executorService, \"TLSv1.2\");\n+        } finally {\n+            executorService.shutdown();\n+        }\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutorTLSv13() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        ExecutorService executorService = Executors.newCachedThreadPool();\n+        try {\n+            testHandshakeWithExecutor(executorService, \"TLSv1.3\");\n         } finally {\n             executorService.shutdown();\n         }\n     }\n \n     @Test\n     public void testTrustManagerVerify() throws Exception {\n+        assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c2c912227c8ccca9f99045986e6bf434abd6b0"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e328aa250029ef32925c227f948de767e9f22e5", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/7e328aa250029ef32925c227f948de767e9f22e5", "committedDate": "2020-08-07T14:34:12Z", "message": "Fix assume"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzgyMjU2", "url": "https://github.com/netty/netty/pull/10459#pullrequestreview-463382256", "createdAt": "2020-08-07T14:58:07Z", "commit": {"oid": "7e328aa250029ef32925c227f948de767e9f22e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cd36cbc4b00ce0417361ee99905745c6d37b676", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/9cd36cbc4b00ce0417361ee99905745c6d37b676", "committedDate": "2020-08-10T07:00:38Z", "message": "Fix comment"}, "afterCommit": {"oid": "7e328aa250029ef32925c227f948de767e9f22e5", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/7e328aa250029ef32925c227f948de767e9f22e5", "committedDate": "2020-08-07T14:34:12Z", "message": "Fix assume"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 189, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}