{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxOTAwNTIw", "number": 10876, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDoyNjowN1rOFGu9eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDoyNjowN1rOFGu9eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjA1MTc3OnYy", "diffSide": "LEFT", "path": "transport-native-unix-common/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDoyNjowN1rOIH4Fog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDoyNjowN1rOIH4Fog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEyOTg5MA==", "bodyText": "Removed all this stuff as we can easily share it.", "url": "https://github.com/netty/netty/pull/10876#discussion_r545129890", "createdAt": "2020-12-17T14:26:07Z", "author": {"login": "normanmaurer"}, "path": "transport-native-unix-common/pom.xml", "diffHunk": "@@ -180,136 +122,17 @@\n       <properties>\n         <jni.platform>linux</jni.platform>\n       </properties>\n-      <build>\n-        <plugins>\n-          <plugin>\n-            <artifactId>maven-antrun-plugin</artifactId>\n-            <executions>\n-              <!-- Build the additional JAR that contains the native library. -->\n-              <execution>\n-                <id>native-jar</id>\n-                <phase>package</phase>\n-                <goals>\n-                  <goal>run</goal>\n-                </goals>\n-                <configuration>\n-                  <target>\n-                    <copy todir=\"${nativeJarWorkdir}\">\n-                      <zipfileset src=\"${defaultJarFile}\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${nativeLibOnlyDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+)$\" to=\"META-INF/native/lib/\\1\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${nativeIncludeDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+).h$\" to=\"META-INF/native/include/\\1.h\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${jniUtilIncludeDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+).h$\" to=\"META-INF/native/include/\\1.h\" />\n-                    </copy>\n-                    <jar destfile=\"${nativeJarFile}\" manifest=\"${nativeJarWorkdir}/META-INF/MANIFEST.MF\" basedir=\"${nativeJarWorkdir}\" index=\"true\" excludes=\"META-INF/MANIFEST.MF,META-INF/INDEX.LIST\" />\n-                    <attachartifact file=\"${nativeJarFile}\" classifier=\"${jni.classifier}\" type=\"jar\" />\n-                  </target>\n-                </configuration>\n-              </execution>\n-              <!-- invoke the make file to build a static library -->\n-              <execution>\n-                <id>build-native-lib</id>\n-                <phase>generate-sources</phase>\n-                <goals>\n-                  <goal>run</goal>\n-                </goals>\n-                <configuration>\n-                  <target>\n-                    <exec executable=\"${exe.make}\" failonerror=\"true\" resolveexecutable=\"true\">\n-                      <env key=\"CC\" value=\"${exe.compiler}\" />\n-                      <env key=\"AR\" value=\"${exe.archiver}\" />\n-                      <env key=\"LIB_DIR\" value=\"${nativeLibOnlyDir}\" />\n-                      <env key=\"OBJ_DIR\" value=\"${nativeObjsOnlyDir}\" />\n-                      <env key=\"JNI_PLATFORM\" value=\"${jni.platform}\" />\n-                      <env key=\"CFLAGS\" value=\"-O3 -Werror -Wno-attributes -fPIC -fno-omit-frame-pointer -Wunused-variable -fvisibility=hidden\" />\n-                      <env key=\"LDFLAGS\" value=\"-Wl,--no-as-needed -lrt\" />\n-                      <env key=\"LIB_NAME\" value=\"${nativeLibName}\" />\n-                    </exec>\n-                  </target>\n-                </configuration>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n-      </build>\n     </profile>\n     <profile>\n       <id>linux-aarch64</id>\n       <properties>\n         <!-- use aarch_64 as this is also what os.detected.arch will use on an aarch64 system -->\n+        <nativeLibArch>aarch_64</nativeLibArch>\n         <jni.classifier>${os.detected.name}-aarch_64</jni.classifier>\n         <jni.platform>linux</jni.platform>\n         <exe.compiler>aarch64-linux-gnu-gcc</exe.compiler>\n         <exe.archiver>aarch64-linux-gnu-ar</exe.archiver>\n       </properties>\n-      <build>\n-        <plugins>\n-          <plugin>\n-            <artifactId>maven-antrun-plugin</artifactId>\n-            <executions>\n-              <!-- Build the additional JAR that contains the native library. -->\n-              <execution>\n-                <id>native-jar</id>\n-                <phase>package</phase>\n-                <goals>\n-                  <goal>run</goal>\n-                </goals>\n-                <configuration>\n-                  <target>\n-                    <copy todir=\"${nativeJarWorkdir}\">\n-                      <zipfileset src=\"${defaultJarFile}\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${nativeLibOnlyDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+)$\" to=\"META-INF/native/lib/\\1\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${nativeIncludeDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+).h$\" to=\"META-INF/native/include/\\1.h\" />\n-                    </copy>\n-                    <copy todir=\"${nativeJarWorkdir}\" includeEmptyDirs=\"false\">\n-                      <zipfileset dir=\"${jniUtilIncludeDir}\" />\n-                      <regexpmapper handledirsep=\"yes\" from=\"^(?:[^/]+/)*([^/]+).h$\" to=\"META-INF/native/include/\\1.h\" />\n-                    </copy>\n-                    <jar destfile=\"${nativeJarFile}\" manifest=\"${nativeJarWorkdir}/META-INF/MANIFEST.MF\" basedir=\"${nativeJarWorkdir}\" index=\"true\" excludes=\"META-INF/MANIFEST.MF,META-INF/INDEX.LIST\" />\n-                    <attachartifact file=\"${nativeJarFile}\" classifier=\"${jni.classifier}\" type=\"jar\" />\n-                  </target>\n-                </configuration>\n-              </execution>\n-              <!-- invoke the make file to build a static library -->\n-              <execution>\n-                <id>build-native-lib</id>\n-                <phase>generate-sources</phase>\n-                <goals>\n-                  <goal>run</goal>\n-                </goals>\n-                <configuration>\n-                  <target>\n-                    <exec executable=\"${exe.make}\" failonerror=\"true\" resolveexecutable=\"true\">\n-                      <env key=\"CC\" value=\"${exe.compiler}\" />\n-                      <env key=\"AR\" value=\"${exe.archiver}\" />\n-                      <env key=\"LIB_DIR\" value=\"${nativeLibOnlyDir}\" />\n-                      <env key=\"OBJ_DIR\" value=\"${nativeObjsOnlyDir}\" />\n-                      <env key=\"JNI_PLATFORM\" value=\"${jni.platform}\" />\n-                      <env key=\"CFLAGS\" value=\"-O3 -Werror -Wno-attributes -fPIC -fno-omit-frame-pointer -Wunused-variable -fvisibility=hidden\" />\n-                      <env key=\"LDFLAGS\" value=\"-Wl,--no-as-needed -lrt\" />\n-                      <env key=\"LIB_NAME\" value=\"${nativeLibName}\" />\n-                    </exec>\n-                  </target>\n-                </configuration>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n-      </build>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d41696b4e7f3f0c2ee64fe9db867e4f0d79db26"}, "originalPosition": 221}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3569, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}