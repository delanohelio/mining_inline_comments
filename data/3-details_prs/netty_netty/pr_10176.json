{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjQ5NTk2", "number": 10176, "title": "Correctly propagate exceptions from inbound operations in all cases", "bodyText": "Motivation:\nIn AbstractChannelHandlerContext we had some code where we tried to guard against endless loops caused by exceptions thrown by exceptionCaught(...) that would trigger exceptionCaught again. This code was proplematic for two reasons:\n\nIt is quite expensive as we need to compare all the stacks\nWe may end up not notify another handlers exceptionCaught(...) if in our exeuction stack we triggered actions that will cause an exceptionCaught somewhere else in the pipeline\n\nModifications:\n\nJust remove the detection code as we already handle everything correctly when we invoke exceptionCaught(...)\nAdd unit tests\n\nResult:\nEnsure we always notify correctly and also fixes performance issue reported as #10165", "createdAt": "2020-04-09T07:10:51Z", "url": "https://github.com/netty/netty/pull/10176", "merged": true, "mergeCommit": {"oid": "2c78b4c84fb968c6d130a63bee30cbef706c3da9"}, "closed": true, "closedAt": "2020-04-16T06:56:46Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV3B7zgH2gAyNDAxMjQ5NTk2OjQ2NjViZWJmYmU1YzVmOTU0ZTc0NjVlMDk0Y2YxOTMzOTM2MTZkNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZbRQ8gFqTM5NjI2NjE0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/4665bebfbe5c5f954e7465e094cf193393616d44", "committedDate": "2020-04-09T07:05:23Z", "message": "Correctly propagate exceptions from inbound operations in all cases\n\nMotivation:\n\nIn AbstractChannelHandlerContext we had some code where we tried to guard against endless loops caused by exceptions thrown by exceptionCaught(...) that would trigger exceptionCaught again. This code was proplematic for two reasons:\n - It is quite expensive as we need to compare all the stacks\n - We may end up not notify another handlers exceptionCaught(...) if in our exeuction stack we triggered actions that will cause an exceptionCaught somewhere else in the pipeline\n\nModifications:\n\n- Just remove the detection code as we already handle everything correctly when we invoke exceptionCaught(...)\n- Add unit tests\n\nResult:\n\nEnsure we always notify correctly and also fixes performance issue reported as https://github.com/netty/netty/issues/10165"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTgxOTM3", "url": "https://github.com/netty/netty/pull/10176#pullrequestreview-390581937", "createdAt": "2020-04-09T08:16:25Z", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoxNjoyNlrOGDOVqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoxNjoyNlrOGDOVqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAzMzgzMg==", "bodyText": "Best way to solve the stacktrace inspecting issue :)", "url": "https://github.com/netty/netty/pull/10176#discussion_r406033832", "createdAt": "2020-04-09T08:16:26Z", "author": {"login": "slandelle"}, "path": "transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java", "diffHunk": "@@ -814,39 +814,6 @@ private static void notifyOutboundHandlerException(Throwable cause, ChannelPromi\n         PromiseNotificationUtil.tryFailure(promise, cause, promise instanceof VoidChannelPromise ? null : logger);\n     }\n \n-    private void notifyHandlerException(Throwable cause) {\n-        if (inExceptionCaught(cause)) {\n-            if (logger.isWarnEnabled()) {\n-                logger.warn(\n-                        \"An exception was thrown by a user handler \" +\n-                                \"while handling an exceptionCaught event\", cause);\n-            }\n-            return;\n-        }\n-\n-        invokeExceptionCaught(cause);\n-    }\n-\n-    private static boolean inExceptionCaught(Throwable cause) {\n-        do {\n-            StackTraceElement[] trace = cause.getStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTg3ODc5", "url": "https://github.com/netty/netty/pull/10176#pullrequestreview-390587879", "createdAt": "2020-04-09T08:24:58Z", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoyNDo1OFrOGDOo8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODoyNDo1OFrOGDOo8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAzODc2OQ==", "bodyText": "@trustin @slandelle this is the interesting part in terms of bug-fixing.", "url": "https://github.com/netty/netty/pull/10176#discussion_r406038769", "createdAt": "2020-04-09T08:24:58Z", "author": {"login": "normanmaurer"}, "path": "transport/src/test/java/io/netty/channel/DefaultChannelPipelineTest.java", "diffHunk": "@@ -333,6 +334,87 @@ public void testChannelHandlerContextNavigation() {\n         verifyContextNumber(pipeline, HANDLER_ARRAY_LEN * 2);\n     }\n \n+    @Test(timeout = 3000)\n+    public void testThrowInExceptionCaught() throws InterruptedException {\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        final AtomicInteger counter = new AtomicInteger();\n+        Channel channel = new LocalChannel();\n+        try {\n+            group.register(channel).syncUninterruptibly();\n+            channel.pipeline().addLast(new ChannelInboundHandlerAdapter() {\n+                class TestException extends Exception { }\n+\n+                @Override\n+                public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {\n+                    throw new TestException();\n+                }\n+\n+                @Override\n+                public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n+                    if (cause instanceof TestException) {\n+                        ctx.executor().execute(new Runnable() {\n+                            @Override\n+                            public void run() {\n+                                latch.countDown();\n+                            }\n+                        });\n+                    }\n+                    counter.incrementAndGet();\n+                    throw new Exception();\n+                }\n+            });\n+\n+            channel.pipeline().fireChannelReadComplete();\n+            latch.await();\n+            assertEquals(1, counter.get());\n+        } finally {\n+            channel.close().syncUninterruptibly();\n+        }\n+    }\n+\n+    @Test(timeout = 3000)\n+    public void testThrowInOtherHandlerAfterInvokedFromExceptionCaught() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzY3NzM2", "url": "https://github.com/netty/netty/pull/10176#pullrequestreview-391367736", "createdAt": "2020-04-10T10:01:49Z", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MzI1MzU4", "url": "https://github.com/netty/netty/pull/10176#pullrequestreview-394325358", "createdAt": "2020-04-16T06:14:35Z", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjY2MTQ3", "url": "https://github.com/netty/netty/pull/10176#pullrequestreview-396266147", "createdAt": "2020-04-20T09:00:29Z", "commit": {"oid": "4665bebfbe5c5f954e7465e094cf193393616d44"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 245, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}