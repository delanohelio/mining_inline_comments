{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3ODQwOTE0", "number": 10291, "title": "Use allocation free algorithm to detect CNAME cache loops", "bodyText": "Motivation:\nWe did use a HashSet to detect CNAME cache loops which needs allocations. We can use an algorithm that doesnt need any allocations\nModifications:\nUse algorithm that doesnt need allocations\nResult:\nLess allocations on the slow path", "createdAt": "2020-05-14T08:38:22Z", "url": "https://github.com/netty/netty/pull/10291", "merged": true, "mergeCommit": {"oid": "d1b99b702c3cd76d2b8ed277274b7f18c04db104"}, "closed": true, "closedAt": "2020-05-18T12:28:31Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchJTz3AH2gAyNDE3ODQwOTE0OjZmMmNjNjU4Y2Y4Nzk4MTAxMDQ5ZTMyMmI4OTZiYzE5Mzg4NWZjNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcibRsMAH2gAyNDE3ODQwOTE0OmVjYzQ2OTUzZDVlZDE2OTBhNGM3ZjAyZjc0MDVlZDkwYjVjODMwMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f2cc658cf8798101049e322b896bc193885fc67", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/6f2cc658cf8798101049e322b896bc193885fc67", "committedDate": "2020-05-14T08:36:22Z", "message": "Use allocation free algorithm to detect CNAME cache loops\n\nMotivation:\n\nWe did use a HashSet to detect CNAME cache loops which needs allocations. We can use an algorithm that doesnt need any allocations\n\nModifications:\n\nUse algorithm that doesnt need allocations\n\nResult:\n\nLess allocations on the slow path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjE4NjI1", "url": "https://github.com/netty/netty/pull/10291#pullrequestreview-411618625", "createdAt": "2020-05-14T09:19:36Z", "commit": {"oid": "6f2cc658cf8798101049e322b896bc193885fc67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODk1NDY1", "url": "https://github.com/netty/netty/pull/10291#pullrequestreview-411895465", "createdAt": "2020-05-14T15:01:10Z", "commit": {"oid": "79d510f80941cd77fcce782d898420d0dbf6daf2"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowMToxMFrOGVgiHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowMjozMlrOGVgl4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNjMwMw==", "bodyText": "May want to reference this (instead of or in addition to Guava):\nhttps://en.wikipedia.org/wiki/Cycle_detection#Floyd's_Tortoise_and_Hare", "url": "https://github.com/netty/netty/pull/10291#discussion_r425206303", "createdAt": "2020-05-14T15:01:10Z", "author": {"login": "Bennett-Lynch"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsResolveContext.java", "diffHunk": "@@ -301,20 +300,24 @@ private String cnameResolveFromCache(String name) {\n     }\n \n     private String cnameResolveFromCacheLoop(DnsCnameCache cnameCache, String first, String mapping) {\n-        // Detect loops using a HashSet. We use this as last resort implementation to reduce allocations in the most\n-        // common cases.\n-        Set<String> cnames = new HashSet<String>(4);\n-        cnames.add(first);\n-        cnames.add(mapping);\n+        // Detect loops by advance only every other iteration. This is the same concept as used in guava", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d510f80941cd77fcce782d898420d0dbf6daf2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNjM3Mw==", "bodyText": "Unrelated to this PR but does it make more sense to break or to throw?", "url": "https://github.com/netty/netty/pull/10291#discussion_r425206373", "createdAt": "2020-05-14T15:01:16Z", "author": {"login": "Bennett-Lynch"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsResolveContext.java", "diffHunk": "@@ -301,20 +300,24 @@ private String cnameResolveFromCache(String name) {\n     }\n \n     private String cnameResolveFromCacheLoop(DnsCnameCache cnameCache, String first, String mapping) {\n-        // Detect loops using a HashSet. We use this as last resort implementation to reduce allocations in the most\n-        // common cases.\n-        Set<String> cnames = new HashSet<String>(4);\n-        cnames.add(first);\n-        cnames.add(mapping);\n+        // Detect loops by advance only every other iteration. This is the same concept as used in guava\n+        String otherMapping = first;\n+        boolean advance = false;\n \n         String name = mapping;\n         // Resolve from cnameCache() until there is no more cname entry cached.\n         while ((mapping = cnameCache.get(hostnameWithDot(name))) != null) {\n-            if (!cnames.add(mapping)) {\n+            if (otherMapping.equals(mapping)) {\n                 // Follow CNAME from cache would loop. Lets break here.\n                 break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d510f80941cd77fcce782d898420d0dbf6daf2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNzI2NQ==", "bodyText": "Nit: I find advance = !advance (outside of the if block) a little more intuitive.", "url": "https://github.com/netty/netty/pull/10291#discussion_r425207265", "createdAt": "2020-05-14T15:02:32Z", "author": {"login": "Bennett-Lynch"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsResolveContext.java", "diffHunk": "@@ -301,20 +300,24 @@ private String cnameResolveFromCache(String name) {\n     }\n \n     private String cnameResolveFromCacheLoop(DnsCnameCache cnameCache, String first, String mapping) {\n-        // Detect loops using a HashSet. We use this as last resort implementation to reduce allocations in the most\n-        // common cases.\n-        Set<String> cnames = new HashSet<String>(4);\n-        cnames.add(first);\n-        cnames.add(mapping);\n+        // Detect loops by advance only every other iteration. This is the same concept as used in guava\n+        String otherMapping = first;\n+        boolean advance = false;\n \n         String name = mapping;\n         // Resolve from cnameCache() until there is no more cname entry cached.\n         while ((mapping = cnameCache.get(hostnameWithDot(name))) != null) {\n-            if (!cnames.add(mapping)) {\n+            if (otherMapping.equals(mapping)) {\n                 // Follow CNAME from cache would loop. Lets break here.\n                 break;\n             }\n             name = mapping;\n+            if (advance) {\n+                otherMapping = mapping;\n+                advance = false;\n+            } else {\n+                advance = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d510f80941cd77fcce782d898420d0dbf6daf2"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e67febe719ab6f15104f1905ddd44520a60185", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/f9e67febe719ab6f15104f1905ddd44520a60185", "committedDate": "2020-05-15T07:11:40Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79d510f80941cd77fcce782d898420d0dbf6daf2", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/79d510f80941cd77fcce782d898420d0dbf6daf2", "committedDate": "2020-05-14T10:12:24Z", "message": "Fix typo"}, "afterCommit": {"oid": "f9e67febe719ab6f15104f1905ddd44520a60185", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/f9e67febe719ab6f15104f1905ddd44520a60185", "committedDate": "2020-05-15T07:11:40Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ee26f3c9579420be95e868471a3bf0f7888ef29", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/1ee26f3c9579420be95e868471a3bf0f7888ef29", "committedDate": "2020-05-15T09:23:24Z", "message": "Correctly implement algo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyODA1OTU0", "url": "https://github.com/netty/netty/pull/10291#pullrequestreview-412805954", "createdAt": "2020-05-15T16:43:21Z", "commit": {"oid": "1ee26f3c9579420be95e868471a3bf0f7888ef29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDY2NTQ0", "url": "https://github.com/netty/netty/pull/10291#pullrequestreview-413066544", "createdAt": "2020-05-16T10:33:12Z", "commit": {"oid": "1ee26f3c9579420be95e868471a3bf0f7888ef29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMDozMzoxMlrOGWZnBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxMDozMzoxMlrOGWZnBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE0MTQ0Nw==", "bodyText": "Just out of curiosity ,why you need field  otherMapping  to instead of first  which you never use .", "url": "https://github.com/netty/netty/pull/10291#discussion_r426141447", "createdAt": "2020-05-16T10:33:12Z", "author": {"login": "prgitpr"}, "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsResolveContext.java", "diffHunk": "@@ -300,28 +300,31 @@ private String cnameResolveFromCache(String name) {\n         return cnameResolveFromCacheLoop(cnameCache, first, second);\n     }\n \n-    private String cnameResolveFromCacheLoop(DnsCnameCache cnameCache, String first, String mapping) {\n-        // Detect loops using a HashSet. We use this as last resort implementation to reduce allocations in the most\n-        // common cases.\n-        Set<String> cnames = new HashSet<String>(4);\n-        cnames.add(first);\n-        cnames.add(mapping);\n+    static String cnameResolveFromCacheLoop(DnsCnameCache cnameCache, String first, String mapping) {\n+        // Detect loops by advance only every other iteration.\n+        // See https://en.wikipedia.org/wiki/Cycle_detection#Floyd's_Tortoise_and_Hare\n+        String otherMapping = first;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee26f3c9579420be95e868471a3bf0f7888ef29"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecc46953d5ed1690a4c7f02f7405ed90b5c83026", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/ecc46953d5ed1690a4c7f02f7405ed90b5c83026", "committedDate": "2020-05-18T08:06:16Z", "message": "Simplify"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 313, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}