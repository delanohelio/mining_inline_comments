{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MzU3NTYx", "number": 10480, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjoxOFrOEYFgQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NjowN1rOEYFnAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkxNDU4OnYy", "diffSide": "RIGHT", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjoxOFrOHAOy8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjoxOFrOHAOy8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDQ2NA==", "bodyText": "content => context", "url": "https://github.com/netty/netty/pull/10480#discussion_r470004464", "createdAt": "2020-08-13T14:42:18Z", "author": {"login": "slandelle"}, "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e5049095165d5bdf7df51173a3001eac889f51"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkxNTkxOnYy", "diffSide": "RIGHT", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjozOFrOHAOz3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjozOFrOHAOz3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDcwMg==", "bodyText": "content => context", "url": "https://github.com/netty/netty/pull/10480#discussion_r470004702", "createdAt": "2020-08-13T14:42:38Z", "author": {"login": "slandelle"}, "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n+                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n+        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+    }\n+\n+    @Test\n+    public void testTLSv12CiphersIncluded() throws SSLException  {\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e5049095165d5bdf7df51173a3001eac889f51"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkzMTg3OnYy", "diffSide": "RIGHT", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NjowN1rOHAO9wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NjowN1rOHAO9wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNzIzMg==", "bodyText": "Not found of assertTrue without an explicit error message: failures are very hard to read.", "url": "https://github.com/netty/netty/pull/10480#discussion_r470007232", "createdAt": "2020-08-13T14:46:07Z", "author": {"login": "slandelle"}, "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n+                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n+        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e5049095165d5bdf7df51173a3001eac889f51"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3870, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}