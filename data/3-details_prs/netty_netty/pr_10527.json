{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NjkwNTk4", "number": 10527, "title": "Add `null` rule check in `rules` array of RuleBasedIpFilter", "bodyText": "Motivation:\nWe can filter out null rules while initializing the instance of RuleBasedIpFilter so we don't have to keep checking for null rules while iterating through rules array in for loop which is just a waste of CPU cycles.\nModification:\nAdded null rule check inside the constructor.\nResult:\nNo more wasting CPU cycles on check the null rule each time in for loop and makes the overall operation more faster.", "createdAt": "2020-09-02T09:25:42Z", "url": "https://github.com/netty/netty/pull/10527", "merged": true, "mergeCommit": {"oid": "e051b5f338c3f7b722a65d2dd1ee36178b44dfdd"}, "closed": true, "closedAt": "2020-10-17T18:22:44Z", "author": {"login": "hyperxpro"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdD59rdAH2gAyNDc3NjkwNTk4OjZhODdkNzZlZmIyOWEyYzBkODc5YjgxZDdiMmU3MDMzNmU4ZGNiMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTbANsAFqTUxMDk4NTk4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a87d76efb29a2c0d879b81d7b2e70336e8dcb2d", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/6a87d76efb29a2c0d879b81d7b2e70336e8dcb2d", "committedDate": "2020-08-30T08:30:58Z", "message": "Merge pull request #1 from netty/4.1\n\nUpdate repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11732da88d714f610574f420b8c863f17a7191d2", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/11732da88d714f610574f420b8c863f17a7191d2", "committedDate": "2020-09-02T09:10:21Z", "message": "Merge pull request #2 from netty/4.1\n\nSync"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c03c78690fa3e8bf7eeae4089421ce1711a0af0", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/4c03c78690fa3e8bf7eeae4089421ce1711a0af0", "committedDate": "2020-09-02T09:22:06Z", "message": "Add null check in rules array and update JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzIyMTc1", "url": "https://github.com/netty/netty/pull/10527#pullrequestreview-480722175", "createdAt": "2020-09-02T11:21:45Z", "commit": {"oid": "4c03c78690fa3e8bf7eeae4089421ce1711a0af0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyMTo0NlrOHLqj2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyMjoxMlrOHLqk5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MzY5MQ==", "bodyText": "This is a non-compatible change as a user may have override the method with the throws Exception declaration", "url": "https://github.com/netty/netty/pull/10527#discussion_r481993691", "createdAt": "2020-09-02T11:21:46Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ipfilter/RuleBasedIpFilter.java", "diffHunk": "@@ -24,29 +24,41 @@\n import java.net.SocketAddress;\n \n /**\n+ * <p>\n  * This class allows one to filter new {@link Channel}s based on the\n  * {@link IpFilterRule}s passed to its constructor. If no rules are provided, all connections\n  * will be accepted.\n+ * </p>\n  *\n+ * <p>\n  * If you would like to explicitly take action on rejected {@link Channel}s, you should override\n  * {@link AbstractRemoteAddressFilter#channelRejected(ChannelHandlerContext, SocketAddress)}.\n+ * </p>\n  */\n @Sharable\n public class RuleBasedIpFilter extends AbstractRemoteAddressFilter<InetSocketAddress> {\n \n     private final IpFilterRule[] rules;\n \n-    public RuleBasedIpFilter(IpFilterRule... rules) {\n+    /**\n+     * Create new Instance of {@link RuleBasedIpFilter} and filter incoming connections\n+     * based on their IP address and {@code rules} applied.\n+     *\n+     * @param rules An array of {@link IpFilterRule} containing all rules.\n+     * @throws NullPointerException If {@code rules} array or {@code rule} in\n+     *                              {@code rules} array is {@code null}.\n+     */\n+    public RuleBasedIpFilter(IpFilterRule... rules) throws NullPointerException {\n         this.rules = ObjectUtil.checkNotNull(rules, \"rules\");\n+\n+        for (IpFilterRule rule : this.rules) {\n+            ObjectUtil.checkNotNull(rule, \"rule\");\n+        }\n     }\n \n     @Override\n-    protected boolean accept(ChannelHandlerContext ctx, InetSocketAddress remoteAddress) throws Exception {\n+    protected boolean accept(ChannelHandlerContext ctx, InetSocketAddress remoteAddress) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c03c78690fa3e8bf7eeae4089421ce1711a0af0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5Mzk1OQ==", "bodyText": "This is a non compatible change in behaviour imho...", "url": "https://github.com/netty/netty/pull/10527#discussion_r481993959", "createdAt": "2020-09-02T11:22:12Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ipfilter/RuleBasedIpFilter.java", "diffHunk": "@@ -24,29 +24,41 @@\n import java.net.SocketAddress;\n \n /**\n+ * <p>\n  * This class allows one to filter new {@link Channel}s based on the\n  * {@link IpFilterRule}s passed to its constructor. If no rules are provided, all connections\n  * will be accepted.\n+ * </p>\n  *\n+ * <p>\n  * If you would like to explicitly take action on rejected {@link Channel}s, you should override\n  * {@link AbstractRemoteAddressFilter#channelRejected(ChannelHandlerContext, SocketAddress)}.\n+ * </p>\n  */\n @Sharable\n public class RuleBasedIpFilter extends AbstractRemoteAddressFilter<InetSocketAddress> {\n \n     private final IpFilterRule[] rules;\n \n-    public RuleBasedIpFilter(IpFilterRule... rules) {\n+    /**\n+     * Create new Instance of {@link RuleBasedIpFilter} and filter incoming connections\n+     * based on their IP address and {@code rules} applied.\n+     *\n+     * @param rules An array of {@link IpFilterRule} containing all rules.\n+     * @throws NullPointerException If {@code rules} array or {@code rule} in\n+     *                              {@code rules} array is {@code null}.\n+     */\n+    public RuleBasedIpFilter(IpFilterRule... rules) throws NullPointerException {\n         this.rules = ObjectUtil.checkNotNull(rules, \"rules\");\n+\n+        for (IpFilterRule rule : this.rules) {\n+            ObjectUtil.checkNotNull(rule, \"rule\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c03c78690fa3e8bf7eeae4089421ce1711a0af0"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "206f4ca74d1e20e151bdcb7649eba049b34e85db", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/206f4ca74d1e20e151bdcb7649eba049b34e85db", "committedDate": "2020-09-02T11:29:40Z", "message": "prevent API breakage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1fd900026df7b4c4bb116e9a4ecddbe7019ee4", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/0d1fd900026df7b4c4bb116e9a4ecddbe7019ee4", "committedDate": "2020-09-02T12:07:59Z", "message": "address @chrisvest suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9232102c2cfb52b15acc2b472598f5c6fb8987", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/bf9232102c2cfb52b15acc2b472598f5c6fb8987", "committedDate": "2020-09-02T15:31:20Z", "message": "Only add `not null` rules into List and add `acceptIfNotFound` condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "384954c7afa0d164aadd8c47f1eb1b30dbd52022", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/384954c7afa0d164aadd8c47f1eb1b30dbd52022", "committedDate": "2020-09-02T15:33:44Z", "message": "fix JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MzExMTg1", "url": "https://github.com/netty/netty/pull/10527#pullrequestreview-509311185", "createdAt": "2020-10-15T12:13:10Z", "commit": {"oid": "384954c7afa0d164aadd8c47f1eb1b30dbd52022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxMzoxMFrOHiEu5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjoxMzoxMFrOHiEu5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MTE3NA==", "bodyText": "nit: I would remove \"super fast\" here... what does this even mean ?", "url": "https://github.com/netty/netty/pull/10527#discussion_r505491174", "createdAt": "2020-10-15T12:13:10Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ipfilter/RuleBasedIpFilter.java", "diffHunk": "@@ -22,36 +22,71 @@\n \n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n+ * <p>\n  * This class allows one to filter new {@link Channel}s based on the\n  * {@link IpFilterRule}s passed to its constructor. If no rules are provided, all connections\n  * will be accepted.\n+ * </p>\n  *\n+ * <p>\n  * If you would like to explicitly take action on rejected {@link Channel}s, you should override\n  * {@link AbstractRemoteAddressFilter#channelRejected(ChannelHandlerContext, SocketAddress)}.\n+ * </p>\n+ *\n+ * <p> You can also consider using {@link IpSubnetFilter} which uses Binary Search Algorithm\n+ * for super fast IP Address filtering. </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "384954c7afa0d164aadd8c47f1eb1b30dbd52022"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f8b849bdfcdfe1f80441976c70e0c3de3d938a9", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/0f8b849bdfcdfe1f80441976c70e0c3de3d938a9", "committedDate": "2020-10-16T06:27:33Z", "message": "Fix JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTYzMTEw", "url": "https://github.com/netty/netty/pull/10527#pullrequestreview-510963110", "createdAt": "2020-10-17T07:59:28Z", "commit": {"oid": "0f8b849bdfcdfe1f80441976c70e0c3de3d938a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNzo1OToyOVrOHjYaLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNzo1OToyOVrOHjYaLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MjEyNw==", "bodyText": "nit: Please do use new ArrayList(rules.length)", "url": "https://github.com/netty/netty/pull/10527#discussion_r506862127", "createdAt": "2020-10-17T07:59:29Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ipfilter/RuleBasedIpFilter.java", "diffHunk": "@@ -22,36 +22,71 @@\n \n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n+ * <p>\n  * This class allows one to filter new {@link Channel}s based on the\n  * {@link IpFilterRule}s passed to its constructor. If no rules are provided, all connections\n  * will be accepted.\n+ * </p>\n  *\n+ * <p>\n  * If you would like to explicitly take action on rejected {@link Channel}s, you should override\n  * {@link AbstractRemoteAddressFilter#channelRejected(ChannelHandlerContext, SocketAddress)}.\n+ * </p>\n+ *\n+ * <p> Consider using {@link IpSubnetFilter} for better performance while not as\n+ * general purpose as this filter. </p>\n  */\n @Sharable\n public class RuleBasedIpFilter extends AbstractRemoteAddressFilter<InetSocketAddress> {\n \n-    private final IpFilterRule[] rules;\n+    private final boolean acceptIfNotFound;\n+    private final List<IpFilterRule> rules;\n \n+    /**\n+     * <p> Create new Instance of {@link RuleBasedIpFilter} and filter incoming connections\n+     * based on their IP address and {@code rules} applied. </p>\n+     *\n+     * <p> {@code acceptIfNotFound} is set to {@code true}. </p>\n+     *\n+     * @param rules An array of {@link IpFilterRule} containing all rules.\n+     */\n     public RuleBasedIpFilter(IpFilterRule... rules) {\n-        this.rules = ObjectUtil.checkNotNull(rules, \"rules\");\n+        this(true, rules);\n     }\n \n-    @Override\n-    protected boolean accept(ChannelHandlerContext ctx, InetSocketAddress remoteAddress) throws Exception {\n+    /**\n+     * Create new Instance of {@link RuleBasedIpFilter} and filter incoming connections\n+     * based on their IP address and {@code rules} applied.\n+     *\n+     * @param acceptIfNotFound If {@code true} then accept connection from IP Address if it\n+     *                         doesn't match any rule.\n+     * @param rules            An array of {@link IpFilterRule} containing all rules.\n+     */\n+    public RuleBasedIpFilter(boolean acceptIfNotFound, IpFilterRule... rules) {\n+        ObjectUtil.checkNotNull(rules, \"rules\");\n+\n+        this.acceptIfNotFound = acceptIfNotFound;\n+        this.rules = new ArrayList<IpFilterRule>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8b849bdfcdfe1f80441976c70e0c3de3d938a9"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b26dc5a6e7cef47a67ab9f60d7cd6bf4a3bdcd4", "author": {"user": {"login": "hyperxpro", "name": "Aayush Atharva"}}, "url": "https://github.com/netty/netty/commit/4b26dc5a6e7cef47a67ab9f60d7cd6bf4a3bdcd4", "committedDate": "2020-10-17T08:07:20Z", "message": "use new ArrayList(int)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTg1OTgy", "url": "https://github.com/netty/netty/pull/10527#pullrequestreview-510985982", "createdAt": "2020-10-17T13:29:29Z", "commit": {"oid": "4b26dc5a6e7cef47a67ab9f60d7cd6bf4a3bdcd4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4999, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}