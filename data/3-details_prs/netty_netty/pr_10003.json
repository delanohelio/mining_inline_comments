{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDkwNjk5", "number": 10003, "title": "Remove \"Content-Length\" when decoding HTTP/1.1 message with both \"Tra\u2026", "bodyText": "\u2026nsfer-Encoding: chunked\" and \"Content-Length\"\nMotivation\nAs part of a recent commit for issue #9861 the HttpObjectDecoder was\nchanged to throw an IllegalArgumentException (and produce a failed\ndecoder result) when decoding a message with both \"Transfer-Encoding: chunked\" and \"Content-Length\".\nWhile it seems correct for Netty to try to sanitize these types of\nmessages, the spec explicitly mentions that the Content-Length header\nshould be removed in this scenario.\nIf a message is received with both a Transfer-Encoding and a\nContent-Length header field, the Transfer-Encoding overrides the\nContent-Length. Such a message might indicate an attempt to\nperform request smuggling (Section 9.5) or response splitting\n(Section 9.4) and ought to be handled as an error. A sender MUST\nremove the received Content-Length field prior to forwarding such\na message downstream.\n\nhttps://tools.ietf.org/html/rfc7230#section-3.3.3\nIf a Content-Length header field (section 14.13) is present, its\ndecimal value in OCTETs represents both the entity-length and the\ntransfer-length. The Content-Length header field MUST NOT be sent\nif these two lengths are different (i.e., if a Transfer-Encoding\nheader field is present). If a message is received with both a\nTransfer-Encoding header field and a Content-Length header field,\nthe latter MUST be ignored.\n\nhttps://tools.ietf.org/html/rfc2616#section-4.4\nBoth Nginx 1.15.9 and Tomcat 9.0.31 also opt to remove the header:\nhttps://github.com/nginx/nginx/blob/0ad4393e30c119d250415cb769e3d8bc8dce5186/src/http/ngx_http_request.c#L1946-L1953\nhttps://github.com/apache/tomcat/blob/b693d7c1981fa7f51e58bc8c8e72e3fe80b7b773/java/org/apache/coyote/http11/Http11Processor.java#L747-L755\nModifications\n\nChange the default behavior from throwing an IllegalArgumentException\nto removing the \"Content-Length\" header\nExtract the behavior to a new protected method,\nhandleTransferEncodingChunkedWithContentLength(), that can be overridden to\nchange this behavior (or capture metrics)\n\nResult\nMessages of this nature will now be successfully decoded and have their\n\"Content-Length\" header removed, rather than creating invalid messages\n(decoder result failures). Users will be allowed to override and\nconfigure this behavior.", "createdAt": "2020-02-06T20:13:54Z", "url": "https://github.com/netty/netty/pull/10003", "merged": true, "mergeCommit": {"oid": "629034624626b722128e0fcc6b3ec9d406cb3706"}, "closed": true, "closedAt": "2020-02-10T09:41:58Z", "author": {"login": "Bennett-Lynch"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBweSgAH2gAyMzcyMDkwNjk5OjYzOGQ2NTk2NzVjNjgxNzczYWQxZTQ4MTIwZTNmMmY0MmRiNjc0OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGlWyGAFqTM2Mjg4MjgwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "638d659675c681773ad1e48120e3f2f42db67492", "author": {"user": {"login": "Bennett-Lynch", "name": "Bennett Lynch"}}, "url": "https://github.com/netty/netty/commit/638d659675c681773ad1e48120e3f2f42db67492", "committedDate": "2020-02-06T20:08:32Z", "message": "Remove \"Content-Length\" when decoding HTTP/1.1 message with both \"Transfer-Encoding: chunked\" and \"Content-Length\"\n\nMotivation\n\nAs part of a recent commit for issue\nhttps://github.com/netty/netty/issues/9861 the HttpObjectDecoder was\nchanged to throw an IllegalArgumentException (and produce a failed\ndecoder result) when decoding a message with both \"Transfer-Encoding:\nchunked\" and \"Content-Length\".\n\nWhile it seems correct for Netty to try to sanitize these types of\nmessages, the spec explicitly mentions that the Content-Length header\nshould be *removed* in this scenario.\n\nBoth Nginx 1.15.9 and Tomcat 9.0.31 also opt to remove the header:\nhttps://github.com/apache/tomcat/blob/b693d7c1981fa7f51e58bc8c8e72e3fe80b7b773/java/org/apache/coyote/http11/Http11Processor.java#L747-L755\nhttps://github.com/nginx/nginx/blob/0ad4393e30c119d250415cb769e3d8bc8dce5186/src/http/ngx_http_request.c#L1946-L1953\n\nModifications\n\n* Change the default behavior from throwing an IllegalArgumentException\nto removing the \"Content-Length\" header\n* Extract the behavior to a new protected method,\nhandleChunkedEncodingWithContentLength(), that can be overridden to\nchange this behavior (or capture metrics)\n\nResult\n\nMessages of this nature will now be successfully decoded and have their\n\"Content-Length\" header removed, rather than creating invalid messages\n(decoder result failures). Users will be allowed to override and\nconfigure this behavior."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "508334c6ba1ba048fe99968dd150e2c7dee4bea1", "author": {"user": {"login": "Bennett-Lynch", "name": "Bennett Lynch"}}, "url": "https://github.com/netty/netty/commit/508334c6ba1ba048fe99968dd150e2c7dee4bea1", "committedDate": "2020-02-06T21:16:36Z", "message": "Remove \"Content-Length\" when decoding HTTP/1.1 message with both \"Transfer-Encoding: chunked\" and \"Content-Length\"\n\nMotivation\n\nAs part of a recent commit for issue\nhttps://github.com/netty/netty/issues/9861 the HttpObjectDecoder was\nchanged to throw an IllegalArgumentException (and produce a failed\ndecoder result) when decoding a message with both \"Transfer-Encoding:\nchunked\" and \"Content-Length\".\n\nWhile it seems correct for Netty to try to sanitize these types of\nmessages, the spec explicitly mentions that the Content-Length header\nshould be *removed* in this scenario.\n\n> If a message is received with both a Transfer-Encoding and a\n> Content-Length header field, the Transfer-Encoding overrides the\n> Content-Length. Such a message might indicate an attempt to\n> perform request smuggling (Section 9.5) or response splitting\n> (Section 9.4) and ought to be handled as an error. A sender MUST\n> remove the received Content-Length field prior to forwarding such\n> a message downstream.\n\nhttps://tools.ietf.org/html/rfc7230#section-3.3.3\n\n> If a Content-Length header field (section 14.13) is present, its\n> decimal value in OCTETs represents both the entity-length and the\n> transfer-length. The Content-Length header field MUST NOT be sent\n> if these two lengths are different (i.e., if a Transfer-Encoding\n> header field is present). If a message is received with both a\n> Transfer-Encoding header field and a Content-Length header field,\n> the latter MUST be ignored.\n\nhttps://tools.ietf.org/html/rfc2616#section-4.4\n\nBoth Nginx 1.15.9 and Tomcat 9.0.31 also opt to remove the header:\nhttps://github.com/nginx/nginx/blob/0ad4393e30c119d250415cb769e3d8bc8dce5186/src/http/ngx_http_request.c#L1946-L1953\nhttps://github.com/apache/tomcat/blob/b693d7c1981fa7f51e58bc8c8e72e3fe80b7b773/java/org/apache/coyote/http11/Http11Processor.java#L747-L755\n\nModifications\n\n* Change the default behavior from throwing an IllegalArgumentException\nto removing the \"Content-Length\" header\n* Extract the behavior to a new protected method,\nhandleTransferEncodingChunkedWithContentLength(), that can be overridden\nto change this behavior (or capture metrics)\n\nResult\n\nMessages of this nature will now be successfully decoded and have their\n\"Content-Length\" header removed, rather than creating invalid messages\n(decoder result failures). Users will be allowed to override and\nconfigure this behavior."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32f4f77df91bb495ef20e31c8807d2bb288d7fc6", "author": {"user": {"login": "Bennett-Lynch", "name": "Bennett Lynch"}}, "url": "https://github.com/netty/netty/commit/32f4f77df91bb495ef20e31c8807d2bb288d7fc6", "committedDate": "2020-02-06T21:54:11Z", "message": "Remove \"Content-Length\" when decoding HTTP/1.1 message with both \"Transfer-Encoding: chunked\" and \"Content-Length\"\n\nMotivation\n\nAs part of a recent commit for issue\nhttps://github.com/netty/netty/issues/9861 the HttpObjectDecoder was\nchanged to throw an IllegalArgumentException (and produce a failed\ndecoder result) when decoding a message with both \"Transfer-Encoding:\nchunked\" and \"Content-Length\".\n\nWhile it seems correct for Netty to try to sanitize these types of\nmessages, the spec explicitly mentions that the Content-Length header\nshould be *removed* in this scenario.\n\n> If a message is received with both a Transfer-Encoding and a\n> Content-Length header field, the Transfer-Encoding overrides the\n> Content-Length. Such a message might indicate an attempt to\n> perform request smuggling (Section 9.5) or response splitting\n> (Section 9.4) and ought to be handled as an error. A sender MUST\n> remove the received Content-Length field prior to forwarding such\n> a message downstream.\n\nhttps://tools.ietf.org/html/rfc7230#section-3.3.3\n\n> If a Content-Length header field (section 14.13) is present, its\n> decimal value in OCTETs represents both the entity-length and the\n> transfer-length. The Content-Length header field MUST NOT be sent\n> if these two lengths are different (i.e., if a Transfer-Encoding\n> header field is present). If a message is received with both a\n> Transfer-Encoding header field and a Content-Length header field,\n> the latter MUST be ignored.\n\nhttps://tools.ietf.org/html/rfc2616#section-4.4\n\nBoth Nginx 1.15.9 and Tomcat 9.0.31 also opt to remove the header:\nhttps://github.com/nginx/nginx/blob/0ad4393e30c119d250415cb769e3d8bc8dce5186/src/http/ngx_http_request.c#L1946-L1953\nhttps://github.com/apache/tomcat/blob/b693d7c1981fa7f51e58bc8c8e72e3fe80b7b773/java/org/apache/coyote/http11/Http11Processor.java#L747-L755\n\nModifications\n\n* Change the default behavior from throwing an IllegalArgumentException\nto removing the \"Content-Length\" header\n* Extract the behavior to a new protected method,\nhandleTransferEncodingChunkedWithContentLength(), that can be overridden\nto change this behavior (or capture metrics)\n\nResult\n\nMessages of this nature will now be successfully decoded and have their\n\"Content-Length\" header removed, rather than creating invalid messages\n(decoder result failures). Users will be allowed to override and\nconfigure this behavior."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTg1MTMw", "url": "https://github.com/netty/netty/pull/10003#pullrequestreview-354985130", "createdAt": "2020-02-07T08:07:48Z", "commit": {"oid": "32f4f77df91bb495ef20e31c8807d2bb288d7fc6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODowNzo0OVrOFm1Aiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODowNzo0OVrOFm1Aiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1ODY5OQ==", "bodyText": "@Bennett-Lynch why change this to protected ?", "url": "https://github.com/netty/netty/pull/10003#discussion_r376258699", "createdAt": "2020-02-07T08:07:49Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -112,7 +112,7 @@\n \n     private HttpMessage message;\n     private long chunkSize;\n-    private long contentLength = Long.MIN_VALUE;\n+    protected long contentLength = Long.MIN_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f4f77df91bb495ef20e31c8807d2bb288d7fc6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f", "author": {"user": {"login": "Bennett-Lynch", "name": "Bennett Lynch"}}, "url": "https://github.com/netty/netty/commit/da645c980866ae57a6dbf11f826168ef96ad545f", "committedDate": "2020-02-07T17:31:50Z", "message": "Remove \"Content-Length\" when decoding HTTP/1.1 message with both \"Transfer-Encoding: chunked\" and \"Content-Length\"\n\nMotivation\n\nAs part of a recent commit for issue\nhttps://github.com/netty/netty/issues/9861 the HttpObjectDecoder was\nchanged to throw an IllegalArgumentException (and produce a failed\ndecoder result) when decoding a message with both \"Transfer-Encoding:\nchunked\" and \"Content-Length\".\n\nWhile it seems correct for Netty to try to sanitize these types of\nmessages, the spec explicitly mentions that the Content-Length header\nshould be *removed* in this scenario.\n\n> If a message is received with both a Transfer-Encoding and a\n> Content-Length header field, the Transfer-Encoding overrides the\n> Content-Length. Such a message might indicate an attempt to\n> perform request smuggling (Section 9.5) or response splitting\n> (Section 9.4) and ought to be handled as an error. A sender MUST\n> remove the received Content-Length field prior to forwarding such\n> a message downstream.\n\nhttps://tools.ietf.org/html/rfc7230#section-3.3.3\n\n> If a Content-Length header field (section 14.13) is present, its\n> decimal value in OCTETs represents both the entity-length and the\n> transfer-length. The Content-Length header field MUST NOT be sent\n> if these two lengths are different (i.e., if a Transfer-Encoding\n> header field is present). If a message is received with both a\n> Transfer-Encoding header field and a Content-Length header field,\n> the latter MUST be ignored.\n\nhttps://tools.ietf.org/html/rfc2616#section-4.4\n\nBoth Nginx 1.15.9 and Tomcat 9.0.31 also opt to remove the header:\nhttps://github.com/nginx/nginx/blob/0ad4393e30c119d250415cb769e3d8bc8dce5186/src/http/ngx_http_request.c#L1946-L1953\nhttps://github.com/apache/tomcat/blob/b693d7c1981fa7f51e58bc8c8e72e3fe80b7b773/java/org/apache/coyote/http11/Http11Processor.java#L747-L755\n\nModifications\n\n* Change the default behavior from throwing an IllegalArgumentException\nto removing the \"Content-Length\" header\n* Extract the behavior to a new protected method,\nhandleTransferEncodingChunkedWithContentLength(), that can be overridden\nto change this behavior (or capture metrics)\n\nResult\n\nMessages of this nature will now be successfully decoded and have their\n\"Content-Length\" header removed, rather than creating invalid messages\n(decoder result failures). Users will be allowed to override and\nconfigure this behavior."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODgyODAz", "url": "https://github.com/netty/netty/pull/10003#pullrequestreview-362882803", "createdAt": "2020-02-21T20:00:59Z", "commit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDowMTowMFrOFtDAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDowMTowMFrOFtDAAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3OTM5NQ==", "bodyText": "The phrase \"OUGHT TO\" conveys an optimistic assertion of an implementation behavior that is clearly morally right, and thus does not require substantiation.\n- https://tools.ietf.org/html/rfc6919#section-4\n\nThis seems to imply that this is a general expectation of all implementations. Thus, not doing this seems to indicate a diversion from the RFC spec?", "url": "https://github.com/netty/netty/pull/10003#discussion_r382779395", "createdAt": "2020-02-21T20:01:00Z", "author": {"login": "JLLeitschuh"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -657,6 +643,32 @@ private State readHeaders(ByteBuf buffer) {\n         }\n     }\n \n+    /**\n+     * Invoked when a message with both a \"Transfer-Encoding: chunked\" and a \"Content-Length\" header field is detected.\n+     * The default behavior is to <i>remove</i> the Content-Length field, but this method could be overridden\n+     * to change the behavior (to, e.g., throw an exception and produce an invalid message).\n+     * <p>\n+     * See: https://tools.ietf.org/html/rfc7230#section-3.3.3\n+     * <pre>\n+     *     If a message is received with both a Transfer-Encoding and a\n+     *     Content-Length header field, the Transfer-Encoding overrides the\n+     *     Content-Length.  Such a message might indicate an attempt to\n+     *     perform request smuggling (Section 9.5) or response splitting\n+     *     (Section 9.4) and ought to be handled as an error.  A sender MUST\n+     *     remove the received Content-Length field prior to forwarding such\n+     *     a message downstream.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 349, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}