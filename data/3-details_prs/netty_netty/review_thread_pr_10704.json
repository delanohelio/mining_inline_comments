{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzI4MzQ3", "number": 10704, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxODozNjo0OFrOEu12jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxODozNjo0OFrOEu12jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTUyMjY5OnYy", "diffSide": "RIGHT", "path": "codec-haproxy/src/test/java/io/netty/handler/codec/haproxy/HaProxyMessageEncoderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxODozNjo0OFrOHjfElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxODozNjo0OFrOHjfElQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk3MTI4NQ==", "bodyText": "readBytes(...) creates a new ByteBuf which needs to be released. readSlice returns a ByteBuf that shares the same reference count as the original buffer and so not need to be released", "url": "https://github.com/netty/netty/pull/10704#discussion_r506971285", "createdAt": "2020-10-17T18:36:48Z", "author": {"login": "normanmaurer"}, "path": "codec-haproxy/src/test/java/io/netty/handler/codec/haproxy/HaProxyMessageEncoderTest.java", "diffHunk": "@@ -254,13 +254,13 @@ public void testTLVEncodeProxy() {\n         assertEquals(alpnTlv.typeByteValue(), tlv.readByte());\n         short bufLength = tlv.readShort();\n         assertEquals(helloWorld.array().length, bufLength);\n-        assertEquals(helloWorld, tlv.readBytes(bufLength));\n+        assertEquals(helloWorld, tlv.readSlice(bufLength));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d6f26be9a75fb075f0ea948c88005451f35e7e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3626, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}