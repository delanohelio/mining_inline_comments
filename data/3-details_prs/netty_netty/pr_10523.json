{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTU5NDgy", "number": 10523, "title": "Create a stackless ClosedChannelException to reduce overhead when the\u2026", "bodyText": "\u2026 Channel is closed\nMotivation:\nIn some benchmarks closing the Channel attributes to a lot of overhead due the call of fillInStackTrace(). We should reduce this overhead.\nModifications:\n\nCreate a StacklessClosedChannelException and use it to reduce overhead.\nOnly call ChannelOutboundBuffer.failFlushed(...) when there was a flushed message at all.\n\nResult:\nLess performance overhead when closing the Channel", "createdAt": "2020-09-01T09:47:39Z", "url": "https://github.com/netty/netty/pull/10523", "merged": true, "mergeCommit": {"oid": "4ececfb70d35201f84f30a480e1b5f6f87a370b9"}, "closed": true, "closedAt": "2020-09-01T13:25:41Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEkOopAH2gAyNDc2OTU5NDgyOmQxN2JmOTRjOTA0NGNhNzc1MDRiOWU5MjQ1NWRlYjY2YTI4NzYwOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE7x7cAFqTQ4MDgwMzYwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d17bf94c9044ca77504b9e92455deb66a2876091", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/d17bf94c9044ca77504b9e92455deb66a2876091", "committedDate": "2020-09-01T09:45:30Z", "message": "Create a stackless ClosedChannelException to reduce overhead when the Channel is closed\n\nMotivation:\n\nIn some benchmarks closing the Channel attributes to a lot of overhead due the call of fillInStackTrace(). We should reduce this overhead.\n\nModifications:\n\n- Create a StacklessClosedChannelException and use it to reduce overhead.\n- Only call ChannelOutboundBuffer.failFlushed(...) when there was a flushed message at all.\n\nResult:\n\nLess performance overhead when closing the Channel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NTg1NDU4", "url": "https://github.com/netty/netty/pull/10523#pullrequestreview-479585458", "createdAt": "2020-09-01T10:02:34Z", "commit": {"oid": "d17bf94c9044ca77504b9e92455deb66a2876091"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "195824f85143659c9779baddea57b7bc6cf63a0c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/195824f85143659c9779baddea57b7bc6cf63a0c", "committedDate": "2020-09-01T10:09:14Z", "message": "Use correct class as origin of the exception and fix testcase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODAzNjA2", "url": "https://github.com/netty/netty/pull/10523#pullrequestreview-480803606", "createdAt": "2020-09-02T13:11:52Z", "commit": {"oid": "195824f85143659c9779baddea57b7bc6cf63a0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxMTo1MlrOHLuabQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxMTo1MlrOHLuabQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1NjgxMw==", "bodyText": "Could optimize even further by pre-constructing some instances and reusing them. To make them truly immutable, you have to set false to enableSuppression and writableStackTrace by calling the protected super constructor at Throwable.\nWould be nice if a static factory method is moved before the member fields for consistency.", "url": "https://github.com/netty/netty/pull/10523#discussion_r482056813", "createdAt": "2020-09-02T13:11:52Z", "author": {"login": "trustin"}, "path": "transport/src/main/java/io/netty/channel/StacklessClosedChannelException.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.channel;\n+\n+import io.netty.util.internal.ThrowableUtil;\n+\n+import java.nio.channels.ClosedChannelException;\n+\n+/**\n+ * Cheap {@link ClosedChannelException} that does not fill in the stacktrace.\n+ */\n+final class StacklessClosedChannelException extends ClosedChannelException {\n+\n+    private static final long serialVersionUID = -2214806025529435136L;\n+\n+    private StacklessClosedChannelException() { }\n+\n+    @Override\n+    public Throwable fillInStackTrace() {\n+        return this;\n+    }\n+\n+    /**\n+     * Creates a new {@link StacklessClosedChannelException} which has the origin of the given {@link Class} and method.\n+     */\n+    static StacklessClosedChannelException newInstance(Class<?> clazz, String method) {\n+        return ThrowableUtil.unknownStackTrace(new StacklessClosedChannelException(), clazz, method);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "195824f85143659c9779baddea57b7bc6cf63a0c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4996, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}