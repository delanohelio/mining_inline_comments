{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODI0ODk1", "number": 10223, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMjozMFrOD3jHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMTo1Njo1OVrOD3l-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTczNjYyOnYy", "diffSide": "RIGHT", "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMjozMFrOGN29xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMjozMFrOGN29xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTIyMA==", "bodyText": "the , should be on the previous line", "url": "https://github.com/netty/netty/pull/10223#discussion_r417185220", "createdAt": "2020-04-29T09:32:30Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "diffHunk": "@@ -44,8 +44,8 @@\n final class OpenJdkSelfSignedCertGenerator {\n \n     @SuppressJava6Requirement(reason = \"Usage guarded by dependency check\")\n-    static String[] generate(String fqdn, KeyPair keypair, SecureRandom random, Date notBefore, Date notAfter)\n-            throws Exception {\n+    static String[] generate(String fqdn, KeyPair keypair, SecureRandom random, Date notBefore, Date notAfter\n+            , String algorithm) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1466a863277817377d3a3f2e92b90755fae5aa77"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTczODkxOnYy", "diffSide": "RIGHT", "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMzoxM1rOGN2_Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDozOTozNlrOGN5H7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTU5MQ==", "bodyText": "should we verify that only valid algorithm names are used ? (Like either EC or RSA)", "url": "https://github.com/netty/netty/pull/10223#discussion_r417185591", "createdAt": "2020-04-29T09:33:13Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "diffHunk": "@@ -70,12 +70,12 @@\n \n         // Sign the cert to identify the algorithm that's used.\n         X509CertImpl cert = new X509CertImpl(info);\n-        cert.sign(key, \"SHA256withRSA\");\n+        cert.sign(key, algorithm.equalsIgnoreCase(\"EC\") ? \"SHA256withECDSA\" : \"SHA256withRSA\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1466a863277817377d3a3f2e92b90755fae5aa77"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyMDU5MQ==", "bodyText": "Added check for EC or RSA. If EC, we'll use SHA256withECDSA else SHA256withRSA because RSA is last possible case.", "url": "https://github.com/netty/netty/pull/10223#discussion_r417220591", "createdAt": "2020-04-29T10:39:36Z", "author": {"login": "hyperxpro"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "diffHunk": "@@ -70,12 +70,12 @@\n \n         // Sign the cert to identify the algorithm that's used.\n         X509CertImpl cert = new X509CertImpl(info);\n-        cert.sign(key, \"SHA256withRSA\");\n+        cert.sign(key, algorithm.equalsIgnoreCase(\"EC\") ? \"SHA256withECDSA\" : \"SHA256withRSA\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTU5MQ=="}, "originalCommit": {"oid": "1466a863277817377d3a3f2e92b90755fae5aa77"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTczOTY2OnYy", "diffSide": "RIGHT", "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMzoyNFrOGN2_oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMzoyNFrOGN2_oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTY5Nw==", "bodyText": "see comment above", "url": "https://github.com/netty/netty/pull/10223#discussion_r417185697", "createdAt": "2020-04-29T09:33:24Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.java", "diffHunk": "@@ -70,12 +70,12 @@\n \n         // Sign the cert to identify the algorithm that's used.\n         X509CertImpl cert = new X509CertImpl(info);\n-        cert.sign(key, \"SHA256withRSA\");\n+        cert.sign(key, algorithm.equalsIgnoreCase(\"EC\") ? \"SHA256withECDSA\" : \"SHA256withRSA\");\n \n         // Update the algorithm and sign again.\n         info.set(CertificateAlgorithmId.NAME + '.' + CertificateAlgorithmId.ALGORITHM, cert.get(X509CertImpl.SIG_ALG));\n         cert = new X509CertImpl(info);\n-        cert.sign(key, \"SHA256withRSA\");\n+        cert.sign(key, algorithm.equalsIgnoreCase(\"EC\") ? \"SHA256withECDSA\" : \"SHA256withRSA\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1466a863277817377d3a3f2e92b90755fae5aa77"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjIwNTU1OnYy", "diffSide": "RIGHT", "path": "handler/src/main/java/io/netty/handler/ssl/util/SelfSignedCertificate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMTo1Njo1OVrOGN7eWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMTo1OTo0MFrOGN7jjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1OTA5OQ==", "bodyText": "imho this would be more readable:\nif (!algorithm.equalsIgnoreCase(\"EC\") && !algorithm.equalsIgnoreCase(\"RSA\")) {\n...\n}", "url": "https://github.com/netty/netty/pull/10223#discussion_r417259099", "createdAt": "2020-04-29T11:56:59Z", "author": {"login": "normanmaurer"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/SelfSignedCertificate.java", "diffHunk": "@@ -218,7 +220,11 @@ public SelfSignedCertificate(String fqdn, SecureRandom random, int bits, Date no\n      */\n     public SelfSignedCertificate(String fqdn, SecureRandom random, int bits, Date notBefore, Date notAfter,\n                                  String algorithm) throws CertificateException {\n-        // Generate key pair from specified algorithm.\n+\n+        if (!(algorithm.equalsIgnoreCase(\"EC\") || algorithm.equalsIgnoreCase(\"RSA\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac39b8a36b46742666a9cc85128825a4296c87e6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2MDQzMQ==", "bodyText": "Done", "url": "https://github.com/netty/netty/pull/10223#discussion_r417260431", "createdAt": "2020-04-29T11:59:40Z", "author": {"login": "hyperxpro"}, "path": "handler/src/main/java/io/netty/handler/ssl/util/SelfSignedCertificate.java", "diffHunk": "@@ -218,7 +220,11 @@ public SelfSignedCertificate(String fqdn, SecureRandom random, int bits, Date no\n      */\n     public SelfSignedCertificate(String fqdn, SecureRandom random, int bits, Date notBefore, Date notAfter,\n                                  String algorithm) throws CertificateException {\n-        // Generate key pair from specified algorithm.\n+\n+        if (!(algorithm.equalsIgnoreCase(\"EC\") || algorithm.equalsIgnoreCase(\"RSA\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1OTA5OQ=="}, "originalCommit": {"oid": "ac39b8a36b46742666a9cc85128825a4296c87e6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3418, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}