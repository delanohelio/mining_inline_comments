{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTQxOTA4", "number": 10559, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMjoyNVrOEhy0Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMjoyNVrOEhy0Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODcwOTc5OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IovArrays.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMjoyNVrOHPTtRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODoxMTo1OFrOHPUA1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzU3Mg==", "bodyText": "should be < instead of <= right?", "url": "https://github.com/netty/netty/pull/10559#discussion_r485813572", "createdAt": "2020-09-09T18:02:25Z", "author": {"login": "1Jo1"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IovArrays.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.channel.uring;\n+\n+import io.netty.channel.unix.IovArray;\n+\n+final class IovArrays {\n+\n+    private final IovArray[] iovArrays;\n+    private int iovArrayIdx;\n+\n+    IovArrays(int numArrays) {\n+        iovArrays = new IovArray[numArrays];\n+         for (int i = 0 ; i < iovArrays.length; i++) {\n+             iovArrays[i] = new IovArray();\n+         }\n+    }\n+\n+    /**\n+     * Return the next {@link IovArray} to use which has space left in it. Otherwise returns {@code null} if there\n+     * is no {@link IovArray} which has some space left.\n+     */\n+    IovArray next() {\n+        IovArray iovArray = iovArrays[iovArrayIdx];\n+        if (iovArray.isFull()) {\n+            if (iovArrayIdx < iovArrays.length - 1) {\n+                // There is another array left that we can use, increment the index and use it.\n+                iovArrayIdx++;\n+                iovArray = iovArrays[iovArrayIdx];\n+            }\n+        }\n+        return iovArray.isFull() ? null : iovArray;\n+    }\n+\n+    /**\n+     * Clear all {@link IovArray}s that were used since the last time this method was called.\n+     */\n+    void clear() {\n+        for (int i = 0; i <= iovArrayIdx; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a8766a0d0176c51b49701d0770cb90e41f8c182"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxODU4Mg==", "bodyText": "Nope as this is the idx", "url": "https://github.com/netty/netty/pull/10559#discussion_r485818582", "createdAt": "2020-09-09T18:11:58Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IovArrays.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.channel.uring;\n+\n+import io.netty.channel.unix.IovArray;\n+\n+final class IovArrays {\n+\n+    private final IovArray[] iovArrays;\n+    private int iovArrayIdx;\n+\n+    IovArrays(int numArrays) {\n+        iovArrays = new IovArray[numArrays];\n+         for (int i = 0 ; i < iovArrays.length; i++) {\n+             iovArrays[i] = new IovArray();\n+         }\n+    }\n+\n+    /**\n+     * Return the next {@link IovArray} to use which has space left in it. Otherwise returns {@code null} if there\n+     * is no {@link IovArray} which has some space left.\n+     */\n+    IovArray next() {\n+        IovArray iovArray = iovArrays[iovArrayIdx];\n+        if (iovArray.isFull()) {\n+            if (iovArrayIdx < iovArrays.length - 1) {\n+                // There is another array left that we can use, increment the index and use it.\n+                iovArrayIdx++;\n+                iovArray = iovArrays[iovArrayIdx];\n+            }\n+        }\n+        return iovArray.isFull() ? null : iovArray;\n+    }\n+\n+    /**\n+     * Clear all {@link IovArray}s that were used since the last time this method was called.\n+     */\n+    void clear() {\n+        for (int i = 0; i <= iovArrayIdx; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzU3Mg=="}, "originalCommit": {"oid": "5a8766a0d0176c51b49701d0770cb90e41f8c182"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3727, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}