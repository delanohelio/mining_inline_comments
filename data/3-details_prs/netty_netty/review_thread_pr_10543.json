{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNjE1Mzkw", "number": 10543, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1Njo0MFrOEhYAaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo1Nzo1MVrOEhz9fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDMxNzg3OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo1Njo0MFrOHOqCiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDoyNzo1MFrOHPtQgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA==", "bodyText": "@njhill is this safe using a shared read buffer with multiple io ring event loops..?", "url": "https://github.com/netty/netty/pull/10543#discussion_r485130888", "createdAt": "2020-09-08T18:56:40Z", "author": {"login": "johnou"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0NTgwNw==", "bodyText": "@johnou yeah should be save I guess, however it's odd :)", "url": "https://github.com/netty/netty/pull/10543#discussion_r485445807", "createdAt": "2020-09-09T08:48:59Z", "author": {"login": "1Jo1"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NDQ0MQ==", "bodyText": "Well there is no sync across event loops so I don't see how this is safe.. is the operation atomic or something?", "url": "https://github.com/netty/netty/pull/10543#discussion_r485644441", "createdAt": "2020-09-09T14:12:20Z", "author": {"login": "johnou"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NTkwOQ==", "bodyText": "@johnou its safe because we basically don't care about what we read... we just need to read.", "url": "https://github.com/netty/netty/pull/10543#discussion_r485645909", "createdAt": "2020-09-09T14:14:18Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwMjU1Ng==", "bodyText": "@johnou yep what @normanmaurer said :) ... though I wonder might it be better for it to be padded, not sure if there are any false sharing implications", "url": "https://github.com/netty/netty/pull/10543#discussion_r485702556", "createdAt": "2020-09-09T15:27:43Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTQ0NA==", "bodyText": "@njhill yeah... maybe just use one per EventLoop, 8 more bytes really don't matter :)", "url": "https://github.com/netty/netty/pull/10543#discussion_r485721444", "createdAt": "2020-09-09T15:54:21Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NzQzNg==", "bodyText": "Technically 16 bytes with the instance field :)", "url": "https://github.com/netty/netty/pull/10543#discussion_r485767436", "createdAt": "2020-09-09T16:47:28Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc3MzM5OA==", "bodyText": "true... that said thats fine as well :D", "url": "https://github.com/netty/netty/pull/10543#discussion_r485773398", "createdAt": "2020-09-09T16:54:35Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMjE5Mg==", "bodyText": "thanks for making the change, for me it was a huge code smell \ud83d\udc4d", "url": "https://github.com/netty/netty/pull/10543#discussion_r486232192", "createdAt": "2020-09-10T10:27:50Z", "author": {"login": "johnou"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODEzNTY2OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo1NDo1NVrOHPOG4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo0NzoxN1rOHPTLyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTgyNw==", "bodyText": "maybe change the name to make it clear that this one is blocking", "url": "https://github.com/netty/netty/pull/10543#discussion_r485721827", "createdAt": "2020-09-09T15:54:55Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -171,7 +171,8 @@ static jint netty_io_uring_enter(JNIEnv *env, jclass class1, jint ring_fd, jint\n }\n \n static jint netty_epoll_native_eventFd(JNIEnv* env, jclass clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwNTAwMA==", "bodyText": "@normanmaurer done", "url": "https://github.com/netty/netty/pull/10543#discussion_r485805000", "createdAt": "2020-09-09T17:47:17Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -171,7 +171,8 @@ static jint netty_io_uring_enter(JNIEnv *env, jclass class1, jint ring_fd, jint\n }\n \n static jint netty_epoll_native_eventFd(JNIEnv* env, jclass clazz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTgyNw=="}, "originalCommit": {"oid": "374e121afa4fcfce431b83dd8fc94e400538c35c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODg5NzkxOnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo1Nzo1MVrOHPVhfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTo0MDo1N1rOHPXLag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzMyNg==", "bodyText": "nit: please rename as well", "url": "https://github.com/netty/netty/pull/10543#discussion_r485843326", "createdAt": "2020-09-09T18:57:51Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -111,15 +111,13 @@ static RingBuffer createRingBuffer(Runnable submissionCallback) {\n \n     public static native void eventFdWrite(int fd, long value);\n \n-    public static native void eventFdRead(int fd);\n-\n     public static FileDescriptor newEventFd() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac82b215092317c9814060a6146e252b79a2670"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MDQ0Mg==", "bodyText": "done", "url": "https://github.com/netty/netty/pull/10543#discussion_r485870442", "createdAt": "2020-09-09T19:40:57Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -111,15 +111,13 @@ static RingBuffer createRingBuffer(Runnable submissionCallback) {\n \n     public static native void eventFdWrite(int fd, long value);\n \n-    public static native void eventFdRead(int fd);\n-\n     public static FileDescriptor newEventFd() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzMyNg=="}, "originalCommit": {"oid": "7ac82b215092317c9814060a6146e252b79a2670"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3709, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}