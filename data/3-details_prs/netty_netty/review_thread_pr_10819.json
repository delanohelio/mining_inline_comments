{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Mzk2MjI1", "number": 10819, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTowNDoyOFrOE8q2JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTowNDoyOFrOE8q2JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDUyMDA1OnYy", "diffSide": "RIGHT", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTowNDoyOFrOH47q1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTowNDoyOFrOH47q1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ1OTkyNA==", "bodyText": "Based on the other tests I wanted to do something like this:\n        verify(voidPromise, never()).addListener(any(GenericFutureListener.class));\n        verify(ctx.channel(), times(1)).newPromise();\n        verify(promise, times(1)).addListener(any(GenericFutureListener.class));\nI'm not used to this testing suite, so please advise how can I get these checks to work... \ud83d\ude4f", "url": "https://github.com/netty/netty/pull/10819#discussion_r529459924", "createdAt": "2020-11-24T11:04:28Z", "author": {"login": "valerauko"}, "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java", "diffHunk": "@@ -691,6 +691,14 @@ public ChannelFuture answer(InvocationOnMock invocation) throws Throwable {\n         verify(pipeline).fireExceptionCaught(cause);\n     }\n \n+    @Test\n+    public void canCloseStreamWithVoidPromise() throws Exception {\n+        handler = newHandler();\n+        handler.closeStream(stream, ctx.voidPromise());\n+        verify(stream, times(1)).close();\n+        verifyNoMoreInteractions(stream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "495ecd79896df11e5f607b2b4879dfc1f0cf363f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3551, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}