{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Njc3OTQ3", "number": 10529, "title": "Fix ByteBufUtil.getBytes() incorrectly sharing the array in some cases", "bodyText": "Motivation:\nIf ByteBufUtil.getBytes() is called with copy=false, it does not correctly check that the underlying array can be shared in some cases.\nIn particular:\n\nIt does not check that the arrayOffset() is zero. This causes it to incorrectly return the underlying array if the other conditions are met. The returned array will be longer than requested, with additional unwanted bytes at its start.\nIt assumes that the capacity() of the ByteBuf is equal to the backing array length. This is not true for some types of ByteBuf, such as PooledHeapByteBuf. This causes it to incorrectly return the underlying array if the other conditions are met. The returned array will be longer than requested, with additional unwanted bytes at its end.\n\nModifications:\nThis commit fixes the two bugs by:\n\nChecking that the arrayOffset() is zero before returning the underlying array.\nComparing the requested length to the underlying array's length, rather than the ByteBuf's capacity, before returning the underlying array.\n\nThis commit also adds a series of test cases for ByteBufUtil.getBytes().\nResult:\nByteBufUtil.getBytes() now correctly checks whether the underlying array can be shared or not.\nThe test cases will ensure the bug is not reintroduced in the future.", "createdAt": "2020-09-03T14:34:57Z", "url": "https://github.com/netty/netty/pull/10529", "merged": true, "mergeCommit": {"oid": "a99a8f2a1f49f4b3d63a028896bbc7e2d36646d2"}, "closed": true, "closedAt": "2020-09-04T11:15:36Z", "author": {"login": "grahamedgecombe"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFSNN1gFqTQ4MTk0Nzg2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFfdIcAFqTQ4MjM5ODE4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxOTQ3ODYy", "url": "https://github.com/netty/netty/pull/10529#pullrequestreview-481947862", "createdAt": "2020-09-03T15:19:34Z", "commit": {"oid": "a76580bbc673561281613964b65eb8381bc2febb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOTozNFrOHMrpOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOTozNFrOHMrpOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MDAyNg==", "bodyText": "How about calling this bytes instead of v?", "url": "https://github.com/netty/netty/pull/10529#discussion_r483060026", "createdAt": "2020-09-03T15:19:34Z", "author": {"login": "hyperxpro"}, "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java", "diffHunk": "@@ -906,11 +906,12 @@ public static ByteBuf threadLocalDirectBuffer() {\n         }\n \n         if (buf.hasArray()) {\n-            if (copy || start != 0 || length != capacity) {\n-                int baseOffset = buf.arrayOffset() + start;\n-                return Arrays.copyOfRange(buf.array(), baseOffset, baseOffset + length);\n+            int baseOffset = buf.arrayOffset() + start;\n+            byte[] v = buf.array();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76580bbc673561281613964b65eb8381bc2febb"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "307253ec0efc5b2dabdd7717523b4271c07ba12d", "author": {"user": {"login": "grahamedgecombe", "name": "Graham Edgecombe"}}, "url": "https://github.com/netty/netty/commit/307253ec0efc5b2dabdd7717523b4271c07ba12d", "committedDate": "2020-09-03T16:49:26Z", "message": "Fix ByteBufUtil.getBytes() incorrectly sharing the array in some cases\n\nMotivation:\n\nIf ByteBufUtil.getBytes() is called with copy=false, it does not\ncorrectly check that the underlying array can be shared in some cases.\n\nIn particular:\n\n* It does not check that the arrayOffset() is zero. This causes it to\n  incorrectly return the underlying array if the other conditions are\n  met. The returned array will be longer than requested, with additional\n  unwanted bytes at its start.\n\n* It assumes that the capacity() of the ByteBuf is equal to the backing\n  array length. This is not true for some types of ByteBuf, such as\n  PooledHeapByteBuf. This causes it to incorrectly return the underlying\n  array if the other conditions are met. The returned array will be\n  longer than requested, with additional unwanted bytes at its end.\n\nModifications:\n\nThis commit fixes the two bugs by:\n\n* Checking that the arrayOffset() is zero before returning the\n  underlying array.\n\n* Comparing the requested length to the underlying array's length,\n  rather than the ByteBuf's capacity, before returning the underlying\n  array.\n\nThis commit also adds a series of test cases for ByteBufUtil.getBytes().\n\nResult:\n\nByteBufUtil.getBytes() now correctly checks whether the underlying array\ncan be shared or not.\n\nThe test cases will ensure the bug is not reintroduced in the future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78d6fdf18d0d6d4d3b7e473cf1be15ba301e915", "author": {"user": {"login": "grahamedgecombe", "name": "Graham Edgecombe"}}, "url": "https://github.com/netty/netty/commit/e78d6fdf18d0d6d4d3b7e473cf1be15ba301e915", "committedDate": "2020-09-03T16:49:48Z", "message": "Rename v to bytes for consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a76580bbc673561281613964b65eb8381bc2febb", "author": {"user": {"login": "grahamedgecombe", "name": "Graham Edgecombe"}}, "url": "https://github.com/netty/netty/commit/a76580bbc673561281613964b65eb8381bc2febb", "committedDate": "2020-09-03T14:03:59Z", "message": "Fix ByteBufUtil.getBytes() incorrectly sharing the array in some cases\n\nMotivation:\n\nIf ByteBufUtil.getBytes() is called with copy=false, it does not\ncorrectly check that the underlying array can be shared in some cases.\n\nIn particular:\n\n* It does not check that the arrayOffset() is zero. This causes it to\n  incorrectly return the underlying array if the other conditions are\n  met. The returned array will be longer than requested, with additional\n  unwanted bytes at its start.\n\n* It assumes that the capacity() of the ByteBuf is equal to the backing\n  array length. This is not true for some types of ByteBuf, such as\n  PooledHeapByteBuf. This causes it to incorrectly return the underlying\n  array if the other conditions are met. The returned array will be\n  longer than requested, with additional unwanted bytes at its end.\n\nModifications:\n\nThis commit fixes the two bugs by:\n\n* Checking that the arrayOffset() is zero before returning the\n  underlying array.\n\n* Comparing the requested length to the underlying array's length,\n  rather than the ByteBuf's capacity, before returning the underlying\n  array.\n\nThis commit also adds a series of test cases for ByteBufUtil.getBytes().\n\nResult:\n\nByteBufUtil.getBytes() now correctly checks whether the underlying array\ncan be shared or not.\n\nThe test cases will ensure the bug is not reintroduced in the future."}, "afterCommit": {"oid": "e78d6fdf18d0d6d4d3b7e473cf1be15ba301e915", "author": {"user": {"login": "grahamedgecombe", "name": "Graham Edgecombe"}}, "url": "https://github.com/netty/netty/commit/e78d6fdf18d0d6d4d3b7e473cf1be15ba301e915", "committedDate": "2020-09-03T16:49:48Z", "message": "Rename v to bytes for consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzk4MTgy", "url": "https://github.com/netty/netty/pull/10529#pullrequestreview-482398182", "createdAt": "2020-09-04T06:45:45Z", "commit": {"oid": "e78d6fdf18d0d6d4d3b7e473cf1be15ba301e915"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}