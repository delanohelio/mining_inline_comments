{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTY4MjY3", "number": 10807, "title": "Let object serialisation exceptions propagate in the Object Echo example", "bodyText": "Motivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\nModification:\nAdd a listener to the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\nThis fixes #10777", "createdAt": "2020-11-18T13:00:07Z", "url": "https://github.com/netty/netty/pull/10807", "merged": true, "mergeCommit": {"oid": "3354c7b0bf977cabfd0097f80973a9175788a8a6"}, "closed": true, "closedAt": "2020-11-19T07:10:18Z", "author": {"login": "chrisvest"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddt1yXgFqTUzMzQyMzczMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddw0vEgBqjQwMTE2MTIzNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDIzNzMw", "url": "https://github.com/netty/netty/pull/10807#pullrequestreview-533423730", "createdAt": "2020-11-18T13:05:17Z", "commit": {"oid": "a6407100f42e71f36911281f50bfd430d24416b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzowNToxN1rOH1sxwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzowNToxN1rOH1sxwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA3MDIwOQ==", "bodyText": "@chrisvest this doesn't work as this will block the eventloop. Use a ChannelFutureListener", "url": "https://github.com/netty/netty/pull/10807#discussion_r526070209", "createdAt": "2020-11-18T13:05:17Z", "author": {"login": "normanmaurer"}, "path": "example/src/main/java/io/netty/example/objectecho/ObjectEchoClientHandler.java", "diffHunk": "@@ -41,9 +42,10 @@ public ObjectEchoClientHandler() {\n     }\n \n     @Override\n-    public void channelActive(ChannelHandlerContext ctx) {\n+    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n         // Send the first message if this handler is a client-side handler.\n-        ctx.writeAndFlush(firstMessage);\n+        ChannelFuture future = ctx.writeAndFlush(firstMessage);\n+        future.sync(); // Let object serialisation exceptions propagate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6407100f42e71f36911281f50bfd430d24416b5"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6407100f42e71f36911281f50bfd430d24416b5", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/a6407100f42e71f36911281f50bfd430d24416b5", "committedDate": "2020-11-18T12:59:13Z", "message": "Let object serialisation exceptions propagate in the Object Echo example\n\nMotivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\n\nModification:\nSync the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\n\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\n\nThis fixes #10777"}, "afterCommit": {"oid": "d70f73fa5e6166529150f51e61e70c443086fb7d", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/d70f73fa5e6166529150f51e61e70c443086fb7d", "committedDate": "2020-11-18T13:15:00Z", "message": "Let object serialisation exceptions propagate in the Object Echo example\n\nMotivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\n\nModification:\nAdd a listener to the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\n\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\n\nThis fixes #10777"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDQ1MjA0", "url": "https://github.com/netty/netty/pull/10807#pullrequestreview-533445204", "createdAt": "2020-11-18T13:29:37Z", "commit": {"oid": "d70f73fa5e6166529150f51e61e70c443086fb7d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDQ1NDQ4", "url": "https://github.com/netty/netty/pull/10807#pullrequestreview-533445448", "createdAt": "2020-11-18T13:29:56Z", "commit": {"oid": "d70f73fa5e6166529150f51e61e70c443086fb7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzoyOTo1NlrOH1t2tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzoyOTo1NlrOH1t2tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA4Nzg2Mg==", "bodyText": "please revert this change ^^", "url": "https://github.com/netty/netty/pull/10807#discussion_r526087862", "createdAt": "2020-11-18T13:29:56Z", "author": {"login": "normanmaurer"}, "path": "example/src/main/java/io/netty/example/objectecho/ObjectEchoClientHandler.java", "diffHunk": "@@ -41,9 +45,10 @@ public ObjectEchoClientHandler() {\n     }\n \n     @Override\n-    public void channelActive(ChannelHandlerContext ctx) {\n+    public void channelActive(ChannelHandlerContext ctx) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d70f73fa5e6166529150f51e61e70c443086fb7d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08b496140139544aa945ddd74db9080a7445fd47", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/08b496140139544aa945ddd74db9080a7445fd47", "committedDate": "2020-11-18T16:33:45Z", "message": "Let object serialisation exceptions propagate in the Object Echo example\n\nMotivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\n\nModification:\nAdd a listener to the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\n\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\n\nThis fixes #10777"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d70f73fa5e6166529150f51e61e70c443086fb7d", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/d70f73fa5e6166529150f51e61e70c443086fb7d", "committedDate": "2020-11-18T13:15:00Z", "message": "Let object serialisation exceptions propagate in the Object Echo example\n\nMotivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\n\nModification:\nAdd a listener to the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\n\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\n\nThis fixes #10777"}, "afterCommit": {"oid": "08b496140139544aa945ddd74db9080a7445fd47", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/08b496140139544aa945ddd74db9080a7445fd47", "committedDate": "2020-11-18T16:33:45Z", "message": "Let object serialisation exceptions propagate in the Object Echo example\n\nMotivation:\nPeople may use the object serialisation example as a vehicle to test out sending their own objects across the wire.\nIf those objects are not actually serialisable for some reason, then we need to let the exception propagate so that this becomes obvious to people.\n\nModification:\nAdd a listener to the future that sends the first serialisable message, so that we ensure that any exceptions that shows up during serialisation becomes visible.\nWithout this, the state of the future that sent the first message was never checked or inspected anywhere.\n\nResult:\nSerialisation bugs in code derived from the Object Echo example are much easier to diagnose.\n\nThis fixes #10777"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4849, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}