{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDg2ODg4", "number": 10304, "title": "Dequeue all cached messages and destroy the queue instance after removing the FlowControlHandler from channel pipeline.", "bodyText": "Motivation:\nThe FlowControlHandler may cache the received messages in a queue in order to do the flow control. However, if this handler is manually removed from pipeline during runtime, those cached messages might not be passed to the next channel handler forever.\nModification:\nDequeue all these cached messages and call ChannelHandlerContext.fireChannelRead(...) in handlerRemoved(...) method.\nResult:\nAvoid losing the received messages.", "createdAt": "2020-05-17T09:38:13Z", "url": "https://github.com/netty/netty/pull/10304", "merged": true, "mergeCommit": {"oid": "f66412c84c57f77915accb003dec8dc9b3896afe"}, "closed": true, "closedAt": "2020-05-19T07:46:13Z", "author": {"login": "seedeed"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciHs7bgH2gAyNDE5MDg2ODg4Ojg4ZjA3NmZhYzQ1YWQ0ZTJmOGI1YjhjZTA2OGRkYWFmZWEzMmUxZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcivkw0AFqTQxNDE4Mjc5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed", "author": {"user": {"login": "seedeed", "name": "feijermu"}}, "url": "https://github.com/netty/netty/commit/88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed", "committedDate": "2020-05-17T09:17:55Z", "message": "Dequeue all cached messages and destroy the queue instance after removing the FlowControlHandler from channel pipeline."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzQwNDU0", "url": "https://github.com/netty/netty/pull/10304#pullrequestreview-413340454", "createdAt": "2020-05-18T07:39:11Z", "commit": {"oid": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOGWq67w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOGWq67w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyNTA3MQ==", "bodyText": "You need to add:\nReferenceCountUtil.release(msg);", "url": "https://github.com/netty/netty/pull/10304#discussion_r426425071", "createdAt": "2020-05-18T07:39:11Z", "author": {"login": "normanmaurer"}, "path": "handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java", "diffHunk": "@@ -479,6 +479,64 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) {\n         assertFalse(channel.finish());\n     }\n \n+    @Test\n+    public void testRemoveFlowControl() throws Exception {\n+        final CountDownLatch latch = new CountDownLatch(3);\n+\n+        ChannelInboundHandlerAdapter handler = new ChannelDuplexHandler() {\n+            @Override\n+            public void channelActive(ChannelHandlerContext ctx) throws Exception {\n+                //do the first read\n+                ctx.read();\n+                super.channelActive(ctx);\n+            }\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n+                latch.countDown();\n+                super.channelRead(ctx, msg);\n+            }\n+        };\n+\n+        FlowControlHandler flow = new FlowControlHandler() {\n+            private int num;\n+            @Override\n+            public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {\n+                super.channelRead(ctx, msg);\n+                ++num;\n+                if (num >= 3) {\n+                    //We have received 3 messages. Remove myself later\n+                    final ChannelHandler handler = this;\n+                    ctx.channel().eventLoop().execute(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            ctx.pipeline().remove(handler);\n+                        }\n+                    });\n+                }\n+            }\n+        };\n+        ChannelInboundHandlerAdapter tail = new ChannelInboundHandlerAdapter() {\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) {\n+                //consume this msg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ef4dd8b026074072a25de8bbfc4335f4c0122ab", "author": {"user": {"login": "seedeed", "name": "feijermu"}}, "url": "https://github.com/netty/netty/commit/5ef4dd8b026074072a25de8bbfc4335f4c0122ab", "committedDate": "2020-05-18T14:06:22Z", "message": "Fix test case issue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTgyNzky", "url": "https://github.com/netty/netty/pull/10304#pullrequestreview-414182792", "createdAt": "2020-05-19T07:45:12Z", "commit": {"oid": "5ef4dd8b026074072a25de8bbfc4335f4c0122ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 322, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}