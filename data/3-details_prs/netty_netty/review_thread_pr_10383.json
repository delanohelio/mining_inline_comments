{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTY1NDQz", "number": 10383, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTozNTo0OFrOEKDmLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowNjozNlrOEKHTeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTgwMTQwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTozNTo0OFrOGq4Peg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMjowNzo1MlrOGq5Rmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNDg0Mg==", "bodyText": "Can you please revert any change which is just reformatting ?", "url": "https://github.com/netty/netty/pull/10383#discussion_r447614842", "createdAt": "2020-06-30T11:35:48Z", "author": {"login": "normanmaurer"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -56,23 +56,22 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      * Returns a new instance of a {@link ResourceLeakDetector} with the given resource class.\n      *\n      * @param resource the resource class used to initialize the {@link ResourceLeakDetector}\n-     * @param <T> the type of the resource class\n+     * @param <T>      the type of the resource class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87531c7cb87c3038d052481f45c38b3643130a00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNTg5MQ==", "bodyText": "ok,i will revert any code format", "url": "https://github.com/netty/netty/pull/10383#discussion_r447615891", "createdAt": "2020-06-30T11:37:56Z", "author": {"login": "skyguard1"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -56,23 +56,22 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      * Returns a new instance of a {@link ResourceLeakDetector} with the given resource class.\n      *\n      * @param resource the resource class used to initialize the {@link ResourceLeakDetector}\n-     * @param <T> the type of the resource class\n+     * @param <T>      the type of the resource class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNDg0Mg=="}, "originalCommit": {"oid": "87531c7cb87c3038d052481f45c38b3643130a00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxODE3Nw==", "bodyText": "Sorry, forgive me for not understanding the formatting style of netty code, if there is pr in the future, I will pay attention to this", "url": "https://github.com/netty/netty/pull/10383#discussion_r447618177", "createdAt": "2020-06-30T11:42:32Z", "author": {"login": "skyguard1"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -56,23 +56,22 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      * Returns a new instance of a {@link ResourceLeakDetector} with the given resource class.\n      *\n      * @param resource the resource class used to initialize the {@link ResourceLeakDetector}\n-     * @param <T> the type of the resource class\n+     * @param <T>      the type of the resource class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNDg0Mg=="}, "originalCommit": {"oid": "87531c7cb87c3038d052481f45c38b3643130a00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYzMTc3MQ==", "bodyText": "@skyguard1 don't worry... thanks for the PR :)", "url": "https://github.com/netty/netty/pull/10383#discussion_r447631771", "createdAt": "2020-06-30T12:07:52Z", "author": {"login": "normanmaurer"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -56,23 +56,22 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      * Returns a new instance of a {@link ResourceLeakDetector} with the given resource class.\n      *\n      * @param resource the resource class used to initialize the {@link ResourceLeakDetector}\n-     * @param <T> the type of the resource class\n+     * @param <T>      the type of the resource class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNDg0Mg=="}, "originalCommit": {"oid": "87531c7cb87c3038d052481f45c38b3643130a00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDQwODkwOnYy", "diffSide": "LEFT", "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowNjozNlrOGq-FHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowMDo0OVrOGrURUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxMDQ5Mg==", "bodyText": "What about to add a check ObjectUtil.checkPositive(samplingInterval, \"samplingInterval\") ?", "url": "https://github.com/netty/netty/pull/10383#discussion_r447710492", "createdAt": "2020-06-30T14:06:36Z", "author": {"login": "amizurov"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -88,7 +88,7 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      */\n     @SuppressWarnings(\"deprecation\")\n     public <T> ResourceLeakDetector<T> newResourceLeakDetector(Class<T> resource, int samplingInterval) {\n-        return newResourceLeakDetector(resource, ResourceLeakDetector.SAMPLING_INTERVAL, Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac7a965f4686dfda3983ba53d9bf4c48d1ec27d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NDA2Nw==", "bodyText": "Yes, this is feasible. It is possible that this parameter is the user's configuration. Is it appropriate to make an assertion here?@normanmaurer", "url": "https://github.com/netty/netty/pull/10383#discussion_r448074067", "createdAt": "2020-07-01T02:00:49Z", "author": {"login": "skyguard1"}, "path": "common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java", "diffHunk": "@@ -88,7 +88,7 @@ public static void setResourceLeakDetectorFactory(ResourceLeakDetectorFactory fa\n      */\n     @SuppressWarnings(\"deprecation\")\n     public <T> ResourceLeakDetector<T> newResourceLeakDetector(Class<T> resource, int samplingInterval) {\n-        return newResourceLeakDetector(resource, ResourceLeakDetector.SAMPLING_INTERVAL, Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxMDQ5Mg=="}, "originalCommit": {"oid": "aac7a965f4686dfda3983ba53d9bf4c48d1ec27d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3827, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}