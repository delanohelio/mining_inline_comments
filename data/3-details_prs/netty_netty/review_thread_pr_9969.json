{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTg1MzU3", "number": 9969, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozMToyNFrODbGVJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozMToyNFrODbGVJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQxODYzOnYy", "diffSide": "RIGHT", "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozMToyNFrOFiZAaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozMToyNFrOFiZAaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNTYwOA==", "bodyText": "nit: static ?", "url": "https://github.com/netty/netty/pull/9969#discussion_r371605608", "createdAt": "2020-01-28T04:31:24Z", "author": {"login": "normanmaurer"}, "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java", "diffHunk": "@@ -66,4 +92,89 @@ public void testBlockingCallsInNettyThreads() throws Exception {\n             assertTrue(\"Blocking call was reported\", throwable.getMessage().contains(\"Blocking call\"));\n         }\n     }\n+\n+    // Tests copied from io.netty.handler.ssl.SslHandlerTest\n+    @Test\n+    public void testHandshakeWithExecutorThatExecuteDirectory() throws Exception {\n+        testHandshakeWithExecutor(Runnable::run);\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateExecutor() throws Exception {\n+        testHandshakeWithExecutor(ImmediateExecutor.INSTANCE);\n+    }\n+\n+    @Test\n+    public void testHandshakeWithImmediateEventExecutor() throws Exception {\n+        testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE);\n+    }\n+\n+    @Test\n+    public void testHandshakeWithExecutor() throws Exception {\n+        ExecutorService executorService = Executors.newCachedThreadPool();\n+        try {\n+            testHandshakeWithExecutor(executorService);\n+        } finally {\n+            executorService.shutdown();\n+        }\n+    }\n+\n+    private void testHandshakeWithExecutor(Executor executor) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91dfa283fd33411739e70fed00b3651331942fa9"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3463, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}