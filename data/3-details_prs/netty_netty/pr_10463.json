{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NDEzMjc5", "number": 10463, "title": "Use strerror_r for JNI error messages.", "bodyText": "Motivation:\nWe previously relied on strerror, but this function is unfortunately not thread-safe.\nModification:\nThe use of strerror has been changed to strerror_r, which is thread-safe.\nThis function has a more complicated API, and has portability concerns that needs to be handled.\nThis accounts for the relatively large increase in lines of code.\nResult:\nError messages from JNI are now always generated in a thread-safe way.", "createdAt": "2020-08-10T10:25:47Z", "url": "https://github.com/netty/netty/pull/10463", "merged": true, "mergeCommit": {"oid": "8007f907ddab1c46efd5016e83d0fb5819e42099"}, "closed": true, "closedAt": "2020-08-11T07:58:57Z", "author": {"login": "chrisvest"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9fif2AH2gAyNDY1NDEzMjc5OjZhNDg0ZWY0NjljZGU0NjNiYTM4MzE1ZTRmMjk5MjBhYmRjMmY0OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9kpzHAFqTQ2NDM3OTcwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a484ef469cde463ba38315e4f29920abdc2f495", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/6a484ef469cde463ba38315e4f29920abdc2f495", "committedDate": "2020-08-10T10:20:12Z", "message": "Use `strerror_r` for JNI error messages\n\nMotivation:\nWe previously relied on `strerror`, but this function is unfortunately not thread-safe.\n\nModification:\nThe use of `strerror` has been changed to `strerror_r`, which is thread-safe.\nThis function has a more complicated API, and has portability concerns that needs to be handled.\nThis accounts for the relatively large increase in lines of code.\n\nResult:\nError messages from JNI are now always generated in a thread-safe way."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321", "author": {"user": {"login": "chrisvest", "name": "Chris Vest"}}, "url": "https://github.com/netty/netty/commit/d57fa8ad5580e0bd5b382ca943bed3a55a6fa321", "committedDate": "2020-08-10T10:20:12Z", "message": "Don't pretend to handle allocation failures when building JNI error messages\n\nMotivation:\nThe code gave the impression that `calloc` allocation failures were handled, when in reality the\ncode would crash. It's better to not pretend to handle the allocation failure.\n\nModification:\nRemove the allocation failure error handling, since it just marginally delayed a crash.\n\nResult:\nWithout the error handling, the code will now crash on allocation failure, in a location\nthat makes it more clear what happened."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTMyMTgx", "url": "https://github.com/netty/netty/pull/10463#pullrequestreview-464132181", "createdAt": "2020-08-10T10:59:18Z", "commit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1OToxOFrOG-J9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1OToxOFrOG-J9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyODA2Mw==", "bodyText": "do we need to check for tmp == NULL ?\nhttps://linux.die.net/man/3/strerror_r", "url": "https://github.com/netty/netty/pull/10463#discussion_r467828063", "createdAt": "2020-08-10T10:59:18Z", "author": {"login": "normanmaurer"}, "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c", "diffHunk": "@@ -29,12 +29,59 @@ static jclass portUnreachableExceptionClass = NULL;\n static jclass closedChannelExceptionClass = NULL;\n static jmethodID closedChannelExceptionMethodId = NULL;\n \n+/**\n+ Our `strerror_r` wrapper makes sure that the function is XSI compliant,\n+ even on platforms where the GNU variant is exposed.\n+ Note: `strerrbuf` must be initialized to all zeros prior to calling this function.\n+ XSI or GNU functions do not have such a requirement, but our wrappers do.\n+ */\n+#if (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        return strerror_r(errnum, strerrbuf, buflen);\n+    }\n+#else\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        char* tmp = strerror_r(errnum, strerrbuf, buflen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Mzc5NzA2", "url": "https://github.com/netty/netty/pull/10463#pullrequestreview-464379706", "createdAt": "2020-08-10T16:17:42Z", "commit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 192, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}