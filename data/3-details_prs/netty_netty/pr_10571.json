{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NDgxNTM1", "number": 10571, "title": "Simplify JNI init code", "bodyText": "Motivation:\nUsing classes which are not provided by the JDK itself in JNI is\nproblematic when shading may be used by customers of the library. Also\nit makes the maintainance of the code often more complicated.\nModifications:\n\nOnly use classes which are provided by the JDK in the JNI code\nCleanup\n\nResult:\nEasier to maintain code", "createdAt": "2020-09-14T09:41:50Z", "url": "https://github.com/netty/netty/pull/10571", "merged": true, "mergeCommit": {"oid": "0ef8fa47e517f4e2656afeabc3356a84624610ef"}, "closed": true, "closedAt": "2020-09-15T08:41:07Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIv5V4AH2gAyNDg2NDgxNTM1OjJmY2Y0OTA1NDA1YmViYTI1YWE2YmVmNzI1YTAyM2U3MGE2YzE3Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJCbLbgH2gAyNDg2NDgxNTM1OjU2MzI1YjY0NjQxMTM3ZTRmOTE1NDNhMDFmNDE5ZjY3MjNhNjQxNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/2fcf4905405beba25aa6bef725a023e70a6c1737", "committedDate": "2020-09-14T09:36:48Z", "message": "Simplify JNI init code\n\nMotivation:\n\nUsing classes which are not provided by the JDK itself in JNI is\nproblematic when shading may be used by customers of the library. Also\nit makes the maintainance of the code often more complicated.\n\nModifications:\n\n- Only us classes which are provided by the JDK in the JNI code\n- Cleanup\n\nResult:\n\nEasier to maintain code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NTkwNjg3", "url": "https://github.com/netty/netty/pull/10571#pullrequestreview-487590687", "createdAt": "2020-09-14T09:46:55Z", "commit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo0Njo1NVrOHRMF-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo0Njo1NVrOHRMF-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NTk3OQ==", "bodyText": "Idea is nice: I would just put somewhere the expected (constant) named indexes of the parameters.\nIf exposed that would help users a bit (although won't rely on the order/value of them)", "url": "https://github.com/netty/netty/pull/10571#discussion_r487785979", "createdAt": "2020-09-14T09:46:55Z", "author": {"login": "franz1981"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -92,15 +91,43 @@ public void run() {\n     }\n \n     static RingBuffer createRingBuffer(int ringSize, Runnable submissionCallback) {\n-        //Todo throw Exception if it's null\n-        return ioUringSetup(ringSize, submissionCallback);\n+        long[][] values = ioUringSetup(ringSize);\n+        assert values.length == 2;\n+        long[] submissionQueueArgs = values[0];\n+        assert submissionQueueArgs.length == 11;\n+        IOUringSubmissionQueue submissionQueue = new IOUringSubmissionQueue(\n+                submissionQueueArgs[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODMxNDE4", "url": "https://github.com/netty/netty/pull/10571#pullrequestreview-487831418", "createdAt": "2020-09-14T14:31:03Z", "commit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozMTowNFrOHRX1rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozOToxOVrOHRYONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3ODQxNA==", "bodyText": "We don't need to store ring_sz for either CQ or SQ. It's only used for unmap and we can just calculate it there.", "url": "https://github.com/netty/netty/pull/10571#discussion_r487978414", "createdAt": "2020-09-14T14:31:04Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -260,29 +244,37 @@ static jobject netty_io_uring_setup(JNIEnv *env, jclass class1, jint entries, jo\n         return NULL;\n     }\n \n-    jobject ioUringSubmissionQueue = (*env)->NewObject(\n-        env, ioUringSubmissionQueueClass, ioUringSubmissionQueueMethodId,\n-        (jlong)io_uring_ring.sq.khead, (jlong)io_uring_ring.sq.ktail,\n+    jlong submissionArrayElements[] = {\n+        (jlong)io_uring_ring.sq.khead,\n+        (jlong)io_uring_ring.sq.ktail,\n         (jlong)io_uring_ring.sq.kring_mask,\n-        (jlong)io_uring_ring.sq.kring_entries, (jlong)io_uring_ring.sq.kflags,\n-        (jlong)io_uring_ring.sq.kdropped, (jlong)io_uring_ring.sq.array,\n-        (jlong)io_uring_ring.sq.sqes, (jlong)io_uring_ring.sq.ring_sz,\n-        (jlong)io_uring_ring.cq.ring_ptr, (jint)ring_fd, submitCallback);\n-\n-    jobject ioUringCompletionQueue = (*env)->NewObject(\n-        env, ioUringCompletionQueueClass, ioUringCommpletionQueueMethodId,\n-        (jlong)io_uring_ring.cq.khead, (jlong)io_uring_ring.cq.ktail,\n+        (jlong)io_uring_ring.sq.kring_entries,\n+        (jlong)io_uring_ring.sq.kflags,\n+        (jlong)io_uring_ring.sq.kdropped,\n+        (jlong)io_uring_ring.sq.array,\n+        (jlong)io_uring_ring.sq.sqes,\n+        (jlong)io_uring_ring.sq.ring_sz,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDY5NQ==", "bodyText": "I don't think we need to pass the ringFd twice here or submissionQueueRingSize, and we can pass completionQueueRingEntries instead of completionQueueRingSize.\ni.e. number of args can be reduced by 2", "url": "https://github.com/netty/netty/pull/10571#discussion_r487984695", "createdAt": "2020-09-14T14:39:19Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -114,7 +141,11 @@ public static FileDescriptor newBlockingEventFd() {\n         return new FileDescriptor(blockingEventFd());\n     }\n \n-    public static native void ioUringExit(RingBuffer ringBuffer);\n+    public static native void ioUringExit(long submissionQueueArrayAddress, int submissionQueueRingEntries,\n+                                          long submissionQueueRingAddress, int submissionQueueRingSize,\n+                                          int submissionQueueRingFd,\n+                                          long completionQueueRingAddress, int completionQueueRingSize,\n+                                          int completionQueueRingfd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56325b64641137e4f91543a01f419f6723a64166", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/56325b64641137e4f91543a01f419f6723a64166", "committedDate": "2020-09-15T07:12:03Z", "message": "cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 46, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}