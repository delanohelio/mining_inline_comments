{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NDEzMjc5", "number": 10463, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1OToxOFrOEWvsxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1OToxOFrOEWvsxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjg1NjM5OnYy", "diffSide": "RIGHT", "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1OToxOFrOG-J9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo1ODo1MFrOG-PwEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyODA2Mw==", "bodyText": "do we need to check for tmp == NULL ?\nhttps://linux.die.net/man/3/strerror_r", "url": "https://github.com/netty/netty/pull/10463#discussion_r467828063", "createdAt": "2020-08-10T10:59:18Z", "author": {"login": "normanmaurer"}, "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c", "diffHunk": "@@ -29,12 +29,59 @@ static jclass portUnreachableExceptionClass = NULL;\n static jclass closedChannelExceptionClass = NULL;\n static jmethodID closedChannelExceptionMethodId = NULL;\n \n+/**\n+ Our `strerror_r` wrapper makes sure that the function is XSI compliant,\n+ even on platforms where the GNU variant is exposed.\n+ Note: `strerrbuf` must be initialized to all zeros prior to calling this function.\n+ XSI or GNU functions do not have such a requirement, but our wrappers do.\n+ */\n+#if (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        return strerror_r(errnum, strerrbuf, buflen);\n+    }\n+#else\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        char* tmp = strerror_r(errnum, strerrbuf, buflen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg2NTc5Ng==", "bodyText": "I've look at both https://linux.die.net/man/3/strerror_r and https://man7.org/linux/man-pages/man3/strerror.3.html and I don't see a case where the GNU specific strerror_r would return NULL. It either allocates a new string, or references a static string.", "url": "https://github.com/netty/netty/pull/10463#discussion_r467865796", "createdAt": "2020-08-10T12:22:29Z", "author": {"login": "chrisvest"}, "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c", "diffHunk": "@@ -29,12 +29,59 @@ static jclass portUnreachableExceptionClass = NULL;\n static jclass closedChannelExceptionClass = NULL;\n static jmethodID closedChannelExceptionMethodId = NULL;\n \n+/**\n+ Our `strerror_r` wrapper makes sure that the function is XSI compliant,\n+ even on platforms where the GNU variant is exposed.\n+ Note: `strerrbuf` must be initialized to all zeros prior to calling this function.\n+ XSI or GNU functions do not have such a requirement, but our wrappers do.\n+ */\n+#if (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        return strerror_r(errnum, strerrbuf, buflen);\n+    }\n+#else\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        char* tmp = strerror_r(errnum, strerrbuf, buflen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyODA2Mw=="}, "originalCommit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMjk2Mg==", "bodyText": "ok", "url": "https://github.com/netty/netty/pull/10463#discussion_r467922962", "createdAt": "2020-08-10T13:58:50Z", "author": {"login": "normanmaurer"}, "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c", "diffHunk": "@@ -29,12 +29,59 @@ static jclass portUnreachableExceptionClass = NULL;\n static jclass closedChannelExceptionClass = NULL;\n static jmethodID closedChannelExceptionMethodId = NULL;\n \n+/**\n+ Our `strerror_r` wrapper makes sure that the function is XSI compliant,\n+ even on platforms where the GNU variant is exposed.\n+ Note: `strerrbuf` must be initialized to all zeros prior to calling this function.\n+ XSI or GNU functions do not have such a requirement, but our wrappers do.\n+ */\n+#if (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        return strerror_r(errnum, strerrbuf, buflen);\n+    }\n+#else\n+    static inline int strerror_r_xsi(int errnum, char *strerrbuf, size_t buflen) {\n+        char* tmp = strerror_r(errnum, strerrbuf, buflen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyODA2Mw=="}, "originalCommit": {"oid": "d57fa8ad5580e0bd5b382ca943bed3a55a6fa321"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3868, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}