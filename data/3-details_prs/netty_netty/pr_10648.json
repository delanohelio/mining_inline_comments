{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODEyMTM5", "number": 10648, "title": "Avoid integer overflow in ByteBuf.ensureWritable", "bodyText": "Motivation:\n\nTo make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\nAbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\nTest added for correct behaviour in AbstractByteBufTest\n\nResult:\n\nCalls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)", "createdAt": "2020-10-06T20:19:19Z", "url": "https://github.com/netty/netty/pull/10648", "merged": true, "mergeCommit": {"oid": "d3a41b8b9a53da8f9f4dc25203f42ce43eb5b488"}, "closed": true, "closedAt": "2020-10-12T07:23:33Z", "author": {"login": "mkavanagh"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQNXGKgBqjM4NTA2NzQ1MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRHPQkgBqjM4NjI1NjUwOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f0bb59c556bea651a14c23b89866ee603630b63", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/4f0bb59c556bea651a14c23b89866ee603630b63", "committedDate": "2020-10-06T20:18:13Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest, overridden\nfor SlicedByteBufTest (to reset writer index)\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}, "afterCommit": {"oid": "05ed2cfb5fd181943431f905fc41d12110af5715", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/05ed2cfb5fd181943431f905fc41d12110af5715", "committedDate": "2020-10-07T12:07:34Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTI1MjQ4", "url": "https://github.com/netty/netty/pull/10648#pullrequestreview-503925248", "createdAt": "2020-10-07T14:13:23Z", "commit": {"oid": "05ed2cfb5fd181943431f905fc41d12110af5715"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoxMzoyM1rOHd1dpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoxMzoyM1rOHd1dpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA0NjY5Mg==", "bodyText": "Since this could be on hot code paths I'm curious whether using & instead of && here would make any noticeable difference performance-wise", "url": "https://github.com/netty/netty/pull/10648#discussion_r501046692", "createdAt": "2020-10-07T14:13:23Z", "author": {"login": "njhill"}, "path": "buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java", "diffHunk": "@@ -286,11 +286,11 @@ public ByteBuf ensureWritable(int minWritableBytes) {\n     final void ensureWritable0(int minWritableBytes) {\n         final int writerIndex = writerIndex();\n         final int targetCapacity = writerIndex + minWritableBytes;\n-        if (targetCapacity <= capacity()) {\n+        if (targetCapacity >= 0 && targetCapacity <= capacity()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05ed2cfb5fd181943431f905fc41d12110af5715"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05ed2cfb5fd181943431f905fc41d12110af5715", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/05ed2cfb5fd181943431f905fc41d12110af5715", "committedDate": "2020-10-07T12:07:34Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}, "afterCommit": {"oid": "8751a7b4bbd154a7da5ffa280de425e0b3059c6c", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/8751a7b4bbd154a7da5ffa280de425e0b3059c6c", "committedDate": "2020-10-07T14:36:51Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTExMTg2", "url": "https://github.com/netty/netty/pull/10648#pullrequestreview-505511186", "createdAt": "2020-10-09T09:30:06Z", "commit": {"oid": "8751a7b4bbd154a7da5ffa280de425e0b3059c6c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTozMDowNlrOHfCT4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTozMDowNlrOHfCT4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwNTc2MA==", "bodyText": "Buffer release should be in a finally clause.", "url": "https://github.com/netty/netty/pull/10648#discussion_r502305760", "createdAt": "2020-10-09T09:30:06Z", "author": {"login": "chrisvest"}, "path": "buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java", "diffHunk": "@@ -4924,4 +4924,18 @@ public void testMaxFastWritableBytes() {\n         assertEquals(50, buffer.maxFastWritableBytes());\n         buffer.release();\n     }\n+\n+    @Test\n+    public void testEnsureWritableIntegerOverflow() {\n+        ByteBuf buffer = newBuffer(CAPACITY);\n+        buffer.writerIndex(buffer.readerIndex());\n+        buffer.writeByte(1);\n+        try {\n+            buffer.ensureWritable(Integer.MAX_VALUE);\n+            fail();\n+        } catch (IndexOutOfBoundsException e) {\n+            // expected\n+            buffer.release();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8751a7b4bbd154a7da5ffa280de425e0b3059c6c"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8751a7b4bbd154a7da5ffa280de425e0b3059c6c", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/8751a7b4bbd154a7da5ffa280de425e0b3059c6c", "committedDate": "2020-10-07T14:36:51Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}, "afterCommit": {"oid": "952bbd7a974fda539407f3dbcb143b18af75602a", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/952bbd7a974fda539407f3dbcb143b18af75602a", "committedDate": "2020-10-09T10:20:24Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTg3MDk5", "url": "https://github.com/netty/netty/pull/10648#pullrequestreview-505587099", "createdAt": "2020-10-09T11:27:23Z", "commit": {"oid": "952bbd7a974fda539407f3dbcb143b18af75602a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDcyODQ1", "url": "https://github.com/netty/netty/pull/10648#pullrequestreview-506072845", "createdAt": "2020-10-10T06:51:29Z", "commit": {"oid": "952bbd7a974fda539407f3dbcb143b18af75602a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNjo1MToyOVrOHfdxhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNjo1MToyOVrOHfdxhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1NTcxOQ==", "bodyText": "Can we please add a comment that & is really what we want here and not && ? This will make it easier in the future to not get confused by this.", "url": "https://github.com/netty/netty/pull/10648#discussion_r502755719", "createdAt": "2020-10-10T06:51:29Z", "author": {"login": "normanmaurer"}, "path": "buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java", "diffHunk": "@@ -286,11 +286,11 @@ public ByteBuf ensureWritable(int minWritableBytes) {\n     final void ensureWritable0(int minWritableBytes) {\n         final int writerIndex = writerIndex();\n         final int targetCapacity = writerIndex + minWritableBytes;\n-        if (targetCapacity <= capacity()) {\n+        if (targetCapacity >= 0 & targetCapacity <= capacity()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952bbd7a974fda539407f3dbcb143b18af75602a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b48b92bdc6b6d3ca201a55aca826ecce5a95c5ff", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/b48b92bdc6b6d3ca201a55aca826ecce5a95c5ff", "committedDate": "2020-10-10T09:19:25Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "952bbd7a974fda539407f3dbcb143b18af75602a", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/952bbd7a974fda539407f3dbcb143b18af75602a", "committedDate": "2020-10-09T10:20:24Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}, "afterCommit": {"oid": "b48b92bdc6b6d3ca201a55aca826ecce5a95c5ff", "author": {"user": {"login": "mkavanagh", "name": "Matthew Kavanagh"}}, "url": "https://github.com/netty/netty/commit/b48b92bdc6b6d3ca201a55aca826ecce5a95c5ff", "committedDate": "2020-10-10T09:19:25Z", "message": "Avoid integer overflow in ByteBuf.ensureWritable\n\nMotivation:\n\n- To make ensureWritable throw IOOBE when maxCapacity is exceeded, even if\nthe requested new capacity would overflow Integer.MAX_VALUE\n\nModification:\n\n- AbstractByteBuf.ensureWritable0 is modified to detect when\ntargetCapacity has wrapped around\n- Test added for correct behaviour in AbstractByteBufTest\n\nResult:\n\n- Calls to ensureWritable will always throw IOOBE when maxCapacity is\nexceeded (and bounds checking is enabled)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4905, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}