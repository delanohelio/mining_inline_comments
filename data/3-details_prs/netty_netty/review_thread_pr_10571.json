{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NDgxNTM1", "number": 10571, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo0Njo1NVrOEjC_hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozOToxOVrOEjK-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg0NjQ1OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo0Njo1NVrOHRMF-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDowMzo1OVrOHRMudQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NTk3OQ==", "bodyText": "Idea is nice: I would just put somewhere the expected (constant) named indexes of the parameters.\nIf exposed that would help users a bit (although won't rely on the order/value of them)", "url": "https://github.com/netty/netty/pull/10571#discussion_r487785979", "createdAt": "2020-09-14T09:46:55Z", "author": {"login": "franz1981"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -92,15 +91,43 @@ public void run() {\n     }\n \n     static RingBuffer createRingBuffer(int ringSize, Runnable submissionCallback) {\n-        //Todo throw Exception if it's null\n-        return ioUringSetup(ringSize, submissionCallback);\n+        long[][] values = ioUringSetup(ringSize);\n+        assert values.length == 2;\n+        long[] submissionQueueArgs = values[0];\n+        assert submissionQueueArgs.length == 11;\n+        IOUringSubmissionQueue submissionQueue = new IOUringSubmissionQueue(\n+                submissionQueueArgs[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4Nzg0OA==", "bodyText": "sure I can do...  That said its all \"internal\" so not sure if it really matters and is worth the effort.", "url": "https://github.com/netty/netty/pull/10571#discussion_r487787848", "createdAt": "2020-09-14T09:49:58Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -92,15 +91,43 @@ public void run() {\n     }\n \n     static RingBuffer createRingBuffer(int ringSize, Runnable submissionCallback) {\n-        //Todo throw Exception if it's null\n-        return ioUringSetup(ringSize, submissionCallback);\n+        long[][] values = ioUringSetup(ringSize);\n+        assert values.length == 2;\n+        long[] submissionQueueArgs = values[0];\n+        assert submissionQueueArgs.length == 11;\n+        IOUringSubmissionQueue submissionQueue = new IOUringSubmissionQueue(\n+                submissionQueueArgs[0],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NTk3OQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5MDYyOA==", "bodyText": "Matter of taste, indeed: the simplification is welcome anyway :) well done", "url": "https://github.com/netty/netty/pull/10571#discussion_r487790628", "createdAt": "2020-09-14T09:54:34Z", "author": {"login": "franz1981"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -92,15 +91,43 @@ public void run() {\n     }\n \n     static RingBuffer createRingBuffer(int ringSize, Runnable submissionCallback) {\n-        //Todo throw Exception if it's null\n-        return ioUringSetup(ringSize, submissionCallback);\n+        long[][] values = ioUringSetup(ringSize);\n+        assert values.length == 2;\n+        long[] submissionQueueArgs = values[0];\n+        assert submissionQueueArgs.length == 11;\n+        IOUringSubmissionQueue submissionQueue = new IOUringSubmissionQueue(\n+                submissionQueueArgs[0],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NTk3OQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5NjM0MQ==", "bodyText": "lets just keep it like this for now... If needed we can it later", "url": "https://github.com/netty/netty/pull/10571#discussion_r487796341", "createdAt": "2020-09-14T10:03:59Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -92,15 +91,43 @@ public void run() {\n     }\n \n     static RingBuffer createRingBuffer(int ringSize, Runnable submissionCallback) {\n-        //Todo throw Exception if it's null\n-        return ioUringSetup(ringSize, submissionCallback);\n+        long[][] values = ioUringSetup(ringSize);\n+        assert values.length == 2;\n+        long[] submissionQueueArgs = values[0];\n+        assert submissionQueueArgs.length == 11;\n+        IOUringSubmissionQueue submissionQueue = new IOUringSubmissionQueue(\n+                submissionQueueArgs[0],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NTk3OQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzExNjY5OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozMTowNFrOHRX1rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjo1OTo0M1rOHRzdyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3ODQxNA==", "bodyText": "We don't need to store ring_sz for either CQ or SQ. It's only used for unmap and we can just calculate it there.", "url": "https://github.com/netty/netty/pull/10571#discussion_r487978414", "createdAt": "2020-09-14T14:31:04Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -260,29 +244,37 @@ static jobject netty_io_uring_setup(JNIEnv *env, jclass class1, jint entries, jo\n         return NULL;\n     }\n \n-    jobject ioUringSubmissionQueue = (*env)->NewObject(\n-        env, ioUringSubmissionQueueClass, ioUringSubmissionQueueMethodId,\n-        (jlong)io_uring_ring.sq.khead, (jlong)io_uring_ring.sq.ktail,\n+    jlong submissionArrayElements[] = {\n+        (jlong)io_uring_ring.sq.khead,\n+        (jlong)io_uring_ring.sq.ktail,\n         (jlong)io_uring_ring.sq.kring_mask,\n-        (jlong)io_uring_ring.sq.kring_entries, (jlong)io_uring_ring.sq.kflags,\n-        (jlong)io_uring_ring.sq.kdropped, (jlong)io_uring_ring.sq.array,\n-        (jlong)io_uring_ring.sq.sqes, (jlong)io_uring_ring.sq.ring_sz,\n-        (jlong)io_uring_ring.cq.ring_ptr, (jint)ring_fd, submitCallback);\n-\n-    jobject ioUringCompletionQueue = (*env)->NewObject(\n-        env, ioUringCompletionQueueClass, ioUringCommpletionQueueMethodId,\n-        (jlong)io_uring_ring.cq.khead, (jlong)io_uring_ring.cq.ktail,\n+        (jlong)io_uring_ring.sq.kring_entries,\n+        (jlong)io_uring_ring.sq.kflags,\n+        (jlong)io_uring_ring.sq.kdropped,\n+        (jlong)io_uring_ring.sq.array,\n+        (jlong)io_uring_ring.sq.sqes,\n+        (jlong)io_uring_ring.sq.ring_sz,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMTA1MQ==", "bodyText": "I would prefer to keep it as it is so we don't need the logic for calculation in multiple places", "url": "https://github.com/netty/netty/pull/10571#discussion_r488431051", "createdAt": "2020-09-15T06:59:43Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -260,29 +244,37 @@ static jobject netty_io_uring_setup(JNIEnv *env, jclass class1, jint entries, jo\n         return NULL;\n     }\n \n-    jobject ioUringSubmissionQueue = (*env)->NewObject(\n-        env, ioUringSubmissionQueueClass, ioUringSubmissionQueueMethodId,\n-        (jlong)io_uring_ring.sq.khead, (jlong)io_uring_ring.sq.ktail,\n+    jlong submissionArrayElements[] = {\n+        (jlong)io_uring_ring.sq.khead,\n+        (jlong)io_uring_ring.sq.ktail,\n         (jlong)io_uring_ring.sq.kring_mask,\n-        (jlong)io_uring_ring.sq.kring_entries, (jlong)io_uring_ring.sq.kflags,\n-        (jlong)io_uring_ring.sq.kdropped, (jlong)io_uring_ring.sq.array,\n-        (jlong)io_uring_ring.sq.sqes, (jlong)io_uring_ring.sq.ring_sz,\n-        (jlong)io_uring_ring.cq.ring_ptr, (jint)ring_fd, submitCallback);\n-\n-    jobject ioUringCompletionQueue = (*env)->NewObject(\n-        env, ioUringCompletionQueueClass, ioUringCommpletionQueueMethodId,\n-        (jlong)io_uring_ring.cq.khead, (jlong)io_uring_ring.cq.ktail,\n+        (jlong)io_uring_ring.sq.kring_entries,\n+        (jlong)io_uring_ring.sq.kflags,\n+        (jlong)io_uring_ring.sq.kdropped,\n+        (jlong)io_uring_ring.sq.array,\n+        (jlong)io_uring_ring.sq.sqes,\n+        (jlong)io_uring_ring.sq.ring_sz,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3ODQxNA=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzE1NTcyOnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozOToxOVrOHRYONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzowNTozOFrOHRzpNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDY5NQ==", "bodyText": "I don't think we need to pass the ringFd twice here or submissionQueueRingSize, and we can pass completionQueueRingEntries instead of completionQueueRingSize.\ni.e. number of args can be reduced by 2", "url": "https://github.com/netty/netty/pull/10571#discussion_r487984695", "createdAt": "2020-09-14T14:39:19Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -114,7 +141,11 @@ public static FileDescriptor newBlockingEventFd() {\n         return new FileDescriptor(blockingEventFd());\n     }\n \n-    public static native void ioUringExit(RingBuffer ringBuffer);\n+    public static native void ioUringExit(long submissionQueueArrayAddress, int submissionQueueRingEntries,\n+                                          long submissionQueueRingAddress, int submissionQueueRingSize,\n+                                          int submissionQueueRingFd,\n+                                          long completionQueueRingAddress, int completionQueueRingSize,\n+                                          int completionQueueRingfd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyOTE4MQ==", "bodyText": "I think it would better to pass the ringFd to the RingBuffer", "url": "https://github.com/netty/netty/pull/10571#discussion_r488029181", "createdAt": "2020-09-14T15:34:48Z", "author": {"login": "1Jo1"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -114,7 +141,11 @@ public static FileDescriptor newBlockingEventFd() {\n         return new FileDescriptor(blockingEventFd());\n     }\n \n-    public static native void ioUringExit(RingBuffer ringBuffer);\n+    public static native void ioUringExit(long submissionQueueArrayAddress, int submissionQueueRingEntries,\n+                                          long submissionQueueRingAddress, int submissionQueueRingSize,\n+                                          int submissionQueueRingFd,\n+                                          long completionQueueRingAddress, int completionQueueRingSize,\n+                                          int completionQueueRingfd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDY5NQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxODI2Nw==", "bodyText": "forget it, as sqe and cqe require ring_fd :)", "url": "https://github.com/netty/netty/pull/10571#discussion_r488418267", "createdAt": "2020-09-15T06:32:02Z", "author": {"login": "1Jo1"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -114,7 +141,11 @@ public static FileDescriptor newBlockingEventFd() {\n         return new FileDescriptor(blockingEventFd());\n     }\n \n-    public static native void ioUringExit(RingBuffer ringBuffer);\n+    public static native void ioUringExit(long submissionQueueArrayAddress, int submissionQueueRingEntries,\n+                                          long submissionQueueRingAddress, int submissionQueueRingSize,\n+                                          int submissionQueueRingFd,\n+                                          long completionQueueRingAddress, int completionQueueRingSize,\n+                                          int completionQueueRingfd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDY5NQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMzk3NA==", "bodyText": "I would prefer to keep it mostly as it is for clarity.", "url": "https://github.com/netty/netty/pull/10571#discussion_r488433974", "createdAt": "2020-09-15T07:05:38Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -114,7 +141,11 @@ public static FileDescriptor newBlockingEventFd() {\n         return new FileDescriptor(blockingEventFd());\n     }\n \n-    public static native void ioUringExit(RingBuffer ringBuffer);\n+    public static native void ioUringExit(long submissionQueueArrayAddress, int submissionQueueRingEntries,\n+                                          long submissionQueueRingAddress, int submissionQueueRingSize,\n+                                          int submissionQueueRingFd,\n+                                          long completionQueueRingAddress, int completionQueueRingSize,\n+                                          int completionQueueRingfd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDY5NQ=="}, "originalCommit": {"oid": "2fcf4905405beba25aa6bef725a023e70a6c1737"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}