{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNzYwMTM3", "number": 10563, "title": "Cleanup IOUringEventLoopGroup construction and allow to specify the ring", "bodyText": "size.\nMotivation:\nWe should allow to specify the ringsize when constructing the\nIOUringEventLoopGroup and also be constistent with the rest of the\nEventLoopGroup implementations\nModifications:\n\nCleanup constructors\nMake ringSize configurable\n\nResult:\nCleaner code and more flexible in terms of configuration", "createdAt": "2020-09-10T12:08:45Z", "url": "https://github.com/netty/netty/pull/10563", "merged": true, "mergeCommit": {"oid": "8e86bf60a85587fe9e02ac6dddb5a29c5be1f55f"}, "closed": true, "closedAt": "2020-09-11T06:34:58Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHfom5gH2gAyNDgzNzYwMTM3OjhkYzE0MDk2MzIzMThjZDNkNzdiN2UzOWYxMTEzODdmMDFiNmEzM2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHveEOgH2gAyNDgzNzYwMTM3OjRiNTRhN2MxZjdmN2RjYWU0ZGVhMGFiNmRhYWU1YzUyYjkyOWQwYjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8dc1409632318cd3d77b7e39f111387f01b6a33b", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/8dc1409632318cd3d77b7e39f111387f01b6a33b", "committedDate": "2020-09-10T12:06:07Z", "message": "Cleanup IOUringEventLoopGroup construction and allow to specify the ring\nsize.\n\nMotivation:\n\nWe should allow to specify the ringsize when constructing the\nIOUringEventLoopGroup and also be constistent with the rest of the\nEventLoopGroup implementations\n\nModifications:\n\n- Cleanup constructors\n- Make ringSize configurable\n\nResult:\n\nCleaner code and more flexible in terms of configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDA4OTc2", "url": "https://github.com/netty/netty/pull/10563#pullrequestreview-486008976", "createdAt": "2020-09-10T14:41:43Z", "commit": {"oid": "8dc1409632318cd3d77b7e39f111387f01b6a33b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0MTo0M1rOHP3ekQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0MTo0M1rOHP3ekQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM5OTYzMw==", "bodyText": "nit: what about negative values?", "url": "https://github.com/netty/netty/pull/10563#discussion_r486399633", "createdAt": "2020-09-10T14:41:43Z", "author": {"login": "1Jo1"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoopGroup.java", "diffHunk": "@@ -46,105 +46,57 @@ public IOUringEventLoopGroup(int nThreads) {\n     /**\n      * Create a new instance using the default number of threads and the given {@link ThreadFactory}.\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public IOUringEventLoopGroup(ThreadFactory threadFactory) {\n         this(0, threadFactory, 0);\n     }\n \n-    /**\n-     * Create a new instance using the specified number of threads and the default {@link ThreadFactory}.\n-     */\n-    @SuppressWarnings(\"deprecation\")\n-    public IOUringEventLoopGroup(int nThreads, SelectStrategyFactory selectStrategyFactory) {\n-        this(nThreads, (ThreadFactory) null, selectStrategyFactory);\n-    }\n-\n     /**\n      * Create a new instance using the specified number of threads and the given {@link ThreadFactory}.\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public IOUringEventLoopGroup(int nThreads, ThreadFactory threadFactory) {\n         this(nThreads, threadFactory, 0);\n     }\n \n     public IOUringEventLoopGroup(int nThreads, Executor executor) {\n-        this(nThreads, executor, DefaultSelectStrategyFactory.INSTANCE);\n-    }\n-\n-    /**\n-     * Create a new instance using the specified number of threads and the given {@link ThreadFactory}.\n-     */\n-    @SuppressWarnings(\"deprecation\")\n-    public IOUringEventLoopGroup(int nThreads, ThreadFactory threadFactory,\n-                                 SelectStrategyFactory selectStrategyFactory) {\n-        this(nThreads, threadFactory, 0, selectStrategyFactory);\n+        this(nThreads, executor, 0);\n     }\n \n     /**\n      * Create a new instance using the specified number of threads, the given {@link ThreadFactory} and the given\n-     * maximal amount of epoll events to handle per epollWait(...).\n-     *\n-     * @deprecated Use {@link #IOUringEventLoopGroup(int)} or {@link #IOUringEventLoopGroup(int, ThreadFactory)}\n+     * maximal size of the used ringbuffer.\n      */\n-    @Deprecated\n-    public IOUringEventLoopGroup(int nThreads, ThreadFactory threadFactory, int maxEventsAtOnce) {\n-        this(nThreads, threadFactory, maxEventsAtOnce, DefaultSelectStrategyFactory.INSTANCE);\n+    public IOUringEventLoopGroup(int nThreads, ThreadFactory threadFactory, int ringSize) {\n+        this(nThreads, threadFactory == null ? null : new ThreadPerTaskExecutor(threadFactory), ringSize);\n     }\n \n-    /**\n-     * Create a new instance using the specified number of threads, the given {@link ThreadFactory} and the given\n-     * maximal amount of epoll events to handle per epollWait(...).\n-     *\n-     * @deprecated Use {@link #IOUringEventLoopGroup(int)}, {@link #IOUringEventLoopGroup(int, ThreadFactory)}, or\n-     * {@link #IOUringEventLoopGroup(int, SelectStrategyFactory)}\n-     */\n-    @Deprecated\n-    public IOUringEventLoopGroup(int nThreads, ThreadFactory threadFactory, int maxEventsAtOnce,\n-                                 SelectStrategyFactory selectStrategyFactory) {\n-        super(nThreads, threadFactory, maxEventsAtOnce, selectStrategyFactory, RejectedExecutionHandlers.reject());\n+    public IOUringEventLoopGroup(int nThreads, Executor executor, int ringsize) {\n+        this(nThreads, executor, DefaultEventExecutorChooserFactory.INSTANCE,\n+                ringsize, RejectedExecutionHandlers.reject());\n     }\n \n-    public IOUringEventLoopGroup(int nThreads, Executor executor, SelectStrategyFactory selectStrategyFactory) {\n-        super(nThreads, executor, 0, selectStrategyFactory, RejectedExecutionHandlers.reject());\n+    private IOUringEventLoopGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory,\n+                                  int ringSize, RejectedExecutionHandler rejectedExecutionHandler) {\n+        this(nThreads, executor, chooserFactory, ringSize, rejectedExecutionHandler, null);\n     }\n \n-    public IOUringEventLoopGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory,\n-                                 SelectStrategyFactory selectStrategyFactory) {\n-        super(nThreads, executor, chooserFactory, 0, selectStrategyFactory, RejectedExecutionHandlers.reject());\n-    }\n-\n-    public IOUringEventLoopGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory,\n-                                 SelectStrategyFactory selectStrategyFactory,\n-                                 RejectedExecutionHandler rejectedExecutionHandler) {\n-        super(nThreads, executor, chooserFactory, 0, selectStrategyFactory, rejectedExecutionHandler);\n-    }\n-\n-    public IOUringEventLoopGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory,\n-                                 SelectStrategyFactory selectStrategyFactory,\n-                                 RejectedExecutionHandler rejectedExecutionHandler,\n-                                 EventLoopTaskQueueFactory queueFactory) {\n-        super(nThreads, executor, chooserFactory, 0,\n-              selectStrategyFactory, rejectedExecutionHandler, queueFactory);\n-    }\n-\n-    /**\n-     * @deprecated This method will be removed in future releases, and is not guaranteed to have any impacts.\n-     */\n-    @Deprecated\n-    public void setIoRatio(int ioRatio) {\n-        if (ioRatio <= 0 || ioRatio > 100) {\n-            throw new IllegalArgumentException(\"ioRatio: \" + ioRatio + \" (expected: 0 < ioRatio <= 100)\");\n-        }\n+    private IOUringEventLoopGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory,\n+                                  int ringSize, RejectedExecutionHandler rejectedExecutionHandler,\n+                                  EventLoopTaskQueueFactory queueFactory) {\n+        super(nThreads, executor, chooserFactory, ringSize, rejectedExecutionHandler, queueFactory);\n     }\n \n     //Todo\n     @Override\n-    protected EventLoop newChild(Executor executor, Object... args) throws Exception {\n-     //EventLoopTaskQueueFactory queueFactory = args.length == 4? (EventLoopTaskQueueFactory) args[3] : null;\n-//        return new IOUringEventLoop(this, executor, (Integer) args[0],\n-//                ((SelectStrategyFactory) args[1]).newSelectStrategy(),\n-//                (RejectedExecutionHandler) args[2], queueFactory);\n-\n-        return new IOUringEventLoop(this, executor, false);\n+    protected EventLoop newChild(Executor executor, Object... args) {\n+        if (args.length != 3) {\n+            throw new IllegalArgumentException(\"Illegal amount of extra arguments\");\n+        }\n+        int ringSize = (Integer) args[0];\n+        if (ringSize == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc1409632318cd3d77b7e39f111387f01b6a33b"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDI3MDg0", "url": "https://github.com/netty/netty/pull/10563#pullrequestreview-486027084", "createdAt": "2020-09-10T14:58:57Z", "commit": {"oid": "8dc1409632318cd3d77b7e39f111387f01b6a33b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1ODo1N1rOHP4Spg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1ODo1N1rOHP4Spg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMjk2Ng==", "bodyText": "move to protected static in superclass? (since used by all the impls it looks like?)", "url": "https://github.com/netty/netty/pull/10563#discussion_r486412966", "createdAt": "2020-09-10T14:58:57Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -75,6 +78,14 @@ public void run() {\n         logger.trace(\"New EventLoop: {}\", this.toString());\n     }\n \n+    private static Queue<Runnable> newTaskQueue(\n+            EventLoopTaskQueueFactory queueFactory) {\n+        if (queueFactory == null) {\n+            return newTaskQueue0(DEFAULT_MAX_PENDING_TASKS);\n+        }\n+        return queueFactory.newTaskQueue(DEFAULT_MAX_PENDING_TASKS);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc1409632318cd3d77b7e39f111387f01b6a33b"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946ddefcf9a0d562bcbeef60acdaa73877a93455", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/946ddefcf9a0d562bcbeef60acdaa73877a93455", "committedDate": "2020-09-10T14:59:59Z", "message": "Validate ringSize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MzY3MjA3", "url": "https://github.com/netty/netty/pull/10563#pullrequestreview-486367207", "createdAt": "2020-09-10T23:00:30Z", "commit": {"oid": "946ddefcf9a0d562bcbeef60acdaa73877a93455"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzowMDozMFrOHQIjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzowMDozMFrOHQIjhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3OTQzMA==", "bodyText": "Math.max to save from too small values?", "url": "https://github.com/netty/netty/pull/10563#discussion_r486679430", "createdAt": "2020-09-10T23:00:30Z", "author": {"login": "franz1981"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -30,10 +30,9 @@\n \n final class Native {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(Native.class);\n-    // Todo expose this via the EventLoopGroup constructor as well.\n-    private static final int DEFAULT_RING_SIZE = SystemPropertyUtil.getInt(\"io.netty.uring.ringSize\", 4096);\n+    static final int DEFAULT_RING_SIZE = SystemPropertyUtil.getInt(\"io.netty.uring.ringSize\", 4096);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946ddefcf9a0d562bcbeef60acdaa73877a93455"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b54a7c1f7f7dcae4dea0ab6daae5c52b929d0b5", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/4b54a7c1f7f7dcae4dea0ab6daae5c52b929d0b5", "committedDate": "2020-09-11T06:33:05Z", "message": "Address comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 43, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}