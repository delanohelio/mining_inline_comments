{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDg2ODg4", "number": 10304, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOD9Rj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOD9Rj-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTc3NDY0OnYy", "diffSide": "RIGHT", "path": "handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOGWq67w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzozOToxMVrOGWq67w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyNTA3MQ==", "bodyText": "You need to add:\nReferenceCountUtil.release(msg);", "url": "https://github.com/netty/netty/pull/10304#discussion_r426425071", "createdAt": "2020-05-18T07:39:11Z", "author": {"login": "normanmaurer"}, "path": "handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java", "diffHunk": "@@ -479,6 +479,64 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) {\n         assertFalse(channel.finish());\n     }\n \n+    @Test\n+    public void testRemoveFlowControl() throws Exception {\n+        final CountDownLatch latch = new CountDownLatch(3);\n+\n+        ChannelInboundHandlerAdapter handler = new ChannelDuplexHandler() {\n+            @Override\n+            public void channelActive(ChannelHandlerContext ctx) throws Exception {\n+                //do the first read\n+                ctx.read();\n+                super.channelActive(ctx);\n+            }\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n+                latch.countDown();\n+                super.channelRead(ctx, msg);\n+            }\n+        };\n+\n+        FlowControlHandler flow = new FlowControlHandler() {\n+            private int num;\n+            @Override\n+            public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {\n+                super.channelRead(ctx, msg);\n+                ++num;\n+                if (num >= 3) {\n+                    //We have received 3 messages. Remove myself later\n+                    final ChannelHandler handler = this;\n+                    ctx.channel().eventLoop().execute(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            ctx.pipeline().remove(handler);\n+                        }\n+                    });\n+                }\n+            }\n+        };\n+        ChannelInboundHandlerAdapter tail = new ChannelInboundHandlerAdapter() {\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) {\n+                //consume this msg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3459, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}