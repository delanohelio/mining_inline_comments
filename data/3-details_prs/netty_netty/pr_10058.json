{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MTA2OTg4", "number": 10058, "title": "More strict parsing of initial line / http headers", "bodyText": "Motivation:\nOur parsing of the initial line / http headers did treat some characters as separators which should better trigger an exception during parsing.\nModifications:\n\nTighten up parsing of the inital line by follow recommentation of RFC7230\nRestrict separators to OWS for http headers\nAdd unit test\n\nResult:\nStricter parsing of HTTP1", "createdAt": "2020-02-24T17:14:36Z", "url": "https://github.com/netty/netty/pull/10058", "merged": true, "mergeCommit": {"oid": "9ae782d632ff18f7c9e645c58458b3180d257ff3"}, "closed": true, "closedAt": "2020-02-26T08:49:40Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHgvjHgH2gAyMzc5MTA2OTg4OjU5MmZkYjNhYzU5NTAwZjA5ZDQwMzg3N2UzMTg2NTI0ZDJiMGQ3MWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH50CngFqTM2NDQ5NDk1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "592fdb3ac59500f09d403877e3186524d2b0d71c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/592fdb3ac59500f09d403877e3186524d2b0d71c", "committedDate": "2020-02-24T17:12:27Z", "message": "More strict parsing of initial line / http headers\n\nMotivation:\n\nOur parsing of the initial line / http headers did treat some characters as separators which should better trigger an exception during parsing.\n\nModifications:\n\n- Tighten up parsing of the inital line by follow recommentation of RFC7230\n- Restrict separators to OWS for http headers\n- Add unit test\n\nResult:\n\nStricter parsing of HTTP1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTgwNDUx", "url": "https://github.com/netty/netty/pull/10058#pullrequestreview-363580451", "createdAt": "2020-02-24T17:48:46Z", "commit": {"oid": "592fdb3ac59500f09d403877e3186524d2b0d71c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzo0ODo0N1rOFtp64g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzo0ODo0N1rOFtp64g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQxNzA1OA==", "bodyText": "Despite being used in the spec, \"OWS\" is not a super intuitive name. I would propose something like:\n\"Invalid separator, only a single space or horizontal tab allowed, but received a '\" + c + \"'\"", "url": "https://github.com/netty/netty/pull/10058#discussion_r383417058", "createdAt": "2020-02-24T17:48:47Z", "author": {"login": "Bennett-Lynch"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -819,19 +819,44 @@ private void splitHeader(AppendableCharSequence sb) {\n         }\n     }\n \n-    private static int findNonWhitespace(AppendableCharSequence sb, int offset) {\n+    private static int findNonSPLenient(AppendableCharSequence sb, int offset) {\n         for (int result = offset; result < sb.length(); ++result) {\n-            if (!Character.isWhitespace(sb.charAtUnsafe(result))) {\n+            char c = sb.charAtUnsafe(result);\n+            // See https://tools.ietf.org/html/rfc7230#section-3.5\n+            if (isSPLenient(c)) {\n+                continue;\n+            }\n+            if (Character.isWhitespace(c)) {\n+                // Any other whitespace delimiter is invalid\n+                throw new IllegalArgumentException(\"Invalid separator\");\n+            }\n+            return result;\n+        }\n+        return sb.length();\n+    }\n+\n+    private static int findSPLenient(AppendableCharSequence sb, int offset) {\n+        for (int result = offset; result < sb.length(); ++result) {\n+            if (isSPLenient(sb.charAtUnsafe(result))) {\n                 return result;\n             }\n         }\n         return sb.length();\n     }\n \n-    private static int findWhitespace(AppendableCharSequence sb, int offset) {\n+    private static boolean isSPLenient(char c) {\n+        // See https://tools.ietf.org/html/rfc7230#section-3.5\n+        return c == ' ' || c == (char) 0x09 || c == (char) 0x0B || c == (char) 0x0C || c == (char) 0x0D;\n+    }\n+\n+    private static int findNonWhitespace(AppendableCharSequence sb, int offset, boolean validateOWS) {\n         for (int result = offset; result < sb.length(); ++result) {\n-            if (Character.isWhitespace(sb.charAtUnsafe(result))) {\n+            char c = sb.charAtUnsafe(result);\n+            if (!Character.isWhitespace(c)) {\n                 return result;\n+            } else if (validateOWS && !isOWS(c)) {\n+                // Only OWS is supported for whitespace\n+                throw new IllegalArgumentException(\"Invalid separator, only OWS allowed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592fdb3ac59500f09d403877e3186524d2b0d71c"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa9027c893b712ab5ee455477ffa348a5bedfe54", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/aa9027c893b712ab5ee455477ffa348a5bedfe54", "committedDate": "2020-02-24T18:41:17Z", "message": "Comment of Bennett"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDk0OTUx", "url": "https://github.com/netty/netty/pull/10058#pullrequestreview-364494951", "createdAt": "2020-02-25T22:24:59Z", "commit": {"oid": "aa9027c893b712ab5ee455477ffa348a5bedfe54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 362, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}