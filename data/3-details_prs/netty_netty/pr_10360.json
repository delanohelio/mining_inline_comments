{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NzQzNDg0", "number": 10360, "title": "Fix memory leak in AbstractDiskHttpData when CompositeByteBuf is used", "bodyText": "Motivation:\nAbstractDiskHttpData may cause a memory leak when a CompositeByteBuf is used. This happened because we may call copy() but actually never release the newly created ByteBuf.\nModifications:\n\nRemove copy() call and just use ByteBuf.getBytes(...) which will internally handle the writing to the FileChannel without any extra copies that need to be released later on.\nAdd unit test\n\nResult:\nFixes #10354", "createdAt": "2020-06-22T07:33:10Z", "url": "https://github.com/netty/netty/pull/10360", "merged": true, "mergeCommit": {"oid": "48938e2d99d51c8226f60b045b9a7a4520ed65da"}, "closed": true, "closedAt": "2020-06-22T11:54:21Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctru1igH2gAyNDM3NzQzNDg0OmE5N2FhZWI5NTQ4MDM5OTI0YzU1ZWE1MTg5M2YwZDExNzA0ZmNmNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3ttoOgFqTQ1NDA0MTk5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a97aaeb9548039924c55ea51893f0d11704fcf60", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/a97aaeb9548039924c55ea51893f0d11704fcf60", "committedDate": "2020-06-22T07:29:45Z", "message": "Fix memory leak in AbstractDiskHttpData when CompositeByteBuf is used\n\nMotivation:\n\nAbstractDiskHttpData may cause a memory leak when a CompositeByteBuf is used. This happened because we may call copy() but actually never release the newly created ByteBuf.\n\nModifications:\n\n- Remove copy() call and just use ByteBuf.getBytes(...) which will internally handle the writing to the FileChannel without any extra copies that need to be released later on.\n- Add unit test\n\nResult:\n\nFixes https://github.com/netty/netty/issues/10354"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODI1MTAx", "url": "https://github.com/netty/netty/pull/10360#pullrequestreview-434825101", "createdAt": "2020-06-22T11:12:45Z", "commit": {"oid": "a97aaeb9548039924c55ea51893f0d11704fcf60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDQxOTk1", "url": "https://github.com/netty/netty/pull/10360#pullrequestreview-454041995", "createdAt": "2020-07-23T11:27:28Z", "commit": {"oid": "a97aaeb9548039924c55ea51893f0d11704fcf60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMToyNzoyOFrOG2GbPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMToyNzoyOFrOG2GbPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4MTU2Nw==", "bodyText": "@normanmaurer The javadocs for ByteBuf#getBytes state that the fileChannel position is not being modified. Does this not imply that all calls to this method start writing from the beginning of the file (and thus overwrite each other)?\nwritten is now also effectively unused; shouldn't this line be written = buffer.getBytes(...);?.\nsee #10425.", "url": "https://github.com/netty/netty/pull/10360#discussion_r459381567", "createdAt": "2020-07-23T11:27:28Z", "author": {"login": "zentol"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -165,9 +164,7 @@ public void addContent(ByteBuf buffer, boolean last)\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                while (written < localsize) {\n-                    written += fileChannel.write(byteBuffer);\n-                }\n+                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a97aaeb9548039924c55ea51893f0d11704fcf60"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 132, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}