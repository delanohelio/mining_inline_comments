{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjUxMzg3", "number": 10615, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NjoxN1rOEn2FXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NjoxN1rOEn2FXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjE2MDI4OnYy", "diffSide": "RIGHT", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDo1NjoxN1rOHYn4eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMDozMTo1MlrOHYra1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTMwNA==", "bodyText": "@njhill shouldn't we keep the cancel check ?", "url": "https://github.com/netty/netty/pull/10615#discussion_r495581304", "createdAt": "2020-09-27T14:56:17Z", "author": {"login": "normanmaurer"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -220,9 +223,8 @@ void handleLoopException(Throwable t) {\n     @Override\n     public void handle(int fd, int res, int flags, int op, int data) {\n         if (op == Native.IORING_OP_READ && eventfd.intValue() == fd) {\n-            if (res != Native.ERRNO_ECANCELED_NEGATIVE) {\n-                addEventFdRead(ringBuffer.ioUringSubmissionQueue());\n-            }\n+            pendingWakeup = false;\n+            addEventFdRead(ringBuffer.ioUringSubmissionQueue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85b7c480d7ab26c5a8878120eb1e5e1f7095b37"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzOTI1NA==", "bodyText": "I don't think it can happen since we never cancel the blocking read. I think it was left over from when we were using non-blocking with poll.", "url": "https://github.com/netty/netty/pull/10615#discussion_r495639254", "createdAt": "2020-09-28T00:31:52Z", "author": {"login": "njhill"}, "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -220,9 +223,8 @@ void handleLoopException(Throwable t) {\n     @Override\n     public void handle(int fd, int res, int flags, int op, int data) {\n         if (op == Native.IORING_OP_READ && eventfd.intValue() == fd) {\n-            if (res != Native.ERRNO_ECANCELED_NEGATIVE) {\n-                addEventFdRead(ringBuffer.ioUringSubmissionQueue());\n-            }\n+            pendingWakeup = false;\n+            addEventFdRead(ringBuffer.ioUringSubmissionQueue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MTMwNA=="}, "originalCommit": {"oid": "f85b7c480d7ab26c5a8878120eb1e5e1f7095b37"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3771, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}