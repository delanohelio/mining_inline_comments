{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDkwNjk5", "number": 10003, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODowNzo0OVrODd8LuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDowMTowMFrODh_w7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzIxMzM3OnYy", "diffSide": "RIGHT", "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODowNzo0OVrOFm1Aiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoyNjoyMVrOFnEf1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1ODY5OQ==", "bodyText": "@Bennett-Lynch why change this to protected ?", "url": "https://github.com/netty/netty/pull/10003#discussion_r376258699", "createdAt": "2020-02-07T08:07:49Z", "author": {"login": "normanmaurer"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -112,7 +112,7 @@\n \n     private HttpMessage message;\n     private long chunkSize;\n-    private long contentLength = Long.MIN_VALUE;\n+    protected long contentLength = Long.MIN_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f4f77df91bb495ef20e31c8807d2bb288d7fc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxMjQ2OA==", "bodyText": "I'm fine to revert this, but the motivation was to allow someone who is overriding handleTransferEncodingChunkedWithContentLength() to be able to manipulate this variable, if needed. I will revert this unless you think we should keep it.", "url": "https://github.com/netty/netty/pull/10003#discussion_r376512468", "createdAt": "2020-02-07T17:26:21Z", "author": {"login": "Bennett-Lynch"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -112,7 +112,7 @@\n \n     private HttpMessage message;\n     private long chunkSize;\n-    private long contentLength = Long.MIN_VALUE;\n+    protected long contentLength = Long.MIN_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1ODY5OQ=="}, "originalCommit": {"oid": "32f4f77df91bb495ef20e31c8807d2bb288d7fc6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTc0MzE5OnYy", "diffSide": "RIGHT", "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDowMTowMFrOFtDAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToxNzoyMVrOFtZiCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3OTM5NQ==", "bodyText": "The phrase \"OUGHT TO\" conveys an optimistic assertion of an implementation behavior that is clearly morally right, and thus does not require substantiation.\n- https://tools.ietf.org/html/rfc6919#section-4\n\nThis seems to imply that this is a general expectation of all implementations. Thus, not doing this seems to indicate a diversion from the RFC spec?", "url": "https://github.com/netty/netty/pull/10003#discussion_r382779395", "createdAt": "2020-02-21T20:01:00Z", "author": {"login": "JLLeitschuh"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -657,6 +643,32 @@ private State readHeaders(ByteBuf buffer) {\n         }\n     }\n \n+    /**\n+     * Invoked when a message with both a \"Transfer-Encoding: chunked\" and a \"Content-Length\" header field is detected.\n+     * The default behavior is to <i>remove</i> the Content-Length field, but this method could be overridden\n+     * to change the behavior (to, e.g., throw an exception and produce an invalid message).\n+     * <p>\n+     * See: https://tools.ietf.org/html/rfc7230#section-3.3.3\n+     * <pre>\n+     *     If a message is received with both a Transfer-Encoding and a\n+     *     Content-Length header field, the Transfer-Encoding overrides the\n+     *     Content-Length.  Such a message might indicate an attempt to\n+     *     perform request smuggling (Section 9.5) or response splitting\n+     *     (Section 9.4) and ought to be handled as an error.  A sender MUST\n+     *     remove the received Content-Length field prior to forwarding such\n+     *     a message downstream.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTE0Mw==", "bodyText": "From @joshbressers above:\n\nThis is correct behaviour according to RFC 2616\n\nIf a message is received with both a Transfer-Encoding header field and a Content-Length header field, the latter MUST be ignored.\n\n\nThat RFC is obsoleted by RFC7230 which states that the correct behaviour is to throw an exception when both 'Content-Type' and 'Transfer-Encoding' are present.", "url": "https://github.com/netty/netty/pull/10003#discussion_r382781143", "createdAt": "2020-02-21T20:05:16Z", "author": {"login": "JLLeitschuh"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -657,6 +643,32 @@ private State readHeaders(ByteBuf buffer) {\n         }\n     }\n \n+    /**\n+     * Invoked when a message with both a \"Transfer-Encoding: chunked\" and a \"Content-Length\" header field is detected.\n+     * The default behavior is to <i>remove</i> the Content-Length field, but this method could be overridden\n+     * to change the behavior (to, e.g., throw an exception and produce an invalid message).\n+     * <p>\n+     * See: https://tools.ietf.org/html/rfc7230#section-3.3.3\n+     * <pre>\n+     *     If a message is received with both a Transfer-Encoding and a\n+     *     Content-Length header field, the Transfer-Encoding overrides the\n+     *     Content-Length.  Such a message might indicate an attempt to\n+     *     perform request smuggling (Section 9.5) or response splitting\n+     *     (Section 9.4) and ought to be handled as an error.  A sender MUST\n+     *     remove the received Content-Length field prior to forwarding such\n+     *     a message downstream.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3OTM5NQ=="}, "originalCommit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMjM3MQ==", "bodyText": "RE: Ought To:\n\nhttps://tools.ietf.org/html/rfc6919#section-4\n\nAh, rfc6919 is an april fools RFC (ignore me on that point then).", "url": "https://github.com/netty/netty/pull/10003#discussion_r382822371", "createdAt": "2020-02-21T21:50:46Z", "author": {"login": "JLLeitschuh"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -657,6 +643,32 @@ private State readHeaders(ByteBuf buffer) {\n         }\n     }\n \n+    /**\n+     * Invoked when a message with both a \"Transfer-Encoding: chunked\" and a \"Content-Length\" header field is detected.\n+     * The default behavior is to <i>remove</i> the Content-Length field, but this method could be overridden\n+     * to change the behavior (to, e.g., throw an exception and produce an invalid message).\n+     * <p>\n+     * See: https://tools.ietf.org/html/rfc7230#section-3.3.3\n+     * <pre>\n+     *     If a message is received with both a Transfer-Encoding and a\n+     *     Content-Length header field, the Transfer-Encoding overrides the\n+     *     Content-Length.  Such a message might indicate an attempt to\n+     *     perform request smuggling (Section 9.5) or response splitting\n+     *     (Section 9.4) and ought to be handled as an error.  A sender MUST\n+     *     remove the received Content-Length field prior to forwarding such\n+     *     a message downstream.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3OTM5NQ=="}, "originalCommit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0ODU1Mg==", "bodyText": "While we're here, per RFC 8174 the normative key words only have their normative effect when rendered in uppercase. Thus, even if \"ought to\" were a relevant normative key word, the fact that it has been rendered lowercase means it's not intended to have normative effect.", "url": "https://github.com/netty/netty/pull/10003#discussion_r383148552", "createdAt": "2020-02-24T09:17:21Z", "author": {"login": "Lukasa"}, "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java", "diffHunk": "@@ -657,6 +643,32 @@ private State readHeaders(ByteBuf buffer) {\n         }\n     }\n \n+    /**\n+     * Invoked when a message with both a \"Transfer-Encoding: chunked\" and a \"Content-Length\" header field is detected.\n+     * The default behavior is to <i>remove</i> the Content-Length field, but this method could be overridden\n+     * to change the behavior (to, e.g., throw an exception and produce an invalid message).\n+     * <p>\n+     * See: https://tools.ietf.org/html/rfc7230#section-3.3.3\n+     * <pre>\n+     *     If a message is received with both a Transfer-Encoding and a\n+     *     Content-Length header field, the Transfer-Encoding overrides the\n+     *     Content-Length.  Such a message might indicate an attempt to\n+     *     perform request smuggling (Section 9.5) or response splitting\n+     *     (Section 9.4) and ought to be handled as an error.  A sender MUST\n+     *     remove the received Content-Length field prior to forwarding such\n+     *     a message downstream.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3OTM5NQ=="}, "originalCommit": {"oid": "da645c980866ae57a6dbf11f826168ef96ad545f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}