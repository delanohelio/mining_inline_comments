{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNzgxMDQ4", "number": 10069, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNjo1NjozNFrODkEICA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNjo1NjozNFrODkEICA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTQyOTIwOnYy", "diffSide": "RIGHT", "path": "transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNjo1NjozNFrOFwMnGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNjo1NjozNFrOFwMnGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4MjU4Nw==", "bodyText": "this is not correct (and also not the one above) as you will cause a ClassCastException later on if the ChannelHandlerContext does not wrap an ChannelOutboundHandler.", "url": "https://github.com/netty/netty/pull/10069#discussion_r386082587", "createdAt": "2020-03-01T06:56:34Z", "author": {"login": "normanmaurer"}, "path": "transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java", "diffHunk": "@@ -906,17 +906,21 @@ private boolean isNotValidPromise(ChannelPromise promise, boolean allowVoidPromi\n \n     private AbstractChannelHandlerContext findContextInbound(int mask) {\n         AbstractChannelHandlerContext ctx = this;\n+        EventExecutor currentExecutor = executor();\n         do {\n             ctx = ctx.next;\n-        } while ((ctx.executionMask & mask) == 0);\n+        } while (!ChannelHandlerMask.isInbound(ctx.executionMask)\n+            || (ctx.executionMask & mask) == 0 && ctx.executor() == currentExecutor);\n         return ctx;\n     }\n \n     private AbstractChannelHandlerContext findContextOutbound(int mask) {\n         AbstractChannelHandlerContext ctx = this;\n+        EventExecutor currentExecutor = executor();\n         do {\n             ctx = ctx.prev;\n-        } while ((ctx.executionMask & mask) == 0);\n+        } while (!ChannelHandlerMask.isOutbound(ctx.executionMask)\n+            || (ctx.executionMask & mask) == 0 && ctx.executor() == currentExecutor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dd352c8d17943df310ba1371329c0990e5bbb9"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}