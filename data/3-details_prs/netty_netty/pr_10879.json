{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDEwNTky", "number": 10879, "title": "Use Github workflows for CI", "bodyText": "Motivation:\nWe should just use GitHub Actions for the CI\nModifications:\n\nAdjust docker / docker compose files\nAdd different workflows and jobs to deploy and build the project\n\nResult:\nDon't depend on external CI services", "createdAt": "2020-12-22T10:01:50Z", "url": "https://github.com/netty/netty/pull/10879", "merged": true, "mergeCommit": {"oid": "95b96126c3e8d54db5c566d43511d438a389d5dc"}, "closed": true, "closedAt": "2020-12-22T17:33:15Z", "author": {"login": "normanmaurer"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdonkEZAH2gAyNTQ0MDEwNTkyOmVkMDY3NDcxYzM0NzExMzIyYThlOWE3NDdhNDFjNDIzYjEwYWQyMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdorrloAH2gAyNTQ0MDEwNTkyOmE4ZDQ3ZWE0ZWUzYTBkM2Y0MmIwMjk4N2I0ODY0MWFiZmMwZmIzNWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed067471c34711322a8e9a747a41c423b10ad213", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/ed067471c34711322a8e9a747a41c423b10ad213", "committedDate": "2020-12-22T09:59:54Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3d1bf0e943bc0d9fc83d079f3c1cef934de5cd", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/3d3d1bf0e943bc0d9fc83d079f3c1cef934de5cd", "committedDate": "2020-12-22T10:10:48Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d28d5f0fd2e8f6712fee5407faf5a80a48f8ddf8", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/d28d5f0fd2e8f6712fee5407faf5a80a48f8ddf8", "committedDate": "2020-12-22T10:18:19Z", "message": "Remove cross compile for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ed61524c434c69b7297c61bb9206bf9a39725f", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/a5ed61524c434c69b7297c61bb9206bf9a39725f", "committedDate": "2020-12-22T11:10:41Z", "message": "Add more builds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc7ae959c52dea73bc55a02b50a604db04d419c", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/4dc7ae959c52dea73bc55a02b50a604db04d419c", "committedDate": "2020-12-22T11:26:21Z", "message": "Fix compose file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e5162081f3054f2dd890ec114dd90cc2f33fb2", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/84e5162081f3054f2dd890ec114dd90cc2f33fb2", "committedDate": "2020-12-22T11:43:20Z", "message": "Also run verify before trying to build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebea860b22f72c3157b530aa018ce8f969d08261", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/ebea860b22f72c3157b530aa018ce8f969d08261", "committedDate": "2020-12-22T11:46:40Z", "message": "fix verify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d927f5df0c19633cc2b0badc5b3c5cc7d068086", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/9d927f5df0c19633cc2b0badc5b3c5cc7d068086", "committedDate": "2020-12-22T12:07:40Z", "message": "Add deploy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/36b8251c3d757425956a9d37eb293422ac232d52", "committedDate": "2020-12-22T13:46:59Z", "message": "Fail on leak"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDkxMjIy", "url": "https://github.com/netty/netty/pull/10879#pullrequestreview-557091222", "createdAt": "2020-12-22T13:49:09Z", "commit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToxMFrOIJ7x7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0OToyMlrOIJ7ySw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzUzMw==", "bodyText": "Break line", "url": "https://github.com/netty/netty/pull/10879#discussion_r547287533", "createdAt": "2020-12-22T13:49:10Z", "author": {"login": "hyperxpro"}, "path": ".github/workflows/ci-build.yml", "diffHunk": "@@ -0,0 +1,180 @@\n+name: Build project\n+\n+on:\n+  push:\n+    branches: [ \"4.1\", master ]\n+  pull_request:\n+    branches: [ \"4.1\", master ]\n+\n+  schedule:\n+    - cron: '30 1 * * 1'  # At 01:30 on Monday, every Monday.\n+\n+  # Allows you to run this workflow manually from the Actions tab\n+  workflow_dispatch:\n+\n+jobs:\n+  verify:\n+    runs-on: ubuntu-18.04\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: Set up JDK 8\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: verify-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            verify-${{ runner.os }}-maven-\n+\n+      - name: Verify with Maven\n+        run: mvn verify -B --file pom.xml -DskipTests=true\n+\n+  build-linux-x86_64-java8:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java8-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java8-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java8-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java8-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"\n+\n+  build-linux-x86_64-java11:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java11-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java11-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java11-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java11-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"\n+\n+  build-linux-x86_64-java15:\n+    runs-on: ubuntu-latest\n+    needs: verify\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      # Cache .m2/repository\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: build-linux-x86_64-java15-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            build-linux-x86_64-java15-${{ runner.os }}-maven-\n+\n+      # Enable caching of Docker layers\n+      - uses: satackey/action-docker-layer-caching@v0.0.8\n+        continue-on-error: true\n+        with:\n+          key: build-linux-x86_64-java15-docker-cache-{hash}\n+          restore-keys: |\n+            build-linux-x86_64-java15-docker-cache-\n+\n+      - name: Build docker image\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml build\n+\n+      - name: Build project without leak detection\n+        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml run build\n+\n+      - name: Build project with leak detection\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml run build-leak | tee build-leak.output\n+\n+      - name: Checking for detected leak\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          if grep -q 'LEAK:' build-leak.output ; then\n+            echo \"Leak detected, please inspect build log\"\n+            exit 1\n+          else\n+            echo \"No Leak detected\"\n+          fi\n+\n+      - uses: actions/upload-artifact@v2\n+        if: ${{ failure() }}\n+        with:\n+          name: target\n+          path: \"**/target/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzYyNw==", "bodyText": "break line", "url": "https://github.com/netty/netty/pull/10879#discussion_r547287627", "createdAt": "2020-12-22T13:49:22Z", "author": {"login": "hyperxpro"}, "path": "docker/docker-compose.yaml", "diffHunk": "@@ -39,35 +47,4 @@ services:\n       - ~/.gnupg:/root/.gnupg:delegated\n       - ..:/code:delegated\n       - ~/.m2:/root/.m2:delegated\n-    entrypoint: /bin/bash\n-\n-  cross-compile-aarch64-runtime-setup:\n-    image: netty:cross_compile_aarch64\n-    build:\n-      context: .\n-      dockerfile: Dockerfile.cross_compile_aarch64\n-      args:\n-        gcc_version : \"4.9-2016.02\"\n-\n-  cross-compile-aarch64-shell:\n-    image: netty:cross_compile_aarch64\n-    depends_on: [cross-compile-aarch64-runtime-setup]\n-    volumes:\n-      - ~/.ssh:/root/.ssh:delegated\n-      - ~/.gnupg:/root/.gnupg:delegated\n-      - ..:/code:delegated\n-      - ~/.m2:/root/.m2:delegated\n-    entrypoint: /bin/bash\n-    working_dir: /code\n-\n-  cross-compile-aarch64-build:\n-    image: netty:cross_compile_aarch64\n-    depends_on: [cross-compile-aarch64-runtime-setup]\n-    volumes:\n-      - ~/.ssh:/root/.ssh:delegated\n-      - ~/.gnupg:/root/.gnupg:delegated\n-      - ..:/code:delegated\n-      - ~/.m2:/root/.m2:delegated\n-    # Since we are cross compiling netty-transport-native-epoll as aarch64 which cannot be loaded on x86_64, we add `skipTests` here to skip the test.\n-    command: /bin/bash -cl \"pushd ./transport-native-unix-common && ../mvnw clean install -Plinux-aarch64 && popd && pushd ./transport-native-epoll && ../mvnw clean install -Plinux-aarch64 -DskipTests && popd\"\n-    working_dir: /code\n+    entrypoint: /bin/bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b8251c3d757425956a9d37eb293422ac232d52"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8d47ea4ee3a0d3f42b02987b48641abfc0fb35e", "author": {"user": {"login": "normanmaurer", "name": "Norman Maurer"}}, "url": "https://github.com/netty/netty/commit/a8d47ea4ee3a0d3f42b02987b48641abfc0fb35e", "committedDate": "2020-12-22T14:47:44Z", "message": "review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4876, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}