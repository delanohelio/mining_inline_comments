{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODIxNjk5", "number": 247, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyMzo1OVrOE40akA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyODo0NVrOE40f5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDE0NDgwOnYy", "diffSide": "RIGHT", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyMzo1OVrOHy901A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDo1Mjo0OVrOHy_G-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng==", "bodyText": "Does the current file finder take into account search depth? I know some customers are going to have requirements files not at root level, for that we could just say use the property.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523203796", "createdAt": "2020-11-13T20:23:59Z", "author": {"login": "JakeMathews"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwODk4OA==", "bodyText": "Hmm it doesn't. That seems odd. I think it's reasonable to expect that we'd respect search depth for this, I'll add that.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523208988", "createdAt": "2020-11-13T20:35:47Z", "author": {"login": "rottebds"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIxNTAzMQ==", "bodyText": "I talked with Jordan about it. We think what you already have is good", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523215031", "createdAt": "2020-11-13T20:42:42Z", "author": {"login": "JakeMathews"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIyNDgyNA==", "bodyText": "Yeah, I think ideally we should respect search depth here but I'm not keen on adding another property.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523224824", "createdAt": "2020-11-13T20:52:49Z", "author": {"login": "rottebds"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDE1ODQ1OnYy", "diffSide": "RIGHT", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyODo0NVrOHy99WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDo0MzoxM1rOHy-jBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng==", "bodyText": "Any reason for not using requirementFiles.isEmpty()?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523205976", "createdAt": "2020-11-13T20:28:45Z", "author": {"login": "JakeMathews"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)\n+                                    .stream()\n+                                    .map(File::toPath)\n+                                    .collect(Collectors.toList());\n+        }\n+        boolean hasRequirements = CollectionUtils.isNotEmpty(requirementsFiles);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNjk5Mw==", "bodyText": "Previous code checked if the requirementsFiles object was null, so I assumed it must be nullable.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523206993", "createdAt": "2020-11-13T20:31:02Z", "author": {"login": "rottebds"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)\n+                                    .stream()\n+                                    .map(File::toPath)\n+                                    .collect(Collectors.toList());\n+        }\n+        boolean hasRequirements = CollectionUtils.isNotEmpty(requirementsFiles);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNzgxOA==", "bodyText": "I suppose at this point we're no longer nullable, so we could use the other method but meh-- I think isNotEmpty tells a better story than !object.isEmpty()", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523207818", "createdAt": "2020-11-13T20:33:09Z", "author": {"login": "rottebds"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)\n+                                    .stream()\n+                                    .map(File::toPath)\n+                                    .collect(Collectors.toList());\n+        }\n+        boolean hasRequirements = CollectionUtils.isNotEmpty(requirementsFiles);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIxNTYyMQ==", "bodyText": "I agree with that", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523215621", "createdAt": "2020-11-13T20:43:13Z", "author": {"login": "JakeMathews"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)\n+                                    .stream()\n+                                    .map(File::toPath)\n+                                    .collect(Collectors.toList());\n+        }\n+        boolean hasRequirements = CollectionUtils.isNotEmpty(requirementsFiles);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}, "originalCommit": {"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}