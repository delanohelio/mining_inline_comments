{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDI2MDMy", "number": 119, "title": "Individual file match property", "bodyText": "Description\nhttps://jira-sig.internal.synopsys.com/browse/IDETECT-1860", "createdAt": "2020-02-21T19:01:10Z", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119", "merged": true, "mergeCommit": {"oid": "ca3bf790b5be6eae4703aca3f8a30cbb94129bd0"}, "closed": true, "closedAt": "2020-02-24T23:56:01Z", "author": {"login": "crowleySynopsys"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBJfN7gH2gAyMzc4NDI2MDMyOmJlYzFiNzljYzlhNDQzNjQzYmQ3MThlMWJlMDI3M2EzMWVjYTFlNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHmgpMAH2gAyMzc4NDI2MDMyOjZmNTY5N2NkMTBhZDg5ZWY5Nzc4Y2VlMjdiODZjZGUzNDg2ZTMyYzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bec1b79cc9a443643bd718e1be0273a31eca1e6c", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/bec1b79cc9a443643bd718e1be0273a31eca1e6c", "committedDate": "2020-02-04T22:43:15Z", "message": "feat(property): Added property BLACKDUCK_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING, created configuration/enums folder (IDETECT-1860)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07f02f5ef1b4611b2622207aef89c53e36e37f30", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/07f02f5ef1b4611b2622207aef89c53e36e37f30", "committedDate": "2020-02-05T17:52:29Z", "message": "feat(scanner): Add field individualFileMatching to SignatureScannerOptions (IDETECT-1860)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d21d37052b56a4342ea7d6b68f59b37de60c70a", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/5d21d37052b56a4342ea7d6b68f59b37de60c70a", "committedDate": "2020-02-10T17:39:27Z", "message": "Merge branch 'master' into individualFileMatchProperty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0d53e414652420100decba9c045545c037995e", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4f0d53e414652420100decba9c045545c037995e", "committedDate": "2020-02-10T19:35:09Z", "message": "feat(property): Merge branch 'licenseStringSearchProperty' into individualFileMatchProperty, passed individualFileMatching to ScanCommand (IDETECT-1860)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3ee35bb618ab88fddbf58361f38119f6773f7c8", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f3ee35bb618ab88fddbf58361f38119f6773f7c8", "committedDate": "2020-02-21T18:59:26Z", "message": "Merged master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd5b9dbd315cab42cf74af51602a61e55971502b", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/bd5b9dbd315cab42cf74af51602a61e55971502b", "committedDate": "2020-02-21T19:34:51Z", "message": "fix(scanner): Edited conditional to enable source upload when license Search is set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4fa3d7fe3a373f382d33100ac452dfd2ce8cf531", "committedDate": "2020-02-24T20:45:12Z", "message": "Merge branch 'master' into individualFileMatchProperty"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzM5MDI2", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#pullrequestreview-363739026", "createdAt": "2020-02-24T22:12:37Z", "commit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxMjozN1rOFtxxYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxODowM1rOFtx6vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NTY5Ng==", "bodyText": "You should be using a FilterableEnumListProperty. Use the detect.included.detector.types property as an example.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#discussion_r383545696", "createdAt": "2020-02-24T22:12:37Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/configuration/DetectProperties.kt", "diffHunk": "@@ -246,6 +236,11 @@ class DetectProperties {\n             setHelp(\"A comma-separated list of values to be used with the Signature Scanner --exclude flag.\", \"Each pattern provided is passed to the signature scanner (Black Duck scan CLI) as a value for an --exclude option. The signature scanner requires that these exclusion patterns start and end with a forward slash (/) and may not contain double asterisks (**). These patterns will be added to the paths created from detect.blackduck.signature.scanner.exclusion.name.patterns and passed as --exclude values. Use this property to pass patterns directly to the signature scanner as-is. For example: suppose you are running in bash on Linux, and have a subdirectory named blackduck-common that you want to exclude from signature scanning. Any of the following would exclude it: --detect.blackduck.signature.scanner.exclusion.patterns=/blackduck-common/, --detect.blackduck.signature.scanner.exclusion.patterns='/blackduck-common/', --detect.blackduck.signature.scanner.exclusion.patterns='/blackduck-*/'. Use detect.blackduck.signature.scanner.exclusion.name.patterns when you want Detect to convert the given patterns to actual paths.\")\n             setGroups(DetectGroup.SignatureScanner, DetectGroup.SourceScan)\n         }\n+        val DETECT_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING = EnumProperty(\"detect.blackduck.signature.scanner.individual.file.matching\", IndividualFileMatchMode.NONE, IndividualFileMatchMode::class.java).apply {\n+            setInfo(\"Individual File Matching\", \"6.2.0\")\n+            setHelp(\"Users may set this property to SOURCE, BINARY, ALL, or NONE, to indicate what types of files they want to match\")\n+            setGroups(DetectGroup.SignatureScanner)\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NjUzOQ==", "bodyText": "Also the help text should not include hard coded example values anymore. The new configuration system is aware of the potential values.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#discussion_r383546539", "createdAt": "2020-02-24T22:14:35Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/configuration/DetectProperties.kt", "diffHunk": "@@ -246,6 +236,11 @@ class DetectProperties {\n             setHelp(\"A comma-separated list of values to be used with the Signature Scanner --exclude flag.\", \"Each pattern provided is passed to the signature scanner (Black Duck scan CLI) as a value for an --exclude option. The signature scanner requires that these exclusion patterns start and end with a forward slash (/) and may not contain double asterisks (**). These patterns will be added to the paths created from detect.blackduck.signature.scanner.exclusion.name.patterns and passed as --exclude values. Use this property to pass patterns directly to the signature scanner as-is. For example: suppose you are running in bash on Linux, and have a subdirectory named blackduck-common that you want to exclude from signature scanning. Any of the following would exclude it: --detect.blackduck.signature.scanner.exclusion.patterns=/blackduck-common/, --detect.blackduck.signature.scanner.exclusion.patterns='/blackduck-common/', --detect.blackduck.signature.scanner.exclusion.patterns='/blackduck-*/'. Use detect.blackduck.signature.scanner.exclusion.name.patterns when you want Detect to convert the given patterns to actual paths.\")\n             setGroups(DetectGroup.SignatureScanner, DetectGroup.SourceScan)\n         }\n+        val DETECT_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING = EnumProperty(\"detect.blackduck.signature.scanner.individual.file.matching\", IndividualFileMatchMode.NONE, IndividualFileMatchMode::class.java).apply {\n+            setInfo(\"Individual File Matching\", \"6.2.0\")\n+            setHelp(\"Users may set this property to SOURCE, BINARY, ALL, or NONE, to indicate what types of files they want to match\")\n+            setGroups(DetectGroup.SignatureScanner)\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NTY5Ng=="}, "originalCommit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NjgzMg==", "bodyText": "Remove these two options once the property is a FilterableEnumListProperty.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#discussion_r383546832", "createdAt": "2020-02-24T22:15:14Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/configuration/enums/IndividualFileMatchMode.kt", "diffHunk": "@@ -0,0 +1,30 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.configuration.enums\n+\n+enum class IndividualFileMatchMode {\n+    NONE,\n+    ALL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0Nzc4OA==", "bodyText": "Keep this as an enum!", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#discussion_r383547788", "createdAt": "2020-02-24T22:17:20Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/tool/signaturescanner/BlackDuckSignatureScannerOptions.kt", "diffHunk": "@@ -41,5 +41,6 @@ class BlackDuckSignatureScannerOptions(\n         val codeLocationSuffix: String?,\n         val additionalArguments: String?,\n         val maxDepth: Int,\n+        val individualFileMatching: String?,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODA5Mw==", "bodyText": "Don't convert the enum to a String by calling \".name\". The configuration has done the heavy lifting of converting it to an enum for you. It should remain an enum in the BlackDuckSignatureScannerOptions and be converted to a String by the user of the BlackDuckSignatureScannerOptions if need be.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/119#discussion_r383548093", "createdAt": "2020-02-24T22:18:03Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/configuration/DetectConfigurationFactory.kt", "diffHunk": "@@ -314,6 +314,7 @@ open class DetectConfigurationFactory(private val detectConfiguration: PropertyC\n         val dryRun = PropertyConfigUtils.getFirstProvidedValueOrDefault(detectConfiguration, DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN, DetectProperties.DETECT_HUB_SIGNATURE_SCANNER_DRY_RUN)\n         val uploadSource = detectConfiguration.getValue(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_UPLOAD_SOURCE_MODE)\n         val licenseSearch = detectConfiguration.getValue(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_LICENSE_SEARCH);\n+        val individualFileMatching = detectConfiguration.getValue(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING).name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa3d7fe3a373f382d33100ac452dfd2ce8cf531"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7778318638a906ffb3884510caf11c0e78759f4a", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7778318638a906ffb3884510caf11c0e78759f4a", "committedDate": "2020-02-24T23:14:06Z", "message": "fix(property): Leaving individualFileMatch property as enum when extracted from config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f5697cd10ad89ef9778cee27b86cde3486e32c0", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6f5697cd10ad89ef9778cee27b86cde3486e32c0", "committedDate": "2020-02-24T23:55:36Z", "message": "fix(property): Moved ExtendedSnippetMode to com.synopsys.integration.detect.tool.signaturescanner.enums"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3269, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}