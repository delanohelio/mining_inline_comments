{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTQ1Mjg1", "number": 116, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODoyNzoxNFrODh-JDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjozMDozOVrODkucgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQ3NzI3OnYy", "diffSide": "RIGHT", "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/packagist/functional/PackagistDetectableTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODoyNzoxNFrOFtAYZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODo0ODo0NFrOFtA-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNjQ4Ng==", "bodyText": "Seems like very few asserts for such a large input file.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/116#discussion_r382736486", "createdAt": "2020-02-21T18:27:14Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/packagist/functional/PackagistDetectableTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ * detectable\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detectable.detectables.packagist.functional;\n+\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.jupiter.api.Assertions;\n+\n+import com.synopsys.integration.bdio.model.Forge;\n+import com.synopsys.integration.detectable.Detectable;\n+import com.synopsys.integration.detectable.DetectableEnvironment;\n+import com.synopsys.integration.detectable.Extraction;\n+import com.synopsys.integration.detectable.detectables.packagist.ComposerLockDetectableOptions;\n+import com.synopsys.integration.detectable.functional.DetectableFunctionalTest;\n+import com.synopsys.integration.detectable.util.graph.NameVersionGraphAssert;\n+\n+public class PackagistDetectableTest extends DetectableFunctionalTest {\n+\n+    public PackagistDetectableTest() throws IOException {\n+        super(\"composer\");\n+    }\n+\n+    @Override\n+    protected void setup() throws IOException {\n+        addFile(Paths.get(\"composer.lock\"),\n+            \"{\",\n+            \"   \\\"_readme\\\": [\\\"dummy README\\\"],\",\n+            \"   \\\"hash\\\": \\\"3bedbf455f54168900e467a64bbe2b86\\\",\",\n+            \"   \\\"packages\\\": [\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"clue/graph\\\",\",\n+            \"           \\\"version\\\": \\\"v0.9.0\\\",\",\n+            \"           \\\"source\\\": {\",\n+            \"               \\\"type\\\": \\\"git\\\",\",\n+            \"               \\\"url\\\": \\\"https://github.com/clue/graph.git\\\",\",\n+            \"               \\\"reference\\\": \\\"0336a4d5229fa61a20ccceaeab25e52ac9542700\\\"\",\n+            \"           },\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"php\\\": \\\">=5.3.0\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"phpunit/phpunit\\\": \\\"~4.0\\\"\",\n+            \"           }\",\n+            \"       },\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"graphp/algorithms\\\",\",\n+            \"           \\\"version\\\": \\\"v0.8.1\\\",\",\n+            \"           \\\"source\\\": {\",\n+            \"               \\\"type\\\": \\\"git\\\",\",\n+            \"               \\\"url\\\": \\\"https://github.com/graphp/algorithms.git\\\",\",\n+            \"               \\\"reference\\\": \\\"81db4049c35730767ec8f97fb5c4844234b86cef\\\"\",\n+            \"           },\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"clue/graph\\\": \\\"~0.9.0|~0.8.0\\\",\",\n+            \"               \\\"php\\\": \\\">=5.3\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"psr/log\\\": \\\"~1.0\\\",\",\n+            \"               \\\"symfony/event-dispatcher\\\": \\\"~2.1\\\",\",\n+            \"               \\\"symfony/phpunit-bridge\\\": \\\"~2.7\\\"\",\n+            \"           }\",\n+            \"       },\",\n+            \"   ],\",\n+            \"   \\\"packages-dev\\\": []\",\n+            \"}\"\n+        );\n+\n+        addFile(Paths.get(\"composer.json\"),\n+            \"{\",\n+            \"   \\\"name\\\": \\\"clue/graph-composer\\\",\",\n+            \"   \\\"version\\\": \\\"1.0.0\\\",\",\n+            \"   \\\"keywords\\\": [\\\"dependency graph\\\", \\\"visualize dependencies\\\", \\\"visualize composer\\\"],\",\n+            \"   \\\"license\\\": \\\"MIT\\\",\",\n+            \"   \\\"require\\\": {\",\n+            \"       \\\"php\\\": \\\"^5.3.6 || ^7.0\\\",\",\n+            \"       \\\"clue/graph\\\": \\\"^0.9.0\\\",\",\n+            \"       \\\"jms/composer-deps-analyzer\\\": \\\"0.1.*\\\",\",\n+            \"       \\\"symfony/console\\\": \\\"^2.1 || ^3.0\\\",\",\n+            \"       \\\"graphp/graphviz\\\": \\\"^0.2.0\\\"\",\n+            \"   },\",\n+            \"   \\\"autoload\\\": {\",\n+            \"       \\\"psr-0\\\": { \\\"Clue\\\\\\\\GraphComposer\\\": \\\"src/\\\" }\",\n+            \"   },\",\n+            \"   \\\"bin\\\": [ \\\"bin/graph-composer\\\" ],\",\n+            \"   \\\"extra\\\": {\",\n+            \"       \\\"phar\\\": {\",\n+            \"           \\\"bundler\\\": \\\"composer\\\"\",\n+            \"       }\",\n+            \"   },\",\n+            \"   \\\"config\\\": {\",\n+            \"       \\\"platform\\\": {\",\n+            \"           \\\"php\\\": \\\"5.3.6\\\"\",\n+            \"       }\",\n+            \"   }\",\n+            \"}\"\n+        );\n+    }\n+\n+    @NotNull\n+    @Override\n+    public Detectable create(@NotNull final DetectableEnvironment detectableEnvironment) {\n+        return detectableFactory.createComposerDetectable(detectableEnvironment, new ComposerLockDetectableOptions(true));\n+    }\n+\n+    @Override\n+    public void assertExtraction(@NotNull final Extraction extraction) {\n+        Assertions.assertNotEquals(0, extraction.getCodeLocations().size(), \"A code location should have been generated.\");\n+\n+        final NameVersionGraphAssert graphAssert = new NameVersionGraphAssert(Forge.PACKAGIST, extraction.getCodeLocations().get(0).getDependencyGraph());\n+\n+        graphAssert.hasRootSize(1);\n+        graphAssert.hasRootDependency(\"clue/graph\", \"v0.9.0\");\n+        graphAssert.hasParentChildRelationship(\"graphp/algorithms\", \"v0.8.1\", \"clue/graph\", \"v0.9.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7cf83e3e4134f896643bab2a2ebd258a136295"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NjIwNw==", "bodyText": "This one's input is a little noisy because packagist requires a composer.lock and a composer.json.  I can trim down some of the unused info, but there's nothing else to assert on the graph that is produced.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/116#discussion_r382746207", "createdAt": "2020-02-21T18:48:44Z", "author": {"login": "crowleySynopsys"}, "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/packagist/functional/PackagistDetectableTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ * detectable\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detectable.detectables.packagist.functional;\n+\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.jupiter.api.Assertions;\n+\n+import com.synopsys.integration.bdio.model.Forge;\n+import com.synopsys.integration.detectable.Detectable;\n+import com.synopsys.integration.detectable.DetectableEnvironment;\n+import com.synopsys.integration.detectable.Extraction;\n+import com.synopsys.integration.detectable.detectables.packagist.ComposerLockDetectableOptions;\n+import com.synopsys.integration.detectable.functional.DetectableFunctionalTest;\n+import com.synopsys.integration.detectable.util.graph.NameVersionGraphAssert;\n+\n+public class PackagistDetectableTest extends DetectableFunctionalTest {\n+\n+    public PackagistDetectableTest() throws IOException {\n+        super(\"composer\");\n+    }\n+\n+    @Override\n+    protected void setup() throws IOException {\n+        addFile(Paths.get(\"composer.lock\"),\n+            \"{\",\n+            \"   \\\"_readme\\\": [\\\"dummy README\\\"],\",\n+            \"   \\\"hash\\\": \\\"3bedbf455f54168900e467a64bbe2b86\\\",\",\n+            \"   \\\"packages\\\": [\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"clue/graph\\\",\",\n+            \"           \\\"version\\\": \\\"v0.9.0\\\",\",\n+            \"           \\\"source\\\": {\",\n+            \"               \\\"type\\\": \\\"git\\\",\",\n+            \"               \\\"url\\\": \\\"https://github.com/clue/graph.git\\\",\",\n+            \"               \\\"reference\\\": \\\"0336a4d5229fa61a20ccceaeab25e52ac9542700\\\"\",\n+            \"           },\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"php\\\": \\\">=5.3.0\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"phpunit/phpunit\\\": \\\"~4.0\\\"\",\n+            \"           }\",\n+            \"       },\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"graphp/algorithms\\\",\",\n+            \"           \\\"version\\\": \\\"v0.8.1\\\",\",\n+            \"           \\\"source\\\": {\",\n+            \"               \\\"type\\\": \\\"git\\\",\",\n+            \"               \\\"url\\\": \\\"https://github.com/graphp/algorithms.git\\\",\",\n+            \"               \\\"reference\\\": \\\"81db4049c35730767ec8f97fb5c4844234b86cef\\\"\",\n+            \"           },\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"clue/graph\\\": \\\"~0.9.0|~0.8.0\\\",\",\n+            \"               \\\"php\\\": \\\">=5.3\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"psr/log\\\": \\\"~1.0\\\",\",\n+            \"               \\\"symfony/event-dispatcher\\\": \\\"~2.1\\\",\",\n+            \"               \\\"symfony/phpunit-bridge\\\": \\\"~2.7\\\"\",\n+            \"           }\",\n+            \"       },\",\n+            \"   ],\",\n+            \"   \\\"packages-dev\\\": []\",\n+            \"}\"\n+        );\n+\n+        addFile(Paths.get(\"composer.json\"),\n+            \"{\",\n+            \"   \\\"name\\\": \\\"clue/graph-composer\\\",\",\n+            \"   \\\"version\\\": \\\"1.0.0\\\",\",\n+            \"   \\\"keywords\\\": [\\\"dependency graph\\\", \\\"visualize dependencies\\\", \\\"visualize composer\\\"],\",\n+            \"   \\\"license\\\": \\\"MIT\\\",\",\n+            \"   \\\"require\\\": {\",\n+            \"       \\\"php\\\": \\\"^5.3.6 || ^7.0\\\",\",\n+            \"       \\\"clue/graph\\\": \\\"^0.9.0\\\",\",\n+            \"       \\\"jms/composer-deps-analyzer\\\": \\\"0.1.*\\\",\",\n+            \"       \\\"symfony/console\\\": \\\"^2.1 || ^3.0\\\",\",\n+            \"       \\\"graphp/graphviz\\\": \\\"^0.2.0\\\"\",\n+            \"   },\",\n+            \"   \\\"autoload\\\": {\",\n+            \"       \\\"psr-0\\\": { \\\"Clue\\\\\\\\GraphComposer\\\": \\\"src/\\\" }\",\n+            \"   },\",\n+            \"   \\\"bin\\\": [ \\\"bin/graph-composer\\\" ],\",\n+            \"   \\\"extra\\\": {\",\n+            \"       \\\"phar\\\": {\",\n+            \"           \\\"bundler\\\": \\\"composer\\\"\",\n+            \"       }\",\n+            \"   },\",\n+            \"   \\\"config\\\": {\",\n+            \"       \\\"platform\\\": {\",\n+            \"           \\\"php\\\": \\\"5.3.6\\\"\",\n+            \"       }\",\n+            \"   }\",\n+            \"}\"\n+        );\n+    }\n+\n+    @NotNull\n+    @Override\n+    public Detectable create(@NotNull final DetectableEnvironment detectableEnvironment) {\n+        return detectableFactory.createComposerDetectable(detectableEnvironment, new ComposerLockDetectableOptions(true));\n+    }\n+\n+    @Override\n+    public void assertExtraction(@NotNull final Extraction extraction) {\n+        Assertions.assertNotEquals(0, extraction.getCodeLocations().size(), \"A code location should have been generated.\");\n+\n+        final NameVersionGraphAssert graphAssert = new NameVersionGraphAssert(Forge.PACKAGIST, extraction.getCodeLocations().get(0).getDependencyGraph());\n+\n+        graphAssert.hasRootSize(1);\n+        graphAssert.hasRootDependency(\"clue/graph\", \"v0.9.0\");\n+        graphAssert.hasParentChildRelationship(\"graphp/algorithms\", \"v0.8.1\", \"clue/graph\", \"v0.9.0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNjQ4Ng=="}, "originalCommit": {"oid": "4a7cf83e3e4134f896643bab2a2ebd258a136295"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODM2MjkxOnYy", "diffSide": "RIGHT", "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/packagist/functional/PackagistDetectableTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjozMDozOVrOFxNRFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjozMDozOVrOFxNRFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0MTkxMQ==", "bodyText": "I am a little concerned that the dependencies listed here don't appear in the graph. The composer.json and composer.lock came from the same project at the same time?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/116#discussion_r387141911", "createdAt": "2020-03-03T16:30:39Z", "author": {"login": "JakeMathews"}, "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/packagist/functional/PackagistDetectableTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ * detectable\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detectable.detectables.packagist.functional;\n+\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.jupiter.api.Assertions;\n+\n+import com.synopsys.integration.bdio.model.Forge;\n+import com.synopsys.integration.detectable.Detectable;\n+import com.synopsys.integration.detectable.DetectableEnvironment;\n+import com.synopsys.integration.detectable.Extraction;\n+import com.synopsys.integration.detectable.detectables.packagist.ComposerLockDetectableOptions;\n+import com.synopsys.integration.detectable.functional.DetectableFunctionalTest;\n+import com.synopsys.integration.detectable.util.graph.NameVersionGraphAssert;\n+\n+public class PackagistDetectableTest extends DetectableFunctionalTest {\n+\n+    public PackagistDetectableTest() throws IOException {\n+        super(\"composer\");\n+    }\n+\n+    @Override\n+    protected void setup() throws IOException {\n+        addFile(Paths.get(\"composer.lock\"),\n+            \"{\",\n+            \"   \\\"_readme\\\": [\\\"dummy README\\\"],\",\n+            \"   \\\"hash\\\": \\\"3bedbf455f54168900e467a64bbe2b86\\\",\",\n+            \"   \\\"packages\\\": [\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"clue/graph\\\",\",\n+            \"           \\\"version\\\": \\\"v0.9.0\\\",\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"php\\\": \\\">=5.3.0\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"phpunit/phpunit\\\": \\\"~4.0\\\"\",\n+            \"           }\",\n+            \"       },\",\n+            \"       {\",\n+            \"           \\\"name\\\": \\\"graphp/algorithms\\\",\",\n+            \"           \\\"version\\\": \\\"v0.8.1\\\",\",\n+            \"           \\\"require\\\": {\",\n+            \"               \\\"clue/graph\\\": \\\"~0.9.0|~0.8.0\\\",\",\n+            \"               \\\"php\\\": \\\">=5.3\\\"\",\n+            \"           },\",\n+            \"           \\\"require-dev\\\": {\",\n+            \"               \\\"psr/log\\\": \\\"~1.0\\\",\",\n+            \"               \\\"symfony/event-dispatcher\\\": \\\"~2.1\\\",\",\n+            \"               \\\"symfony/phpunit-bridge\\\": \\\"~2.7\\\"\",\n+            \"           }\",\n+            \"       }\",\n+            \"   ],\",\n+            \"   \\\"packages-dev\\\": []\",\n+            \"}\"\n+        );\n+\n+        addFile(Paths.get(\"composer.json\"),\n+            \"{\",\n+            \"   \\\"name\\\": \\\"clue/graph-composer\\\",\",\n+            \"   \\\"version\\\": \\\"1.0.0\\\",\",\n+            \"   \\\"keywords\\\": [\\\"dependency graph\\\", \\\"visualize dependencies\\\", \\\"visualize composer\\\"],\",\n+            \"   \\\"license\\\": \\\"MIT\\\",\",\n+            \"   \\\"require\\\": {\",\n+            \"       \\\"php\\\": \\\"^5.3.6 || ^7.0\\\",\",\n+            \"       \\\"clue/graph\\\": \\\"^0.9.0\\\",\",\n+            \"       \\\"jms/composer-deps-analyzer\\\": \\\"0.1.*\\\",\",\n+            \"       \\\"symfony/console\\\": \\\"^2.1 || ^3.0\\\",\",\n+            \"       \\\"graphp/graphviz\\\": \\\"^0.2.0\\\"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc99900f352b758e3a4e5f1965890d883fd854fc"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1556, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}