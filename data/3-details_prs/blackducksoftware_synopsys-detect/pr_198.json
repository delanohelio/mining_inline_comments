{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjYxMzgz", "number": 198, "title": "Sb bazel muliple rule types off master", "bodyText": "Changes:\nAdded support for bazel targets that use multiple (supported) repository rule types, which is a requirement for at least one customer, and likely others as they move more projects to bazel.\nThis involved:\n\nChanging the bazel.dependency.type property from a single value (EnumValue) to a list of values, including ALL and NONE (by making it a FilterableEnumValue). I see ALL as really valuable here, and getting NONE \"for free\" eliminates the point for the UNSPECIFIED enum value, so I removed it.\nChanging the parsing of bazel WORKSPACE files to it will find the set of supported repository rule types, not just the first one.\nBazelExtractor now loops through the rule types and aggregates the dependencies collected. This involved slightly changing the API for Pipeline.\nMaking the bazel detector more error tolerant. Since Detect can't always determine the rule type (it's not always in the WORKSPACE file that it parses to find it), I assume many users will start setting the list of rule types to ALL (the most convenient option; it will also automatically pick up future added rule types) which results in Detect attempting to discover dependencies from inappropriate (for the project/target) rules, so I concluded that we don't want that to result in errors anymore. Now it just results in no additional components from that inappropriate rule.\n\nThis also involved a lot of testing. Along the way I noticed that changing the maven_jar pipeline (which bazel has dropped support for) to use bazel cquery instead of bazel query produced the same results and was required to avoid that particular query throwing an error with newer versions of bazel (and assuming customers use ALL, this will matter).\nI think the classes most worthy of review are BazelDetectableOptions and BazelExtractor.", "createdAt": "2020-06-30T19:58:00Z", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198", "merged": true, "mergeCommit": {"oid": "0377b37a14bd201d238e4673d395182399271a2e"}, "closed": true, "closedAt": "2020-07-14T15:59:17Z", "author": {"login": "stevebillings"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrohiyAH2gAyNDQyMjYxMzgzOmI5YjE2ZTQ3MjczYjg1OTAwMjMwMGVjNGQ0ZmFlOGY2MWFmZTA4Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc04HGbgFqTQ0ODIzOTU2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9b16e47273b859002300ec4d4fae8f61afe0837", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b9b16e47273b859002300ec4d4fae8f61afe0837", "committedDate": "2020-06-15T22:37:40Z", "message": "Release 6.4.0-SIGQA1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "101dd21b528de4931bb0c31bf91c59c425bd2dfd", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/101dd21b528de4931bb0c31bf91c59c425bd2dfd", "committedDate": "2020-06-15T22:48:06Z", "message": "Using the next snapshot post release 6.4.0-SIGQA2-SNAPSHOT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f837f67fcce4d9cb22641abbd37316796e03e8f2", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f837f67fcce4d9cb22641abbd37316796e03e8f2", "committedDate": "2020-06-19T21:48:26Z", "message": "feat(bazel): enable collection of dependencies from multiple repository rule types; previously existing tests pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f2cd86ac17a392d38e4627cb5c8cf8b2e1413d", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f8f2cd86ac17a392d38e4627cb5c8cf8b2e1413d", "committedDate": "2020-06-19T21:49:18Z", "message": "test(bazel): added test for detecting multiple supported rules in a workspace file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab90204f10562a9589bf7dfe405e515c4892ee38", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ab90204f10562a9589bf7dfe405e515c4892ee38", "committedDate": "2020-06-21T16:29:29Z", "message": "test(bazel): added test for mixed-repo-rule build target scenario"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f70304ab8a9e336b8688dc2789c4c6398097c571", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f70304ab8a9e336b8688dc2789c4c6398097c571", "committedDate": "2020-06-22T15:59:37Z", "message": "fix(bazel): use cquery in first maven_jar query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e6426c46c9676bca364cc62ce38c040e1851c0", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/02e6426c46c9676bca364cc62ce38c040e1851c0", "committedDate": "2020-06-22T17:20:31Z", "message": "fix(bazel): fixes related to running w/ multiple rules, some of which don't apply"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c8c82553c3e9d4b75cfe019d7bf30fbba7808c", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/03c8c82553c3e9d4b75cfe019d7bf30fbba7808c", "committedDate": "2020-06-22T17:22:57Z", "message": "style(doc): update bazel doc for change to cquery for maven_jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7341db2b09829ea81c4d065a2bd717b690cc2f54", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7341db2b09829ea81c4d065a2bd717b690cc2f54", "committedDate": "2020-06-22T19:43:22Z", "message": "fix(bazel): improved error reporting from bazel command failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "536cb7193a4cd30d8868aba01453b1bed64141a4", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/536cb7193a4cd30d8868aba01453b1bed64141a4", "committedDate": "2020-06-22T20:20:20Z", "message": "refactor(bazel): refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b6616215ba51645bb79db391a14e2be292b5c33", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0b6616215ba51645bb79db391a14e2be292b5c33", "committedDate": "2020-06-22T21:44:50Z", "message": "test(bazel): added WorkspaceRuleChooser tests for multi-rule capability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b34373d0fc44adc02f60e6a3f7cdda9a53dc0fca", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b34373d0fc44adc02f60e6a3f7cdda9a53dc0fca", "committedDate": "2020-06-22T21:47:30Z", "message": "test(bazel): Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d745bf2b0cd03572a55ffd183bb9b5fe46e598b4", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d745bf2b0cd03572a55ffd183bb9b5fe46e598b4", "committedDate": "2020-06-23T20:54:22Z", "message": "feat(bazel): adding support for ALL and NONE to bazel dependency type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d52f088812068b8edc4fb8c29970f30722fe114", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/9d52f088812068b8edc4fb8c29970f30722fe114", "committedDate": "2020-06-23T21:41:23Z", "message": "refactor(bazel): clean up rule chooser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd206fad80bfacea488db7bb366d2095bf61ec1", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ebd206fad80bfacea488db7bb366d2095bf61ec1", "committedDate": "2020-06-24T17:13:48Z", "message": "test(bazel): refactoring test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ff8a2f9e66b6dfd8677d15e3a638f4b2e9f11cc", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0ff8a2f9e66b6dfd8677d15e3a638f4b2e9f11cc", "committedDate": "2020-06-24T19:25:02Z", "message": "fix(bazel): Eliminate UNSPECIFIED choice for bazel dependency type, since NONE is now available"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee48f69b9c01df827cb539982565801c35fd5506", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ee48f69b9c01df827cb539982565801c35fd5506", "committedDate": "2020-06-24T19:41:44Z", "message": "refactor(bazel): make better use of FilterableEnumUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e96089835c40bebf5d168b91476e467dd26ac1", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/90e96089835c40bebf5d168b91476e467dd26ac1", "committedDate": "2020-06-24T20:46:35Z", "message": "fix(bazel): Fix for the ALL rules case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86b1e53fafab795a079b233d8b76e34fd49c09d", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b86b1e53fafab795a079b233d8b76e34fd49c09d", "committedDate": "2020-06-26T15:22:35Z", "message": "refactor(bazel): remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6299c805fb5d0545503137436b71cda03a7c4d1a", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6299c805fb5d0545503137436b71cda03a7c4d1a", "committedDate": "2020-06-26T15:50:53Z", "message": "Merge branch 'sb_bazelMultipleRuleTypes' into sb_bazelMulipleRuleTypesOffMaster\n\n# Conflicts:\n#\tbuild.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24d608891f6b6653a5db1ea8fe3d7b83e51adaef", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/24d608891f6b6653a5db1ea8fe3d7b83e51adaef", "committedDate": "2020-06-26T16:05:25Z", "message": "refactor(bazel): naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5204e99a3aa1a7cd4227c792b08361217262c971", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/5204e99a3aa1a7cd4227c792b08361217262c971", "committedDate": "2020-06-26T19:02:49Z", "message": "refactor(bazel): Limit the complexity of FilterableEnumValue to BazelDetectableOptions (deal with it there, not in WorkspaceRuleChooser)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4540998a4c3fc86f9cfade72e03dcf1bc69b67b", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d4540998a4c3fc86f9cfade72e03dcf1bc69b67b", "committedDate": "2020-06-30T18:25:07Z", "message": "Merge branch 'master' into sb_bazelMulipleRuleTypesOffMaster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0a2dc2a319d36459d8d3527c392e6f9f42b01849", "committedDate": "2020-06-30T20:11:27Z", "message": "refactor(bazel): sonar code smell cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec9c0384541c4cb416e4470a9c9a55cf828c9603", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ec9c0384541c4cb416e4470a9c9a55cf828c9603", "committedDate": "2020-07-01T19:45:42Z", "message": "feat: Converted DetectableOptionFactory to java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjU4NDE2", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#pullrequestreview-443258416", "createdAt": "2020-07-06T17:03:23Z", "commit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowMzoyNFrOGtf2aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowMzoyNFrOGtf2aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MDkzNw==", "bodyText": "I'd really prefer we didn't add configuration as a dependency to detectable - could we create an interface and hide FilterableEnumValue behind it? I'd rather detectables were immune to changes to detect configuration.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r450360937", "createdAt": "2020-07-06T17:03:24Z", "author": {"login": "taikuukaits"}, "path": "detectable/build.gradle", "diffHunk": "@@ -1,4 +1,6 @@\n dependencies {\n+    implementation project(':configuration')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjY2Njcx", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#pullrequestreview-443266671", "createdAt": "2020-07-06T17:15:54Z", "commit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoxNTo1NFrOGtgP8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoxNTo1NFrOGtgP8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2NzQ3NA==", "bodyText": "I think this work should move to the configuration factory - imo options shouldn't have logic, they are POJO and should be constructed in a valid state. This would let detectable not need to know about FilterableEnumValue - the configuration just converts that to the appropriate Set and creates a valid option object.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r450367474", "createdAt": "2020-07-06T17:15:54Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java", "diffHunk": "@@ -22,30 +22,62 @@\n  */\n package com.synopsys.integration.detectable.detectables.bazel;\n \n+import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n+import java.util.Set;\n+\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumUtils;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumValue;\n \n public class BazelDetectableOptions {\n     private final String targetName;\n-    private final WorkspaceRule bazelDependencyRule;\n+    private final List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues;\n     private final List<String> bazelCqueryAdditionalOptions;\n \n-    public BazelDetectableOptions(final String targetName, final WorkspaceRule bazelDependencyRule,\n-        final List<String> bazelCqueryAdditionalOptions) {\n+    public BazelDetectableOptions(String targetName, List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues,\n+        List<String> bazelCqueryAdditionalOptions) {\n         this.targetName = targetName;\n-        this.bazelDependencyRule = bazelDependencyRule;\n+        this.bazelDependencyRulesPropertyValues = bazelDependencyRulesPropertyValues;\n         this.bazelCqueryAdditionalOptions = bazelCqueryAdditionalOptions;\n     }\n \n     public Optional<String> getTargetName() {\n         return Optional.ofNullable(targetName);\n     }\n \n-    public WorkspaceRule getBazelDependencyRule() {\n-        return bazelDependencyRule;\n-    }\n-\n     public List<String> getBazelCqueryAdditionalOptions() {\n         return bazelCqueryAdditionalOptions;\n     }\n+\n+    public Set<WorkspaceRule> getBazelDependencyRules() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjcwMDk2", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#pullrequestreview-443270096", "createdAt": "2020-07-06T17:20:59Z", "commit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyMDo1OVrOGtgaZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyMDo1OVrOGtgaZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MDE1MA==", "bodyText": "I think extractors should be tested in a battery test - the size of this test and the amount of mocking needed makes this test difficult to follow and it seems like a good candidate for a battery test. I wouldn't mind discussing this kind of test at large but this to me is what the battery is for.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r450370150", "createdAt": "2020-07-06T17:20:59Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java", "diffHunk": "@@ -191,4 +193,70 @@ public void testMavenInstall() throws ExecutableRunnerException, IntegrationExce\n         assertTrue(foundFailureAccess);\n         assertTrue(foundErrorProneAnnotations);\n     }\n+\n+    @Test\n+    public void testMultipleRuleTypes() throws ExecutableRunnerException, IntegrationException, IOException {\n+        Assumptions.assumeFalse(SystemUtils.IS_OS_WINDOWS);\n+\n+        BazelCommandExecutor bazelCommandExecutor = Mockito.mock(BazelCommandExecutor.class);\n+        BazelVariableSubstitutor bazelVariableSubstitutor = Mockito.mock(BazelVariableSubstitutor.class);\n+        ExternalIdFactory externalIdFactory = new ExternalIdFactory();\n+        File workspaceDir = new File(\".\");\n+        ExecutableRunner executableRunner = Mockito.mock(ExecutableRunner.class);\n+        BazelWorkspace bazelWorkspace = Mockito.mock(BazelWorkspace.class);\n+        Mockito.when(bazelWorkspace.getDependencyRuleTypes()).thenReturn(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL,\n+            WorkspaceRule.HASKELL_CABAL_LIBRARY));\n+        WorkspaceRuleChooser workspaceRuleChooser = Mockito.mock(WorkspaceRuleChooser.class);\n+        Mockito.when(workspaceRuleChooser.choose(\n+            Mockito.eq(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL, WorkspaceRule.HASKELL_CABAL_LIBRARY)),\n+            Mockito.isNull())).thenReturn(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL, WorkspaceRule.HASKELL_CABAL_LIBRARY));\n+        BazelExtractor bazelExtractor = new BazelExtractor(executableRunner, externalIdFactory, workspaceRuleChooser);\n+        File bazelExe = new File(\"/usr/bin/bazel\");\n+\n+        // bazel cquery --noimplicit_deps \"kind(j.*import, deps(//:ProjectRunner))\" --output build\n+        List<String> bazelArgsGetDependenciesMavenInstall = new ArrayList<>();\n+        bazelArgsGetDependenciesMavenInstall.add(\"cquery\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"--noimplicit_deps\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"kind(j.*import, deps(//:ProjectRunner))\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"--output\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"build\");\n+        ExecutableOutput bazelCmdExecutableOutputGetDependenciesMavenInstall = Mockito.mock(ExecutableOutput.class);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesMavenInstall.getReturnCode()).thenReturn(0);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesMavenInstall.getStandardOutput()).thenReturn(\n+            \"jvm_import(\\n  name = \\\"com_google_guava_failureaccess\\\",\\n\" +\n+                \"  tags = [\\\"maven_coordinates=com.google.guava:failureaccess:1.0\\\"],\\n\" +\n+                \"  tags = [\\\"maven_coordinates=com.google.errorprone:error_prone_annotations:2.2.0\\\"],\");\n+        Mockito.when(executableRunner.execute(workspaceDir, bazelExe, bazelArgsGetDependenciesMavenInstall)).thenReturn(bazelCmdExecutableOutputGetDependenciesMavenInstall);\n+\n+        // bazel cquery --noimplicit_deps \"kind(haskell_cabal_library, deps(//:ProjectRunner))\" --output jsonproto\n+        List<String> bazelArgsGetDependenciesHaskellCabalLibrary = new ArrayList<>();\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"cquery\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"--noimplicit_deps\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"kind(haskell_cabal_library, deps(//:ProjectRunner))\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"--output\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"jsonproto\");\n+        ExecutableOutput bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary = Mockito.mock(ExecutableOutput.class);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary.getReturnCode()).thenReturn(0);\n+        File jsonProtoFile = new File(\"src/test/resources/detectables/functional/bazel/jsonProtoForHaskellCabalLibraries.txt\");\n+        String jsonProtoHaskellCabalLibrary = FileUtils.readFileToString(jsonProtoFile, StandardCharsets.UTF_8);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary.getStandardOutput()).thenReturn(jsonProtoHaskellCabalLibrary);\n+        Mockito.when(executableRunner.execute(workspaceDir, bazelExe, bazelArgsGetDependenciesHaskellCabalLibrary)).thenReturn(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary);\n+\n+        Extraction result = bazelExtractor.extract(bazelExe, workspaceDir, bazelWorkspace, \"//:ProjectRunner\", new BazelProjectNameGenerator(), null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849"}, "originalPosition": 239}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "940ef2ee1427392f23273ee3766cbeeb18dffc09", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/940ef2ee1427392f23273ee3766cbeeb18dffc09", "committedDate": "2020-07-07T14:15:45Z", "message": "test(bazel): added first test in new bazel battery test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "595e2b3cc9ca816cada80b4beb73b1aeaa795df2", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/595e2b3cc9ca816cada80b4beb73b1aeaa795df2", "committedDate": "2020-07-07T14:47:50Z", "message": "test(bazel): battery now covers maven_install and haskell_cabal_library"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76bf1a57dc64afcabe7f587fdc6aea7098f6c925", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/76bf1a57dc64afcabe7f587fdc6aea7098f6c925", "committedDate": "2020-07-07T15:14:18Z", "message": "refactor(bazel): sonar code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "553bfed3e39aa0b768991fdbe305807fde9325a7", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/553bfed3e39aa0b768991fdbe305807fde9325a7", "committedDate": "2020-07-07T18:29:53Z", "message": "test: battery: template fix for case where a command is run multiple times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cefe99e52e214912eaecb65e1865a865e3295713", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/cefe99e52e214912eaecb65e1865a865e3295713", "committedDate": "2020-07-07T18:30:29Z", "message": "test(bazel): added battery test for maven_jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366c982a0615a6e580d8ce17e28eb90492277871", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/366c982a0615a6e580d8ce17e28eb90492277871", "committedDate": "2020-07-08T00:01:35Z", "message": "test(bazel): added battery test for ALL rule types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db81fdccbf48cf5f447107a36df13cfd268ff376", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/db81fdccbf48cf5f447107a36df13cfd268ff376", "committedDate": "2020-07-08T14:54:42Z", "message": "test(bazel): removed BazelExtractorTest, now replaced by battery tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30db84801c5bee7287c07ec97615d872c8d4d29f", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/30db84801c5bee7287c07ec97615d872c8d4d29f", "committedDate": "2020-07-08T15:25:53Z", "message": "merge from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4dae7a199c9ae90f7f9540d677c25e8c70ba40b", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e4dae7a199c9ae90f7f9540d677c25e8c70ba40b", "committedDate": "2020-07-08T15:47:58Z", "message": "refactor(bazel): Simplified BazelWorkspace."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d64d9bd9f62297a6187cdb1a3f7e9575ba51d2b2", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d64d9bd9f62297a6187cdb1a3f7e9575ba51d2b2", "committedDate": "2020-07-08T15:56:22Z", "message": "refactor(bazel): remove temp change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "793fd3e09b040737eb4a431765f72271eae31a37", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/793fd3e09b040737eb4a431765f72271eae31a37", "committedDate": "2020-07-08T16:01:47Z", "message": "test(gomod): fix expected results for gomod test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0769f47811fe23921577bc921f9e4778d389378", "author": {"user": {"login": "stevebillings", "name": "Steve Billings"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b0769f47811fe23921577bc921f9e4778d389378", "committedDate": "2020-07-08T16:11:39Z", "message": "Merge pull request #204 from blackducksoftware/jake-bazel\n\nrefactor(bazel): Simplified BazelWorkspace."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f50b8ea533e0d34e5b3ea76975a84c081af46493", "author": {"user": {"login": "crowleySynopsys", "name": null}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f50b8ea533e0d34e5b3ea76975a84c081af46493", "committedDate": "2020-07-10T16:35:38Z", "message": "feat: Deleted kotlin DetectableOptionFactory, replaced usages with Java version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86978140cc59e8f86e7c8791e771cac01750327d", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/86978140cc59e8f86e7c8791e771cac01750327d", "committedDate": "2020-07-13T19:12:25Z", "message": "merge from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c302898ed4e047d5a8db8ccbd187a82a7433c17a", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c302898ed4e047d5a8db8ccbd187a82a7433c17a", "committedDate": "2020-07-13T19:33:48Z", "message": "Merge commit 'f50b8ea533e0d34e5b3ea76975a84c081af46493' into sb_bazelMulipleRuleTypesOffMaster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d7afb65db15ecd7b39fc3083f3cc308509cb41a", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4d7afb65db15ecd7b39fc3083f3cc308509cb41a", "committedDate": "2020-07-13T19:59:39Z", "message": "refactor(bazel): moved FilterableEnumValue complexity for workspace rule property from BazelDetectableOptions to DetectableOptionFactory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23abaae730159eb832f3dc600b977f554b3ae362", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/23abaae730159eb832f3dc600b977f554b3ae362", "committedDate": "2020-07-13T20:38:50Z", "message": "test(bazel): added tests for optionsFactory translation of user input (List<FilterableEnumValue<WorkspaceRule>> ) to a Set of WorkspaceRules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a6318c40ab79a38ce18339a1a86e40e6d8248b", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/43a6318c40ab79a38ce18339a1a86e40e6d8248b", "committedDate": "2020-07-13T20:51:49Z", "message": "test(bazel): address sonar code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4231bdbfa836e2ca7670dbf27e7abed761703822", "author": {"user": null}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4231bdbfa836e2ca7670dbf27e7abed761703822", "committedDate": "2020-07-13T21:11:03Z", "message": "Merge branch 'master' into sb_bazelMulipleRuleTypesOffMaster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjM5NTY1", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#pullrequestreview-448239565", "createdAt": "2020-07-14T15:52:35Z", "commit": {"oid": "4231bdbfa836e2ca7670dbf27e7abed761703822"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3346, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}