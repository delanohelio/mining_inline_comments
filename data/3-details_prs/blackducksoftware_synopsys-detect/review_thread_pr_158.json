{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDQ1NjMy", "number": 158, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDo0MjowMVrOD09jOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMToyMjoyMFrOD19i7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODYwOTg1OnYy", "diffSide": "RIGHT", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDo0MjowMVrOGKKvCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDo0MjowMVrOGKKvCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxNDgyNg==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r413314826", "createdAt": "2020-04-22T20:42:01Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "diffHunk": "@@ -28,8 +28,12 @@\n \n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n-    public List<Project> projects;\n+    private List<Project> projects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyMTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNToxOVrOGK3qoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNToxOVrOGK3qoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MDk3Ng==", "bodyText": "Instead add a constructor, make fields final and add getters.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414050976", "createdAt": "2020-04-23T19:05:19Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,60 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyMzAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTozN1rOGK3raQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTozN1rOGK3raQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTE3Nw==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051177", "createdAt": "2020-04-23T19:05:37Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java", "diffHunk": "@@ -23,9 +23,17 @@\n package com.synopsys.integration.detect.workflow.report.output;\n \n public class FormattedCodeLocationOutput {\n-    public String codeLocationName;\n+    private String codeLocationName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyMzY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo0NVrOGK3rxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo0NVrOGK3rxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTI3MA==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051270", "createdAt": "2020-04-23T19:05:45Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java", "diffHunk": "@@ -26,27 +26,171 @@\n import java.util.List;\n \n public class FormattedDetectorOutput {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyNDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo1NFrOGK3sIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo1NFrOGK3sIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTM2MA==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051360", "createdAt": "2020-04-23T19:05:54Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java", "diffHunk": "@@ -23,13 +23,25 @@\n package com.synopsys.integration.detect.workflow.report.output;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyNDY5OnYy", "diffSide": "LEFT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo1OVrOGK3sWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNTo1OVrOGK3sWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTQxOQ==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051419", "createdAt": "2020-04-23T19:05:59Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java", "diffHunk": "@@ -26,15 +26,87 @@\n import java.util.List;\n \n public class FormattedOutput {\n-    public String formatVersion = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzUyNTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNjoxMFrOGK3tAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTowNjoxMFrOGK3tAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTU4Ng==", "bodyText": "Add @SerializedName instead.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051586", "createdAt": "2020-04-23T19:06:10Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java", "diffHunk": "@@ -23,11 +23,27 @@\n package com.synopsys.integration.detect.workflow.report.output;\n \n public class FormattedResultOutput {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mzg4MzQ1OnYy", "diffSide": "RIGHT", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozNjowOFrOGK7B1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozNjowOFrOGK7B1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNjA2OQ==", "bodyText": "Please remove the getter.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414106069", "createdAt": "2020-04-23T20:36:08Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "diffHunk": "@@ -28,8 +28,13 @@\n \n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n-    public List<Project> projects;\n+    @SerializedName(\"projects\")\n+    private List<Project> projects;\n \n     @SerializedName(\"solve-meta\")\n     public SolveMeta solveMeta;\n+\n+    public List<Project> getProjects() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67299c59121975d1306f980180d07dd831764e6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzk1MzcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjoyMDo0OVrOGLfUiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1OTozMFrOGLpCGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA==", "bodyText": "Why is this .get() but the other was not? Did we change the type? Also why do we take in null as one of the parameters?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414700680", "createdAt": "2020-04-24T16:20:49Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "diffHunk": "@@ -173,25 +174,16 @@ public DetectorToolResult performDetectors(final File directory, final DetectorR\n             }\n         }\n \n-        final DetectorToolResult detectorToolResult = new DetectorToolResult();\n+        Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n-        detectorToolResult.rootDetectorEvaluationTree = Optional.of(rootEvaluation);\n-\n-        detectorToolResult.applicableDetectorTypes = applicable;\n-\n-        detectorToolResult.codeLocationMap = detectorEvaluations.stream()\n-                                                 .filter(DetectorEvaluation::wasExtractionSuccessful)\n-                                                 .map(it -> codeLocationConverter.toDetectCodeLocation(directory, it))\n-                                                 .map(Map::entrySet)\n-                                                 .flatMap(Collection::stream)\n-                                                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-\n-        detectorToolResult.bomToolCodeLocations = new ArrayList<>(detectorToolResult.codeLocationMap.values());\n-\n-        logger.info(\"\");\n-        final NameVersionDecision nameVersionDecision = detectorNameVersionHandler.finalDecision();\n-        nameVersionDecision.printDescription(logger);\n-        detectorToolResult.bomToolProjectNameVersion = nameVersionDecision.getChosenNameVersion();\n+        final DetectorToolResult detectorToolResult = new DetectorToolResult(\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwNjQ1MQ==", "bodyText": "I made the constructor take in a NameVersion and then set the field to Optional.of()\nas for why we pass in null for failedDetectorTypes, there wasn't one provided in the original code.  I could change it to pass in an empty HashSet", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414706451", "createdAt": "2020-04-24T16:29:54Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "diffHunk": "@@ -173,25 +174,16 @@ public DetectorToolResult performDetectors(final File directory, final DetectorR\n             }\n         }\n \n-        final DetectorToolResult detectorToolResult = new DetectorToolResult();\n+        Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n-        detectorToolResult.rootDetectorEvaluationTree = Optional.of(rootEvaluation);\n-\n-        detectorToolResult.applicableDetectorTypes = applicable;\n-\n-        detectorToolResult.codeLocationMap = detectorEvaluations.stream()\n-                                                 .filter(DetectorEvaluation::wasExtractionSuccessful)\n-                                                 .map(it -> codeLocationConverter.toDetectCodeLocation(directory, it))\n-                                                 .map(Map::entrySet)\n-                                                 .flatMap(Collection::stream)\n-                                                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-\n-        detectorToolResult.bomToolCodeLocations = new ArrayList<>(detectorToolResult.codeLocationMap.values());\n-\n-        logger.info(\"\");\n-        final NameVersionDecision nameVersionDecision = detectorNameVersionHandler.finalDecision();\n-        nameVersionDecision.printDescription(logger);\n-        detectorToolResult.bomToolProjectNameVersion = nameVersionDecision.getChosenNameVersion();\n+        final DetectorToolResult detectorToolResult = new DetectorToolResult(\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyNzQ2OA==", "bodyText": "But what happens when the ChosenNameVersion is Empty() - won't there be an exception? You shouldn't do a get without an isPresent check or use orElse(null).\nCan we just remove the field then?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414827468", "createdAt": "2020-04-24T19:57:14Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "diffHunk": "@@ -173,25 +174,16 @@ public DetectorToolResult performDetectors(final File directory, final DetectorR\n             }\n         }\n \n-        final DetectorToolResult detectorToolResult = new DetectorToolResult();\n+        Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n-        detectorToolResult.rootDetectorEvaluationTree = Optional.of(rootEvaluation);\n-\n-        detectorToolResult.applicableDetectorTypes = applicable;\n-\n-        detectorToolResult.codeLocationMap = detectorEvaluations.stream()\n-                                                 .filter(DetectorEvaluation::wasExtractionSuccessful)\n-                                                 .map(it -> codeLocationConverter.toDetectCodeLocation(directory, it))\n-                                                 .map(Map::entrySet)\n-                                                 .flatMap(Collection::stream)\n-                                                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-\n-        detectorToolResult.bomToolCodeLocations = new ArrayList<>(detectorToolResult.codeLocationMap.values());\n-\n-        logger.info(\"\");\n-        final NameVersionDecision nameVersionDecision = detectorNameVersionHandler.finalDecision();\n-        nameVersionDecision.printDescription(logger);\n-        detectorToolResult.bomToolProjectNameVersion = nameVersionDecision.getChosenNameVersion();\n+        final DetectorToolResult detectorToolResult = new DetectorToolResult(\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1OTgwMQ==", "bodyText": "I commented on DetectorToolResult. Once you make those changes, use the below code to not throw an exception.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),\n          \n          \n            \n                        detectorNameVersionHandler.finalDecision().getChosenNameVersion().orElse(null),", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414859801", "createdAt": "2020-04-24T20:59:30Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "diffHunk": "@@ -173,25 +174,16 @@ public DetectorToolResult performDetectors(final File directory, final DetectorR\n             }\n         }\n \n-        final DetectorToolResult detectorToolResult = new DetectorToolResult();\n+        Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n-        detectorToolResult.rootDetectorEvaluationTree = Optional.of(rootEvaluation);\n-\n-        detectorToolResult.applicableDetectorTypes = applicable;\n-\n-        detectorToolResult.codeLocationMap = detectorEvaluations.stream()\n-                                                 .filter(DetectorEvaluation::wasExtractionSuccessful)\n-                                                 .map(it -> codeLocationConverter.toDetectCodeLocation(directory, it))\n-                                                 .map(Map::entrySet)\n-                                                 .flatMap(Collection::stream)\n-                                                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-\n-        detectorToolResult.bomToolCodeLocations = new ArrayList<>(detectorToolResult.codeLocationMap.values());\n-\n-        logger.info(\"\");\n-        final NameVersionDecision nameVersionDecision = detectorNameVersionHandler.finalDecision();\n-        nameVersionDecision.printDescription(logger);\n-        detectorToolResult.bomToolProjectNameVersion = nameVersionDecision.getChosenNameVersion();\n+        final DetectorToolResult detectorToolResult = new DetectorToolResult(\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzk1NTgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjoyMToxOFrOGLfVzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0MDo0MVrOGLgFpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTAwNA==", "bodyText": "Who creates this tool result?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414701004", "createdAt": "2020-04-24T16:21:18Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,57 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n \n-    public Set<DetectorType> applicableDetectorTypes = new HashSet<>();\n-    public Set<DetectorType> failedDetectorTypes = new HashSet<>();\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n \n-    public Optional<DetectorEvaluationTree> rootDetectorEvaluationTree = Optional.empty();\n-    public Map<CodeLocation, DetectCodeLocation> codeLocationMap = new HashMap<>();\n+    private final Optional<DetectorEvaluationTree> rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n+\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n+        this.bomToolProjectNameVersion = Optional.of(bomToolProjectNameVersion);\n+        this.bomToolCodeLocations = bomToolCodeLocations;\n+        this.applicableDetectorTypes = applicableDetectorTypes;\n+        this.failedDetectorTypes = failedDetectorTypes;\n+        this.rootDetectorEvaluationTree = Optional.of(rootDetectorEvaluationTree);\n+        this.codeLocationMap = codeLocationMap;\n+    }\n+\n+    public DetectorToolResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMzI1NQ==", "bodyText": "DetectorTool uses parameter-less constructor on line 95", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414713255", "createdAt": "2020-04-24T16:40:41Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,57 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n \n-    public Set<DetectorType> applicableDetectorTypes = new HashSet<>();\n-    public Set<DetectorType> failedDetectorTypes = new HashSet<>();\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n \n-    public Optional<DetectorEvaluationTree> rootDetectorEvaluationTree = Optional.empty();\n-    public Map<CodeLocation, DetectCodeLocation> codeLocationMap = new HashMap<>();\n+    private final Optional<DetectorEvaluationTree> rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n+\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n+        this.bomToolProjectNameVersion = Optional.of(bomToolProjectNameVersion);\n+        this.bomToolCodeLocations = bomToolCodeLocations;\n+        this.applicableDetectorTypes = applicableDetectorTypes;\n+        this.failedDetectorTypes = failedDetectorTypes;\n+        this.rootDetectorEvaluationTree = Optional.of(rootDetectorEvaluationTree);\n+        this.codeLocationMap = codeLocationMap;\n+    }\n+\n+    public DetectorToolResult() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTAwNA=="}, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTAwOTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NzoxM1rOGLo9Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NzoxM1rOGLo9Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1ODU3OA==", "bodyText": "Optional should not be a field. Make it a regular NameVersion. Annotate the field with @Nullable as well as the constructor paramter. Use Optional.ofNullable(bomToolProjectNameVersion) in getBomToolProjectNameVersion().\nDo the same for rootDetectorEvaluationTree below.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414858578", "createdAt": "2020-04-24T20:57:13Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,57 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTA5NDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMToyMjoyMFrOGLptMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMToyMjoyMFrOGLptMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3MDgzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n          \n          \n            \n                    final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n          \n          \n            \n                    final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n          \n          \n            \n                public DetectorToolResult(@Nullable final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n          \n          \n            \n                    final Set<DetectorType> failedDetectorTypes, @Nullable final DetectorEvaluationTree rootDetectorEvaluationTree,\n          \n          \n            \n                    final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414870835", "createdAt": "2020-04-24T21:22:20Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -30,20 +31,68 @@\n import java.util.Optional;\n import java.util.Set;\n \n+import org.jetbrains.annotations.Nullable;\n+\n import com.synopsys.integration.detect.workflow.codelocation.DetectCodeLocation;\n import com.synopsys.integration.detectable.detectable.codelocation.CodeLocation;\n import com.synopsys.integration.detector.base.DetectorEvaluationTree;\n import com.synopsys.integration.detector.base.DetectorType;\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    @Nullable\n+    private final NameVersion bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n+\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n+\n+    @Nullable\n+    private final DetectorEvaluationTree rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n+\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4119d79a69425dc7b863e562ef188060e122e9e5"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1594, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}