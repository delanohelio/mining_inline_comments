{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTI0ODMy", "number": 235, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMTowMjo0N1rOEp8rVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMTowMjo0N1rOEp8rVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDIxMjA1OnYy", "diffSide": "RIGHT", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/maven/cli/MavenCodeLocationPackager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMTowMjo0N1rOHb7iUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowNjozMFrOHcmHUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0OTA0MA==", "bodyText": "I know it doesn't currently allow it, but we should be allowed to create ExcludedIncludedWildcardFilter with already created sets/lists. This seems a little silly.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/235#discussion_r499049040", "createdAt": "2020-10-02T21:02:47Z", "author": {"login": "taikuukaits"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/maven/cli/MavenCodeLocationPackager.java", "diffHunk": "@@ -70,9 +70,9 @@ public MavenCodeLocationPackager(ExternalIdFactory externalIdFactory) {\n     }\n \n     // mavenTextOutput should be the full output of mvn dependency:tree (no scope applied); scope filtering is now done by this method\n-    public List<MavenParseResult> extractCodeLocations(String sourcePath, String mavenOutputText, String excludedScopes, String includedScopes, String excludedModules, String includedModules) {\n+    public List<MavenParseResult> extractCodeLocations(String sourcePath, String mavenOutputText, List<String> excludedScopes, List<String> includedScopes, String excludedModules, String includedModules) {\n         ExcludedIncludedWildcardFilter modulesFilter = new ExcludedIncludedWildcardFilter(excludedModules, includedModules);\n-        ExcludedIncludedWildcardFilter scopeFilter = new ExcludedIncludedWildcardFilter(excludedScopes, includedScopes);\n+        ExcludedIncludedWildcardFilter scopeFilter = new ExcludedIncludedWildcardFilter(StringUtils.joinWith(\",\", excludedScopes.toArray()), StringUtils.joinWith(\",\", includedScopes.toArray()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4208e9bd337e202da7b0722d26300e735c5a9ec"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjY0Mw==", "bodyText": "Agreed, I just create a PR against integration-common for that change blackducksoftware/integration-common#31", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/235#discussion_r499746643", "createdAt": "2020-10-05T17:06:30Z", "author": {"login": "stevebillings"}, "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/maven/cli/MavenCodeLocationPackager.java", "diffHunk": "@@ -70,9 +70,9 @@ public MavenCodeLocationPackager(ExternalIdFactory externalIdFactory) {\n     }\n \n     // mavenTextOutput should be the full output of mvn dependency:tree (no scope applied); scope filtering is now done by this method\n-    public List<MavenParseResult> extractCodeLocations(String sourcePath, String mavenOutputText, String excludedScopes, String includedScopes, String excludedModules, String includedModules) {\n+    public List<MavenParseResult> extractCodeLocations(String sourcePath, String mavenOutputText, List<String> excludedScopes, List<String> includedScopes, String excludedModules, String includedModules) {\n         ExcludedIncludedWildcardFilter modulesFilter = new ExcludedIncludedWildcardFilter(excludedModules, includedModules);\n-        ExcludedIncludedWildcardFilter scopeFilter = new ExcludedIncludedWildcardFilter(excludedScopes, includedScopes);\n+        ExcludedIncludedWildcardFilter scopeFilter = new ExcludedIncludedWildcardFilter(StringUtils.joinWith(\",\", excludedScopes.toArray()), StringUtils.joinWith(\",\", includedScopes.toArray()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0OTA0MA=="}, "originalCommit": {"oid": "e4208e9bd337e202da7b0722d26300e735c5a9ec"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1511, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}