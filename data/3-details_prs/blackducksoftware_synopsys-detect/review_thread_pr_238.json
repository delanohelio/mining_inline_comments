{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMjEyNDgz", "number": 238, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOTo0Nzo1NlrOExWmDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToxMTo0OFrOEy9m3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTg1ODY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOTo0Nzo1NlrOHncUZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjowNjoyNlrOHsXYWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyMDQ4Ng==", "bodyText": "BLACKDUCK_HUB_PASSWORD should be changed, but not relevant to your PR :)", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r511120486", "createdAt": "2020-10-23T19:47:56Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class BlackDuckServerDecisionBranch implements DecisionTree {\n+    public void traverse(Interactions interactions) {\n+        interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_URL.getProperty(), \"What is the Black Duck server url?\");\n+\n+        interactions\n+            .println(\"You can now configure Black Duck with either an API token -OR- a username and password. The API token must already exist on the Black Duck server, but it is the preferred approach to configure your connection.\");\n+        Boolean useApiToken = interactions.askYesOrNo(\"Would you like to use an existing API token?\");\n+        if (useApiToken) {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_API_TOKEN.getProperty(), \"What is the API token?\");\n+        } else {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_USERNAME.getProperty(), \"What is the username?\");\n+\n+            Boolean setHubPassword = interactions.askYesOrNoWithMessage(\"Would you like to set the password?\",\n+                \"WARNING: If you choose to save the settings, this password will be stored in plain text. You can set this password as an environment variable BLACKDUCK_HUB_PASSWORD.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6f7584bf0e4ba0761135ba987c55f73bb065e6b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjQ1OA==", "bodyText": "Using the property name now, good change to make!", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r516282458", "createdAt": "2020-11-02T22:06:26Z", "author": {"login": "rottebds"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class BlackDuckServerDecisionBranch implements DecisionTree {\n+    public void traverse(Interactions interactions) {\n+        interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_URL.getProperty(), \"What is the Black Duck server url?\");\n+\n+        interactions\n+            .println(\"You can now configure Black Duck with either an API token -OR- a username and password. The API token must already exist on the Black Duck server, but it is the preferred approach to configure your connection.\");\n+        Boolean useApiToken = interactions.askYesOrNo(\"Would you like to use an existing API token?\");\n+        if (useApiToken) {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_API_TOKEN.getProperty(), \"What is the API token?\");\n+        } else {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_USERNAME.getProperty(), \"What is the username?\");\n+\n+            Boolean setHubPassword = interactions.askYesOrNoWithMessage(\"Would you like to set the password?\",\n+                \"WARNING: If you choose to save the settings, this password will be stored in plain text. You can set this password as an environment variable BLACKDUCK_HUB_PASSWORD.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyMDQ4Ng=="}, "originalCommit": {"oid": "e6f7584bf0e4ba0761135ba987c55f73bb065e6b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODczMDAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOTowOTo1M1rOHp5hIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1OToxMFrOHtb8_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjAzNA==", "bodyText": "This also, I assume, has nothing to do with this PR, but instead of \"CLI scan\", I believe we usually use \"signature scan\".", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r513696034", "createdAt": "2020-10-28T19:09:53Z", "author": {"login": "stevebillings"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1926ee68620a03d761552b86ee22db98c172fff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwNTk0OA==", "bodyText": "Very good, I'll change that now.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r517405948", "createdAt": "2020-11-04T14:59:10Z", "author": {"login": "rottebds"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjAzNA=="}, "originalCommit": {"oid": "f1926ee68620a03d761552b86ee22db98c172fff"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODczNjMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToxMTo0OFrOHp5lDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1OTozNVrOHtb-bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzAzNw==", "bodyText": "along the same vein (irrelevant to this PR), since everything is now called a scanner, it would be good to clarify this language at some point (to specify \"signature scanner\").", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r513697037", "createdAt": "2020-10-28T19:11:48Z", "author": {"login": "stevebillings"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");\n+            if (!upload) {\n+                propertySourceBuilder.setProperty(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN.getProperty(), \"true\");\n+            }\n+        }\n+\n+        Boolean customScanner = writer.askYesOrNo(\"Would you like to provide a custom scanner?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1926ee68620a03d761552b86ee22db98c172fff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwNjMxOA==", "bodyText": "I'm already making other changes to the dialogue in Interactive mode, so it seems fine to lump those in here. I'll do this now.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r517406318", "createdAt": "2020-11-04T14:59:35Z", "author": {"login": "rottebds"}, "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");\n+            if (!upload) {\n+                propertySourceBuilder.setProperty(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN.getProperty(), \"true\");\n+            }\n+        }\n+\n+        Boolean customScanner = writer.askYesOrNo(\"Would you like to provide a custom scanner?\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzAzNw=="}, "originalCommit": {"oid": "f1926ee68620a03d761552b86ee22db98c172fff"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1514, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}