{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTY2NTM4", "number": 183, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxNToyMlrOECqAqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyNzo1OVrOED9q2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjIwOTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/lifecycle/run/RunManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxNToyMlrOGfP3fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowOTowMVrOGfR0cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTAwNA==", "bodyText": "I don't like that this is called \"collectCodeLocationNames\" when it really \"creates\" code location names.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r435419004", "createdAt": "2020-06-04T17:15:22Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/lifecycle/run/RunManager.java", "diffHunk": "@@ -409,4 +414,14 @@ private void runBlackDuckProduct(final ProductRunData productRunData, final Dete\n         }\n     }\n \n+    private Set<String> collectCodeLocationNames(DetectableToolResult detectableToolResult, CodeLocationNameManager codeLocationNameManager, DirectoryManager directoryManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1MDk5Mw==", "bodyText": "that seems like a reasonable renaming", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r435450993", "createdAt": "2020-06-04T18:09:01Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/lifecycle/run/RunManager.java", "diffHunk": "@@ -409,4 +414,14 @@ private void runBlackDuckProduct(final ProductRunData productRunData, final Dete\n         }\n     }\n \n+    private Set<String> collectCodeLocationNames(DetectableToolResult detectableToolResult, CodeLocationNameManager codeLocationNameManager, DirectoryManager directoryManager) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTAwNA=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjIxMjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxNjoxNlrOGfP5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzoxMjoxOVrOGf2lSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ==", "bodyText": "This isn't after calculation though, this is after we add it to wait data. Doesn't seem like the event matches up.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r435419535", "createdAt": "2020-06-04T17:16:16Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1Mjk3NA==", "bodyText": "is the name of the event what you have an issue with?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r435452974", "createdAt": "2020-06-04T18:12:36Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNDE4MA==", "bodyText": "I'm concerned that publishing the events is not the responsibility of the WaitData, because as a consumer of that class I would assume I could call \"addWaitForCreationData\" multiple times but those events imply that it is called once. Did you consider having the caller send the event? My interpretation is that WaitData is like a DateRange where I can extend the range (extendToIncludeDays is to addWaitForCreationData) so I wouldn't expect it to have any logic (such as publishing events) and would put that on the caller.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r436004180", "createdAt": "2020-06-05T15:39:10Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxOTIzNA==", "bodyText": "I see.  Yeah I just figured I'd publish within the method since it was already extracting the names I wanted sent to the event system, and otherwise I'd be doing so every time the method was called.  The event would be more appropriately named CodeLocationNamesAdded, as it is a mechanism to update the code location names found by all the different tools on a rolling basis.  If you think that publishing an event is confusing the role of the class, though, I'd be fine delegating to the caller", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r436019234", "createdAt": "2020-06-05T16:05:33Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAzNzkxMw==", "bodyText": "Ah I see, then it is the event name and the class name that I am reacting to. If it was CodeLocationNamesAdded and CodeLocationWaitController (to me data means that it doesn't have the logic) then I think I would be OK with it.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r436037913", "createdAt": "2020-06-05T16:41:08Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1MzMyMw==", "bodyText": "Okay cool, those name changes seem reasonable to me.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r436053323", "createdAt": "2020-06-05T17:12:19Z", "author": {"login": "crowleySynopsys"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/blackduck/CodeLocationWaitData.java", "diffHunk": "@@ -24,19 +24,26 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n \n import com.synopsys.integration.blackduck.codelocation.CodeLocationCreationData;\n import com.synopsys.integration.blackduck.service.model.NotificationTaskRange;\n+import com.synopsys.integration.detect.workflow.event.Event;\n+import com.synopsys.integration.detect.workflow.event.EventSystem;\n \n public class CodeLocationWaitData {\n     private NotificationTaskRange notificationRange;\n     private Set<String> codeLocationNames = new HashSet<>();\n     private int expectedNotificationCount = 0;\n \n-    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData) {\n+    public void addWaitForCreationData(CodeLocationCreationData codeLocationCreationData, EventSystem eventSystem) {\n         expectedNotificationCount += codeLocationCreationData.getOutput().getExpectedNotificationCount();\n-        codeLocationNames.addAll(codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames());\n+\n+        Set<String> codeLocationNames = codeLocationCreationData.getOutput().getSuccessfulCodeLocationNames();\n+        this.codeLocationNames.addAll(codeLocationNames);\n+        eventSystem.publishEvent(Event.CodeLocationNamesCalculated, codeLocationNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTUzNQ=="}, "originalCommit": {"oid": "1f5b0dc60a91e1f1c15d9faaeb3e635c1b408072"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTkxNTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutputManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyNzo1OVrOGhStdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyNzo1OVrOGhStdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2Mjc0MQ==", "bodyText": "Shouldn't this be renamed to codeLocationsAdded?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/183#discussion_r437562741", "createdAt": "2020-06-09T16:27:59Z", "author": {"login": "JakeMathews"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutputManager.java", "diffHunk": "@@ -130,8 +130,8 @@ private void detectorsComplete(final DetectorToolResult detectorToolResult) {\n         this.detectorToolResult = detectorToolResult;\n     }\n \n-    private void codeLocationsCalculated(final BdioCodeLocationResult bdioCodeLocationResult) {\n-        this.bdioCodeLocationResult = bdioCodeLocationResult;\n+    private void codeLocationsCalculated(final Collection<String> codeLocations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a6789d12b30cbc88cf39e7ea167867ceb0b358"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1614, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}