{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDA3MzU2", "number": 192, "title": "Diagnostic property", "bodyText": "Added diagnostic properties for IDETECT-2024.", "createdAt": "2020-06-16T18:54:53Z", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192", "merged": true, "mergeCommit": {"oid": "26248710823df23ab0e5fa61edaddd5b0535c427"}, "closed": true, "closedAt": "2020-06-23T16:25:51Z", "author": {"login": "JakeMathews"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr49f-gH2gAyNDM1NDA3MzU2OjBlMjkyOGQwMzQwM2RmNzIyNzAyYzc2OWIwMjZjNTVhZWIzY2ZiY2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct2AXkgH2gAyNDM1NDA3MzU2Ojg5ODk1ZTRkNmJlNzgyYTgxNGYyZjMzMGM0MzE4ZTNjODM2MTI1MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e2928d03403df722702c769b026c55aeb3cfbcd", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0e2928d03403df722702c769b026c55aeb3cfbcd", "committedDate": "2020-06-16T17:46:41Z", "message": "feat(diagnostic): Added diagnostic property. (Completes IDETECT-2024)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6efedbe4a379a1ed005448a7edb09a4e1069ea63", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6efedbe4a379a1ed005448a7edb09a4e1069ea63", "committedDate": "2020-06-16T18:13:42Z", "message": "doc(release-notes): Added release note for diagnostics property."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aaedb5495dfa7f844cd79af64f7b6773da0995a", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0aaedb5495dfa7f844cd79af64f7b6773da0995a", "committedDate": "2020-06-16T18:14:04Z", "message": "style(license): Applied license headers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "937a49492ea0e9e5edd71e444762a80658e75d36", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/937a49492ea0e9e5edd71e444762a80658e75d36", "committedDate": "2020-06-16T18:25:59Z", "message": "doc(diagnostic): Fixed list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8c98ef399c8db67fa89c44330e401d0fda2d42f", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/a8c98ef399c8db67fa89c44330e401d0fda2d42f", "committedDate": "2020-06-16T18:43:24Z", "message": "doc(diagnostic): Fixed list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4129623ef5ae0f3cbd848f0483d7ea9028ab305", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f4129623ef5ae0f3cbd848f0483d7ea9028ab305", "committedDate": "2020-06-16T18:54:35Z", "message": "test(diagnostics): Added test for DiagnosticsDecider."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e56e85955468d69f38204a716a218ddf850779", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/67e56e85955468d69f38204a716a218ddf850779", "committedDate": "2020-06-16T18:58:11Z", "message": "refactor: Fixed formatting of wrapped constructor parameters."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODg2ODk0", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#pullrequestreview-431886894", "createdAt": "2020-06-16T20:59:09Z", "commit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo1OToxMFrOGks86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo1OToxMFrOGks86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzODQxMA==", "bodyText": "prepending each of these three items with \"\u00a0\u00a0\u00a0\u00a0* \" (4 spaces, a *, then another space) would produce a nested bulleted list (but you probably need to do it outside IntelliJ since it likes to remove the leading spaces.", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r441138410", "createdAt": "2020-06-16T20:59:10Z", "author": {"login": "stevebillings"}, "path": "docs/templates/content/advanced/troubleshooting/general-troubleshooting.ftl", "diffHunk": "@@ -20,23 +20,35 @@ ${solution_name}'s diagnostic mode automatically enabled debug logging (where po\n \n Diagnostic mode options are:\n \n--d: When enabled, diagnostic mode collects all files generated by ${solution_name} and zips the files using a unique run ID. It includes logs, BDIO files, extraction files, and reports.\n+-d --diagnostic: When enabled, diagnostic mode collects all files generated by ${solution_name} and zips the files using a unique run ID. It includes logs, BDIO files, extraction files, and reports.\n+\n -de --diagnosticExtended: When diagnosticExtended is enabled, ${solution_name} collects relevant files such as lock files and build artifacts.\n+\n+${solution_name} also has the ability to enable diagnostic modes through [normal properties](../../../properties/configuration/debug/#diagnostic-mode).\n+\n The zip file is created inside the ${solution_name} output directory, and must be provided when support issues are opened.\n \n Synopsys does not recommend keeping this option on, as it does not clean up the zip file(s); regardless of the ${solution_name} cleanup flag.\n \n Diagnostic mode:\n \n * Sets the output log level to DEBUG.\n+\n * Zips the entire run directory of ${solution_name} which includes:\n+\n * All BDIO files created by ${solution_name}.\n+\n * Any intermediary files generated by ${solution_name}, such as Gradle inspector output files.\n+\n * Includes any additional reports ${solution_name} might make such as dependency counts.\n+\n * Additionally -de or -diagnosticExtended includes additional relevant files such as:\n-* Npm package locks.\n-* vendor.config.\n-* C/C++ compilation database.\n+\n+Npm package locks.\n+\n+vendor.config.\n+\n+C/C++ compilation database.\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzk4NDcx", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#pullrequestreview-432798471", "createdAt": "2020-06-17T21:43:46Z", "commit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0Mzo0NlrOGlYeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0Mzo0NlrOGlYeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTQwNA==", "bodyText": "If this is all the method does, why even have this in a method?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r441851404", "createdAt": "2020-06-17T21:43:46Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java", "diffHunk": "@@ -387,15 +391,14 @@ private DetectArgumentState parseDetectArgumentState(String[] sourceArgs) {\n         return detectArgumentState;\n     }\n \n-    private Optional<DiagnosticSystem> createDiagnostics(\n-        PropertyConfiguration propertyConfiguration, DetectRun detectRun, DetectInfo detectInfo, DetectArgumentState detectArgumentState, EventSystem eventSystem, DirectoryManager directoryManager) {\n-        if (detectArgumentState.isDiagnostic() || detectArgumentState.isDiagnosticExtended()) {\n-            boolean extendedMode = detectArgumentState.isDiagnosticExtended();\n-            DiagnosticSystem diagnosticSystem = new DiagnosticSystem(extendedMode, propertyConfiguration, detectRun, detectInfo, directoryManager, eventSystem);\n-            return Optional.of(diagnosticSystem);\n-        } else {\n-            return Optional.empty();\n+    private Optional<DiagnosticSystem> createDiagnostics(PropertyConfiguration propertyConfiguration, DetectRun detectRun, DetectInfo detectInfo, DiagnosticsDecider diagnosticsDecider, EventSystem eventSystem,\n+        DirectoryManager directoryManager) {\n+        DiagnosticSystem diagnosticSystem = null;\n+        if (diagnosticsDecider.isConfiguredForDiagnostic()) {\n+            diagnosticSystem = new DiagnosticSystem(diagnosticsDecider.isDiagnosticExtended(), propertyConfiguration, detectRun, detectInfo, directoryManager, eventSystem);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzk5MTY2", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#pullrequestreview-432799166", "createdAt": "2020-06-17T21:45:04Z", "commit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0NTowNFrOGlYgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0NTowNFrOGlYgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTkxMQ==", "bodyText": "Did you consider having a single method that returned a result object?", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r441851911", "createdAt": "2020-06-17T21:45:04Z", "author": {"login": "taikuukaits"}, "path": "src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.workflow.diagnostic;\n+\n+import com.synopsys.integration.configuration.config.PropertyConfiguration;\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+import com.synopsys.integration.detect.help.DetectArgumentState;\n+\n+public class DiagnosticsDecider {\n+    private final DetectArgumentState detectArgumentState;\n+    private final PropertyConfiguration propertyConfiguration;\n+\n+    public DiagnosticsDecider(DetectArgumentState detectArgumentState, PropertyConfiguration propertyConfiguration) {\n+        this.detectArgumentState = detectArgumentState;\n+        this.propertyConfiguration = propertyConfiguration;\n+    }\n+\n+    public boolean isDiagnostic() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e56e85955468d69f38204a716a218ddf850779"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1780830156944e48dd738901bc2e2cd981dc7a", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/fa1780830156944e48dd738901bc2e2cd981dc7a", "committedDate": "2020-06-22T19:12:35Z", "message": "refactor(diagnostic): DiagnosticsDecider now produces a DiagnosticsDecision."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8a3a9bf310ac0e1534b8b1295b9f3b377561315", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d8a3a9bf310ac0e1534b8b1295b9f3b377561315", "committedDate": "2020-06-22T19:24:48Z", "message": "test-fix(diagnostic): DiagnosticsDecider now produces a DiagnosticsDecision."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301db5a954b66e1e90444f14eff139f5fc929dd5", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/301db5a954b66e1e90444f14eff139f5fc929dd5", "committedDate": "2020-06-22T19:26:04Z", "message": "doc(troubleshooting): Fixing list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89895e4d6be782a814f2f330c4318e3c83612525", "author": {"user": {"login": "JakeMathews", "name": "Jake Mathews"}}, "url": "https://github.com/blackducksoftware/synopsys-detect/commit/89895e4d6be782a814f2f330c4318e3c83612525", "committedDate": "2020-06-22T19:27:57Z", "message": "style(license): Adding copyright headers."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3330, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}